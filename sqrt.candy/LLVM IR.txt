; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::fitsInRustU128:10" = global ptr null
@"Builtins::fitsInRustU128:16" = global ptr null
@"Builtins::fitsInRustU128:5" = global ptr null
@"Builtins::fitsInRustU128:8" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intBitLength:11" = global ptr null
@"Builtins::intBitLength:5" = global ptr null
@"Builtins::intBitwiseAnd:11" = global ptr null
@"Builtins::intBitwiseAnd:18" = global ptr null
@"Builtins::intBitwiseAnd:5" = global ptr null
@"Builtins::intBitwiseOr:11" = global ptr null
@"Builtins::intBitwiseOr:18" = global ptr null
@"Builtins::intBitwiseOr:5" = global ptr null
@"Builtins::intBitwiseXor:11" = global ptr null
@"Builtins::intBitwiseXor:18" = global ptr null
@"Builtins::intBitwiseXor:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intDivideTruncating:11" = global ptr null
@"Builtins::intDivideTruncating:17" = global ptr null
@"Builtins::intDivideTruncating:25" = global ptr null
@"Builtins::intDivideTruncating:32" = global ptr null
@"Builtins::intDivideTruncating:5" = global ptr null
@"Builtins::intModulo:11" = global ptr null
@"Builtins::intModulo:17" = global ptr null
@"Builtins::intModulo:25" = global ptr null
@"Builtins::intModulo:32" = global ptr null
@"Builtins::intModulo:5" = global ptr null
@"Builtins::intMultiply:11" = global ptr null
@"Builtins::intMultiply:18" = global ptr null
@"Builtins::intMultiply:5" = global ptr null
@"Builtins::intParse:11" = global ptr null
@"Builtins::intParse:5" = global ptr null
@"Builtins::intRemainder:11" = global ptr null
@"Builtins::intRemainder:17" = global ptr null
@"Builtins::intRemainder:25" = global ptr null
@"Builtins::intRemainder:32" = global ptr null
@"Builtins::intRemainder:5" = global ptr null
@"Builtins::intShiftLeft:11" = global ptr null
@"Builtins::intShiftLeft:14" = global ptr null
@"Builtins::intShiftLeft:23" = global ptr null
@"Builtins::intShiftLeft:24" = global ptr null
@"Builtins::intShiftLeft:26:0" = global ptr null
@"Builtins::intShiftLeft:27" = global ptr null
@"Builtins::intShiftLeft:29" = global ptr null
@"Builtins::intShiftLeft:30" = global ptr null
@"Builtins::intShiftLeft:31" = global ptr null
@"Builtins::intShiftLeft:34" = global ptr null
@"Builtins::intShiftLeft:42" = global ptr null
@"Builtins::intShiftLeft:49" = global ptr null
@"Builtins::intShiftLeft:5" = global ptr null
@"Builtins::intShiftRight:11" = global ptr null
@"Builtins::intShiftRight:14" = global ptr null
@"Builtins::intShiftRight:23" = global ptr null
@"Builtins::intShiftRight:24" = global ptr null
@"Builtins::intShiftRight:26:0" = global ptr null
@"Builtins::intShiftRight:27" = global ptr null
@"Builtins::intShiftRight:29" = global ptr null
@"Builtins::intShiftRight:30" = global ptr null
@"Builtins::intShiftRight:31" = global ptr null
@"Builtins::intShiftRight:34" = global ptr null
@"Builtins::intShiftRight:42" = global ptr null
@"Builtins::intShiftRight:49" = global ptr null
@"Builtins::intShiftRight:5" = global ptr null
@"Builtins::intSubtract:11" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::isLessThanOrEqualTo:11" = global ptr null
@"Builtins::isLessThanOrEqualTo:18" = global ptr null
@"Builtins::isLessThanOrEqualTo:19" = global ptr null
@"Builtins::isLessThanOrEqualTo:5" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::listFilled:10" = global ptr null
@"Builtins::listFilled:17" = global ptr null
@"Builtins::listFilled:5" = global ptr null
@"Builtins::listFilled:8" = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:24" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listGet:5" = global ptr null
@"Builtins::listInsert:11" = global ptr null
@"Builtins::listInsert:14" = global ptr null
@"Builtins::listInsert:16" = global ptr null
@"Builtins::listInsert:24" = global ptr null
@"Builtins::listInsert:25" = global ptr null
@"Builtins::listInsert:27" = global ptr null
@"Builtins::listInsert:35" = global ptr null
@"Builtins::listInsert:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::listRemoveAt:11" = global ptr null
@"Builtins::listRemoveAt:14" = global ptr null
@"Builtins::listRemoveAt:16" = global ptr null
@"Builtins::listRemoveAt:21" = global ptr null
@"Builtins::listRemoveAt:22" = global ptr null
@"Builtins::listRemoveAt:27" = global ptr null
@"Builtins::listRemoveAt:34" = global ptr null
@"Builtins::listRemoveAt:5" = global ptr null
@"Builtins::listReplace:11" = global ptr null
@"Builtins::listReplace:14" = global ptr null
@"Builtins::listReplace:16" = global ptr null
@"Builtins::listReplace:21" = global ptr null
@"Builtins::listReplace:22" = global ptr null
@"Builtins::listReplace:27" = global ptr null
@"Builtins::listReplace:35" = global ptr null
@"Builtins::listReplace:5" = global ptr null
@"Builtins::not:1" = global ptr null
@"Builtins::print:11" = global ptr null
@"Builtins::print:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:22" = global ptr null
@"Builtins::structGet:24:0" = global ptr null
@"Builtins::structGet:25" = global ptr null
@"Builtins::structGet:28" = global ptr null
@"Builtins::structGet:29" = global ptr null
@"Builtins::structGet:31:0" = global ptr null
@"Builtins::structGet:32" = global ptr null
@"Builtins::structGet:34" = global ptr null
@"Builtins::structGet:35" = global ptr null
@"Builtins::structGet:36" = global ptr null
@"Builtins::structGet:37" = global ptr null
@"Builtins::structGet:38" = global ptr null
@"Builtins::structGet:45" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::structGetKeys:11" = global ptr null
@"Builtins::structGetKeys:5" = global ptr null
@"Builtins::structHasKey:12" = global ptr null
@"Builtins::structHasKey:5" = global ptr null
@"Builtins::tagGetValue:11" = global ptr null
@"Builtins::tagGetValue:13" = global ptr null
@"Builtins::tagGetValue:19" = global ptr null
@"Builtins::tagGetValue:5" = global ptr null
@"Builtins::tagHasValue:11" = global ptr null
@"Builtins::tagHasValue:5" = global ptr null
@"Builtins::tagWithoutValue:11" = global ptr null
@"Builtins::tagWithoutValue:5" = global ptr null
@"Builtins::textCharacters:11" = global ptr null
@"Builtins::textCharacters:5" = global ptr null
@"Builtins::textConcatenate:11" = global ptr null
@"Builtins::textConcatenate:18" = global ptr null
@"Builtins::textConcatenate:5" = global ptr null
@"Builtins::textContains:11" = global ptr null
@"Builtins::textContains:18" = global ptr null
@"Builtins::textContains:5" = global ptr null
@"Builtins::textEndsWith:11" = global ptr null
@"Builtins::textEndsWith:18" = global ptr null
@"Builtins::textEndsWith:5" = global ptr null
@"Builtins::textFromUtf8:11" = global ptr null
@"Builtins::textFromUtf8:5" = global ptr null
@"Builtins::textGetRange:11" = global ptr null
@"Builtins::textGetRange:14" = global ptr null
@"Builtins::textGetRange:16" = global ptr null
@"Builtins::textGetRange:24" = global ptr null
@"Builtins::textGetRange:25" = global ptr null
@"Builtins::textGetRange:27" = global ptr null
@"Builtins::textGetRange:33" = global ptr null
@"Builtins::textGetRange:36" = global ptr null
@"Builtins::textGetRange:38" = global ptr null
@"Builtins::textGetRange:46" = global ptr null
@"Builtins::textGetRange:47" = global ptr null
@"Builtins::textGetRange:49" = global ptr null
@"Builtins::textGetRange:5" = global ptr null
@"Builtins::textGetRange:53" = global ptr null
@"Builtins::textGetRange:55" = global ptr null
@"Builtins::textGetRange:63" = global ptr null
@"Builtins::textIsEmpty:11" = global ptr null
@"Builtins::textIsEmpty:5" = global ptr null
@"Builtins::textLength:11" = global ptr null
@"Builtins::textLength:5" = global ptr null
@"Builtins::textStartsWith:11" = global ptr null
@"Builtins::textStartsWith:18" = global ptr null
@"Builtins::textStartsWith:5" = global ptr null
@"Builtins::textTrimEnd:11" = global ptr null
@"Builtins::textTrimEnd:5" = global ptr null
@"Builtins::textTrimStart:11" = global ptr null
@"Builtins::textTrimStart:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:equality:17" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_bit_length = global ptr null
@fun_candy_builtin_int_bitwise_and = global ptr null
@fun_candy_builtin_int_bitwise_or = global ptr null
@fun_candy_builtin_int_bitwise_xor = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_divide_truncating = global ptr null
@fun_candy_builtin_int_modulo = global ptr null
@fun_candy_builtin_int_multiply = global ptr null
@fun_candy_builtin_int_parse = global ptr null
@fun_candy_builtin_int_remainder = global ptr null
@fun_candy_builtin_int_shift_left = global ptr null
@fun_candy_builtin_int_shift_right = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_filled = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_insert = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_list_remove_at = global ptr null
@fun_candy_builtin_list_replace = global ptr null
@fun_candy_builtin_print = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_get_keys = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_characters = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_text_contains = global ptr null
@fun_candy_builtin_text_ends_with = global ptr null
@fun_candy_builtin_text_from_utf8 = global ptr null
@fun_candy_builtin_text_get_range = global ptr null
@fun_candy_builtin_text_is_empty = global ptr null
@fun_candy_builtin_text_length = global ptr null
@fun_candy_builtin_text_starts_with = global ptr null
@fun_candy_builtin_text_trim_end = global ptr null
@fun_candy_builtin_text_trim_start = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Equal = global ptr null
@tag_Equals = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_FunctionRun = global ptr null
@tag_GetArgumentCount = global ptr null
@tag_Greater = global ptr null
@tag_IfElse = global ptr null
@tag_Int = global ptr null
@tag_IntAdd = global ptr null
@tag_IntBitLength = global ptr null
@tag_IntBitwiseAnd = global ptr null
@tag_IntBitwiseOr = global ptr null
@tag_IntBitwiseXor = global ptr null
@tag_IntCompareTo = global ptr null
@tag_IntDivideTruncating = global ptr null
@tag_IntModulo = global ptr null
@tag_IntMultiply = global ptr null
@tag_IntParse = global ptr null
@tag_IntRemainder = global ptr null
@tag_IntShiftLeft = global ptr null
@tag_IntShiftRight = global ptr null
@tag_IntSubtract = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_ListFilled = global ptr null
@tag_ListGet = global ptr null
@tag_ListInsert = global ptr null
@tag_ListLength = global ptr null
@tag_ListRemoveAt = global ptr null
@tag_ListReplace = global ptr null
@tag_Match = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Print = global ptr null
@tag_Struct = global ptr null
@tag_StructGet = global ptr null
@tag_StructGetKeys = global ptr null
@tag_StructHasKey = global ptr null
@tag_Tag = global ptr null
@tag_TagGetValue = global ptr null
@tag_TagHasValue = global ptr null
@tag_TagWithoutValue = global ptr null
@tag_Text = global ptr null
@tag_TextCharacters = global ptr null
@tag_TextConcatenate = global ptr null
@tag_TextContains = global ptr null
@tag_TextEndsWith = global ptr null
@tag_TextFromUtf8 = global ptr null
@tag_TextGetRange = global ptr null
@tag_TextIsEmpty = global ptr null
@tag_TextLength = global ptr null
@tag_TextStartsWith = global ptr null
@tag_TextTrimEnd = global ptr null
@tag_TextTrimStart = global ptr null
@tag_ToDebugText = global ptr null
@tag_True = global ptr null
@tag_TypeOf = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_340282366920938463463374607431768211455 = global ptr null
@text_. = global ptr null
@"text_. You might want to call `shiftLeft` instead." = global ptr null
@"text_. You might want to call `shiftRight` instead." = global ptr null
@"text_Expected Equal, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected Greater, got " = global ptr null
@"text_Expected Less, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_Shifts by that much are not yet supported." = global ptr null
@"text_Struct `" = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_The shift `amount` is negative: " = global ptr null
@"text_You can't divide by zero." = global ptr null
@"text_` is missing the key `" = global ptr null
@"text_`." = global ptr null
@"text_`False` was not satisfied" = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`a | typeIs Text` was not satisfied" = global ptr null
@"text_`amount | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Text` was not satisfied" = global ptr null
@"text_`bytes | typeIs List` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`dividend | typeIs Int` was not satisfied" = global ptr null
@"text_`divisor | typeIs Int` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`endExclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`endExclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`factorA | typeIs Int` was not satisfied" = global ptr null
@"text_`factorB | typeIs Int` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`length | isNonNegative` was not satisfied" = global ptr null
@"text_`length | typeIs Int` was not satisfied" = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`message | typeIs Text` was not satisfied" = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`pattern | typeIs Text` was not satisfied" = global ptr null
@"text_`prefix | typeIs Text` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied" = global ptr null
@"text_`startInclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`startInclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`subtrahend | typeIs Int` was not satisfied" = global ptr null
@"text_`suffix | typeIs Text` was not satisfied" = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied" = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"text_`value | isNonNegative` was not satisfied" = global ptr null
@"text_`value | typeIs Int` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then" = global ptr null
@"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__not = global ptr null
@fun_Builtins__not_1_equals_then = global ptr null
@fun_Builtins__not_1_equals_then.3 = global ptr null
@fun_Builtins__not_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__not_1_equals_else.5 = global ptr null
@2 = global ptr null
@fun_Builtins__not_1_equals_else.7 = global ptr null
@3 = global ptr null
@fun_Builtins__not_1_case-0_didNotMatch = global ptr null
@fun_Builtins__not_1_equals_then.9 = global ptr null
@fun_Builtins__not_1_equals_then.11 = global ptr null
@fun_Builtins__not_1_equals_else.13 = global ptr null
@4 = global ptr null
@fun_Builtins__not_1_equals_else.15 = global ptr null
@5 = global ptr null
@fun_Builtins__not_1_equals_else.17 = global ptr null
@6 = global ptr null
@fun_Builtins__not_1_case-1_didNotMatch = global ptr null
@fun_Builtins__isNonNegative = global ptr null
@fun_Builtins__isNonNegative_13_equals_then = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.19 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@7 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.21 = global ptr null
@8 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.23 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.25 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.27 = global ptr null
@9 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.29 = global ptr null
@10 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.31 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.33 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.35 = global ptr null
@11 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.37 = global ptr null
@12 = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.39 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else = global ptr null
@13 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.41 = global ptr null
@14 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.43 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.45 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.47 = global ptr null
@15 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.49 = global ptr null
@16 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.51 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.53 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.55 = global ptr null
@17 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.57 = global ptr null
@18 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch = global ptr null
@fun_Builtins__equals = global ptr null
@fun_Builtins__functionRun = global ptr null
@fun_Builtins__getArgumentCount = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.59 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@19 = global ptr null
@fun_Builtins__ifElse_1_equals_else.61 = global ptr null
@20 = global ptr null
@fun_Builtins__ifElse_1_equals_else.63 = global ptr null
@21 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.65 = global ptr null
@fun_Builtins__ifElse_1_equals_then.67 = global ptr null
@fun_Builtins__ifElse_1_equals_else.69 = global ptr null
@22 = global ptr null
@fun_Builtins__ifElse_1_equals_else.71 = global ptr null
@23 = global ptr null
@fun_Builtins__ifElse_1_equals_else.73 = global ptr null
@24 = global ptr null
@fun_Builtins__ifElse_1_case-0_didNotMatch = global ptr null
@fun_Builtins__intAdd = global ptr null
@fun_Builtins__intBitLength = global ptr null
@fun_Builtins__intBitwiseAnd = global ptr null
@fun_Builtins__intBitwiseOr = global ptr null
@fun_Builtins__intBitwiseXor = global ptr null
@fun_Builtins__intCompareTo = global ptr null
@fun_Builtins__intDivideTruncating = global ptr null
@fun_Builtins__intModulo = global ptr null
@fun_Builtins__intMultiply = global ptr null
@fun_Builtins__intParse = global ptr null
@fun_Builtins__intRemainder = global ptr null
@fun_Builtins__intShiftLeft = global ptr null
@fun_Builtins__intShiftLeft_25 = global ptr null
@fun_Builtins__intShiftLeft_26 = global ptr null
@fun_Builtins__intShiftRight = global ptr null
@fun_Builtins__intShiftRight_25 = global ptr null
@fun_Builtins__intShiftRight_26 = global ptr null
@fun_Builtins__intSubtract = global ptr null
@fun_Builtins__listFilled = global ptr null
@fun_Builtins__listGet = global ptr null
@fun_Builtins__listInsert = global ptr null
@fun_Builtins__listLength = global ptr null
@fun_Builtins__listRemoveAt = global ptr null
@fun_Builtins__listReplace = global ptr null
@fun_Builtins__print = global ptr null
@fun_Builtins__structGet = global ptr null
@fun_Builtins__structGet_23 = global ptr null
@fun_Builtins__structGet_24 = global ptr null
@fun_Builtins__structGet_30 = global ptr null
@fun_Builtins__structGet_31 = global ptr null
@fun_Builtins__structGetKeys = global ptr null
@fun_Builtins__structHasKey = global ptr null
@fun_Builtins__tagGetValue = global ptr null
@fun_Builtins__tagHasValue = global ptr null
@fun_Builtins__tagWithoutValue = global ptr null
@fun_Builtins__textCharacters = global ptr null
@fun_Builtins__textConcatenate = global ptr null
@fun_Builtins__textContains = global ptr null
@fun_Builtins__textEndsWith = global ptr null
@fun_Builtins__textFromUtf8 = global ptr null
@fun_Builtins__textGetRange = global ptr null
@fun_Builtins__textIsEmpty = global ptr null
@fun_Builtins__textLength = global ptr null
@fun_Builtins__textStartsWith = global ptr null
@fun_Builtins__textTrimEnd = global ptr null
@fun_Builtins__textTrimStart = global ptr null
@fun_Builtins__toDebugText = global ptr null
@fun_Builtins__typeOf = global ptr null
@"Core:type:28" = global ptr null
@"Core:type:is:2" = global ptr null
@"Core:type:is:5" = global ptr null
@"text_`typeOf type | equals Tag` was not satisfied" = global ptr null
@"Core:type:is:7" = global ptr null
@"Core:type:is:11" = global ptr null
@"Core:type:is:13" = global ptr null
@tag_Is = global ptr null
@"Core:function:is:7" = global ptr null
@"Core:function:is:10" = global ptr null
@"Core:function:38" = global ptr null
@"Core:function:is0:7" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:11:5" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:is1:7" = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:11:5" = global ptr null
@"Core:function:is1:13" = global ptr null
@"Core:function:is2:7" = global ptr null
@"Core:function:is2:11:3" = global ptr null
@num_2 = global ptr null
@"Core:function:is2:11:5" = global ptr null
@"Core:function:is2:13" = global ptr null
@"Core:function:is3:7" = global ptr null
@"Core:function:is3:11:3" = global ptr null
@num_3 = global ptr null
@"Core:function:is3:11:5" = global ptr null
@"Core:function:is3:13" = global ptr null
@"Core:function:is4:7" = global ptr null
@"Core:function:is4:11:3" = global ptr null
@num_4 = global ptr null
@"Core:function:is4:11:5" = global ptr null
@"Core:function:is4:13" = global ptr null
@"Core:function:is5:7" = global ptr null
@"Core:function:is5:11:3" = global ptr null
@num_5 = global ptr null
@"Core:function:is5:11:5" = global ptr null
@"Core:function:is5:13" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:function:run:12" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:doNotRun:4" = global ptr null
@tag_DoNotRun = global ptr null
@tag_Is4 = global ptr null
@tag_Is1 = global ptr null
@tag_Run = global ptr null
@tag_Is0 = global ptr null
@tag_Is3 = global ptr null
@tag_Is2 = global ptr null
@tag_Is5 = global ptr null
@"Core:bool:is:1" = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_then = global ptr null
@fun_Core_bool_is_1_equals_then.75 = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@25 = global ptr null
@fun_Core_bool_is_1_equals_else.77 = global ptr null
@26 = global ptr null
@fun_Core_bool_is_1_equals_else.79 = global ptr null
@27 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_then.81 = global ptr null
@fun_Core_bool_is_1_equals_then.83 = global ptr null
@fun_Core_bool_is_1_equals_else.85 = global ptr null
@28 = global ptr null
@fun_Core_bool_is_1_equals_else.87 = global ptr null
@29 = global ptr null
@fun_Core_bool_is_1_equals_else.89 = global ptr null
@30 = global ptr null
@fun_Core_bool_is_1_case-0_didNotMatch = global ptr null
@"Core:bool:not:2" = global ptr null
@"text_`is value` was not satisfied" = global ptr null
@"Core:bool:not:4" = global ptr null
@"Core:bool:not:6" = global ptr null
@fun_Core_bool_not = global ptr null
@fun_Core_bool_not_6_equals_then = global ptr null
@fun_Core_bool_not_6_equals_then.91 = global ptr null
@fun_Core_bool_not_6_equals_else = global ptr null
@31 = global ptr null
@fun_Core_bool_not_6_equals_else.93 = global ptr null
@32 = global ptr null
@fun_Core_bool_not_6_equals_else.95 = global ptr null
@33 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch = global ptr null
@fun_Core_bool_not_6_equals_then.97 = global ptr null
@fun_Core_bool_not_6_equals_then.99 = global ptr null
@fun_Core_bool_not_6_equals_else.101 = global ptr null
@34 = global ptr null
@fun_Core_bool_not_6_equals_else.103 = global ptr null
@35 = global ptr null
@fun_Core_bool_not_6_equals_else.105 = global ptr null
@36 = global ptr null
@fun_Core_bool_not_6_case-1_didNotMatch = global ptr null
@"Core:bool:lazyAnd:2" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"Core:bool:lazyAnd:4" = global ptr null
@"Core:bool:lazyAnd:12" = global ptr null
@"Core:bool:lazyAnd:14" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"Core:bool:lazyAnd:16" = global ptr null
@"Core:bool:lazyAnd:18" = global ptr null
@"Core:bool:lazyAnd:18:8" = global ptr null
@"Core:bool:lazyAnd:18:9" = global ptr null
@"Core:bool:lazyAnd:18:13" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"Core:bool:lazyAnd:18:21" = global ptr null
@"Core:bool:and:2" = global ptr null
@"Core:bool:and:4" = global ptr null
@"Core:bool:and:7" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"Core:bool:and:9" = global ptr null
@"Core:bool:and:13" = global ptr null
@"Core:bool:lazyOr:2" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:lazyOr:12" = global ptr null
@"Core:bool:lazyOr:14" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:18" = global ptr null
@"Core:bool:lazyOr:18:9" = global ptr null
@"Core:bool:lazyOr:18:10" = global ptr null
@"Core:bool:lazyOr:18:14" = global ptr null
@"Core:bool:lazyOr:18:22" = global ptr null
@"Core:bool:or:2" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:7" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:xor:2" = global ptr null
@"Core:bool:xor:4" = global ptr null
@"Core:bool:xor:7" = global ptr null
@"Core:bool:xor:9" = global ptr null
@"Core:bool:xor:14" = global ptr null
@"Core:bool:xor:15" = global ptr null
@"Core:bool:implies:2" = global ptr null
@"Core:bool:implies:4" = global ptr null
@"Core:bool:implies:7" = global ptr null
@"Core:bool:implies:9" = global ptr null
@"Core:bool:implies:12" = global ptr null
@"Core:bool:implies:15" = global ptr null
@tag_LazyAnd = global ptr null
@tag_Not = global ptr null
@tag_Xor = global ptr null
@tag_Implies = global ptr null
@tag_LazyOr = global ptr null
@tag_And = global ptr null
@tag_Or = global ptr null
@"Core:controlFlow:59" = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"Core:check:check:7" = global ptr null
@"Core:check:check:9" = global ptr null
@"Core:check:check:11" = global ptr null
@"text_A check didn't succeed." = global ptr null
@"Core:check:check:20" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else.107" = global ptr null
@fun_Core_type_is = global ptr null
@fun_Core_function_is = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_function_is1 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@fun_Core_function_is2 = global ptr null
@fun_Core_function_is2_11 = global ptr null
@fun_Core_function_is3 = global ptr null
@fun_Core_function_is3_11 = global ptr null
@fun_Core_function_is4 = global ptr null
@fun_Core_function_is4_11 = global ptr null
@fun_Core_function_is5 = global ptr null
@fun_Core_function_is5_11 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_function_is0_11.109 = global ptr null
@fun_Core_function_doNotRun = global ptr null
@fun_Core_function_is0_11.111 = global ptr null
@"Core:controlFlow:recursive:7" = global ptr null
@"Core:controlFlow:recursive:9" = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"Core:controlFlow:recursive:17" = global ptr null
@"Core:controlFlow:recursive:18:0:3" = global ptr null
@"Core:controlFlow:recursive:18:5" = global ptr null
@"Core:controlFlow:recursive:23" = global ptr null
@fun_Core_controlFlow_recursive = global ptr null
@fun_Core_controlFlow_recursive_18 = global ptr null
@fun_Core_controlFlow_recursive_18_0 = global ptr null
@fun_Core_type_is.113 = global ptr null
@fun_Core_function_is.115 = global ptr null
@fun_Core_function_is0.117 = global ptr null
@fun_Core_function_is0_11.119 = global ptr null
@fun_Core_function_is1.121 = global ptr null
@fun_Core_function_is1_11.123 = global ptr null
@fun_Core_function_is2.125 = global ptr null
@fun_Core_function_is2_11.127 = global ptr null
@fun_Core_function_is3.129 = global ptr null
@fun_Core_function_is3_11.131 = global ptr null
@fun_Core_function_is4.133 = global ptr null
@fun_Core_function_is4_11.135 = global ptr null
@fun_Core_function_is5.137 = global ptr null
@fun_Core_function_is5_11.139 = global ptr null
@fun_Core_function_run.141 = global ptr null
@fun_Core_function_is0_11.143 = global ptr null
@fun_Core_function_doNotRun.145 = global ptr null
@fun_Core_function_is0_11.147 = global ptr null
@fun_Core_bool_lazyAnd = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.149 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else = global ptr null
@37 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.151 = global ptr null
@38 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.153 = global ptr null
@39 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.155 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.157 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.159 = global ptr null
@40 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.161 = global ptr null
@41 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.163 = global ptr null
@42 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_and = global ptr null
@fun_Core_bool_and_12 = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_lazyOr_18_equals_then = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.165 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else = global ptr null
@43 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.167 = global ptr null
@44 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.169 = global ptr null
@45 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.171 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.173 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.175 = global ptr null
@46 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.177 = global ptr null
@47 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.179 = global ptr null
@48 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_or = global ptr null
@fun_Core_bool_or_12 = global ptr null
@fun_Core_bool_xor = global ptr null
@fun_Core_bool_implies = global ptr null
@fun_Core_bool_or_12.181 = global ptr null
@fun_Core_type_is.183 = global ptr null
@fun_Core_function_is.185 = global ptr null
@fun_Core_function_is0.187 = global ptr null
@fun_Core_function_is0_11.189 = global ptr null
@fun_Core_function_is1.191 = global ptr null
@fun_Core_function_is1_11.193 = global ptr null
@fun_Core_function_is2.195 = global ptr null
@fun_Core_function_is2_11.197 = global ptr null
@fun_Core_function_is3.199 = global ptr null
@fun_Core_function_is3_11.201 = global ptr null
@fun_Core_function_is4.203 = global ptr null
@fun_Core_function_is4_11.205 = global ptr null
@fun_Core_function_is5.207 = global ptr null
@fun_Core_function_is5_11.209 = global ptr null
@fun_Core_function_run.211 = global ptr null
@fun_Core_function_is0_11.213 = global ptr null
@fun_Core_function_doNotRun.215 = global ptr null
@fun_Core_function_is0_11.217 = global ptr null
@fun_Core_bool_lazyAnd.219 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.221 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.223 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.225 = global ptr null
@49 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.227 = global ptr null
@50 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.229 = global ptr null
@51 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.231 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.233 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.235 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.237 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.239 = global ptr null
@52 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.241 = global ptr null
@53 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.243 = global ptr null
@54 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.245 = global ptr null
@fun_Core_bool_and.247 = global ptr null
@fun_Core_bool_and_12.249 = global ptr null
@fun_Core_bool_lazyOr.251 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.253 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.255 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.257 = global ptr null
@55 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.259 = global ptr null
@56 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.261 = global ptr null
@57 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.263 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.265 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.267 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.269 = global ptr null
@58 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.271 = global ptr null
@59 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.273 = global ptr null
@60 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.275 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.277 = global ptr null
@fun_Core_bool_or.279 = global ptr null
@fun_Core_bool_or_12.281 = global ptr null
@fun_Core_bool_xor.283 = global ptr null
@fun_Core_bool_implies.285 = global ptr null
@fun_Core_bool_or_12.287 = global ptr null
@fun_Core_check_check = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.289" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.291" = global ptr null
@fun_Core_type_is.293 = global ptr null
@fun_Core_function_run.295 = global ptr null
@fun_Core_function_is0_11.297 = global ptr null
@fun_Core_type_is.299 = global ptr null
@fun_Core_function_is.301 = global ptr null
@fun_Core_function_is0.303 = global ptr null
@fun_Core_function_is0_11.305 = global ptr null
@fun_Core_function_is1.307 = global ptr null
@fun_Core_function_is1_11.309 = global ptr null
@fun_Core_function_is2.311 = global ptr null
@fun_Core_function_is2_11.313 = global ptr null
@fun_Core_function_is3.315 = global ptr null
@fun_Core_function_is3_11.317 = global ptr null
@fun_Core_function_is4.319 = global ptr null
@fun_Core_function_is4_11.321 = global ptr null
@fun_Core_function_is5.323 = global ptr null
@fun_Core_function_is5_11.325 = global ptr null
@fun_Core_function_run.327 = global ptr null
@fun_Core_function_is0_11.329 = global ptr null
@fun_Core_function_doNotRun.331 = global ptr null
@fun_Core_function_is0_11.333 = global ptr null
@fun_Core_bool_lazyAnd.335 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.337 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.339 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.341 = global ptr null
@61 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.343 = global ptr null
@62 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.345 = global ptr null
@63 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.347 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.349 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.351 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.353 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.355 = global ptr null
@64 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.357 = global ptr null
@65 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.359 = global ptr null
@66 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.361 = global ptr null
@fun_Core_bool_and.363 = global ptr null
@fun_Core_bool_and_12.365 = global ptr null
@fun_Core_bool_lazyOr.367 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.369 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.371 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.373 = global ptr null
@67 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.375 = global ptr null
@68 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.377 = global ptr null
@69 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.379 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.381 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.383 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.385 = global ptr null
@70 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.387 = global ptr null
@71 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.389 = global ptr null
@72 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.391 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.393 = global ptr null
@fun_Core_bool_or.395 = global ptr null
@fun_Core_bool_or_12.397 = global ptr null
@fun_Core_bool_xor.399 = global ptr null
@fun_Core_bool_implies.401 = global ptr null
@fun_Core_bool_or_12.403 = global ptr null
@fun_Core_type_is.405 = global ptr null
@fun_Core_function_is.407 = global ptr null
@fun_Core_function_is0.409 = global ptr null
@fun_Core_function_is0_11.411 = global ptr null
@fun_Core_function_is1.413 = global ptr null
@fun_Core_function_is1_11.415 = global ptr null
@fun_Core_function_is2.417 = global ptr null
@fun_Core_function_is2_11.419 = global ptr null
@fun_Core_function_is3.421 = global ptr null
@fun_Core_function_is3_11.423 = global ptr null
@fun_Core_function_is4.425 = global ptr null
@fun_Core_function_is4_11.427 = global ptr null
@fun_Core_function_is5.429 = global ptr null
@fun_Core_function_is5_11.431 = global ptr null
@fun_Core_function_run.433 = global ptr null
@fun_Core_function_is0_11.435 = global ptr null
@fun_Core_function_doNotRun.437 = global ptr null
@fun_Core_function_is0_11.439 = global ptr null
@fun_Core_bool_lazyAnd.441 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.443 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.445 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.447 = global ptr null
@73 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.449 = global ptr null
@74 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.451 = global ptr null
@75 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.453 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.455 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.457 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.459 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.461 = global ptr null
@76 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.463 = global ptr null
@77 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.465 = global ptr null
@78 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.467 = global ptr null
@fun_Core_bool_and.469 = global ptr null
@fun_Core_bool_and_12.471 = global ptr null
@fun_Core_bool_lazyOr.473 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.475 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.477 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.479 = global ptr null
@79 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.481 = global ptr null
@80 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.483 = global ptr null
@81 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.485 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.487 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.489 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.491 = global ptr null
@82 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.493 = global ptr null
@83 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.495 = global ptr null
@84 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.497 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.499 = global ptr null
@fun_Core_bool_or.501 = global ptr null
@fun_Core_bool_or_12.503 = global ptr null
@fun_Core_bool_xor.505 = global ptr null
@fun_Core_bool_implies.507 = global ptr null
@fun_Core_bool_or_12.509 = global ptr null
@fun_Core_check_check.511 = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.513" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.515" = global ptr null
@fun_Core_type_is.517 = global ptr null
@fun_Core_function_is.519 = global ptr null
@fun_Core_function_is0.521 = global ptr null
@fun_Core_function_is0_11.523 = global ptr null
@fun_Core_function_is1.525 = global ptr null
@fun_Core_function_is1_11.527 = global ptr null
@fun_Core_function_is2.529 = global ptr null
@fun_Core_function_is2_11.531 = global ptr null
@fun_Core_function_is3.533 = global ptr null
@fun_Core_function_is3_11.535 = global ptr null
@fun_Core_function_is4.537 = global ptr null
@fun_Core_function_is4_11.539 = global ptr null
@fun_Core_function_is5.541 = global ptr null
@fun_Core_function_is5_11.543 = global ptr null
@fun_Core_function_run.545 = global ptr null
@fun_Core_function_is0_11.547 = global ptr null
@fun_Core_function_doNotRun.549 = global ptr null
@fun_Core_function_is0_11.551 = global ptr null
@fun_Core_controlFlow_recursive.553 = global ptr null
@fun_Core_controlFlow_recursive_18.555 = global ptr null
@fun_Core_controlFlow_recursive_18_0.557 = global ptr null
@fun_Core_type_is.559 = global ptr null
@"Core:int:is:7" = global ptr null
@"Core:int:is:10" = global ptr null
@fun_Core_int_is = global ptr null
@num_42 = global ptr null
@"Core:int:72" = global ptr null
@"Core:int:81" = global ptr null
@"Core:int:negate:4" = global ptr null
@"Core:int:negate:8" = global ptr null
@fun_Core_int_negate = global ptr null
@"Core:int:90" = global ptr null
@"Core:int:99" = global ptr null
@"Core:int:108" = global ptr null
@"Core:int:117" = global ptr null
@"text_`is valueA` was not satisfied" = global ptr null
@"Core:int:compareTo:4" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:compareTo:18" = global ptr null
@"Core:int:compareTo:20" = global ptr null
@"Core:int:compareTo:26" = global ptr null
@"Core:int:compareTo:34" = global ptr null
@"Core:int:compareTo:38" = global ptr null
@"Core:int:compareTo:39" = global ptr null
@"Core:int:compareTo:40" = global ptr null
@fun_Core_int_compareTo = global ptr null
@"Core:int:isLessThan:4" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:16" = global ptr null
@fun_Core_int_isLessThan = global ptr null
@"Core:int:isGreaterThan:4" = global ptr null
@"Core:int:isGreaterThan:9" = global ptr null
@"Core:int:isGreaterThan:13" = global ptr null
@"Core:int:isGreaterThan:16" = global ptr null
@fun_Core_int_isGreaterThan = global ptr null
@"Core:int:isLessThanOrEqualTo:4" = global ptr null
@"Core:int:isLessThanOrEqualTo:9" = global ptr null
@"Core:int:isLessThanOrEqualTo:13" = global ptr null
@"Core:int:isLessThanOrEqualTo:21" = global ptr null
@"Core:int:isLessThanOrEqualTo:22" = global ptr null
@fun_Core_int_isLessThanOrEqualTo = global ptr null
@"Core:int:isGreaterThanOrEqualTo:4" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:9" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:13" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:21" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:22" = global ptr null
@fun_Core_int_isGreaterThanOrEqualTo = global ptr null
@"Core:int:isPositive:4" = global ptr null
@"Core:int:isPositive:8" = global ptr null
@fun_Core_int_isPositive = global ptr null
@"Core:int:isNonPositive:4" = global ptr null
@"Core:int:isNonPositive:7" = global ptr null
@"Core:int:isNonPositive:15" = global ptr null
@"Core:int:isNonPositive:16" = global ptr null
@fun_Core_int_isNonPositive = global ptr null
@"Core:int:isNegative:4" = global ptr null
@"Core:int:isNegative:8" = global ptr null
@fun_Core_int_isNegative = global ptr null
@"Core:int:isNonNegative:4" = global ptr null
@"Core:int:isNonNegative:7" = global ptr null
@"Core:int:isNonNegative:15" = global ptr null
@"Core:int:isNonNegative:16" = global ptr null
@fun_Core_int_isNonNegative = global ptr null
@"Core:int:absolute:4" = global ptr null
@"Core:int:absolute:8" = global ptr null
@"Core:int:absolute:9:2" = global ptr null
@"Core:int:absolute:11" = global ptr null
@fun_Core_int_absolute = global ptr null
@fun_Core_int_absolute_9 = global ptr null
@fun_Core_int_absolute_10 = global ptr null
@"Core:int:fitsInRustU32:4" = global ptr null
@"Core:int:fitsInRustU32:7" = global ptr null
@"text_`isNonNegative value` was not satisfied" = global ptr null
@"Core:int:fitsInRustU32:9" = global ptr null
@num_4294967295 = global ptr null
@"Core:int:fitsInRustU32:15" = global ptr null
@fun_Core_int_fitsInRustU32 = global ptr null
@"Core:int:fitsInRustU128:4" = global ptr null
@"Core:int:fitsInRustU128:7" = global ptr null
@"Core:int:fitsInRustU128:9" = global ptr null
@"Core:int:fitsInRustU128:15" = global ptr null
@fun_Core_int_fitsInRustU128 = global ptr null
@"Core:int:126" = global ptr null
@"Core:int:135" = global ptr null
@"Core:int:144" = global ptr null
@"Core:int:153" = global ptr null
@"Core:int:162" = global ptr null
@"Core:int:171" = global ptr null
@"Core:int:isEven:4" = global ptr null
@"Core:int:isEven:8" = global ptr null
@"Core:int:isEven:11" = global ptr null
@fun_Core_int_isEven = global ptr null
@"Core:int:isOdd:4" = global ptr null
@"Core:int:isOdd:8" = global ptr null
@"Core:int:isOdd:11" = global ptr null
@"Core:int:isOdd:16" = global ptr null
@"Core:int:isOdd:26" = global ptr null
@"Core:int:isOdd:27" = global ptr null
@"Core:int:isOdd:28" = global ptr null
@"Core:int:isOdd:29" = global ptr null
@fun_Core_int_isOdd = global ptr null
@"Core:int:min:4" = global ptr null
@"Core:int:min:9" = global ptr null
@"Core:int:min:14" = global ptr null
@"Core:int:min:17" = global ptr null
@fun_Core_int_min = global ptr null
@fun_Core_int_min_15 = global ptr null
@fun_Core_int_min_16 = global ptr null
@"Core:int:max:4" = global ptr null
@"Core:int:max:9" = global ptr null
@"Core:int:max:14" = global ptr null
@"Core:int:max:17" = global ptr null
@fun_Core_int_max = global ptr null
@fun_Core_int_max_15 = global ptr null
@fun_Core_int_max_16 = global ptr null
@"Core:int:coerceAtLeast:4" = global ptr null
@"text_`is minimum` was not satisfied" = global ptr null
@"Core:int:coerceAtLeast:9" = global ptr null
@"Core:int:coerceAtLeast:13" = global ptr null
@fun_Core_int_coerceAtLeast = global ptr null
@"Core:int:coerceAtMost:4" = global ptr null
@"text_`is maximum` was not satisfied" = global ptr null
@"Core:int:coerceAtMost:9" = global ptr null
@"Core:int:coerceAtMost:13" = global ptr null
@fun_Core_int_coerceAtMost = global ptr null
@"Core:int:coerceIn:4" = global ptr null
@"Core:int:coerceIn:9" = global ptr null
@"Core:int:coerceIn:14" = global ptr null
@"Core:int:coerceIn:18" = global ptr null
@"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied" = global ptr null
@"Core:int:coerceIn:20" = global ptr null
@"Core:int:coerceIn:24" = global ptr null
@"Core:int:coerceIn:27" = global ptr null
@fun_Core_int_coerceIn = global ptr null
@"Core:int:180" = global ptr null
@"text_`is base` was not satisfied" = global ptr null
@"Core:int:pow:4" = global ptr null
@"text_`is exponent` was not satisfied" = global ptr null
@"Core:int:pow:9" = global ptr null
@"Core:int:pow:12" = global ptr null
@"text_`isNonNegative exponent` was not satisfied" = global ptr null
@"Core:int:pow:14" = global ptr null
@tag_Base = global ptr null
@tag_Exponent = global ptr null
@"Core:int:pow:21:1" = global ptr null
@"text_Struct doesn't contain key `Base`: `" = global ptr null
@"text_Struct doesn't contain key `Exponent`: `" = global ptr null
@"text_Expected a Struct, got `" = global ptr null
@"Core:int:pow:21:base" = global ptr null
@"Core:int:pow:21:exponent" = global ptr null
@"Core:int:pow:21:4" = global ptr null
@"text_Expected `0`, got `" = global ptr null
@fun_Core_int_pow_21_4_case-0_matched = global ptr null
@"Core:int:pow:21:4:4" = global ptr null
@"Core:int:pow:21:4:5:5" = global ptr null
@"Core:int:pow:21:4:5:10" = global ptr null
@"Core:int:pow:21:4:5:12" = global ptr null
@"Core:int:pow:21:4:6:7" = global ptr null
@"Core:int:pow:21:4:6:12" = global ptr null
@"Core:int:pow:21:4:6:15" = global ptr null
@"Core:int:pow:21:4:6:17" = global ptr null
@"Core:int:pow:21:4:6:18" = global ptr null
@"Core:int:pow:21:4:7" = global ptr null
@"Core:int:pow:22" = global ptr null
@fun_Core_int_pow = global ptr null
@fun_Core_int_pow_21 = global ptr null
@fun_Core_int_pow_21_1_equals_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then = global ptr null
@85 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else = global ptr null
@86 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.561 = global ptr null
@87 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.563 = global ptr null
@88 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.565 = global ptr null
@89 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.567 = global ptr null
@fun_Core_int_pow_21_1_equals_else = global ptr null
@90 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.569 = global ptr null
@fun_Core_int_pow_21_4_equals_else = global ptr null
@91 = global ptr null
@fun_Core_int_pow_21_4_case-0_didNotMatch = global ptr null
@fun_Core_int_pow_21_4_case-1_matched = global ptr null
@fun_Core_int_pow_21_4_5 = global ptr null
@fun_Core_int_pow_21_4_6 = global ptr null
@tag_IsLessThanOrEqualTo = global ptr null
@tag_BitwiseAnd = global ptr null
@tag_BitwiseOr = global ptr null
@tag_CoerceAtMost = global ptr null
@tag_Remainder = global ptr null
@tag_FitsInRustU32 = global ptr null
@tag_ShiftLeft = global ptr null
@tag_IsPositive = global ptr null
@tag_CoerceIn = global ptr null
@tag_IsNegative = global ptr null
@tag_IsNonNegative = global ptr null
@tag_Modulo = global ptr null
@tag_Parse = global ptr null
@tag_IsGreaterThan = global ptr null
@tag_IsNonPositive = global ptr null
@tag_Multiply = global ptr null
@tag_DivideTruncating = global ptr null
@tag_Add = global ptr null
@tag_BitwiseXor = global ptr null
@tag_IsOdd = global ptr null
@tag_IsGreaterThanOrEqualTo = global ptr null
@tag_IsLessThan = global ptr null
@tag_Negate = global ptr null
@tag_Pow = global ptr null
@tag_ShiftRight = global ptr null
@tag_IsEven = global ptr null
@tag_Max = global ptr null
@tag_BitLength = global ptr null
@tag_Min = global ptr null
@tag_FitsInRustU128 = global ptr null
@tag_CoerceAtLeast = global ptr null
@tag_CompareTo = global ptr null
@tag_Absolute = global ptr null
@tag_Subtract = global ptr null
@tag_TheAnswer = global ptr null
@tag_Get = global ptr null
@fun_Core_type_is.571 = global ptr null
@fun_Core_function_is.573 = global ptr null
@fun_Core_function_is0.575 = global ptr null
@fun_Core_function_is0_11.577 = global ptr null
@fun_Core_function_is1.579 = global ptr null
@fun_Core_function_is1_11.581 = global ptr null
@fun_Core_function_is2.583 = global ptr null
@fun_Core_function_is2_11.585 = global ptr null
@fun_Core_function_is3.587 = global ptr null
@fun_Core_function_is3_11.589 = global ptr null
@fun_Core_function_is4.591 = global ptr null
@fun_Core_function_is4_11.593 = global ptr null
@fun_Core_function_is5.595 = global ptr null
@fun_Core_function_is5_11.597 = global ptr null
@fun_Core_function_run.599 = global ptr null
@fun_Core_function_is0_11.601 = global ptr null
@fun_Core_function_doNotRun.603 = global ptr null
@fun_Core_function_is0_11.605 = global ptr null
@fun_Core_bool_lazyAnd.607 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.609 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.611 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.613 = global ptr null
@92 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.615 = global ptr null
@93 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.617 = global ptr null
@94 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.619 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.621 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.623 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.625 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.627 = global ptr null
@95 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.629 = global ptr null
@96 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.631 = global ptr null
@97 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.633 = global ptr null
@fun_Core_bool_and.635 = global ptr null
@fun_Core_bool_and_12.637 = global ptr null
@fun_Core_bool_lazyOr.639 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.641 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.643 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.645 = global ptr null
@98 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.647 = global ptr null
@99 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.649 = global ptr null
@100 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.651 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.653 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.655 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.657 = global ptr null
@101 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.659 = global ptr null
@102 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.661 = global ptr null
@103 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.663 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.665 = global ptr null
@fun_Core_bool_or.667 = global ptr null
@fun_Core_bool_or_12.669 = global ptr null
@fun_Core_bool_xor.671 = global ptr null
@fun_Core_bool_implies.673 = global ptr null
@fun_Core_bool_or_12.675 = global ptr null
@fun_Core_type_is.677 = global ptr null
@"Core:tag:is:7" = global ptr null
@"Core:tag:is:10" = global ptr null
@fun_Core_tag_is = global ptr null
@"Core:tag:48" = global ptr null
@"Core:tag:57" = global ptr null
@"Core:tag:66" = global ptr null
@"text_`is tag` was not satisfied" = global ptr null
@"Core:tag:withSymbol:4" = global ptr null
@"text_`is symbolTag` was not satisfied" = global ptr null
@"Core:tag:withSymbol:9" = global ptr null
@"Core:tag:withSymbol:12" = global ptr null
@"Core:tag:withSymbol:20" = global ptr null
@"Core:tag:withSymbol:21" = global ptr null
@"text_`symbolTag | hasValue | bool.not` was not satisfied" = global ptr null
@"Core:tag:withSymbol:23" = global ptr null
@"Core:tag:withSymbol:27" = global ptr null
@"Core:tag:withSymbol:28:3" = global ptr null
@"Core:tag:withSymbol:28:4" = global ptr null
@"Core:tag:withSymbol:29:2" = global ptr null
@"Core:tag:withSymbol:30" = global ptr null
@fun_Core_tag_withSymbol = global ptr null
@fun_Core_tag_withSymbol_28 = global ptr null
@fun_Core_tag_withSymbol_29 = global ptr null
@"Core:tag:withValue:4" = global ptr null
@"Core:tag:withValue:7" = global ptr null
@"Core:tag:withValue:9" = global ptr null
@fun_Core_tag_withValue = global ptr null
@tag_HasValue = global ptr null
@tag_WithValue = global ptr null
@tag_GetValue = global ptr null
@tag_WithoutValue = global ptr null
@tag_WithSymbol = global ptr null
@fun_Core_type_is.679 = global ptr null
@fun_Core_function_is.681 = global ptr null
@fun_Core_function_is0.683 = global ptr null
@fun_Core_function_is0_11.685 = global ptr null
@fun_Core_function_is1.687 = global ptr null
@fun_Core_function_is1_11.689 = global ptr null
@fun_Core_function_is2.691 = global ptr null
@fun_Core_function_is2_11.693 = global ptr null
@fun_Core_function_is3.695 = global ptr null
@fun_Core_function_is3_11.697 = global ptr null
@fun_Core_function_is4.699 = global ptr null
@fun_Core_function_is4_11.701 = global ptr null
@fun_Core_function_is5.703 = global ptr null
@fun_Core_function_is5_11.705 = global ptr null
@fun_Core_function_run.707 = global ptr null
@fun_Core_function_is0_11.709 = global ptr null
@fun_Core_function_doNotRun.711 = global ptr null
@fun_Core_function_is0_11.713 = global ptr null
@fun_Core_bool_lazyAnd.715 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.717 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.719 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.721 = global ptr null
@104 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.723 = global ptr null
@105 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.725 = global ptr null
@106 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.727 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.729 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.731 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.733 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.735 = global ptr null
@107 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.737 = global ptr null
@108 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.739 = global ptr null
@109 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.741 = global ptr null
@fun_Core_bool_and.743 = global ptr null
@fun_Core_bool_and_12.745 = global ptr null
@fun_Core_bool_lazyOr.747 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.749 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.751 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.753 = global ptr null
@110 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.755 = global ptr null
@111 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.757 = global ptr null
@112 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.759 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.761 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.763 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.765 = global ptr null
@113 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.767 = global ptr null
@114 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.769 = global ptr null
@115 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.771 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.773 = global ptr null
@fun_Core_bool_or.775 = global ptr null
@fun_Core_bool_or_12.777 = global ptr null
@fun_Core_bool_xor.779 = global ptr null
@fun_Core_bool_implies.781 = global ptr null
@fun_Core_bool_or_12.783 = global ptr null
@fun_Core_type_is.785 = global ptr null
@fun_Core_function_is.787 = global ptr null
@fun_Core_function_is0.789 = global ptr null
@fun_Core_function_is0_11.791 = global ptr null
@fun_Core_function_is1.793 = global ptr null
@fun_Core_function_is1_11.795 = global ptr null
@fun_Core_function_is2.797 = global ptr null
@fun_Core_function_is2_11.799 = global ptr null
@fun_Core_function_is3.801 = global ptr null
@fun_Core_function_is3_11.803 = global ptr null
@fun_Core_function_is4.805 = global ptr null
@fun_Core_function_is4_11.807 = global ptr null
@fun_Core_function_is5.809 = global ptr null
@fun_Core_function_is5_11.811 = global ptr null
@fun_Core_function_run.813 = global ptr null
@fun_Core_function_is0_11.815 = global ptr null
@fun_Core_function_doNotRun.817 = global ptr null
@fun_Core_function_is0_11.819 = global ptr null
@fun_Core_bool_lazyAnd.821 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.823 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.825 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.827 = global ptr null
@116 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.829 = global ptr null
@117 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.831 = global ptr null
@118 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.833 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.835 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.837 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.839 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.841 = global ptr null
@119 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.843 = global ptr null
@120 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.845 = global ptr null
@121 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.847 = global ptr null
@fun_Core_bool_and.849 = global ptr null
@fun_Core_bool_and_12.851 = global ptr null
@fun_Core_bool_lazyOr.853 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.855 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.857 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.859 = global ptr null
@122 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.861 = global ptr null
@123 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.863 = global ptr null
@124 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.865 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.867 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.869 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.871 = global ptr null
@125 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.873 = global ptr null
@126 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.875 = global ptr null
@127 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.877 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.879 = global ptr null
@fun_Core_bool_or.881 = global ptr null
@fun_Core_bool_or_12.883 = global ptr null
@fun_Core_bool_xor.885 = global ptr null
@fun_Core_bool_implies.887 = global ptr null
@fun_Core_bool_or_12.889 = global ptr null
@fun_Core_check_check.891 = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.893" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.895" = global ptr null
@fun_Core_type_is.897 = global ptr null
@fun_Core_function_is.899 = global ptr null
@fun_Core_function_is0.901 = global ptr null
@fun_Core_function_is0_11.903 = global ptr null
@fun_Core_function_is1.905 = global ptr null
@fun_Core_function_is1_11.907 = global ptr null
@fun_Core_function_is2.909 = global ptr null
@fun_Core_function_is2_11.911 = global ptr null
@fun_Core_function_is3.913 = global ptr null
@fun_Core_function_is3_11.915 = global ptr null
@fun_Core_function_is4.917 = global ptr null
@fun_Core_function_is4_11.919 = global ptr null
@fun_Core_function_is5.921 = global ptr null
@fun_Core_function_is5_11.923 = global ptr null
@fun_Core_function_run.925 = global ptr null
@fun_Core_function_is0_11.927 = global ptr null
@fun_Core_function_doNotRun.929 = global ptr null
@fun_Core_function_is0_11.931 = global ptr null
@fun_Core_controlFlow_recursive.933 = global ptr null
@fun_Core_controlFlow_recursive_18.935 = global ptr null
@fun_Core_controlFlow_recursive_18_0.937 = global ptr null
@fun_Core_type_is.939 = global ptr null
@fun_Core_int_is.941 = global ptr null
@fun_Core_int_negate.943 = global ptr null
@fun_Core_int_compareTo.945 = global ptr null
@fun_Core_int_isLessThan.947 = global ptr null
@fun_Core_int_isGreaterThan.949 = global ptr null
@fun_Core_int_isLessThanOrEqualTo.951 = global ptr null
@fun_Core_int_isGreaterThanOrEqualTo.953 = global ptr null
@fun_Core_int_isPositive.955 = global ptr null
@fun_Core_int_isNonPositive.957 = global ptr null
@fun_Core_int_isNegative.959 = global ptr null
@fun_Core_int_isNonNegative.961 = global ptr null
@fun_Core_int_absolute.963 = global ptr null
@fun_Core_int_absolute_9.965 = global ptr null
@fun_Core_int_absolute_10.967 = global ptr null
@fun_Core_int_fitsInRustU32.969 = global ptr null
@fun_Core_int_fitsInRustU128.971 = global ptr null
@fun_Core_int_isEven.973 = global ptr null
@fun_Core_int_isOdd.975 = global ptr null
@fun_Core_int_min.977 = global ptr null
@fun_Core_int_min_15.979 = global ptr null
@fun_Core_int_min_16.981 = global ptr null
@fun_Core_int_max.983 = global ptr null
@fun_Core_int_max_15.985 = global ptr null
@fun_Core_int_max_16.987 = global ptr null
@fun_Core_int_coerceAtLeast.989 = global ptr null
@fun_Core_int_coerceAtMost.991 = global ptr null
@fun_Core_int_coerceIn.993 = global ptr null
@fun_Core_int_pow.995 = global ptr null
@fun_Core_int_pow_21.997 = global ptr null
@fun_Core_int_pow_21_1_equals_then.999 = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.1001 = global ptr null
@128 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.1003 = global ptr null
@129 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.1005 = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.1007 = global ptr null
@130 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.1009 = global ptr null
@131 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.1011 = global ptr null
@132 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.1013 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.1015 = global ptr null
@fun_Core_int_pow_21_1_equals_else.1017 = global ptr null
@133 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.1019 = global ptr null
@fun_Core_int_pow_21_4_equals_else.1021 = global ptr null
@134 = global ptr null
@fun_Core_int_pow_21_4_case-0_didNotMatch.1023 = global ptr null
@fun_Core_int_pow_21_4_case-1_matched.1025 = global ptr null
@fun_Core_int_pow_21_4_5.1027 = global ptr null
@fun_Core_int_pow_21_4_6.1029 = global ptr null
@fun_Core_type_is.1031 = global ptr null
@fun_Core_function_is.1033 = global ptr null
@fun_Core_function_is0.1035 = global ptr null
@fun_Core_function_is0_11.1037 = global ptr null
@fun_Core_function_is1.1039 = global ptr null
@fun_Core_function_is1_11.1041 = global ptr null
@fun_Core_function_is2.1043 = global ptr null
@fun_Core_function_is2_11.1045 = global ptr null
@fun_Core_function_is3.1047 = global ptr null
@fun_Core_function_is3_11.1049 = global ptr null
@fun_Core_function_is4.1051 = global ptr null
@fun_Core_function_is4_11.1053 = global ptr null
@fun_Core_function_is5.1055 = global ptr null
@fun_Core_function_is5_11.1057 = global ptr null
@fun_Core_function_run.1059 = global ptr null
@fun_Core_function_is0_11.1061 = global ptr null
@fun_Core_function_doNotRun.1063 = global ptr null
@fun_Core_function_is0_11.1065 = global ptr null
@fun_Core_bool_lazyAnd.1067 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1069 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1071 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1073 = global ptr null
@135 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1075 = global ptr null
@136 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1077 = global ptr null
@137 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.1079 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1081 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1083 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1085 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1087 = global ptr null
@138 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1089 = global ptr null
@139 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1091 = global ptr null
@140 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1093 = global ptr null
@fun_Core_bool_and.1095 = global ptr null
@fun_Core_bool_and_12.1097 = global ptr null
@fun_Core_bool_lazyOr.1099 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1101 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1103 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1105 = global ptr null
@141 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1107 = global ptr null
@142 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1109 = global ptr null
@143 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.1111 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1113 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1115 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1117 = global ptr null
@144 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1119 = global ptr null
@145 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1121 = global ptr null
@146 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.1123 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.1125 = global ptr null
@fun_Core_bool_or.1127 = global ptr null
@fun_Core_bool_or_12.1129 = global ptr null
@fun_Core_bool_xor.1131 = global ptr null
@fun_Core_bool_implies.1133 = global ptr null
@fun_Core_bool_or_12.1135 = global ptr null
@fun_Core_type_is.1137 = global ptr null
@fun_Core_function_is.1139 = global ptr null
@fun_Core_function_is0.1141 = global ptr null
@fun_Core_function_is0_11.1143 = global ptr null
@fun_Core_function_is1.1145 = global ptr null
@fun_Core_function_is1_11.1147 = global ptr null
@fun_Core_function_is2.1149 = global ptr null
@fun_Core_function_is2_11.1151 = global ptr null
@fun_Core_function_is3.1153 = global ptr null
@fun_Core_function_is3_11.1155 = global ptr null
@fun_Core_function_is4.1157 = global ptr null
@fun_Core_function_is4_11.1159 = global ptr null
@fun_Core_function_is5.1161 = global ptr null
@fun_Core_function_is5_11.1163 = global ptr null
@fun_Core_function_run.1165 = global ptr null
@fun_Core_function_is0_11.1167 = global ptr null
@fun_Core_function_doNotRun.1169 = global ptr null
@fun_Core_function_is0_11.1171 = global ptr null
@fun_Core_controlFlow_recursive.1173 = global ptr null
@fun_Core_controlFlow_recursive_18.1175 = global ptr null
@fun_Core_controlFlow_recursive_18_0.1177 = global ptr null
@fun_Core_type_is.1179 = global ptr null
@fun_Core_function_is.1181 = global ptr null
@fun_Core_function_is0.1183 = global ptr null
@fun_Core_function_is0_11.1185 = global ptr null
@fun_Core_function_is1.1187 = global ptr null
@fun_Core_function_is1_11.1189 = global ptr null
@fun_Core_function_is2.1191 = global ptr null
@fun_Core_function_is2_11.1193 = global ptr null
@fun_Core_function_is3.1195 = global ptr null
@fun_Core_function_is3_11.1197 = global ptr null
@fun_Core_function_is4.1199 = global ptr null
@fun_Core_function_is4_11.1201 = global ptr null
@fun_Core_function_is5.1203 = global ptr null
@fun_Core_function_is5_11.1205 = global ptr null
@fun_Core_function_run.1207 = global ptr null
@fun_Core_function_is0_11.1209 = global ptr null
@fun_Core_function_doNotRun.1211 = global ptr null
@fun_Core_function_is0_11.1213 = global ptr null
@fun_Core_type_is.1215 = global ptr null
@fun_Core_function_is.1217 = global ptr null
@fun_Core_function_is0.1219 = global ptr null
@fun_Core_function_is0_11.1221 = global ptr null
@fun_Core_function_is1.1223 = global ptr null
@fun_Core_function_is1_11.1225 = global ptr null
@fun_Core_function_is2.1227 = global ptr null
@fun_Core_function_is2_11.1229 = global ptr null
@fun_Core_function_is3.1231 = global ptr null
@fun_Core_function_is3_11.1233 = global ptr null
@fun_Core_function_is4.1235 = global ptr null
@fun_Core_function_is4_11.1237 = global ptr null
@fun_Core_function_is5.1239 = global ptr null
@fun_Core_function_is5_11.1241 = global ptr null
@fun_Core_function_run.1243 = global ptr null
@fun_Core_function_is0_11.1245 = global ptr null
@fun_Core_function_doNotRun.1247 = global ptr null
@fun_Core_function_is0_11.1249 = global ptr null
@fun_Core_bool_lazyAnd.1251 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1253 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1255 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1257 = global ptr null
@147 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1259 = global ptr null
@148 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1261 = global ptr null
@149 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.1263 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1265 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1267 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1269 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1271 = global ptr null
@150 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1273 = global ptr null
@151 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1275 = global ptr null
@152 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1277 = global ptr null
@fun_Core_bool_and.1279 = global ptr null
@fun_Core_bool_and_12.1281 = global ptr null
@fun_Core_bool_lazyOr.1283 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1285 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1287 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1289 = global ptr null
@153 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1291 = global ptr null
@154 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1293 = global ptr null
@155 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.1295 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1297 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1299 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1301 = global ptr null
@156 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1303 = global ptr null
@157 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1305 = global ptr null
@158 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.1307 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.1309 = global ptr null
@fun_Core_bool_or.1311 = global ptr null
@fun_Core_bool_or_12.1313 = global ptr null
@fun_Core_bool_xor.1315 = global ptr null
@fun_Core_bool_implies.1317 = global ptr null
@fun_Core_bool_or_12.1319 = global ptr null
@fun_Core_type_is.1321 = global ptr null
@fun_Core_function_is.1323 = global ptr null
@fun_Core_function_is0.1325 = global ptr null
@fun_Core_function_is0_11.1327 = global ptr null
@fun_Core_function_is1.1329 = global ptr null
@fun_Core_function_is1_11.1331 = global ptr null
@fun_Core_function_is2.1333 = global ptr null
@fun_Core_function_is2_11.1335 = global ptr null
@fun_Core_function_is3.1337 = global ptr null
@fun_Core_function_is3_11.1339 = global ptr null
@fun_Core_function_is4.1341 = global ptr null
@fun_Core_function_is4_11.1343 = global ptr null
@fun_Core_function_is5.1345 = global ptr null
@fun_Core_function_is5_11.1347 = global ptr null
@fun_Core_function_run.1349 = global ptr null
@fun_Core_function_is0_11.1351 = global ptr null
@fun_Core_function_doNotRun.1353 = global ptr null
@fun_Core_function_is0_11.1355 = global ptr null
@fun_Core_bool_lazyAnd.1357 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1359 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1361 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1363 = global ptr null
@159 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1365 = global ptr null
@160 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1367 = global ptr null
@161 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.1369 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1371 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1373 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1375 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1377 = global ptr null
@162 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1379 = global ptr null
@163 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1381 = global ptr null
@164 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1383 = global ptr null
@fun_Core_bool_and.1385 = global ptr null
@fun_Core_bool_and_12.1387 = global ptr null
@fun_Core_bool_lazyOr.1389 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1391 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1393 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1395 = global ptr null
@165 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1397 = global ptr null
@166 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1399 = global ptr null
@167 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.1401 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1403 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1405 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1407 = global ptr null
@168 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1409 = global ptr null
@169 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1411 = global ptr null
@170 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.1413 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.1415 = global ptr null
@fun_Core_bool_or.1417 = global ptr null
@fun_Core_bool_or_12.1419 = global ptr null
@fun_Core_bool_xor.1421 = global ptr null
@fun_Core_bool_implies.1423 = global ptr null
@fun_Core_bool_or_12.1425 = global ptr null
@fun_Core_check_check.1427 = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.1429" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.1431" = global ptr null
@fun_Core_type_is.1433 = global ptr null
@fun_Core_function_is.1435 = global ptr null
@fun_Core_function_is0.1437 = global ptr null
@fun_Core_function_is0_11.1439 = global ptr null
@fun_Core_function_is1.1441 = global ptr null
@fun_Core_function_is1_11.1443 = global ptr null
@fun_Core_function_is2.1445 = global ptr null
@fun_Core_function_is2_11.1447 = global ptr null
@fun_Core_function_is3.1449 = global ptr null
@fun_Core_function_is3_11.1451 = global ptr null
@fun_Core_function_is4.1453 = global ptr null
@fun_Core_function_is4_11.1455 = global ptr null
@fun_Core_function_is5.1457 = global ptr null
@fun_Core_function_is5_11.1459 = global ptr null
@fun_Core_function_run.1461 = global ptr null
@fun_Core_function_is0_11.1463 = global ptr null
@fun_Core_function_doNotRun.1465 = global ptr null
@fun_Core_function_is0_11.1467 = global ptr null
@fun_Core_controlFlow_recursive.1469 = global ptr null
@fun_Core_controlFlow_recursive_18.1471 = global ptr null
@fun_Core_controlFlow_recursive_18_0.1473 = global ptr null
@fun_Core_type_is.1475 = global ptr null
@fun_Core_int_is.1477 = global ptr null
@fun_Core_int_negate.1479 = global ptr null
@fun_Core_int_compareTo.1481 = global ptr null
@fun_Core_int_isLessThan.1483 = global ptr null
@fun_Core_int_isGreaterThan.1485 = global ptr null
@fun_Core_int_isLessThanOrEqualTo.1487 = global ptr null
@fun_Core_int_isGreaterThanOrEqualTo.1489 = global ptr null
@fun_Core_int_isPositive.1491 = global ptr null
@fun_Core_int_isNonPositive.1493 = global ptr null
@fun_Core_int_isNegative.1495 = global ptr null
@fun_Core_int_isNonNegative.1497 = global ptr null
@fun_Core_int_absolute.1499 = global ptr null
@fun_Core_int_absolute_9.1501 = global ptr null
@fun_Core_int_absolute_10.1503 = global ptr null
@fun_Core_int_fitsInRustU32.1505 = global ptr null
@fun_Core_int_fitsInRustU128.1507 = global ptr null
@fun_Core_int_isEven.1509 = global ptr null
@fun_Core_int_isOdd.1511 = global ptr null
@fun_Core_int_min.1513 = global ptr null
@fun_Core_int_min_15.1515 = global ptr null
@fun_Core_int_min_16.1517 = global ptr null
@fun_Core_int_max.1519 = global ptr null
@fun_Core_int_max_15.1521 = global ptr null
@fun_Core_int_max_16.1523 = global ptr null
@fun_Core_int_coerceAtLeast.1525 = global ptr null
@fun_Core_int_coerceAtMost.1527 = global ptr null
@fun_Core_int_coerceIn.1529 = global ptr null
@fun_Core_int_pow.1531 = global ptr null
@fun_Core_int_pow_21.1533 = global ptr null
@fun_Core_int_pow_21_1_equals_then.1535 = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.1537 = global ptr null
@171 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.1539 = global ptr null
@172 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.1541 = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.1543 = global ptr null
@173 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.1545 = global ptr null
@174 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.1547 = global ptr null
@175 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.1549 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.1551 = global ptr null
@fun_Core_int_pow_21_1_equals_else.1553 = global ptr null
@176 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.1555 = global ptr null
@fun_Core_int_pow_21_4_equals_else.1557 = global ptr null
@177 = global ptr null
@fun_Core_int_pow_21_4_case-0_didNotMatch.1559 = global ptr null
@fun_Core_int_pow_21_4_case-1_matched.1561 = global ptr null
@fun_Core_int_pow_21_4_5.1563 = global ptr null
@fun_Core_int_pow_21_4_6.1565 = global ptr null
@fun_Core_type_is.1567 = global ptr null
@fun_Core_function_is.1569 = global ptr null
@fun_Core_function_is0.1571 = global ptr null
@fun_Core_function_is0_11.1573 = global ptr null
@fun_Core_function_is1.1575 = global ptr null
@fun_Core_function_is1_11.1577 = global ptr null
@fun_Core_function_is2.1579 = global ptr null
@fun_Core_function_is2_11.1581 = global ptr null
@fun_Core_function_is3.1583 = global ptr null
@fun_Core_function_is3_11.1585 = global ptr null
@fun_Core_function_is4.1587 = global ptr null
@fun_Core_function_is4_11.1589 = global ptr null
@fun_Core_function_is5.1591 = global ptr null
@fun_Core_function_is5_11.1593 = global ptr null
@fun_Core_function_run.1595 = global ptr null
@fun_Core_function_is0_11.1597 = global ptr null
@fun_Core_function_doNotRun.1599 = global ptr null
@fun_Core_function_is0_11.1601 = global ptr null
@fun_Core_type_is.1603 = global ptr null
@fun_Core_function_is.1605 = global ptr null
@fun_Core_function_is0.1607 = global ptr null
@fun_Core_function_is0_11.1609 = global ptr null
@fun_Core_function_is1.1611 = global ptr null
@fun_Core_function_is1_11.1613 = global ptr null
@fun_Core_function_is2.1615 = global ptr null
@fun_Core_function_is2_11.1617 = global ptr null
@fun_Core_function_is3.1619 = global ptr null
@fun_Core_function_is3_11.1621 = global ptr null
@fun_Core_function_is4.1623 = global ptr null
@fun_Core_function_is4_11.1625 = global ptr null
@fun_Core_function_is5.1627 = global ptr null
@fun_Core_function_is5_11.1629 = global ptr null
@fun_Core_function_run.1631 = global ptr null
@fun_Core_function_is0_11.1633 = global ptr null
@fun_Core_function_doNotRun.1635 = global ptr null
@fun_Core_function_is0_11.1637 = global ptr null
@fun_Core_bool_lazyAnd.1639 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1641 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1643 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1645 = global ptr null
@178 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1647 = global ptr null
@179 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1649 = global ptr null
@180 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.1651 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1653 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1655 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1657 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1659 = global ptr null
@181 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1661 = global ptr null
@182 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1663 = global ptr null
@183 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1665 = global ptr null
@fun_Core_bool_and.1667 = global ptr null
@fun_Core_bool_and_12.1669 = global ptr null
@fun_Core_bool_lazyOr.1671 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1673 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1675 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1677 = global ptr null
@184 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1679 = global ptr null
@185 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1681 = global ptr null
@186 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.1683 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1685 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1687 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1689 = global ptr null
@187 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1691 = global ptr null
@188 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1693 = global ptr null
@189 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.1695 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.1697 = global ptr null
@fun_Core_bool_or.1699 = global ptr null
@fun_Core_bool_or_12.1701 = global ptr null
@fun_Core_bool_xor.1703 = global ptr null
@fun_Core_bool_implies.1705 = global ptr null
@fun_Core_bool_or_12.1707 = global ptr null
@fun_Core_type_is.1709 = global ptr null
@fun_Core_tag_is.1711 = global ptr null
@fun_Core_tag_withSymbol.1713 = global ptr null
@fun_Core_tag_withSymbol_28.1715 = global ptr null
@fun_Core_tag_withSymbol_29.1717 = global ptr null
@fun_Core_tag_withValue.1719 = global ptr null
@fun_Core_type_is.1721 = global ptr null
@"Core:result:is:1" = global ptr null
@tag_Ok = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@190 = global ptr null
@"text_Expected Ok, got " = global ptr null
@tag_Error = global ptr null
@"text_Expected Error, got " = global ptr null
@"Core:result:is:1:_" = global ptr null
@fun_Core_result_is = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.1723 = global ptr null
@fun_Core_result_is_1_equals_then.1725 = global ptr null
@191 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@fun_Core_result_is_1_equals_else.1727 = global ptr null
@192 = global ptr null
@fun_Core_result_is_1_equals_else.1729 = global ptr null
@193 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.1731 = global ptr null
@fun_Core_result_is_1_equals_then.1733 = global ptr null
@fun_Core_result_is_1_equals_then.1735 = global ptr null
@194 = global ptr null
@fun_Core_result_is_1_equals_else.1737 = global ptr null
@fun_Core_result_is_1_equals_else.1739 = global ptr null
@195 = global ptr null
@fun_Core_result_is_1_equals_else.1741 = global ptr null
@196 = global ptr null
@fun_Core_result_is_1_case-0_matched = global ptr null
@fun_Core_result_is_1_case-0_didNotMatch = global ptr null
@"Core:result:getValue:2" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"Core:result:getValue:4" = global ptr null
@"Core:result:getValue:13" = global ptr null
@"Core:result:getValue:14" = global ptr null
@fun_Core_result_getValue = global ptr null
@"Core:result:isOk:2" = global ptr null
@"Core:result:isOk:4" = global ptr null
@"Core:result:isOk:13" = global ptr null
@"Core:result:isOk:14" = global ptr null
@"Core:result:isOk:17" = global ptr null
@fun_Core_result_isOk = global ptr null
@"Core:result:unwrap:2" = global ptr null
@"Core:result:unwrap:4" = global ptr null
@"Core:result:unwrap:7" = global ptr null
@"text_`isOk result` was not satisfied" = global ptr null
@"Core:result:unwrap:9" = global ptr null
@"Core:result:unwrap:12" = global ptr null
@fun_Core_result_unwrap = global ptr null
@"Core:result:expect:2" = global ptr null
@"Core:result:expect:4" = global ptr null
@"Core:result:expect:12" = global ptr null
@"Core:result:expect:15" = global ptr null
@"text_`type.is message Text` was not satisfied" = global ptr null
@"Core:result:expect:17" = global ptr null
@"Core:result:expect:20" = global ptr null
@"Core:result:expect:22" = global ptr null
@"Core:result:expect:25" = global ptr null
@fun_Core_result_expect = global ptr null
@"Core:result:isError:2" = global ptr null
@"Core:result:isError:4" = global ptr null
@"Core:result:isError:13" = global ptr null
@"Core:result:isError:14" = global ptr null
@"Core:result:isError:17" = global ptr null
@fun_Core_result_isError = global ptr null
@"Core:result:unwrapError:2" = global ptr null
@"Core:result:unwrapError:4" = global ptr null
@"Core:result:unwrapError:7" = global ptr null
@"text_`isError result` was not satisfied" = global ptr null
@"Core:result:unwrapError:9" = global ptr null
@"Core:result:unwrapError:12" = global ptr null
@fun_Core_result_unwrapError = global ptr null
@"Core:result:expectError:2" = global ptr null
@"Core:result:expectError:4" = global ptr null
@"Core:result:expectError:12" = global ptr null
@"Core:result:expectError:15" = global ptr null
@"Core:result:expectError:17" = global ptr null
@"Core:result:expectError:20" = global ptr null
@"Core:result:expectError:22" = global ptr null
@"Core:result:expectError:25" = global ptr null
@fun_Core_result_expectError = global ptr null
@"Core:result:mapOrElse:2" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:result:mapOrElse:12" = global ptr null
@"Core:result:mapOrElse:14" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"Core:result:mapOrElse:16" = global ptr null
@"Core:result:mapOrElse:24" = global ptr null
@"Core:result:mapOrElse:26" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"Core:result:mapOrElse:28" = global ptr null
@"Core:result:mapOrElse:30" = global ptr null
@"Core:result:mapOrElse:30:value" = global ptr null
@"Core:result:mapOrElse:30:2" = global ptr null
@"Core:result:mapOrElse:30:value#1" = global ptr null
@"Core:result:mapOrElse:30:5" = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_mapOrElse_30_equals_then = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.1743 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.1745 = global ptr null
@197 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.1747 = global ptr null
@198 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.1749 = global ptr null
@199 = global ptr null
@fun_Core_result_mapOrElse_30_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.1751 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.1753 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.1755 = global ptr null
@200 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.1757 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.1759 = global ptr null
@201 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.1761 = global ptr null
@202 = global ptr null
@fun_Core_result_mapOrElse_30_case-1_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-1_didNotMatch = global ptr null
@"Core:result:mapOr:2" = global ptr null
@"Core:result:mapOr:4" = global ptr null
@"Core:result:mapOr:12" = global ptr null
@"Core:result:mapOr:14" = global ptr null
@"Core:result:mapOr:16" = global ptr null
@"Core:result:mapOr:21" = global ptr null
@fun_Core_result_mapOr = global ptr null
@fun_Core_result_mapOr_20 = global ptr null
@"Core:result:flatMap:2" = global ptr null
@"Core:result:flatMap:4" = global ptr null
@"Core:result:flatMap:12" = global ptr null
@"Core:result:flatMap:14" = global ptr null
@"Core:result:flatMap:16" = global ptr null
@"Core:result:flatMap:19:2" = global ptr null
@"Core:result:flatMap:21" = global ptr null
@fun_Core_result_flatMap = global ptr null
@fun_Core_result_flatMap_19 = global ptr null
@"Core:result:map:2" = global ptr null
@"Core:result:map:4" = global ptr null
@"Core:result:map:12" = global ptr null
@"Core:result:map:14" = global ptr null
@"Core:result:map:16" = global ptr null
@"Core:result:map:19:3" = global ptr null
@"Core:result:map:20" = global ptr null
@fun_Core_result_map = global ptr null
@fun_Core_result_map_19 = global ptr null
@tag_Ok.1762 = global ptr null
@"Core:result:and:2" = global ptr null
@"text_`is resultA` was not satisfied" = global ptr null
@"Core:result:and:4" = global ptr null
@"Core:result:and:7" = global ptr null
@"text_`is resultB` was not satisfied" = global ptr null
@"Core:result:and:9" = global ptr null
@"Core:result:and:13" = global ptr null
@fun_Core_result_and = global ptr null
@fun_Core_result_and_12 = global ptr null
@"Core:result:flatMapError:2" = global ptr null
@"Core:result:flatMapError:4" = global ptr null
@"Core:result:flatMapError:12" = global ptr null
@"Core:result:flatMapError:14" = global ptr null
@"Core:result:flatMapError:16" = global ptr null
@"Core:result:flatMapError:20:2" = global ptr null
@"Core:result:flatMapError:21" = global ptr null
@fun_Core_result_flatMapError = global ptr null
@fun_Core_result_flatMapError_19 = global ptr null
@fun_Core_result_flatMapError_20 = global ptr null
@"Core:result:mapError:2" = global ptr null
@"Core:result:mapError:4" = global ptr null
@"Core:result:mapError:12" = global ptr null
@"Core:result:mapError:14" = global ptr null
@"Core:result:mapError:16" = global ptr null
@"Core:result:mapError:19:3" = global ptr null
@"Core:result:mapError:20" = global ptr null
@fun_Core_result_mapError = global ptr null
@fun_Core_result_mapError_19 = global ptr null
@tag_Error.1763 = global ptr null
@"Core:result:or:2" = global ptr null
@"Core:result:or:4" = global ptr null
@"Core:result:or:7" = global ptr null
@"Core:result:or:9" = global ptr null
@"Core:result:or:13" = global ptr null
@fun_Core_result_or = global ptr null
@fun_Core_result_or_12 = global ptr null
@"Core:result:unwrapOrElse:2" = global ptr null
@"Core:result:unwrapOrElse:4" = global ptr null
@"Core:result:unwrapOrElse:12" = global ptr null
@"Core:result:unwrapOrElse:14" = global ptr null
@"text_`function.is0 defaultGetter` was not satisfied" = global ptr null
@"Core:result:unwrapOrElse:16" = global ptr null
@"fun_Core_iterable_range_38, Core_result_unwrapOrElse_19" = global ptr null
@"Core:result:unwrapOrElse:20:7" = global ptr null
@"Core:result:unwrapOrElse:20:9" = global ptr null
@"Core:result:unwrapOrElse:21" = global ptr null
@fun_Core_result_unwrapOrElse = global ptr null
@fun_Core_result_unwrapOrElse_20 = global ptr null
@"Core:result:unwrapOr:2" = global ptr null
@"Core:result:unwrapOr:4" = global ptr null
@"Core:result:unwrapOr:8" = global ptr null
@fun_Core_result_unwrapOr = global ptr null
@fun_Core_result_unwrapOr_7 = global ptr null
@"Core:result:flatten:2" = global ptr null
@"text_`is resultOfResult` was not satisfied" = global ptr null
@"Core:result:flatten:4" = global ptr null
@"Core:result:flatten:7:2" = global ptr null
@"text_`is innerResult` was not satisfied" = global ptr null
@"Core:result:flatten:7:4" = global ptr null
@"Core:result:flatten:8" = global ptr null
@fun_Core_result_flatten = global ptr null
@fun_Core_result_flatten_7 = global ptr null
@tag_UnwrapOr = global ptr null
@tag_Expect = global ptr null
@tag_Flatten = global ptr null
@tag_MapOrElse = global ptr null
@tag_Map = global ptr null
@tag_IsError = global ptr null
@tag_FlatMap = global ptr null
@tag_ExpectError = global ptr null
@tag_UnwrapError = global ptr null
@tag_UnwrapOrElse = global ptr null
@tag_Unwrap = global ptr null
@tag_MapOr = global ptr null
@tag_FlatMapError = global ptr null
@tag_MapError = global ptr null
@tag_IsOk = global ptr null
@fun_Core_type_is.1765 = global ptr null
@"Core:list:is:7" = global ptr null
@"Core:list:is:10" = global ptr null
@fun_Core_list_is = global ptr null
@"Core:list:89" = global ptr null
@"text_`is list` was not satisfied" = global ptr null
@"Core:list:isEmpty:4" = global ptr null
@"Core:list:isEmpty:8" = global ptr null
@"Core:list:isEmpty:10" = global ptr null
@fun_Core_list_isEmpty = global ptr null
@"Core:list:lastIndex:4" = global ptr null
@"Core:list:lastIndex:8" = global ptr null
@"text_Can't get the last index of an empty list." = global ptr null
@tag_Error.1766 = global ptr null
@fun_Core_list_lastIndex_9 = global ptr null
@"Core:list:lastIndex:10:3" = global ptr null
@"Core:list:lastIndex:10:11" = global ptr null
@"Core:list:lastIndex:10:13" = global ptr null
@"Core:list:lastIndex:11" = global ptr null
@fun_Core_list_lastIndex = global ptr null
@fun_Core_list_lastIndex_10 = global ptr null
@tag_Ok.1767 = global ptr null
@"Core:list:isValidIndex:4" = global ptr null
@"Core:list:isValidIndex:12" = global ptr null
@"Core:list:isValidIndex:14" = global ptr null
@"text_`int.is index` was not satisfied" = global ptr null
@"Core:list:isValidIndex:16" = global ptr null
@"Core:list:isValidIndex:20" = global ptr null
@"Core:list:isValidIndex:22:8" = global ptr null
@"Core:list:isValidIndex:22:9" = global ptr null
@"Core:list:isValidIndex:23" = global ptr null
@"Core:list:isValidIndex:31" = global ptr null
@"Core:list:isValidIndex:32:8" = global ptr null
@"Core:list:isValidIndex:32:11" = global ptr null
@"Core:list:isValidIndex:32:19" = global ptr null
@"Core:list:isValidIndex:32:20" = global ptr null
@"Core:list:isValidIndex:32:21" = global ptr null
@"Core:list:isValidIndex:33" = global ptr null
@fun_Core_list_isValidIndex = global ptr null
@fun_Core_list_isValidIndex_22 = global ptr null
@fun_Core_list_isValidIndex_32 = global ptr null
@"Core:list:isValidInsertIndex:4" = global ptr null
@"Core:list:isValidInsertIndex:12" = global ptr null
@"Core:list:isValidInsertIndex:14" = global ptr null
@"Core:list:isValidInsertIndex:16" = global ptr null
@"Core:list:isValidInsertIndex:20" = global ptr null
@"Core:list:isValidInsertIndex:22:8" = global ptr null
@"Core:list:isValidInsertIndex:22:9" = global ptr null
@"Core:list:isValidInsertIndex:23" = global ptr null
@"Core:list:isValidInsertIndex:31" = global ptr null
@"Core:list:isValidInsertIndex:32:8" = global ptr null
@"Core:list:isValidInsertIndex:32:11" = global ptr null
@"Core:list:isValidInsertIndex:32:12" = global ptr null
@"Core:list:isValidInsertIndex:33" = global ptr null
@fun_Core_list_isValidInsertIndex = global ptr null
@fun_Core_list_isValidInsertIndex_22 = global ptr null
@fun_Core_list_isValidInsertIndex_32 = global ptr null
@"Core:list:98" = global ptr null
@"Core:list:single:4" = global ptr null
@"Core:list:single:6" = global ptr null
@"text_Expected 0 items, got " = global ptr null
@"text_Expected a List, got `" = global ptr null
@"text_Can't get the single item of an empty list." = global ptr null
@tag_Error.1768 = global ptr null
@fun_Core_list_single_6_case-0_matched = global ptr null
@"text_Expected 1 item, got " = global ptr null
@"Core:list:single:6:item" = global ptr null
@"text_Can't get the single item of a list with more than one item." = global ptr null
@tag_Error.1769 = global ptr null
@fun_Core_list_single = global ptr null
@fun_Core_list_single_6_equals_then = global ptr null
@fun_Core_list_single_6_equals_else = global ptr null
@203 = global ptr null
@fun_Core_list_single_6_equals_else.1771 = global ptr null
@204 = global ptr null
@fun_Core_list_single_6_case-0_didNotMatch = global ptr null
@fun_Core_list_single_6_equals_then.1773 = global ptr null
@fun_Core_list_single_6_equals_then.1775 = global ptr null
@205 = global ptr null
@fun_Core_list_single_6_equals_else.1777 = global ptr null
@206 = global ptr null
@fun_Core_list_single_6_equals_else.1779 = global ptr null
@207 = global ptr null
@fun_Core_list_single_6_case-1_matched = global ptr null
@tag_Ok.1780 = global ptr null
@fun_Core_list_single_6_case-1_didNotMatch = global ptr null
@"Core:list:first:4" = global ptr null
@"Core:list:first:6" = global ptr null
@"text_Can't get the first item of an empty list." = global ptr null
@tag_Error.1781 = global ptr null
@fun_Core_list_first_6_case-0_matched = global ptr null
@"Core:list:first:6:13" = global ptr null
@fun_Core_list_first = global ptr null
@fun_Core_list_first_6_equals_then = global ptr null
@fun_Core_list_first_6_equals_else = global ptr null
@208 = global ptr null
@fun_Core_list_first_6_equals_else.1783 = global ptr null
@209 = global ptr null
@fun_Core_list_first_6_case-0_didNotMatch = global ptr null
@tag_Ok.1784 = global ptr null
@"Core:list:last:4" = global ptr null
@"Core:list:last:7" = global ptr null
@"Core:list:last:15" = global ptr null
@"text_Can't get the last item of an empty list." = global ptr null
@fun_Core_list_last_16 = global ptr null
@"Core:list:last:17" = global ptr null
@"Core:list:last:25" = global ptr null
@"Core:list:last:26:3" = global ptr null
@"Core:list:last:27" = global ptr null
@fun_Core_list_last = global ptr null
@fun_Core_list_last_26 = global ptr null
@"Core:list:107" = global ptr null
@"Core:list:prepend:4" = global ptr null
@"Core:list:prepend:9" = global ptr null
@fun_Core_list_prepend = global ptr null
@"Core:list:append:4" = global ptr null
@"Core:list:append:9" = global ptr null
@"Core:list:append:11" = global ptr null
@fun_Core_list_append = global ptr null
@"Core:list:116" = global ptr null
@"Core:list:update:4" = global ptr null
@"Core:list:update:12" = global ptr null
@"Core:list:update:14" = global ptr null
@"Core:list:update:16" = global ptr null
@"Core:list:update:20" = global ptr null
@"text_`list | isValidIndex index` was not satisfied" = global ptr null
@"Core:list:update:22" = global ptr null
@"Core:list:update:30" = global ptr null
@"Core:list:update:32" = global ptr null
@"text_`function.is1 updater` was not satisfied" = global ptr null
@"Core:list:update:34" = global ptr null
@"Core:list:update:38" = global ptr null
@"Core:list:update:42" = global ptr null
@"Core:list:update:48" = global ptr null
@fun_Core_list_update = global ptr null
@"Core:list:125" = global ptr null
@"Core:list:134" = global ptr null
@"Core:list:generate:7" = global ptr null
@"Core:list:generate:9" = global ptr null
@"text_`int.is length` was not satisfied" = global ptr null
@"Core:list:generate:11" = global ptr null
@"Core:list:generate:19" = global ptr null
@"Core:list:generate:21" = global ptr null
@"text_`int.isNonNegative length` was not satisfied" = global ptr null
@"Core:list:generate:23" = global ptr null
@"Core:list:generate:31" = global ptr null
@"Core:list:generate:33" = global ptr null
@"text_`int.fitsInRustU32 length` was not satisfied" = global ptr null
@"Core:list:generate:35" = global ptr null
@"Core:list:generate:43" = global ptr null
@"Core:list:generate:45" = global ptr null
@"text_`function.is1 valueGetter` was not satisfied" = global ptr null
@"Core:list:generate:47" = global ptr null
@tag_Placeholder = global ptr null
@"Core:list:generate:51" = global ptr null
@tag_Index = global ptr null
@"Core:list:generate:59:1" = global ptr null
@"text_Struct doesn't contain key `List`: `" = global ptr null
@"text_Struct doesn't contain key `Index`: `" = global ptr null
@"Core:list:generate:59:list" = global ptr null
@"Core:list:generate:59:index" = global ptr null
@"Core:list:generate:59:6" = global ptr null
@"Core:list:generate:59:8:2" = global ptr null
@"Core:list:generate:59:8:8" = global ptr null
@"Core:list:generate:59:8:21" = global ptr null
@"Core:list:generate:59:8:24" = global ptr null
@"Core:list:generate:59:8:26" = global ptr null
@"Core:list:generate:59:9" = global ptr null
@"Core:list:generate:60" = global ptr null
@fun_Core_list_generate = global ptr null
@fun_Core_list_generate_59 = global ptr null
@fun_Core_list_generate_59_1_equals_then = global ptr null
@fun_Core_list_generate_59_1_hasKey_then = global ptr null
@210 = global ptr null
@fun_Core_list_generate_59_1_hasKey_else = global ptr null
@211 = global ptr null
@fun_Core_list_generate_59_1_isMatch_then = global ptr null
@fun_Core_list_generate_59_1_hasKey_then.1786 = global ptr null
@212 = global ptr null
@fun_Core_list_generate_59_1_hasKey_else.1788 = global ptr null
@213 = global ptr null
@fun_Core_list_generate_59_1_isMatch_then.1790 = global ptr null
@214 = global ptr null
@fun_Core_list_generate_59_1_isMatch_else = global ptr null
@fun_Core_list_generate_59_1_isMatch_else.1792 = global ptr null
@fun_Core_list_generate_59_1_equals_else = global ptr null
@215 = global ptr null
@fun_Core_list_generate_59_1_isMatch_else.1794 = global ptr null
@fun_Core_list_generate_59_7 = global ptr null
@fun_Core_list_generate_59_8 = global ptr null
@"Core:list:getRange:4" = global ptr null
@"Core:list:getRange:12" = global ptr null
@"Core:list:getRange:14" = global ptr null
@"text_`int.is startInclusive` was not satisfied" = global ptr null
@"Core:list:getRange:16" = global ptr null
@"Core:list:getRange:25" = global ptr null
@"Core:list:getRange:26" = global ptr null
@"text_`startInclusive | int.isNonNegative` was not satisfied" = global ptr null
@"Core:list:getRange:28" = global ptr null
@"Core:list:getRange:37" = global ptr null
@"Core:list:getRange:40" = global ptr null
@"Core:list:getRange:41" = global ptr null
@"text_`startInclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied" = global ptr null
@"Core:list:getRange:43" = global ptr null
@"Core:list:getRange:51" = global ptr null
@"Core:list:getRange:53" = global ptr null
@"text_`int.is endExclusive` was not satisfied" = global ptr null
@"Core:list:getRange:55" = global ptr null
@"Core:list:getRange:64" = global ptr null
@"Core:list:getRange:65" = global ptr null
@"text_`endExclusive | int.isNonNegative` was not satisfied" = global ptr null
@"Core:list:getRange:67" = global ptr null
@"Core:list:getRange:76" = global ptr null
@"Core:list:getRange:79" = global ptr null
@"Core:list:getRange:80" = global ptr null
@"text_`endExclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied" = global ptr null
@"Core:list:getRange:82" = global ptr null
@"Core:list:getRange:91" = global ptr null
@"Core:list:getRange:93" = global ptr null
@"text_`startInclusive | int.isLessThanOrEqualTo endExclusive` was not satisfied" = global ptr null
@"Core:list:getRange:95" = global ptr null
@"Core:list:getRange:105" = global ptr null
@"Core:list:getRange:107" = global ptr null
@"Core:list:getRange:108:10" = global ptr null
@"Core:list:getRange:108:12" = global ptr null
@"Core:list:getRange:108:13" = global ptr null
@"Core:list:getRange:109" = global ptr null
@fun_Core_list_getRange = global ptr null
@fun_Core_list_getRange_108 = global ptr null
@"text_`is listA` was not satisfied" = global ptr null
@"Core:list:concatenate:4" = global ptr null
@"text_`is listB` was not satisfied" = global ptr null
@"Core:list:concatenate:9" = global ptr null
@"Core:list:concatenate:13" = global ptr null
@"Core:list:concatenate:21" = global ptr null
@"Core:list:concatenate:24" = global ptr null
@"Core:list:concatenate:25" = global ptr null
@"Core:list:concatenate:26:9" = global ptr null
@"Core:list:concatenate:26:12" = global ptr null
@"Core:list:concatenate:26:13" = global ptr null
@"Core:list:concatenate:26:14:3" = global ptr null
@"Core:list:concatenate:26:15:10" = global ptr null
@"Core:list:concatenate:26:15:13" = global ptr null
@"Core:list:concatenate:26:15:14" = global ptr null
@"Core:list:concatenate:26:15:15" = global ptr null
@"Core:list:concatenate:26:16" = global ptr null
@"Core:list:concatenate:27" = global ptr null
@fun_Core_list_concatenate = global ptr null
@fun_Core_list_concatenate_26 = global ptr null
@fun_Core_list_concatenate_26_14 = global ptr null
@fun_Core_list_concatenate_26_15 = global ptr null
@tag_Insert = global ptr null
@tag_RemoveAt = global ptr null
@tag_IsValidInsertIndex = global ptr null
@tag_Length = global ptr null
@tag_IsEmpty = global ptr null
@tag_Prepend = global ptr null
@tag_Filled = global ptr null
@tag_LastIndex = global ptr null
@tag_Append = global ptr null
@tag_Single = global ptr null
@tag_Last = global ptr null
@tag_Concatenate = global ptr null
@tag_IsValidIndex = global ptr null
@tag_GetRange = global ptr null
@tag_First = global ptr null
@tag_Generate = global ptr null
@tag_Update = global ptr null
@tag_Replace = global ptr null
@fun_Core_type_is.1796 = global ptr null
@"Core:text:is:7" = global ptr null
@"Core:text:is:10" = global ptr null
@fun_Core_text_is = global ptr null
@"text_We're no strangers to love\0AYou know the rules and so do I\0AA full commitment's what I'm thinking of\0AYou wouldn't get this from any other guy\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AAnd if you ask me how I'm feeling\0ADon't tell me you're too blind to see\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give, never gonna give\0ANever gonna give, never gonna give\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you" = global ptr null
@"Core:text:341" = global ptr null
@"Core:text:350" = global ptr null
@"Core:text:359" = global ptr null
@"Core:text:368" = global ptr null
@"text_`is text` was not satisfied" = global ptr null
@"Core:text:characterAt:4" = global ptr null
@"Core:text:characterAt:12" = global ptr null
@"Core:text:characterAt:14" = global ptr null
@"Core:text:characterAt:16" = global ptr null
@"Core:text:characterAt:24" = global ptr null
@"Core:text:characterAt:26" = global ptr null
@"text_`int.isNonNegative index` was not satisfied" = global ptr null
@"Core:text:characterAt:28" = global ptr null
@"Core:text:characterAt:36" = global ptr null
@"Core:text:characterAt:40" = global ptr null
@"Core:text:characterAt:41" = global ptr null
@"text_`int.isLessThan index (length text)` was not satisfied" = global ptr null
@"Core:text:characterAt:43" = global ptr null
@"Core:text:characterAt:46" = global ptr null
@"Core:text:characterAt:54" = global ptr null
@"Core:text:characterAt:56" = global ptr null
@fun_Core_text_characterAt = global ptr null
@"Core:text:377" = global ptr null
@"Core:text:386" = global ptr null
@"Core:text:395" = global ptr null
@"Core:text:404" = global ptr null
@"Core:text:413" = global ptr null
@"Core:text:removePrefix:4" = global ptr null
@"text_`is prefix` was not satisfied" = global ptr null
@"Core:text:removePrefix:9" = global ptr null
@"Core:text:removePrefix:14" = global ptr null
@"Core:text:removePrefix:15:4" = global ptr null
@"Core:text:removePrefix:15:7" = global ptr null
@"Core:text:removePrefix:15:8" = global ptr null
@"Core:text:removePrefix:17" = global ptr null
@fun_Core_text_removePrefix = global ptr null
@fun_Core_text_removePrefix_15 = global ptr null
@fun_Core_text_removePrefix_16 = global ptr null
@"Core:text:removeSuffix:4" = global ptr null
@"text_`is suffix` was not satisfied" = global ptr null
@"Core:text:removeSuffix:9" = global ptr null
@"Core:text:removeSuffix:12" = global ptr null
@"Core:text:removeSuffix:18" = global ptr null
@"Core:text:removeSuffix:19:10" = global ptr null
@"Core:text:removeSuffix:19:13" = global ptr null
@"Core:text:removeSuffix:19:14" = global ptr null
@"Core:text:removeSuffix:19:16" = global ptr null
@"Core:text:removeSuffix:21" = global ptr null
@fun_Core_text_removeSuffix = global ptr null
@fun_Core_text_removeSuffix_19 = global ptr null
@fun_Core_text_removeSuffix_20 = global ptr null
@"Core:text:422" = global ptr null
@"Core:text:431" = global ptr null
@"Core:text:trim:4" = global ptr null
@"Core:text:trim:7" = global ptr null
@"Core:text:trim:9" = global ptr null
@fun_Core_text_trim = global ptr null
@tag_StartsWith = global ptr null
@tag_Rick = global ptr null
@tag_Trim = global ptr null
@tag_Contains = global ptr null
@tag_Characters = global ptr null
@tag_EndsWith = global ptr null
@tag_RemoveSuffix = global ptr null
@tag_RemovePrefix = global ptr null
@tag_FromUtf8 = global ptr null
@tag_CharacterAt = global ptr null
@tag_TrimStart = global ptr null
@tag_TrimEnd = global ptr null
@"Core:toDebugText:toDebugText:7" = global ptr null
@"Core:toDebugText:toDebugText:9" = global ptr null
@"Core:fixedDecimal:isScale:7" = global ptr null
@"Core:fixedDecimal:isScale:9" = global ptr null
@"Core:fixedDecimal:isScale:17" = global ptr null
@"Core:fixedDecimal:isScale:18:7" = global ptr null
@"Core:fixedDecimal:isScale:18:9" = global ptr null
@"Core:fixedDecimal:isScale:19" = global ptr null
@"text_`isScale scale` was not satisfied" = global ptr null
@"Core:fixedDecimal:scaleFactor:4" = global ptr null
@num_10 = global ptr null
@"Core:fixedDecimal:scaleFactor:13" = global ptr null
@"Core:fixedDecimal:scaleFactor:15" = global ptr null
@fun_Core_fixedDecimal_scaleFactor = global ptr null
@fun_Core_fixedDecimal_isScale_18 = global ptr null
@"Core:fixedDecimal:is:1" = global ptr null
@tag_FixedDecimal = global ptr null
@tag_MinorUnits = global ptr null
@"text_Struct doesn't contain key `MinorUnits`: `" = global ptr null
@tag_Scale = global ptr null
@"text_Struct doesn't contain key `Scale`: `" = global ptr null
@"text_Expected FixedDecimal, got " = global ptr null
@"Core:fixedDecimal:is:1:minorUnits" = global ptr null
@"Core:fixedDecimal:is:1:scale" = global ptr null
@"Core:fixedDecimal:is:1:7" = global ptr null
@"Core:fixedDecimal:is:1:9" = global ptr null
@"Core:fixedDecimal:is:1:17" = global ptr null
@"Core:fixedDecimal:is:1:19" = global ptr null
@fun_Core_fixedDecimal_is = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.1798 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.1800 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.1802 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then = global ptr null
@216 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else = global ptr null
@217 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.1804 = global ptr null
@218 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.1806 = global ptr null
@219 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.1808 = global ptr null
@220 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.1810 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else = global ptr null
@221 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.1812 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.1814 = global ptr null
@222 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.1816 = global ptr null
@223 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched = global ptr null
@fun_Core_fixedDecimal_is_1_18 = global ptr null
@fun_Core_fixedDecimal_isScale_18.1818 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_didNotMatch = global ptr null
@"Core:fixedDecimal:minorUnits:2" = global ptr null
@"Core:fixedDecimal:minorUnits:4" = global ptr null
@"Core:fixedDecimal:minorUnits:18" = global ptr null
@"Core:fixedDecimal:minorUnits:19" = global ptr null
@"Core:fixedDecimal:minorUnits:21" = global ptr null
@fun_Core_fixedDecimal_minorUnits = global ptr null
@"Core:fixedDecimal:scale:2" = global ptr null
@"Core:fixedDecimal:scale:4" = global ptr null
@"Core:fixedDecimal:scale:18" = global ptr null
@"Core:fixedDecimal:scale:19" = global ptr null
@"Core:fixedDecimal:scale:21" = global ptr null
@fun_Core_fixedDecimal_scale = global ptr null
@"Core:fixedDecimal:fromIntScaled:7" = global ptr null
@"Core:fixedDecimal:fromIntScaled:9" = global ptr null
@"text_`int.is minorUnits` was not satisfied" = global ptr null
@"Core:fixedDecimal:fromIntScaled:11" = global ptr null
@"Core:fixedDecimal:fromIntScaled:16" = global ptr null
@fun_Core_fixedDecimal_fromIntScaled = global ptr null
@fun_Core_fixedDecimal_isScale_18.1820 = global ptr null
@tag_FixedDecimal.1821 = global ptr null
@"Core:fixedDecimal:fromInt:7" = global ptr null
@"Core:fixedDecimal:fromInt:9" = global ptr null
@"text_`int.is a` was not satisfied" = global ptr null
@"Core:fixedDecimal:fromInt:11" = global ptr null
@"Core:fixedDecimal:fromInt:15" = global ptr null
@fun_Core_fixedDecimal_fromInt = global ptr null
@"Core:fixedDecimal:floorToInt:2" = global ptr null
@"Core:fixedDecimal:floorToInt:4" = global ptr null
@"Core:fixedDecimal:floorToInt:7" = global ptr null
@"Core:fixedDecimal:floorToInt:15" = global ptr null
@"Core:fixedDecimal:floorToInt:18" = global ptr null
@"Core:fixedDecimal:floorToInt:20" = global ptr null
@"Core:fixedDecimal:floorToInt:21" = global ptr null
@fun_Core_fixedDecimal_floorToInt = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:4" = global ptr null
@"text_`isScale targetScale` was not satisfied" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:9" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:13" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:21" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:23" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:10" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:14" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:22" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:24" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:25" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:26" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:10" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:20" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:23" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:24" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:25" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:26" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:26" = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits = global ptr null
@fun_Core_fixedDecimal_isScale_18.1823 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits_24 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits_25 = global ptr null
@"Core:fixedDecimal:rescale:2" = global ptr null
@"Core:fixedDecimal:rescale:4" = global ptr null
@"Core:fixedDecimal:rescale:9" = global ptr null
@"Core:fixedDecimal:rescale:14" = global ptr null
@"Core:fixedDecimal:rescale:16" = global ptr null
@fun_Core_fixedDecimal_rescale = global ptr null
@fun_Core_fixedDecimal_isScale_18.1825 = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:2" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:4" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:7" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:9" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:17" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:20" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:23" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:24" = global ptr null
@tag_ValueA = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:30" = global ptr null
@tag_ValueB = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:35" = global ptr null
@tag_TargetScale = global ptr null
@fun_Core_fixedDecimal_comparableMinorUnits = global ptr null
@"Core:fixedDecimal:add:2" = global ptr null
@"text_`is summandA` was not satisfied" = global ptr null
@"Core:fixedDecimal:add:4" = global ptr null
@"Core:fixedDecimal:add:7" = global ptr null
@"text_`is summandB` was not satisfied" = global ptr null
@"Core:fixedDecimal:add:9" = global ptr null
@"Core:fixedDecimal:add:13" = global ptr null
@"Core:fixedDecimal:add:14" = global ptr null
@"text_Struct doesn't contain key `ValueA`: `" = global ptr null
@"text_Struct doesn't contain key `ValueB`: `" = global ptr null
@"text_Struct doesn't contain key `TargetScale`: `" = global ptr null
@"Core:fixedDecimal:add:valueA" = global ptr null
@"Core:fixedDecimal:add:valueB" = global ptr null
@"Core:fixedDecimal:add:targetScale" = global ptr null
@"Core:fixedDecimal:add:25" = global ptr null
@"Core:fixedDecimal:add:27" = global ptr null
@"Core:fixedDecimal:add:29" = global ptr null
@fun_Core_fixedDecimal_add = global ptr null
@fun_Core_fixedDecimal_add_14_equals_then = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_then = global ptr null
@224 = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_else = global ptr null
@225 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_then = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_then.1827 = global ptr null
@226 = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_else.1829 = global ptr null
@227 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_then.1831 = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_then.1833 = global ptr null
@228 = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_else.1835 = global ptr null
@229 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_then.1837 = global ptr null
@230 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_else = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_else.1839 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_else.1841 = global ptr null
@fun_Core_fixedDecimal_add_14_equals_else = global ptr null
@231 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_else.1843 = global ptr null
@"Core:fixedDecimal:subtract:2" = global ptr null
@"text_`is minuend` was not satisfied" = global ptr null
@"Core:fixedDecimal:subtract:4" = global ptr null
@"Core:fixedDecimal:subtract:7" = global ptr null
@"text_`is subtrahend` was not satisfied" = global ptr null
@"Core:fixedDecimal:subtract:9" = global ptr null
@"Core:fixedDecimal:subtract:13" = global ptr null
@"Core:fixedDecimal:subtract:14" = global ptr null
@"Core:fixedDecimal:subtract:valueA" = global ptr null
@"Core:fixedDecimal:subtract:valueB" = global ptr null
@"Core:fixedDecimal:subtract:targetScale" = global ptr null
@"Core:fixedDecimal:subtract:25" = global ptr null
@"Core:fixedDecimal:subtract:27" = global ptr null
@"Core:fixedDecimal:subtract:29" = global ptr null
@fun_Core_fixedDecimal_subtract = global ptr null
@fun_Core_fixedDecimal_subtract_14_equals_then = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then = global ptr null
@232 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else = global ptr null
@233 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then.1845 = global ptr null
@234 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else.1847 = global ptr null
@235 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then.1849 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then.1851 = global ptr null
@236 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else.1853 = global ptr null
@237 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then.1855 = global ptr null
@238 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.1857 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.1859 = global ptr null
@fun_Core_fixedDecimal_subtract_14_equals_else = global ptr null
@239 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.1861 = global ptr null
@"Core:fixedDecimal:negate:2" = global ptr null
@"Core:fixedDecimal:negate:4" = global ptr null
@"Core:fixedDecimal:negate:8" = global ptr null
@"Core:fixedDecimal:negate:16" = global ptr null
@"Core:fixedDecimal:negate:17" = global ptr null
@"Core:fixedDecimal:negate:20" = global ptr null
@"Core:fixedDecimal:negate:21" = global ptr null
@fun_Core_fixedDecimal_negate = global ptr null
@"Core:fixedDecimal:multiply:2" = global ptr null
@"text_`is factorA` was not satisfied" = global ptr null
@"Core:fixedDecimal:multiply:4" = global ptr null
@"Core:fixedDecimal:multiply:7" = global ptr null
@"text_`is factorB` was not satisfied" = global ptr null
@"Core:fixedDecimal:multiply:9" = global ptr null
@"Core:fixedDecimal:multiply:13" = global ptr null
@"Core:fixedDecimal:multiply:21" = global ptr null
@"Core:fixedDecimal:multiply:24" = global ptr null
@"Core:fixedDecimal:multiply:25" = global ptr null
@"Core:fixedDecimal:multiply:28" = global ptr null
@"Core:fixedDecimal:multiply:36" = global ptr null
@"Core:fixedDecimal:multiply:39" = global ptr null
@"Core:fixedDecimal:multiply:40" = global ptr null
@"Core:fixedDecimal:multiply:41" = global ptr null
@fun_Core_fixedDecimal_multiply = global ptr null
@"Core:fixedDecimal:divideTruncating:2" = global ptr null
@"text_`is dividend` was not satisfied" = global ptr null
@"Core:fixedDecimal:divideTruncating:4" = global ptr null
@"Core:fixedDecimal:divideTruncating:7" = global ptr null
@"text_`is divisor` was not satisfied" = global ptr null
@"Core:fixedDecimal:divideTruncating:9" = global ptr null
@"Core:fixedDecimal:divideTruncating:12" = global ptr null
@"Core:fixedDecimal:divideTruncating:15" = global ptr null
@"Core:fixedDecimal:divideTruncating:23" = global ptr null
@"Core:fixedDecimal:divideTruncating:24" = global ptr null
@"Core:fixedDecimal:divideTruncating:32" = global ptr null
@"Core:fixedDecimal:divideTruncating:36" = global ptr null
@"Core:fixedDecimal:divideTruncating:37" = global ptr null
@"Core:fixedDecimal:divideTruncating:valueA" = global ptr null
@"Core:fixedDecimal:divideTruncating:valueB" = global ptr null
@"Core:fixedDecimal:divideTruncating:targetScale" = global ptr null
@"Core:fixedDecimal:divideTruncating:48" = global ptr null
@"Core:fixedDecimal:divideTruncating:51" = global ptr null
@"Core:fixedDecimal:divideTruncating:52" = global ptr null
@"Core:fixedDecimal:divideTruncating:60" = global ptr null
@"Core:fixedDecimal:divideTruncating:62" = global ptr null
@"Core:fixedDecimal:divideTruncating:64" = global ptr null
@fun_Core_fixedDecimal_divideTruncating = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_equals_then = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_then = global ptr null
@240 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_else = global ptr null
@241 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_then = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.1863 = global ptr null
@242 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.1865 = global ptr null
@243 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.1867 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.1869 = global ptr null
@244 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.1871 = global ptr null
@245 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.1873 = global ptr null
@246 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_else = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1875 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1877 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_equals_else = global ptr null
@247 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1879 = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:2" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:4" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:7" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:9" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:14" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:17" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:20" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:28" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:29" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:37" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:41" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:42" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:valueA" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:valueB" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:53" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:56" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:57" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:65" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:67" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:69" = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale = global ptr null
@fun_Core_fixedDecimal_isScale_18.1881 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_then = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then = global ptr null
@248 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else = global ptr null
@249 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.1883 = global ptr null
@250 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.1885 = global ptr null
@251 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.1887 = global ptr null
@252 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1889 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_else = global ptr null
@253 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1891 = global ptr null
@"Core:fixedDecimal:compareTo:2" = global ptr null
@"Core:fixedDecimal:compareTo:4" = global ptr null
@"Core:fixedDecimal:compareTo:7" = global ptr null
@"Core:fixedDecimal:compareTo:9" = global ptr null
@"Core:fixedDecimal:compareTo:13" = global ptr null
@"Core:fixedDecimal:compareTo:14" = global ptr null
@"Core:fixedDecimal:compareTo:valueA#1" = global ptr null
@"Core:fixedDecimal:compareTo:valueB#1" = global ptr null
@"Core:fixedDecimal:compareTo:24" = global ptr null
@"Core:fixedDecimal:compareTo:26" = global ptr null
@"Core:fixedDecimal:compareTo:32" = global ptr null
@"Core:fixedDecimal:compareTo:40" = global ptr null
@"Core:fixedDecimal:compareTo:44" = global ptr null
@"Core:fixedDecimal:compareTo:45" = global ptr null
@"Core:fixedDecimal:compareTo:46" = global ptr null
@fun_Core_fixedDecimal_compareTo = global ptr null
@fun_Core_fixedDecimal_compareTo_14_equals_then = global ptr null
@fun_Core_fixedDecimal_compareTo_14_hasKey_then = global ptr null
@254 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_hasKey_else = global ptr null
@255 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_then = global ptr null
@fun_Core_fixedDecimal_compareTo_14_hasKey_then.1893 = global ptr null
@256 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_hasKey_else.1895 = global ptr null
@257 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_then.1897 = global ptr null
@258 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_else = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_else.1899 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_equals_else = global ptr null
@259 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_else.1901 = global ptr null
@"Core:fixedDecimal:isLessThan:2" = global ptr null
@"Core:fixedDecimal:isLessThan:4" = global ptr null
@"Core:fixedDecimal:isLessThan:7" = global ptr null
@"Core:fixedDecimal:isLessThan:9" = global ptr null
@"Core:fixedDecimal:isLessThan:14" = global ptr null
@"Core:fixedDecimal:isLessThan:16" = global ptr null
@fun_Core_fixedDecimal_isLessThan = global ptr null
@"Core:fixedDecimal:isGreaterThan:2" = global ptr null
@"Core:fixedDecimal:isGreaterThan:4" = global ptr null
@"Core:fixedDecimal:isGreaterThan:7" = global ptr null
@"Core:fixedDecimal:isGreaterThan:9" = global ptr null
@"Core:fixedDecimal:isGreaterThan:14" = global ptr null
@"Core:fixedDecimal:isGreaterThan:16" = global ptr null
@fun_Core_fixedDecimal_isGreaterThan = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:2" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:4" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:7" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:9" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:13" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:21" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:22" = global ptr null
@fun_Core_fixedDecimal_isLessThanOrEqualTo = global ptr null
@"Core:fixedDecimal:isGreaterThanOrEqualTo:2" = global ptr null
@"Core:fixedDecimal:isGreaterThanOrEqualTo:4" = global ptr null
@"Core:fixedDecimal:isGreaterThanOrEqualTo:7" = global ptr null
@"Core:fixedDecimal:isGreaterThanOrEqualTo:9" = global ptr null
@"Core:fixedDecimal:isGreaterThanOrEqualTo:13" = global ptr null
@"Core:fixedDecimal:isGreaterThanOrEqualTo:21" = global ptr null
@"Core:fixedDecimal:isGreaterThanOrEqualTo:22" = global ptr null
@fun_Core_fixedDecimal_isGreaterThanOrEqualTo = global ptr null
@"Core:fixedDecimal:isPositive:2" = global ptr null
@"Core:fixedDecimal:isPositive:4" = global ptr null
@"Core:fixedDecimal:isPositive:7" = global ptr null
@"Core:fixedDecimal:isPositive:15" = global ptr null
@"Core:fixedDecimal:isPositive:17" = global ptr null
@fun_Core_fixedDecimal_isPositive = global ptr null
@"Core:fixedDecimal:isNonPositive:2" = global ptr null
@"Core:fixedDecimal:isNonPositive:4" = global ptr null
@"Core:fixedDecimal:isNonPositive:7" = global ptr null
@"Core:fixedDecimal:isNonPositive:15" = global ptr null
@"Core:fixedDecimal:isNonPositive:16" = global ptr null
@fun_Core_fixedDecimal_isNonPositive = global ptr null
@"Core:fixedDecimal:isNegative:2" = global ptr null
@"Core:fixedDecimal:isNegative:4" = global ptr null
@"Core:fixedDecimal:isNegative:7" = global ptr null
@"Core:fixedDecimal:isNegative:15" = global ptr null
@"Core:fixedDecimal:isNegative:17" = global ptr null
@fun_Core_fixedDecimal_isNegative = global ptr null
@"Core:fixedDecimal:isNonNegative:2" = global ptr null
@"Core:fixedDecimal:isNonNegative:4" = global ptr null
@"Core:fixedDecimal:isNonNegative:7" = global ptr null
@"Core:fixedDecimal:isNonNegative:15" = global ptr null
@"Core:fixedDecimal:isNonNegative:16" = global ptr null
@fun_Core_fixedDecimal_isNonNegative = global ptr null
@"Core:fixedDecimal:absolute:2" = global ptr null
@"Core:fixedDecimal:absolute:4" = global ptr null
@"Core:fixedDecimal:absolute:8" = global ptr null
@"Core:fixedDecimal:absolute:9:2" = global ptr null
@"Core:fixedDecimal:absolute:11" = global ptr null
@fun_Core_fixedDecimal_absolute = global ptr null
@fun_Core_fixedDecimal_absolute_9 = global ptr null
@fun_Core_fixedDecimal_absolute_10 = global ptr null
@"Core:fixedDecimal:approxEquals:2" = global ptr null
@"Core:fixedDecimal:approxEquals:4" = global ptr null
@"Core:fixedDecimal:approxEquals:7" = global ptr null
@"Core:fixedDecimal:approxEquals:9" = global ptr null
@"Core:fixedDecimal:approxEquals:12" = global ptr null
@"text_`is delta` was not satisfied" = global ptr null
@"Core:fixedDecimal:approxEquals:14" = global ptr null
@"Core:fixedDecimal:approxEquals:17" = global ptr null
@"text_`isNonNegative delta` was not satisfied" = global ptr null
@"Core:fixedDecimal:approxEquals:19" = global ptr null
@"Core:fixedDecimal:approxEquals:23" = global ptr null
@"Core:fixedDecimal:approxEquals:25" = global ptr null
@"Core:fixedDecimal:approxEquals:28" = global ptr null
@fun_Core_fixedDecimal_approxEquals = global ptr null
@"Core:fixedDecimal:min:2" = global ptr null
@"Core:fixedDecimal:min:4" = global ptr null
@"Core:fixedDecimal:min:7" = global ptr null
@"Core:fixedDecimal:min:9" = global ptr null
@"Core:fixedDecimal:min:14" = global ptr null
@"Core:fixedDecimal:min:17" = global ptr null
@fun_Core_fixedDecimal_min = global ptr null
@fun_Core_fixedDecimal_min_15 = global ptr null
@fun_Core_fixedDecimal_min_16 = global ptr null
@"Core:fixedDecimal:max:2" = global ptr null
@"Core:fixedDecimal:max:4" = global ptr null
@"Core:fixedDecimal:max:7" = global ptr null
@"Core:fixedDecimal:max:9" = global ptr null
@"Core:fixedDecimal:max:14" = global ptr null
@"Core:fixedDecimal:max:17" = global ptr null
@fun_Core_fixedDecimal_max = global ptr null
@fun_Core_fixedDecimal_max_15 = global ptr null
@fun_Core_fixedDecimal_max_16 = global ptr null
@"Core:fixedDecimal:coerceAtLeast:2" = global ptr null
@"Core:fixedDecimal:coerceAtLeast:4" = global ptr null
@"Core:fixedDecimal:coerceAtLeast:7" = global ptr null
@"Core:fixedDecimal:coerceAtLeast:9" = global ptr null
@"Core:fixedDecimal:coerceAtLeast:13" = global ptr null
@fun_Core_fixedDecimal_coerceAtLeast = global ptr null
@"Core:fixedDecimal:coerceAtMost:2" = global ptr null
@"Core:fixedDecimal:coerceAtMost:4" = global ptr null
@"Core:fixedDecimal:coerceAtMost:7" = global ptr null
@"Core:fixedDecimal:coerceAtMost:9" = global ptr null
@"Core:fixedDecimal:coerceAtMost:13" = global ptr null
@fun_Core_fixedDecimal_coerceAtMost = global ptr null
@"Core:fixedDecimal:coerceIn:2" = global ptr null
@"Core:fixedDecimal:coerceIn:4" = global ptr null
@"Core:fixedDecimal:coerceIn:7" = global ptr null
@"Core:fixedDecimal:coerceIn:9" = global ptr null
@"Core:fixedDecimal:coerceIn:12" = global ptr null
@"Core:fixedDecimal:coerceIn:14" = global ptr null
@"Core:fixedDecimal:coerceIn:18" = global ptr null
@"Core:fixedDecimal:coerceIn:20" = global ptr null
@"Core:fixedDecimal:coerceIn:24" = global ptr null
@"Core:fixedDecimal:coerceIn:27" = global ptr null
@fun_Core_fixedDecimal_coerceIn = global ptr null
@"Core:fixedDecimal:toText:2" = global ptr null
@"Core:fixedDecimal:toText:4" = global ptr null
@"Core:fixedDecimal:toText:7" = global ptr null
@"Core:fixedDecimal:toText:10:2" = global ptr null
@"Core:fixedDecimal:toText:10:4" = global ptr null
@"Core:fixedDecimal:toText:10:8" = global ptr null
@"Core:fixedDecimal:toText:10:16" = global ptr null
@"Core:fixedDecimal:toText:10:18" = global ptr null
@"Core:fixedDecimal:toText:10:28" = global ptr null
@"Core:fixedDecimal:toText:10:30" = global ptr null
@"Core:fixedDecimal:toText:10:31:8" = global ptr null
@"Core:fixedDecimal:toText:10:31:10" = global ptr null
@"Core:fixedDecimal:toText:10:31:20" = global ptr null
@text_1 = global ptr null
@"Core:fixedDecimal:toText:10:31:28" = global ptr null
@"Core:fixedDecimal:toText:10:32:8" = global ptr null
@"Core:fixedDecimal:toText:10:32:10" = global ptr null
@"Core:fixedDecimal:toText:10:32:20" = global ptr null
@text_-1 = global ptr null
@"Core:fixedDecimal:toText:10:32:28" = global ptr null
@"Core:fixedDecimal:toText:10:33" = global ptr null
@"Core:fixedDecimal:toText:11" = global ptr null
@"Core:fixedDecimal:toText:20" = global ptr null
@"Core:fixedDecimal:toText:21" = global ptr null
@"Core:fixedDecimal:toText:23:0" = global ptr null
@"Core:fixedDecimal:toText:24" = global ptr null
@"Core:fixedDecimal:toText:27" = global ptr null
@"Core:fixedDecimal:toText:28" = global ptr null
@"Core:fixedDecimal:toText:30:0" = global ptr null
@"Core:fixedDecimal:toText:31" = global ptr null
@"Core:fixedDecimal:toText:32" = global ptr null
@"Core:fixedDecimal:toText:33" = global ptr null
@fun_Core_fixedDecimal_toText = global ptr null
@fun_Core_fixedDecimal_toText_10 = global ptr null
@fun_Core_fixedDecimal_toText_10_31 = global ptr null
@fun_Core_fixedDecimal_toText_10_32 = global ptr null
@fun_Core_fixedDecimal_toText_22 = global ptr null
@fun_Core_fixedDecimal_toText_23 = global ptr null
@fun_Core_fixedDecimal_toText_29 = global ptr null
@fun_Core_fixedDecimal_toText_30 = global ptr null
@tag_FromIntScaled = global ptr null
@tag_ToText = global ptr null
@tag_Rescale = global ptr null
@tag_DivideTruncatingAtScale = global ptr null
@tag_FloorToInt = global ptr null
@tag_ApproxEquals = global ptr null
@tag_FromInt = global ptr null
@fun_Core_type_is.1903 = global ptr null
@fun_Core_function_is.1905 = global ptr null
@fun_Core_function_is0.1907 = global ptr null
@fun_Core_function_is0_11.1909 = global ptr null
@fun_Core_function_is1.1911 = global ptr null
@fun_Core_function_is1_11.1913 = global ptr null
@fun_Core_function_is2.1915 = global ptr null
@fun_Core_function_is2_11.1917 = global ptr null
@fun_Core_function_is3.1919 = global ptr null
@fun_Core_function_is3_11.1921 = global ptr null
@fun_Core_function_is4.1923 = global ptr null
@fun_Core_function_is4_11.1925 = global ptr null
@fun_Core_function_is5.1927 = global ptr null
@fun_Core_function_is5_11.1929 = global ptr null
@fun_Core_function_run.1931 = global ptr null
@fun_Core_function_is0_11.1933 = global ptr null
@fun_Core_function_doNotRun.1935 = global ptr null
@fun_Core_function_is0_11.1937 = global ptr null
@fun_Core_bool_lazyAnd.1939 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1941 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1943 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1945 = global ptr null
@260 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1947 = global ptr null
@261 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1949 = global ptr null
@262 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.1951 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1953 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1955 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.1957 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1959 = global ptr null
@263 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1961 = global ptr null
@264 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.1963 = global ptr null
@265 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1965 = global ptr null
@fun_Core_bool_and.1967 = global ptr null
@fun_Core_bool_and_12.1969 = global ptr null
@fun_Core_bool_lazyOr.1971 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1973 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1975 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1977 = global ptr null
@266 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1979 = global ptr null
@267 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1981 = global ptr null
@268 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.1983 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1985 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.1987 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1989 = global ptr null
@269 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1991 = global ptr null
@270 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.1993 = global ptr null
@271 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.1995 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.1997 = global ptr null
@fun_Core_bool_or.1999 = global ptr null
@fun_Core_bool_or_12.2001 = global ptr null
@fun_Core_bool_xor.2003 = global ptr null
@fun_Core_bool_implies.2005 = global ptr null
@fun_Core_bool_or_12.2007 = global ptr null
@fun_Core_type_is.2009 = global ptr null
@fun_Core_function_is.2011 = global ptr null
@fun_Core_function_is0.2013 = global ptr null
@fun_Core_function_is0_11.2015 = global ptr null
@fun_Core_function_is1.2017 = global ptr null
@fun_Core_function_is1_11.2019 = global ptr null
@fun_Core_function_is2.2021 = global ptr null
@fun_Core_function_is2_11.2023 = global ptr null
@fun_Core_function_is3.2025 = global ptr null
@fun_Core_function_is3_11.2027 = global ptr null
@fun_Core_function_is4.2029 = global ptr null
@fun_Core_function_is4_11.2031 = global ptr null
@fun_Core_function_is5.2033 = global ptr null
@fun_Core_function_is5_11.2035 = global ptr null
@fun_Core_function_run.2037 = global ptr null
@fun_Core_function_is0_11.2039 = global ptr null
@fun_Core_function_doNotRun.2041 = global ptr null
@fun_Core_function_is0_11.2043 = global ptr null
@fun_Core_bool_lazyAnd.2045 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.2047 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.2049 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.2051 = global ptr null
@272 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.2053 = global ptr null
@273 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.2055 = global ptr null
@274 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.2057 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.2059 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.2061 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.2063 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.2065 = global ptr null
@275 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.2067 = global ptr null
@276 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.2069 = global ptr null
@277 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.2071 = global ptr null
@fun_Core_bool_and.2073 = global ptr null
@fun_Core_bool_and_12.2075 = global ptr null
@fun_Core_bool_lazyOr.2077 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.2079 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.2081 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.2083 = global ptr null
@278 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.2085 = global ptr null
@279 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.2087 = global ptr null
@280 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.2089 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.2091 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.2093 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.2095 = global ptr null
@281 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.2097 = global ptr null
@282 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.2099 = global ptr null
@283 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.2101 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.2103 = global ptr null
@fun_Core_bool_or.2105 = global ptr null
@fun_Core_bool_or_12.2107 = global ptr null
@fun_Core_bool_xor.2109 = global ptr null
@fun_Core_bool_implies.2111 = global ptr null
@fun_Core_bool_or_12.2113 = global ptr null
@fun_Core_check_check.2115 = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.2117" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.2119" = global ptr null
@fun_Core_type_is.2121 = global ptr null
@fun_Core_function_is.2123 = global ptr null
@fun_Core_function_is0.2125 = global ptr null
@fun_Core_function_is0_11.2127 = global ptr null
@fun_Core_function_is1.2129 = global ptr null
@fun_Core_function_is1_11.2131 = global ptr null
@fun_Core_function_is2.2133 = global ptr null
@fun_Core_function_is2_11.2135 = global ptr null
@fun_Core_function_is3.2137 = global ptr null
@fun_Core_function_is3_11.2139 = global ptr null
@fun_Core_function_is4.2141 = global ptr null
@fun_Core_function_is4_11.2143 = global ptr null
@fun_Core_function_is5.2145 = global ptr null
@fun_Core_function_is5_11.2147 = global ptr null
@fun_Core_function_run.2149 = global ptr null
@fun_Core_function_is0_11.2151 = global ptr null
@fun_Core_function_doNotRun.2153 = global ptr null
@fun_Core_function_is0_11.2155 = global ptr null
@fun_Core_controlFlow_recursive.2157 = global ptr null
@fun_Core_controlFlow_recursive_18.2159 = global ptr null
@fun_Core_controlFlow_recursive_18_0.2161 = global ptr null
@fun_Core_type_is.2163 = global ptr null
@fun_Core_int_is.2165 = global ptr null
@fun_Core_int_negate.2167 = global ptr null
@fun_Core_int_compareTo.2169 = global ptr null
@fun_Core_int_isLessThan.2171 = global ptr null
@fun_Core_int_isGreaterThan.2173 = global ptr null
@fun_Core_int_isLessThanOrEqualTo.2175 = global ptr null
@fun_Core_int_isGreaterThanOrEqualTo.2177 = global ptr null
@fun_Core_int_isPositive.2179 = global ptr null
@fun_Core_int_isNonPositive.2181 = global ptr null
@fun_Core_int_isNegative.2183 = global ptr null
@fun_Core_int_isNonNegative.2185 = global ptr null
@fun_Core_int_absolute.2187 = global ptr null
@fun_Core_int_absolute_9.2189 = global ptr null
@fun_Core_int_absolute_10.2191 = global ptr null
@fun_Core_int_fitsInRustU32.2193 = global ptr null
@fun_Core_int_fitsInRustU128.2195 = global ptr null
@fun_Core_int_isEven.2197 = global ptr null
@fun_Core_int_isOdd.2199 = global ptr null
@fun_Core_int_min.2201 = global ptr null
@fun_Core_int_min_15.2203 = global ptr null
@fun_Core_int_min_16.2205 = global ptr null
@fun_Core_int_max.2207 = global ptr null
@fun_Core_int_max_15.2209 = global ptr null
@fun_Core_int_max_16.2211 = global ptr null
@fun_Core_int_coerceAtLeast.2213 = global ptr null
@fun_Core_int_coerceAtMost.2215 = global ptr null
@fun_Core_int_coerceIn.2217 = global ptr null
@fun_Core_int_pow.2219 = global ptr null
@fun_Core_int_pow_21.2221 = global ptr null
@fun_Core_int_pow_21_1_equals_then.2223 = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.2225 = global ptr null
@284 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.2227 = global ptr null
@285 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.2229 = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.2231 = global ptr null
@286 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.2233 = global ptr null
@287 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.2235 = global ptr null
@288 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.2237 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.2239 = global ptr null
@fun_Core_int_pow_21_1_equals_else.2241 = global ptr null
@289 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.2243 = global ptr null
@fun_Core_int_pow_21_4_equals_else.2245 = global ptr null
@290 = global ptr null
@fun_Core_int_pow_21_4_case-0_didNotMatch.2247 = global ptr null
@fun_Core_int_pow_21_4_case-1_matched.2249 = global ptr null
@fun_Core_int_pow_21_4_5.2251 = global ptr null
@fun_Core_int_pow_21_4_6.2253 = global ptr null
@"Examples:sqrt:sqrt:7" = global ptr null
@"Examples:sqrt:sqrt:9" = global ptr null
@"text_`fixedDecimal.is x` was not satisfied" = global ptr null
@"Examples:sqrt:sqrt:11" = global ptr null
@"Examples:sqrt:sqrt:19" = global ptr null
@"Examples:sqrt:sqrt:21" = global ptr null
@"text_`fixedDecimal.isNonNegative x` was not satisfied" = global ptr null
@"Examples:sqrt:sqrt:23" = global ptr null
@"Examples:sqrt:sqrt:31" = global ptr null
@"Examples:sqrt:sqrt:33" = global ptr null
@"text_`int.is precision` was not satisfied" = global ptr null
@"Examples:sqrt:sqrt:35" = global ptr null
@"Examples:sqrt:sqrt:43" = global ptr null
@"Examples:sqrt:sqrt:45" = global ptr null
@"text_`int.isNonNegative precision` was not satisfied" = global ptr null
@"Examples:sqrt:sqrt:47" = global ptr null
@"Examples:sqrt:sqrt:56" = global ptr null
@"Examples:sqrt:sqrt:58" = global ptr null
@"Examples:sqrt:sqrt:69" = global ptr null
@"Examples:sqrt:sqrt:78" = global ptr null
@"Examples:sqrt:sqrt:79" = global ptr null
@"Examples:sqrt:sqrt:81" = global ptr null
@"Examples:sqrt:sqrt:82:7" = global ptr null
@"Examples:sqrt:sqrt:82:16" = global ptr null
@"Examples:sqrt:sqrt:82:25" = global ptr null
@"Examples:sqrt:sqrt:82:28" = global ptr null
@"Examples:sqrt:sqrt:82:29" = global ptr null
@"Examples:sqrt:sqrt:82:38" = global ptr null
@"Examples:sqrt:sqrt:82:39" = global ptr null
@"Examples:sqrt:sqrt:82:41" = global ptr null
@"Examples:sqrt:sqrt:82:51" = global ptr null
@"Examples:sqrt:sqrt:82:55" = global ptr null
@"Examples:sqrt:sqrt:82:57:2" = global ptr null
@"Examples:sqrt:sqrt:82:58" = global ptr null
@"Examples:sqrt:sqrt:83" = global ptr null
@fun_Examples_sqrt_sqrt = global ptr null
@fun_Examples_sqrt_sqrt_82 = global ptr null
@fun_Examples_sqrt_sqrt_82_56 = global ptr null
@fun_Examples_sqrt_sqrt_82_57 = global ptr null
@"Examples:sqrt:main:10" = global ptr null
@"Examples:sqrt:main:11" = global ptr null
@num_65 = global ptr null
@"Examples:sqrt:main:14" = global ptr null
@"Examples:sqrt:main:23" = global ptr null
@"Examples:sqrt:main:46" = global ptr null
@"Examples:sqrt:main:47" = global ptr null
@"Examples:sqrt:main:48" = global ptr null
@"Examples:sqrt:main:49" = global ptr null
@"Examples:sqrt:main:51:0" = global ptr null
@"Examples:sqrt:main:52" = global ptr null
@"text_The root of 2 is " = global ptr null
@"Examples:sqrt:main:55" = global ptr null
@"Examples:sqrt:main:56" = global ptr null
@fun_Examples_sqrt_main = global ptr null
@fun_Examples_sqrt_main_50 = global ptr null
@fun_Examples_sqrt_main_51 = global ptr null
@tag_Main = global ptr null
@tag_Sqrt = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:10\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::fitsInRustU128:10", align 8
  %4 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::fitsInRustU128:16", align 8
  %6 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:5\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::fitsInRustU128:5", align 8
  %8 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:8\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::fitsInRustU128:8", align 8
  %10 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::functionRun:11", align 8
  %12 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::functionRun:16", align 8
  %14 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::functionRun:22", align 8
  %16 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::functionRun:5", align 8
  %18 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::getArgumentCount:11", align 8
  %20 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::getArgumentCount:5", align 8
  %22 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:1", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:11", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:14", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:19", align 8
  %30 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:25", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::ifElse:28", align 8
  %34 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::ifElse:33", align 8
  %36 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::ifElse:41", align 8
  %38 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::ifElse:5", align 8
  %40 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intAdd:11", align 8
  %42 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intAdd:18", align 8
  %44 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::intAdd:5", align 8
  %46 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitLength:11\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::intBitLength:11", align 8
  %48 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intBitLength:5\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::intBitLength:5", align 8
  %50 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::intBitwiseAnd:11", align 8
  %52 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:18\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::intBitwiseAnd:18", align 8
  %54 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseAnd:5\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::intBitwiseAnd:5", align 8
  %56 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseOr:11\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::intBitwiseOr:11", align 8
  %58 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseOr:18\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::intBitwiseOr:18", align 8
  %60 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intBitwiseOr:5\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::intBitwiseOr:5", align 8
  %62 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseXor:11\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::intBitwiseXor:11", align 8
  %64 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseXor:18\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::intBitwiseXor:18", align 8
  %66 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseXor:5\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::intBitwiseXor:5", align 8
  %68 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::intCompareTo:11", align 8
  %70 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::intCompareTo:18", align 8
  %72 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::intCompareTo:5", align 8
  %74 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:11\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::intDivideTruncating:11", align 8
  %76 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:17\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::intDivideTruncating:17", align 8
  %78 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:25\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::intDivideTruncating:25", align 8
  %80 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:32\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::intDivideTruncating:32", align 8
  %82 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::intDivideTruncating:5\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::intDivideTruncating:5", align 8
  %84 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:11\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::intModulo:11", align 8
  %86 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:17\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::intModulo:17", align 8
  %88 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:25\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Builtins::intModulo:25", align 8
  %90 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:32\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Builtins::intModulo:32", align 8
  %92 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intModulo:5\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Builtins::intModulo:5", align 8
  %94 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:11\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Builtins::intMultiply:11", align 8
  %96 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:18\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Builtins::intMultiply:18", align 8
  %98 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intMultiply:5\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Builtins::intMultiply:5", align 8
  %100 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intParse:11\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Builtins::intParse:11", align 8
  %102 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::intParse:5\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Builtins::intParse:5", align 8
  %104 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:11\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Builtins::intRemainder:11", align 8
  %106 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:17\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Builtins::intRemainder:17", align 8
  %108 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:25\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Builtins::intRemainder:25", align 8
  %110 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:32\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Builtins::intRemainder:32", align 8
  %112 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intRemainder:5\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Builtins::intRemainder:5", align 8
  %114 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:11\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Builtins::intShiftLeft:11", align 8
  %116 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:14\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Builtins::intShiftLeft:14", align 8
  %118 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:23\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Builtins::intShiftLeft:23", align 8
  %120 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:24\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Builtins::intShiftLeft:24", align 8
  %122 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::intShiftLeft:26:0\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Builtins::intShiftLeft:26:0", align 8
  %124 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:27\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Builtins::intShiftLeft:27", align 8
  %126 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:29\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Builtins::intShiftLeft:29", align 8
  %128 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:30\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Builtins::intShiftLeft:30", align 8
  %130 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:31\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Builtins::intShiftLeft:31", align 8
  %132 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:34\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Builtins::intShiftLeft:34", align 8
  %134 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:42\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Builtins::intShiftLeft:42", align 8
  %136 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:49\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Builtins::intShiftLeft:49", align 8
  %138 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intShiftLeft:5\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Builtins::intShiftLeft:5", align 8
  %140 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:11\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Builtins::intShiftRight:11", align 8
  %142 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:14\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Builtins::intShiftRight:14", align 8
  %144 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:23\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Builtins::intShiftRight:23", align 8
  %146 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:24\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Builtins::intShiftRight:24", align 8
  %148 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::intShiftRight:26:0\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Builtins::intShiftRight:26:0", align 8
  %150 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:27\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Builtins::intShiftRight:27", align 8
  %152 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:29\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Builtins::intShiftRight:29", align 8
  %154 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:30\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Builtins::intShiftRight:30", align 8
  %156 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:31\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Builtins::intShiftRight:31", align 8
  %158 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:34\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Builtins::intShiftRight:34", align 8
  %160 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:42\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Builtins::intShiftRight:42", align 8
  %162 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:49\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Builtins::intShiftRight:49", align 8
  %164 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftRight:5\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Builtins::intShiftRight:5", align 8
  %166 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:11\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Builtins::intSubtract:11", align 8
  %168 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Builtins::intSubtract:18", align 8
  %170 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Builtins::intSubtract:5", align 8
  %172 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:11\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  %174 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:18\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  %176 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:19\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  %178 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::isLessThanOrEqualTo:5\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  %180 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Builtins::isNonNegative:12", align 8
  %182 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Builtins::isNonNegative:13", align 8
  %184 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Builtins::isNonNegative:5", align 8
  %186 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listFilled:10\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Builtins::listFilled:10", align 8
  %188 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listFilled:17\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Builtins::listFilled:17", align 8
  %190 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listFilled:5\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Builtins::listFilled:5", align 8
  %192 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listFilled:8\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Builtins::listFilled:8", align 8
  %194 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Builtins::listGet:11", align 8
  %196 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Builtins::listGet:14", align 8
  %198 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Builtins::listGet:16", align 8
  %200 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:24\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Builtins::listGet:24", align 8
  %202 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Builtins::listGet:25", align 8
  %204 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Builtins::listGet:30", align 8
  %206 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Builtins::listGet:37", align 8
  %208 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::listGet:5\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Builtins::listGet:5", align 8
  %210 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:11\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Builtins::listInsert:11", align 8
  %212 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:14\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Builtins::listInsert:14", align 8
  %214 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:16\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Builtins::listInsert:16", align 8
  %216 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:24\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Builtins::listInsert:24", align 8
  %218 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:25\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Builtins::listInsert:25", align 8
  %220 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:27\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Builtins::listInsert:27", align 8
  %222 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:35\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Builtins::listInsert:35", align 8
  %224 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listInsert:5\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Builtins::listInsert:5", align 8
  %226 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Builtins::listLength:11", align 8
  %228 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Builtins::listLength:5", align 8
  %230 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:11\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Builtins::listRemoveAt:11", align 8
  %232 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:14\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Builtins::listRemoveAt:14", align 8
  %234 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:16\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Builtins::listRemoveAt:16", align 8
  %236 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:21\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Builtins::listRemoveAt:21", align 8
  %238 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:22\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Builtins::listRemoveAt:22", align 8
  %240 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:27\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Builtins::listRemoveAt:27", align 8
  %242 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:34\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Builtins::listRemoveAt:34", align 8
  %244 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listRemoveAt:5\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Builtins::listRemoveAt:5", align 8
  %246 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:11\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Builtins::listReplace:11", align 8
  %248 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:14\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Builtins::listReplace:14", align 8
  %250 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:16\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Builtins::listReplace:16", align 8
  %252 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:21\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Builtins::listReplace:21", align 8
  %254 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:22\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Builtins::listReplace:22", align 8
  %256 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:27\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Builtins::listReplace:27", align 8
  %258 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:35\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Builtins::listReplace:35", align 8
  %260 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listReplace:5\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Builtins::listReplace:5", align 8
  %262 = alloca i8, i64 16, align 1
  store [16 x i8] c"Builtins::not:1\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Builtins::not:1", align 8
  %264 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::print:11\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Builtins::print:11", align 8
  %266 = alloca i8, i64 18, align 1
  store [18 x i8] c"Builtins::print:5\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Builtins::print:5", align 8
  %268 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Builtins::structGet:12", align 8
  %270 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Builtins::structGet:21", align 8
  %272 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:22\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Builtins::structGet:22", align 8
  %274 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structGet:24:0\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Builtins::structGet:24:0", align 8
  %276 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:25\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Builtins::structGet:25", align 8
  %278 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:28\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Builtins::structGet:28", align 8
  %280 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:29\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Builtins::structGet:29", align 8
  %282 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structGet:31:0\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Builtins::structGet:31:0", align 8
  %284 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:32\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Builtins::structGet:32", align 8
  %286 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:34\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"Builtins::structGet:34", align 8
  %288 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:35\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"Builtins::structGet:35", align 8
  %290 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:36\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"Builtins::structGet:36", align 8
  %292 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:37\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"Builtins::structGet:37", align 8
  %294 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:38\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"Builtins::structGet:38", align 8
  %296 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:45\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"Builtins::structGet:45", align 8
  %298 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"Builtins::structGet:5", align 8
  %300 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::structGetKeys:11\00", ptr %300, align 1
  %301 = call ptr @make_candy_text(ptr %300)
  store ptr %301, ptr @"Builtins::structGetKeys:11", align 8
  %302 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::structGetKeys:5\00", ptr %302, align 1
  %303 = call ptr @make_candy_text(ptr %302)
  store ptr %303, ptr @"Builtins::structGetKeys:5", align 8
  %304 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::structHasKey:12\00", ptr %304, align 1
  %305 = call ptr @make_candy_text(ptr %304)
  store ptr %305, ptr @"Builtins::structHasKey:12", align 8
  %306 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structHasKey:5\00", ptr %306, align 1
  %307 = call ptr @make_candy_text(ptr %306)
  store ptr %307, ptr @"Builtins::structHasKey:5", align 8
  %308 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:11\00", ptr %308, align 1
  %309 = call ptr @make_candy_text(ptr %308)
  store ptr %309, ptr @"Builtins::tagGetValue:11", align 8
  %310 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:13\00", ptr %310, align 1
  %311 = call ptr @make_candy_text(ptr %310)
  store ptr %311, ptr @"Builtins::tagGetValue:13", align 8
  %312 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:19\00", ptr %312, align 1
  %313 = call ptr @make_candy_text(ptr %312)
  store ptr %313, ptr @"Builtins::tagGetValue:19", align 8
  %314 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagGetValue:5\00", ptr %314, align 1
  %315 = call ptr @make_candy_text(ptr %314)
  store ptr %315, ptr @"Builtins::tagGetValue:5", align 8
  %316 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagHasValue:11\00", ptr %316, align 1
  %317 = call ptr @make_candy_text(ptr %316)
  store ptr %317, ptr @"Builtins::tagHasValue:11", align 8
  %318 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagHasValue:5\00", ptr %318, align 1
  %319 = call ptr @make_candy_text(ptr %318)
  store ptr %319, ptr @"Builtins::tagHasValue:5", align 8
  %320 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::tagWithoutValue:11\00", ptr %320, align 1
  %321 = call ptr @make_candy_text(ptr %320)
  store ptr %321, ptr @"Builtins::tagWithoutValue:11", align 8
  %322 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::tagWithoutValue:5\00", ptr %322, align 1
  %323 = call ptr @make_candy_text(ptr %322)
  store ptr %323, ptr @"Builtins::tagWithoutValue:5", align 8
  %324 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textCharacters:11\00", ptr %324, align 1
  %325 = call ptr @make_candy_text(ptr %324)
  store ptr %325, ptr @"Builtins::textCharacters:11", align 8
  %326 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textCharacters:5\00", ptr %326, align 1
  %327 = call ptr @make_candy_text(ptr %326)
  store ptr %327, ptr @"Builtins::textCharacters:5", align 8
  %328 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:11\00", ptr %328, align 1
  %329 = call ptr @make_candy_text(ptr %328)
  store ptr %329, ptr @"Builtins::textConcatenate:11", align 8
  %330 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:18\00", ptr %330, align 1
  %331 = call ptr @make_candy_text(ptr %330)
  store ptr %331, ptr @"Builtins::textConcatenate:18", align 8
  %332 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textConcatenate:5\00", ptr %332, align 1
  %333 = call ptr @make_candy_text(ptr %332)
  store ptr %333, ptr @"Builtins::textConcatenate:5", align 8
  %334 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textContains:11\00", ptr %334, align 1
  %335 = call ptr @make_candy_text(ptr %334)
  store ptr %335, ptr @"Builtins::textContains:11", align 8
  %336 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textContains:18\00", ptr %336, align 1
  %337 = call ptr @make_candy_text(ptr %336)
  store ptr %337, ptr @"Builtins::textContains:18", align 8
  %338 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textContains:5\00", ptr %338, align 1
  %339 = call ptr @make_candy_text(ptr %338)
  store ptr %339, ptr @"Builtins::textContains:5", align 8
  %340 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textEndsWith:11\00", ptr %340, align 1
  %341 = call ptr @make_candy_text(ptr %340)
  store ptr %341, ptr @"Builtins::textEndsWith:11", align 8
  %342 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textEndsWith:18\00", ptr %342, align 1
  %343 = call ptr @make_candy_text(ptr %342)
  store ptr %343, ptr @"Builtins::textEndsWith:18", align 8
  %344 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textEndsWith:5\00", ptr %344, align 1
  %345 = call ptr @make_candy_text(ptr %344)
  store ptr %345, ptr @"Builtins::textEndsWith:5", align 8
  %346 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textFromUtf8:11\00", ptr %346, align 1
  %347 = call ptr @make_candy_text(ptr %346)
  store ptr %347, ptr @"Builtins::textFromUtf8:11", align 8
  %348 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textFromUtf8:5\00", ptr %348, align 1
  %349 = call ptr @make_candy_text(ptr %348)
  store ptr %349, ptr @"Builtins::textFromUtf8:5", align 8
  %350 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:11\00", ptr %350, align 1
  %351 = call ptr @make_candy_text(ptr %350)
  store ptr %351, ptr @"Builtins::textGetRange:11", align 8
  %352 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:14\00", ptr %352, align 1
  %353 = call ptr @make_candy_text(ptr %352)
  store ptr %353, ptr @"Builtins::textGetRange:14", align 8
  %354 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:16\00", ptr %354, align 1
  %355 = call ptr @make_candy_text(ptr %354)
  store ptr %355, ptr @"Builtins::textGetRange:16", align 8
  %356 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:24\00", ptr %356, align 1
  %357 = call ptr @make_candy_text(ptr %356)
  store ptr %357, ptr @"Builtins::textGetRange:24", align 8
  %358 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:25\00", ptr %358, align 1
  %359 = call ptr @make_candy_text(ptr %358)
  store ptr %359, ptr @"Builtins::textGetRange:25", align 8
  %360 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:27\00", ptr %360, align 1
  %361 = call ptr @make_candy_text(ptr %360)
  store ptr %361, ptr @"Builtins::textGetRange:27", align 8
  %362 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:33\00", ptr %362, align 1
  %363 = call ptr @make_candy_text(ptr %362)
  store ptr %363, ptr @"Builtins::textGetRange:33", align 8
  %364 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:36\00", ptr %364, align 1
  %365 = call ptr @make_candy_text(ptr %364)
  store ptr %365, ptr @"Builtins::textGetRange:36", align 8
  %366 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:38\00", ptr %366, align 1
  %367 = call ptr @make_candy_text(ptr %366)
  store ptr %367, ptr @"Builtins::textGetRange:38", align 8
  %368 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:46\00", ptr %368, align 1
  %369 = call ptr @make_candy_text(ptr %368)
  store ptr %369, ptr @"Builtins::textGetRange:46", align 8
  %370 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:47\00", ptr %370, align 1
  %371 = call ptr @make_candy_text(ptr %370)
  store ptr %371, ptr @"Builtins::textGetRange:47", align 8
  %372 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:49\00", ptr %372, align 1
  %373 = call ptr @make_candy_text(ptr %372)
  store ptr %373, ptr @"Builtins::textGetRange:49", align 8
  %374 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textGetRange:5\00", ptr %374, align 1
  %375 = call ptr @make_candy_text(ptr %374)
  store ptr %375, ptr @"Builtins::textGetRange:5", align 8
  %376 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:53\00", ptr %376, align 1
  %377 = call ptr @make_candy_text(ptr %376)
  store ptr %377, ptr @"Builtins::textGetRange:53", align 8
  %378 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:55\00", ptr %378, align 1
  %379 = call ptr @make_candy_text(ptr %378)
  store ptr %379, ptr @"Builtins::textGetRange:55", align 8
  %380 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:63\00", ptr %380, align 1
  %381 = call ptr @make_candy_text(ptr %380)
  store ptr %381, ptr @"Builtins::textGetRange:63", align 8
  %382 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textIsEmpty:11\00", ptr %382, align 1
  %383 = call ptr @make_candy_text(ptr %382)
  store ptr %383, ptr @"Builtins::textIsEmpty:11", align 8
  %384 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textIsEmpty:5\00", ptr %384, align 1
  %385 = call ptr @make_candy_text(ptr %384)
  store ptr %385, ptr @"Builtins::textIsEmpty:5", align 8
  %386 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textLength:11\00", ptr %386, align 1
  %387 = call ptr @make_candy_text(ptr %386)
  store ptr %387, ptr @"Builtins::textLength:11", align 8
  %388 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::textLength:5\00", ptr %388, align 1
  %389 = call ptr @make_candy_text(ptr %388)
  store ptr %389, ptr @"Builtins::textLength:5", align 8
  %390 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:11\00", ptr %390, align 1
  %391 = call ptr @make_candy_text(ptr %390)
  store ptr %391, ptr @"Builtins::textStartsWith:11", align 8
  %392 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:18\00", ptr %392, align 1
  %393 = call ptr @make_candy_text(ptr %392)
  store ptr %393, ptr @"Builtins::textStartsWith:18", align 8
  %394 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textStartsWith:5\00", ptr %394, align 1
  %395 = call ptr @make_candy_text(ptr %394)
  store ptr %395, ptr @"Builtins::textStartsWith:5", align 8
  %396 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textTrimEnd:11\00", ptr %396, align 1
  %397 = call ptr @make_candy_text(ptr %396)
  store ptr %397, ptr @"Builtins::textTrimEnd:11", align 8
  %398 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textTrimEnd:5\00", ptr %398, align 1
  %399 = call ptr @make_candy_text(ptr %398)
  store ptr %399, ptr @"Builtins::textTrimEnd:5", align 8
  %400 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textTrimStart:11\00", ptr %400, align 1
  %401 = call ptr @make_candy_text(ptr %400)
  store ptr %401, ptr @"Builtins::textTrimStart:11", align 8
  %402 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textTrimStart:5\00", ptr %402, align 1
  %403 = call ptr @make_candy_text(ptr %402)
  store ptr %403, ptr @"Builtins::textTrimStart:5", align 8
  %404 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %404, align 1
  %405 = call ptr @make_candy_text(ptr %404)
  store ptr %405, ptr @"Builtins::toDebugText:5", align 8
  %406 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %406, align 1
  %407 = call ptr @make_candy_text(ptr %406)
  store ptr %407, ptr @"Builtins::typeIs:19", align 8
  %408 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %408, align 1
  %409 = call ptr @make_candy_text(ptr %408)
  store ptr %409, ptr @"Builtins::typeIs:25", align 8
  %410 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %410, align 1
  %411 = call ptr @make_candy_text(ptr %410)
  store ptr %411, ptr @"Builtins::typeOf:5", align 8
  %412 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:equality:17\00", ptr %412, align 1
  %413 = call ptr @make_candy_text(ptr %412)
  store ptr %413, ptr @"Core:equality:17", align 8
  %414 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %414, align 1
  %415 = call ptr @make_candy_text(ptr %414)
  store ptr %415, ptr @"anonymous:$generated::needs", align 8
  %416 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %416, ptr @fun_candy_builtin_equals, align 8
  %417 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %417, ptr @fun_candy_builtin_get_argument_count, align 8
  %418 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %418, ptr @fun_candy_builtin_if_else, align 8
  %419 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %419, ptr @fun_candy_builtin_int_add, align 8
  %420 = call ptr @make_candy_function(ptr @candy_builtin_int_bit_length, ptr null, i64 0)
  store ptr %420, ptr @fun_candy_builtin_int_bit_length, align 8
  %421 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_and, ptr null, i64 0)
  store ptr %421, ptr @fun_candy_builtin_int_bitwise_and, align 8
  %422 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_or, ptr null, i64 0)
  store ptr %422, ptr @fun_candy_builtin_int_bitwise_or, align 8
  %423 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_xor, ptr null, i64 0)
  store ptr %423, ptr @fun_candy_builtin_int_bitwise_xor, align 8
  %424 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %424, ptr @fun_candy_builtin_int_compare_to, align 8
  %425 = call ptr @make_candy_function(ptr @candy_builtin_int_divide_truncating, ptr null, i64 0)
  store ptr %425, ptr @fun_candy_builtin_int_divide_truncating, align 8
  %426 = call ptr @make_candy_function(ptr @candy_builtin_int_modulo, ptr null, i64 0)
  store ptr %426, ptr @fun_candy_builtin_int_modulo, align 8
  %427 = call ptr @make_candy_function(ptr @candy_builtin_int_multiply, ptr null, i64 0)
  store ptr %427, ptr @fun_candy_builtin_int_multiply, align 8
  %428 = call ptr @make_candy_function(ptr @candy_builtin_int_parse, ptr null, i64 0)
  store ptr %428, ptr @fun_candy_builtin_int_parse, align 8
  %429 = call ptr @make_candy_function(ptr @candy_builtin_int_remainder, ptr null, i64 0)
  store ptr %429, ptr @fun_candy_builtin_int_remainder, align 8
  %430 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_left, ptr null, i64 0)
  store ptr %430, ptr @fun_candy_builtin_int_shift_left, align 8
  %431 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_right, ptr null, i64 0)
  store ptr %431, ptr @fun_candy_builtin_int_shift_right, align 8
  %432 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %432, ptr @fun_candy_builtin_int_subtract, align 8
  %433 = call ptr @make_candy_function(ptr @candy_builtin_list_filled, ptr null, i64 0)
  store ptr %433, ptr @fun_candy_builtin_list_filled, align 8
  %434 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %434, ptr @fun_candy_builtin_list_get, align 8
  %435 = call ptr @make_candy_function(ptr @candy_builtin_list_insert, ptr null, i64 0)
  store ptr %435, ptr @fun_candy_builtin_list_insert, align 8
  %436 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %436, ptr @fun_candy_builtin_list_length, align 8
  %437 = call ptr @make_candy_function(ptr @candy_builtin_list_remove_at, ptr null, i64 0)
  store ptr %437, ptr @fun_candy_builtin_list_remove_at, align 8
  %438 = call ptr @make_candy_function(ptr @candy_builtin_list_replace, ptr null, i64 0)
  store ptr %438, ptr @fun_candy_builtin_list_replace, align 8
  %439 = call ptr @make_candy_function(ptr @candy_builtin_print, ptr null, i64 0)
  store ptr %439, ptr @fun_candy_builtin_print, align 8
  %440 = call ptr @make_candy_function(ptr @candy_builtin_struct_get.1, ptr null, i64 0)
  store ptr %440, ptr @fun_candy_builtin_struct_get, align 8
  %441 = call ptr @make_candy_function(ptr @candy_builtin_struct_get_keys, ptr null, i64 0)
  store ptr %441, ptr @fun_candy_builtin_struct_get_keys, align 8
  %442 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %442, ptr @fun_candy_builtin_struct_has_key, align 8
  %443 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %443, ptr @fun_candy_builtin_tag_get_value, align 8
  %444 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %444, ptr @fun_candy_builtin_tag_has_value, align 8
  %445 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %445, ptr @fun_candy_builtin_tag_without_value, align 8
  %446 = call ptr @make_candy_function(ptr @candy_builtin_text_characters, ptr null, i64 0)
  store ptr %446, ptr @fun_candy_builtin_text_characters, align 8
  %447 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %447, ptr @fun_candy_builtin_text_concatenate, align 8
  %448 = call ptr @make_candy_function(ptr @candy_builtin_text_contains, ptr null, i64 0)
  store ptr %448, ptr @fun_candy_builtin_text_contains, align 8
  %449 = call ptr @make_candy_function(ptr @candy_builtin_text_ends_with, ptr null, i64 0)
  store ptr %449, ptr @fun_candy_builtin_text_ends_with, align 8
  %450 = call ptr @make_candy_function(ptr @candy_builtin_text_from_utf8, ptr null, i64 0)
  store ptr %450, ptr @fun_candy_builtin_text_from_utf8, align 8
  %451 = call ptr @make_candy_function(ptr @candy_builtin_text_get_range, ptr null, i64 0)
  store ptr %451, ptr @fun_candy_builtin_text_get_range, align 8
  %452 = call ptr @make_candy_function(ptr @candy_builtin_text_is_empty, ptr null, i64 0)
  store ptr %452, ptr @fun_candy_builtin_text_is_empty, align 8
  %453 = call ptr @make_candy_function(ptr @candy_builtin_text_length, ptr null, i64 0)
  store ptr %453, ptr @fun_candy_builtin_text_length, align 8
  %454 = call ptr @make_candy_function(ptr @candy_builtin_text_starts_with, ptr null, i64 0)
  store ptr %454, ptr @fun_candy_builtin_text_starts_with, align 8
  %455 = call ptr @make_candy_function(ptr @candy_builtin_text_trim_end, ptr null, i64 0)
  store ptr %455, ptr @fun_candy_builtin_text_trim_end, align 8
  %456 = call ptr @make_candy_function(ptr @candy_builtin_text_trim_start, ptr null, i64 0)
  store ptr %456, ptr @fun_candy_builtin_text_trim_start, align 8
  %457 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %457, ptr @fun_candy_builtin_to_debug_text, align 8
  %458 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %458, ptr @fun_candy_builtin_type_of, align 8
  %459 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %459, align 1
  %460 = call ptr @make_candy_tag(ptr %459, ptr null)
  store ptr %460, ptr @tag_Equal, align 8
  %461 = alloca i8, i64 7, align 1
  store [7 x i8] c"Equals\00", ptr %461, align 1
  %462 = call ptr @make_candy_tag(ptr %461, ptr null)
  store ptr %462, ptr @tag_Equals, align 8
  %463 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %463, align 1
  %464 = call ptr @make_candy_tag(ptr %463, ptr null)
  store ptr %464, ptr @tag_False, align 8
  %465 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %465, align 1
  %466 = call ptr @make_candy_tag(ptr %465, ptr null)
  store ptr %466, ptr @tag_Function, align 8
  %467 = alloca i8, i64 12, align 1
  store [12 x i8] c"FunctionRun\00", ptr %467, align 1
  %468 = call ptr @make_candy_tag(ptr %467, ptr null)
  store ptr %468, ptr @tag_FunctionRun, align 8
  %469 = alloca i8, i64 17, align 1
  store [17 x i8] c"GetArgumentCount\00", ptr %469, align 1
  %470 = call ptr @make_candy_tag(ptr %469, ptr null)
  store ptr %470, ptr @tag_GetArgumentCount, align 8
  %471 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %471, align 1
  %472 = call ptr @make_candy_tag(ptr %471, ptr null)
  store ptr %472, ptr @tag_Greater, align 8
  %473 = alloca i8, i64 7, align 1
  store [7 x i8] c"IfElse\00", ptr %473, align 1
  %474 = call ptr @make_candy_tag(ptr %473, ptr null)
  store ptr %474, ptr @tag_IfElse, align 8
  %475 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %475, align 1
  %476 = call ptr @make_candy_tag(ptr %475, ptr null)
  store ptr %476, ptr @tag_Int, align 8
  %477 = alloca i8, i64 7, align 1
  store [7 x i8] c"IntAdd\00", ptr %477, align 1
  %478 = call ptr @make_candy_tag(ptr %477, ptr null)
  store ptr %478, ptr @tag_IntAdd, align 8
  %479 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntBitLength\00", ptr %479, align 1
  %480 = call ptr @make_candy_tag(ptr %479, ptr null)
  store ptr %480, ptr @tag_IntBitLength, align 8
  %481 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntBitwiseAnd\00", ptr %481, align 1
  %482 = call ptr @make_candy_tag(ptr %481, ptr null)
  store ptr %482, ptr @tag_IntBitwiseAnd, align 8
  %483 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntBitwiseOr\00", ptr %483, align 1
  %484 = call ptr @make_candy_tag(ptr %483, ptr null)
  store ptr %484, ptr @tag_IntBitwiseOr, align 8
  %485 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntBitwiseXor\00", ptr %485, align 1
  %486 = call ptr @make_candy_tag(ptr %485, ptr null)
  store ptr %486, ptr @tag_IntBitwiseXor, align 8
  %487 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntCompareTo\00", ptr %487, align 1
  %488 = call ptr @make_candy_tag(ptr %487, ptr null)
  store ptr %488, ptr @tag_IntCompareTo, align 8
  %489 = alloca i8, i64 20, align 1
  store [20 x i8] c"IntDivideTruncating\00", ptr %489, align 1
  %490 = call ptr @make_candy_tag(ptr %489, ptr null)
  store ptr %490, ptr @tag_IntDivideTruncating, align 8
  %491 = alloca i8, i64 10, align 1
  store [10 x i8] c"IntModulo\00", ptr %491, align 1
  %492 = call ptr @make_candy_tag(ptr %491, ptr null)
  store ptr %492, ptr @tag_IntModulo, align 8
  %493 = alloca i8, i64 12, align 1
  store [12 x i8] c"IntMultiply\00", ptr %493, align 1
  %494 = call ptr @make_candy_tag(ptr %493, ptr null)
  store ptr %494, ptr @tag_IntMultiply, align 8
  %495 = alloca i8, i64 9, align 1
  store [9 x i8] c"IntParse\00", ptr %495, align 1
  %496 = call ptr @make_candy_tag(ptr %495, ptr null)
  store ptr %496, ptr @tag_IntParse, align 8
  %497 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntRemainder\00", ptr %497, align 1
  %498 = call ptr @make_candy_tag(ptr %497, ptr null)
  store ptr %498, ptr @tag_IntRemainder, align 8
  %499 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntShiftLeft\00", ptr %499, align 1
  %500 = call ptr @make_candy_tag(ptr %499, ptr null)
  store ptr %500, ptr @tag_IntShiftLeft, align 8
  %501 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntShiftRight\00", ptr %501, align 1
  %502 = call ptr @make_candy_tag(ptr %501, ptr null)
  store ptr %502, ptr @tag_IntShiftRight, align 8
  %503 = alloca i8, i64 12, align 1
  store [12 x i8] c"IntSubtract\00", ptr %503, align 1
  %504 = call ptr @make_candy_tag(ptr %503, ptr null)
  store ptr %504, ptr @tag_IntSubtract, align 8
  %505 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %505, align 1
  %506 = call ptr @make_candy_tag(ptr %505, ptr null)
  store ptr %506, ptr @tag_Less, align 8
  %507 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %507, align 1
  %508 = call ptr @make_candy_tag(ptr %507, ptr null)
  store ptr %508, ptr @tag_List, align 8
  %509 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListFilled\00", ptr %509, align 1
  %510 = call ptr @make_candy_tag(ptr %509, ptr null)
  store ptr %510, ptr @tag_ListFilled, align 8
  %511 = alloca i8, i64 8, align 1
  store [8 x i8] c"ListGet\00", ptr %511, align 1
  %512 = call ptr @make_candy_tag(ptr %511, ptr null)
  store ptr %512, ptr @tag_ListGet, align 8
  %513 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListInsert\00", ptr %513, align 1
  %514 = call ptr @make_candy_tag(ptr %513, ptr null)
  store ptr %514, ptr @tag_ListInsert, align 8
  %515 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListLength\00", ptr %515, align 1
  %516 = call ptr @make_candy_tag(ptr %515, ptr null)
  store ptr %516, ptr @tag_ListLength, align 8
  %517 = alloca i8, i64 13, align 1
  store [13 x i8] c"ListRemoveAt\00", ptr %517, align 1
  %518 = call ptr @make_candy_tag(ptr %517, ptr null)
  store ptr %518, ptr @tag_ListRemoveAt, align 8
  %519 = alloca i8, i64 12, align 1
  store [12 x i8] c"ListReplace\00", ptr %519, align 1
  %520 = call ptr @make_candy_tag(ptr %519, ptr null)
  store ptr %520, ptr @tag_ListReplace, align 8
  %521 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %521, align 1
  %522 = call ptr @make_candy_tag(ptr %521, ptr null)
  store ptr %522, ptr @tag_Match, align 8
  %523 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %523, align 1
  %524 = call ptr @make_candy_tag(ptr %523, ptr null)
  store ptr %524, ptr @tag_NoMatch, align 8
  %525 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %525, align 1
  %526 = call ptr @make_candy_tag(ptr %525, ptr null)
  store ptr %526, ptr @tag_Nothing, align 8
  %527 = alloca i8, i64 6, align 1
  store [6 x i8] c"Print\00", ptr %527, align 1
  %528 = call ptr @make_candy_tag(ptr %527, ptr null)
  store ptr %528, ptr @tag_Print, align 8
  %529 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %529, align 1
  %530 = call ptr @make_candy_tag(ptr %529, ptr null)
  store ptr %530, ptr @tag_Struct, align 8
  %531 = alloca i8, i64 10, align 1
  store [10 x i8] c"StructGet\00", ptr %531, align 1
  %532 = call ptr @make_candy_tag(ptr %531, ptr null)
  store ptr %532, ptr @tag_StructGet, align 8
  %533 = alloca i8, i64 14, align 1
  store [14 x i8] c"StructGetKeys\00", ptr %533, align 1
  %534 = call ptr @make_candy_tag(ptr %533, ptr null)
  store ptr %534, ptr @tag_StructGetKeys, align 8
  %535 = alloca i8, i64 13, align 1
  store [13 x i8] c"StructHasKey\00", ptr %535, align 1
  %536 = call ptr @make_candy_tag(ptr %535, ptr null)
  store ptr %536, ptr @tag_StructHasKey, align 8
  %537 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %537, align 1
  %538 = call ptr @make_candy_tag(ptr %537, ptr null)
  store ptr %538, ptr @tag_Tag, align 8
  %539 = alloca i8, i64 12, align 1
  store [12 x i8] c"TagGetValue\00", ptr %539, align 1
  %540 = call ptr @make_candy_tag(ptr %539, ptr null)
  store ptr %540, ptr @tag_TagGetValue, align 8
  %541 = alloca i8, i64 12, align 1
  store [12 x i8] c"TagHasValue\00", ptr %541, align 1
  %542 = call ptr @make_candy_tag(ptr %541, ptr null)
  store ptr %542, ptr @tag_TagHasValue, align 8
  %543 = alloca i8, i64 16, align 1
  store [16 x i8] c"TagWithoutValue\00", ptr %543, align 1
  %544 = call ptr @make_candy_tag(ptr %543, ptr null)
  store ptr %544, ptr @tag_TagWithoutValue, align 8
  %545 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %545, align 1
  %546 = call ptr @make_candy_tag(ptr %545, ptr null)
  store ptr %546, ptr @tag_Text, align 8
  %547 = alloca i8, i64 15, align 1
  store [15 x i8] c"TextCharacters\00", ptr %547, align 1
  %548 = call ptr @make_candy_tag(ptr %547, ptr null)
  store ptr %548, ptr @tag_TextCharacters, align 8
  %549 = alloca i8, i64 16, align 1
  store [16 x i8] c"TextConcatenate\00", ptr %549, align 1
  %550 = call ptr @make_candy_tag(ptr %549, ptr null)
  store ptr %550, ptr @tag_TextConcatenate, align 8
  %551 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextContains\00", ptr %551, align 1
  %552 = call ptr @make_candy_tag(ptr %551, ptr null)
  store ptr %552, ptr @tag_TextContains, align 8
  %553 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextEndsWith\00", ptr %553, align 1
  %554 = call ptr @make_candy_tag(ptr %553, ptr null)
  store ptr %554, ptr @tag_TextEndsWith, align 8
  %555 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextFromUtf8\00", ptr %555, align 1
  %556 = call ptr @make_candy_tag(ptr %555, ptr null)
  store ptr %556, ptr @tag_TextFromUtf8, align 8
  %557 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextGetRange\00", ptr %557, align 1
  %558 = call ptr @make_candy_tag(ptr %557, ptr null)
  store ptr %558, ptr @tag_TextGetRange, align 8
  %559 = alloca i8, i64 12, align 1
  store [12 x i8] c"TextIsEmpty\00", ptr %559, align 1
  %560 = call ptr @make_candy_tag(ptr %559, ptr null)
  store ptr %560, ptr @tag_TextIsEmpty, align 8
  %561 = alloca i8, i64 11, align 1
  store [11 x i8] c"TextLength\00", ptr %561, align 1
  %562 = call ptr @make_candy_tag(ptr %561, ptr null)
  store ptr %562, ptr @tag_TextLength, align 8
  %563 = alloca i8, i64 15, align 1
  store [15 x i8] c"TextStartsWith\00", ptr %563, align 1
  %564 = call ptr @make_candy_tag(ptr %563, ptr null)
  store ptr %564, ptr @tag_TextStartsWith, align 8
  %565 = alloca i8, i64 12, align 1
  store [12 x i8] c"TextTrimEnd\00", ptr %565, align 1
  %566 = call ptr @make_candy_tag(ptr %565, ptr null)
  store ptr %566, ptr @tag_TextTrimEnd, align 8
  %567 = alloca i8, i64 14, align 1
  store [14 x i8] c"TextTrimStart\00", ptr %567, align 1
  %568 = call ptr @make_candy_tag(ptr %567, ptr null)
  store ptr %568, ptr @tag_TextTrimStart, align 8
  %569 = alloca i8, i64 12, align 1
  store [12 x i8] c"ToDebugText\00", ptr %569, align 1
  %570 = call ptr @make_candy_tag(ptr %569, ptr null)
  store ptr %570, ptr @tag_ToDebugText, align 8
  %571 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %571, align 1
  %572 = call ptr @make_candy_tag(ptr %571, ptr null)
  store ptr %572, ptr @tag_True, align 8
  %573 = alloca i8, i64 7, align 1
  store [7 x i8] c"TypeOf\00", ptr %573, align 1
  %574 = call ptr @make_candy_tag(ptr %573, ptr null)
  store ptr %574, ptr @tag_TypeOf, align 8
  %575 = call ptr @make_candy_int(i64 0)
  store ptr %575, ptr @num_0, align 8
  %576 = call ptr @make_candy_int(i64 1)
  store ptr %576, ptr @num_1, align 8
  %577 = call ptr @make_candy_int(i64 9223372036854775807)
  store ptr %577, ptr @num_340282366920938463463374607431768211455, align 8
  %578 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %578, align 1
  %579 = call ptr @make_candy_text(ptr %578)
  store ptr %579, ptr @text_., align 8
  %580 = alloca i8, i64 46, align 1
  store [46 x i8] c". You might want to call `shiftLeft` instead.\00", ptr %580, align 1
  %581 = call ptr @make_candy_text(ptr %580)
  store ptr %581, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %582 = alloca i8, i64 47, align 1
  store [47 x i8] c". You might want to call `shiftRight` instead.\00", ptr %582, align 1
  %583 = call ptr @make_candy_text(ptr %582)
  store ptr %583, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  %584 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Equal, got \00", ptr %584, align 1
  %585 = call ptr @make_candy_text(ptr %584)
  store ptr %585, ptr @"text_Expected Equal, got ", align 8
  %586 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %586, align 1
  %587 = call ptr @make_candy_text(ptr %586)
  store ptr %587, ptr @"text_Expected False, got ", align 8
  %588 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected Greater, got \00", ptr %588, align 1
  %589 = call ptr @make_candy_text(ptr %588)
  store ptr %589, ptr @"text_Expected Greater, got ", align 8
  %590 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected Less, got \00", ptr %590, align 1
  %591 = call ptr @make_candy_text(ptr %590)
  store ptr %591, ptr @"text_Expected Less, got ", align 8
  %592 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %592, align 1
  %593 = call ptr @make_candy_text(ptr %592)
  store ptr %593, ptr @"text_Expected True, got ", align 8
  %594 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %594, align 1
  %595 = call ptr @make_candy_text(ptr %594)
  store ptr %595, ptr @"text_Expected a Tag, got `", align 8
  %596 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %596, align 1
  %597 = call ptr @make_candy_text(ptr %596)
  store ptr %597, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %598 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %598, align 1
  %599 = call ptr @make_candy_text(ptr %598)
  store ptr %599, ptr @"text_No case matched the given expression.", align 8
  %600 = alloca i8, i64 43, align 1
  store [43 x i8] c"Shifts by that much are not yet supported.\00", ptr %600, align 1
  %601 = call ptr @make_candy_text(ptr %600)
  store ptr %601, ptr @"text_Shifts by that much are not yet supported.", align 8
  %602 = alloca i8, i64 9, align 1
  store [9 x i8] c"Struct `\00", ptr %602, align 1
  %603 = call ptr @make_candy_text(ptr %602)
  store ptr %603, ptr @"text_Struct `", align 8
  %604 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %604, align 1
  %605 = call ptr @make_candy_text(ptr %604)
  store ptr %605, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %606 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %606, align 1
  %607 = call ptr @make_candy_text(ptr %606)
  store ptr %607, ptr @"text_The `reason` must be a text.", align 8
  %608 = alloca i8, i64 33, align 1
  store [33 x i8] c"The shift `amount` is negative: \00", ptr %608, align 1
  %609 = call ptr @make_candy_text(ptr %608)
  store ptr %609, ptr @"text_The shift `amount` is negative: ", align 8
  %610 = alloca i8, i64 26, align 1
  store [26 x i8] c"You can't divide by zero.\00", ptr %610, align 1
  %611 = call ptr @make_candy_text(ptr %610)
  store ptr %611, ptr @"text_You can't divide by zero.", align 8
  %612 = alloca i8, i64 23, align 1
  store [23 x i8] c"` is missing the key `\00", ptr %612, align 1
  %613 = call ptr @make_candy_text(ptr %612)
  store ptr %613, ptr @"text_` is missing the key `", align 8
  %614 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %614, align 1
  %615 = call ptr @make_candy_text(ptr %614)
  store ptr %615, ptr @"text_`.", align 8
  %616 = alloca i8, i64 26, align 1
  store [26 x i8] c"`False` was not satisfied\00", ptr %616, align 1
  %617 = call ptr @make_candy_text(ptr %616)
  store ptr %617, ptr @"text_`False` was not satisfied", align 8
  %618 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %618, align 1
  %619 = call ptr @make_candy_text(ptr %618)
  store ptr %619, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %620 = alloca i8, i64 36, align 1
  store [36 x i8] c"`a | typeIs Text` was not satisfied\00", ptr %620, align 1
  %621 = call ptr @make_candy_text(ptr %620)
  store ptr %621, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %622 = alloca i8, i64 40, align 1
  store [40 x i8] c"`amount | typeIs Int` was not satisfied\00", ptr %622, align 1
  %623 = call ptr @make_candy_text(ptr %622)
  store ptr %623, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %624 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %624, align 1
  %625 = call ptr @make_candy_text(ptr %624)
  store ptr %625, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %626 = alloca i8, i64 36, align 1
  store [36 x i8] c"`b | typeIs Text` was not satisfied\00", ptr %626, align 1
  %627 = call ptr @make_candy_text(ptr %626)
  store ptr %627, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %628 = alloca i8, i64 40, align 1
  store [40 x i8] c"`bytes | typeIs List` was not satisfied\00", ptr %628, align 1
  %629 = call ptr @make_candy_text(ptr %628)
  store ptr %629, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  %630 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %630, align 1
  %631 = call ptr @make_candy_text(ptr %630)
  store ptr %631, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %632 = alloca i8, i64 42, align 1
  store [42 x i8] c"`dividend | typeIs Int` was not satisfied\00", ptr %632, align 1
  %633 = call ptr @make_candy_text(ptr %632)
  store ptr %633, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %634 = alloca i8, i64 41, align 1
  store [41 x i8] c"`divisor | typeIs Int` was not satisfied\00", ptr %634, align 1
  %635 = call ptr @make_candy_text(ptr %634)
  store ptr %635, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %636 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %636, align 1
  %637 = call ptr @make_candy_text(ptr %636)
  store ptr %637, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %638 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %638, align 1
  %639 = call ptr @make_candy_text(ptr %638)
  store ptr %639, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %640 = alloca i8, i64 79, align 1
  store [77 x i8] c"`endExclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %640, align 1
  %641 = call ptr @make_candy_text(ptr %640)
  store ptr %641, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %642 = alloca i8, i64 49, align 1
  store [49 x i8] c"`endExclusive | isNonNegative` was not satisfied\00", ptr %642, align 1
  %643 = call ptr @make_candy_text(ptr %642)
  store ptr %643, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %644 = alloca i8, i64 46, align 1
  store [46 x i8] c"`endExclusive | typeIs Int` was not satisfied\00", ptr %644, align 1
  %645 = call ptr @make_candy_text(ptr %644)
  store ptr %645, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %646 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorA | typeIs Int` was not satisfied\00", ptr %646, align 1
  %647 = call ptr @make_candy_text(ptr %646)
  store ptr %647, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %648 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorB | typeIs Int` was not satisfied\00", ptr %648, align 1
  %649 = call ptr @make_candy_text(ptr %648)
  store ptr %649, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %650 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %650, align 1
  %651 = call ptr @make_candy_text(ptr %650)
  store ptr %651, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %652 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %652, align 1
  %653 = call ptr @make_candy_text(ptr %652)
  store ptr %653, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %654 = alloca i8, i64 75, align 1
  store [75 x i8] c"`index | intCompareTo (list | listLength) | equals Less` was not satisfied\00", ptr %654, align 1
  %655 = call ptr @make_candy_text(ptr %654)
  store ptr %655, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %656 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %656, align 1
  %657 = call ptr @make_candy_text(ptr %656)
  store ptr %657, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %658 = alloca i8, i64 72, align 1
  store [70 x i8] c"`index | isLessThanOrEqualTo (list | (.listLength)` was not satisfied\00", ptr %658, align 1
  %659 = call ptr @make_candy_text(ptr %658)
  store ptr %659, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %660 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %660, align 1
  %661 = call ptr @make_candy_text(ptr %660)
  store ptr %661, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %662 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %662, align 1
  %663 = call ptr @make_candy_text(ptr %662)
  store ptr %663, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %664 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %664, align 1
  %665 = call ptr @make_candy_text(ptr %664)
  store ptr %665, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %666 = alloca i8, i64 43, align 1
  store [43 x i8] c"`length | isNonNegative` was not satisfied\00", ptr %666, align 1
  %667 = call ptr @make_candy_text(ptr %666)
  store ptr %667, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  %668 = alloca i8, i64 40, align 1
  store [40 x i8] c"`length | typeIs Int` was not satisfied\00", ptr %668, align 1
  %669 = call ptr @make_candy_text(ptr %668)
  store ptr %669, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  %670 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %670, align 1
  %671 = call ptr @make_candy_text(ptr %670)
  store ptr %671, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %672 = alloca i8, i64 42, align 1
  store [42 x i8] c"`message | typeIs Text` was not satisfied\00", ptr %672, align 1
  %673 = call ptr @make_candy_text(ptr %672)
  store ptr %673, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  %674 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %674, align 1
  %675 = call ptr @make_candy_text(ptr %674)
  store ptr %675, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %676 = alloca i8, i64 42, align 1
  store [42 x i8] c"`pattern | typeIs Text` was not satisfied\00", ptr %676, align 1
  %677 = call ptr @make_candy_text(ptr %676)
  store ptr %677, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  %678 = alloca i8, i64 41, align 1
  store [41 x i8] c"`prefix | typeIs Text` was not satisfied\00", ptr %678, align 1
  %679 = call ptr @make_candy_text(ptr %678)
  store ptr %679, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %680 = alloca i8, i64 81, align 1
  store [79 x i8] c"`startInclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %680, align 1
  %681 = call ptr @make_candy_text(ptr %680)
  store ptr %681, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %682 = alloca i8, i64 70, align 1
  store [70 x i8] c"`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied\00", ptr %682, align 1
  %683 = call ptr @make_candy_text(ptr %682)
  store ptr %683, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %684 = alloca i8, i64 51, align 1
  store [51 x i8] c"`startInclusive | isNonNegative` was not satisfied\00", ptr %684, align 1
  %685 = call ptr @make_candy_text(ptr %684)
  store ptr %685, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %686 = alloca i8, i64 48, align 1
  store [48 x i8] c"`startInclusive | typeIs Int` was not satisfied\00", ptr %686, align 1
  %687 = call ptr @make_candy_text(ptr %686)
  store ptr %687, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %688 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %688, align 1
  %689 = call ptr @make_candy_text(ptr %688)
  store ptr %689, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %690 = alloca i8, i64 44, align 1
  store [44 x i8] c"`subtrahend | typeIs Int` was not satisfied\00", ptr %690, align 1
  %691 = call ptr @make_candy_text(ptr %690)
  store ptr %691, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %692 = alloca i8, i64 41, align 1
  store [41 x i8] c"`suffix | typeIs Text` was not satisfied\00", ptr %692, align 1
  %693 = call ptr @make_candy_text(ptr %692)
  store ptr %693, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  %694 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %694, align 1
  %695 = call ptr @make_candy_text(ptr %694)
  store ptr %695, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %696 = alloca i8, i64 42, align 1
  store [40 x i8] c"`tag | (.tagHasValue` was not satisfied\00", ptr %696, align 1
  %697 = call ptr @make_candy_text(ptr %696)
  store ptr %697, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %698 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %698, align 1
  %699 = call ptr @make_candy_text(ptr %698)
  store ptr %699, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %700 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %700, align 1
  %701 = call ptr @make_candy_text(ptr %700)
  store ptr %701, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %702 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %702, align 1
  %703 = call ptr @make_candy_text(ptr %702)
  store ptr %703, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %704 = alloca i8, i64 42, align 1
  store [42 x i8] c"`value | isNonNegative` was not satisfied\00", ptr %704, align 1
  %705 = call ptr @make_candy_text(ptr %704)
  store ptr %705, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %706 = alloca i8, i64 39, align 1
  store [39 x i8] c"`value | typeIs Int` was not satisfied\00", ptr %706, align 1
  %707 = call ptr @make_candy_text(ptr %706)
  store ptr %707, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %708 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %709 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", ptr %708, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %709, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %710 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %711 = call ptr @make_candy_function(ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %710, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %711, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %712 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %713 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %712, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %713, ptr @"fun_anonymous_$generated__needs", align 8
  %714 = alloca ptr, i64 2, align 8
  %715 = load ptr, ptr @tag_Match, align 8
  %716 = getelementptr ptr, ptr %714, i64 0
  store ptr %715, ptr %716, align 8
  %717 = getelementptr ptr, ptr %714, i64 1
  store ptr null, ptr %717, align 8
  %718 = call ptr @make_candy_list(ptr %714)
  store ptr %718, ptr @0, align 8
  %719 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %720 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", ptr %719, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %720, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %721 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %722 = call ptr @make_candy_function(ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", ptr %721, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %722, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %723 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %724 = call ptr @make_candy_function(ptr @Builtins__not, ptr %723, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %724, ptr @fun_Builtins__not, align 8
  %725 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %726 = call ptr @make_candy_function(ptr @Builtins__isNonNegative, ptr %725, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %726, ptr @fun_Builtins__isNonNegative, align 8
  %727 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %728 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo, ptr %727, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %728, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  %729 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %730 = call ptr @make_candy_function(ptr @Builtins__equals, ptr %729, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %730, ptr @fun_Builtins__equals, align 8
  %731 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %732 = call ptr @make_candy_function(ptr @Builtins__functionRun, ptr %731, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %732, ptr @fun_Builtins__functionRun, align 8
  %733 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %734 = call ptr @make_candy_function(ptr @Builtins__getArgumentCount, ptr %733, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %734, ptr @fun_Builtins__getArgumentCount, align 8
  %735 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %736 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %735, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %736, ptr @fun_Builtins__ifElse, align 8
  %737 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %738 = call ptr @make_candy_function(ptr @Builtins__intAdd, ptr %737, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %738, ptr @fun_Builtins__intAdd, align 8
  %739 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %740 = call ptr @make_candy_function(ptr @Builtins__intBitLength, ptr %739, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %740, ptr @fun_Builtins__intBitLength, align 8
  %741 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %742 = call ptr @make_candy_function(ptr @Builtins__intBitwiseAnd, ptr %741, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %742, ptr @fun_Builtins__intBitwiseAnd, align 8
  %743 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %744 = call ptr @make_candy_function(ptr @Builtins__intBitwiseOr, ptr %743, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %744, ptr @fun_Builtins__intBitwiseOr, align 8
  %745 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %746 = call ptr @make_candy_function(ptr @Builtins__intBitwiseXor, ptr %745, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %746, ptr @fun_Builtins__intBitwiseXor, align 8
  %747 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %748 = call ptr @make_candy_function(ptr @Builtins__intCompareTo, ptr %747, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %748, ptr @fun_Builtins__intCompareTo, align 8
  %749 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %750 = call ptr @make_candy_function(ptr @Builtins__intDivideTruncating, ptr %749, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %750, ptr @fun_Builtins__intDivideTruncating, align 8
  %751 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %752 = call ptr @make_candy_function(ptr @Builtins__intModulo, ptr %751, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %752, ptr @fun_Builtins__intModulo, align 8
  %753 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %754 = call ptr @make_candy_function(ptr @Builtins__intMultiply, ptr %753, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %754, ptr @fun_Builtins__intMultiply, align 8
  %755 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %756 = call ptr @make_candy_function(ptr @Builtins__intParse, ptr %755, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %756, ptr @fun_Builtins__intParse, align 8
  %757 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %758 = call ptr @make_candy_function(ptr @Builtins__intRemainder, ptr %757, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %758, ptr @fun_Builtins__intRemainder, align 8
  %759 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %760 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft, ptr %759, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %760, ptr @fun_Builtins__intShiftLeft, align 8
  %761 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %762 = call ptr @make_candy_function(ptr @Builtins__intShiftRight, ptr %761, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %762, ptr @fun_Builtins__intShiftRight, align 8
  %763 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %764 = call ptr @make_candy_function(ptr @Builtins__intSubtract, ptr %763, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %764, ptr @fun_Builtins__intSubtract, align 8
  %765 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %766 = call ptr @make_candy_function(ptr @Builtins__listFilled, ptr %765, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %766, ptr @fun_Builtins__listFilled, align 8
  %767 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %768 = call ptr @make_candy_function(ptr @Builtins__listGet, ptr %767, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %768, ptr @fun_Builtins__listGet, align 8
  %769 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %770 = call ptr @make_candy_function(ptr @Builtins__listInsert, ptr %769, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %770, ptr @fun_Builtins__listInsert, align 8
  %771 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %772 = call ptr @make_candy_function(ptr @Builtins__listLength, ptr %771, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %772, ptr @fun_Builtins__listLength, align 8
  %773 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %774 = call ptr @make_candy_function(ptr @Builtins__listRemoveAt, ptr %773, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %774, ptr @fun_Builtins__listRemoveAt, align 8
  %775 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %776 = call ptr @make_candy_function(ptr @Builtins__listReplace, ptr %775, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %776, ptr @fun_Builtins__listReplace, align 8
  %777 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %778 = call ptr @make_candy_function(ptr @Builtins__print, ptr %777, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %778, ptr @fun_Builtins__print, align 8
  %779 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %780 = call ptr @make_candy_function(ptr @Builtins__structGet, ptr %779, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %780, ptr @fun_Builtins__structGet, align 8
  %781 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %782 = call ptr @make_candy_function(ptr @Builtins__structGetKeys, ptr %781, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %782, ptr @fun_Builtins__structGetKeys, align 8
  %783 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %784 = call ptr @make_candy_function(ptr @Builtins__structHasKey, ptr %783, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %784, ptr @fun_Builtins__structHasKey, align 8
  %785 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %786 = call ptr @make_candy_function(ptr @Builtins__tagGetValue, ptr %785, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %786, ptr @fun_Builtins__tagGetValue, align 8
  %787 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %788 = call ptr @make_candy_function(ptr @Builtins__tagHasValue, ptr %787, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %788, ptr @fun_Builtins__tagHasValue, align 8
  %789 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %790 = call ptr @make_candy_function(ptr @Builtins__tagWithoutValue, ptr %789, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %790, ptr @fun_Builtins__tagWithoutValue, align 8
  %791 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %792 = call ptr @make_candy_function(ptr @Builtins__textCharacters, ptr %791, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %792, ptr @fun_Builtins__textCharacters, align 8
  %793 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %794 = call ptr @make_candy_function(ptr @Builtins__textConcatenate, ptr %793, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %794, ptr @fun_Builtins__textConcatenate, align 8
  %795 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %796 = call ptr @make_candy_function(ptr @Builtins__textContains, ptr %795, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %796, ptr @fun_Builtins__textContains, align 8
  %797 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %798 = call ptr @make_candy_function(ptr @Builtins__textEndsWith, ptr %797, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %798, ptr @fun_Builtins__textEndsWith, align 8
  %799 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %800 = call ptr @make_candy_function(ptr @Builtins__textFromUtf8, ptr %799, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %800, ptr @fun_Builtins__textFromUtf8, align 8
  %801 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %802 = call ptr @make_candy_function(ptr @Builtins__textGetRange, ptr %801, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %802, ptr @fun_Builtins__textGetRange, align 8
  %803 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %804 = call ptr @make_candy_function(ptr @Builtins__textIsEmpty, ptr %803, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %804, ptr @fun_Builtins__textIsEmpty, align 8
  %805 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %806 = call ptr @make_candy_function(ptr @Builtins__textLength, ptr %805, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %806, ptr @fun_Builtins__textLength, align 8
  %807 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %808 = call ptr @make_candy_function(ptr @Builtins__textStartsWith, ptr %807, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %808, ptr @fun_Builtins__textStartsWith, align 8
  %809 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %810 = call ptr @make_candy_function(ptr @Builtins__textTrimEnd, ptr %809, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %810, ptr @fun_Builtins__textTrimEnd, align 8
  %811 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %812 = call ptr @make_candy_function(ptr @Builtins__textTrimStart, ptr %811, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %812, ptr @fun_Builtins__textTrimStart, align 8
  %813 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %814 = call ptr @make_candy_function(ptr @Builtins__toDebugText, ptr %813, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %814, ptr @fun_Builtins__toDebugText, align 8
  %815 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %816 = call ptr @make_candy_function(ptr @Builtins__typeOf, ptr %815, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %816, ptr @fun_Builtins__typeOf, align 8
  %817 = alloca ptr, i64 45, align 8
  %818 = alloca ptr, i64 45, align 8
  %819 = load ptr, ptr @tag_ListRemoveAt, align 8
  %820 = load ptr, ptr @fun_Builtins__listRemoveAt, align 8
  %821 = getelementptr ptr, ptr %817, i64 0
  store ptr %819, ptr %821, align 8
  %822 = getelementptr ptr, ptr %818, i64 0
  store ptr %820, ptr %822, align 8
  %823 = load ptr, ptr @tag_IfElse, align 8
  %824 = load ptr, ptr @fun_Builtins__ifElse, align 8
  %825 = getelementptr ptr, ptr %817, i64 1
  store ptr %823, ptr %825, align 8
  %826 = getelementptr ptr, ptr %818, i64 1
  store ptr %824, ptr %826, align 8
  %827 = load ptr, ptr @tag_StructHasKey, align 8
  %828 = load ptr, ptr @fun_Builtins__structHasKey, align 8
  %829 = getelementptr ptr, ptr %817, i64 2
  store ptr %827, ptr %829, align 8
  %830 = getelementptr ptr, ptr %818, i64 2
  store ptr %828, ptr %830, align 8
  %831 = load ptr, ptr @tag_IntBitLength, align 8
  %832 = load ptr, ptr @fun_Builtins__intBitLength, align 8
  %833 = getelementptr ptr, ptr %817, i64 3
  store ptr %831, ptr %833, align 8
  %834 = getelementptr ptr, ptr %818, i64 3
  store ptr %832, ptr %834, align 8
  %835 = load ptr, ptr @tag_Print, align 8
  %836 = load ptr, ptr @fun_Builtins__print, align 8
  %837 = getelementptr ptr, ptr %817, i64 4
  store ptr %835, ptr %837, align 8
  %838 = getelementptr ptr, ptr %818, i64 4
  store ptr %836, ptr %838, align 8
  %839 = load ptr, ptr @tag_TextStartsWith, align 8
  %840 = load ptr, ptr @fun_Builtins__textStartsWith, align 8
  %841 = getelementptr ptr, ptr %817, i64 5
  store ptr %839, ptr %841, align 8
  %842 = getelementptr ptr, ptr %818, i64 5
  store ptr %840, ptr %842, align 8
  %843 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %844 = load ptr, ptr @fun_Builtins__intBitwiseXor, align 8
  %845 = getelementptr ptr, ptr %817, i64 6
  store ptr %843, ptr %845, align 8
  %846 = getelementptr ptr, ptr %818, i64 6
  store ptr %844, ptr %846, align 8
  %847 = load ptr, ptr @tag_TextIsEmpty, align 8
  %848 = load ptr, ptr @fun_Builtins__textIsEmpty, align 8
  %849 = getelementptr ptr, ptr %817, i64 7
  store ptr %847, ptr %849, align 8
  %850 = getelementptr ptr, ptr %818, i64 7
  store ptr %848, ptr %850, align 8
  %851 = load ptr, ptr @tag_IntAdd, align 8
  %852 = load ptr, ptr @fun_Builtins__intAdd, align 8
  %853 = getelementptr ptr, ptr %817, i64 8
  store ptr %851, ptr %853, align 8
  %854 = getelementptr ptr, ptr %818, i64 8
  store ptr %852, ptr %854, align 8
  %855 = load ptr, ptr @tag_TextLength, align 8
  %856 = load ptr, ptr @fun_Builtins__textLength, align 8
  %857 = getelementptr ptr, ptr %817, i64 9
  store ptr %855, ptr %857, align 8
  %858 = getelementptr ptr, ptr %818, i64 9
  store ptr %856, ptr %858, align 8
  %859 = load ptr, ptr @tag_TagWithoutValue, align 8
  %860 = load ptr, ptr @fun_Builtins__tagWithoutValue, align 8
  %861 = getelementptr ptr, ptr %817, i64 10
  store ptr %859, ptr %861, align 8
  %862 = getelementptr ptr, ptr %818, i64 10
  store ptr %860, ptr %862, align 8
  %863 = load ptr, ptr @tag_TextCharacters, align 8
  %864 = load ptr, ptr @fun_Builtins__textCharacters, align 8
  %865 = getelementptr ptr, ptr %817, i64 11
  store ptr %863, ptr %865, align 8
  %866 = getelementptr ptr, ptr %818, i64 11
  store ptr %864, ptr %866, align 8
  %867 = load ptr, ptr @tag_TextEndsWith, align 8
  %868 = load ptr, ptr @fun_Builtins__textEndsWith, align 8
  %869 = getelementptr ptr, ptr %817, i64 12
  store ptr %867, ptr %869, align 8
  %870 = getelementptr ptr, ptr %818, i64 12
  store ptr %868, ptr %870, align 8
  %871 = load ptr, ptr @tag_IntModulo, align 8
  %872 = load ptr, ptr @fun_Builtins__intModulo, align 8
  %873 = getelementptr ptr, ptr %817, i64 13
  store ptr %871, ptr %873, align 8
  %874 = getelementptr ptr, ptr %818, i64 13
  store ptr %872, ptr %874, align 8
  %875 = load ptr, ptr @tag_ListInsert, align 8
  %876 = load ptr, ptr @fun_Builtins__listInsert, align 8
  %877 = getelementptr ptr, ptr %817, i64 14
  store ptr %875, ptr %877, align 8
  %878 = getelementptr ptr, ptr %818, i64 14
  store ptr %876, ptr %878, align 8
  %879 = load ptr, ptr @tag_StructGet, align 8
  %880 = load ptr, ptr @fun_Builtins__structGet, align 8
  %881 = getelementptr ptr, ptr %817, i64 15
  store ptr %879, ptr %881, align 8
  %882 = getelementptr ptr, ptr %818, i64 15
  store ptr %880, ptr %882, align 8
  %883 = load ptr, ptr @tag_ListGet, align 8
  %884 = load ptr, ptr @fun_Builtins__listGet, align 8
  %885 = getelementptr ptr, ptr %817, i64 16
  store ptr %883, ptr %885, align 8
  %886 = getelementptr ptr, ptr %818, i64 16
  store ptr %884, ptr %886, align 8
  %887 = load ptr, ptr @tag_TextConcatenate, align 8
  %888 = load ptr, ptr @fun_Builtins__textConcatenate, align 8
  %889 = getelementptr ptr, ptr %817, i64 17
  store ptr %887, ptr %889, align 8
  %890 = getelementptr ptr, ptr %818, i64 17
  store ptr %888, ptr %890, align 8
  %891 = load ptr, ptr @tag_IntShiftRight, align 8
  %892 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  %893 = getelementptr ptr, ptr %817, i64 18
  store ptr %891, ptr %893, align 8
  %894 = getelementptr ptr, ptr %818, i64 18
  store ptr %892, ptr %894, align 8
  %895 = load ptr, ptr @tag_TextTrimStart, align 8
  %896 = load ptr, ptr @fun_Builtins__textTrimStart, align 8
  %897 = getelementptr ptr, ptr %817, i64 19
  store ptr %895, ptr %897, align 8
  %898 = getelementptr ptr, ptr %818, i64 19
  store ptr %896, ptr %898, align 8
  %899 = load ptr, ptr @tag_TextTrimEnd, align 8
  %900 = load ptr, ptr @fun_Builtins__textTrimEnd, align 8
  %901 = getelementptr ptr, ptr %817, i64 20
  store ptr %899, ptr %901, align 8
  %902 = getelementptr ptr, ptr %818, i64 20
  store ptr %900, ptr %902, align 8
  %903 = load ptr, ptr @tag_IntShiftLeft, align 8
  %904 = load ptr, ptr @fun_Builtins__intShiftLeft, align 8
  %905 = getelementptr ptr, ptr %817, i64 21
  store ptr %903, ptr %905, align 8
  %906 = getelementptr ptr, ptr %818, i64 21
  store ptr %904, ptr %906, align 8
  %907 = load ptr, ptr @tag_ListLength, align 8
  %908 = load ptr, ptr @fun_Builtins__listLength, align 8
  %909 = getelementptr ptr, ptr %817, i64 22
  store ptr %907, ptr %909, align 8
  %910 = getelementptr ptr, ptr %818, i64 22
  store ptr %908, ptr %910, align 8
  %911 = load ptr, ptr @tag_StructGetKeys, align 8
  %912 = load ptr, ptr @fun_Builtins__structGetKeys, align 8
  %913 = getelementptr ptr, ptr %817, i64 23
  store ptr %911, ptr %913, align 8
  %914 = getelementptr ptr, ptr %818, i64 23
  store ptr %912, ptr %914, align 8
  %915 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %916 = load ptr, ptr @fun_Builtins__intBitwiseAnd, align 8
  %917 = getelementptr ptr, ptr %817, i64 24
  store ptr %915, ptr %917, align 8
  %918 = getelementptr ptr, ptr %818, i64 24
  store ptr %916, ptr %918, align 8
  %919 = load ptr, ptr @tag_IntSubtract, align 8
  %920 = load ptr, ptr @fun_Builtins__intSubtract, align 8
  %921 = getelementptr ptr, ptr %817, i64 25
  store ptr %919, ptr %921, align 8
  %922 = getelementptr ptr, ptr %818, i64 25
  store ptr %920, ptr %922, align 8
  %923 = load ptr, ptr @tag_TextFromUtf8, align 8
  %924 = load ptr, ptr @fun_Builtins__textFromUtf8, align 8
  %925 = getelementptr ptr, ptr %817, i64 26
  store ptr %923, ptr %925, align 8
  %926 = getelementptr ptr, ptr %818, i64 26
  store ptr %924, ptr %926, align 8
  %927 = load ptr, ptr @tag_ListReplace, align 8
  %928 = load ptr, ptr @fun_Builtins__listReplace, align 8
  %929 = getelementptr ptr, ptr %817, i64 27
  store ptr %927, ptr %929, align 8
  %930 = getelementptr ptr, ptr %818, i64 27
  store ptr %928, ptr %930, align 8
  %931 = load ptr, ptr @tag_GetArgumentCount, align 8
  %932 = load ptr, ptr @fun_Builtins__getArgumentCount, align 8
  %933 = getelementptr ptr, ptr %817, i64 28
  store ptr %931, ptr %933, align 8
  %934 = getelementptr ptr, ptr %818, i64 28
  store ptr %932, ptr %934, align 8
  %935 = load ptr, ptr @tag_IntRemainder, align 8
  %936 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  %937 = getelementptr ptr, ptr %817, i64 29
  store ptr %935, ptr %937, align 8
  %938 = getelementptr ptr, ptr %818, i64 29
  store ptr %936, ptr %938, align 8
  %939 = load ptr, ptr @tag_ToDebugText, align 8
  %940 = load ptr, ptr @fun_Builtins__toDebugText, align 8
  %941 = getelementptr ptr, ptr %817, i64 30
  store ptr %939, ptr %941, align 8
  %942 = getelementptr ptr, ptr %818, i64 30
  store ptr %940, ptr %942, align 8
  %943 = load ptr, ptr @tag_ListFilled, align 8
  %944 = load ptr, ptr @fun_Builtins__listFilled, align 8
  %945 = getelementptr ptr, ptr %817, i64 31
  store ptr %943, ptr %945, align 8
  %946 = getelementptr ptr, ptr %818, i64 31
  store ptr %944, ptr %946, align 8
  %947 = load ptr, ptr @tag_FunctionRun, align 8
  %948 = load ptr, ptr @fun_Builtins__functionRun, align 8
  %949 = getelementptr ptr, ptr %817, i64 32
  store ptr %947, ptr %949, align 8
  %950 = getelementptr ptr, ptr %818, i64 32
  store ptr %948, ptr %950, align 8
  %951 = load ptr, ptr @tag_IntParse, align 8
  %952 = load ptr, ptr @fun_Builtins__intParse, align 8
  %953 = getelementptr ptr, ptr %817, i64 33
  store ptr %951, ptr %953, align 8
  %954 = getelementptr ptr, ptr %818, i64 33
  store ptr %952, ptr %954, align 8
  %955 = load ptr, ptr @tag_TypeOf, align 8
  %956 = load ptr, ptr @fun_Builtins__typeOf, align 8
  %957 = getelementptr ptr, ptr %817, i64 34
  store ptr %955, ptr %957, align 8
  %958 = getelementptr ptr, ptr %818, i64 34
  store ptr %956, ptr %958, align 8
  %959 = load ptr, ptr @tag_TextContains, align 8
  %960 = load ptr, ptr @fun_Builtins__textContains, align 8
  %961 = getelementptr ptr, ptr %817, i64 35
  store ptr %959, ptr %961, align 8
  %962 = getelementptr ptr, ptr %818, i64 35
  store ptr %960, ptr %962, align 8
  %963 = load ptr, ptr @tag_TagHasValue, align 8
  %964 = load ptr, ptr @fun_Builtins__tagHasValue, align 8
  %965 = getelementptr ptr, ptr %817, i64 36
  store ptr %963, ptr %965, align 8
  %966 = getelementptr ptr, ptr %818, i64 36
  store ptr %964, ptr %966, align 8
  %967 = load ptr, ptr @tag_Equals, align 8
  %968 = load ptr, ptr @fun_Builtins__equals, align 8
  %969 = getelementptr ptr, ptr %817, i64 37
  store ptr %967, ptr %969, align 8
  %970 = getelementptr ptr, ptr %818, i64 37
  store ptr %968, ptr %970, align 8
  %971 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %972 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  %973 = getelementptr ptr, ptr %817, i64 38
  store ptr %971, ptr %973, align 8
  %974 = getelementptr ptr, ptr %818, i64 38
  store ptr %972, ptr %974, align 8
  %975 = load ptr, ptr @tag_TextGetRange, align 8
  %976 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  %977 = getelementptr ptr, ptr %817, i64 39
  store ptr %975, ptr %977, align 8
  %978 = getelementptr ptr, ptr %818, i64 39
  store ptr %976, ptr %978, align 8
  %979 = load ptr, ptr @tag_IntMultiply, align 8
  %980 = load ptr, ptr @fun_Builtins__intMultiply, align 8
  %981 = getelementptr ptr, ptr %817, i64 40
  store ptr %979, ptr %981, align 8
  %982 = getelementptr ptr, ptr %818, i64 40
  store ptr %980, ptr %982, align 8
  %983 = load ptr, ptr @tag_IntCompareTo, align 8
  %984 = load ptr, ptr @fun_Builtins__intCompareTo, align 8
  %985 = getelementptr ptr, ptr %817, i64 41
  store ptr %983, ptr %985, align 8
  %986 = getelementptr ptr, ptr %818, i64 41
  store ptr %984, ptr %986, align 8
  %987 = load ptr, ptr @tag_TagGetValue, align 8
  %988 = load ptr, ptr @fun_Builtins__tagGetValue, align 8
  %989 = getelementptr ptr, ptr %817, i64 42
  store ptr %987, ptr %989, align 8
  %990 = getelementptr ptr, ptr %818, i64 42
  store ptr %988, ptr %990, align 8
  %991 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %992 = load ptr, ptr @fun_Builtins__intBitwiseOr, align 8
  %993 = getelementptr ptr, ptr %817, i64 43
  store ptr %991, ptr %993, align 8
  %994 = getelementptr ptr, ptr %818, i64 43
  store ptr %992, ptr %994, align 8
  %995 = getelementptr ptr, ptr %817, i64 44
  store ptr null, ptr %995, align 8
  %996 = getelementptr ptr, ptr %818, i64 44
  store ptr null, ptr %996, align 8
  %997 = call ptr @make_candy_struct(ptr %817, ptr %818)
  %998 = load ptr, ptr @tag_Equals, align 8
  %999 = call ptr @Builtins__structGet(ptr %997, ptr %998)
  %1000 = load ptr, ptr @tag_Equals, align 8
  %1001 = call ptr @Builtins__structGet(ptr %997, ptr %1000)
  %1002 = load ptr, ptr @tag_Equals, align 8
  %1003 = call ptr @Builtins__structGet(ptr %997, ptr %1002)
  %1004 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:type:28\00", ptr %1004, align 1
  %1005 = call ptr @make_candy_text(ptr %1004)
  store ptr %1005, ptr @"Core:type:28", align 8
  %1006 = load ptr, ptr @tag_TypeOf, align 8
  %1007 = call ptr @Builtins__structGet(ptr %997, ptr %1006)
  %1008 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:2\00", ptr %1008, align 1
  %1009 = call ptr @make_candy_text(ptr %1008)
  store ptr %1009, ptr @"Core:type:is:2", align 8
  %1010 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:5\00", ptr %1010, align 1
  %1011 = call ptr @make_candy_text(ptr %1010)
  store ptr %1011, ptr @"Core:type:is:5", align 8
  %1012 = alloca i8, i64 45, align 1
  store [45 x i8] c"`typeOf type | equals Tag` was not satisfied\00", ptr %1012, align 1
  %1013 = call ptr @make_candy_text(ptr %1012)
  store ptr %1013, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %1014 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:7\00", ptr %1014, align 1
  %1015 = call ptr @make_candy_text(ptr %1014)
  store ptr %1015, ptr @"Core:type:is:7", align 8
  %1016 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:type:is:11\00", ptr %1016, align 1
  %1017 = call ptr @make_candy_text(ptr %1016)
  store ptr %1017, ptr @"Core:type:is:11", align 8
  %1018 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:type:is:13\00", ptr %1018, align 1
  %1019 = call ptr @make_candy_text(ptr %1018)
  store ptr %1019, ptr @"Core:type:is:13", align 8
  %1020 = alloca i8, i64 3, align 1
  store [3 x i8] c"Is\00", ptr %1020, align 1
  %1021 = call ptr @make_candy_tag(ptr %1020, ptr null)
  store ptr %1021, ptr @tag_Is, align 8
  %1022 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:function:is:7\00", ptr %1022, align 1
  %1023 = call ptr @make_candy_text(ptr %1022)
  store ptr %1023, ptr @"Core:function:is:7", align 8
  %1024 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is:10\00", ptr %1024, align 1
  %1025 = call ptr @make_candy_text(ptr %1024)
  store ptr %1025, ptr @"Core:function:is:10", align 8
  %1026 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:function:38\00", ptr %1026, align 1
  %1027 = call ptr @make_candy_text(ptr %1026)
  store ptr %1027, ptr @"Core:function:38", align 8
  %1028 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1029 = call ptr @Builtins__structGet(ptr %997, ptr %1028)
  %1030 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is0:7\00", ptr %1030, align 1
  %1031 = call ptr @make_candy_text(ptr %1030)
  store ptr %1031, ptr @"Core:function:is0:7", align 8
  %1032 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %1032, align 1
  %1033 = call ptr @make_candy_text(ptr %1032)
  store ptr %1033, ptr @"Core:function:is0:11:3", align 8
  %1034 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:5\00", ptr %1034, align 1
  %1035 = call ptr @make_candy_text(ptr %1034)
  store ptr %1035, ptr @"Core:function:is0:11:5", align 8
  %1036 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %1036, align 1
  %1037 = call ptr @make_candy_text(ptr %1036)
  store ptr %1037, ptr @"Core:function:is0:13", align 8
  %1038 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is1:7\00", ptr %1038, align 1
  %1039 = call ptr @make_candy_text(ptr %1038)
  store ptr %1039, ptr @"Core:function:is1:7", align 8
  %1040 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %1040, align 1
  %1041 = call ptr @make_candy_text(ptr %1040)
  store ptr %1041, ptr @"Core:function:is1:11:3", align 8
  %1042 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:5\00", ptr %1042, align 1
  %1043 = call ptr @make_candy_text(ptr %1042)
  store ptr %1043, ptr @"Core:function:is1:11:5", align 8
  %1044 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %1044, align 1
  %1045 = call ptr @make_candy_text(ptr %1044)
  store ptr %1045, ptr @"Core:function:is1:13", align 8
  %1046 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is2:7\00", ptr %1046, align 1
  %1047 = call ptr @make_candy_text(ptr %1046)
  store ptr %1047, ptr @"Core:function:is2:7", align 8
  %1048 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:3\00", ptr %1048, align 1
  %1049 = call ptr @make_candy_text(ptr %1048)
  store ptr %1049, ptr @"Core:function:is2:11:3", align 8
  %1050 = call ptr @make_candy_int(i64 2)
  store ptr %1050, ptr @num_2, align 8
  %1051 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:5\00", ptr %1051, align 1
  %1052 = call ptr @make_candy_text(ptr %1051)
  store ptr %1052, ptr @"Core:function:is2:11:5", align 8
  %1053 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:13\00", ptr %1053, align 1
  %1054 = call ptr @make_candy_text(ptr %1053)
  store ptr %1054, ptr @"Core:function:is2:13", align 8
  %1055 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is3:7\00", ptr %1055, align 1
  %1056 = call ptr @make_candy_text(ptr %1055)
  store ptr %1056, ptr @"Core:function:is3:7", align 8
  %1057 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is3:11:3\00", ptr %1057, align 1
  %1058 = call ptr @make_candy_text(ptr %1057)
  store ptr %1058, ptr @"Core:function:is3:11:3", align 8
  %1059 = call ptr @make_candy_int(i64 3)
  store ptr %1059, ptr @num_3, align 8
  %1060 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is3:11:5\00", ptr %1060, align 1
  %1061 = call ptr @make_candy_text(ptr %1060)
  store ptr %1061, ptr @"Core:function:is3:11:5", align 8
  %1062 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is3:13\00", ptr %1062, align 1
  %1063 = call ptr @make_candy_text(ptr %1062)
  store ptr %1063, ptr @"Core:function:is3:13", align 8
  %1064 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is4:7\00", ptr %1064, align 1
  %1065 = call ptr @make_candy_text(ptr %1064)
  store ptr %1065, ptr @"Core:function:is4:7", align 8
  %1066 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is4:11:3\00", ptr %1066, align 1
  %1067 = call ptr @make_candy_text(ptr %1066)
  store ptr %1067, ptr @"Core:function:is4:11:3", align 8
  %1068 = call ptr @make_candy_int(i64 4)
  store ptr %1068, ptr @num_4, align 8
  %1069 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is4:11:5\00", ptr %1069, align 1
  %1070 = call ptr @make_candy_text(ptr %1069)
  store ptr %1070, ptr @"Core:function:is4:11:5", align 8
  %1071 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is4:13\00", ptr %1071, align 1
  %1072 = call ptr @make_candy_text(ptr %1071)
  store ptr %1072, ptr @"Core:function:is4:13", align 8
  %1073 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is5:7\00", ptr %1073, align 1
  %1074 = call ptr @make_candy_text(ptr %1073)
  store ptr %1074, ptr @"Core:function:is5:7", align 8
  %1075 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is5:11:3\00", ptr %1075, align 1
  %1076 = call ptr @make_candy_text(ptr %1075)
  store ptr %1076, ptr @"Core:function:is5:11:3", align 8
  %1077 = call ptr @make_candy_int(i64 5)
  store ptr %1077, ptr @num_5, align 8
  %1078 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is5:11:5\00", ptr %1078, align 1
  %1079 = call ptr @make_candy_text(ptr %1078)
  store ptr %1079, ptr @"Core:function:is5:11:5", align 8
  %1080 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is5:13\00", ptr %1080, align 1
  %1081 = call ptr @make_candy_text(ptr %1080)
  store ptr %1081, ptr @"Core:function:is5:13", align 8
  %1082 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %1082, align 1
  %1083 = call ptr @make_candy_text(ptr %1082)
  store ptr %1083, ptr @"text_`is0 body` was not satisfied", align 8
  %1084 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %1084, align 1
  %1085 = call ptr @make_candy_text(ptr %1084)
  store ptr %1085, ptr @"Core:function:run:4", align 8
  %1086 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:12\00", ptr %1086, align 1
  %1087 = call ptr @make_candy_text(ptr %1086)
  store ptr %1087, ptr @"Core:function:run:12", align 8
  %1088 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %1088, align 1
  %1089 = call ptr @make_candy_text(ptr %1088)
  store ptr %1089, ptr @"Core:function:run:14", align 8
  %1090 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:function:doNotRun:4\00", ptr %1090, align 1
  %1091 = call ptr @make_candy_text(ptr %1090)
  store ptr %1091, ptr @"Core:function:doNotRun:4", align 8
  %1092 = alloca i8, i64 9, align 1
  store [9 x i8] c"DoNotRun\00", ptr %1092, align 1
  %1093 = call ptr @make_candy_tag(ptr %1092, ptr null)
  store ptr %1093, ptr @tag_DoNotRun, align 8
  %1094 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is4\00", ptr %1094, align 1
  %1095 = call ptr @make_candy_tag(ptr %1094, ptr null)
  store ptr %1095, ptr @tag_Is4, align 8
  %1096 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is1\00", ptr %1096, align 1
  %1097 = call ptr @make_candy_tag(ptr %1096, ptr null)
  store ptr %1097, ptr @tag_Is1, align 8
  %1098 = alloca i8, i64 4, align 1
  store [4 x i8] c"Run\00", ptr %1098, align 1
  %1099 = call ptr @make_candy_tag(ptr %1098, ptr null)
  store ptr %1099, ptr @tag_Run, align 8
  %1100 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is0\00", ptr %1100, align 1
  %1101 = call ptr @make_candy_tag(ptr %1100, ptr null)
  store ptr %1101, ptr @tag_Is0, align 8
  %1102 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is3\00", ptr %1102, align 1
  %1103 = call ptr @make_candy_tag(ptr %1102, ptr null)
  store ptr %1103, ptr @tag_Is3, align 8
  %1104 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is2\00", ptr %1104, align 1
  %1105 = call ptr @make_candy_tag(ptr %1104, ptr null)
  store ptr %1105, ptr @tag_Is2, align 8
  %1106 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is5\00", ptr %1106, align 1
  %1107 = call ptr @make_candy_tag(ptr %1106, ptr null)
  store ptr %1107, ptr @tag_Is5, align 8
  %1108 = load ptr, ptr @tag_Equals, align 8
  %1109 = call ptr @Builtins__structGet(ptr %997, ptr %1108)
  %1110 = load ptr, ptr @tag_TypeOf, align 8
  %1111 = call ptr @Builtins__structGet(ptr %997, ptr %1110)
  %1112 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %1112, align 1
  %1113 = call ptr @make_candy_text(ptr %1112)
  store ptr %1113, ptr @"Core:bool:is:1", align 8
  %1114 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1115 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %1114, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1115, ptr @fun_Core_bool_is, align 8
  %1116 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:2\00", ptr %1116, align 1
  %1117 = call ptr @make_candy_text(ptr %1116)
  store ptr %1117, ptr @"Core:bool:not:2", align 8
  %1118 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is value` was not satisfied\00", ptr %1118, align 1
  %1119 = call ptr @make_candy_text(ptr %1118)
  store ptr %1119, ptr @"text_`is value` was not satisfied", align 8
  %1120 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:4\00", ptr %1120, align 1
  %1121 = call ptr @make_candy_text(ptr %1120)
  store ptr %1121, ptr @"Core:bool:not:4", align 8
  %1122 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:6\00", ptr %1122, align 1
  %1123 = call ptr @make_candy_text(ptr %1122)
  store ptr %1123, ptr @"Core:bool:not:6", align 8
  %1124 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1125 = call ptr @make_candy_function(ptr @Core_bool_not, ptr %1124, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1125, ptr @fun_Core_bool_not, align 8
  %1126 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:2\00", ptr %1126, align 1
  %1127 = call ptr @make_candy_text(ptr %1126)
  store ptr %1127, ptr @"Core:bool:lazyAnd:2", align 8
  %1128 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %1128, align 1
  %1129 = call ptr @make_candy_text(ptr %1128)
  store ptr %1129, ptr @"text_`is a` was not satisfied", align 8
  %1130 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:4\00", ptr %1130, align 1
  %1131 = call ptr @make_candy_text(ptr %1130)
  store ptr %1131, ptr @"Core:bool:lazyAnd:4", align 8
  %1132 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:12\00", ptr %1132, align 1
  %1133 = call ptr @make_candy_text(ptr %1132)
  store ptr %1133, ptr @"Core:bool:lazyAnd:12", align 8
  %1134 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:14\00", ptr %1134, align 1
  %1135 = call ptr @make_candy_text(ptr %1134)
  store ptr %1135, ptr @"Core:bool:lazyAnd:14", align 8
  %1136 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %1136, align 1
  %1137 = call ptr @make_candy_text(ptr %1136)
  store ptr %1137, ptr @"text_`function.is0 b` was not satisfied", align 8
  %1138 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:16\00", ptr %1138, align 1
  %1139 = call ptr @make_candy_text(ptr %1138)
  store ptr %1139, ptr @"Core:bool:lazyAnd:16", align 8
  %1140 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:18\00", ptr %1140, align 1
  %1141 = call ptr @make_candy_text(ptr %1140)
  store ptr %1141, ptr @"Core:bool:lazyAnd:18", align 8
  %1142 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:18:8\00", ptr %1142, align 1
  %1143 = call ptr @make_candy_text(ptr %1142)
  store ptr %1143, ptr @"Core:bool:lazyAnd:18:8", align 8
  %1144 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:18:9\00", ptr %1144, align 1
  %1145 = call ptr @make_candy_text(ptr %1144)
  store ptr %1145, ptr @"Core:bool:lazyAnd:18:9", align 8
  %1146 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:13\00", ptr %1146, align 1
  %1147 = call ptr @make_candy_text(ptr %1146)
  store ptr %1147, ptr @"Core:bool:lazyAnd:18:13", align 8
  %1148 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %1148, align 1
  %1149 = call ptr @make_candy_text(ptr %1148)
  store ptr %1149, ptr @"text_`b` didn't return a bool.", align 8
  %1150 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:21\00", ptr %1150, align 1
  %1151 = call ptr @make_candy_text(ptr %1150)
  store ptr %1151, ptr @"Core:bool:lazyAnd:18:21", align 8
  %1152 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:2\00", ptr %1152, align 1
  %1153 = call ptr @make_candy_text(ptr %1152)
  store ptr %1153, ptr @"Core:bool:and:2", align 8
  %1154 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:4\00", ptr %1154, align 1
  %1155 = call ptr @make_candy_text(ptr %1154)
  store ptr %1155, ptr @"Core:bool:and:4", align 8
  %1156 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:7\00", ptr %1156, align 1
  %1157 = call ptr @make_candy_text(ptr %1156)
  store ptr %1157, ptr @"Core:bool:and:7", align 8
  %1158 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %1158, align 1
  %1159 = call ptr @make_candy_text(ptr %1158)
  store ptr %1159, ptr @"text_`is b` was not satisfied", align 8
  %1160 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:9\00", ptr %1160, align 1
  %1161 = call ptr @make_candy_text(ptr %1160)
  store ptr %1161, ptr @"Core:bool:and:9", align 8
  %1162 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:and:13\00", ptr %1162, align 1
  %1163 = call ptr @make_candy_text(ptr %1162)
  store ptr %1163, ptr @"Core:bool:and:13", align 8
  %1164 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:2\00", ptr %1164, align 1
  %1165 = call ptr @make_candy_text(ptr %1164)
  store ptr %1165, ptr @"Core:bool:lazyOr:2", align 8
  %1166 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %1166, align 1
  %1167 = call ptr @make_candy_text(ptr %1166)
  store ptr %1167, ptr @"Core:bool:lazyOr:4", align 8
  %1168 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:12\00", ptr %1168, align 1
  %1169 = call ptr @make_candy_text(ptr %1168)
  store ptr %1169, ptr @"Core:bool:lazyOr:12", align 8
  %1170 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:14\00", ptr %1170, align 1
  %1171 = call ptr @make_candy_text(ptr %1170)
  store ptr %1171, ptr @"Core:bool:lazyOr:14", align 8
  %1172 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %1172, align 1
  %1173 = call ptr @make_candy_text(ptr %1172)
  store ptr %1173, ptr @"Core:bool:lazyOr:16", align 8
  %1174 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:18\00", ptr %1174, align 1
  %1175 = call ptr @make_candy_text(ptr %1174)
  store ptr %1175, ptr @"Core:bool:lazyOr:18", align 8
  %1176 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:bool:lazyOr:18:9\00", ptr %1176, align 1
  %1177 = call ptr @make_candy_text(ptr %1176)
  store ptr %1177, ptr @"Core:bool:lazyOr:18:9", align 8
  %1178 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:10\00", ptr %1178, align 1
  %1179 = call ptr @make_candy_text(ptr %1178)
  store ptr %1179, ptr @"Core:bool:lazyOr:18:10", align 8
  %1180 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:14\00", ptr %1180, align 1
  %1181 = call ptr @make_candy_text(ptr %1180)
  store ptr %1181, ptr @"Core:bool:lazyOr:18:14", align 8
  %1182 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:22\00", ptr %1182, align 1
  %1183 = call ptr @make_candy_text(ptr %1182)
  store ptr %1183, ptr @"Core:bool:lazyOr:18:22", align 8
  %1184 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:2\00", ptr %1184, align 1
  %1185 = call ptr @make_candy_text(ptr %1184)
  store ptr %1185, ptr @"Core:bool:or:2", align 8
  %1186 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %1186, align 1
  %1187 = call ptr @make_candy_text(ptr %1186)
  store ptr %1187, ptr @"Core:bool:or:4", align 8
  %1188 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:7\00", ptr %1188, align 1
  %1189 = call ptr @make_candy_text(ptr %1188)
  store ptr %1189, ptr @"Core:bool:or:7", align 8
  %1190 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %1190, align 1
  %1191 = call ptr @make_candy_text(ptr %1190)
  store ptr %1191, ptr @"Core:bool:or:9", align 8
  %1192 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %1192, align 1
  %1193 = call ptr @make_candy_text(ptr %1192)
  store ptr %1193, ptr @"Core:bool:or:13", align 8
  %1194 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:xor:2\00", ptr %1194, align 1
  %1195 = call ptr @make_candy_text(ptr %1194)
  store ptr %1195, ptr @"Core:bool:xor:2", align 8
  %1196 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:xor:4\00", ptr %1196, align 1
  %1197 = call ptr @make_candy_text(ptr %1196)
  store ptr %1197, ptr @"Core:bool:xor:4", align 8
  %1198 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:xor:7\00", ptr %1198, align 1
  %1199 = call ptr @make_candy_text(ptr %1198)
  store ptr %1199, ptr @"Core:bool:xor:7", align 8
  %1200 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:xor:9\00", ptr %1200, align 1
  %1201 = call ptr @make_candy_text(ptr %1200)
  store ptr %1201, ptr @"Core:bool:xor:9", align 8
  %1202 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:xor:14\00", ptr %1202, align 1
  %1203 = call ptr @make_candy_text(ptr %1202)
  store ptr %1203, ptr @"Core:bool:xor:14", align 8
  %1204 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:xor:15\00", ptr %1204, align 1
  %1205 = call ptr @make_candy_text(ptr %1204)
  store ptr %1205, ptr @"Core:bool:xor:15", align 8
  %1206 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:2\00", ptr %1206, align 1
  %1207 = call ptr @make_candy_text(ptr %1206)
  store ptr %1207, ptr @"Core:bool:implies:2", align 8
  %1208 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:4\00", ptr %1208, align 1
  %1209 = call ptr @make_candy_text(ptr %1208)
  store ptr %1209, ptr @"Core:bool:implies:4", align 8
  %1210 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:7\00", ptr %1210, align 1
  %1211 = call ptr @make_candy_text(ptr %1210)
  store ptr %1211, ptr @"Core:bool:implies:7", align 8
  %1212 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:9\00", ptr %1212, align 1
  %1213 = call ptr @make_candy_text(ptr %1212)
  store ptr %1213, ptr @"Core:bool:implies:9", align 8
  %1214 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:12\00", ptr %1214, align 1
  %1215 = call ptr @make_candy_text(ptr %1214)
  store ptr %1215, ptr @"Core:bool:implies:12", align 8
  %1216 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:15\00", ptr %1216, align 1
  %1217 = call ptr @make_candy_text(ptr %1216)
  store ptr %1217, ptr @"Core:bool:implies:15", align 8
  %1218 = alloca i8, i64 8, align 1
  store [8 x i8] c"LazyAnd\00", ptr %1218, align 1
  %1219 = call ptr @make_candy_tag(ptr %1218, ptr null)
  store ptr %1219, ptr @tag_LazyAnd, align 8
  %1220 = alloca i8, i64 4, align 1
  store [4 x i8] c"Not\00", ptr %1220, align 1
  %1221 = call ptr @make_candy_tag(ptr %1220, ptr null)
  store ptr %1221, ptr @tag_Not, align 8
  %1222 = alloca i8, i64 4, align 1
  store [4 x i8] c"Xor\00", ptr %1222, align 1
  %1223 = call ptr @make_candy_tag(ptr %1222, ptr null)
  store ptr %1223, ptr @tag_Xor, align 8
  %1224 = alloca i8, i64 8, align 1
  store [8 x i8] c"Implies\00", ptr %1224, align 1
  %1225 = call ptr @make_candy_tag(ptr %1224, ptr null)
  store ptr %1225, ptr @tag_Implies, align 8
  %1226 = alloca i8, i64 7, align 1
  store [7 x i8] c"LazyOr\00", ptr %1226, align 1
  %1227 = call ptr @make_candy_tag(ptr %1226, ptr null)
  store ptr %1227, ptr @tag_LazyOr, align 8
  %1228 = alloca i8, i64 4, align 1
  store [4 x i8] c"And\00", ptr %1228, align 1
  %1229 = call ptr @make_candy_tag(ptr %1228, ptr null)
  store ptr %1229, ptr @tag_And, align 8
  %1230 = alloca i8, i64 3, align 1
  store [3 x i8] c"Or\00", ptr %1230, align 1
  %1231 = call ptr @make_candy_tag(ptr %1230, ptr null)
  store ptr %1231, ptr @tag_Or, align 8
  %1232 = load ptr, ptr @tag_Equals, align 8
  %1233 = call ptr @Builtins__structGet(ptr %997, ptr %1232)
  %1234 = load ptr, ptr @tag_Equals, align 8
  %1235 = call ptr @Builtins__structGet(ptr %997, ptr %1234)
  %1236 = load ptr, ptr @tag_Equals, align 8
  %1237 = call ptr @Builtins__structGet(ptr %997, ptr %1236)
  %1238 = load ptr, ptr @tag_TypeOf, align 8
  %1239 = call ptr @Builtins__structGet(ptr %997, ptr %1238)
  %1240 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1241 = call ptr @Builtins__structGet(ptr %997, ptr %1240)
  %1242 = load ptr, ptr @tag_Equals, align 8
  %1243 = call ptr @Builtins__structGet(ptr %997, ptr %1242)
  %1244 = load ptr, ptr @tag_TypeOf, align 8
  %1245 = call ptr @Builtins__structGet(ptr %997, ptr %1244)
  %1246 = load ptr, ptr @tag_Equals, align 8
  %1247 = call ptr @Builtins__structGet(ptr %997, ptr %1246)
  %1248 = load ptr, ptr @tag_Equals, align 8
  %1249 = call ptr @Builtins__structGet(ptr %997, ptr %1248)
  %1250 = load ptr, ptr @tag_Equals, align 8
  %1251 = call ptr @Builtins__structGet(ptr %997, ptr %1250)
  %1252 = load ptr, ptr @tag_TypeOf, align 8
  %1253 = call ptr @Builtins__structGet(ptr %997, ptr %1252)
  %1254 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1255 = call ptr @Builtins__structGet(ptr %997, ptr %1254)
  %1256 = load ptr, ptr @tag_Equals, align 8
  %1257 = call ptr @Builtins__structGet(ptr %997, ptr %1256)
  %1258 = load ptr, ptr @tag_TypeOf, align 8
  %1259 = call ptr @Builtins__structGet(ptr %997, ptr %1258)
  %1260 = load ptr, ptr @tag_Equals, align 8
  %1261 = call ptr @Builtins__structGet(ptr %997, ptr %1260)
  %1262 = load ptr, ptr @tag_Equals, align 8
  %1263 = call ptr @Builtins__structGet(ptr %997, ptr %1262)
  %1264 = load ptr, ptr @tag_Equals, align 8
  %1265 = call ptr @Builtins__structGet(ptr %997, ptr %1264)
  %1266 = load ptr, ptr @tag_TypeOf, align 8
  %1267 = call ptr @Builtins__structGet(ptr %997, ptr %1266)
  %1268 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1269 = call ptr @Builtins__structGet(ptr %997, ptr %1268)
  %1270 = load ptr, ptr @tag_Equals, align 8
  %1271 = call ptr @Builtins__structGet(ptr %997, ptr %1270)
  %1272 = load ptr, ptr @tag_TypeOf, align 8
  %1273 = call ptr @Builtins__structGet(ptr %997, ptr %1272)
  %1274 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:controlFlow:59\00", ptr %1274, align 1
  %1275 = call ptr @make_candy_text(ptr %1274)
  store ptr %1275, ptr @"Core:controlFlow:59", align 8
  %1276 = load ptr, ptr @tag_IfElse, align 8
  %1277 = call ptr @Builtins__structGet(ptr %997, ptr %1276)
  %1278 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %1278, align 1
  %1279 = call ptr @make_candy_text(ptr %1278)
  store ptr %1279, ptr @"text_`bool.is condition` was not satisfied", align 8
  %1280 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:7\00", ptr %1280, align 1
  %1281 = call ptr @make_candy_text(ptr %1280)
  store ptr %1281, ptr @"Core:check:check:7", align 8
  %1282 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:9\00", ptr %1282, align 1
  %1283 = call ptr @make_candy_text(ptr %1282)
  store ptr %1283, ptr @"Core:check:check:9", align 8
  %1284 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:check:check:11\00", ptr %1284, align 1
  %1285 = call ptr @make_candy_text(ptr %1284)
  store ptr %1285, ptr @"Core:check:check:11", align 8
  %1286 = alloca i8, i64 24, align 1
  store [24 x i8] c"A check didn't succeed.\00", ptr %1286, align 1
  %1287 = call ptr @make_candy_text(ptr %1286)
  store ptr %1287, ptr @"text_A check didn't succeed.", align 8
  %1288 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:check:check:20\00", ptr %1288, align 1
  %1289 = call ptr @make_candy_text(ptr %1288)
  store ptr %1289, ptr @"Core:check:check:20", align 8
  %1290 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1291 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else.106", ptr %1290, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1291, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  %1292 = load ptr, ptr @tag_Equals, align 8
  %1293 = call ptr @Builtins__structGet(ptr %997, ptr %1292)
  %1294 = load ptr, ptr @tag_Equals, align 8
  %1295 = call ptr @Builtins__structGet(ptr %997, ptr %1294)
  %1296 = load ptr, ptr @tag_Equals, align 8
  %1297 = call ptr @Builtins__structGet(ptr %997, ptr %1296)
  %1298 = load ptr, ptr @tag_TypeOf, align 8
  %1299 = call ptr @Builtins__structGet(ptr %997, ptr %1298)
  %1300 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1301 = call ptr @Builtins__structGet(ptr %997, ptr %1300)
  %1302 = load ptr, ptr @tag_Equals, align 8
  %1303 = call ptr @Builtins__structGet(ptr %997, ptr %1302)
  %1304 = load ptr, ptr @tag_TypeOf, align 8
  %1305 = call ptr @Builtins__structGet(ptr %997, ptr %1304)
  %1306 = load ptr, ptr @tag_Equals, align 8
  %1307 = call ptr @Builtins__structGet(ptr %997, ptr %1306)
  %1308 = load ptr, ptr @tag_Equals, align 8
  %1309 = call ptr @Builtins__structGet(ptr %997, ptr %1308)
  %1310 = load ptr, ptr @tag_Equals, align 8
  %1311 = call ptr @Builtins__structGet(ptr %997, ptr %1310)
  %1312 = load ptr, ptr @tag_TypeOf, align 8
  %1313 = call ptr @Builtins__structGet(ptr %997, ptr %1312)
  %1314 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %1315 = getelementptr inbounds { ptr, ptr }, ptr %1314, i32 0, i32 0
  store ptr %1313, ptr %1315, align 8
  %1316 = getelementptr inbounds { ptr, ptr }, ptr %1314, i32 0, i32 1
  store ptr %1311, ptr %1316, align 8
  %1317 = call ptr @make_candy_function(ptr @Core_type_is, ptr %1314, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1317, ptr @fun_Core_type_is, align 8
  %1318 = alloca ptr, i64 3, align 8
  %1319 = alloca ptr, i64 3, align 8
  %1320 = load ptr, ptr @tag_TypeOf, align 8
  %1321 = getelementptr ptr, ptr %1318, i64 0
  store ptr %1320, ptr %1321, align 8
  %1322 = getelementptr ptr, ptr %1319, i64 0
  store ptr %1313, ptr %1322, align 8
  %1323 = load ptr, ptr @tag_Is, align 8
  %1324 = load ptr, ptr @fun_Core_type_is, align 8
  %1325 = getelementptr ptr, ptr %1318, i64 1
  store ptr %1323, ptr %1325, align 8
  %1326 = getelementptr ptr, ptr %1319, i64 1
  store ptr %1324, ptr %1326, align 8
  %1327 = getelementptr ptr, ptr %1318, i64 2
  store ptr null, ptr %1327, align 8
  %1328 = getelementptr ptr, ptr %1319, i64 2
  store ptr null, ptr %1328, align 8
  %1329 = call ptr @make_candy_struct(ptr %1318, ptr %1319)
  %1330 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1331 = getelementptr inbounds { ptr }, ptr %1330, i32 0, i32 0
  store ptr %1329, ptr %1331, align 8
  %1332 = call ptr @make_candy_function(ptr @Core_function_is, ptr %1330, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1332, ptr @fun_Core_function_is, align 8
  %1333 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1334 = call ptr @Builtins__structGet(ptr %997, ptr %1333)
  %1335 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1336 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1335, i32 0, i32 0
  store ptr %1329, ptr %1336, align 8
  %1337 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1335, i32 0, i32 1
  store ptr %1309, ptr %1337, align 8
  %1338 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1335, i32 0, i32 2
  store ptr %997, ptr %1338, align 8
  %1339 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1335, i32 0, i32 3
  store ptr %1334, ptr %1339, align 8
  %1340 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %1335, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1340, ptr @fun_Core_function_is0, align 8
  %1341 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1342 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1341, i32 0, i32 0
  store ptr %1329, ptr %1342, align 8
  %1343 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1341, i32 0, i32 1
  store ptr %1309, ptr %1343, align 8
  %1344 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1341, i32 0, i32 2
  store ptr %997, ptr %1344, align 8
  %1345 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1341, i32 0, i32 3
  store ptr %1334, ptr %1345, align 8
  %1346 = call ptr @make_candy_function(ptr @Core_function_is1, ptr %1341, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1346, ptr @fun_Core_function_is1, align 8
  %1347 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1348 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1347, i32 0, i32 0
  store ptr %1329, ptr %1348, align 8
  %1349 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1347, i32 0, i32 1
  store ptr %1309, ptr %1349, align 8
  %1350 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1347, i32 0, i32 2
  store ptr %997, ptr %1350, align 8
  %1351 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1347, i32 0, i32 3
  store ptr %1334, ptr %1351, align 8
  %1352 = call ptr @make_candy_function(ptr @Core_function_is2, ptr %1347, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1352, ptr @fun_Core_function_is2, align 8
  %1353 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1354 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1353, i32 0, i32 0
  store ptr %1329, ptr %1354, align 8
  %1355 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1353, i32 0, i32 1
  store ptr %1309, ptr %1355, align 8
  %1356 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1353, i32 0, i32 2
  store ptr %997, ptr %1356, align 8
  %1357 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1353, i32 0, i32 3
  store ptr %1334, ptr %1357, align 8
  %1358 = call ptr @make_candy_function(ptr @Core_function_is3, ptr %1353, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1358, ptr @fun_Core_function_is3, align 8
  %1359 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1360 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1359, i32 0, i32 0
  store ptr %1329, ptr %1360, align 8
  %1361 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1359, i32 0, i32 1
  store ptr %997, ptr %1361, align 8
  %1362 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1359, i32 0, i32 2
  store ptr %1309, ptr %1362, align 8
  %1363 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1359, i32 0, i32 3
  store ptr %1334, ptr %1363, align 8
  %1364 = call ptr @make_candy_function(ptr @Core_function_is4, ptr %1359, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1364, ptr @fun_Core_function_is4, align 8
  %1365 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1366 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1365, i32 0, i32 0
  store ptr %1329, ptr %1366, align 8
  %1367 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1365, i32 0, i32 1
  store ptr %1309, ptr %1367, align 8
  %1368 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1365, i32 0, i32 2
  store ptr %997, ptr %1368, align 8
  %1369 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1365, i32 0, i32 3
  store ptr %1334, ptr %1369, align 8
  %1370 = call ptr @make_candy_function(ptr @Core_function_is5, ptr %1365, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1370, ptr @fun_Core_function_is5, align 8
  %1371 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1372 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1371, i32 0, i32 0
  store ptr %1329, ptr %1372, align 8
  %1373 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1371, i32 0, i32 1
  store ptr %1309, ptr %1373, align 8
  %1374 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1371, i32 0, i32 2
  store ptr %997, ptr %1374, align 8
  %1375 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1371, i32 0, i32 3
  store ptr %1334, ptr %1375, align 8
  %1376 = call ptr @make_candy_function(ptr @Core_function_run, ptr %1371, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1376, ptr @fun_Core_function_run, align 8
  %1377 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1378 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1377, i32 0, i32 0
  store ptr %1329, ptr %1378, align 8
  %1379 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1377, i32 0, i32 1
  store ptr %1309, ptr %1379, align 8
  %1380 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1377, i32 0, i32 2
  store ptr %997, ptr %1380, align 8
  %1381 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1377, i32 0, i32 3
  store ptr %1334, ptr %1381, align 8
  %1382 = call ptr @make_candy_function(ptr @Core_function_doNotRun, ptr %1377, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1382, ptr @fun_Core_function_doNotRun, align 8
  %1383 = alloca ptr, i64 11, align 8
  %1384 = alloca ptr, i64 11, align 8
  %1385 = load ptr, ptr @tag_Is0, align 8
  %1386 = load ptr, ptr @fun_Core_function_is0, align 8
  %1387 = getelementptr ptr, ptr %1383, i64 0
  store ptr %1385, ptr %1387, align 8
  %1388 = getelementptr ptr, ptr %1384, i64 0
  store ptr %1386, ptr %1388, align 8
  %1389 = load ptr, ptr @tag_DoNotRun, align 8
  %1390 = load ptr, ptr @fun_Core_function_doNotRun, align 8
  %1391 = getelementptr ptr, ptr %1383, i64 1
  store ptr %1389, ptr %1391, align 8
  %1392 = getelementptr ptr, ptr %1384, i64 1
  store ptr %1390, ptr %1392, align 8
  %1393 = load ptr, ptr @tag_Is, align 8
  %1394 = load ptr, ptr @fun_Core_function_is, align 8
  %1395 = getelementptr ptr, ptr %1383, i64 2
  store ptr %1393, ptr %1395, align 8
  %1396 = getelementptr ptr, ptr %1384, i64 2
  store ptr %1394, ptr %1396, align 8
  %1397 = load ptr, ptr @tag_Is3, align 8
  %1398 = load ptr, ptr @fun_Core_function_is3, align 8
  %1399 = getelementptr ptr, ptr %1383, i64 3
  store ptr %1397, ptr %1399, align 8
  %1400 = getelementptr ptr, ptr %1384, i64 3
  store ptr %1398, ptr %1400, align 8
  %1401 = load ptr, ptr @tag_Is2, align 8
  %1402 = load ptr, ptr @fun_Core_function_is2, align 8
  %1403 = getelementptr ptr, ptr %1383, i64 4
  store ptr %1401, ptr %1403, align 8
  %1404 = getelementptr ptr, ptr %1384, i64 4
  store ptr %1402, ptr %1404, align 8
  %1405 = load ptr, ptr @tag_Is4, align 8
  %1406 = load ptr, ptr @fun_Core_function_is4, align 8
  %1407 = getelementptr ptr, ptr %1383, i64 5
  store ptr %1405, ptr %1407, align 8
  %1408 = getelementptr ptr, ptr %1384, i64 5
  store ptr %1406, ptr %1408, align 8
  %1409 = load ptr, ptr @tag_Is1, align 8
  %1410 = load ptr, ptr @fun_Core_function_is1, align 8
  %1411 = getelementptr ptr, ptr %1383, i64 6
  store ptr %1409, ptr %1411, align 8
  %1412 = getelementptr ptr, ptr %1384, i64 6
  store ptr %1410, ptr %1412, align 8
  %1413 = load ptr, ptr @tag_Is5, align 8
  %1414 = load ptr, ptr @fun_Core_function_is5, align 8
  %1415 = getelementptr ptr, ptr %1383, i64 7
  store ptr %1413, ptr %1415, align 8
  %1416 = getelementptr ptr, ptr %1384, i64 7
  store ptr %1414, ptr %1416, align 8
  %1417 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1418 = getelementptr ptr, ptr %1383, i64 8
  store ptr %1417, ptr %1418, align 8
  %1419 = getelementptr ptr, ptr %1384, i64 8
  store ptr %1334, ptr %1419, align 8
  %1420 = load ptr, ptr @tag_Run, align 8
  %1421 = load ptr, ptr @fun_Core_function_run, align 8
  %1422 = getelementptr ptr, ptr %1383, i64 9
  store ptr %1420, ptr %1422, align 8
  %1423 = getelementptr ptr, ptr %1384, i64 9
  store ptr %1421, ptr %1423, align 8
  %1424 = getelementptr ptr, ptr %1383, i64 10
  store ptr null, ptr %1424, align 8
  %1425 = getelementptr ptr, ptr %1384, i64 10
  store ptr null, ptr %1425, align 8
  %1426 = call ptr @make_candy_struct(ptr %1383, ptr %1384)
  %1427 = load ptr, ptr @tag_Equals, align 8
  %1428 = call ptr @Builtins__structGet(ptr %997, ptr %1427)
  %1429 = load ptr, ptr @tag_TypeOf, align 8
  %1430 = call ptr @Builtins__structGet(ptr %997, ptr %1429)
  %1431 = load ptr, ptr @tag_IfElse, align 8
  %1432 = call ptr @Builtins__structGet(ptr %997, ptr %1431)
  %1433 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:7\00", ptr %1433, align 1
  %1434 = call ptr @make_candy_text(ptr %1433)
  store ptr %1434, ptr @"Core:controlFlow:recursive:7", align 8
  %1435 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:9\00", ptr %1435, align 1
  %1436 = call ptr @make_candy_text(ptr %1435)
  store ptr %1436, ptr @"Core:controlFlow:recursive:9", align 8
  %1437 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %1437, align 1
  %1438 = call ptr @make_candy_text(ptr %1437)
  store ptr %1438, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %1439 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:17\00", ptr %1439, align 1
  %1440 = call ptr @make_candy_text(ptr %1439)
  store ptr %1440, ptr @"Core:controlFlow:recursive:17", align 8
  %1441 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:18:0:3\00", ptr %1441, align 1
  %1442 = call ptr @make_candy_text(ptr %1441)
  store ptr %1442, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  %1443 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:18:5\00", ptr %1443, align 1
  %1444 = call ptr @make_candy_text(ptr %1443)
  store ptr %1444, ptr @"Core:controlFlow:recursive:18:5", align 8
  %1445 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:23\00", ptr %1445, align 1
  %1446 = call ptr @make_candy_text(ptr %1445)
  store ptr %1446, ptr @"Core:controlFlow:recursive:23", align 8
  %1447 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1448 = getelementptr inbounds { ptr }, ptr %1447, i32 0, i32 0
  store ptr %1426, ptr %1448, align 8
  %1449 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive, ptr %1447, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1449, ptr @fun_Core_controlFlow_recursive, align 8
  %1450 = load ptr, ptr @tag_Equals, align 8
  %1451 = call ptr @Builtins__structGet(ptr %997, ptr %1450)
  %1452 = load ptr, ptr @tag_Equals, align 8
  %1453 = call ptr @Builtins__structGet(ptr %997, ptr %1452)
  %1454 = load ptr, ptr @tag_Equals, align 8
  %1455 = call ptr @Builtins__structGet(ptr %997, ptr %1454)
  %1456 = load ptr, ptr @tag_Equals, align 8
  %1457 = call ptr @Builtins__structGet(ptr %997, ptr %1456)
  %1458 = load ptr, ptr @tag_TypeOf, align 8
  %1459 = call ptr @Builtins__structGet(ptr %997, ptr %1458)
  %1460 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %1461 = getelementptr inbounds { ptr, ptr }, ptr %1460, i32 0, i32 0
  store ptr %1457, ptr %1461, align 8
  %1462 = getelementptr inbounds { ptr, ptr }, ptr %1460, i32 0, i32 1
  store ptr %1459, ptr %1462, align 8
  %1463 = call ptr @make_candy_function(ptr @Core_type_is.112, ptr %1460, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1463, ptr @fun_Core_type_is.113, align 8
  %1464 = alloca ptr, i64 3, align 8
  %1465 = alloca ptr, i64 3, align 8
  %1466 = load ptr, ptr @tag_TypeOf, align 8
  %1467 = getelementptr ptr, ptr %1464, i64 0
  store ptr %1466, ptr %1467, align 8
  %1468 = getelementptr ptr, ptr %1465, i64 0
  store ptr %1459, ptr %1468, align 8
  %1469 = load ptr, ptr @tag_Is, align 8
  %1470 = load ptr, ptr @fun_Core_type_is.113, align 8
  %1471 = getelementptr ptr, ptr %1464, i64 1
  store ptr %1469, ptr %1471, align 8
  %1472 = getelementptr ptr, ptr %1465, i64 1
  store ptr %1470, ptr %1472, align 8
  %1473 = getelementptr ptr, ptr %1464, i64 2
  store ptr null, ptr %1473, align 8
  %1474 = getelementptr ptr, ptr %1465, i64 2
  store ptr null, ptr %1474, align 8
  %1475 = call ptr @make_candy_struct(ptr %1464, ptr %1465)
  %1476 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1477 = getelementptr inbounds { ptr }, ptr %1476, i32 0, i32 0
  store ptr %1475, ptr %1477, align 8
  %1478 = call ptr @make_candy_function(ptr @Core_function_is.114, ptr %1476, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1478, ptr @fun_Core_function_is.115, align 8
  %1479 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1480 = call ptr @Builtins__structGet(ptr %997, ptr %1479)
  %1481 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1482 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1481, i32 0, i32 0
  store ptr %997, ptr %1482, align 8
  %1483 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1481, i32 0, i32 1
  store ptr %1480, ptr %1483, align 8
  %1484 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1481, i32 0, i32 2
  store ptr %1475, ptr %1484, align 8
  %1485 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1481, i32 0, i32 3
  store ptr %1455, ptr %1485, align 8
  %1486 = call ptr @make_candy_function(ptr @Core_function_is0.116, ptr %1481, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1486, ptr @fun_Core_function_is0.117, align 8
  %1487 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1488 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1487, i32 0, i32 0
  store ptr %997, ptr %1488, align 8
  %1489 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1487, i32 0, i32 1
  store ptr %1480, ptr %1489, align 8
  %1490 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1487, i32 0, i32 2
  store ptr %1475, ptr %1490, align 8
  %1491 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1487, i32 0, i32 3
  store ptr %1455, ptr %1491, align 8
  %1492 = call ptr @make_candy_function(ptr @Core_function_is1.120, ptr %1487, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1492, ptr @fun_Core_function_is1.121, align 8
  %1493 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1494 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1493, i32 0, i32 0
  store ptr %997, ptr %1494, align 8
  %1495 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1493, i32 0, i32 1
  store ptr %1480, ptr %1495, align 8
  %1496 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1493, i32 0, i32 2
  store ptr %1475, ptr %1496, align 8
  %1497 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1493, i32 0, i32 3
  store ptr %1455, ptr %1497, align 8
  %1498 = call ptr @make_candy_function(ptr @Core_function_is2.124, ptr %1493, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1498, ptr @fun_Core_function_is2.125, align 8
  %1499 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1500 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1499, i32 0, i32 0
  store ptr %997, ptr %1500, align 8
  %1501 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1499, i32 0, i32 1
  store ptr %1480, ptr %1501, align 8
  %1502 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1499, i32 0, i32 2
  store ptr %1475, ptr %1502, align 8
  %1503 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1499, i32 0, i32 3
  store ptr %1455, ptr %1503, align 8
  %1504 = call ptr @make_candy_function(ptr @Core_function_is3.128, ptr %1499, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1504, ptr @fun_Core_function_is3.129, align 8
  %1505 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1506 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1505, i32 0, i32 0
  store ptr %997, ptr %1506, align 8
  %1507 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1505, i32 0, i32 1
  store ptr %1480, ptr %1507, align 8
  %1508 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1505, i32 0, i32 2
  store ptr %1475, ptr %1508, align 8
  %1509 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1505, i32 0, i32 3
  store ptr %1455, ptr %1509, align 8
  %1510 = call ptr @make_candy_function(ptr @Core_function_is4.132, ptr %1505, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1510, ptr @fun_Core_function_is4.133, align 8
  %1511 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1512 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1511, i32 0, i32 0
  store ptr %997, ptr %1512, align 8
  %1513 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1511, i32 0, i32 1
  store ptr %1480, ptr %1513, align 8
  %1514 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1511, i32 0, i32 2
  store ptr %1475, ptr %1514, align 8
  %1515 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1511, i32 0, i32 3
  store ptr %1455, ptr %1515, align 8
  %1516 = call ptr @make_candy_function(ptr @Core_function_is5.136, ptr %1511, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1516, ptr @fun_Core_function_is5.137, align 8
  %1517 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1518 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1517, i32 0, i32 0
  store ptr %997, ptr %1518, align 8
  %1519 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1517, i32 0, i32 1
  store ptr %1480, ptr %1519, align 8
  %1520 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1517, i32 0, i32 2
  store ptr %1475, ptr %1520, align 8
  %1521 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1517, i32 0, i32 3
  store ptr %1455, ptr %1521, align 8
  %1522 = call ptr @make_candy_function(ptr @Core_function_run.140, ptr %1517, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1522, ptr @fun_Core_function_run.141, align 8
  %1523 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1524 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1523, i32 0, i32 0
  store ptr %997, ptr %1524, align 8
  %1525 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1523, i32 0, i32 1
  store ptr %1480, ptr %1525, align 8
  %1526 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1523, i32 0, i32 2
  store ptr %1475, ptr %1526, align 8
  %1527 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1523, i32 0, i32 3
  store ptr %1455, ptr %1527, align 8
  %1528 = call ptr @make_candy_function(ptr @Core_function_doNotRun.144, ptr %1523, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1528, ptr @fun_Core_function_doNotRun.145, align 8
  %1529 = alloca ptr, i64 11, align 8
  %1530 = alloca ptr, i64 11, align 8
  %1531 = load ptr, ptr @tag_Is0, align 8
  %1532 = load ptr, ptr @fun_Core_function_is0.117, align 8
  %1533 = getelementptr ptr, ptr %1529, i64 0
  store ptr %1531, ptr %1533, align 8
  %1534 = getelementptr ptr, ptr %1530, i64 0
  store ptr %1532, ptr %1534, align 8
  %1535 = load ptr, ptr @tag_DoNotRun, align 8
  %1536 = load ptr, ptr @fun_Core_function_doNotRun.145, align 8
  %1537 = getelementptr ptr, ptr %1529, i64 1
  store ptr %1535, ptr %1537, align 8
  %1538 = getelementptr ptr, ptr %1530, i64 1
  store ptr %1536, ptr %1538, align 8
  %1539 = load ptr, ptr @tag_Is, align 8
  %1540 = load ptr, ptr @fun_Core_function_is.115, align 8
  %1541 = getelementptr ptr, ptr %1529, i64 2
  store ptr %1539, ptr %1541, align 8
  %1542 = getelementptr ptr, ptr %1530, i64 2
  store ptr %1540, ptr %1542, align 8
  %1543 = load ptr, ptr @tag_Is3, align 8
  %1544 = load ptr, ptr @fun_Core_function_is3.129, align 8
  %1545 = getelementptr ptr, ptr %1529, i64 3
  store ptr %1543, ptr %1545, align 8
  %1546 = getelementptr ptr, ptr %1530, i64 3
  store ptr %1544, ptr %1546, align 8
  %1547 = load ptr, ptr @tag_Is2, align 8
  %1548 = load ptr, ptr @fun_Core_function_is2.125, align 8
  %1549 = getelementptr ptr, ptr %1529, i64 4
  store ptr %1547, ptr %1549, align 8
  %1550 = getelementptr ptr, ptr %1530, i64 4
  store ptr %1548, ptr %1550, align 8
  %1551 = load ptr, ptr @tag_Is4, align 8
  %1552 = load ptr, ptr @fun_Core_function_is4.133, align 8
  %1553 = getelementptr ptr, ptr %1529, i64 5
  store ptr %1551, ptr %1553, align 8
  %1554 = getelementptr ptr, ptr %1530, i64 5
  store ptr %1552, ptr %1554, align 8
  %1555 = load ptr, ptr @tag_Is1, align 8
  %1556 = load ptr, ptr @fun_Core_function_is1.121, align 8
  %1557 = getelementptr ptr, ptr %1529, i64 6
  store ptr %1555, ptr %1557, align 8
  %1558 = getelementptr ptr, ptr %1530, i64 6
  store ptr %1556, ptr %1558, align 8
  %1559 = load ptr, ptr @tag_Is5, align 8
  %1560 = load ptr, ptr @fun_Core_function_is5.137, align 8
  %1561 = getelementptr ptr, ptr %1529, i64 7
  store ptr %1559, ptr %1561, align 8
  %1562 = getelementptr ptr, ptr %1530, i64 7
  store ptr %1560, ptr %1562, align 8
  %1563 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1564 = getelementptr ptr, ptr %1529, i64 8
  store ptr %1563, ptr %1564, align 8
  %1565 = getelementptr ptr, ptr %1530, i64 8
  store ptr %1480, ptr %1565, align 8
  %1566 = load ptr, ptr @tag_Run, align 8
  %1567 = load ptr, ptr @fun_Core_function_run.141, align 8
  %1568 = getelementptr ptr, ptr %1529, i64 9
  store ptr %1566, ptr %1568, align 8
  %1569 = getelementptr ptr, ptr %1530, i64 9
  store ptr %1567, ptr %1569, align 8
  %1570 = getelementptr ptr, ptr %1529, i64 10
  store ptr null, ptr %1570, align 8
  %1571 = getelementptr ptr, ptr %1530, i64 10
  store ptr null, ptr %1571, align 8
  %1572 = call ptr @make_candy_struct(ptr %1529, ptr %1530)
  %1573 = load ptr, ptr @tag_Equals, align 8
  %1574 = call ptr @Builtins__structGet(ptr %997, ptr %1573)
  %1575 = load ptr, ptr @tag_TypeOf, align 8
  %1576 = call ptr @Builtins__structGet(ptr %997, ptr %1575)
  %1577 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1578 = getelementptr inbounds { ptr }, ptr %1577, i32 0, i32 0
  store ptr %1572, ptr %1578, align 8
  %1579 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd, ptr %1577, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1579, ptr @fun_Core_bool_lazyAnd, align 8
  %1580 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1581 = call ptr @make_candy_function(ptr @Core_bool_and, ptr %1580, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1581, ptr @fun_Core_bool_and, align 8
  %1582 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1583 = getelementptr inbounds { ptr }, ptr %1582, i32 0, i32 0
  store ptr %1572, ptr %1583, align 8
  %1584 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %1582, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1584, ptr @fun_Core_bool_lazyOr, align 8
  %1585 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1586 = call ptr @make_candy_function(ptr @Core_bool_or, ptr %1585, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1586, ptr @fun_Core_bool_or, align 8
  %1587 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1588 = getelementptr inbounds { ptr }, ptr %1587, i32 0, i32 0
  store ptr %1453, ptr %1588, align 8
  %1589 = call ptr @make_candy_function(ptr @Core_bool_xor, ptr %1587, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1589, ptr @fun_Core_bool_xor, align 8
  %1590 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1591 = call ptr @make_candy_function(ptr @Core_bool_implies, ptr %1590, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1591, ptr @fun_Core_bool_implies, align 8
  %1592 = alloca ptr, i64 9, align 8
  %1593 = alloca ptr, i64 9, align 8
  %1594 = load ptr, ptr @tag_LazyOr, align 8
  %1595 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  %1596 = getelementptr ptr, ptr %1592, i64 0
  store ptr %1594, ptr %1596, align 8
  %1597 = getelementptr ptr, ptr %1593, i64 0
  store ptr %1595, ptr %1597, align 8
  %1598 = load ptr, ptr @tag_Implies, align 8
  %1599 = load ptr, ptr @fun_Core_bool_implies, align 8
  %1600 = getelementptr ptr, ptr %1592, i64 1
  store ptr %1598, ptr %1600, align 8
  %1601 = getelementptr ptr, ptr %1593, i64 1
  store ptr %1599, ptr %1601, align 8
  %1602 = load ptr, ptr @tag_Not, align 8
  %1603 = load ptr, ptr @fun_Core_bool_not, align 8
  %1604 = getelementptr ptr, ptr %1592, i64 2
  store ptr %1602, ptr %1604, align 8
  %1605 = getelementptr ptr, ptr %1593, i64 2
  store ptr %1603, ptr %1605, align 8
  %1606 = load ptr, ptr @tag_And, align 8
  %1607 = load ptr, ptr @fun_Core_bool_and, align 8
  %1608 = getelementptr ptr, ptr %1592, i64 3
  store ptr %1606, ptr %1608, align 8
  %1609 = getelementptr ptr, ptr %1593, i64 3
  store ptr %1607, ptr %1609, align 8
  %1610 = load ptr, ptr @tag_LazyAnd, align 8
  %1611 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  %1612 = getelementptr ptr, ptr %1592, i64 4
  store ptr %1610, ptr %1612, align 8
  %1613 = getelementptr ptr, ptr %1593, i64 4
  store ptr %1611, ptr %1613, align 8
  %1614 = load ptr, ptr @tag_Is, align 8
  %1615 = load ptr, ptr @fun_Core_bool_is, align 8
  %1616 = getelementptr ptr, ptr %1592, i64 5
  store ptr %1614, ptr %1616, align 8
  %1617 = getelementptr ptr, ptr %1593, i64 5
  store ptr %1615, ptr %1617, align 8
  %1618 = load ptr, ptr @tag_Or, align 8
  %1619 = load ptr, ptr @fun_Core_bool_or, align 8
  %1620 = getelementptr ptr, ptr %1592, i64 6
  store ptr %1618, ptr %1620, align 8
  %1621 = getelementptr ptr, ptr %1593, i64 6
  store ptr %1619, ptr %1621, align 8
  %1622 = load ptr, ptr @tag_Xor, align 8
  %1623 = load ptr, ptr @fun_Core_bool_xor, align 8
  %1624 = getelementptr ptr, ptr %1592, i64 7
  store ptr %1622, ptr %1624, align 8
  %1625 = getelementptr ptr, ptr %1593, i64 7
  store ptr %1623, ptr %1625, align 8
  %1626 = getelementptr ptr, ptr %1592, i64 8
  store ptr null, ptr %1626, align 8
  %1627 = getelementptr ptr, ptr %1593, i64 8
  store ptr null, ptr %1627, align 8
  %1628 = call ptr @make_candy_struct(ptr %1592, ptr %1593)
  %1629 = load ptr, ptr @tag_Equals, align 8
  %1630 = call ptr @Builtins__structGet(ptr %997, ptr %1629)
  %1631 = load ptr, ptr @tag_Equals, align 8
  %1632 = call ptr @Builtins__structGet(ptr %997, ptr %1631)
  %1633 = load ptr, ptr @tag_Equals, align 8
  %1634 = call ptr @Builtins__structGet(ptr %997, ptr %1633)
  %1635 = load ptr, ptr @tag_TypeOf, align 8
  %1636 = call ptr @Builtins__structGet(ptr %997, ptr %1635)
  %1637 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %1638 = getelementptr inbounds { ptr, ptr }, ptr %1637, i32 0, i32 0
  store ptr %1636, ptr %1638, align 8
  %1639 = getelementptr inbounds { ptr, ptr }, ptr %1637, i32 0, i32 1
  store ptr %1634, ptr %1639, align 8
  %1640 = call ptr @make_candy_function(ptr @Core_type_is.182, ptr %1637, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1640, ptr @fun_Core_type_is.183, align 8
  %1641 = alloca ptr, i64 3, align 8
  %1642 = alloca ptr, i64 3, align 8
  %1643 = load ptr, ptr @tag_TypeOf, align 8
  %1644 = getelementptr ptr, ptr %1641, i64 0
  store ptr %1643, ptr %1644, align 8
  %1645 = getelementptr ptr, ptr %1642, i64 0
  store ptr %1636, ptr %1645, align 8
  %1646 = load ptr, ptr @tag_Is, align 8
  %1647 = load ptr, ptr @fun_Core_type_is.183, align 8
  %1648 = getelementptr ptr, ptr %1641, i64 1
  store ptr %1646, ptr %1648, align 8
  %1649 = getelementptr ptr, ptr %1642, i64 1
  store ptr %1647, ptr %1649, align 8
  %1650 = getelementptr ptr, ptr %1641, i64 2
  store ptr null, ptr %1650, align 8
  %1651 = getelementptr ptr, ptr %1642, i64 2
  store ptr null, ptr %1651, align 8
  %1652 = call ptr @make_candy_struct(ptr %1641, ptr %1642)
  %1653 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1654 = getelementptr inbounds { ptr }, ptr %1653, i32 0, i32 0
  store ptr %1652, ptr %1654, align 8
  %1655 = call ptr @make_candy_function(ptr @Core_function_is.184, ptr %1653, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1655, ptr @fun_Core_function_is.185, align 8
  %1656 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1657 = call ptr @Builtins__structGet(ptr %997, ptr %1656)
  %1658 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1659 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1658, i32 0, i32 0
  store ptr %1657, ptr %1659, align 8
  %1660 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1658, i32 0, i32 1
  store ptr %1652, ptr %1660, align 8
  %1661 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1658, i32 0, i32 2
  store ptr %997, ptr %1661, align 8
  %1662 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1658, i32 0, i32 3
  store ptr %1632, ptr %1662, align 8
  %1663 = call ptr @make_candy_function(ptr @Core_function_is0.186, ptr %1658, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1663, ptr @fun_Core_function_is0.187, align 8
  %1664 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1665 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1664, i32 0, i32 0
  store ptr %1657, ptr %1665, align 8
  %1666 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1664, i32 0, i32 1
  store ptr %1652, ptr %1666, align 8
  %1667 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1664, i32 0, i32 2
  store ptr %997, ptr %1667, align 8
  %1668 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1664, i32 0, i32 3
  store ptr %1632, ptr %1668, align 8
  %1669 = call ptr @make_candy_function(ptr @Core_function_is1.190, ptr %1664, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1669, ptr @fun_Core_function_is1.191, align 8
  %1670 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1671 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1670, i32 0, i32 0
  store ptr %1657, ptr %1671, align 8
  %1672 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1670, i32 0, i32 1
  store ptr %1652, ptr %1672, align 8
  %1673 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1670, i32 0, i32 2
  store ptr %997, ptr %1673, align 8
  %1674 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1670, i32 0, i32 3
  store ptr %1632, ptr %1674, align 8
  %1675 = call ptr @make_candy_function(ptr @Core_function_is2.194, ptr %1670, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1675, ptr @fun_Core_function_is2.195, align 8
  %1676 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1677 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1676, i32 0, i32 0
  store ptr %1657, ptr %1677, align 8
  %1678 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1676, i32 0, i32 1
  store ptr %1652, ptr %1678, align 8
  %1679 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1676, i32 0, i32 2
  store ptr %997, ptr %1679, align 8
  %1680 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1676, i32 0, i32 3
  store ptr %1632, ptr %1680, align 8
  %1681 = call ptr @make_candy_function(ptr @Core_function_is3.198, ptr %1676, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1681, ptr @fun_Core_function_is3.199, align 8
  %1682 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1683 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1682, i32 0, i32 0
  store ptr %1657, ptr %1683, align 8
  %1684 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1682, i32 0, i32 1
  store ptr %1652, ptr %1684, align 8
  %1685 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1682, i32 0, i32 2
  store ptr %997, ptr %1685, align 8
  %1686 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1682, i32 0, i32 3
  store ptr %1632, ptr %1686, align 8
  %1687 = call ptr @make_candy_function(ptr @Core_function_is4.202, ptr %1682, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1687, ptr @fun_Core_function_is4.203, align 8
  %1688 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1689 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1688, i32 0, i32 0
  store ptr %1657, ptr %1689, align 8
  %1690 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1688, i32 0, i32 1
  store ptr %1652, ptr %1690, align 8
  %1691 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1688, i32 0, i32 2
  store ptr %997, ptr %1691, align 8
  %1692 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1688, i32 0, i32 3
  store ptr %1632, ptr %1692, align 8
  %1693 = call ptr @make_candy_function(ptr @Core_function_is5.206, ptr %1688, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1693, ptr @fun_Core_function_is5.207, align 8
  %1694 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1695 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1694, i32 0, i32 0
  store ptr %1657, ptr %1695, align 8
  %1696 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1694, i32 0, i32 1
  store ptr %1652, ptr %1696, align 8
  %1697 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1694, i32 0, i32 2
  store ptr %997, ptr %1697, align 8
  %1698 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1694, i32 0, i32 3
  store ptr %1632, ptr %1698, align 8
  %1699 = call ptr @make_candy_function(ptr @Core_function_run.210, ptr %1694, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1699, ptr @fun_Core_function_run.211, align 8
  %1700 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1701 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1700, i32 0, i32 0
  store ptr %1657, ptr %1701, align 8
  %1702 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1700, i32 0, i32 1
  store ptr %1652, ptr %1702, align 8
  %1703 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1700, i32 0, i32 2
  store ptr %997, ptr %1703, align 8
  %1704 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1700, i32 0, i32 3
  store ptr %1632, ptr %1704, align 8
  %1705 = call ptr @make_candy_function(ptr @Core_function_doNotRun.214, ptr %1700, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1705, ptr @fun_Core_function_doNotRun.215, align 8
  %1706 = alloca ptr, i64 11, align 8
  %1707 = alloca ptr, i64 11, align 8
  %1708 = load ptr, ptr @tag_Is0, align 8
  %1709 = load ptr, ptr @fun_Core_function_is0.187, align 8
  %1710 = getelementptr ptr, ptr %1706, i64 0
  store ptr %1708, ptr %1710, align 8
  %1711 = getelementptr ptr, ptr %1707, i64 0
  store ptr %1709, ptr %1711, align 8
  %1712 = load ptr, ptr @tag_DoNotRun, align 8
  %1713 = load ptr, ptr @fun_Core_function_doNotRun.215, align 8
  %1714 = getelementptr ptr, ptr %1706, i64 1
  store ptr %1712, ptr %1714, align 8
  %1715 = getelementptr ptr, ptr %1707, i64 1
  store ptr %1713, ptr %1715, align 8
  %1716 = load ptr, ptr @tag_Is, align 8
  %1717 = load ptr, ptr @fun_Core_function_is.185, align 8
  %1718 = getelementptr ptr, ptr %1706, i64 2
  store ptr %1716, ptr %1718, align 8
  %1719 = getelementptr ptr, ptr %1707, i64 2
  store ptr %1717, ptr %1719, align 8
  %1720 = load ptr, ptr @tag_Is3, align 8
  %1721 = load ptr, ptr @fun_Core_function_is3.199, align 8
  %1722 = getelementptr ptr, ptr %1706, i64 3
  store ptr %1720, ptr %1722, align 8
  %1723 = getelementptr ptr, ptr %1707, i64 3
  store ptr %1721, ptr %1723, align 8
  %1724 = load ptr, ptr @tag_Is2, align 8
  %1725 = load ptr, ptr @fun_Core_function_is2.195, align 8
  %1726 = getelementptr ptr, ptr %1706, i64 4
  store ptr %1724, ptr %1726, align 8
  %1727 = getelementptr ptr, ptr %1707, i64 4
  store ptr %1725, ptr %1727, align 8
  %1728 = load ptr, ptr @tag_Is4, align 8
  %1729 = load ptr, ptr @fun_Core_function_is4.203, align 8
  %1730 = getelementptr ptr, ptr %1706, i64 5
  store ptr %1728, ptr %1730, align 8
  %1731 = getelementptr ptr, ptr %1707, i64 5
  store ptr %1729, ptr %1731, align 8
  %1732 = load ptr, ptr @tag_Is1, align 8
  %1733 = load ptr, ptr @fun_Core_function_is1.191, align 8
  %1734 = getelementptr ptr, ptr %1706, i64 6
  store ptr %1732, ptr %1734, align 8
  %1735 = getelementptr ptr, ptr %1707, i64 6
  store ptr %1733, ptr %1735, align 8
  %1736 = load ptr, ptr @tag_Is5, align 8
  %1737 = load ptr, ptr @fun_Core_function_is5.207, align 8
  %1738 = getelementptr ptr, ptr %1706, i64 7
  store ptr %1736, ptr %1738, align 8
  %1739 = getelementptr ptr, ptr %1707, i64 7
  store ptr %1737, ptr %1739, align 8
  %1740 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1741 = getelementptr ptr, ptr %1706, i64 8
  store ptr %1740, ptr %1741, align 8
  %1742 = getelementptr ptr, ptr %1707, i64 8
  store ptr %1657, ptr %1742, align 8
  %1743 = load ptr, ptr @tag_Run, align 8
  %1744 = load ptr, ptr @fun_Core_function_run.211, align 8
  %1745 = getelementptr ptr, ptr %1706, i64 9
  store ptr %1743, ptr %1745, align 8
  %1746 = getelementptr ptr, ptr %1707, i64 9
  store ptr %1744, ptr %1746, align 8
  %1747 = getelementptr ptr, ptr %1706, i64 10
  store ptr null, ptr %1747, align 8
  %1748 = getelementptr ptr, ptr %1707, i64 10
  store ptr null, ptr %1748, align 8
  %1749 = call ptr @make_candy_struct(ptr %1706, ptr %1707)
  %1750 = load ptr, ptr @tag_Equals, align 8
  %1751 = call ptr @Builtins__structGet(ptr %997, ptr %1750)
  %1752 = load ptr, ptr @tag_TypeOf, align 8
  %1753 = call ptr @Builtins__structGet(ptr %997, ptr %1752)
  %1754 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1755 = getelementptr inbounds { ptr }, ptr %1754, i32 0, i32 0
  store ptr %1749, ptr %1755, align 8
  %1756 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.218, ptr %1754, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1756, ptr @fun_Core_bool_lazyAnd.219, align 8
  %1757 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1758 = call ptr @make_candy_function(ptr @Core_bool_and.246, ptr %1757, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1758, ptr @fun_Core_bool_and.247, align 8
  %1759 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1760 = getelementptr inbounds { ptr }, ptr %1759, i32 0, i32 0
  store ptr %1749, ptr %1760, align 8
  %1761 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.250, ptr %1759, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1761, ptr @fun_Core_bool_lazyOr.251, align 8
  %1762 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1763 = call ptr @make_candy_function(ptr @Core_bool_or.278, ptr %1762, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1763, ptr @fun_Core_bool_or.279, align 8
  %1764 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1765 = getelementptr inbounds { ptr }, ptr %1764, i32 0, i32 0
  store ptr %1630, ptr %1765, align 8
  %1766 = call ptr @make_candy_function(ptr @Core_bool_xor.282, ptr %1764, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1766, ptr @fun_Core_bool_xor.283, align 8
  %1767 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1768 = call ptr @make_candy_function(ptr @Core_bool_implies.284, ptr %1767, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1768, ptr @fun_Core_bool_implies.285, align 8
  %1769 = alloca ptr, i64 9, align 8
  %1770 = alloca ptr, i64 9, align 8
  %1771 = load ptr, ptr @tag_LazyOr, align 8
  %1772 = load ptr, ptr @fun_Core_bool_lazyOr.251, align 8
  %1773 = getelementptr ptr, ptr %1769, i64 0
  store ptr %1771, ptr %1773, align 8
  %1774 = getelementptr ptr, ptr %1770, i64 0
  store ptr %1772, ptr %1774, align 8
  %1775 = load ptr, ptr @tag_Implies, align 8
  %1776 = load ptr, ptr @fun_Core_bool_implies.285, align 8
  %1777 = getelementptr ptr, ptr %1769, i64 1
  store ptr %1775, ptr %1777, align 8
  %1778 = getelementptr ptr, ptr %1770, i64 1
  store ptr %1776, ptr %1778, align 8
  %1779 = load ptr, ptr @tag_Not, align 8
  %1780 = load ptr, ptr @fun_Core_bool_not, align 8
  %1781 = getelementptr ptr, ptr %1769, i64 2
  store ptr %1779, ptr %1781, align 8
  %1782 = getelementptr ptr, ptr %1770, i64 2
  store ptr %1780, ptr %1782, align 8
  %1783 = load ptr, ptr @tag_And, align 8
  %1784 = load ptr, ptr @fun_Core_bool_and.247, align 8
  %1785 = getelementptr ptr, ptr %1769, i64 3
  store ptr %1783, ptr %1785, align 8
  %1786 = getelementptr ptr, ptr %1770, i64 3
  store ptr %1784, ptr %1786, align 8
  %1787 = load ptr, ptr @tag_LazyAnd, align 8
  %1788 = load ptr, ptr @fun_Core_bool_lazyAnd.219, align 8
  %1789 = getelementptr ptr, ptr %1769, i64 4
  store ptr %1787, ptr %1789, align 8
  %1790 = getelementptr ptr, ptr %1770, i64 4
  store ptr %1788, ptr %1790, align 8
  %1791 = load ptr, ptr @tag_Is, align 8
  %1792 = load ptr, ptr @fun_Core_bool_is, align 8
  %1793 = getelementptr ptr, ptr %1769, i64 5
  store ptr %1791, ptr %1793, align 8
  %1794 = getelementptr ptr, ptr %1770, i64 5
  store ptr %1792, ptr %1794, align 8
  %1795 = load ptr, ptr @tag_Or, align 8
  %1796 = load ptr, ptr @fun_Core_bool_or.279, align 8
  %1797 = getelementptr ptr, ptr %1769, i64 6
  store ptr %1795, ptr %1797, align 8
  %1798 = getelementptr ptr, ptr %1770, i64 6
  store ptr %1796, ptr %1798, align 8
  %1799 = load ptr, ptr @tag_Xor, align 8
  %1800 = load ptr, ptr @fun_Core_bool_xor.283, align 8
  %1801 = getelementptr ptr, ptr %1769, i64 7
  store ptr %1799, ptr %1801, align 8
  %1802 = getelementptr ptr, ptr %1770, i64 7
  store ptr %1800, ptr %1802, align 8
  %1803 = getelementptr ptr, ptr %1769, i64 8
  store ptr null, ptr %1803, align 8
  %1804 = getelementptr ptr, ptr %1770, i64 8
  store ptr null, ptr %1804, align 8
  %1805 = call ptr @make_candy_struct(ptr %1769, ptr %1770)
  %1806 = load ptr, ptr @tag_Equals, align 8
  %1807 = call ptr @Builtins__structGet(ptr %997, ptr %1806)
  %1808 = load ptr, ptr @tag_Equals, align 8
  %1809 = call ptr @Builtins__structGet(ptr %997, ptr %1808)
  %1810 = load ptr, ptr @tag_Equals, align 8
  %1811 = call ptr @Builtins__structGet(ptr %997, ptr %1810)
  %1812 = load ptr, ptr @tag_TypeOf, align 8
  %1813 = call ptr @Builtins__structGet(ptr %997, ptr %1812)
  %1814 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1815 = call ptr @Builtins__structGet(ptr %997, ptr %1814)
  %1816 = load ptr, ptr @tag_Equals, align 8
  %1817 = call ptr @Builtins__structGet(ptr %997, ptr %1816)
  %1818 = load ptr, ptr @tag_TypeOf, align 8
  %1819 = call ptr @Builtins__structGet(ptr %997, ptr %1818)
  %1820 = load ptr, ptr @tag_Equals, align 8
  %1821 = call ptr @Builtins__structGet(ptr %997, ptr %1820)
  %1822 = load ptr, ptr @tag_Equals, align 8
  %1823 = call ptr @Builtins__structGet(ptr %997, ptr %1822)
  %1824 = load ptr, ptr @tag_Equals, align 8
  %1825 = call ptr @Builtins__structGet(ptr %997, ptr %1824)
  %1826 = load ptr, ptr @tag_TypeOf, align 8
  %1827 = call ptr @Builtins__structGet(ptr %997, ptr %1826)
  %1828 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1829 = call ptr @Builtins__structGet(ptr %997, ptr %1828)
  %1830 = load ptr, ptr @tag_Equals, align 8
  %1831 = call ptr @Builtins__structGet(ptr %997, ptr %1830)
  %1832 = load ptr, ptr @tag_TypeOf, align 8
  %1833 = call ptr @Builtins__structGet(ptr %997, ptr %1832)
  %1834 = load ptr, ptr @tag_IfElse, align 8
  %1835 = call ptr @Builtins__structGet(ptr %997, ptr %1834)
  %1836 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1837 = getelementptr inbounds { ptr }, ptr %1836, i32 0, i32 0
  store ptr %1805, ptr %1837, align 8
  %1838 = call ptr @make_candy_function(ptr @Core_check_check, ptr %1836, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1838, ptr @fun_Core_check_check, align 8
  %1839 = load ptr, ptr @tag_Equals, align 8
  %1840 = call ptr @Builtins__structGet(ptr %997, ptr %1839)
  %1841 = load ptr, ptr @tag_Equals, align 8
  %1842 = call ptr @Builtins__structGet(ptr %997, ptr %1841)
  %1843 = load ptr, ptr @tag_Equals, align 8
  %1844 = call ptr @Builtins__structGet(ptr %997, ptr %1843)
  %1845 = load ptr, ptr @tag_TypeOf, align 8
  %1846 = call ptr @Builtins__structGet(ptr %997, ptr %1845)
  %1847 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1848 = call ptr @Builtins__structGet(ptr %997, ptr %1847)
  %1849 = load ptr, ptr @tag_Equals, align 8
  %1850 = call ptr @Builtins__structGet(ptr %997, ptr %1849)
  %1851 = load ptr, ptr @tag_TypeOf, align 8
  %1852 = call ptr @Builtins__structGet(ptr %997, ptr %1851)
  %1853 = load ptr, ptr @tag_Equals, align 8
  %1854 = call ptr @Builtins__structGet(ptr %997, ptr %1853)
  %1855 = load ptr, ptr @tag_Equals, align 8
  %1856 = call ptr @Builtins__structGet(ptr %997, ptr %1855)
  %1857 = load ptr, ptr @tag_Equals, align 8
  %1858 = call ptr @Builtins__structGet(ptr %997, ptr %1857)
  %1859 = load ptr, ptr @tag_TypeOf, align 8
  %1860 = call ptr @Builtins__structGet(ptr %997, ptr %1859)
  %1861 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1862 = call ptr @Builtins__structGet(ptr %997, ptr %1861)
  %1863 = load ptr, ptr @tag_Equals, align 8
  %1864 = call ptr @Builtins__structGet(ptr %997, ptr %1863)
  %1865 = load ptr, ptr @tag_TypeOf, align 8
  %1866 = call ptr @Builtins__structGet(ptr %997, ptr %1865)
  %1867 = load ptr, ptr @tag_IfElse, align 8
  %1868 = call ptr @Builtins__structGet(ptr %997, ptr %1867)
  %1869 = load ptr, ptr @tag_Equals, align 8
  %1870 = call ptr @Builtins__structGet(ptr %997, ptr %1869)
  %1871 = load ptr, ptr @tag_Equals, align 8
  %1872 = call ptr @Builtins__structGet(ptr %997, ptr %1871)
  %1873 = load ptr, ptr @tag_Equals, align 8
  %1874 = call ptr @Builtins__structGet(ptr %997, ptr %1873)
  %1875 = load ptr, ptr @tag_TypeOf, align 8
  %1876 = call ptr @Builtins__structGet(ptr %997, ptr %1875)
  %1877 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %1878 = getelementptr inbounds { ptr, ptr }, ptr %1877, i32 0, i32 0
  store ptr %1876, ptr %1878, align 8
  %1879 = getelementptr inbounds { ptr, ptr }, ptr %1877, i32 0, i32 1
  store ptr %1874, ptr %1879, align 8
  %1880 = call ptr @make_candy_function(ptr @Core_type_is.292, ptr %1877, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1880, ptr @fun_Core_type_is.293, align 8
  %1881 = alloca ptr, i64 3, align 8
  %1882 = alloca ptr, i64 3, align 8
  %1883 = load ptr, ptr @tag_TypeOf, align 8
  %1884 = getelementptr ptr, ptr %1881, i64 0
  store ptr %1883, ptr %1884, align 8
  %1885 = getelementptr ptr, ptr %1882, i64 0
  store ptr %1876, ptr %1885, align 8
  %1886 = load ptr, ptr @tag_Is, align 8
  %1887 = load ptr, ptr @fun_Core_type_is.293, align 8
  %1888 = getelementptr ptr, ptr %1881, i64 1
  store ptr %1886, ptr %1888, align 8
  %1889 = getelementptr ptr, ptr %1882, i64 1
  store ptr %1887, ptr %1889, align 8
  %1890 = getelementptr ptr, ptr %1881, i64 2
  store ptr null, ptr %1890, align 8
  %1891 = getelementptr ptr, ptr %1882, i64 2
  store ptr null, ptr %1891, align 8
  %1892 = call ptr @make_candy_struct(ptr %1881, ptr %1882)
  %1893 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1894 = call ptr @Builtins__structGet(ptr %997, ptr %1893)
  %1895 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1896 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1895, i32 0, i32 0
  store ptr %1872, ptr %1896, align 8
  %1897 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1895, i32 0, i32 1
  store ptr %997, ptr %1897, align 8
  %1898 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1895, i32 0, i32 2
  store ptr %1894, ptr %1898, align 8
  %1899 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1895, i32 0, i32 3
  store ptr %1892, ptr %1899, align 8
  %1900 = call ptr @make_candy_function(ptr @Core_function_run.294, ptr %1895, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1900, ptr @fun_Core_function_run.295, align 8
  %1901 = load ptr, ptr @tag_Equals, align 8
  %1902 = call ptr @Builtins__structGet(ptr %997, ptr %1901)
  %1903 = load ptr, ptr @tag_Equals, align 8
  %1904 = call ptr @Builtins__structGet(ptr %997, ptr %1903)
  %1905 = load ptr, ptr @tag_Equals, align 8
  %1906 = call ptr @Builtins__structGet(ptr %997, ptr %1905)
  %1907 = load ptr, ptr @tag_TypeOf, align 8
  %1908 = call ptr @Builtins__structGet(ptr %997, ptr %1907)
  %1909 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %1910 = getelementptr inbounds { ptr, ptr }, ptr %1909, i32 0, i32 0
  store ptr %1908, ptr %1910, align 8
  %1911 = getelementptr inbounds { ptr, ptr }, ptr %1909, i32 0, i32 1
  store ptr %1906, ptr %1911, align 8
  %1912 = call ptr @make_candy_function(ptr @Core_type_is.298, ptr %1909, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1912, ptr @fun_Core_type_is.299, align 8
  %1913 = alloca ptr, i64 3, align 8
  %1914 = alloca ptr, i64 3, align 8
  %1915 = load ptr, ptr @tag_TypeOf, align 8
  %1916 = getelementptr ptr, ptr %1913, i64 0
  store ptr %1915, ptr %1916, align 8
  %1917 = getelementptr ptr, ptr %1914, i64 0
  store ptr %1908, ptr %1917, align 8
  %1918 = load ptr, ptr @tag_Is, align 8
  %1919 = load ptr, ptr @fun_Core_type_is.299, align 8
  %1920 = getelementptr ptr, ptr %1913, i64 1
  store ptr %1918, ptr %1920, align 8
  %1921 = getelementptr ptr, ptr %1914, i64 1
  store ptr %1919, ptr %1921, align 8
  %1922 = getelementptr ptr, ptr %1913, i64 2
  store ptr null, ptr %1922, align 8
  %1923 = getelementptr ptr, ptr %1914, i64 2
  store ptr null, ptr %1923, align 8
  %1924 = call ptr @make_candy_struct(ptr %1913, ptr %1914)
  %1925 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1926 = getelementptr inbounds { ptr }, ptr %1925, i32 0, i32 0
  store ptr %1924, ptr %1926, align 8
  %1927 = call ptr @make_candy_function(ptr @Core_function_is.300, ptr %1925, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1927, ptr @fun_Core_function_is.301, align 8
  %1928 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1929 = call ptr @Builtins__structGet(ptr %997, ptr %1928)
  %1930 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1931 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1930, i32 0, i32 0
  store ptr %1904, ptr %1931, align 8
  %1932 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1930, i32 0, i32 1
  store ptr %997, ptr %1932, align 8
  %1933 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1930, i32 0, i32 2
  store ptr %1929, ptr %1933, align 8
  %1934 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1930, i32 0, i32 3
  store ptr %1924, ptr %1934, align 8
  %1935 = call ptr @make_candy_function(ptr @Core_function_is0.302, ptr %1930, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1935, ptr @fun_Core_function_is0.303, align 8
  %1936 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1937 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1936, i32 0, i32 0
  store ptr %1904, ptr %1937, align 8
  %1938 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1936, i32 0, i32 1
  store ptr %997, ptr %1938, align 8
  %1939 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1936, i32 0, i32 2
  store ptr %1929, ptr %1939, align 8
  %1940 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1936, i32 0, i32 3
  store ptr %1924, ptr %1940, align 8
  %1941 = call ptr @make_candy_function(ptr @Core_function_is1.306, ptr %1936, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1941, ptr @fun_Core_function_is1.307, align 8
  %1942 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1943 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1942, i32 0, i32 0
  store ptr %1904, ptr %1943, align 8
  %1944 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1942, i32 0, i32 1
  store ptr %997, ptr %1944, align 8
  %1945 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1942, i32 0, i32 2
  store ptr %1929, ptr %1945, align 8
  %1946 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1942, i32 0, i32 3
  store ptr %1924, ptr %1946, align 8
  %1947 = call ptr @make_candy_function(ptr @Core_function_is2.310, ptr %1942, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1947, ptr @fun_Core_function_is2.311, align 8
  %1948 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1949 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1948, i32 0, i32 0
  store ptr %1904, ptr %1949, align 8
  %1950 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1948, i32 0, i32 1
  store ptr %997, ptr %1950, align 8
  %1951 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1948, i32 0, i32 2
  store ptr %1929, ptr %1951, align 8
  %1952 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1948, i32 0, i32 3
  store ptr %1924, ptr %1952, align 8
  %1953 = call ptr @make_candy_function(ptr @Core_function_is3.314, ptr %1948, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1953, ptr @fun_Core_function_is3.315, align 8
  %1954 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1955 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1954, i32 0, i32 0
  store ptr %1904, ptr %1955, align 8
  %1956 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1954, i32 0, i32 1
  store ptr %997, ptr %1956, align 8
  %1957 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1954, i32 0, i32 2
  store ptr %1929, ptr %1957, align 8
  %1958 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1954, i32 0, i32 3
  store ptr %1924, ptr %1958, align 8
  %1959 = call ptr @make_candy_function(ptr @Core_function_is4.318, ptr %1954, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1959, ptr @fun_Core_function_is4.319, align 8
  %1960 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1961 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1960, i32 0, i32 0
  store ptr %1904, ptr %1961, align 8
  %1962 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1960, i32 0, i32 1
  store ptr %997, ptr %1962, align 8
  %1963 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1960, i32 0, i32 2
  store ptr %1929, ptr %1963, align 8
  %1964 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1960, i32 0, i32 3
  store ptr %1924, ptr %1964, align 8
  %1965 = call ptr @make_candy_function(ptr @Core_function_is5.322, ptr %1960, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1965, ptr @fun_Core_function_is5.323, align 8
  %1966 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1967 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1966, i32 0, i32 0
  store ptr %997, ptr %1967, align 8
  %1968 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1966, i32 0, i32 1
  store ptr %1929, ptr %1968, align 8
  %1969 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1966, i32 0, i32 2
  store ptr %1924, ptr %1969, align 8
  %1970 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1966, i32 0, i32 3
  store ptr %1904, ptr %1970, align 8
  %1971 = call ptr @make_candy_function(ptr @Core_function_run.326, ptr %1966, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1971, ptr @fun_Core_function_run.327, align 8
  %1972 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %1973 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1972, i32 0, i32 0
  store ptr %1904, ptr %1973, align 8
  %1974 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1972, i32 0, i32 1
  store ptr %997, ptr %1974, align 8
  %1975 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1972, i32 0, i32 2
  store ptr %1929, ptr %1975, align 8
  %1976 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1972, i32 0, i32 3
  store ptr %1924, ptr %1976, align 8
  %1977 = call ptr @make_candy_function(ptr @Core_function_doNotRun.330, ptr %1972, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %1977, ptr @fun_Core_function_doNotRun.331, align 8
  %1978 = alloca ptr, i64 11, align 8
  %1979 = alloca ptr, i64 11, align 8
  %1980 = load ptr, ptr @tag_Is0, align 8
  %1981 = load ptr, ptr @fun_Core_function_is0.303, align 8
  %1982 = getelementptr ptr, ptr %1978, i64 0
  store ptr %1980, ptr %1982, align 8
  %1983 = getelementptr ptr, ptr %1979, i64 0
  store ptr %1981, ptr %1983, align 8
  %1984 = load ptr, ptr @tag_DoNotRun, align 8
  %1985 = load ptr, ptr @fun_Core_function_doNotRun.331, align 8
  %1986 = getelementptr ptr, ptr %1978, i64 1
  store ptr %1984, ptr %1986, align 8
  %1987 = getelementptr ptr, ptr %1979, i64 1
  store ptr %1985, ptr %1987, align 8
  %1988 = load ptr, ptr @tag_Is, align 8
  %1989 = load ptr, ptr @fun_Core_function_is.301, align 8
  %1990 = getelementptr ptr, ptr %1978, i64 2
  store ptr %1988, ptr %1990, align 8
  %1991 = getelementptr ptr, ptr %1979, i64 2
  store ptr %1989, ptr %1991, align 8
  %1992 = load ptr, ptr @tag_Is3, align 8
  %1993 = load ptr, ptr @fun_Core_function_is3.315, align 8
  %1994 = getelementptr ptr, ptr %1978, i64 3
  store ptr %1992, ptr %1994, align 8
  %1995 = getelementptr ptr, ptr %1979, i64 3
  store ptr %1993, ptr %1995, align 8
  %1996 = load ptr, ptr @tag_Is2, align 8
  %1997 = load ptr, ptr @fun_Core_function_is2.311, align 8
  %1998 = getelementptr ptr, ptr %1978, i64 4
  store ptr %1996, ptr %1998, align 8
  %1999 = getelementptr ptr, ptr %1979, i64 4
  store ptr %1997, ptr %1999, align 8
  %2000 = load ptr, ptr @tag_Is4, align 8
  %2001 = load ptr, ptr @fun_Core_function_is4.319, align 8
  %2002 = getelementptr ptr, ptr %1978, i64 5
  store ptr %2000, ptr %2002, align 8
  %2003 = getelementptr ptr, ptr %1979, i64 5
  store ptr %2001, ptr %2003, align 8
  %2004 = load ptr, ptr @tag_Is1, align 8
  %2005 = load ptr, ptr @fun_Core_function_is1.307, align 8
  %2006 = getelementptr ptr, ptr %1978, i64 6
  store ptr %2004, ptr %2006, align 8
  %2007 = getelementptr ptr, ptr %1979, i64 6
  store ptr %2005, ptr %2007, align 8
  %2008 = load ptr, ptr @tag_Is5, align 8
  %2009 = load ptr, ptr @fun_Core_function_is5.323, align 8
  %2010 = getelementptr ptr, ptr %1978, i64 7
  store ptr %2008, ptr %2010, align 8
  %2011 = getelementptr ptr, ptr %1979, i64 7
  store ptr %2009, ptr %2011, align 8
  %2012 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2013 = getelementptr ptr, ptr %1978, i64 8
  store ptr %2012, ptr %2013, align 8
  %2014 = getelementptr ptr, ptr %1979, i64 8
  store ptr %1929, ptr %2014, align 8
  %2015 = load ptr, ptr @tag_Run, align 8
  %2016 = load ptr, ptr @fun_Core_function_run.327, align 8
  %2017 = getelementptr ptr, ptr %1978, i64 9
  store ptr %2015, ptr %2017, align 8
  %2018 = getelementptr ptr, ptr %1979, i64 9
  store ptr %2016, ptr %2018, align 8
  %2019 = getelementptr ptr, ptr %1978, i64 10
  store ptr null, ptr %2019, align 8
  %2020 = getelementptr ptr, ptr %1979, i64 10
  store ptr null, ptr %2020, align 8
  %2021 = call ptr @make_candy_struct(ptr %1978, ptr %1979)
  %2022 = load ptr, ptr @tag_Equals, align 8
  %2023 = call ptr @Builtins__structGet(ptr %997, ptr %2022)
  %2024 = load ptr, ptr @tag_TypeOf, align 8
  %2025 = call ptr @Builtins__structGet(ptr %997, ptr %2024)
  %2026 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2027 = getelementptr inbounds { ptr }, ptr %2026, i32 0, i32 0
  store ptr %2021, ptr %2027, align 8
  %2028 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.334, ptr %2026, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2028, ptr @fun_Core_bool_lazyAnd.335, align 8
  %2029 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2030 = call ptr @make_candy_function(ptr @Core_bool_and.362, ptr %2029, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2030, ptr @fun_Core_bool_and.363, align 8
  %2031 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2032 = getelementptr inbounds { ptr }, ptr %2031, i32 0, i32 0
  store ptr %2021, ptr %2032, align 8
  %2033 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.366, ptr %2031, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2033, ptr @fun_Core_bool_lazyOr.367, align 8
  %2034 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2035 = call ptr @make_candy_function(ptr @Core_bool_or.394, ptr %2034, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2035, ptr @fun_Core_bool_or.395, align 8
  %2036 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2037 = getelementptr inbounds { ptr }, ptr %2036, i32 0, i32 0
  store ptr %1902, ptr %2037, align 8
  %2038 = call ptr @make_candy_function(ptr @Core_bool_xor.398, ptr %2036, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2038, ptr @fun_Core_bool_xor.399, align 8
  %2039 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2040 = call ptr @make_candy_function(ptr @Core_bool_implies.400, ptr %2039, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2040, ptr @fun_Core_bool_implies.401, align 8
  %2041 = alloca ptr, i64 9, align 8
  %2042 = alloca ptr, i64 9, align 8
  %2043 = load ptr, ptr @tag_LazyOr, align 8
  %2044 = load ptr, ptr @fun_Core_bool_lazyOr.367, align 8
  %2045 = getelementptr ptr, ptr %2041, i64 0
  store ptr %2043, ptr %2045, align 8
  %2046 = getelementptr ptr, ptr %2042, i64 0
  store ptr %2044, ptr %2046, align 8
  %2047 = load ptr, ptr @tag_Implies, align 8
  %2048 = load ptr, ptr @fun_Core_bool_implies.401, align 8
  %2049 = getelementptr ptr, ptr %2041, i64 1
  store ptr %2047, ptr %2049, align 8
  %2050 = getelementptr ptr, ptr %2042, i64 1
  store ptr %2048, ptr %2050, align 8
  %2051 = load ptr, ptr @tag_Not, align 8
  %2052 = load ptr, ptr @fun_Core_bool_not, align 8
  %2053 = getelementptr ptr, ptr %2041, i64 2
  store ptr %2051, ptr %2053, align 8
  %2054 = getelementptr ptr, ptr %2042, i64 2
  store ptr %2052, ptr %2054, align 8
  %2055 = load ptr, ptr @tag_And, align 8
  %2056 = load ptr, ptr @fun_Core_bool_and.363, align 8
  %2057 = getelementptr ptr, ptr %2041, i64 3
  store ptr %2055, ptr %2057, align 8
  %2058 = getelementptr ptr, ptr %2042, i64 3
  store ptr %2056, ptr %2058, align 8
  %2059 = load ptr, ptr @tag_LazyAnd, align 8
  %2060 = load ptr, ptr @fun_Core_bool_lazyAnd.335, align 8
  %2061 = getelementptr ptr, ptr %2041, i64 4
  store ptr %2059, ptr %2061, align 8
  %2062 = getelementptr ptr, ptr %2042, i64 4
  store ptr %2060, ptr %2062, align 8
  %2063 = load ptr, ptr @tag_Is, align 8
  %2064 = load ptr, ptr @fun_Core_bool_is, align 8
  %2065 = getelementptr ptr, ptr %2041, i64 5
  store ptr %2063, ptr %2065, align 8
  %2066 = getelementptr ptr, ptr %2042, i64 5
  store ptr %2064, ptr %2066, align 8
  %2067 = load ptr, ptr @tag_Or, align 8
  %2068 = load ptr, ptr @fun_Core_bool_or.395, align 8
  %2069 = getelementptr ptr, ptr %2041, i64 6
  store ptr %2067, ptr %2069, align 8
  %2070 = getelementptr ptr, ptr %2042, i64 6
  store ptr %2068, ptr %2070, align 8
  %2071 = load ptr, ptr @tag_Xor, align 8
  %2072 = load ptr, ptr @fun_Core_bool_xor.399, align 8
  %2073 = getelementptr ptr, ptr %2041, i64 7
  store ptr %2071, ptr %2073, align 8
  %2074 = getelementptr ptr, ptr %2042, i64 7
  store ptr %2072, ptr %2074, align 8
  %2075 = getelementptr ptr, ptr %2041, i64 8
  store ptr null, ptr %2075, align 8
  %2076 = getelementptr ptr, ptr %2042, i64 8
  store ptr null, ptr %2076, align 8
  %2077 = call ptr @make_candy_struct(ptr %2041, ptr %2042)
  %2078 = load ptr, ptr @tag_Equals, align 8
  %2079 = call ptr @Builtins__structGet(ptr %997, ptr %2078)
  %2080 = load ptr, ptr @tag_Equals, align 8
  %2081 = call ptr @Builtins__structGet(ptr %997, ptr %2080)
  %2082 = load ptr, ptr @tag_Equals, align 8
  %2083 = call ptr @Builtins__structGet(ptr %997, ptr %2082)
  %2084 = load ptr, ptr @tag_TypeOf, align 8
  %2085 = call ptr @Builtins__structGet(ptr %997, ptr %2084)
  %2086 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2087 = getelementptr inbounds { ptr, ptr }, ptr %2086, i32 0, i32 0
  store ptr %2083, ptr %2087, align 8
  %2088 = getelementptr inbounds { ptr, ptr }, ptr %2086, i32 0, i32 1
  store ptr %2085, ptr %2088, align 8
  %2089 = call ptr @make_candy_function(ptr @Core_type_is.404, ptr %2086, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2089, ptr @fun_Core_type_is.405, align 8
  %2090 = alloca ptr, i64 3, align 8
  %2091 = alloca ptr, i64 3, align 8
  %2092 = load ptr, ptr @tag_TypeOf, align 8
  %2093 = getelementptr ptr, ptr %2090, i64 0
  store ptr %2092, ptr %2093, align 8
  %2094 = getelementptr ptr, ptr %2091, i64 0
  store ptr %2085, ptr %2094, align 8
  %2095 = load ptr, ptr @tag_Is, align 8
  %2096 = load ptr, ptr @fun_Core_type_is.405, align 8
  %2097 = getelementptr ptr, ptr %2090, i64 1
  store ptr %2095, ptr %2097, align 8
  %2098 = getelementptr ptr, ptr %2091, i64 1
  store ptr %2096, ptr %2098, align 8
  %2099 = getelementptr ptr, ptr %2090, i64 2
  store ptr null, ptr %2099, align 8
  %2100 = getelementptr ptr, ptr %2091, i64 2
  store ptr null, ptr %2100, align 8
  %2101 = call ptr @make_candy_struct(ptr %2090, ptr %2091)
  %2102 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2103 = getelementptr inbounds { ptr }, ptr %2102, i32 0, i32 0
  store ptr %2101, ptr %2103, align 8
  %2104 = call ptr @make_candy_function(ptr @Core_function_is.406, ptr %2102, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2104, ptr @fun_Core_function_is.407, align 8
  %2105 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2106 = call ptr @Builtins__structGet(ptr %997, ptr %2105)
  %2107 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2108 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2107, i32 0, i32 0
  store ptr %997, ptr %2108, align 8
  %2109 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2107, i32 0, i32 1
  store ptr %2106, ptr %2109, align 8
  %2110 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2107, i32 0, i32 2
  store ptr %2101, ptr %2110, align 8
  %2111 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2107, i32 0, i32 3
  store ptr %2081, ptr %2111, align 8
  %2112 = call ptr @make_candy_function(ptr @Core_function_is0.408, ptr %2107, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2112, ptr @fun_Core_function_is0.409, align 8
  %2113 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2114 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2113, i32 0, i32 0
  store ptr %997, ptr %2114, align 8
  %2115 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2113, i32 0, i32 1
  store ptr %2106, ptr %2115, align 8
  %2116 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2113, i32 0, i32 2
  store ptr %2101, ptr %2116, align 8
  %2117 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2113, i32 0, i32 3
  store ptr %2081, ptr %2117, align 8
  %2118 = call ptr @make_candy_function(ptr @Core_function_is1.412, ptr %2113, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2118, ptr @fun_Core_function_is1.413, align 8
  %2119 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2120 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2119, i32 0, i32 0
  store ptr %997, ptr %2120, align 8
  %2121 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2119, i32 0, i32 1
  store ptr %2106, ptr %2121, align 8
  %2122 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2119, i32 0, i32 2
  store ptr %2101, ptr %2122, align 8
  %2123 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2119, i32 0, i32 3
  store ptr %2081, ptr %2123, align 8
  %2124 = call ptr @make_candy_function(ptr @Core_function_is2.416, ptr %2119, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2124, ptr @fun_Core_function_is2.417, align 8
  %2125 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2126 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2125, i32 0, i32 0
  store ptr %997, ptr %2126, align 8
  %2127 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2125, i32 0, i32 1
  store ptr %2106, ptr %2127, align 8
  %2128 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2125, i32 0, i32 2
  store ptr %2101, ptr %2128, align 8
  %2129 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2125, i32 0, i32 3
  store ptr %2081, ptr %2129, align 8
  %2130 = call ptr @make_candy_function(ptr @Core_function_is3.420, ptr %2125, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2130, ptr @fun_Core_function_is3.421, align 8
  %2131 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2132 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2131, i32 0, i32 0
  store ptr %997, ptr %2132, align 8
  %2133 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2131, i32 0, i32 1
  store ptr %2106, ptr %2133, align 8
  %2134 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2131, i32 0, i32 2
  store ptr %2101, ptr %2134, align 8
  %2135 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2131, i32 0, i32 3
  store ptr %2081, ptr %2135, align 8
  %2136 = call ptr @make_candy_function(ptr @Core_function_is4.424, ptr %2131, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2136, ptr @fun_Core_function_is4.425, align 8
  %2137 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2138 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2137, i32 0, i32 0
  store ptr %997, ptr %2138, align 8
  %2139 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2137, i32 0, i32 1
  store ptr %2106, ptr %2139, align 8
  %2140 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2137, i32 0, i32 2
  store ptr %2101, ptr %2140, align 8
  %2141 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2137, i32 0, i32 3
  store ptr %2081, ptr %2141, align 8
  %2142 = call ptr @make_candy_function(ptr @Core_function_is5.428, ptr %2137, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2142, ptr @fun_Core_function_is5.429, align 8
  %2143 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2144 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2143, i32 0, i32 0
  store ptr %997, ptr %2144, align 8
  %2145 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2143, i32 0, i32 1
  store ptr %2106, ptr %2145, align 8
  %2146 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2143, i32 0, i32 2
  store ptr %2101, ptr %2146, align 8
  %2147 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2143, i32 0, i32 3
  store ptr %2081, ptr %2147, align 8
  %2148 = call ptr @make_candy_function(ptr @Core_function_run.432, ptr %2143, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2148, ptr @fun_Core_function_run.433, align 8
  %2149 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2150 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2149, i32 0, i32 0
  store ptr %997, ptr %2150, align 8
  %2151 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2149, i32 0, i32 1
  store ptr %2106, ptr %2151, align 8
  %2152 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2149, i32 0, i32 2
  store ptr %2101, ptr %2152, align 8
  %2153 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2149, i32 0, i32 3
  store ptr %2081, ptr %2153, align 8
  %2154 = call ptr @make_candy_function(ptr @Core_function_doNotRun.436, ptr %2149, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2154, ptr @fun_Core_function_doNotRun.437, align 8
  %2155 = alloca ptr, i64 11, align 8
  %2156 = alloca ptr, i64 11, align 8
  %2157 = load ptr, ptr @tag_Is0, align 8
  %2158 = load ptr, ptr @fun_Core_function_is0.409, align 8
  %2159 = getelementptr ptr, ptr %2155, i64 0
  store ptr %2157, ptr %2159, align 8
  %2160 = getelementptr ptr, ptr %2156, i64 0
  store ptr %2158, ptr %2160, align 8
  %2161 = load ptr, ptr @tag_DoNotRun, align 8
  %2162 = load ptr, ptr @fun_Core_function_doNotRun.437, align 8
  %2163 = getelementptr ptr, ptr %2155, i64 1
  store ptr %2161, ptr %2163, align 8
  %2164 = getelementptr ptr, ptr %2156, i64 1
  store ptr %2162, ptr %2164, align 8
  %2165 = load ptr, ptr @tag_Is, align 8
  %2166 = load ptr, ptr @fun_Core_function_is.407, align 8
  %2167 = getelementptr ptr, ptr %2155, i64 2
  store ptr %2165, ptr %2167, align 8
  %2168 = getelementptr ptr, ptr %2156, i64 2
  store ptr %2166, ptr %2168, align 8
  %2169 = load ptr, ptr @tag_Is3, align 8
  %2170 = load ptr, ptr @fun_Core_function_is3.421, align 8
  %2171 = getelementptr ptr, ptr %2155, i64 3
  store ptr %2169, ptr %2171, align 8
  %2172 = getelementptr ptr, ptr %2156, i64 3
  store ptr %2170, ptr %2172, align 8
  %2173 = load ptr, ptr @tag_Is2, align 8
  %2174 = load ptr, ptr @fun_Core_function_is2.417, align 8
  %2175 = getelementptr ptr, ptr %2155, i64 4
  store ptr %2173, ptr %2175, align 8
  %2176 = getelementptr ptr, ptr %2156, i64 4
  store ptr %2174, ptr %2176, align 8
  %2177 = load ptr, ptr @tag_Is4, align 8
  %2178 = load ptr, ptr @fun_Core_function_is4.425, align 8
  %2179 = getelementptr ptr, ptr %2155, i64 5
  store ptr %2177, ptr %2179, align 8
  %2180 = getelementptr ptr, ptr %2156, i64 5
  store ptr %2178, ptr %2180, align 8
  %2181 = load ptr, ptr @tag_Is1, align 8
  %2182 = load ptr, ptr @fun_Core_function_is1.413, align 8
  %2183 = getelementptr ptr, ptr %2155, i64 6
  store ptr %2181, ptr %2183, align 8
  %2184 = getelementptr ptr, ptr %2156, i64 6
  store ptr %2182, ptr %2184, align 8
  %2185 = load ptr, ptr @tag_Is5, align 8
  %2186 = load ptr, ptr @fun_Core_function_is5.429, align 8
  %2187 = getelementptr ptr, ptr %2155, i64 7
  store ptr %2185, ptr %2187, align 8
  %2188 = getelementptr ptr, ptr %2156, i64 7
  store ptr %2186, ptr %2188, align 8
  %2189 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2190 = getelementptr ptr, ptr %2155, i64 8
  store ptr %2189, ptr %2190, align 8
  %2191 = getelementptr ptr, ptr %2156, i64 8
  store ptr %2106, ptr %2191, align 8
  %2192 = load ptr, ptr @tag_Run, align 8
  %2193 = load ptr, ptr @fun_Core_function_run.433, align 8
  %2194 = getelementptr ptr, ptr %2155, i64 9
  store ptr %2192, ptr %2194, align 8
  %2195 = getelementptr ptr, ptr %2156, i64 9
  store ptr %2193, ptr %2195, align 8
  %2196 = getelementptr ptr, ptr %2155, i64 10
  store ptr null, ptr %2196, align 8
  %2197 = getelementptr ptr, ptr %2156, i64 10
  store ptr null, ptr %2197, align 8
  %2198 = call ptr @make_candy_struct(ptr %2155, ptr %2156)
  %2199 = load ptr, ptr @tag_Equals, align 8
  %2200 = call ptr @Builtins__structGet(ptr %997, ptr %2199)
  %2201 = load ptr, ptr @tag_TypeOf, align 8
  %2202 = call ptr @Builtins__structGet(ptr %997, ptr %2201)
  %2203 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2204 = getelementptr inbounds { ptr }, ptr %2203, i32 0, i32 0
  store ptr %2198, ptr %2204, align 8
  %2205 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.440, ptr %2203, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2205, ptr @fun_Core_bool_lazyAnd.441, align 8
  %2206 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2207 = call ptr @make_candy_function(ptr @Core_bool_and.468, ptr %2206, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2207, ptr @fun_Core_bool_and.469, align 8
  %2208 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2209 = getelementptr inbounds { ptr }, ptr %2208, i32 0, i32 0
  store ptr %2198, ptr %2209, align 8
  %2210 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.472, ptr %2208, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2210, ptr @fun_Core_bool_lazyOr.473, align 8
  %2211 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2212 = call ptr @make_candy_function(ptr @Core_bool_or.500, ptr %2211, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2212, ptr @fun_Core_bool_or.501, align 8
  %2213 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2214 = getelementptr inbounds { ptr }, ptr %2213, i32 0, i32 0
  store ptr %2079, ptr %2214, align 8
  %2215 = call ptr @make_candy_function(ptr @Core_bool_xor.504, ptr %2213, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2215, ptr @fun_Core_bool_xor.505, align 8
  %2216 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2217 = call ptr @make_candy_function(ptr @Core_bool_implies.506, ptr %2216, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2217, ptr @fun_Core_bool_implies.507, align 8
  %2218 = alloca ptr, i64 9, align 8
  %2219 = alloca ptr, i64 9, align 8
  %2220 = load ptr, ptr @tag_LazyOr, align 8
  %2221 = load ptr, ptr @fun_Core_bool_lazyOr.473, align 8
  %2222 = getelementptr ptr, ptr %2218, i64 0
  store ptr %2220, ptr %2222, align 8
  %2223 = getelementptr ptr, ptr %2219, i64 0
  store ptr %2221, ptr %2223, align 8
  %2224 = load ptr, ptr @tag_Implies, align 8
  %2225 = load ptr, ptr @fun_Core_bool_implies.507, align 8
  %2226 = getelementptr ptr, ptr %2218, i64 1
  store ptr %2224, ptr %2226, align 8
  %2227 = getelementptr ptr, ptr %2219, i64 1
  store ptr %2225, ptr %2227, align 8
  %2228 = load ptr, ptr @tag_Not, align 8
  %2229 = load ptr, ptr @fun_Core_bool_not, align 8
  %2230 = getelementptr ptr, ptr %2218, i64 2
  store ptr %2228, ptr %2230, align 8
  %2231 = getelementptr ptr, ptr %2219, i64 2
  store ptr %2229, ptr %2231, align 8
  %2232 = load ptr, ptr @tag_And, align 8
  %2233 = load ptr, ptr @fun_Core_bool_and.469, align 8
  %2234 = getelementptr ptr, ptr %2218, i64 3
  store ptr %2232, ptr %2234, align 8
  %2235 = getelementptr ptr, ptr %2219, i64 3
  store ptr %2233, ptr %2235, align 8
  %2236 = load ptr, ptr @tag_LazyAnd, align 8
  %2237 = load ptr, ptr @fun_Core_bool_lazyAnd.441, align 8
  %2238 = getelementptr ptr, ptr %2218, i64 4
  store ptr %2236, ptr %2238, align 8
  %2239 = getelementptr ptr, ptr %2219, i64 4
  store ptr %2237, ptr %2239, align 8
  %2240 = load ptr, ptr @tag_Is, align 8
  %2241 = load ptr, ptr @fun_Core_bool_is, align 8
  %2242 = getelementptr ptr, ptr %2218, i64 5
  store ptr %2240, ptr %2242, align 8
  %2243 = getelementptr ptr, ptr %2219, i64 5
  store ptr %2241, ptr %2243, align 8
  %2244 = load ptr, ptr @tag_Or, align 8
  %2245 = load ptr, ptr @fun_Core_bool_or.501, align 8
  %2246 = getelementptr ptr, ptr %2218, i64 6
  store ptr %2244, ptr %2246, align 8
  %2247 = getelementptr ptr, ptr %2219, i64 6
  store ptr %2245, ptr %2247, align 8
  %2248 = load ptr, ptr @tag_Xor, align 8
  %2249 = load ptr, ptr @fun_Core_bool_xor.505, align 8
  %2250 = getelementptr ptr, ptr %2218, i64 7
  store ptr %2248, ptr %2250, align 8
  %2251 = getelementptr ptr, ptr %2219, i64 7
  store ptr %2249, ptr %2251, align 8
  %2252 = getelementptr ptr, ptr %2218, i64 8
  store ptr null, ptr %2252, align 8
  %2253 = getelementptr ptr, ptr %2219, i64 8
  store ptr null, ptr %2253, align 8
  %2254 = call ptr @make_candy_struct(ptr %2218, ptr %2219)
  %2255 = load ptr, ptr @tag_Equals, align 8
  %2256 = call ptr @Builtins__structGet(ptr %997, ptr %2255)
  %2257 = load ptr, ptr @tag_Equals, align 8
  %2258 = call ptr @Builtins__structGet(ptr %997, ptr %2257)
  %2259 = load ptr, ptr @tag_Equals, align 8
  %2260 = call ptr @Builtins__structGet(ptr %997, ptr %2259)
  %2261 = load ptr, ptr @tag_TypeOf, align 8
  %2262 = call ptr @Builtins__structGet(ptr %997, ptr %2261)
  %2263 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2264 = call ptr @Builtins__structGet(ptr %997, ptr %2263)
  %2265 = load ptr, ptr @tag_Equals, align 8
  %2266 = call ptr @Builtins__structGet(ptr %997, ptr %2265)
  %2267 = load ptr, ptr @tag_TypeOf, align 8
  %2268 = call ptr @Builtins__structGet(ptr %997, ptr %2267)
  %2269 = load ptr, ptr @tag_Equals, align 8
  %2270 = call ptr @Builtins__structGet(ptr %997, ptr %2269)
  %2271 = load ptr, ptr @tag_Equals, align 8
  %2272 = call ptr @Builtins__structGet(ptr %997, ptr %2271)
  %2273 = load ptr, ptr @tag_Equals, align 8
  %2274 = call ptr @Builtins__structGet(ptr %997, ptr %2273)
  %2275 = load ptr, ptr @tag_TypeOf, align 8
  %2276 = call ptr @Builtins__structGet(ptr %997, ptr %2275)
  %2277 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2278 = call ptr @Builtins__structGet(ptr %997, ptr %2277)
  %2279 = load ptr, ptr @tag_Equals, align 8
  %2280 = call ptr @Builtins__structGet(ptr %997, ptr %2279)
  %2281 = load ptr, ptr @tag_TypeOf, align 8
  %2282 = call ptr @Builtins__structGet(ptr %997, ptr %2281)
  %2283 = load ptr, ptr @tag_IfElse, align 8
  %2284 = call ptr @Builtins__structGet(ptr %997, ptr %2283)
  %2285 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2286 = getelementptr inbounds { ptr }, ptr %2285, i32 0, i32 0
  store ptr %2254, ptr %2286, align 8
  %2287 = call ptr @make_candy_function(ptr @Core_check_check.510, ptr %2285, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2287, ptr @fun_Core_check_check.511, align 8
  %2288 = load ptr, ptr @tag_Equals, align 8
  %2289 = call ptr @Builtins__structGet(ptr %997, ptr %2288)
  %2290 = load ptr, ptr @tag_Equals, align 8
  %2291 = call ptr @Builtins__structGet(ptr %997, ptr %2290)
  %2292 = load ptr, ptr @tag_Equals, align 8
  %2293 = call ptr @Builtins__structGet(ptr %997, ptr %2292)
  %2294 = load ptr, ptr @tag_TypeOf, align 8
  %2295 = call ptr @Builtins__structGet(ptr %997, ptr %2294)
  %2296 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2297 = call ptr @Builtins__structGet(ptr %997, ptr %2296)
  %2298 = load ptr, ptr @tag_Equals, align 8
  %2299 = call ptr @Builtins__structGet(ptr %997, ptr %2298)
  %2300 = load ptr, ptr @tag_TypeOf, align 8
  %2301 = call ptr @Builtins__structGet(ptr %997, ptr %2300)
  %2302 = load ptr, ptr @tag_Equals, align 8
  %2303 = call ptr @Builtins__structGet(ptr %997, ptr %2302)
  %2304 = load ptr, ptr @tag_Equals, align 8
  %2305 = call ptr @Builtins__structGet(ptr %997, ptr %2304)
  %2306 = load ptr, ptr @tag_Equals, align 8
  %2307 = call ptr @Builtins__structGet(ptr %997, ptr %2306)
  %2308 = load ptr, ptr @tag_TypeOf, align 8
  %2309 = call ptr @Builtins__structGet(ptr %997, ptr %2308)
  %2310 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2311 = getelementptr inbounds { ptr, ptr }, ptr %2310, i32 0, i32 0
  store ptr %2309, ptr %2311, align 8
  %2312 = getelementptr inbounds { ptr, ptr }, ptr %2310, i32 0, i32 1
  store ptr %2307, ptr %2312, align 8
  %2313 = call ptr @make_candy_function(ptr @Core_type_is.516, ptr %2310, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2313, ptr @fun_Core_type_is.517, align 8
  %2314 = alloca ptr, i64 3, align 8
  %2315 = alloca ptr, i64 3, align 8
  %2316 = load ptr, ptr @tag_TypeOf, align 8
  %2317 = getelementptr ptr, ptr %2314, i64 0
  store ptr %2316, ptr %2317, align 8
  %2318 = getelementptr ptr, ptr %2315, i64 0
  store ptr %2309, ptr %2318, align 8
  %2319 = load ptr, ptr @tag_Is, align 8
  %2320 = load ptr, ptr @fun_Core_type_is.517, align 8
  %2321 = getelementptr ptr, ptr %2314, i64 1
  store ptr %2319, ptr %2321, align 8
  %2322 = getelementptr ptr, ptr %2315, i64 1
  store ptr %2320, ptr %2322, align 8
  %2323 = getelementptr ptr, ptr %2314, i64 2
  store ptr null, ptr %2323, align 8
  %2324 = getelementptr ptr, ptr %2315, i64 2
  store ptr null, ptr %2324, align 8
  %2325 = call ptr @make_candy_struct(ptr %2314, ptr %2315)
  %2326 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2327 = getelementptr inbounds { ptr }, ptr %2326, i32 0, i32 0
  store ptr %2325, ptr %2327, align 8
  %2328 = call ptr @make_candy_function(ptr @Core_function_is.518, ptr %2326, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2328, ptr @fun_Core_function_is.519, align 8
  %2329 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2330 = call ptr @Builtins__structGet(ptr %997, ptr %2329)
  %2331 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2332 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2331, i32 0, i32 0
  store ptr %2325, ptr %2332, align 8
  %2333 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2331, i32 0, i32 1
  store ptr %997, ptr %2333, align 8
  %2334 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2331, i32 0, i32 2
  store ptr %2305, ptr %2334, align 8
  %2335 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2331, i32 0, i32 3
  store ptr %2330, ptr %2335, align 8
  %2336 = call ptr @make_candy_function(ptr @Core_function_is0.520, ptr %2331, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2336, ptr @fun_Core_function_is0.521, align 8
  %2337 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2338 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2337, i32 0, i32 0
  store ptr %2325, ptr %2338, align 8
  %2339 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2337, i32 0, i32 1
  store ptr %997, ptr %2339, align 8
  %2340 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2337, i32 0, i32 2
  store ptr %2305, ptr %2340, align 8
  %2341 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2337, i32 0, i32 3
  store ptr %2330, ptr %2341, align 8
  %2342 = call ptr @make_candy_function(ptr @Core_function_is1.524, ptr %2337, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2342, ptr @fun_Core_function_is1.525, align 8
  %2343 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2344 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2343, i32 0, i32 0
  store ptr %2325, ptr %2344, align 8
  %2345 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2343, i32 0, i32 1
  store ptr %997, ptr %2345, align 8
  %2346 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2343, i32 0, i32 2
  store ptr %2305, ptr %2346, align 8
  %2347 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2343, i32 0, i32 3
  store ptr %2330, ptr %2347, align 8
  %2348 = call ptr @make_candy_function(ptr @Core_function_is2.528, ptr %2343, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2348, ptr @fun_Core_function_is2.529, align 8
  %2349 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2350 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2349, i32 0, i32 0
  store ptr %2325, ptr %2350, align 8
  %2351 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2349, i32 0, i32 1
  store ptr %997, ptr %2351, align 8
  %2352 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2349, i32 0, i32 2
  store ptr %2305, ptr %2352, align 8
  %2353 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2349, i32 0, i32 3
  store ptr %2330, ptr %2353, align 8
  %2354 = call ptr @make_candy_function(ptr @Core_function_is3.532, ptr %2349, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2354, ptr @fun_Core_function_is3.533, align 8
  %2355 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2356 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2355, i32 0, i32 0
  store ptr %2325, ptr %2356, align 8
  %2357 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2355, i32 0, i32 1
  store ptr %997, ptr %2357, align 8
  %2358 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2355, i32 0, i32 2
  store ptr %2305, ptr %2358, align 8
  %2359 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2355, i32 0, i32 3
  store ptr %2330, ptr %2359, align 8
  %2360 = call ptr @make_candy_function(ptr @Core_function_is4.536, ptr %2355, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2360, ptr @fun_Core_function_is4.537, align 8
  %2361 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2362 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2361, i32 0, i32 0
  store ptr %2325, ptr %2362, align 8
  %2363 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2361, i32 0, i32 1
  store ptr %997, ptr %2363, align 8
  %2364 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2361, i32 0, i32 2
  store ptr %2305, ptr %2364, align 8
  %2365 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2361, i32 0, i32 3
  store ptr %2330, ptr %2365, align 8
  %2366 = call ptr @make_candy_function(ptr @Core_function_is5.540, ptr %2361, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2366, ptr @fun_Core_function_is5.541, align 8
  %2367 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2368 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2367, i32 0, i32 0
  store ptr %997, ptr %2368, align 8
  %2369 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2367, i32 0, i32 1
  store ptr %2330, ptr %2369, align 8
  %2370 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2367, i32 0, i32 2
  store ptr %2325, ptr %2370, align 8
  %2371 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2367, i32 0, i32 3
  store ptr %2305, ptr %2371, align 8
  %2372 = call ptr @make_candy_function(ptr @Core_function_run.544, ptr %2367, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2372, ptr @fun_Core_function_run.545, align 8
  %2373 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2374 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2373, i32 0, i32 0
  store ptr %2325, ptr %2374, align 8
  %2375 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2373, i32 0, i32 1
  store ptr %997, ptr %2375, align 8
  %2376 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2373, i32 0, i32 2
  store ptr %2305, ptr %2376, align 8
  %2377 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2373, i32 0, i32 3
  store ptr %2330, ptr %2377, align 8
  %2378 = call ptr @make_candy_function(ptr @Core_function_doNotRun.548, ptr %2373, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2378, ptr @fun_Core_function_doNotRun.549, align 8
  %2379 = alloca ptr, i64 11, align 8
  %2380 = alloca ptr, i64 11, align 8
  %2381 = load ptr, ptr @tag_Is0, align 8
  %2382 = load ptr, ptr @fun_Core_function_is0.521, align 8
  %2383 = getelementptr ptr, ptr %2379, i64 0
  store ptr %2381, ptr %2383, align 8
  %2384 = getelementptr ptr, ptr %2380, i64 0
  store ptr %2382, ptr %2384, align 8
  %2385 = load ptr, ptr @tag_DoNotRun, align 8
  %2386 = load ptr, ptr @fun_Core_function_doNotRun.549, align 8
  %2387 = getelementptr ptr, ptr %2379, i64 1
  store ptr %2385, ptr %2387, align 8
  %2388 = getelementptr ptr, ptr %2380, i64 1
  store ptr %2386, ptr %2388, align 8
  %2389 = load ptr, ptr @tag_Is, align 8
  %2390 = load ptr, ptr @fun_Core_function_is.519, align 8
  %2391 = getelementptr ptr, ptr %2379, i64 2
  store ptr %2389, ptr %2391, align 8
  %2392 = getelementptr ptr, ptr %2380, i64 2
  store ptr %2390, ptr %2392, align 8
  %2393 = load ptr, ptr @tag_Is3, align 8
  %2394 = load ptr, ptr @fun_Core_function_is3.533, align 8
  %2395 = getelementptr ptr, ptr %2379, i64 3
  store ptr %2393, ptr %2395, align 8
  %2396 = getelementptr ptr, ptr %2380, i64 3
  store ptr %2394, ptr %2396, align 8
  %2397 = load ptr, ptr @tag_Is2, align 8
  %2398 = load ptr, ptr @fun_Core_function_is2.529, align 8
  %2399 = getelementptr ptr, ptr %2379, i64 4
  store ptr %2397, ptr %2399, align 8
  %2400 = getelementptr ptr, ptr %2380, i64 4
  store ptr %2398, ptr %2400, align 8
  %2401 = load ptr, ptr @tag_Is4, align 8
  %2402 = load ptr, ptr @fun_Core_function_is4.537, align 8
  %2403 = getelementptr ptr, ptr %2379, i64 5
  store ptr %2401, ptr %2403, align 8
  %2404 = getelementptr ptr, ptr %2380, i64 5
  store ptr %2402, ptr %2404, align 8
  %2405 = load ptr, ptr @tag_Is1, align 8
  %2406 = load ptr, ptr @fun_Core_function_is1.525, align 8
  %2407 = getelementptr ptr, ptr %2379, i64 6
  store ptr %2405, ptr %2407, align 8
  %2408 = getelementptr ptr, ptr %2380, i64 6
  store ptr %2406, ptr %2408, align 8
  %2409 = load ptr, ptr @tag_Is5, align 8
  %2410 = load ptr, ptr @fun_Core_function_is5.541, align 8
  %2411 = getelementptr ptr, ptr %2379, i64 7
  store ptr %2409, ptr %2411, align 8
  %2412 = getelementptr ptr, ptr %2380, i64 7
  store ptr %2410, ptr %2412, align 8
  %2413 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2414 = getelementptr ptr, ptr %2379, i64 8
  store ptr %2413, ptr %2414, align 8
  %2415 = getelementptr ptr, ptr %2380, i64 8
  store ptr %2330, ptr %2415, align 8
  %2416 = load ptr, ptr @tag_Run, align 8
  %2417 = load ptr, ptr @fun_Core_function_run.545, align 8
  %2418 = getelementptr ptr, ptr %2379, i64 9
  store ptr %2416, ptr %2418, align 8
  %2419 = getelementptr ptr, ptr %2380, i64 9
  store ptr %2417, ptr %2419, align 8
  %2420 = getelementptr ptr, ptr %2379, i64 10
  store ptr null, ptr %2420, align 8
  %2421 = getelementptr ptr, ptr %2380, i64 10
  store ptr null, ptr %2421, align 8
  %2422 = call ptr @make_candy_struct(ptr %2379, ptr %2380)
  %2423 = load ptr, ptr @tag_Equals, align 8
  %2424 = call ptr @Builtins__structGet(ptr %997, ptr %2423)
  %2425 = load ptr, ptr @tag_TypeOf, align 8
  %2426 = call ptr @Builtins__structGet(ptr %997, ptr %2425)
  %2427 = load ptr, ptr @tag_IfElse, align 8
  %2428 = call ptr @Builtins__structGet(ptr %997, ptr %2427)
  %2429 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2430 = getelementptr inbounds { ptr }, ptr %2429, i32 0, i32 0
  store ptr %2422, ptr %2430, align 8
  %2431 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive.552, ptr %2429, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2431, ptr @fun_Core_controlFlow_recursive.553, align 8
  %2432 = load ptr, ptr @tag_Equals, align 8
  %2433 = call ptr @Builtins__structGet(ptr %997, ptr %2432)
  %2434 = load ptr, ptr @tag_Equals, align 8
  %2435 = call ptr @Builtins__structGet(ptr %997, ptr %2434)
  %2436 = load ptr, ptr @tag_TypeOf, align 8
  %2437 = call ptr @Builtins__structGet(ptr %997, ptr %2436)
  %2438 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2439 = getelementptr inbounds { ptr, ptr }, ptr %2438, i32 0, i32 0
  store ptr %2437, ptr %2439, align 8
  %2440 = getelementptr inbounds { ptr, ptr }, ptr %2438, i32 0, i32 1
  store ptr %2435, ptr %2440, align 8
  %2441 = call ptr @make_candy_function(ptr @Core_type_is.558, ptr %2438, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2441, ptr @fun_Core_type_is.559, align 8
  %2442 = alloca ptr, i64 3, align 8
  %2443 = alloca ptr, i64 3, align 8
  %2444 = load ptr, ptr @tag_TypeOf, align 8
  %2445 = getelementptr ptr, ptr %2442, i64 0
  store ptr %2444, ptr %2445, align 8
  %2446 = getelementptr ptr, ptr %2443, i64 0
  store ptr %2437, ptr %2446, align 8
  %2447 = load ptr, ptr @tag_Is, align 8
  %2448 = load ptr, ptr @fun_Core_type_is.559, align 8
  %2449 = getelementptr ptr, ptr %2442, i64 1
  store ptr %2447, ptr %2449, align 8
  %2450 = getelementptr ptr, ptr %2443, i64 1
  store ptr %2448, ptr %2450, align 8
  %2451 = getelementptr ptr, ptr %2442, i64 2
  store ptr null, ptr %2451, align 8
  %2452 = getelementptr ptr, ptr %2443, i64 2
  store ptr null, ptr %2452, align 8
  %2453 = call ptr @make_candy_struct(ptr %2442, ptr %2443)
  %2454 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:int:is:7\00", ptr %2454, align 1
  %2455 = call ptr @make_candy_text(ptr %2454)
  store ptr %2455, ptr @"Core:int:is:7", align 8
  %2456 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:is:10\00", ptr %2456, align 1
  %2457 = call ptr @make_candy_text(ptr %2456)
  store ptr %2457, ptr @"Core:int:is:10", align 8
  %2458 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2459 = getelementptr inbounds { ptr }, ptr %2458, i32 0, i32 0
  store ptr %2453, ptr %2459, align 8
  %2460 = call ptr @make_candy_function(ptr @Core_int_is, ptr %2458, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2460, ptr @fun_Core_int_is, align 8
  %2461 = call ptr @make_candy_int(i64 42)
  store ptr %2461, ptr @num_42, align 8
  %2462 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:72\00", ptr %2462, align 1
  %2463 = call ptr @make_candy_text(ptr %2462)
  store ptr %2463, ptr @"Core:int:72", align 8
  %2464 = load ptr, ptr @tag_IntAdd, align 8
  %2465 = call ptr @Builtins__structGet(ptr %997, ptr %2464)
  %2466 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:81\00", ptr %2466, align 1
  %2467 = call ptr @make_candy_text(ptr %2466)
  store ptr %2467, ptr @"Core:int:81", align 8
  %2468 = load ptr, ptr @tag_IntSubtract, align 8
  %2469 = call ptr @Builtins__structGet(ptr %997, ptr %2468)
  %2470 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:negate:4\00", ptr %2470, align 1
  %2471 = call ptr @make_candy_text(ptr %2470)
  store ptr %2471, ptr @"Core:int:negate:4", align 8
  %2472 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:negate:8\00", ptr %2472, align 1
  %2473 = call ptr @make_candy_text(ptr %2472)
  store ptr %2473, ptr @"Core:int:negate:8", align 8
  %2474 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2475 = getelementptr inbounds { ptr, ptr }, ptr %2474, i32 0, i32 0
  store ptr %2469, ptr %2475, align 8
  %2476 = getelementptr inbounds { ptr, ptr }, ptr %2474, i32 0, i32 1
  store ptr %2453, ptr %2476, align 8
  %2477 = call ptr @make_candy_function(ptr @Core_int_negate, ptr %2474, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2477, ptr @fun_Core_int_negate, align 8
  %2478 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:90\00", ptr %2478, align 1
  %2479 = call ptr @make_candy_text(ptr %2478)
  store ptr %2479, ptr @"Core:int:90", align 8
  %2480 = load ptr, ptr @tag_IntMultiply, align 8
  %2481 = call ptr @Builtins__structGet(ptr %997, ptr %2480)
  %2482 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:99\00", ptr %2482, align 1
  %2483 = call ptr @make_candy_text(ptr %2482)
  store ptr %2483, ptr @"Core:int:99", align 8
  %2484 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %2485 = call ptr @Builtins__structGet(ptr %997, ptr %2484)
  %2486 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:108\00", ptr %2486, align 1
  %2487 = call ptr @make_candy_text(ptr %2486)
  store ptr %2487, ptr @"Core:int:108", align 8
  %2488 = load ptr, ptr @tag_IntRemainder, align 8
  %2489 = call ptr @Builtins__structGet(ptr %997, ptr %2488)
  %2490 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:117\00", ptr %2490, align 1
  %2491 = call ptr @make_candy_text(ptr %2490)
  store ptr %2491, ptr @"Core:int:117", align 8
  %2492 = load ptr, ptr @tag_IntModulo, align 8
  %2493 = call ptr @Builtins__structGet(ptr %997, ptr %2492)
  %2494 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueA` was not satisfied\00", ptr %2494, align 1
  %2495 = call ptr @make_candy_text(ptr %2494)
  store ptr %2495, ptr @"text_`is valueA` was not satisfied", align 8
  %2496 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:4\00", ptr %2496, align 1
  %2497 = call ptr @make_candy_text(ptr %2496)
  store ptr %2497, ptr @"Core:int:compareTo:4", align 8
  %2498 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %2498, align 1
  %2499 = call ptr @make_candy_text(ptr %2498)
  store ptr %2499, ptr @"text_`is valueB` was not satisfied", align 8
  %2500 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %2500, align 1
  %2501 = call ptr @make_candy_text(ptr %2500)
  store ptr %2501, ptr @"Core:int:compareTo:9", align 8
  %2502 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:18\00", ptr %2502, align 1
  %2503 = call ptr @make_candy_text(ptr %2502)
  store ptr %2503, ptr @"Core:int:compareTo:18", align 8
  %2504 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:20\00", ptr %2504, align 1
  %2505 = call ptr @make_candy_text(ptr %2504)
  store ptr %2505, ptr @"Core:int:compareTo:20", align 8
  %2506 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:26\00", ptr %2506, align 1
  %2507 = call ptr @make_candy_text(ptr %2506)
  store ptr %2507, ptr @"Core:int:compareTo:26", align 8
  %2508 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:34\00", ptr %2508, align 1
  %2509 = call ptr @make_candy_text(ptr %2508)
  store ptr %2509, ptr @"Core:int:compareTo:34", align 8
  %2510 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:38\00", ptr %2510, align 1
  %2511 = call ptr @make_candy_text(ptr %2510)
  store ptr %2511, ptr @"Core:int:compareTo:38", align 8
  %2512 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:39\00", ptr %2512, align 1
  %2513 = call ptr @make_candy_text(ptr %2512)
  store ptr %2513, ptr @"Core:int:compareTo:39", align 8
  %2514 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:40\00", ptr %2514, align 1
  %2515 = call ptr @make_candy_text(ptr %2514)
  store ptr %2515, ptr @"Core:int:compareTo:40", align 8
  %2516 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2517 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2516, i32 0, i32 0
  store ptr %997, ptr %2517, align 8
  %2518 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2516, i32 0, i32 1
  store ptr %2077, ptr %2518, align 8
  %2519 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2516, i32 0, i32 2
  store ptr %2453, ptr %2519, align 8
  %2520 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2516, i32 0, i32 3
  store ptr %2433, ptr %2520, align 8
  %2521 = call ptr @make_candy_function(ptr @Core_int_compareTo, ptr %2516, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2521, ptr @fun_Core_int_compareTo, align 8
  %2522 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:4\00", ptr %2522, align 1
  %2523 = call ptr @make_candy_text(ptr %2522)
  store ptr %2523, ptr @"Core:int:isLessThan:4", align 8
  %2524 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %2524, align 1
  %2525 = call ptr @make_candy_text(ptr %2524)
  store ptr %2525, ptr @"Core:int:isLessThan:9", align 8
  %2526 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %2526, align 1
  %2527 = call ptr @make_candy_text(ptr %2526)
  store ptr %2527, ptr @"Core:int:isLessThan:13", align 8
  %2528 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:16\00", ptr %2528, align 1
  %2529 = call ptr @make_candy_text(ptr %2528)
  store ptr %2529, ptr @"Core:int:isLessThan:16", align 8
  %2530 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2531 = getelementptr inbounds { ptr, ptr }, ptr %2530, i32 0, i32 0
  store ptr %2453, ptr %2531, align 8
  %2532 = getelementptr inbounds { ptr, ptr }, ptr %2530, i32 0, i32 1
  store ptr %2433, ptr %2532, align 8
  %2533 = call ptr @make_candy_function(ptr @Core_int_isLessThan, ptr %2530, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2533, ptr @fun_Core_int_isLessThan, align 8
  %2534 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:4\00", ptr %2534, align 1
  %2535 = call ptr @make_candy_text(ptr %2534)
  store ptr %2535, ptr @"Core:int:isGreaterThan:4", align 8
  %2536 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:9\00", ptr %2536, align 1
  %2537 = call ptr @make_candy_text(ptr %2536)
  store ptr %2537, ptr @"Core:int:isGreaterThan:9", align 8
  %2538 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:13\00", ptr %2538, align 1
  %2539 = call ptr @make_candy_text(ptr %2538)
  store ptr %2539, ptr @"Core:int:isGreaterThan:13", align 8
  %2540 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:16\00", ptr %2540, align 1
  %2541 = call ptr @make_candy_text(ptr %2540)
  store ptr %2541, ptr @"Core:int:isGreaterThan:16", align 8
  %2542 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2543 = getelementptr inbounds { ptr, ptr }, ptr %2542, i32 0, i32 0
  store ptr %2453, ptr %2543, align 8
  %2544 = getelementptr inbounds { ptr, ptr }, ptr %2542, i32 0, i32 1
  store ptr %2433, ptr %2544, align 8
  %2545 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan, ptr %2542, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2545, ptr @fun_Core_int_isGreaterThan, align 8
  %2546 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:int:isLessThanOrEqualTo:4\00", ptr %2546, align 1
  %2547 = call ptr @make_candy_text(ptr %2546)
  store ptr %2547, ptr @"Core:int:isLessThanOrEqualTo:4", align 8
  %2548 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:int:isLessThanOrEqualTo:9\00", ptr %2548, align 1
  %2549 = call ptr @make_candy_text(ptr %2548)
  store ptr %2549, ptr @"Core:int:isLessThanOrEqualTo:9", align 8
  %2550 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:int:isLessThanOrEqualTo:13\00", ptr %2550, align 1
  %2551 = call ptr @make_candy_text(ptr %2550)
  store ptr %2551, ptr @"Core:int:isLessThanOrEqualTo:13", align 8
  %2552 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:int:isLessThanOrEqualTo:21\00", ptr %2552, align 1
  %2553 = call ptr @make_candy_text(ptr %2552)
  store ptr %2553, ptr @"Core:int:isLessThanOrEqualTo:21", align 8
  %2554 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:int:isLessThanOrEqualTo:22\00", ptr %2554, align 1
  %2555 = call ptr @make_candy_text(ptr %2554)
  store ptr %2555, ptr @"Core:int:isLessThanOrEqualTo:22", align 8
  %2556 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2557 = getelementptr inbounds { ptr, ptr }, ptr %2556, i32 0, i32 0
  store ptr %2077, ptr %2557, align 8
  %2558 = getelementptr inbounds { ptr, ptr }, ptr %2556, i32 0, i32 1
  store ptr %2453, ptr %2558, align 8
  %2559 = call ptr @make_candy_function(ptr @Core_int_isLessThanOrEqualTo, ptr %2556, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2559, ptr @fun_Core_int_isLessThanOrEqualTo, align 8
  %2560 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:4\00", ptr %2560, align 1
  %2561 = call ptr @make_candy_text(ptr %2560)
  store ptr %2561, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  %2562 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:9\00", ptr %2562, align 1
  %2563 = call ptr @make_candy_text(ptr %2562)
  store ptr %2563, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  %2564 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:13\00", ptr %2564, align 1
  %2565 = call ptr @make_candy_text(ptr %2564)
  store ptr %2565, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  %2566 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:21\00", ptr %2566, align 1
  %2567 = call ptr @make_candy_text(ptr %2566)
  store ptr %2567, ptr @"Core:int:isGreaterThanOrEqualTo:21", align 8
  %2568 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:22\00", ptr %2568, align 1
  %2569 = call ptr @make_candy_text(ptr %2568)
  store ptr %2569, ptr @"Core:int:isGreaterThanOrEqualTo:22", align 8
  %2570 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2571 = getelementptr inbounds { ptr, ptr }, ptr %2570, i32 0, i32 0
  store ptr %2077, ptr %2571, align 8
  %2572 = getelementptr inbounds { ptr, ptr }, ptr %2570, i32 0, i32 1
  store ptr %2453, ptr %2572, align 8
  %2573 = call ptr @make_candy_function(ptr @Core_int_isGreaterThanOrEqualTo, ptr %2570, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2573, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  %2574 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:4\00", ptr %2574, align 1
  %2575 = call ptr @make_candy_text(ptr %2574)
  store ptr %2575, ptr @"Core:int:isPositive:4", align 8
  %2576 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:8\00", ptr %2576, align 1
  %2577 = call ptr @make_candy_text(ptr %2576)
  store ptr %2577, ptr @"Core:int:isPositive:8", align 8
  %2578 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2579 = getelementptr inbounds { ptr }, ptr %2578, i32 0, i32 0
  store ptr %2453, ptr %2579, align 8
  %2580 = call ptr @make_candy_function(ptr @Core_int_isPositive, ptr %2578, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2580, ptr @fun_Core_int_isPositive, align 8
  %2581 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonPositive:4\00", ptr %2581, align 1
  %2582 = call ptr @make_candy_text(ptr %2581)
  store ptr %2582, ptr @"Core:int:isNonPositive:4", align 8
  %2583 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonPositive:7\00", ptr %2583, align 1
  %2584 = call ptr @make_candy_text(ptr %2583)
  store ptr %2584, ptr @"Core:int:isNonPositive:7", align 8
  %2585 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonPositive:15\00", ptr %2585, align 1
  %2586 = call ptr @make_candy_text(ptr %2585)
  store ptr %2586, ptr @"Core:int:isNonPositive:15", align 8
  %2587 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonPositive:16\00", ptr %2587, align 1
  %2588 = call ptr @make_candy_text(ptr %2587)
  store ptr %2588, ptr @"Core:int:isNonPositive:16", align 8
  %2589 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2590 = getelementptr inbounds { ptr, ptr }, ptr %2589, i32 0, i32 0
  store ptr %2077, ptr %2590, align 8
  %2591 = getelementptr inbounds { ptr, ptr }, ptr %2589, i32 0, i32 1
  store ptr %2453, ptr %2591, align 8
  %2592 = call ptr @make_candy_function(ptr @Core_int_isNonPositive, ptr %2589, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2592, ptr @fun_Core_int_isNonPositive, align 8
  %2593 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:4\00", ptr %2593, align 1
  %2594 = call ptr @make_candy_text(ptr %2593)
  store ptr %2594, ptr @"Core:int:isNegative:4", align 8
  %2595 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:8\00", ptr %2595, align 1
  %2596 = call ptr @make_candy_text(ptr %2595)
  store ptr %2596, ptr @"Core:int:isNegative:8", align 8
  %2597 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2598 = getelementptr inbounds { ptr }, ptr %2597, i32 0, i32 0
  store ptr %2453, ptr %2598, align 8
  %2599 = call ptr @make_candy_function(ptr @Core_int_isNegative, ptr %2597, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2599, ptr @fun_Core_int_isNegative, align 8
  %2600 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:4\00", ptr %2600, align 1
  %2601 = call ptr @make_candy_text(ptr %2600)
  store ptr %2601, ptr @"Core:int:isNonNegative:4", align 8
  %2602 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:7\00", ptr %2602, align 1
  %2603 = call ptr @make_candy_text(ptr %2602)
  store ptr %2603, ptr @"Core:int:isNonNegative:7", align 8
  %2604 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:15\00", ptr %2604, align 1
  %2605 = call ptr @make_candy_text(ptr %2604)
  store ptr %2605, ptr @"Core:int:isNonNegative:15", align 8
  %2606 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:16\00", ptr %2606, align 1
  %2607 = call ptr @make_candy_text(ptr %2606)
  store ptr %2607, ptr @"Core:int:isNonNegative:16", align 8
  %2608 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2609 = getelementptr inbounds { ptr, ptr }, ptr %2608, i32 0, i32 0
  store ptr %2077, ptr %2609, align 8
  %2610 = getelementptr inbounds { ptr, ptr }, ptr %2608, i32 0, i32 1
  store ptr %2453, ptr %2610, align 8
  %2611 = call ptr @make_candy_function(ptr @Core_int_isNonNegative, ptr %2608, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2611, ptr @fun_Core_int_isNonNegative, align 8
  %2612 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:absolute:4\00", ptr %2612, align 1
  %2613 = call ptr @make_candy_text(ptr %2612)
  store ptr %2613, ptr @"Core:int:absolute:4", align 8
  %2614 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:absolute:8\00", ptr %2614, align 1
  %2615 = call ptr @make_candy_text(ptr %2614)
  store ptr %2615, ptr @"Core:int:absolute:8", align 8
  %2616 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:absolute:9:2\00", ptr %2616, align 1
  %2617 = call ptr @make_candy_text(ptr %2616)
  store ptr %2617, ptr @"Core:int:absolute:9:2", align 8
  %2618 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:absolute:11\00", ptr %2618, align 1
  %2619 = call ptr @make_candy_text(ptr %2618)
  store ptr %2619, ptr @"Core:int:absolute:11", align 8
  %2620 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2621 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2620, i32 0, i32 0
  store ptr %2469, ptr %2621, align 8
  %2622 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2620, i32 0, i32 1
  store ptr %2453, ptr %2622, align 8
  %2623 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2620, i32 0, i32 2
  store ptr %2428, ptr %2623, align 8
  %2624 = call ptr @make_candy_function(ptr @Core_int_absolute, ptr %2620, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2624, ptr @fun_Core_int_absolute, align 8
  %2625 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:4\00", ptr %2625, align 1
  %2626 = call ptr @make_candy_text(ptr %2625)
  store ptr %2626, ptr @"Core:int:fitsInRustU32:4", align 8
  %2627 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:7\00", ptr %2627, align 1
  %2628 = call ptr @make_candy_text(ptr %2627)
  store ptr %2628, ptr @"Core:int:fitsInRustU32:7", align 8
  %2629 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative value` was not satisfied\00", ptr %2629, align 1
  %2630 = call ptr @make_candy_text(ptr %2629)
  store ptr %2630, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %2631 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:9\00", ptr %2631, align 1
  %2632 = call ptr @make_candy_text(ptr %2631)
  store ptr %2632, ptr @"Core:int:fitsInRustU32:9", align 8
  %2633 = call ptr @make_candy_int(i64 4294967295)
  store ptr %2633, ptr @num_4294967295, align 8
  %2634 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU32:15\00", ptr %2634, align 1
  %2635 = call ptr @make_candy_text(ptr %2634)
  store ptr %2635, ptr @"Core:int:fitsInRustU32:15", align 8
  %2636 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2637 = getelementptr inbounds { ptr }, ptr %2636, i32 0, i32 0
  store ptr %2453, ptr %2637, align 8
  %2638 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU32, ptr %2636, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2638, ptr @fun_Core_int_fitsInRustU32, align 8
  %2639 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU128:4\00", ptr %2639, align 1
  %2640 = call ptr @make_candy_text(ptr %2639)
  store ptr %2640, ptr @"Core:int:fitsInRustU128:4", align 8
  %2641 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU128:7\00", ptr %2641, align 1
  %2642 = call ptr @make_candy_text(ptr %2641)
  store ptr %2642, ptr @"Core:int:fitsInRustU128:7", align 8
  %2643 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU128:9\00", ptr %2643, align 1
  %2644 = call ptr @make_candy_text(ptr %2643)
  store ptr %2644, ptr @"Core:int:fitsInRustU128:9", align 8
  %2645 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:int:fitsInRustU128:15\00", ptr %2645, align 1
  %2646 = call ptr @make_candy_text(ptr %2645)
  store ptr %2646, ptr @"Core:int:fitsInRustU128:15", align 8
  %2647 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2648 = getelementptr inbounds { ptr }, ptr %2647, i32 0, i32 0
  store ptr %2453, ptr %2648, align 8
  %2649 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU128, ptr %2647, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2649, ptr @fun_Core_int_fitsInRustU128, align 8
  %2650 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:126\00", ptr %2650, align 1
  %2651 = call ptr @make_candy_text(ptr %2650)
  store ptr %2651, ptr @"Core:int:126", align 8
  %2652 = load ptr, ptr @tag_IntShiftLeft, align 8
  %2653 = call ptr @Builtins__structGet(ptr %997, ptr %2652)
  %2654 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:135\00", ptr %2654, align 1
  %2655 = call ptr @make_candy_text(ptr %2654)
  store ptr %2655, ptr @"Core:int:135", align 8
  %2656 = load ptr, ptr @tag_IntShiftRight, align 8
  %2657 = call ptr @Builtins__structGet(ptr %997, ptr %2656)
  %2658 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:144\00", ptr %2658, align 1
  %2659 = call ptr @make_candy_text(ptr %2658)
  store ptr %2659, ptr @"Core:int:144", align 8
  %2660 = load ptr, ptr @tag_IntBitLength, align 8
  %2661 = call ptr @Builtins__structGet(ptr %997, ptr %2660)
  %2662 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:153\00", ptr %2662, align 1
  %2663 = call ptr @make_candy_text(ptr %2662)
  store ptr %2663, ptr @"Core:int:153", align 8
  %2664 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %2665 = call ptr @Builtins__structGet(ptr %997, ptr %2664)
  %2666 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:162\00", ptr %2666, align 1
  %2667 = call ptr @make_candy_text(ptr %2666)
  store ptr %2667, ptr @"Core:int:162", align 8
  %2668 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %2669 = call ptr @Builtins__structGet(ptr %997, ptr %2668)
  %2670 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:171\00", ptr %2670, align 1
  %2671 = call ptr @make_candy_text(ptr %2670)
  store ptr %2671, ptr @"Core:int:171", align 8
  %2672 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %2673 = call ptr @Builtins__structGet(ptr %997, ptr %2672)
  %2674 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:4\00", ptr %2674, align 1
  %2675 = call ptr @make_candy_text(ptr %2674)
  store ptr %2675, ptr @"Core:int:isEven:4", align 8
  %2676 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:8\00", ptr %2676, align 1
  %2677 = call ptr @make_candy_text(ptr %2676)
  store ptr %2677, ptr @"Core:int:isEven:8", align 8
  %2678 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:int:isEven:11\00", ptr %2678, align 1
  %2679 = call ptr @make_candy_text(ptr %2678)
  store ptr %2679, ptr @"Core:int:isEven:11", align 8
  %2680 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2681 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2680, i32 0, i32 0
  store ptr %2665, ptr %2681, align 8
  %2682 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2680, i32 0, i32 1
  store ptr %2453, ptr %2682, align 8
  %2683 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2680, i32 0, i32 2
  store ptr %2433, ptr %2683, align 8
  %2684 = call ptr @make_candy_function(ptr @Core_int_isEven, ptr %2680, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2684, ptr @fun_Core_int_isEven, align 8
  %2685 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:4\00", ptr %2685, align 1
  %2686 = call ptr @make_candy_text(ptr %2685)
  store ptr %2686, ptr @"Core:int:isOdd:4", align 8
  %2687 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:8\00", ptr %2687, align 1
  %2688 = call ptr @make_candy_text(ptr %2687)
  store ptr %2688, ptr @"Core:int:isOdd:8", align 8
  %2689 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:11\00", ptr %2689, align 1
  %2690 = call ptr @make_candy_text(ptr %2689)
  store ptr %2690, ptr @"Core:int:isOdd:11", align 8
  %2691 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:16\00", ptr %2691, align 1
  %2692 = call ptr @make_candy_text(ptr %2691)
  store ptr %2692, ptr @"Core:int:isOdd:16", align 8
  %2693 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:26\00", ptr %2693, align 1
  %2694 = call ptr @make_candy_text(ptr %2693)
  store ptr %2694, ptr @"Core:int:isOdd:26", align 8
  %2695 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:27\00", ptr %2695, align 1
  %2696 = call ptr @make_candy_text(ptr %2695)
  store ptr %2696, ptr @"Core:int:isOdd:27", align 8
  %2697 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:28\00", ptr %2697, align 1
  %2698 = call ptr @make_candy_text(ptr %2697)
  store ptr %2698, ptr @"Core:int:isOdd:28", align 8
  %2699 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:29\00", ptr %2699, align 1
  %2700 = call ptr @make_candy_text(ptr %2699)
  store ptr %2700, ptr @"Core:int:isOdd:29", align 8
  %2701 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2702 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2701, i32 0, i32 0
  store ptr %2665, ptr %2702, align 8
  %2703 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2701, i32 0, i32 1
  store ptr %2077, ptr %2703, align 8
  %2704 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2701, i32 0, i32 2
  store ptr %2453, ptr %2704, align 8
  %2705 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2701, i32 0, i32 3
  store ptr %2433, ptr %2705, align 8
  %2706 = call ptr @make_candy_function(ptr @Core_int_isOdd, ptr %2701, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2706, ptr @fun_Core_int_isOdd, align 8
  %2707 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:min:4\00", ptr %2707, align 1
  %2708 = call ptr @make_candy_text(ptr %2707)
  store ptr %2708, ptr @"Core:int:min:4", align 8
  %2709 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:min:9\00", ptr %2709, align 1
  %2710 = call ptr @make_candy_text(ptr %2709)
  store ptr %2710, ptr @"Core:int:min:9", align 8
  %2711 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:min:14\00", ptr %2711, align 1
  %2712 = call ptr @make_candy_text(ptr %2711)
  store ptr %2712, ptr @"Core:int:min:14", align 8
  %2713 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:min:17\00", ptr %2713, align 1
  %2714 = call ptr @make_candy_text(ptr %2713)
  store ptr %2714, ptr @"Core:int:min:17", align 8
  %2715 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2716 = getelementptr inbounds { ptr, ptr }, ptr %2715, i32 0, i32 0
  store ptr %2428, ptr %2716, align 8
  %2717 = getelementptr inbounds { ptr, ptr }, ptr %2715, i32 0, i32 1
  store ptr %2453, ptr %2717, align 8
  %2718 = call ptr @make_candy_function(ptr @Core_int_min, ptr %2715, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2718, ptr @fun_Core_int_min, align 8
  %2719 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:4\00", ptr %2719, align 1
  %2720 = call ptr @make_candy_text(ptr %2719)
  store ptr %2720, ptr @"Core:int:max:4", align 8
  %2721 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:9\00", ptr %2721, align 1
  %2722 = call ptr @make_candy_text(ptr %2721)
  store ptr %2722, ptr @"Core:int:max:9", align 8
  %2723 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:14\00", ptr %2723, align 1
  %2724 = call ptr @make_candy_text(ptr %2723)
  store ptr %2724, ptr @"Core:int:max:14", align 8
  %2725 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:17\00", ptr %2725, align 1
  %2726 = call ptr @make_candy_text(ptr %2725)
  store ptr %2726, ptr @"Core:int:max:17", align 8
  %2727 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2728 = getelementptr inbounds { ptr, ptr }, ptr %2727, i32 0, i32 0
  store ptr %2428, ptr %2728, align 8
  %2729 = getelementptr inbounds { ptr, ptr }, ptr %2727, i32 0, i32 1
  store ptr %2453, ptr %2729, align 8
  %2730 = call ptr @make_candy_function(ptr @Core_int_max, ptr %2727, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2730, ptr @fun_Core_int_max, align 8
  %2731 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:coerceAtLeast:4\00", ptr %2731, align 1
  %2732 = call ptr @make_candy_text(ptr %2731)
  store ptr %2732, ptr @"Core:int:coerceAtLeast:4", align 8
  %2733 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is minimum` was not satisfied\00", ptr %2733, align 1
  %2734 = call ptr @make_candy_text(ptr %2733)
  store ptr %2734, ptr @"text_`is minimum` was not satisfied", align 8
  %2735 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:coerceAtLeast:9\00", ptr %2735, align 1
  %2736 = call ptr @make_candy_text(ptr %2735)
  store ptr %2736, ptr @"Core:int:coerceAtLeast:9", align 8
  %2737 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:coerceAtLeast:13\00", ptr %2737, align 1
  %2738 = call ptr @make_candy_text(ptr %2737)
  store ptr %2738, ptr @"Core:int:coerceAtLeast:13", align 8
  %2739 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2740 = getelementptr inbounds { ptr }, ptr %2739, i32 0, i32 0
  store ptr %2453, ptr %2740, align 8
  %2741 = call ptr @make_candy_function(ptr @Core_int_coerceAtLeast, ptr %2739, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2741, ptr @fun_Core_int_coerceAtLeast, align 8
  %2742 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:int:coerceAtMost:4\00", ptr %2742, align 1
  %2743 = call ptr @make_candy_text(ptr %2742)
  store ptr %2743, ptr @"Core:int:coerceAtMost:4", align 8
  %2744 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is maximum` was not satisfied\00", ptr %2744, align 1
  %2745 = call ptr @make_candy_text(ptr %2744)
  store ptr %2745, ptr @"text_`is maximum` was not satisfied", align 8
  %2746 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:int:coerceAtMost:9\00", ptr %2746, align 1
  %2747 = call ptr @make_candy_text(ptr %2746)
  store ptr %2747, ptr @"Core:int:coerceAtMost:9", align 8
  %2748 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:coerceAtMost:13\00", ptr %2748, align 1
  %2749 = call ptr @make_candy_text(ptr %2748)
  store ptr %2749, ptr @"Core:int:coerceAtMost:13", align 8
  %2750 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2751 = getelementptr inbounds { ptr }, ptr %2750, i32 0, i32 0
  store ptr %2453, ptr %2751, align 8
  %2752 = call ptr @make_candy_function(ptr @Core_int_coerceAtMost, ptr %2750, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2752, ptr @fun_Core_int_coerceAtMost, align 8
  %2753 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:coerceIn:4\00", ptr %2753, align 1
  %2754 = call ptr @make_candy_text(ptr %2753)
  store ptr %2754, ptr @"Core:int:coerceIn:4", align 8
  %2755 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:coerceIn:9\00", ptr %2755, align 1
  %2756 = call ptr @make_candy_text(ptr %2755)
  store ptr %2756, ptr @"Core:int:coerceIn:9", align 8
  %2757 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:14\00", ptr %2757, align 1
  %2758 = call ptr @make_candy_text(ptr %2757)
  store ptr %2758, ptr @"Core:int:coerceIn:14", align 8
  %2759 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:18\00", ptr %2759, align 1
  %2760 = call ptr @make_candy_text(ptr %2759)
  store ptr %2760, ptr @"Core:int:coerceIn:18", align 8
  %2761 = alloca i8, i64 58, align 1
  store [58 x i8] c"`minimum | isLessThanOrEqualTo maximum` was not satisfied\00", ptr %2761, align 1
  %2762 = call ptr @make_candy_text(ptr %2761)
  store ptr %2762, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  %2763 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:20\00", ptr %2763, align 1
  %2764 = call ptr @make_candy_text(ptr %2763)
  store ptr %2764, ptr @"Core:int:coerceIn:20", align 8
  %2765 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:24\00", ptr %2765, align 1
  %2766 = call ptr @make_candy_text(ptr %2765)
  store ptr %2766, ptr @"Core:int:coerceIn:24", align 8
  %2767 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:27\00", ptr %2767, align 1
  %2768 = call ptr @make_candy_text(ptr %2767)
  store ptr %2768, ptr @"Core:int:coerceIn:27", align 8
  %2769 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2770 = getelementptr inbounds { ptr }, ptr %2769, i32 0, i32 0
  store ptr %2453, ptr %2770, align 8
  %2771 = call ptr @make_candy_function(ptr @Core_int_coerceIn, ptr %2769, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2771, ptr @fun_Core_int_coerceIn, align 8
  %2772 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:180\00", ptr %2772, align 1
  %2773 = call ptr @make_candy_text(ptr %2772)
  store ptr %2773, ptr @"Core:int:180", align 8
  %2774 = load ptr, ptr @tag_IntParse, align 8
  %2775 = call ptr @Builtins__structGet(ptr %997, ptr %2774)
  %2776 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is base` was not satisfied\00", ptr %2776, align 1
  %2777 = call ptr @make_candy_text(ptr %2776)
  store ptr %2777, ptr @"text_`is base` was not satisfied", align 8
  %2778 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:4\00", ptr %2778, align 1
  %2779 = call ptr @make_candy_text(ptr %2778)
  store ptr %2779, ptr @"Core:int:pow:4", align 8
  %2780 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is exponent` was not satisfied\00", ptr %2780, align 1
  %2781 = call ptr @make_candy_text(ptr %2780)
  store ptr %2781, ptr @"text_`is exponent` was not satisfied", align 8
  %2782 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:9\00", ptr %2782, align 1
  %2783 = call ptr @make_candy_text(ptr %2782)
  store ptr %2783, ptr @"Core:int:pow:9", align 8
  %2784 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:12\00", ptr %2784, align 1
  %2785 = call ptr @make_candy_text(ptr %2784)
  store ptr %2785, ptr @"Core:int:pow:12", align 8
  %2786 = alloca i8, i64 43, align 1
  store [43 x i8] c"`isNonNegative exponent` was not satisfied\00", ptr %2786, align 1
  %2787 = call ptr @make_candy_text(ptr %2786)
  store ptr %2787, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %2788 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:14\00", ptr %2788, align 1
  %2789 = call ptr @make_candy_text(ptr %2788)
  store ptr %2789, ptr @"Core:int:pow:14", align 8
  %2790 = alloca i8, i64 5, align 1
  store [5 x i8] c"Base\00", ptr %2790, align 1
  %2791 = call ptr @make_candy_tag(ptr %2790, ptr null)
  store ptr %2791, ptr @tag_Base, align 8
  %2792 = alloca i8, i64 9, align 1
  store [9 x i8] c"Exponent\00", ptr %2792, align 1
  %2793 = call ptr @make_candy_tag(ptr %2792, ptr null)
  store ptr %2793, ptr @tag_Exponent, align 8
  %2794 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:1\00", ptr %2794, align 1
  %2795 = call ptr @make_candy_text(ptr %2794)
  store ptr %2795, ptr @"Core:int:pow:21:1", align 8
  %2796 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Base`: `\00", ptr %2796, align 1
  %2797 = call ptr @make_candy_text(ptr %2796)
  store ptr %2797, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %2798 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Exponent`: `\00", ptr %2798, align 1
  %2799 = call ptr @make_candy_text(ptr %2798)
  store ptr %2799, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %2800 = alloca i8, i64 25, align 1
  store [25 x i8] c"Expected a Struct, got `\00", ptr %2800, align 1
  %2801 = call ptr @make_candy_text(ptr %2800)
  store ptr %2801, ptr @"text_Expected a Struct, got `", align 8
  %2802 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:pow:21:base\00", ptr %2802, align 1
  %2803 = call ptr @make_candy_text(ptr %2802)
  store ptr %2803, ptr @"Core:int:pow:21:base", align 8
  %2804 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:pow:21:exponent\00", ptr %2804, align 1
  %2805 = call ptr @make_candy_text(ptr %2804)
  store ptr %2805, ptr @"Core:int:pow:21:exponent", align 8
  %2806 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:4\00", ptr %2806, align 1
  %2807 = call ptr @make_candy_text(ptr %2806)
  store ptr %2807, ptr @"Core:int:pow:21:4", align 8
  %2808 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected `0`, got `\00", ptr %2808, align 1
  %2809 = call ptr @make_candy_text(ptr %2808)
  store ptr %2809, ptr @"text_Expected `0`, got `", align 8
  %2810 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2811 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_matched, ptr %2810, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2811, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %2812 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:4\00", ptr %2812, align 1
  %2813 = call ptr @make_candy_text(ptr %2812)
  store ptr %2813, ptr @"Core:int:pow:21:4:4", align 8
  %2814 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:5:5\00", ptr %2814, align 1
  %2815 = call ptr @make_candy_text(ptr %2814)
  store ptr %2815, ptr @"Core:int:pow:21:4:5:5", align 8
  %2816 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:10\00", ptr %2816, align 1
  %2817 = call ptr @make_candy_text(ptr %2816)
  store ptr %2817, ptr @"Core:int:pow:21:4:5:10", align 8
  %2818 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:12\00", ptr %2818, align 1
  %2819 = call ptr @make_candy_text(ptr %2818)
  store ptr %2819, ptr @"Core:int:pow:21:4:5:12", align 8
  %2820 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:6:7\00", ptr %2820, align 1
  %2821 = call ptr @make_candy_text(ptr %2820)
  store ptr %2821, ptr @"Core:int:pow:21:4:6:7", align 8
  %2822 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:12\00", ptr %2822, align 1
  %2823 = call ptr @make_candy_text(ptr %2822)
  store ptr %2823, ptr @"Core:int:pow:21:4:6:12", align 8
  %2824 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:15\00", ptr %2824, align 1
  %2825 = call ptr @make_candy_text(ptr %2824)
  store ptr %2825, ptr @"Core:int:pow:21:4:6:15", align 8
  %2826 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:17\00", ptr %2826, align 1
  %2827 = call ptr @make_candy_text(ptr %2826)
  store ptr %2827, ptr @"Core:int:pow:21:4:6:17", align 8
  %2828 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:18\00", ptr %2828, align 1
  %2829 = call ptr @make_candy_text(ptr %2828)
  store ptr %2829, ptr @"Core:int:pow:21:4:6:18", align 8
  %2830 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:7\00", ptr %2830, align 1
  %2831 = call ptr @make_candy_text(ptr %2830)
  store ptr %2831, ptr @"Core:int:pow:21:4:7", align 8
  %2832 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:22\00", ptr %2832, align 1
  %2833 = call ptr @make_candy_text(ptr %2832)
  store ptr %2833, ptr @"Core:int:pow:22", align 8
  %2834 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2835 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2834, i32 0, i32 0
  store ptr %2481, ptr %2835, align 8
  %2836 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2834, i32 0, i32 1
  store ptr %2428, ptr %2836, align 8
  %2837 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2834, i32 0, i32 2
  store ptr %2657, ptr %2837, align 8
  %2838 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2834, i32 0, i32 3
  store ptr %2665, ptr %2838, align 8
  %2839 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2834, i32 0, i32 4
  store ptr %2469, ptr %2839, align 8
  %2840 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2834, i32 0, i32 5
  store ptr %2453, ptr %2840, align 8
  %2841 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2834, i32 0, i32 6
  store ptr %2433, ptr %2841, align 8
  %2842 = call ptr @make_candy_function(ptr @Core_int_pow, ptr %2834, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2842, ptr @fun_Core_int_pow, align 8
  %2843 = alloca i8, i64 20, align 1
  store [20 x i8] c"IsLessThanOrEqualTo\00", ptr %2843, align 1
  %2844 = call ptr @make_candy_tag(ptr %2843, ptr null)
  store ptr %2844, ptr @tag_IsLessThanOrEqualTo, align 8
  %2845 = alloca i8, i64 11, align 1
  store [11 x i8] c"BitwiseAnd\00", ptr %2845, align 1
  %2846 = call ptr @make_candy_tag(ptr %2845, ptr null)
  store ptr %2846, ptr @tag_BitwiseAnd, align 8
  %2847 = alloca i8, i64 10, align 1
  store [10 x i8] c"BitwiseOr\00", ptr %2847, align 1
  %2848 = call ptr @make_candy_tag(ptr %2847, ptr null)
  store ptr %2848, ptr @tag_BitwiseOr, align 8
  %2849 = alloca i8, i64 13, align 1
  store [13 x i8] c"CoerceAtMost\00", ptr %2849, align 1
  %2850 = call ptr @make_candy_tag(ptr %2849, ptr null)
  store ptr %2850, ptr @tag_CoerceAtMost, align 8
  %2851 = alloca i8, i64 10, align 1
  store [10 x i8] c"Remainder\00", ptr %2851, align 1
  %2852 = call ptr @make_candy_tag(ptr %2851, ptr null)
  store ptr %2852, ptr @tag_Remainder, align 8
  %2853 = alloca i8, i64 14, align 1
  store [14 x i8] c"FitsInRustU32\00", ptr %2853, align 1
  %2854 = call ptr @make_candy_tag(ptr %2853, ptr null)
  store ptr %2854, ptr @tag_FitsInRustU32, align 8
  %2855 = alloca i8, i64 10, align 1
  store [10 x i8] c"ShiftLeft\00", ptr %2855, align 1
  %2856 = call ptr @make_candy_tag(ptr %2855, ptr null)
  store ptr %2856, ptr @tag_ShiftLeft, align 8
  %2857 = alloca i8, i64 11, align 1
  store [11 x i8] c"IsPositive\00", ptr %2857, align 1
  %2858 = call ptr @make_candy_tag(ptr %2857, ptr null)
  store ptr %2858, ptr @tag_IsPositive, align 8
  %2859 = alloca i8, i64 9, align 1
  store [9 x i8] c"CoerceIn\00", ptr %2859, align 1
  %2860 = call ptr @make_candy_tag(ptr %2859, ptr null)
  store ptr %2860, ptr @tag_CoerceIn, align 8
  %2861 = alloca i8, i64 11, align 1
  store [11 x i8] c"IsNegative\00", ptr %2861, align 1
  %2862 = call ptr @make_candy_tag(ptr %2861, ptr null)
  store ptr %2862, ptr @tag_IsNegative, align 8
  %2863 = alloca i8, i64 14, align 1
  store [14 x i8] c"IsNonNegative\00", ptr %2863, align 1
  %2864 = call ptr @make_candy_tag(ptr %2863, ptr null)
  store ptr %2864, ptr @tag_IsNonNegative, align 8
  %2865 = alloca i8, i64 7, align 1
  store [7 x i8] c"Modulo\00", ptr %2865, align 1
  %2866 = call ptr @make_candy_tag(ptr %2865, ptr null)
  store ptr %2866, ptr @tag_Modulo, align 8
  %2867 = alloca i8, i64 6, align 1
  store [6 x i8] c"Parse\00", ptr %2867, align 1
  %2868 = call ptr @make_candy_tag(ptr %2867, ptr null)
  store ptr %2868, ptr @tag_Parse, align 8
  %2869 = alloca i8, i64 14, align 1
  store [14 x i8] c"IsGreaterThan\00", ptr %2869, align 1
  %2870 = call ptr @make_candy_tag(ptr %2869, ptr null)
  store ptr %2870, ptr @tag_IsGreaterThan, align 8
  %2871 = alloca i8, i64 14, align 1
  store [14 x i8] c"IsNonPositive\00", ptr %2871, align 1
  %2872 = call ptr @make_candy_tag(ptr %2871, ptr null)
  store ptr %2872, ptr @tag_IsNonPositive, align 8
  %2873 = alloca i8, i64 9, align 1
  store [9 x i8] c"Multiply\00", ptr %2873, align 1
  %2874 = call ptr @make_candy_tag(ptr %2873, ptr null)
  store ptr %2874, ptr @tag_Multiply, align 8
  %2875 = alloca i8, i64 17, align 1
  store [17 x i8] c"DivideTruncating\00", ptr %2875, align 1
  %2876 = call ptr @make_candy_tag(ptr %2875, ptr null)
  store ptr %2876, ptr @tag_DivideTruncating, align 8
  %2877 = alloca i8, i64 4, align 1
  store [4 x i8] c"Add\00", ptr %2877, align 1
  %2878 = call ptr @make_candy_tag(ptr %2877, ptr null)
  store ptr %2878, ptr @tag_Add, align 8
  %2879 = alloca i8, i64 11, align 1
  store [11 x i8] c"BitwiseXor\00", ptr %2879, align 1
  %2880 = call ptr @make_candy_tag(ptr %2879, ptr null)
  store ptr %2880, ptr @tag_BitwiseXor, align 8
  %2881 = alloca i8, i64 6, align 1
  store [6 x i8] c"IsOdd\00", ptr %2881, align 1
  %2882 = call ptr @make_candy_tag(ptr %2881, ptr null)
  store ptr %2882, ptr @tag_IsOdd, align 8
  %2883 = alloca i8, i64 23, align 1
  store [23 x i8] c"IsGreaterThanOrEqualTo\00", ptr %2883, align 1
  %2884 = call ptr @make_candy_tag(ptr %2883, ptr null)
  store ptr %2884, ptr @tag_IsGreaterThanOrEqualTo, align 8
  %2885 = alloca i8, i64 11, align 1
  store [11 x i8] c"IsLessThan\00", ptr %2885, align 1
  %2886 = call ptr @make_candy_tag(ptr %2885, ptr null)
  store ptr %2886, ptr @tag_IsLessThan, align 8
  %2887 = alloca i8, i64 7, align 1
  store [7 x i8] c"Negate\00", ptr %2887, align 1
  %2888 = call ptr @make_candy_tag(ptr %2887, ptr null)
  store ptr %2888, ptr @tag_Negate, align 8
  %2889 = alloca i8, i64 4, align 1
  store [4 x i8] c"Pow\00", ptr %2889, align 1
  %2890 = call ptr @make_candy_tag(ptr %2889, ptr null)
  store ptr %2890, ptr @tag_Pow, align 8
  %2891 = alloca i8, i64 11, align 1
  store [11 x i8] c"ShiftRight\00", ptr %2891, align 1
  %2892 = call ptr @make_candy_tag(ptr %2891, ptr null)
  store ptr %2892, ptr @tag_ShiftRight, align 8
  %2893 = alloca i8, i64 7, align 1
  store [7 x i8] c"IsEven\00", ptr %2893, align 1
  %2894 = call ptr @make_candy_tag(ptr %2893, ptr null)
  store ptr %2894, ptr @tag_IsEven, align 8
  %2895 = alloca i8, i64 4, align 1
  store [4 x i8] c"Max\00", ptr %2895, align 1
  %2896 = call ptr @make_candy_tag(ptr %2895, ptr null)
  store ptr %2896, ptr @tag_Max, align 8
  %2897 = alloca i8, i64 10, align 1
  store [10 x i8] c"BitLength\00", ptr %2897, align 1
  %2898 = call ptr @make_candy_tag(ptr %2897, ptr null)
  store ptr %2898, ptr @tag_BitLength, align 8
  %2899 = alloca i8, i64 4, align 1
  store [4 x i8] c"Min\00", ptr %2899, align 1
  %2900 = call ptr @make_candy_tag(ptr %2899, ptr null)
  store ptr %2900, ptr @tag_Min, align 8
  %2901 = alloca i8, i64 15, align 1
  store [15 x i8] c"FitsInRustU128\00", ptr %2901, align 1
  %2902 = call ptr @make_candy_tag(ptr %2901, ptr null)
  store ptr %2902, ptr @tag_FitsInRustU128, align 8
  %2903 = alloca i8, i64 14, align 1
  store [14 x i8] c"CoerceAtLeast\00", ptr %2903, align 1
  %2904 = call ptr @make_candy_tag(ptr %2903, ptr null)
  store ptr %2904, ptr @tag_CoerceAtLeast, align 8
  %2905 = alloca i8, i64 10, align 1
  store [10 x i8] c"CompareTo\00", ptr %2905, align 1
  %2906 = call ptr @make_candy_tag(ptr %2905, ptr null)
  store ptr %2906, ptr @tag_CompareTo, align 8
  %2907 = alloca i8, i64 9, align 1
  store [9 x i8] c"Absolute\00", ptr %2907, align 1
  %2908 = call ptr @make_candy_tag(ptr %2907, ptr null)
  store ptr %2908, ptr @tag_Absolute, align 8
  %2909 = alloca i8, i64 9, align 1
  store [9 x i8] c"Subtract\00", ptr %2909, align 1
  %2910 = call ptr @make_candy_tag(ptr %2909, ptr null)
  store ptr %2910, ptr @tag_Subtract, align 8
  %2911 = alloca i8, i64 10, align 1
  store [10 x i8] c"TheAnswer\00", ptr %2911, align 1
  %2912 = call ptr @make_candy_tag(ptr %2911, ptr null)
  store ptr %2912, ptr @tag_TheAnswer, align 8
  %2913 = alloca ptr, i64 37, align 8
  %2914 = alloca ptr, i64 37, align 8
  %2915 = load ptr, ptr @tag_CoerceAtLeast, align 8
  %2916 = load ptr, ptr @fun_Core_int_coerceAtLeast, align 8
  %2917 = getelementptr ptr, ptr %2913, i64 0
  store ptr %2915, ptr %2917, align 8
  %2918 = getelementptr ptr, ptr %2914, i64 0
  store ptr %2916, ptr %2918, align 8
  %2919 = load ptr, ptr @tag_FitsInRustU32, align 8
  %2920 = load ptr, ptr @fun_Core_int_fitsInRustU32, align 8
  %2921 = getelementptr ptr, ptr %2913, i64 1
  store ptr %2919, ptr %2921, align 8
  %2922 = getelementptr ptr, ptr %2914, i64 1
  store ptr %2920, ptr %2922, align 8
  %2923 = load ptr, ptr @tag_CoerceIn, align 8
  %2924 = load ptr, ptr @fun_Core_int_coerceIn, align 8
  %2925 = getelementptr ptr, ptr %2913, i64 2
  store ptr %2923, ptr %2925, align 8
  %2926 = getelementptr ptr, ptr %2914, i64 2
  store ptr %2924, ptr %2926, align 8
  %2927 = load ptr, ptr @tag_IsPositive, align 8
  %2928 = load ptr, ptr @fun_Core_int_isPositive, align 8
  %2929 = getelementptr ptr, ptr %2913, i64 3
  store ptr %2927, ptr %2929, align 8
  %2930 = getelementptr ptr, ptr %2914, i64 3
  store ptr %2928, ptr %2930, align 8
  %2931 = load ptr, ptr @tag_BitwiseAnd, align 8
  %2932 = getelementptr ptr, ptr %2913, i64 4
  store ptr %2931, ptr %2932, align 8
  %2933 = getelementptr ptr, ptr %2914, i64 4
  store ptr %2665, ptr %2933, align 8
  %2934 = load ptr, ptr @tag_IsOdd, align 8
  %2935 = load ptr, ptr @fun_Core_int_isOdd, align 8
  %2936 = getelementptr ptr, ptr %2913, i64 5
  store ptr %2934, ptr %2936, align 8
  %2937 = getelementptr ptr, ptr %2914, i64 5
  store ptr %2935, ptr %2937, align 8
  %2938 = load ptr, ptr @tag_BitwiseXor, align 8
  %2939 = getelementptr ptr, ptr %2913, i64 6
  store ptr %2938, ptr %2939, align 8
  %2940 = getelementptr ptr, ptr %2914, i64 6
  store ptr %2673, ptr %2940, align 8
  %2941 = load ptr, ptr @tag_IsLessThan, align 8
  %2942 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  %2943 = getelementptr ptr, ptr %2913, i64 7
  store ptr %2941, ptr %2943, align 8
  %2944 = getelementptr ptr, ptr %2914, i64 7
  store ptr %2942, ptr %2944, align 8
  %2945 = load ptr, ptr @tag_IsGreaterThan, align 8
  %2946 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  %2947 = getelementptr ptr, ptr %2913, i64 8
  store ptr %2945, ptr %2947, align 8
  %2948 = getelementptr ptr, ptr %2914, i64 8
  store ptr %2946, ptr %2948, align 8
  %2949 = load ptr, ptr @tag_DivideTruncating, align 8
  %2950 = getelementptr ptr, ptr %2913, i64 9
  store ptr %2949, ptr %2950, align 8
  %2951 = getelementptr ptr, ptr %2914, i64 9
  store ptr %2485, ptr %2951, align 8
  %2952 = load ptr, ptr @tag_Multiply, align 8
  %2953 = getelementptr ptr, ptr %2913, i64 10
  store ptr %2952, ptr %2953, align 8
  %2954 = getelementptr ptr, ptr %2914, i64 10
  store ptr %2481, ptr %2954, align 8
  %2955 = load ptr, ptr @tag_Subtract, align 8
  %2956 = getelementptr ptr, ptr %2913, i64 11
  store ptr %2955, ptr %2956, align 8
  %2957 = getelementptr ptr, ptr %2914, i64 11
  store ptr %2469, ptr %2957, align 8
  %2958 = load ptr, ptr @tag_BitLength, align 8
  %2959 = getelementptr ptr, ptr %2913, i64 12
  store ptr %2958, ptr %2959, align 8
  %2960 = getelementptr ptr, ptr %2914, i64 12
  store ptr %2661, ptr %2960, align 8
  %2961 = load ptr, ptr @tag_Max, align 8
  %2962 = load ptr, ptr @fun_Core_int_max, align 8
  %2963 = getelementptr ptr, ptr %2913, i64 13
  store ptr %2961, ptr %2963, align 8
  %2964 = getelementptr ptr, ptr %2914, i64 13
  store ptr %2962, ptr %2964, align 8
  %2965 = load ptr, ptr @tag_FitsInRustU128, align 8
  %2966 = load ptr, ptr @fun_Core_int_fitsInRustU128, align 8
  %2967 = getelementptr ptr, ptr %2913, i64 14
  store ptr %2965, ptr %2967, align 8
  %2968 = getelementptr ptr, ptr %2914, i64 14
  store ptr %2966, ptr %2968, align 8
  %2969 = load ptr, ptr @tag_Remainder, align 8
  %2970 = getelementptr ptr, ptr %2913, i64 15
  store ptr %2969, ptr %2970, align 8
  %2971 = getelementptr ptr, ptr %2914, i64 15
  store ptr %2489, ptr %2971, align 8
  %2972 = load ptr, ptr @tag_CoerceAtMost, align 8
  %2973 = load ptr, ptr @fun_Core_int_coerceAtMost, align 8
  %2974 = getelementptr ptr, ptr %2913, i64 16
  store ptr %2972, ptr %2974, align 8
  %2975 = getelementptr ptr, ptr %2914, i64 16
  store ptr %2973, ptr %2975, align 8
  %2976 = load ptr, ptr @tag_ShiftLeft, align 8
  %2977 = getelementptr ptr, ptr %2913, i64 17
  store ptr %2976, ptr %2977, align 8
  %2978 = getelementptr ptr, ptr %2914, i64 17
  store ptr %2653, ptr %2978, align 8
  %2979 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %2980 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo, align 8
  %2981 = getelementptr ptr, ptr %2913, i64 18
  store ptr %2979, ptr %2981, align 8
  %2982 = getelementptr ptr, ptr %2914, i64 18
  store ptr %2980, ptr %2982, align 8
  %2983 = load ptr, ptr @tag_Add, align 8
  %2984 = getelementptr ptr, ptr %2913, i64 19
  store ptr %2983, ptr %2984, align 8
  %2985 = getelementptr ptr, ptr %2914, i64 19
  store ptr %2465, ptr %2985, align 8
  %2986 = load ptr, ptr @tag_ShiftRight, align 8
  %2987 = getelementptr ptr, ptr %2913, i64 20
  store ptr %2986, ptr %2987, align 8
  %2988 = getelementptr ptr, ptr %2914, i64 20
  store ptr %2657, ptr %2988, align 8
  %2989 = load ptr, ptr @tag_Parse, align 8
  %2990 = getelementptr ptr, ptr %2913, i64 21
  store ptr %2989, ptr %2990, align 8
  %2991 = getelementptr ptr, ptr %2914, i64 21
  store ptr %2775, ptr %2991, align 8
  %2992 = load ptr, ptr @tag_Modulo, align 8
  %2993 = getelementptr ptr, ptr %2913, i64 22
  store ptr %2992, ptr %2993, align 8
  %2994 = getelementptr ptr, ptr %2914, i64 22
  store ptr %2493, ptr %2994, align 8
  %2995 = load ptr, ptr @tag_IsNonPositive, align 8
  %2996 = load ptr, ptr @fun_Core_int_isNonPositive, align 8
  %2997 = getelementptr ptr, ptr %2913, i64 23
  store ptr %2995, ptr %2997, align 8
  %2998 = getelementptr ptr, ptr %2914, i64 23
  store ptr %2996, ptr %2998, align 8
  %2999 = load ptr, ptr @tag_IsEven, align 8
  %3000 = load ptr, ptr @fun_Core_int_isEven, align 8
  %3001 = getelementptr ptr, ptr %2913, i64 24
  store ptr %2999, ptr %3001, align 8
  %3002 = getelementptr ptr, ptr %2914, i64 24
  store ptr %3000, ptr %3002, align 8
  %3003 = load ptr, ptr @tag_Absolute, align 8
  %3004 = load ptr, ptr @fun_Core_int_absolute, align 8
  %3005 = getelementptr ptr, ptr %2913, i64 25
  store ptr %3003, ptr %3005, align 8
  %3006 = getelementptr ptr, ptr %2914, i64 25
  store ptr %3004, ptr %3006, align 8
  %3007 = load ptr, ptr @tag_BitwiseOr, align 8
  %3008 = getelementptr ptr, ptr %2913, i64 26
  store ptr %3007, ptr %3008, align 8
  %3009 = getelementptr ptr, ptr %2914, i64 26
  store ptr %2669, ptr %3009, align 8
  %3010 = load ptr, ptr @tag_IsNegative, align 8
  %3011 = load ptr, ptr @fun_Core_int_isNegative, align 8
  %3012 = getelementptr ptr, ptr %2913, i64 27
  store ptr %3010, ptr %3012, align 8
  %3013 = getelementptr ptr, ptr %2914, i64 27
  store ptr %3011, ptr %3013, align 8
  %3014 = load ptr, ptr @tag_IsGreaterThanOrEqualTo, align 8
  %3015 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  %3016 = getelementptr ptr, ptr %2913, i64 28
  store ptr %3014, ptr %3016, align 8
  %3017 = getelementptr ptr, ptr %2914, i64 28
  store ptr %3015, ptr %3017, align 8
  %3018 = load ptr, ptr @tag_Pow, align 8
  %3019 = load ptr, ptr @fun_Core_int_pow, align 8
  %3020 = getelementptr ptr, ptr %2913, i64 29
  store ptr %3018, ptr %3020, align 8
  %3021 = getelementptr ptr, ptr %2914, i64 29
  store ptr %3019, ptr %3021, align 8
  %3022 = load ptr, ptr @tag_Negate, align 8
  %3023 = load ptr, ptr @fun_Core_int_negate, align 8
  %3024 = getelementptr ptr, ptr %2913, i64 30
  store ptr %3022, ptr %3024, align 8
  %3025 = getelementptr ptr, ptr %2914, i64 30
  store ptr %3023, ptr %3025, align 8
  %3026 = load ptr, ptr @tag_IsNonNegative, align 8
  %3027 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  %3028 = getelementptr ptr, ptr %2913, i64 31
  store ptr %3026, ptr %3028, align 8
  %3029 = getelementptr ptr, ptr %2914, i64 31
  store ptr %3027, ptr %3029, align 8
  %3030 = load ptr, ptr @tag_Is, align 8
  %3031 = load ptr, ptr @fun_Core_int_is, align 8
  %3032 = getelementptr ptr, ptr %2913, i64 32
  store ptr %3030, ptr %3032, align 8
  %3033 = getelementptr ptr, ptr %2914, i64 32
  store ptr %3031, ptr %3033, align 8
  %3034 = load ptr, ptr @tag_TheAnswer, align 8
  %3035 = load ptr, ptr @num_42, align 8
  %3036 = getelementptr ptr, ptr %2913, i64 33
  store ptr %3034, ptr %3036, align 8
  %3037 = getelementptr ptr, ptr %2914, i64 33
  store ptr %3035, ptr %3037, align 8
  %3038 = load ptr, ptr @tag_Min, align 8
  %3039 = load ptr, ptr @fun_Core_int_min, align 8
  %3040 = getelementptr ptr, ptr %2913, i64 34
  store ptr %3038, ptr %3040, align 8
  %3041 = getelementptr ptr, ptr %2914, i64 34
  store ptr %3039, ptr %3041, align 8
  %3042 = load ptr, ptr @tag_CompareTo, align 8
  %3043 = load ptr, ptr @fun_Core_int_compareTo, align 8
  %3044 = getelementptr ptr, ptr %2913, i64 35
  store ptr %3042, ptr %3044, align 8
  %3045 = getelementptr ptr, ptr %2914, i64 35
  store ptr %3043, ptr %3045, align 8
  %3046 = getelementptr ptr, ptr %2913, i64 36
  store ptr null, ptr %3046, align 8
  %3047 = getelementptr ptr, ptr %2914, i64 36
  store ptr null, ptr %3047, align 8
  %3048 = call ptr @make_candy_struct(ptr %2913, ptr %2914)
  %3049 = load ptr, ptr @tag_Equals, align 8
  %3050 = call ptr @Builtins__structGet(ptr %997, ptr %3049)
  %3051 = load ptr, ptr @tag_Equals, align 8
  %3052 = call ptr @Builtins__structGet(ptr %997, ptr %3051)
  %3053 = load ptr, ptr @tag_Equals, align 8
  %3054 = call ptr @Builtins__structGet(ptr %997, ptr %3053)
  %3055 = load ptr, ptr @tag_TypeOf, align 8
  %3056 = call ptr @Builtins__structGet(ptr %997, ptr %3055)
  %3057 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3058 = call ptr @Builtins__structGet(ptr %997, ptr %3057)
  %3059 = load ptr, ptr @tag_Equals, align 8
  %3060 = call ptr @Builtins__structGet(ptr %997, ptr %3059)
  %3061 = load ptr, ptr @tag_TypeOf, align 8
  %3062 = call ptr @Builtins__structGet(ptr %997, ptr %3061)
  %3063 = load ptr, ptr @tag_Equals, align 8
  %3064 = call ptr @Builtins__structGet(ptr %997, ptr %3063)
  %3065 = load ptr, ptr @tag_Equals, align 8
  %3066 = call ptr @Builtins__structGet(ptr %997, ptr %3065)
  %3067 = load ptr, ptr @tag_Equals, align 8
  %3068 = call ptr @Builtins__structGet(ptr %997, ptr %3067)
  %3069 = load ptr, ptr @tag_TypeOf, align 8
  %3070 = call ptr @Builtins__structGet(ptr %997, ptr %3069)
  %3071 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3072 = call ptr @Builtins__structGet(ptr %997, ptr %3071)
  %3073 = load ptr, ptr @tag_Equals, align 8
  %3074 = call ptr @Builtins__structGet(ptr %997, ptr %3073)
  %3075 = load ptr, ptr @tag_TypeOf, align 8
  %3076 = call ptr @Builtins__structGet(ptr %997, ptr %3075)
  %3077 = load ptr, ptr @tag_IfElse, align 8
  %3078 = call ptr @Builtins__structGet(ptr %997, ptr %3077)
  %3079 = load ptr, ptr @tag_Equals, align 8
  %3080 = call ptr @Builtins__structGet(ptr %997, ptr %3079)
  %3081 = load ptr, ptr @tag_TypeOf, align 8
  %3082 = call ptr @Builtins__structGet(ptr %997, ptr %3081)
  %3083 = alloca i8, i64 4, align 1
  store [4 x i8] c"Get\00", ptr %3083, align 1
  %3084 = call ptr @make_candy_tag(ptr %3083, ptr null)
  store ptr %3084, ptr @tag_Get, align 8
  %3085 = load ptr, ptr @tag_Equals, align 8
  %3086 = call ptr @Builtins__structGet(ptr %997, ptr %3085)
  %3087 = load ptr, ptr @tag_Equals, align 8
  %3088 = call ptr @Builtins__structGet(ptr %997, ptr %3087)
  %3089 = load ptr, ptr @tag_Equals, align 8
  %3090 = call ptr @Builtins__structGet(ptr %997, ptr %3089)
  %3091 = load ptr, ptr @tag_TypeOf, align 8
  %3092 = call ptr @Builtins__structGet(ptr %997, ptr %3091)
  %3093 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3094 = getelementptr inbounds { ptr, ptr }, ptr %3093, i32 0, i32 0
  store ptr %3092, ptr %3094, align 8
  %3095 = getelementptr inbounds { ptr, ptr }, ptr %3093, i32 0, i32 1
  store ptr %3090, ptr %3095, align 8
  %3096 = call ptr @make_candy_function(ptr @Core_type_is.570, ptr %3093, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3096, ptr @fun_Core_type_is.571, align 8
  %3097 = alloca ptr, i64 3, align 8
  %3098 = alloca ptr, i64 3, align 8
  %3099 = load ptr, ptr @tag_TypeOf, align 8
  %3100 = getelementptr ptr, ptr %3097, i64 0
  store ptr %3099, ptr %3100, align 8
  %3101 = getelementptr ptr, ptr %3098, i64 0
  store ptr %3092, ptr %3101, align 8
  %3102 = load ptr, ptr @tag_Is, align 8
  %3103 = load ptr, ptr @fun_Core_type_is.571, align 8
  %3104 = getelementptr ptr, ptr %3097, i64 1
  store ptr %3102, ptr %3104, align 8
  %3105 = getelementptr ptr, ptr %3098, i64 1
  store ptr %3103, ptr %3105, align 8
  %3106 = getelementptr ptr, ptr %3097, i64 2
  store ptr null, ptr %3106, align 8
  %3107 = getelementptr ptr, ptr %3098, i64 2
  store ptr null, ptr %3107, align 8
  %3108 = call ptr @make_candy_struct(ptr %3097, ptr %3098)
  %3109 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3110 = getelementptr inbounds { ptr }, ptr %3109, i32 0, i32 0
  store ptr %3108, ptr %3110, align 8
  %3111 = call ptr @make_candy_function(ptr @Core_function_is.572, ptr %3109, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3111, ptr @fun_Core_function_is.573, align 8
  %3112 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3113 = call ptr @Builtins__structGet(ptr %997, ptr %3112)
  %3114 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3115 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3114, i32 0, i32 0
  store ptr %3108, ptr %3115, align 8
  %3116 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3114, i32 0, i32 1
  store ptr %3088, ptr %3116, align 8
  %3117 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3114, i32 0, i32 2
  store ptr %997, ptr %3117, align 8
  %3118 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3114, i32 0, i32 3
  store ptr %3113, ptr %3118, align 8
  %3119 = call ptr @make_candy_function(ptr @Core_function_is0.574, ptr %3114, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3119, ptr @fun_Core_function_is0.575, align 8
  %3120 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3121 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3120, i32 0, i32 0
  store ptr %3108, ptr %3121, align 8
  %3122 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3120, i32 0, i32 1
  store ptr %3088, ptr %3122, align 8
  %3123 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3120, i32 0, i32 2
  store ptr %997, ptr %3123, align 8
  %3124 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3120, i32 0, i32 3
  store ptr %3113, ptr %3124, align 8
  %3125 = call ptr @make_candy_function(ptr @Core_function_is1.578, ptr %3120, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3125, ptr @fun_Core_function_is1.579, align 8
  %3126 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3127 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3126, i32 0, i32 0
  store ptr %3108, ptr %3127, align 8
  %3128 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3126, i32 0, i32 1
  store ptr %3088, ptr %3128, align 8
  %3129 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3126, i32 0, i32 2
  store ptr %997, ptr %3129, align 8
  %3130 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3126, i32 0, i32 3
  store ptr %3113, ptr %3130, align 8
  %3131 = call ptr @make_candy_function(ptr @Core_function_is2.582, ptr %3126, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3131, ptr @fun_Core_function_is2.583, align 8
  %3132 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3133 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3132, i32 0, i32 0
  store ptr %3108, ptr %3133, align 8
  %3134 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3132, i32 0, i32 1
  store ptr %3088, ptr %3134, align 8
  %3135 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3132, i32 0, i32 2
  store ptr %997, ptr %3135, align 8
  %3136 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3132, i32 0, i32 3
  store ptr %3113, ptr %3136, align 8
  %3137 = call ptr @make_candy_function(ptr @Core_function_is3.586, ptr %3132, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3137, ptr @fun_Core_function_is3.587, align 8
  %3138 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3139 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3138, i32 0, i32 0
  store ptr %3108, ptr %3139, align 8
  %3140 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3138, i32 0, i32 1
  store ptr %997, ptr %3140, align 8
  %3141 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3138, i32 0, i32 2
  store ptr %3088, ptr %3141, align 8
  %3142 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3138, i32 0, i32 3
  store ptr %3113, ptr %3142, align 8
  %3143 = call ptr @make_candy_function(ptr @Core_function_is4.590, ptr %3138, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3143, ptr @fun_Core_function_is4.591, align 8
  %3144 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3145 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3144, i32 0, i32 0
  store ptr %3108, ptr %3145, align 8
  %3146 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3144, i32 0, i32 1
  store ptr %3088, ptr %3146, align 8
  %3147 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3144, i32 0, i32 2
  store ptr %997, ptr %3147, align 8
  %3148 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3144, i32 0, i32 3
  store ptr %3113, ptr %3148, align 8
  %3149 = call ptr @make_candy_function(ptr @Core_function_is5.594, ptr %3144, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3149, ptr @fun_Core_function_is5.595, align 8
  %3150 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3151 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3150, i32 0, i32 0
  store ptr %3108, ptr %3151, align 8
  %3152 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3150, i32 0, i32 1
  store ptr %3088, ptr %3152, align 8
  %3153 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3150, i32 0, i32 2
  store ptr %997, ptr %3153, align 8
  %3154 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3150, i32 0, i32 3
  store ptr %3113, ptr %3154, align 8
  %3155 = call ptr @make_candy_function(ptr @Core_function_run.598, ptr %3150, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3155, ptr @fun_Core_function_run.599, align 8
  %3156 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3157 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3156, i32 0, i32 0
  store ptr %3108, ptr %3157, align 8
  %3158 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3156, i32 0, i32 1
  store ptr %3088, ptr %3158, align 8
  %3159 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3156, i32 0, i32 2
  store ptr %997, ptr %3159, align 8
  %3160 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3156, i32 0, i32 3
  store ptr %3113, ptr %3160, align 8
  %3161 = call ptr @make_candy_function(ptr @Core_function_doNotRun.602, ptr %3156, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3161, ptr @fun_Core_function_doNotRun.603, align 8
  %3162 = alloca ptr, i64 11, align 8
  %3163 = alloca ptr, i64 11, align 8
  %3164 = load ptr, ptr @tag_Is0, align 8
  %3165 = load ptr, ptr @fun_Core_function_is0.575, align 8
  %3166 = getelementptr ptr, ptr %3162, i64 0
  store ptr %3164, ptr %3166, align 8
  %3167 = getelementptr ptr, ptr %3163, i64 0
  store ptr %3165, ptr %3167, align 8
  %3168 = load ptr, ptr @tag_DoNotRun, align 8
  %3169 = load ptr, ptr @fun_Core_function_doNotRun.603, align 8
  %3170 = getelementptr ptr, ptr %3162, i64 1
  store ptr %3168, ptr %3170, align 8
  %3171 = getelementptr ptr, ptr %3163, i64 1
  store ptr %3169, ptr %3171, align 8
  %3172 = load ptr, ptr @tag_Is, align 8
  %3173 = load ptr, ptr @fun_Core_function_is.573, align 8
  %3174 = getelementptr ptr, ptr %3162, i64 2
  store ptr %3172, ptr %3174, align 8
  %3175 = getelementptr ptr, ptr %3163, i64 2
  store ptr %3173, ptr %3175, align 8
  %3176 = load ptr, ptr @tag_Is3, align 8
  %3177 = load ptr, ptr @fun_Core_function_is3.587, align 8
  %3178 = getelementptr ptr, ptr %3162, i64 3
  store ptr %3176, ptr %3178, align 8
  %3179 = getelementptr ptr, ptr %3163, i64 3
  store ptr %3177, ptr %3179, align 8
  %3180 = load ptr, ptr @tag_Is2, align 8
  %3181 = load ptr, ptr @fun_Core_function_is2.583, align 8
  %3182 = getelementptr ptr, ptr %3162, i64 4
  store ptr %3180, ptr %3182, align 8
  %3183 = getelementptr ptr, ptr %3163, i64 4
  store ptr %3181, ptr %3183, align 8
  %3184 = load ptr, ptr @tag_Is4, align 8
  %3185 = load ptr, ptr @fun_Core_function_is4.591, align 8
  %3186 = getelementptr ptr, ptr %3162, i64 5
  store ptr %3184, ptr %3186, align 8
  %3187 = getelementptr ptr, ptr %3163, i64 5
  store ptr %3185, ptr %3187, align 8
  %3188 = load ptr, ptr @tag_Is1, align 8
  %3189 = load ptr, ptr @fun_Core_function_is1.579, align 8
  %3190 = getelementptr ptr, ptr %3162, i64 6
  store ptr %3188, ptr %3190, align 8
  %3191 = getelementptr ptr, ptr %3163, i64 6
  store ptr %3189, ptr %3191, align 8
  %3192 = load ptr, ptr @tag_Is5, align 8
  %3193 = load ptr, ptr @fun_Core_function_is5.595, align 8
  %3194 = getelementptr ptr, ptr %3162, i64 7
  store ptr %3192, ptr %3194, align 8
  %3195 = getelementptr ptr, ptr %3163, i64 7
  store ptr %3193, ptr %3195, align 8
  %3196 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3197 = getelementptr ptr, ptr %3162, i64 8
  store ptr %3196, ptr %3197, align 8
  %3198 = getelementptr ptr, ptr %3163, i64 8
  store ptr %3113, ptr %3198, align 8
  %3199 = load ptr, ptr @tag_Run, align 8
  %3200 = load ptr, ptr @fun_Core_function_run.599, align 8
  %3201 = getelementptr ptr, ptr %3162, i64 9
  store ptr %3199, ptr %3201, align 8
  %3202 = getelementptr ptr, ptr %3163, i64 9
  store ptr %3200, ptr %3202, align 8
  %3203 = getelementptr ptr, ptr %3162, i64 10
  store ptr null, ptr %3203, align 8
  %3204 = getelementptr ptr, ptr %3163, i64 10
  store ptr null, ptr %3204, align 8
  %3205 = call ptr @make_candy_struct(ptr %3162, ptr %3163)
  %3206 = load ptr, ptr @tag_Equals, align 8
  %3207 = call ptr @Builtins__structGet(ptr %997, ptr %3206)
  %3208 = load ptr, ptr @tag_TypeOf, align 8
  %3209 = call ptr @Builtins__structGet(ptr %997, ptr %3208)
  %3210 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3211 = getelementptr inbounds { ptr }, ptr %3210, i32 0, i32 0
  store ptr %3205, ptr %3211, align 8
  %3212 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.606, ptr %3210, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3212, ptr @fun_Core_bool_lazyAnd.607, align 8
  %3213 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3214 = call ptr @make_candy_function(ptr @Core_bool_and.634, ptr %3213, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3214, ptr @fun_Core_bool_and.635, align 8
  %3215 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3216 = getelementptr inbounds { ptr }, ptr %3215, i32 0, i32 0
  store ptr %3205, ptr %3216, align 8
  %3217 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.638, ptr %3215, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3217, ptr @fun_Core_bool_lazyOr.639, align 8
  %3218 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3219 = call ptr @make_candy_function(ptr @Core_bool_or.666, ptr %3218, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3219, ptr @fun_Core_bool_or.667, align 8
  %3220 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3221 = getelementptr inbounds { ptr }, ptr %3220, i32 0, i32 0
  store ptr %3086, ptr %3221, align 8
  %3222 = call ptr @make_candy_function(ptr @Core_bool_xor.670, ptr %3220, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3222, ptr @fun_Core_bool_xor.671, align 8
  %3223 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3224 = call ptr @make_candy_function(ptr @Core_bool_implies.672, ptr %3223, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3224, ptr @fun_Core_bool_implies.673, align 8
  %3225 = alloca ptr, i64 9, align 8
  %3226 = alloca ptr, i64 9, align 8
  %3227 = load ptr, ptr @tag_LazyOr, align 8
  %3228 = load ptr, ptr @fun_Core_bool_lazyOr.639, align 8
  %3229 = getelementptr ptr, ptr %3225, i64 0
  store ptr %3227, ptr %3229, align 8
  %3230 = getelementptr ptr, ptr %3226, i64 0
  store ptr %3228, ptr %3230, align 8
  %3231 = load ptr, ptr @tag_Implies, align 8
  %3232 = load ptr, ptr @fun_Core_bool_implies.673, align 8
  %3233 = getelementptr ptr, ptr %3225, i64 1
  store ptr %3231, ptr %3233, align 8
  %3234 = getelementptr ptr, ptr %3226, i64 1
  store ptr %3232, ptr %3234, align 8
  %3235 = load ptr, ptr @tag_Not, align 8
  %3236 = load ptr, ptr @fun_Core_bool_not, align 8
  %3237 = getelementptr ptr, ptr %3225, i64 2
  store ptr %3235, ptr %3237, align 8
  %3238 = getelementptr ptr, ptr %3226, i64 2
  store ptr %3236, ptr %3238, align 8
  %3239 = load ptr, ptr @tag_And, align 8
  %3240 = load ptr, ptr @fun_Core_bool_and.635, align 8
  %3241 = getelementptr ptr, ptr %3225, i64 3
  store ptr %3239, ptr %3241, align 8
  %3242 = getelementptr ptr, ptr %3226, i64 3
  store ptr %3240, ptr %3242, align 8
  %3243 = load ptr, ptr @tag_LazyAnd, align 8
  %3244 = load ptr, ptr @fun_Core_bool_lazyAnd.607, align 8
  %3245 = getelementptr ptr, ptr %3225, i64 4
  store ptr %3243, ptr %3245, align 8
  %3246 = getelementptr ptr, ptr %3226, i64 4
  store ptr %3244, ptr %3246, align 8
  %3247 = load ptr, ptr @tag_Is, align 8
  %3248 = load ptr, ptr @fun_Core_bool_is, align 8
  %3249 = getelementptr ptr, ptr %3225, i64 5
  store ptr %3247, ptr %3249, align 8
  %3250 = getelementptr ptr, ptr %3226, i64 5
  store ptr %3248, ptr %3250, align 8
  %3251 = load ptr, ptr @tag_Or, align 8
  %3252 = load ptr, ptr @fun_Core_bool_or.667, align 8
  %3253 = getelementptr ptr, ptr %3225, i64 6
  store ptr %3251, ptr %3253, align 8
  %3254 = getelementptr ptr, ptr %3226, i64 6
  store ptr %3252, ptr %3254, align 8
  %3255 = load ptr, ptr @tag_Xor, align 8
  %3256 = load ptr, ptr @fun_Core_bool_xor.671, align 8
  %3257 = getelementptr ptr, ptr %3225, i64 7
  store ptr %3255, ptr %3257, align 8
  %3258 = getelementptr ptr, ptr %3226, i64 7
  store ptr %3256, ptr %3258, align 8
  %3259 = getelementptr ptr, ptr %3225, i64 8
  store ptr null, ptr %3259, align 8
  %3260 = getelementptr ptr, ptr %3226, i64 8
  store ptr null, ptr %3260, align 8
  %3261 = call ptr @make_candy_struct(ptr %3225, ptr %3226)
  %3262 = load ptr, ptr @tag_Equals, align 8
  %3263 = call ptr @Builtins__structGet(ptr %997, ptr %3262)
  %3264 = load ptr, ptr @tag_Equals, align 8
  %3265 = call ptr @Builtins__structGet(ptr %997, ptr %3264)
  %3266 = load ptr, ptr @tag_Equals, align 8
  %3267 = call ptr @Builtins__structGet(ptr %997, ptr %3266)
  %3268 = load ptr, ptr @tag_TypeOf, align 8
  %3269 = call ptr @Builtins__structGet(ptr %997, ptr %3268)
  %3270 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3271 = call ptr @Builtins__structGet(ptr %997, ptr %3270)
  %3272 = load ptr, ptr @tag_Equals, align 8
  %3273 = call ptr @Builtins__structGet(ptr %997, ptr %3272)
  %3274 = load ptr, ptr @tag_TypeOf, align 8
  %3275 = call ptr @Builtins__structGet(ptr %997, ptr %3274)
  %3276 = load ptr, ptr @tag_Equals, align 8
  %3277 = call ptr @Builtins__structGet(ptr %997, ptr %3276)
  %3278 = load ptr, ptr @tag_Equals, align 8
  %3279 = call ptr @Builtins__structGet(ptr %997, ptr %3278)
  %3280 = load ptr, ptr @tag_Equals, align 8
  %3281 = call ptr @Builtins__structGet(ptr %997, ptr %3280)
  %3282 = load ptr, ptr @tag_TypeOf, align 8
  %3283 = call ptr @Builtins__structGet(ptr %997, ptr %3282)
  %3284 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3285 = call ptr @Builtins__structGet(ptr %997, ptr %3284)
  %3286 = load ptr, ptr @tag_Equals, align 8
  %3287 = call ptr @Builtins__structGet(ptr %997, ptr %3286)
  %3288 = load ptr, ptr @tag_TypeOf, align 8
  %3289 = call ptr @Builtins__structGet(ptr %997, ptr %3288)
  %3290 = load ptr, ptr @tag_IfElse, align 8
  %3291 = call ptr @Builtins__structGet(ptr %997, ptr %3290)
  %3292 = load ptr, ptr @tag_Equals, align 8
  %3293 = call ptr @Builtins__structGet(ptr %997, ptr %3292)
  %3294 = load ptr, ptr @tag_TypeOf, align 8
  %3295 = call ptr @Builtins__structGet(ptr %997, ptr %3294)
  %3296 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3297 = getelementptr inbounds { ptr, ptr }, ptr %3296, i32 0, i32 0
  store ptr %3295, ptr %3297, align 8
  %3298 = getelementptr inbounds { ptr, ptr }, ptr %3296, i32 0, i32 1
  store ptr %3293, ptr %3298, align 8
  %3299 = call ptr @make_candy_function(ptr @Core_type_is.676, ptr %3296, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3299, ptr @fun_Core_type_is.677, align 8
  %3300 = alloca ptr, i64 3, align 8
  %3301 = alloca ptr, i64 3, align 8
  %3302 = load ptr, ptr @tag_TypeOf, align 8
  %3303 = getelementptr ptr, ptr %3300, i64 0
  store ptr %3302, ptr %3303, align 8
  %3304 = getelementptr ptr, ptr %3301, i64 0
  store ptr %3295, ptr %3304, align 8
  %3305 = load ptr, ptr @tag_Is, align 8
  %3306 = load ptr, ptr @fun_Core_type_is.677, align 8
  %3307 = getelementptr ptr, ptr %3300, i64 1
  store ptr %3305, ptr %3307, align 8
  %3308 = getelementptr ptr, ptr %3301, i64 1
  store ptr %3306, ptr %3308, align 8
  %3309 = getelementptr ptr, ptr %3300, i64 2
  store ptr null, ptr %3309, align 8
  %3310 = getelementptr ptr, ptr %3301, i64 2
  store ptr null, ptr %3310, align 8
  %3311 = call ptr @make_candy_struct(ptr %3300, ptr %3301)
  %3312 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:tag:is:7\00", ptr %3312, align 1
  %3313 = call ptr @make_candy_text(ptr %3312)
  store ptr %3313, ptr @"Core:tag:is:7", align 8
  %3314 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:tag:is:10\00", ptr %3314, align 1
  %3315 = call ptr @make_candy_text(ptr %3314)
  store ptr %3315, ptr @"Core:tag:is:10", align 8
  %3316 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3317 = getelementptr inbounds { ptr }, ptr %3316, i32 0, i32 0
  store ptr %3311, ptr %3317, align 8
  %3318 = call ptr @make_candy_function(ptr @Core_tag_is, ptr %3316, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3318, ptr @fun_Core_tag_is, align 8
  %3319 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:48\00", ptr %3319, align 1
  %3320 = call ptr @make_candy_text(ptr %3319)
  store ptr %3320, ptr @"Core:tag:48", align 8
  %3321 = load ptr, ptr @tag_TagHasValue, align 8
  %3322 = call ptr @Builtins__structGet(ptr %997, ptr %3321)
  %3323 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:57\00", ptr %3323, align 1
  %3324 = call ptr @make_candy_text(ptr %3323)
  store ptr %3324, ptr @"Core:tag:57", align 8
  %3325 = load ptr, ptr @tag_TagWithoutValue, align 8
  %3326 = call ptr @Builtins__structGet(ptr %997, ptr %3325)
  %3327 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:66\00", ptr %3327, align 1
  %3328 = call ptr @make_candy_text(ptr %3327)
  store ptr %3328, ptr @"Core:tag:66", align 8
  %3329 = load ptr, ptr @tag_TagGetValue, align 8
  %3330 = call ptr @Builtins__structGet(ptr %997, ptr %3329)
  %3331 = alloca i8, i64 27, align 1
  store [27 x i8] c"`is tag` was not satisfied\00", ptr %3331, align 1
  %3332 = call ptr @make_candy_text(ptr %3331)
  store ptr %3332, ptr @"text_`is tag` was not satisfied", align 8
  %3333 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:tag:withSymbol:4\00", ptr %3333, align 1
  %3334 = call ptr @make_candy_text(ptr %3333)
  store ptr %3334, ptr @"Core:tag:withSymbol:4", align 8
  %3335 = alloca i8, i64 33, align 1
  store [33 x i8] c"`is symbolTag` was not satisfied\00", ptr %3335, align 1
  %3336 = call ptr @make_candy_text(ptr %3335)
  store ptr %3336, ptr @"text_`is symbolTag` was not satisfied", align 8
  %3337 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:tag:withSymbol:9\00", ptr %3337, align 1
  %3338 = call ptr @make_candy_text(ptr %3337)
  store ptr %3338, ptr @"Core:tag:withSymbol:9", align 8
  %3339 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:12\00", ptr %3339, align 1
  %3340 = call ptr @make_candy_text(ptr %3339)
  store ptr %3340, ptr @"Core:tag:withSymbol:12", align 8
  %3341 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:20\00", ptr %3341, align 1
  %3342 = call ptr @make_candy_text(ptr %3341)
  store ptr %3342, ptr @"Core:tag:withSymbol:20", align 8
  %3343 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:21\00", ptr %3343, align 1
  %3344 = call ptr @make_candy_text(ptr %3343)
  store ptr %3344, ptr @"Core:tag:withSymbol:21", align 8
  %3345 = alloca i8, i64 52, align 1
  store [52 x i8] c"`symbolTag | hasValue | bool.not` was not satisfied\00", ptr %3345, align 1
  %3346 = call ptr @make_candy_text(ptr %3345)
  store ptr %3346, ptr @"text_`symbolTag | hasValue | bool.not` was not satisfied", align 8
  %3347 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:23\00", ptr %3347, align 1
  %3348 = call ptr @make_candy_text(ptr %3347)
  store ptr %3348, ptr @"Core:tag:withSymbol:23", align 8
  %3349 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:27\00", ptr %3349, align 1
  %3350 = call ptr @make_candy_text(ptr %3349)
  store ptr %3350, ptr @"Core:tag:withSymbol:27", align 8
  %3351 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:tag:withSymbol:28:3\00", ptr %3351, align 1
  %3352 = call ptr @make_candy_text(ptr %3351)
  store ptr %3352, ptr @"Core:tag:withSymbol:28:3", align 8
  %3353 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:tag:withSymbol:28:4\00", ptr %3353, align 1
  %3354 = call ptr @make_candy_text(ptr %3353)
  store ptr %3354, ptr @"Core:tag:withSymbol:28:4", align 8
  %3355 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:tag:withSymbol:29:2\00", ptr %3355, align 1
  %3356 = call ptr @make_candy_text(ptr %3355)
  store ptr %3356, ptr @"Core:tag:withSymbol:29:2", align 8
  %3357 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:30\00", ptr %3357, align 1
  %3358 = call ptr @make_candy_text(ptr %3357)
  store ptr %3358, ptr @"Core:tag:withSymbol:30", align 8
  %3359 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3360 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3359, i32 0, i32 0
  store ptr %3322, ptr %3360, align 8
  %3361 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3359, i32 0, i32 1
  store ptr %3311, ptr %3361, align 8
  %3362 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3359, i32 0, i32 2
  store ptr %3291, ptr %3362, align 8
  %3363 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3359, i32 0, i32 3
  store ptr %3261, ptr %3363, align 8
  %3364 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3359, i32 0, i32 4
  store ptr %3330, ptr %3364, align 8
  %3365 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3359, i32 0, i32 5
  store ptr %3326, ptr %3365, align 8
  %3366 = call ptr @make_candy_function(ptr @Core_tag_withSymbol, ptr %3359, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3366, ptr @fun_Core_tag_withSymbol, align 8
  %3367 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:tag:withValue:4\00", ptr %3367, align 1
  %3368 = call ptr @make_candy_text(ptr %3367)
  store ptr %3368, ptr @"Core:tag:withValue:4", align 8
  %3369 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:tag:withValue:7\00", ptr %3369, align 1
  %3370 = call ptr @make_candy_text(ptr %3369)
  store ptr %3370, ptr @"Core:tag:withValue:7", align 8
  %3371 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:tag:withValue:9\00", ptr %3371, align 1
  %3372 = call ptr @make_candy_text(ptr %3371)
  store ptr %3372, ptr @"Core:tag:withValue:9", align 8
  %3373 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3374 = getelementptr inbounds { ptr, ptr }, ptr %3373, i32 0, i32 0
  store ptr %3311, ptr %3374, align 8
  %3375 = getelementptr inbounds { ptr, ptr }, ptr %3373, i32 0, i32 1
  store ptr %3326, ptr %3375, align 8
  %3376 = call ptr @make_candy_function(ptr @Core_tag_withValue, ptr %3373, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3376, ptr @fun_Core_tag_withValue, align 8
  %3377 = alloca i8, i64 9, align 1
  store [9 x i8] c"HasValue\00", ptr %3377, align 1
  %3378 = call ptr @make_candy_tag(ptr %3377, ptr null)
  store ptr %3378, ptr @tag_HasValue, align 8
  %3379 = alloca i8, i64 10, align 1
  store [10 x i8] c"WithValue\00", ptr %3379, align 1
  %3380 = call ptr @make_candy_tag(ptr %3379, ptr null)
  store ptr %3380, ptr @tag_WithValue, align 8
  %3381 = alloca i8, i64 9, align 1
  store [9 x i8] c"GetValue\00", ptr %3381, align 1
  %3382 = call ptr @make_candy_tag(ptr %3381, ptr null)
  store ptr %3382, ptr @tag_GetValue, align 8
  %3383 = alloca i8, i64 13, align 1
  store [13 x i8] c"WithoutValue\00", ptr %3383, align 1
  %3384 = call ptr @make_candy_tag(ptr %3383, ptr null)
  store ptr %3384, ptr @tag_WithoutValue, align 8
  %3385 = alloca i8, i64 11, align 1
  store [11 x i8] c"WithSymbol\00", ptr %3385, align 1
  %3386 = call ptr @make_candy_tag(ptr %3385, ptr null)
  store ptr %3386, ptr @tag_WithSymbol, align 8
  %3387 = alloca ptr, i64 7, align 8
  %3388 = alloca ptr, i64 7, align 8
  %3389 = load ptr, ptr @tag_Is, align 8
  %3390 = load ptr, ptr @fun_Core_tag_is, align 8
  %3391 = getelementptr ptr, ptr %3387, i64 0
  store ptr %3389, ptr %3391, align 8
  %3392 = getelementptr ptr, ptr %3388, i64 0
  store ptr %3390, ptr %3392, align 8
  %3393 = load ptr, ptr @tag_WithoutValue, align 8
  %3394 = getelementptr ptr, ptr %3387, i64 1
  store ptr %3393, ptr %3394, align 8
  %3395 = getelementptr ptr, ptr %3388, i64 1
  store ptr %3326, ptr %3395, align 8
  %3396 = load ptr, ptr @tag_WithValue, align 8
  %3397 = load ptr, ptr @fun_Core_tag_withValue, align 8
  %3398 = getelementptr ptr, ptr %3387, i64 2
  store ptr %3396, ptr %3398, align 8
  %3399 = getelementptr ptr, ptr %3388, i64 2
  store ptr %3397, ptr %3399, align 8
  %3400 = load ptr, ptr @tag_GetValue, align 8
  %3401 = getelementptr ptr, ptr %3387, i64 3
  store ptr %3400, ptr %3401, align 8
  %3402 = getelementptr ptr, ptr %3388, i64 3
  store ptr %3330, ptr %3402, align 8
  %3403 = load ptr, ptr @tag_HasValue, align 8
  %3404 = getelementptr ptr, ptr %3387, i64 4
  store ptr %3403, ptr %3404, align 8
  %3405 = getelementptr ptr, ptr %3388, i64 4
  store ptr %3322, ptr %3405, align 8
  %3406 = load ptr, ptr @tag_WithSymbol, align 8
  %3407 = load ptr, ptr @fun_Core_tag_withSymbol, align 8
  %3408 = getelementptr ptr, ptr %3387, i64 5
  store ptr %3406, ptr %3408, align 8
  %3409 = getelementptr ptr, ptr %3388, i64 5
  store ptr %3407, ptr %3409, align 8
  %3410 = getelementptr ptr, ptr %3387, i64 6
  store ptr null, ptr %3410, align 8
  %3411 = getelementptr ptr, ptr %3388, i64 6
  store ptr null, ptr %3411, align 8
  %3412 = call ptr @make_candy_struct(ptr %3387, ptr %3388)
  %3413 = load ptr, ptr @tag_Equals, align 8
  %3414 = call ptr @Builtins__structGet(ptr %997, ptr %3413)
  %3415 = load ptr, ptr @tag_Equals, align 8
  %3416 = call ptr @Builtins__structGet(ptr %997, ptr %3415)
  %3417 = load ptr, ptr @tag_Equals, align 8
  %3418 = call ptr @Builtins__structGet(ptr %997, ptr %3417)
  %3419 = load ptr, ptr @tag_TypeOf, align 8
  %3420 = call ptr @Builtins__structGet(ptr %997, ptr %3419)
  %3421 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3422 = call ptr @Builtins__structGet(ptr %997, ptr %3421)
  %3423 = load ptr, ptr @tag_Equals, align 8
  %3424 = call ptr @Builtins__structGet(ptr %997, ptr %3423)
  %3425 = load ptr, ptr @tag_TypeOf, align 8
  %3426 = call ptr @Builtins__structGet(ptr %997, ptr %3425)
  %3427 = load ptr, ptr @tag_Equals, align 8
  %3428 = call ptr @Builtins__structGet(ptr %997, ptr %3427)
  %3429 = load ptr, ptr @tag_Equals, align 8
  %3430 = call ptr @Builtins__structGet(ptr %997, ptr %3429)
  %3431 = load ptr, ptr @tag_Equals, align 8
  %3432 = call ptr @Builtins__structGet(ptr %997, ptr %3431)
  %3433 = load ptr, ptr @tag_TypeOf, align 8
  %3434 = call ptr @Builtins__structGet(ptr %997, ptr %3433)
  %3435 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3436 = call ptr @Builtins__structGet(ptr %997, ptr %3435)
  %3437 = load ptr, ptr @tag_Equals, align 8
  %3438 = call ptr @Builtins__structGet(ptr %997, ptr %3437)
  %3439 = load ptr, ptr @tag_TypeOf, align 8
  %3440 = call ptr @Builtins__structGet(ptr %997, ptr %3439)
  %3441 = load ptr, ptr @tag_Equals, align 8
  %3442 = call ptr @Builtins__structGet(ptr %997, ptr %3441)
  %3443 = load ptr, ptr @tag_Equals, align 8
  %3444 = call ptr @Builtins__structGet(ptr %997, ptr %3443)
  %3445 = load ptr, ptr @tag_Equals, align 8
  %3446 = call ptr @Builtins__structGet(ptr %997, ptr %3445)
  %3447 = load ptr, ptr @tag_TypeOf, align 8
  %3448 = call ptr @Builtins__structGet(ptr %997, ptr %3447)
  %3449 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3450 = call ptr @Builtins__structGet(ptr %997, ptr %3449)
  %3451 = load ptr, ptr @tag_Equals, align 8
  %3452 = call ptr @Builtins__structGet(ptr %997, ptr %3451)
  %3453 = load ptr, ptr @tag_TypeOf, align 8
  %3454 = call ptr @Builtins__structGet(ptr %997, ptr %3453)
  %3455 = load ptr, ptr @tag_IfElse, align 8
  %3456 = call ptr @Builtins__structGet(ptr %997, ptr %3455)
  %3457 = load ptr, ptr @tag_Equals, align 8
  %3458 = call ptr @Builtins__structGet(ptr %997, ptr %3457)
  %3459 = load ptr, ptr @tag_Equals, align 8
  %3460 = call ptr @Builtins__structGet(ptr %997, ptr %3459)
  %3461 = load ptr, ptr @tag_Equals, align 8
  %3462 = call ptr @Builtins__structGet(ptr %997, ptr %3461)
  %3463 = load ptr, ptr @tag_Equals, align 8
  %3464 = call ptr @Builtins__structGet(ptr %997, ptr %3463)
  %3465 = load ptr, ptr @tag_TypeOf, align 8
  %3466 = call ptr @Builtins__structGet(ptr %997, ptr %3465)
  %3467 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3468 = getelementptr inbounds { ptr, ptr }, ptr %3467, i32 0, i32 0
  store ptr %3466, ptr %3468, align 8
  %3469 = getelementptr inbounds { ptr, ptr }, ptr %3467, i32 0, i32 1
  store ptr %3464, ptr %3469, align 8
  %3470 = call ptr @make_candy_function(ptr @Core_type_is.678, ptr %3467, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3470, ptr @fun_Core_type_is.679, align 8
  %3471 = alloca ptr, i64 3, align 8
  %3472 = alloca ptr, i64 3, align 8
  %3473 = load ptr, ptr @tag_TypeOf, align 8
  %3474 = getelementptr ptr, ptr %3471, i64 0
  store ptr %3473, ptr %3474, align 8
  %3475 = getelementptr ptr, ptr %3472, i64 0
  store ptr %3466, ptr %3475, align 8
  %3476 = load ptr, ptr @tag_Is, align 8
  %3477 = load ptr, ptr @fun_Core_type_is.679, align 8
  %3478 = getelementptr ptr, ptr %3471, i64 1
  store ptr %3476, ptr %3478, align 8
  %3479 = getelementptr ptr, ptr %3472, i64 1
  store ptr %3477, ptr %3479, align 8
  %3480 = getelementptr ptr, ptr %3471, i64 2
  store ptr null, ptr %3480, align 8
  %3481 = getelementptr ptr, ptr %3472, i64 2
  store ptr null, ptr %3481, align 8
  %3482 = call ptr @make_candy_struct(ptr %3471, ptr %3472)
  %3483 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3484 = getelementptr inbounds { ptr }, ptr %3483, i32 0, i32 0
  store ptr %3482, ptr %3484, align 8
  %3485 = call ptr @make_candy_function(ptr @Core_function_is.680, ptr %3483, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3485, ptr @fun_Core_function_is.681, align 8
  %3486 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3487 = call ptr @Builtins__structGet(ptr %997, ptr %3486)
  %3488 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3489 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3488, i32 0, i32 0
  store ptr %3482, ptr %3489, align 8
  %3490 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3488, i32 0, i32 1
  store ptr %3462, ptr %3490, align 8
  %3491 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3488, i32 0, i32 2
  store ptr %997, ptr %3491, align 8
  %3492 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3488, i32 0, i32 3
  store ptr %3487, ptr %3492, align 8
  %3493 = call ptr @make_candy_function(ptr @Core_function_is0.682, ptr %3488, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3493, ptr @fun_Core_function_is0.683, align 8
  %3494 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3495 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3494, i32 0, i32 0
  store ptr %3482, ptr %3495, align 8
  %3496 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3494, i32 0, i32 1
  store ptr %3462, ptr %3496, align 8
  %3497 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3494, i32 0, i32 2
  store ptr %997, ptr %3497, align 8
  %3498 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3494, i32 0, i32 3
  store ptr %3487, ptr %3498, align 8
  %3499 = call ptr @make_candy_function(ptr @Core_function_is1.686, ptr %3494, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3499, ptr @fun_Core_function_is1.687, align 8
  %3500 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3501 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3500, i32 0, i32 0
  store ptr %3482, ptr %3501, align 8
  %3502 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3500, i32 0, i32 1
  store ptr %3462, ptr %3502, align 8
  %3503 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3500, i32 0, i32 2
  store ptr %997, ptr %3503, align 8
  %3504 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3500, i32 0, i32 3
  store ptr %3487, ptr %3504, align 8
  %3505 = call ptr @make_candy_function(ptr @Core_function_is2.690, ptr %3500, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3505, ptr @fun_Core_function_is2.691, align 8
  %3506 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3507 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3506, i32 0, i32 0
  store ptr %3482, ptr %3507, align 8
  %3508 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3506, i32 0, i32 1
  store ptr %3462, ptr %3508, align 8
  %3509 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3506, i32 0, i32 2
  store ptr %997, ptr %3509, align 8
  %3510 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3506, i32 0, i32 3
  store ptr %3487, ptr %3510, align 8
  %3511 = call ptr @make_candy_function(ptr @Core_function_is3.694, ptr %3506, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3511, ptr @fun_Core_function_is3.695, align 8
  %3512 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3513 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3512, i32 0, i32 0
  store ptr %3482, ptr %3513, align 8
  %3514 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3512, i32 0, i32 1
  store ptr %997, ptr %3514, align 8
  %3515 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3512, i32 0, i32 2
  store ptr %3462, ptr %3515, align 8
  %3516 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3512, i32 0, i32 3
  store ptr %3487, ptr %3516, align 8
  %3517 = call ptr @make_candy_function(ptr @Core_function_is4.698, ptr %3512, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3517, ptr @fun_Core_function_is4.699, align 8
  %3518 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3519 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3518, i32 0, i32 0
  store ptr %3482, ptr %3519, align 8
  %3520 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3518, i32 0, i32 1
  store ptr %3462, ptr %3520, align 8
  %3521 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3518, i32 0, i32 2
  store ptr %997, ptr %3521, align 8
  %3522 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3518, i32 0, i32 3
  store ptr %3487, ptr %3522, align 8
  %3523 = call ptr @make_candy_function(ptr @Core_function_is5.702, ptr %3518, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3523, ptr @fun_Core_function_is5.703, align 8
  %3524 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3525 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3524, i32 0, i32 0
  store ptr %997, ptr %3525, align 8
  %3526 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3524, i32 0, i32 1
  store ptr %3487, ptr %3526, align 8
  %3527 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3524, i32 0, i32 2
  store ptr %3482, ptr %3527, align 8
  %3528 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3524, i32 0, i32 3
  store ptr %3462, ptr %3528, align 8
  %3529 = call ptr @make_candy_function(ptr @Core_function_run.706, ptr %3524, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3529, ptr @fun_Core_function_run.707, align 8
  %3530 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3531 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3530, i32 0, i32 0
  store ptr %3482, ptr %3531, align 8
  %3532 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3530, i32 0, i32 1
  store ptr %3462, ptr %3532, align 8
  %3533 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3530, i32 0, i32 2
  store ptr %997, ptr %3533, align 8
  %3534 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3530, i32 0, i32 3
  store ptr %3487, ptr %3534, align 8
  %3535 = call ptr @make_candy_function(ptr @Core_function_doNotRun.710, ptr %3530, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3535, ptr @fun_Core_function_doNotRun.711, align 8
  %3536 = alloca ptr, i64 11, align 8
  %3537 = alloca ptr, i64 11, align 8
  %3538 = load ptr, ptr @tag_Is0, align 8
  %3539 = load ptr, ptr @fun_Core_function_is0.683, align 8
  %3540 = getelementptr ptr, ptr %3536, i64 0
  store ptr %3538, ptr %3540, align 8
  %3541 = getelementptr ptr, ptr %3537, i64 0
  store ptr %3539, ptr %3541, align 8
  %3542 = load ptr, ptr @tag_DoNotRun, align 8
  %3543 = load ptr, ptr @fun_Core_function_doNotRun.711, align 8
  %3544 = getelementptr ptr, ptr %3536, i64 1
  store ptr %3542, ptr %3544, align 8
  %3545 = getelementptr ptr, ptr %3537, i64 1
  store ptr %3543, ptr %3545, align 8
  %3546 = load ptr, ptr @tag_Is, align 8
  %3547 = load ptr, ptr @fun_Core_function_is.681, align 8
  %3548 = getelementptr ptr, ptr %3536, i64 2
  store ptr %3546, ptr %3548, align 8
  %3549 = getelementptr ptr, ptr %3537, i64 2
  store ptr %3547, ptr %3549, align 8
  %3550 = load ptr, ptr @tag_Is3, align 8
  %3551 = load ptr, ptr @fun_Core_function_is3.695, align 8
  %3552 = getelementptr ptr, ptr %3536, i64 3
  store ptr %3550, ptr %3552, align 8
  %3553 = getelementptr ptr, ptr %3537, i64 3
  store ptr %3551, ptr %3553, align 8
  %3554 = load ptr, ptr @tag_Is2, align 8
  %3555 = load ptr, ptr @fun_Core_function_is2.691, align 8
  %3556 = getelementptr ptr, ptr %3536, i64 4
  store ptr %3554, ptr %3556, align 8
  %3557 = getelementptr ptr, ptr %3537, i64 4
  store ptr %3555, ptr %3557, align 8
  %3558 = load ptr, ptr @tag_Is4, align 8
  %3559 = load ptr, ptr @fun_Core_function_is4.699, align 8
  %3560 = getelementptr ptr, ptr %3536, i64 5
  store ptr %3558, ptr %3560, align 8
  %3561 = getelementptr ptr, ptr %3537, i64 5
  store ptr %3559, ptr %3561, align 8
  %3562 = load ptr, ptr @tag_Is1, align 8
  %3563 = load ptr, ptr @fun_Core_function_is1.687, align 8
  %3564 = getelementptr ptr, ptr %3536, i64 6
  store ptr %3562, ptr %3564, align 8
  %3565 = getelementptr ptr, ptr %3537, i64 6
  store ptr %3563, ptr %3565, align 8
  %3566 = load ptr, ptr @tag_Is5, align 8
  %3567 = load ptr, ptr @fun_Core_function_is5.703, align 8
  %3568 = getelementptr ptr, ptr %3536, i64 7
  store ptr %3566, ptr %3568, align 8
  %3569 = getelementptr ptr, ptr %3537, i64 7
  store ptr %3567, ptr %3569, align 8
  %3570 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3571 = getelementptr ptr, ptr %3536, i64 8
  store ptr %3570, ptr %3571, align 8
  %3572 = getelementptr ptr, ptr %3537, i64 8
  store ptr %3487, ptr %3572, align 8
  %3573 = load ptr, ptr @tag_Run, align 8
  %3574 = load ptr, ptr @fun_Core_function_run.707, align 8
  %3575 = getelementptr ptr, ptr %3536, i64 9
  store ptr %3573, ptr %3575, align 8
  %3576 = getelementptr ptr, ptr %3537, i64 9
  store ptr %3574, ptr %3576, align 8
  %3577 = getelementptr ptr, ptr %3536, i64 10
  store ptr null, ptr %3577, align 8
  %3578 = getelementptr ptr, ptr %3537, i64 10
  store ptr null, ptr %3578, align 8
  %3579 = call ptr @make_candy_struct(ptr %3536, ptr %3537)
  %3580 = load ptr, ptr @tag_Equals, align 8
  %3581 = call ptr @Builtins__structGet(ptr %997, ptr %3580)
  %3582 = load ptr, ptr @tag_TypeOf, align 8
  %3583 = call ptr @Builtins__structGet(ptr %997, ptr %3582)
  %3584 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3585 = getelementptr inbounds { ptr }, ptr %3584, i32 0, i32 0
  store ptr %3579, ptr %3585, align 8
  %3586 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.714, ptr %3584, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3586, ptr @fun_Core_bool_lazyAnd.715, align 8
  %3587 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3588 = call ptr @make_candy_function(ptr @Core_bool_and.742, ptr %3587, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3588, ptr @fun_Core_bool_and.743, align 8
  %3589 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3590 = getelementptr inbounds { ptr }, ptr %3589, i32 0, i32 0
  store ptr %3579, ptr %3590, align 8
  %3591 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.746, ptr %3589, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3591, ptr @fun_Core_bool_lazyOr.747, align 8
  %3592 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3593 = call ptr @make_candy_function(ptr @Core_bool_or.774, ptr %3592, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3593, ptr @fun_Core_bool_or.775, align 8
  %3594 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3595 = getelementptr inbounds { ptr }, ptr %3594, i32 0, i32 0
  store ptr %3460, ptr %3595, align 8
  %3596 = call ptr @make_candy_function(ptr @Core_bool_xor.778, ptr %3594, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3596, ptr @fun_Core_bool_xor.779, align 8
  %3597 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3598 = call ptr @make_candy_function(ptr @Core_bool_implies.780, ptr %3597, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3598, ptr @fun_Core_bool_implies.781, align 8
  %3599 = alloca ptr, i64 9, align 8
  %3600 = alloca ptr, i64 9, align 8
  %3601 = load ptr, ptr @tag_LazyOr, align 8
  %3602 = load ptr, ptr @fun_Core_bool_lazyOr.747, align 8
  %3603 = getelementptr ptr, ptr %3599, i64 0
  store ptr %3601, ptr %3603, align 8
  %3604 = getelementptr ptr, ptr %3600, i64 0
  store ptr %3602, ptr %3604, align 8
  %3605 = load ptr, ptr @tag_Implies, align 8
  %3606 = load ptr, ptr @fun_Core_bool_implies.781, align 8
  %3607 = getelementptr ptr, ptr %3599, i64 1
  store ptr %3605, ptr %3607, align 8
  %3608 = getelementptr ptr, ptr %3600, i64 1
  store ptr %3606, ptr %3608, align 8
  %3609 = load ptr, ptr @tag_Not, align 8
  %3610 = load ptr, ptr @fun_Core_bool_not, align 8
  %3611 = getelementptr ptr, ptr %3599, i64 2
  store ptr %3609, ptr %3611, align 8
  %3612 = getelementptr ptr, ptr %3600, i64 2
  store ptr %3610, ptr %3612, align 8
  %3613 = load ptr, ptr @tag_And, align 8
  %3614 = load ptr, ptr @fun_Core_bool_and.743, align 8
  %3615 = getelementptr ptr, ptr %3599, i64 3
  store ptr %3613, ptr %3615, align 8
  %3616 = getelementptr ptr, ptr %3600, i64 3
  store ptr %3614, ptr %3616, align 8
  %3617 = load ptr, ptr @tag_LazyAnd, align 8
  %3618 = load ptr, ptr @fun_Core_bool_lazyAnd.715, align 8
  %3619 = getelementptr ptr, ptr %3599, i64 4
  store ptr %3617, ptr %3619, align 8
  %3620 = getelementptr ptr, ptr %3600, i64 4
  store ptr %3618, ptr %3620, align 8
  %3621 = load ptr, ptr @tag_Is, align 8
  %3622 = load ptr, ptr @fun_Core_bool_is, align 8
  %3623 = getelementptr ptr, ptr %3599, i64 5
  store ptr %3621, ptr %3623, align 8
  %3624 = getelementptr ptr, ptr %3600, i64 5
  store ptr %3622, ptr %3624, align 8
  %3625 = load ptr, ptr @tag_Or, align 8
  %3626 = load ptr, ptr @fun_Core_bool_or.775, align 8
  %3627 = getelementptr ptr, ptr %3599, i64 6
  store ptr %3625, ptr %3627, align 8
  %3628 = getelementptr ptr, ptr %3600, i64 6
  store ptr %3626, ptr %3628, align 8
  %3629 = load ptr, ptr @tag_Xor, align 8
  %3630 = load ptr, ptr @fun_Core_bool_xor.779, align 8
  %3631 = getelementptr ptr, ptr %3599, i64 7
  store ptr %3629, ptr %3631, align 8
  %3632 = getelementptr ptr, ptr %3600, i64 7
  store ptr %3630, ptr %3632, align 8
  %3633 = getelementptr ptr, ptr %3599, i64 8
  store ptr null, ptr %3633, align 8
  %3634 = getelementptr ptr, ptr %3600, i64 8
  store ptr null, ptr %3634, align 8
  %3635 = call ptr @make_candy_struct(ptr %3599, ptr %3600)
  %3636 = load ptr, ptr @tag_Equals, align 8
  %3637 = call ptr @Builtins__structGet(ptr %997, ptr %3636)
  %3638 = load ptr, ptr @tag_Equals, align 8
  %3639 = call ptr @Builtins__structGet(ptr %997, ptr %3638)
  %3640 = load ptr, ptr @tag_Equals, align 8
  %3641 = call ptr @Builtins__structGet(ptr %997, ptr %3640)
  %3642 = load ptr, ptr @tag_TypeOf, align 8
  %3643 = call ptr @Builtins__structGet(ptr %997, ptr %3642)
  %3644 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3645 = getelementptr inbounds { ptr, ptr }, ptr %3644, i32 0, i32 0
  store ptr %3643, ptr %3645, align 8
  %3646 = getelementptr inbounds { ptr, ptr }, ptr %3644, i32 0, i32 1
  store ptr %3641, ptr %3646, align 8
  %3647 = call ptr @make_candy_function(ptr @Core_type_is.784, ptr %3644, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3647, ptr @fun_Core_type_is.785, align 8
  %3648 = alloca ptr, i64 3, align 8
  %3649 = alloca ptr, i64 3, align 8
  %3650 = load ptr, ptr @tag_TypeOf, align 8
  %3651 = getelementptr ptr, ptr %3648, i64 0
  store ptr %3650, ptr %3651, align 8
  %3652 = getelementptr ptr, ptr %3649, i64 0
  store ptr %3643, ptr %3652, align 8
  %3653 = load ptr, ptr @tag_Is, align 8
  %3654 = load ptr, ptr @fun_Core_type_is.785, align 8
  %3655 = getelementptr ptr, ptr %3648, i64 1
  store ptr %3653, ptr %3655, align 8
  %3656 = getelementptr ptr, ptr %3649, i64 1
  store ptr %3654, ptr %3656, align 8
  %3657 = getelementptr ptr, ptr %3648, i64 2
  store ptr null, ptr %3657, align 8
  %3658 = getelementptr ptr, ptr %3649, i64 2
  store ptr null, ptr %3658, align 8
  %3659 = call ptr @make_candy_struct(ptr %3648, ptr %3649)
  %3660 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3661 = getelementptr inbounds { ptr }, ptr %3660, i32 0, i32 0
  store ptr %3659, ptr %3661, align 8
  %3662 = call ptr @make_candy_function(ptr @Core_function_is.786, ptr %3660, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3662, ptr @fun_Core_function_is.787, align 8
  %3663 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3664 = call ptr @Builtins__structGet(ptr %997, ptr %3663)
  %3665 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3666 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3665, i32 0, i32 0
  store ptr %997, ptr %3666, align 8
  %3667 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3665, i32 0, i32 1
  store ptr %3664, ptr %3667, align 8
  %3668 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3665, i32 0, i32 2
  store ptr %3659, ptr %3668, align 8
  %3669 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3665, i32 0, i32 3
  store ptr %3639, ptr %3669, align 8
  %3670 = call ptr @make_candy_function(ptr @Core_function_is0.788, ptr %3665, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3670, ptr @fun_Core_function_is0.789, align 8
  %3671 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3672 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3671, i32 0, i32 0
  store ptr %997, ptr %3672, align 8
  %3673 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3671, i32 0, i32 1
  store ptr %3664, ptr %3673, align 8
  %3674 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3671, i32 0, i32 2
  store ptr %3659, ptr %3674, align 8
  %3675 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3671, i32 0, i32 3
  store ptr %3639, ptr %3675, align 8
  %3676 = call ptr @make_candy_function(ptr @Core_function_is1.792, ptr %3671, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3676, ptr @fun_Core_function_is1.793, align 8
  %3677 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3678 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3677, i32 0, i32 0
  store ptr %997, ptr %3678, align 8
  %3679 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3677, i32 0, i32 1
  store ptr %3664, ptr %3679, align 8
  %3680 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3677, i32 0, i32 2
  store ptr %3659, ptr %3680, align 8
  %3681 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3677, i32 0, i32 3
  store ptr %3639, ptr %3681, align 8
  %3682 = call ptr @make_candy_function(ptr @Core_function_is2.796, ptr %3677, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3682, ptr @fun_Core_function_is2.797, align 8
  %3683 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3684 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3683, i32 0, i32 0
  store ptr %997, ptr %3684, align 8
  %3685 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3683, i32 0, i32 1
  store ptr %3664, ptr %3685, align 8
  %3686 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3683, i32 0, i32 2
  store ptr %3659, ptr %3686, align 8
  %3687 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3683, i32 0, i32 3
  store ptr %3639, ptr %3687, align 8
  %3688 = call ptr @make_candy_function(ptr @Core_function_is3.800, ptr %3683, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3688, ptr @fun_Core_function_is3.801, align 8
  %3689 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3690 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3689, i32 0, i32 0
  store ptr %997, ptr %3690, align 8
  %3691 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3689, i32 0, i32 1
  store ptr %3664, ptr %3691, align 8
  %3692 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3689, i32 0, i32 2
  store ptr %3659, ptr %3692, align 8
  %3693 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3689, i32 0, i32 3
  store ptr %3639, ptr %3693, align 8
  %3694 = call ptr @make_candy_function(ptr @Core_function_is4.804, ptr %3689, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3694, ptr @fun_Core_function_is4.805, align 8
  %3695 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3696 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3695, i32 0, i32 0
  store ptr %997, ptr %3696, align 8
  %3697 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3695, i32 0, i32 1
  store ptr %3664, ptr %3697, align 8
  %3698 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3695, i32 0, i32 2
  store ptr %3659, ptr %3698, align 8
  %3699 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3695, i32 0, i32 3
  store ptr %3639, ptr %3699, align 8
  %3700 = call ptr @make_candy_function(ptr @Core_function_is5.808, ptr %3695, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3700, ptr @fun_Core_function_is5.809, align 8
  %3701 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3702 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3701, i32 0, i32 0
  store ptr %997, ptr %3702, align 8
  %3703 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3701, i32 0, i32 1
  store ptr %3664, ptr %3703, align 8
  %3704 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3701, i32 0, i32 2
  store ptr %3659, ptr %3704, align 8
  %3705 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3701, i32 0, i32 3
  store ptr %3639, ptr %3705, align 8
  %3706 = call ptr @make_candy_function(ptr @Core_function_run.812, ptr %3701, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3706, ptr @fun_Core_function_run.813, align 8
  %3707 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3708 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3707, i32 0, i32 0
  store ptr %997, ptr %3708, align 8
  %3709 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3707, i32 0, i32 1
  store ptr %3664, ptr %3709, align 8
  %3710 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3707, i32 0, i32 2
  store ptr %3659, ptr %3710, align 8
  %3711 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3707, i32 0, i32 3
  store ptr %3639, ptr %3711, align 8
  %3712 = call ptr @make_candy_function(ptr @Core_function_doNotRun.816, ptr %3707, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3712, ptr @fun_Core_function_doNotRun.817, align 8
  %3713 = alloca ptr, i64 11, align 8
  %3714 = alloca ptr, i64 11, align 8
  %3715 = load ptr, ptr @tag_Is0, align 8
  %3716 = load ptr, ptr @fun_Core_function_is0.789, align 8
  %3717 = getelementptr ptr, ptr %3713, i64 0
  store ptr %3715, ptr %3717, align 8
  %3718 = getelementptr ptr, ptr %3714, i64 0
  store ptr %3716, ptr %3718, align 8
  %3719 = load ptr, ptr @tag_DoNotRun, align 8
  %3720 = load ptr, ptr @fun_Core_function_doNotRun.817, align 8
  %3721 = getelementptr ptr, ptr %3713, i64 1
  store ptr %3719, ptr %3721, align 8
  %3722 = getelementptr ptr, ptr %3714, i64 1
  store ptr %3720, ptr %3722, align 8
  %3723 = load ptr, ptr @tag_Is, align 8
  %3724 = load ptr, ptr @fun_Core_function_is.787, align 8
  %3725 = getelementptr ptr, ptr %3713, i64 2
  store ptr %3723, ptr %3725, align 8
  %3726 = getelementptr ptr, ptr %3714, i64 2
  store ptr %3724, ptr %3726, align 8
  %3727 = load ptr, ptr @tag_Is3, align 8
  %3728 = load ptr, ptr @fun_Core_function_is3.801, align 8
  %3729 = getelementptr ptr, ptr %3713, i64 3
  store ptr %3727, ptr %3729, align 8
  %3730 = getelementptr ptr, ptr %3714, i64 3
  store ptr %3728, ptr %3730, align 8
  %3731 = load ptr, ptr @tag_Is2, align 8
  %3732 = load ptr, ptr @fun_Core_function_is2.797, align 8
  %3733 = getelementptr ptr, ptr %3713, i64 4
  store ptr %3731, ptr %3733, align 8
  %3734 = getelementptr ptr, ptr %3714, i64 4
  store ptr %3732, ptr %3734, align 8
  %3735 = load ptr, ptr @tag_Is4, align 8
  %3736 = load ptr, ptr @fun_Core_function_is4.805, align 8
  %3737 = getelementptr ptr, ptr %3713, i64 5
  store ptr %3735, ptr %3737, align 8
  %3738 = getelementptr ptr, ptr %3714, i64 5
  store ptr %3736, ptr %3738, align 8
  %3739 = load ptr, ptr @tag_Is1, align 8
  %3740 = load ptr, ptr @fun_Core_function_is1.793, align 8
  %3741 = getelementptr ptr, ptr %3713, i64 6
  store ptr %3739, ptr %3741, align 8
  %3742 = getelementptr ptr, ptr %3714, i64 6
  store ptr %3740, ptr %3742, align 8
  %3743 = load ptr, ptr @tag_Is5, align 8
  %3744 = load ptr, ptr @fun_Core_function_is5.809, align 8
  %3745 = getelementptr ptr, ptr %3713, i64 7
  store ptr %3743, ptr %3745, align 8
  %3746 = getelementptr ptr, ptr %3714, i64 7
  store ptr %3744, ptr %3746, align 8
  %3747 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3748 = getelementptr ptr, ptr %3713, i64 8
  store ptr %3747, ptr %3748, align 8
  %3749 = getelementptr ptr, ptr %3714, i64 8
  store ptr %3664, ptr %3749, align 8
  %3750 = load ptr, ptr @tag_Run, align 8
  %3751 = load ptr, ptr @fun_Core_function_run.813, align 8
  %3752 = getelementptr ptr, ptr %3713, i64 9
  store ptr %3750, ptr %3752, align 8
  %3753 = getelementptr ptr, ptr %3714, i64 9
  store ptr %3751, ptr %3753, align 8
  %3754 = getelementptr ptr, ptr %3713, i64 10
  store ptr null, ptr %3754, align 8
  %3755 = getelementptr ptr, ptr %3714, i64 10
  store ptr null, ptr %3755, align 8
  %3756 = call ptr @make_candy_struct(ptr %3713, ptr %3714)
  %3757 = load ptr, ptr @tag_Equals, align 8
  %3758 = call ptr @Builtins__structGet(ptr %997, ptr %3757)
  %3759 = load ptr, ptr @tag_TypeOf, align 8
  %3760 = call ptr @Builtins__structGet(ptr %997, ptr %3759)
  %3761 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3762 = getelementptr inbounds { ptr }, ptr %3761, i32 0, i32 0
  store ptr %3756, ptr %3762, align 8
  %3763 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.820, ptr %3761, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3763, ptr @fun_Core_bool_lazyAnd.821, align 8
  %3764 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3765 = call ptr @make_candy_function(ptr @Core_bool_and.848, ptr %3764, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3765, ptr @fun_Core_bool_and.849, align 8
  %3766 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3767 = getelementptr inbounds { ptr }, ptr %3766, i32 0, i32 0
  store ptr %3756, ptr %3767, align 8
  %3768 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.852, ptr %3766, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3768, ptr @fun_Core_bool_lazyOr.853, align 8
  %3769 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3770 = call ptr @make_candy_function(ptr @Core_bool_or.880, ptr %3769, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3770, ptr @fun_Core_bool_or.881, align 8
  %3771 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3772 = getelementptr inbounds { ptr }, ptr %3771, i32 0, i32 0
  store ptr %3637, ptr %3772, align 8
  %3773 = call ptr @make_candy_function(ptr @Core_bool_xor.884, ptr %3771, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3773, ptr @fun_Core_bool_xor.885, align 8
  %3774 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3775 = call ptr @make_candy_function(ptr @Core_bool_implies.886, ptr %3774, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3775, ptr @fun_Core_bool_implies.887, align 8
  %3776 = alloca ptr, i64 9, align 8
  %3777 = alloca ptr, i64 9, align 8
  %3778 = load ptr, ptr @tag_LazyOr, align 8
  %3779 = load ptr, ptr @fun_Core_bool_lazyOr.853, align 8
  %3780 = getelementptr ptr, ptr %3776, i64 0
  store ptr %3778, ptr %3780, align 8
  %3781 = getelementptr ptr, ptr %3777, i64 0
  store ptr %3779, ptr %3781, align 8
  %3782 = load ptr, ptr @tag_Implies, align 8
  %3783 = load ptr, ptr @fun_Core_bool_implies.887, align 8
  %3784 = getelementptr ptr, ptr %3776, i64 1
  store ptr %3782, ptr %3784, align 8
  %3785 = getelementptr ptr, ptr %3777, i64 1
  store ptr %3783, ptr %3785, align 8
  %3786 = load ptr, ptr @tag_Not, align 8
  %3787 = load ptr, ptr @fun_Core_bool_not, align 8
  %3788 = getelementptr ptr, ptr %3776, i64 2
  store ptr %3786, ptr %3788, align 8
  %3789 = getelementptr ptr, ptr %3777, i64 2
  store ptr %3787, ptr %3789, align 8
  %3790 = load ptr, ptr @tag_And, align 8
  %3791 = load ptr, ptr @fun_Core_bool_and.849, align 8
  %3792 = getelementptr ptr, ptr %3776, i64 3
  store ptr %3790, ptr %3792, align 8
  %3793 = getelementptr ptr, ptr %3777, i64 3
  store ptr %3791, ptr %3793, align 8
  %3794 = load ptr, ptr @tag_LazyAnd, align 8
  %3795 = load ptr, ptr @fun_Core_bool_lazyAnd.821, align 8
  %3796 = getelementptr ptr, ptr %3776, i64 4
  store ptr %3794, ptr %3796, align 8
  %3797 = getelementptr ptr, ptr %3777, i64 4
  store ptr %3795, ptr %3797, align 8
  %3798 = load ptr, ptr @tag_Is, align 8
  %3799 = load ptr, ptr @fun_Core_bool_is, align 8
  %3800 = getelementptr ptr, ptr %3776, i64 5
  store ptr %3798, ptr %3800, align 8
  %3801 = getelementptr ptr, ptr %3777, i64 5
  store ptr %3799, ptr %3801, align 8
  %3802 = load ptr, ptr @tag_Or, align 8
  %3803 = load ptr, ptr @fun_Core_bool_or.881, align 8
  %3804 = getelementptr ptr, ptr %3776, i64 6
  store ptr %3802, ptr %3804, align 8
  %3805 = getelementptr ptr, ptr %3777, i64 6
  store ptr %3803, ptr %3805, align 8
  %3806 = load ptr, ptr @tag_Xor, align 8
  %3807 = load ptr, ptr @fun_Core_bool_xor.885, align 8
  %3808 = getelementptr ptr, ptr %3776, i64 7
  store ptr %3806, ptr %3808, align 8
  %3809 = getelementptr ptr, ptr %3777, i64 7
  store ptr %3807, ptr %3809, align 8
  %3810 = getelementptr ptr, ptr %3776, i64 8
  store ptr null, ptr %3810, align 8
  %3811 = getelementptr ptr, ptr %3777, i64 8
  store ptr null, ptr %3811, align 8
  %3812 = call ptr @make_candy_struct(ptr %3776, ptr %3777)
  %3813 = load ptr, ptr @tag_Equals, align 8
  %3814 = call ptr @Builtins__structGet(ptr %997, ptr %3813)
  %3815 = load ptr, ptr @tag_Equals, align 8
  %3816 = call ptr @Builtins__structGet(ptr %997, ptr %3815)
  %3817 = load ptr, ptr @tag_Equals, align 8
  %3818 = call ptr @Builtins__structGet(ptr %997, ptr %3817)
  %3819 = load ptr, ptr @tag_TypeOf, align 8
  %3820 = call ptr @Builtins__structGet(ptr %997, ptr %3819)
  %3821 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3822 = call ptr @Builtins__structGet(ptr %997, ptr %3821)
  %3823 = load ptr, ptr @tag_Equals, align 8
  %3824 = call ptr @Builtins__structGet(ptr %997, ptr %3823)
  %3825 = load ptr, ptr @tag_TypeOf, align 8
  %3826 = call ptr @Builtins__structGet(ptr %997, ptr %3825)
  %3827 = load ptr, ptr @tag_Equals, align 8
  %3828 = call ptr @Builtins__structGet(ptr %997, ptr %3827)
  %3829 = load ptr, ptr @tag_Equals, align 8
  %3830 = call ptr @Builtins__structGet(ptr %997, ptr %3829)
  %3831 = load ptr, ptr @tag_Equals, align 8
  %3832 = call ptr @Builtins__structGet(ptr %997, ptr %3831)
  %3833 = load ptr, ptr @tag_TypeOf, align 8
  %3834 = call ptr @Builtins__structGet(ptr %997, ptr %3833)
  %3835 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3836 = call ptr @Builtins__structGet(ptr %997, ptr %3835)
  %3837 = load ptr, ptr @tag_Equals, align 8
  %3838 = call ptr @Builtins__structGet(ptr %997, ptr %3837)
  %3839 = load ptr, ptr @tag_TypeOf, align 8
  %3840 = call ptr @Builtins__structGet(ptr %997, ptr %3839)
  %3841 = load ptr, ptr @tag_IfElse, align 8
  %3842 = call ptr @Builtins__structGet(ptr %997, ptr %3841)
  %3843 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3844 = getelementptr inbounds { ptr }, ptr %3843, i32 0, i32 0
  store ptr %3812, ptr %3844, align 8
  %3845 = call ptr @make_candy_function(ptr @Core_check_check.890, ptr %3843, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3845, ptr @fun_Core_check_check.891, align 8
  %3846 = load ptr, ptr @tag_Equals, align 8
  %3847 = call ptr @Builtins__structGet(ptr %997, ptr %3846)
  %3848 = load ptr, ptr @tag_Equals, align 8
  %3849 = call ptr @Builtins__structGet(ptr %997, ptr %3848)
  %3850 = load ptr, ptr @tag_Equals, align 8
  %3851 = call ptr @Builtins__structGet(ptr %997, ptr %3850)
  %3852 = load ptr, ptr @tag_TypeOf, align 8
  %3853 = call ptr @Builtins__structGet(ptr %997, ptr %3852)
  %3854 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3855 = call ptr @Builtins__structGet(ptr %997, ptr %3854)
  %3856 = load ptr, ptr @tag_Equals, align 8
  %3857 = call ptr @Builtins__structGet(ptr %997, ptr %3856)
  %3858 = load ptr, ptr @tag_TypeOf, align 8
  %3859 = call ptr @Builtins__structGet(ptr %997, ptr %3858)
  %3860 = load ptr, ptr @tag_Equals, align 8
  %3861 = call ptr @Builtins__structGet(ptr %997, ptr %3860)
  %3862 = load ptr, ptr @tag_Equals, align 8
  %3863 = call ptr @Builtins__structGet(ptr %997, ptr %3862)
  %3864 = load ptr, ptr @tag_Equals, align 8
  %3865 = call ptr @Builtins__structGet(ptr %997, ptr %3864)
  %3866 = load ptr, ptr @tag_TypeOf, align 8
  %3867 = call ptr @Builtins__structGet(ptr %997, ptr %3866)
  %3868 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3869 = getelementptr inbounds { ptr, ptr }, ptr %3868, i32 0, i32 0
  store ptr %3867, ptr %3869, align 8
  %3870 = getelementptr inbounds { ptr, ptr }, ptr %3868, i32 0, i32 1
  store ptr %3865, ptr %3870, align 8
  %3871 = call ptr @make_candy_function(ptr @Core_type_is.896, ptr %3868, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3871, ptr @fun_Core_type_is.897, align 8
  %3872 = alloca ptr, i64 3, align 8
  %3873 = alloca ptr, i64 3, align 8
  %3874 = load ptr, ptr @tag_TypeOf, align 8
  %3875 = getelementptr ptr, ptr %3872, i64 0
  store ptr %3874, ptr %3875, align 8
  %3876 = getelementptr ptr, ptr %3873, i64 0
  store ptr %3867, ptr %3876, align 8
  %3877 = load ptr, ptr @tag_Is, align 8
  %3878 = load ptr, ptr @fun_Core_type_is.897, align 8
  %3879 = getelementptr ptr, ptr %3872, i64 1
  store ptr %3877, ptr %3879, align 8
  %3880 = getelementptr ptr, ptr %3873, i64 1
  store ptr %3878, ptr %3880, align 8
  %3881 = getelementptr ptr, ptr %3872, i64 2
  store ptr null, ptr %3881, align 8
  %3882 = getelementptr ptr, ptr %3873, i64 2
  store ptr null, ptr %3882, align 8
  %3883 = call ptr @make_candy_struct(ptr %3872, ptr %3873)
  %3884 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3885 = getelementptr inbounds { ptr }, ptr %3884, i32 0, i32 0
  store ptr %3883, ptr %3885, align 8
  %3886 = call ptr @make_candy_function(ptr @Core_function_is.898, ptr %3884, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3886, ptr @fun_Core_function_is.899, align 8
  %3887 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3888 = call ptr @Builtins__structGet(ptr %997, ptr %3887)
  %3889 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3890 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3889, i32 0, i32 0
  store ptr %3888, ptr %3890, align 8
  %3891 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3889, i32 0, i32 1
  store ptr %3883, ptr %3891, align 8
  %3892 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3889, i32 0, i32 2
  store ptr %997, ptr %3892, align 8
  %3893 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3889, i32 0, i32 3
  store ptr %3863, ptr %3893, align 8
  %3894 = call ptr @make_candy_function(ptr @Core_function_is0.900, ptr %3889, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3894, ptr @fun_Core_function_is0.901, align 8
  %3895 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3896 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3895, i32 0, i32 0
  store ptr %3888, ptr %3896, align 8
  %3897 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3895, i32 0, i32 1
  store ptr %3883, ptr %3897, align 8
  %3898 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3895, i32 0, i32 2
  store ptr %997, ptr %3898, align 8
  %3899 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3895, i32 0, i32 3
  store ptr %3863, ptr %3899, align 8
  %3900 = call ptr @make_candy_function(ptr @Core_function_is1.904, ptr %3895, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3900, ptr @fun_Core_function_is1.905, align 8
  %3901 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3902 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3901, i32 0, i32 0
  store ptr %3888, ptr %3902, align 8
  %3903 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3901, i32 0, i32 1
  store ptr %3883, ptr %3903, align 8
  %3904 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3901, i32 0, i32 2
  store ptr %997, ptr %3904, align 8
  %3905 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3901, i32 0, i32 3
  store ptr %3863, ptr %3905, align 8
  %3906 = call ptr @make_candy_function(ptr @Core_function_is2.908, ptr %3901, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3906, ptr @fun_Core_function_is2.909, align 8
  %3907 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3908 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3907, i32 0, i32 0
  store ptr %3888, ptr %3908, align 8
  %3909 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3907, i32 0, i32 1
  store ptr %3883, ptr %3909, align 8
  %3910 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3907, i32 0, i32 2
  store ptr %997, ptr %3910, align 8
  %3911 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3907, i32 0, i32 3
  store ptr %3863, ptr %3911, align 8
  %3912 = call ptr @make_candy_function(ptr @Core_function_is3.912, ptr %3907, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3912, ptr @fun_Core_function_is3.913, align 8
  %3913 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3914 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3913, i32 0, i32 0
  store ptr %3888, ptr %3914, align 8
  %3915 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3913, i32 0, i32 1
  store ptr %997, ptr %3915, align 8
  %3916 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3913, i32 0, i32 2
  store ptr %3883, ptr %3916, align 8
  %3917 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3913, i32 0, i32 3
  store ptr %3863, ptr %3917, align 8
  %3918 = call ptr @make_candy_function(ptr @Core_function_is4.916, ptr %3913, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3918, ptr @fun_Core_function_is4.917, align 8
  %3919 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3920 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3919, i32 0, i32 0
  store ptr %3888, ptr %3920, align 8
  %3921 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3919, i32 0, i32 1
  store ptr %3883, ptr %3921, align 8
  %3922 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3919, i32 0, i32 2
  store ptr %997, ptr %3922, align 8
  %3923 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3919, i32 0, i32 3
  store ptr %3863, ptr %3923, align 8
  %3924 = call ptr @make_candy_function(ptr @Core_function_is5.920, ptr %3919, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3924, ptr @fun_Core_function_is5.921, align 8
  %3925 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3926 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3925, i32 0, i32 0
  store ptr %997, ptr %3926, align 8
  %3927 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3925, i32 0, i32 1
  store ptr %3888, ptr %3927, align 8
  %3928 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3925, i32 0, i32 2
  store ptr %3883, ptr %3928, align 8
  %3929 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3925, i32 0, i32 3
  store ptr %3863, ptr %3929, align 8
  %3930 = call ptr @make_candy_function(ptr @Core_function_run.924, ptr %3925, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3930, ptr @fun_Core_function_run.925, align 8
  %3931 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3932 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3931, i32 0, i32 0
  store ptr %3888, ptr %3932, align 8
  %3933 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3931, i32 0, i32 1
  store ptr %3883, ptr %3933, align 8
  %3934 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3931, i32 0, i32 2
  store ptr %997, ptr %3934, align 8
  %3935 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3931, i32 0, i32 3
  store ptr %3863, ptr %3935, align 8
  %3936 = call ptr @make_candy_function(ptr @Core_function_doNotRun.928, ptr %3931, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3936, ptr @fun_Core_function_doNotRun.929, align 8
  %3937 = alloca ptr, i64 11, align 8
  %3938 = alloca ptr, i64 11, align 8
  %3939 = load ptr, ptr @tag_Is0, align 8
  %3940 = load ptr, ptr @fun_Core_function_is0.901, align 8
  %3941 = getelementptr ptr, ptr %3937, i64 0
  store ptr %3939, ptr %3941, align 8
  %3942 = getelementptr ptr, ptr %3938, i64 0
  store ptr %3940, ptr %3942, align 8
  %3943 = load ptr, ptr @tag_DoNotRun, align 8
  %3944 = load ptr, ptr @fun_Core_function_doNotRun.929, align 8
  %3945 = getelementptr ptr, ptr %3937, i64 1
  store ptr %3943, ptr %3945, align 8
  %3946 = getelementptr ptr, ptr %3938, i64 1
  store ptr %3944, ptr %3946, align 8
  %3947 = load ptr, ptr @tag_Is, align 8
  %3948 = load ptr, ptr @fun_Core_function_is.899, align 8
  %3949 = getelementptr ptr, ptr %3937, i64 2
  store ptr %3947, ptr %3949, align 8
  %3950 = getelementptr ptr, ptr %3938, i64 2
  store ptr %3948, ptr %3950, align 8
  %3951 = load ptr, ptr @tag_Is3, align 8
  %3952 = load ptr, ptr @fun_Core_function_is3.913, align 8
  %3953 = getelementptr ptr, ptr %3937, i64 3
  store ptr %3951, ptr %3953, align 8
  %3954 = getelementptr ptr, ptr %3938, i64 3
  store ptr %3952, ptr %3954, align 8
  %3955 = load ptr, ptr @tag_Is2, align 8
  %3956 = load ptr, ptr @fun_Core_function_is2.909, align 8
  %3957 = getelementptr ptr, ptr %3937, i64 4
  store ptr %3955, ptr %3957, align 8
  %3958 = getelementptr ptr, ptr %3938, i64 4
  store ptr %3956, ptr %3958, align 8
  %3959 = load ptr, ptr @tag_Is4, align 8
  %3960 = load ptr, ptr @fun_Core_function_is4.917, align 8
  %3961 = getelementptr ptr, ptr %3937, i64 5
  store ptr %3959, ptr %3961, align 8
  %3962 = getelementptr ptr, ptr %3938, i64 5
  store ptr %3960, ptr %3962, align 8
  %3963 = load ptr, ptr @tag_Is1, align 8
  %3964 = load ptr, ptr @fun_Core_function_is1.905, align 8
  %3965 = getelementptr ptr, ptr %3937, i64 6
  store ptr %3963, ptr %3965, align 8
  %3966 = getelementptr ptr, ptr %3938, i64 6
  store ptr %3964, ptr %3966, align 8
  %3967 = load ptr, ptr @tag_Is5, align 8
  %3968 = load ptr, ptr @fun_Core_function_is5.921, align 8
  %3969 = getelementptr ptr, ptr %3937, i64 7
  store ptr %3967, ptr %3969, align 8
  %3970 = getelementptr ptr, ptr %3938, i64 7
  store ptr %3968, ptr %3970, align 8
  %3971 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3972 = getelementptr ptr, ptr %3937, i64 8
  store ptr %3971, ptr %3972, align 8
  %3973 = getelementptr ptr, ptr %3938, i64 8
  store ptr %3888, ptr %3973, align 8
  %3974 = load ptr, ptr @tag_Run, align 8
  %3975 = load ptr, ptr @fun_Core_function_run.925, align 8
  %3976 = getelementptr ptr, ptr %3937, i64 9
  store ptr %3974, ptr %3976, align 8
  %3977 = getelementptr ptr, ptr %3938, i64 9
  store ptr %3975, ptr %3977, align 8
  %3978 = getelementptr ptr, ptr %3937, i64 10
  store ptr null, ptr %3978, align 8
  %3979 = getelementptr ptr, ptr %3938, i64 10
  store ptr null, ptr %3979, align 8
  %3980 = call ptr @make_candy_struct(ptr %3937, ptr %3938)
  %3981 = load ptr, ptr @tag_Equals, align 8
  %3982 = call ptr @Builtins__structGet(ptr %997, ptr %3981)
  %3983 = load ptr, ptr @tag_TypeOf, align 8
  %3984 = call ptr @Builtins__structGet(ptr %997, ptr %3983)
  %3985 = load ptr, ptr @tag_IfElse, align 8
  %3986 = call ptr @Builtins__structGet(ptr %997, ptr %3985)
  %3987 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3988 = getelementptr inbounds { ptr }, ptr %3987, i32 0, i32 0
  store ptr %3980, ptr %3988, align 8
  %3989 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive.932, ptr %3987, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3989, ptr @fun_Core_controlFlow_recursive.933, align 8
  %3990 = load ptr, ptr @tag_Equals, align 8
  %3991 = call ptr @Builtins__structGet(ptr %997, ptr %3990)
  %3992 = load ptr, ptr @tag_Equals, align 8
  %3993 = call ptr @Builtins__structGet(ptr %997, ptr %3992)
  %3994 = load ptr, ptr @tag_TypeOf, align 8
  %3995 = call ptr @Builtins__structGet(ptr %997, ptr %3994)
  %3996 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3997 = getelementptr inbounds { ptr, ptr }, ptr %3996, i32 0, i32 0
  store ptr %3995, ptr %3997, align 8
  %3998 = getelementptr inbounds { ptr, ptr }, ptr %3996, i32 0, i32 1
  store ptr %3993, ptr %3998, align 8
  %3999 = call ptr @make_candy_function(ptr @Core_type_is.938, ptr %3996, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3999, ptr @fun_Core_type_is.939, align 8
  %4000 = alloca ptr, i64 3, align 8
  %4001 = alloca ptr, i64 3, align 8
  %4002 = load ptr, ptr @tag_TypeOf, align 8
  %4003 = getelementptr ptr, ptr %4000, i64 0
  store ptr %4002, ptr %4003, align 8
  %4004 = getelementptr ptr, ptr %4001, i64 0
  store ptr %3995, ptr %4004, align 8
  %4005 = load ptr, ptr @tag_Is, align 8
  %4006 = load ptr, ptr @fun_Core_type_is.939, align 8
  %4007 = getelementptr ptr, ptr %4000, i64 1
  store ptr %4005, ptr %4007, align 8
  %4008 = getelementptr ptr, ptr %4001, i64 1
  store ptr %4006, ptr %4008, align 8
  %4009 = getelementptr ptr, ptr %4000, i64 2
  store ptr null, ptr %4009, align 8
  %4010 = getelementptr ptr, ptr %4001, i64 2
  store ptr null, ptr %4010, align 8
  %4011 = call ptr @make_candy_struct(ptr %4000, ptr %4001)
  %4012 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4013 = getelementptr inbounds { ptr }, ptr %4012, i32 0, i32 0
  store ptr %4011, ptr %4013, align 8
  %4014 = call ptr @make_candy_function(ptr @Core_int_is.940, ptr %4012, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4014, ptr @fun_Core_int_is.941, align 8
  %4015 = load ptr, ptr @tag_IntAdd, align 8
  %4016 = call ptr @Builtins__structGet(ptr %997, ptr %4015)
  %4017 = load ptr, ptr @tag_IntSubtract, align 8
  %4018 = call ptr @Builtins__structGet(ptr %997, ptr %4017)
  %4019 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4020 = getelementptr inbounds { ptr, ptr }, ptr %4019, i32 0, i32 0
  store ptr %4018, ptr %4020, align 8
  %4021 = getelementptr inbounds { ptr, ptr }, ptr %4019, i32 0, i32 1
  store ptr %4011, ptr %4021, align 8
  %4022 = call ptr @make_candy_function(ptr @Core_int_negate.942, ptr %4019, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4022, ptr @fun_Core_int_negate.943, align 8
  %4023 = load ptr, ptr @tag_IntMultiply, align 8
  %4024 = call ptr @Builtins__structGet(ptr %997, ptr %4023)
  %4025 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %4026 = call ptr @Builtins__structGet(ptr %997, ptr %4025)
  %4027 = load ptr, ptr @tag_IntRemainder, align 8
  %4028 = call ptr @Builtins__structGet(ptr %997, ptr %4027)
  %4029 = load ptr, ptr @tag_IntModulo, align 8
  %4030 = call ptr @Builtins__structGet(ptr %997, ptr %4029)
  %4031 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4032 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4031, i32 0, i32 0
  store ptr %997, ptr %4032, align 8
  %4033 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4031, i32 0, i32 1
  store ptr %3635, ptr %4033, align 8
  %4034 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4031, i32 0, i32 2
  store ptr %4011, ptr %4034, align 8
  %4035 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4031, i32 0, i32 3
  store ptr %3991, ptr %4035, align 8
  %4036 = call ptr @make_candy_function(ptr @Core_int_compareTo.944, ptr %4031, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4036, ptr @fun_Core_int_compareTo.945, align 8
  %4037 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4038 = getelementptr inbounds { ptr, ptr }, ptr %4037, i32 0, i32 0
  store ptr %4011, ptr %4038, align 8
  %4039 = getelementptr inbounds { ptr, ptr }, ptr %4037, i32 0, i32 1
  store ptr %3991, ptr %4039, align 8
  %4040 = call ptr @make_candy_function(ptr @Core_int_isLessThan.946, ptr %4037, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4040, ptr @fun_Core_int_isLessThan.947, align 8
  %4041 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4042 = getelementptr inbounds { ptr, ptr }, ptr %4041, i32 0, i32 0
  store ptr %3991, ptr %4042, align 8
  %4043 = getelementptr inbounds { ptr, ptr }, ptr %4041, i32 0, i32 1
  store ptr %4011, ptr %4043, align 8
  %4044 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan.948, ptr %4041, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4044, ptr @fun_Core_int_isGreaterThan.949, align 8
  %4045 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4046 = getelementptr inbounds { ptr, ptr }, ptr %4045, i32 0, i32 0
  store ptr %3635, ptr %4046, align 8
  %4047 = getelementptr inbounds { ptr, ptr }, ptr %4045, i32 0, i32 1
  store ptr %4011, ptr %4047, align 8
  %4048 = call ptr @make_candy_function(ptr @Core_int_isLessThanOrEqualTo.950, ptr %4045, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4048, ptr @fun_Core_int_isLessThanOrEqualTo.951, align 8
  %4049 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4050 = getelementptr inbounds { ptr, ptr }, ptr %4049, i32 0, i32 0
  store ptr %3635, ptr %4050, align 8
  %4051 = getelementptr inbounds { ptr, ptr }, ptr %4049, i32 0, i32 1
  store ptr %4011, ptr %4051, align 8
  %4052 = call ptr @make_candy_function(ptr @Core_int_isGreaterThanOrEqualTo.952, ptr %4049, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4052, ptr @fun_Core_int_isGreaterThanOrEqualTo.953, align 8
  %4053 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4054 = getelementptr inbounds { ptr }, ptr %4053, i32 0, i32 0
  store ptr %4011, ptr %4054, align 8
  %4055 = call ptr @make_candy_function(ptr @Core_int_isPositive.954, ptr %4053, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4055, ptr @fun_Core_int_isPositive.955, align 8
  %4056 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4057 = getelementptr inbounds { ptr, ptr }, ptr %4056, i32 0, i32 0
  store ptr %3635, ptr %4057, align 8
  %4058 = getelementptr inbounds { ptr, ptr }, ptr %4056, i32 0, i32 1
  store ptr %4011, ptr %4058, align 8
  %4059 = call ptr @make_candy_function(ptr @Core_int_isNonPositive.956, ptr %4056, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4059, ptr @fun_Core_int_isNonPositive.957, align 8
  %4060 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4061 = getelementptr inbounds { ptr }, ptr %4060, i32 0, i32 0
  store ptr %4011, ptr %4061, align 8
  %4062 = call ptr @make_candy_function(ptr @Core_int_isNegative.958, ptr %4060, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4062, ptr @fun_Core_int_isNegative.959, align 8
  %4063 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4064 = getelementptr inbounds { ptr, ptr }, ptr %4063, i32 0, i32 0
  store ptr %3635, ptr %4064, align 8
  %4065 = getelementptr inbounds { ptr, ptr }, ptr %4063, i32 0, i32 1
  store ptr %4011, ptr %4065, align 8
  %4066 = call ptr @make_candy_function(ptr @Core_int_isNonNegative.960, ptr %4063, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4066, ptr @fun_Core_int_isNonNegative.961, align 8
  %4067 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4068 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4067, i32 0, i32 0
  store ptr %3986, ptr %4068, align 8
  %4069 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4067, i32 0, i32 1
  store ptr %4018, ptr %4069, align 8
  %4070 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4067, i32 0, i32 2
  store ptr %4011, ptr %4070, align 8
  %4071 = call ptr @make_candy_function(ptr @Core_int_absolute.962, ptr %4067, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4071, ptr @fun_Core_int_absolute.963, align 8
  %4072 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4073 = getelementptr inbounds { ptr }, ptr %4072, i32 0, i32 0
  store ptr %4011, ptr %4073, align 8
  %4074 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU32.968, ptr %4072, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4074, ptr @fun_Core_int_fitsInRustU32.969, align 8
  %4075 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4076 = getelementptr inbounds { ptr }, ptr %4075, i32 0, i32 0
  store ptr %4011, ptr %4076, align 8
  %4077 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU128.970, ptr %4075, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4077, ptr @fun_Core_int_fitsInRustU128.971, align 8
  %4078 = load ptr, ptr @tag_IntShiftLeft, align 8
  %4079 = call ptr @Builtins__structGet(ptr %997, ptr %4078)
  %4080 = load ptr, ptr @tag_IntShiftRight, align 8
  %4081 = call ptr @Builtins__structGet(ptr %997, ptr %4080)
  %4082 = load ptr, ptr @tag_IntBitLength, align 8
  %4083 = call ptr @Builtins__structGet(ptr %997, ptr %4082)
  %4084 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %4085 = call ptr @Builtins__structGet(ptr %997, ptr %4084)
  %4086 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %4087 = call ptr @Builtins__structGet(ptr %997, ptr %4086)
  %4088 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %4089 = call ptr @Builtins__structGet(ptr %997, ptr %4088)
  %4090 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4091 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4090, i32 0, i32 0
  store ptr %4085, ptr %4091, align 8
  %4092 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4090, i32 0, i32 1
  store ptr %4011, ptr %4092, align 8
  %4093 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4090, i32 0, i32 2
  store ptr %3991, ptr %4093, align 8
  %4094 = call ptr @make_candy_function(ptr @Core_int_isEven.972, ptr %4090, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4094, ptr @fun_Core_int_isEven.973, align 8
  %4095 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4096 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4095, i32 0, i32 0
  store ptr %4085, ptr %4096, align 8
  %4097 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4095, i32 0, i32 1
  store ptr %3635, ptr %4097, align 8
  %4098 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4095, i32 0, i32 2
  store ptr %4011, ptr %4098, align 8
  %4099 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4095, i32 0, i32 3
  store ptr %3991, ptr %4099, align 8
  %4100 = call ptr @make_candy_function(ptr @Core_int_isOdd.974, ptr %4095, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4100, ptr @fun_Core_int_isOdd.975, align 8
  %4101 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4102 = getelementptr inbounds { ptr, ptr }, ptr %4101, i32 0, i32 0
  store ptr %3986, ptr %4102, align 8
  %4103 = getelementptr inbounds { ptr, ptr }, ptr %4101, i32 0, i32 1
  store ptr %4011, ptr %4103, align 8
  %4104 = call ptr @make_candy_function(ptr @Core_int_min.976, ptr %4101, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4104, ptr @fun_Core_int_min.977, align 8
  %4105 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4106 = getelementptr inbounds { ptr, ptr }, ptr %4105, i32 0, i32 0
  store ptr %3986, ptr %4106, align 8
  %4107 = getelementptr inbounds { ptr, ptr }, ptr %4105, i32 0, i32 1
  store ptr %4011, ptr %4107, align 8
  %4108 = call ptr @make_candy_function(ptr @Core_int_max.982, ptr %4105, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4108, ptr @fun_Core_int_max.983, align 8
  %4109 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4110 = getelementptr inbounds { ptr }, ptr %4109, i32 0, i32 0
  store ptr %4011, ptr %4110, align 8
  %4111 = call ptr @make_candy_function(ptr @Core_int_coerceAtLeast.988, ptr %4109, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4111, ptr @fun_Core_int_coerceAtLeast.989, align 8
  %4112 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4113 = getelementptr inbounds { ptr }, ptr %4112, i32 0, i32 0
  store ptr %4011, ptr %4113, align 8
  %4114 = call ptr @make_candy_function(ptr @Core_int_coerceAtMost.990, ptr %4112, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4114, ptr @fun_Core_int_coerceAtMost.991, align 8
  %4115 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4116 = getelementptr inbounds { ptr }, ptr %4115, i32 0, i32 0
  store ptr %4011, ptr %4116, align 8
  %4117 = call ptr @make_candy_function(ptr @Core_int_coerceIn.992, ptr %4115, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4117, ptr @fun_Core_int_coerceIn.993, align 8
  %4118 = load ptr, ptr @tag_IntParse, align 8
  %4119 = call ptr @Builtins__structGet(ptr %997, ptr %4118)
  %4120 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4121 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4120, i32 0, i32 0
  store ptr %4011, ptr %4121, align 8
  %4122 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4120, i32 0, i32 1
  store ptr %3991, ptr %4122, align 8
  %4123 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4120, i32 0, i32 2
  store ptr %4081, ptr %4123, align 8
  %4124 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4120, i32 0, i32 3
  store ptr %4018, ptr %4124, align 8
  %4125 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4120, i32 0, i32 4
  store ptr %4085, ptr %4125, align 8
  %4126 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4120, i32 0, i32 5
  store ptr %3986, ptr %4126, align 8
  %4127 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4120, i32 0, i32 6
  store ptr %4024, ptr %4127, align 8
  %4128 = call ptr @make_candy_function(ptr @Core_int_pow.994, ptr %4120, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4128, ptr @fun_Core_int_pow.995, align 8
  %4129 = alloca ptr, i64 37, align 8
  %4130 = alloca ptr, i64 37, align 8
  %4131 = load ptr, ptr @tag_CoerceAtLeast, align 8
  %4132 = load ptr, ptr @fun_Core_int_coerceAtLeast.989, align 8
  %4133 = getelementptr ptr, ptr %4129, i64 0
  store ptr %4131, ptr %4133, align 8
  %4134 = getelementptr ptr, ptr %4130, i64 0
  store ptr %4132, ptr %4134, align 8
  %4135 = load ptr, ptr @tag_FitsInRustU32, align 8
  %4136 = load ptr, ptr @fun_Core_int_fitsInRustU32.969, align 8
  %4137 = getelementptr ptr, ptr %4129, i64 1
  store ptr %4135, ptr %4137, align 8
  %4138 = getelementptr ptr, ptr %4130, i64 1
  store ptr %4136, ptr %4138, align 8
  %4139 = load ptr, ptr @tag_CoerceIn, align 8
  %4140 = load ptr, ptr @fun_Core_int_coerceIn.993, align 8
  %4141 = getelementptr ptr, ptr %4129, i64 2
  store ptr %4139, ptr %4141, align 8
  %4142 = getelementptr ptr, ptr %4130, i64 2
  store ptr %4140, ptr %4142, align 8
  %4143 = load ptr, ptr @tag_IsPositive, align 8
  %4144 = load ptr, ptr @fun_Core_int_isPositive.955, align 8
  %4145 = getelementptr ptr, ptr %4129, i64 3
  store ptr %4143, ptr %4145, align 8
  %4146 = getelementptr ptr, ptr %4130, i64 3
  store ptr %4144, ptr %4146, align 8
  %4147 = load ptr, ptr @tag_BitwiseAnd, align 8
  %4148 = getelementptr ptr, ptr %4129, i64 4
  store ptr %4147, ptr %4148, align 8
  %4149 = getelementptr ptr, ptr %4130, i64 4
  store ptr %4085, ptr %4149, align 8
  %4150 = load ptr, ptr @tag_IsOdd, align 8
  %4151 = load ptr, ptr @fun_Core_int_isOdd.975, align 8
  %4152 = getelementptr ptr, ptr %4129, i64 5
  store ptr %4150, ptr %4152, align 8
  %4153 = getelementptr ptr, ptr %4130, i64 5
  store ptr %4151, ptr %4153, align 8
  %4154 = load ptr, ptr @tag_BitwiseXor, align 8
  %4155 = getelementptr ptr, ptr %4129, i64 6
  store ptr %4154, ptr %4155, align 8
  %4156 = getelementptr ptr, ptr %4130, i64 6
  store ptr %4089, ptr %4156, align 8
  %4157 = load ptr, ptr @tag_IsLessThan, align 8
  %4158 = load ptr, ptr @fun_Core_int_isLessThan.947, align 8
  %4159 = getelementptr ptr, ptr %4129, i64 7
  store ptr %4157, ptr %4159, align 8
  %4160 = getelementptr ptr, ptr %4130, i64 7
  store ptr %4158, ptr %4160, align 8
  %4161 = load ptr, ptr @tag_IsGreaterThan, align 8
  %4162 = load ptr, ptr @fun_Core_int_isGreaterThan.949, align 8
  %4163 = getelementptr ptr, ptr %4129, i64 8
  store ptr %4161, ptr %4163, align 8
  %4164 = getelementptr ptr, ptr %4130, i64 8
  store ptr %4162, ptr %4164, align 8
  %4165 = load ptr, ptr @tag_DivideTruncating, align 8
  %4166 = getelementptr ptr, ptr %4129, i64 9
  store ptr %4165, ptr %4166, align 8
  %4167 = getelementptr ptr, ptr %4130, i64 9
  store ptr %4026, ptr %4167, align 8
  %4168 = load ptr, ptr @tag_Multiply, align 8
  %4169 = getelementptr ptr, ptr %4129, i64 10
  store ptr %4168, ptr %4169, align 8
  %4170 = getelementptr ptr, ptr %4130, i64 10
  store ptr %4024, ptr %4170, align 8
  %4171 = load ptr, ptr @tag_Subtract, align 8
  %4172 = getelementptr ptr, ptr %4129, i64 11
  store ptr %4171, ptr %4172, align 8
  %4173 = getelementptr ptr, ptr %4130, i64 11
  store ptr %4018, ptr %4173, align 8
  %4174 = load ptr, ptr @tag_BitLength, align 8
  %4175 = getelementptr ptr, ptr %4129, i64 12
  store ptr %4174, ptr %4175, align 8
  %4176 = getelementptr ptr, ptr %4130, i64 12
  store ptr %4083, ptr %4176, align 8
  %4177 = load ptr, ptr @tag_Max, align 8
  %4178 = load ptr, ptr @fun_Core_int_max.983, align 8
  %4179 = getelementptr ptr, ptr %4129, i64 13
  store ptr %4177, ptr %4179, align 8
  %4180 = getelementptr ptr, ptr %4130, i64 13
  store ptr %4178, ptr %4180, align 8
  %4181 = load ptr, ptr @tag_FitsInRustU128, align 8
  %4182 = load ptr, ptr @fun_Core_int_fitsInRustU128.971, align 8
  %4183 = getelementptr ptr, ptr %4129, i64 14
  store ptr %4181, ptr %4183, align 8
  %4184 = getelementptr ptr, ptr %4130, i64 14
  store ptr %4182, ptr %4184, align 8
  %4185 = load ptr, ptr @tag_Remainder, align 8
  %4186 = getelementptr ptr, ptr %4129, i64 15
  store ptr %4185, ptr %4186, align 8
  %4187 = getelementptr ptr, ptr %4130, i64 15
  store ptr %4028, ptr %4187, align 8
  %4188 = load ptr, ptr @tag_CoerceAtMost, align 8
  %4189 = load ptr, ptr @fun_Core_int_coerceAtMost.991, align 8
  %4190 = getelementptr ptr, ptr %4129, i64 16
  store ptr %4188, ptr %4190, align 8
  %4191 = getelementptr ptr, ptr %4130, i64 16
  store ptr %4189, ptr %4191, align 8
  %4192 = load ptr, ptr @tag_ShiftLeft, align 8
  %4193 = getelementptr ptr, ptr %4129, i64 17
  store ptr %4192, ptr %4193, align 8
  %4194 = getelementptr ptr, ptr %4130, i64 17
  store ptr %4079, ptr %4194, align 8
  %4195 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %4196 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo.951, align 8
  %4197 = getelementptr ptr, ptr %4129, i64 18
  store ptr %4195, ptr %4197, align 8
  %4198 = getelementptr ptr, ptr %4130, i64 18
  store ptr %4196, ptr %4198, align 8
  %4199 = load ptr, ptr @tag_Add, align 8
  %4200 = getelementptr ptr, ptr %4129, i64 19
  store ptr %4199, ptr %4200, align 8
  %4201 = getelementptr ptr, ptr %4130, i64 19
  store ptr %4016, ptr %4201, align 8
  %4202 = load ptr, ptr @tag_ShiftRight, align 8
  %4203 = getelementptr ptr, ptr %4129, i64 20
  store ptr %4202, ptr %4203, align 8
  %4204 = getelementptr ptr, ptr %4130, i64 20
  store ptr %4081, ptr %4204, align 8
  %4205 = load ptr, ptr @tag_Parse, align 8
  %4206 = getelementptr ptr, ptr %4129, i64 21
  store ptr %4205, ptr %4206, align 8
  %4207 = getelementptr ptr, ptr %4130, i64 21
  store ptr %4119, ptr %4207, align 8
  %4208 = load ptr, ptr @tag_Modulo, align 8
  %4209 = getelementptr ptr, ptr %4129, i64 22
  store ptr %4208, ptr %4209, align 8
  %4210 = getelementptr ptr, ptr %4130, i64 22
  store ptr %4030, ptr %4210, align 8
  %4211 = load ptr, ptr @tag_IsNonPositive, align 8
  %4212 = load ptr, ptr @fun_Core_int_isNonPositive.957, align 8
  %4213 = getelementptr ptr, ptr %4129, i64 23
  store ptr %4211, ptr %4213, align 8
  %4214 = getelementptr ptr, ptr %4130, i64 23
  store ptr %4212, ptr %4214, align 8
  %4215 = load ptr, ptr @tag_IsEven, align 8
  %4216 = load ptr, ptr @fun_Core_int_isEven.973, align 8
  %4217 = getelementptr ptr, ptr %4129, i64 24
  store ptr %4215, ptr %4217, align 8
  %4218 = getelementptr ptr, ptr %4130, i64 24
  store ptr %4216, ptr %4218, align 8
  %4219 = load ptr, ptr @tag_Absolute, align 8
  %4220 = load ptr, ptr @fun_Core_int_absolute.963, align 8
  %4221 = getelementptr ptr, ptr %4129, i64 25
  store ptr %4219, ptr %4221, align 8
  %4222 = getelementptr ptr, ptr %4130, i64 25
  store ptr %4220, ptr %4222, align 8
  %4223 = load ptr, ptr @tag_BitwiseOr, align 8
  %4224 = getelementptr ptr, ptr %4129, i64 26
  store ptr %4223, ptr %4224, align 8
  %4225 = getelementptr ptr, ptr %4130, i64 26
  store ptr %4087, ptr %4225, align 8
  %4226 = load ptr, ptr @tag_IsNegative, align 8
  %4227 = load ptr, ptr @fun_Core_int_isNegative.959, align 8
  %4228 = getelementptr ptr, ptr %4129, i64 27
  store ptr %4226, ptr %4228, align 8
  %4229 = getelementptr ptr, ptr %4130, i64 27
  store ptr %4227, ptr %4229, align 8
  %4230 = load ptr, ptr @tag_IsGreaterThanOrEqualTo, align 8
  %4231 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo.953, align 8
  %4232 = getelementptr ptr, ptr %4129, i64 28
  store ptr %4230, ptr %4232, align 8
  %4233 = getelementptr ptr, ptr %4130, i64 28
  store ptr %4231, ptr %4233, align 8
  %4234 = load ptr, ptr @tag_Pow, align 8
  %4235 = load ptr, ptr @fun_Core_int_pow.995, align 8
  %4236 = getelementptr ptr, ptr %4129, i64 29
  store ptr %4234, ptr %4236, align 8
  %4237 = getelementptr ptr, ptr %4130, i64 29
  store ptr %4235, ptr %4237, align 8
  %4238 = load ptr, ptr @tag_Negate, align 8
  %4239 = load ptr, ptr @fun_Core_int_negate.943, align 8
  %4240 = getelementptr ptr, ptr %4129, i64 30
  store ptr %4238, ptr %4240, align 8
  %4241 = getelementptr ptr, ptr %4130, i64 30
  store ptr %4239, ptr %4241, align 8
  %4242 = load ptr, ptr @tag_IsNonNegative, align 8
  %4243 = load ptr, ptr @fun_Core_int_isNonNegative.961, align 8
  %4244 = getelementptr ptr, ptr %4129, i64 31
  store ptr %4242, ptr %4244, align 8
  %4245 = getelementptr ptr, ptr %4130, i64 31
  store ptr %4243, ptr %4245, align 8
  %4246 = load ptr, ptr @tag_Is, align 8
  %4247 = load ptr, ptr @fun_Core_int_is.941, align 8
  %4248 = getelementptr ptr, ptr %4129, i64 32
  store ptr %4246, ptr %4248, align 8
  %4249 = getelementptr ptr, ptr %4130, i64 32
  store ptr %4247, ptr %4249, align 8
  %4250 = load ptr, ptr @tag_TheAnswer, align 8
  %4251 = load ptr, ptr @num_42, align 8
  %4252 = getelementptr ptr, ptr %4129, i64 33
  store ptr %4250, ptr %4252, align 8
  %4253 = getelementptr ptr, ptr %4130, i64 33
  store ptr %4251, ptr %4253, align 8
  %4254 = load ptr, ptr @tag_Min, align 8
  %4255 = load ptr, ptr @fun_Core_int_min.977, align 8
  %4256 = getelementptr ptr, ptr %4129, i64 34
  store ptr %4254, ptr %4256, align 8
  %4257 = getelementptr ptr, ptr %4130, i64 34
  store ptr %4255, ptr %4257, align 8
  %4258 = load ptr, ptr @tag_CompareTo, align 8
  %4259 = load ptr, ptr @fun_Core_int_compareTo.945, align 8
  %4260 = getelementptr ptr, ptr %4129, i64 35
  store ptr %4258, ptr %4260, align 8
  %4261 = getelementptr ptr, ptr %4130, i64 35
  store ptr %4259, ptr %4261, align 8
  %4262 = getelementptr ptr, ptr %4129, i64 36
  store ptr null, ptr %4262, align 8
  %4263 = getelementptr ptr, ptr %4130, i64 36
  store ptr null, ptr %4263, align 8
  %4264 = call ptr @make_candy_struct(ptr %4129, ptr %4130)
  %4265 = load ptr, ptr @tag_Equals, align 8
  %4266 = call ptr @Builtins__structGet(ptr %997, ptr %4265)
  %4267 = load ptr, ptr @tag_Equals, align 8
  %4268 = call ptr @Builtins__structGet(ptr %997, ptr %4267)
  %4269 = load ptr, ptr @tag_Equals, align 8
  %4270 = call ptr @Builtins__structGet(ptr %997, ptr %4269)
  %4271 = load ptr, ptr @tag_TypeOf, align 8
  %4272 = call ptr @Builtins__structGet(ptr %997, ptr %4271)
  %4273 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4274 = getelementptr inbounds { ptr, ptr }, ptr %4273, i32 0, i32 0
  store ptr %4272, ptr %4274, align 8
  %4275 = getelementptr inbounds { ptr, ptr }, ptr %4273, i32 0, i32 1
  store ptr %4270, ptr %4275, align 8
  %4276 = call ptr @make_candy_function(ptr @Core_type_is.1030, ptr %4273, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4276, ptr @fun_Core_type_is.1031, align 8
  %4277 = alloca ptr, i64 3, align 8
  %4278 = alloca ptr, i64 3, align 8
  %4279 = load ptr, ptr @tag_TypeOf, align 8
  %4280 = getelementptr ptr, ptr %4277, i64 0
  store ptr %4279, ptr %4280, align 8
  %4281 = getelementptr ptr, ptr %4278, i64 0
  store ptr %4272, ptr %4281, align 8
  %4282 = load ptr, ptr @tag_Is, align 8
  %4283 = load ptr, ptr @fun_Core_type_is.1031, align 8
  %4284 = getelementptr ptr, ptr %4277, i64 1
  store ptr %4282, ptr %4284, align 8
  %4285 = getelementptr ptr, ptr %4278, i64 1
  store ptr %4283, ptr %4285, align 8
  %4286 = getelementptr ptr, ptr %4277, i64 2
  store ptr null, ptr %4286, align 8
  %4287 = getelementptr ptr, ptr %4278, i64 2
  store ptr null, ptr %4287, align 8
  %4288 = call ptr @make_candy_struct(ptr %4277, ptr %4278)
  %4289 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4290 = getelementptr inbounds { ptr }, ptr %4289, i32 0, i32 0
  store ptr %4288, ptr %4290, align 8
  %4291 = call ptr @make_candy_function(ptr @Core_function_is.1032, ptr %4289, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4291, ptr @fun_Core_function_is.1033, align 8
  %4292 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4293 = call ptr @Builtins__structGet(ptr %997, ptr %4292)
  %4294 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4295 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4294, i32 0, i32 0
  store ptr %4293, ptr %4295, align 8
  %4296 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4294, i32 0, i32 1
  store ptr %4288, ptr %4296, align 8
  %4297 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4294, i32 0, i32 2
  store ptr %997, ptr %4297, align 8
  %4298 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4294, i32 0, i32 3
  store ptr %4268, ptr %4298, align 8
  %4299 = call ptr @make_candy_function(ptr @Core_function_is0.1034, ptr %4294, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4299, ptr @fun_Core_function_is0.1035, align 8
  %4300 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4301 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4300, i32 0, i32 0
  store ptr %4293, ptr %4301, align 8
  %4302 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4300, i32 0, i32 1
  store ptr %4288, ptr %4302, align 8
  %4303 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4300, i32 0, i32 2
  store ptr %997, ptr %4303, align 8
  %4304 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4300, i32 0, i32 3
  store ptr %4268, ptr %4304, align 8
  %4305 = call ptr @make_candy_function(ptr @Core_function_is1.1038, ptr %4300, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4305, ptr @fun_Core_function_is1.1039, align 8
  %4306 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4307 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4306, i32 0, i32 0
  store ptr %4293, ptr %4307, align 8
  %4308 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4306, i32 0, i32 1
  store ptr %4288, ptr %4308, align 8
  %4309 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4306, i32 0, i32 2
  store ptr %997, ptr %4309, align 8
  %4310 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4306, i32 0, i32 3
  store ptr %4268, ptr %4310, align 8
  %4311 = call ptr @make_candy_function(ptr @Core_function_is2.1042, ptr %4306, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4311, ptr @fun_Core_function_is2.1043, align 8
  %4312 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4313 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4312, i32 0, i32 0
  store ptr %4293, ptr %4313, align 8
  %4314 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4312, i32 0, i32 1
  store ptr %4288, ptr %4314, align 8
  %4315 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4312, i32 0, i32 2
  store ptr %997, ptr %4315, align 8
  %4316 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4312, i32 0, i32 3
  store ptr %4268, ptr %4316, align 8
  %4317 = call ptr @make_candy_function(ptr @Core_function_is3.1046, ptr %4312, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4317, ptr @fun_Core_function_is3.1047, align 8
  %4318 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4319 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4318, i32 0, i32 0
  store ptr %4293, ptr %4319, align 8
  %4320 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4318, i32 0, i32 1
  store ptr %4288, ptr %4320, align 8
  %4321 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4318, i32 0, i32 2
  store ptr %997, ptr %4321, align 8
  %4322 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4318, i32 0, i32 3
  store ptr %4268, ptr %4322, align 8
  %4323 = call ptr @make_candy_function(ptr @Core_function_is4.1050, ptr %4318, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4323, ptr @fun_Core_function_is4.1051, align 8
  %4324 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4325 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4324, i32 0, i32 0
  store ptr %4293, ptr %4325, align 8
  %4326 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4324, i32 0, i32 1
  store ptr %4288, ptr %4326, align 8
  %4327 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4324, i32 0, i32 2
  store ptr %997, ptr %4327, align 8
  %4328 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4324, i32 0, i32 3
  store ptr %4268, ptr %4328, align 8
  %4329 = call ptr @make_candy_function(ptr @Core_function_is5.1054, ptr %4324, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4329, ptr @fun_Core_function_is5.1055, align 8
  %4330 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4331 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4330, i32 0, i32 0
  store ptr %4293, ptr %4331, align 8
  %4332 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4330, i32 0, i32 1
  store ptr %4288, ptr %4332, align 8
  %4333 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4330, i32 0, i32 2
  store ptr %997, ptr %4333, align 8
  %4334 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4330, i32 0, i32 3
  store ptr %4268, ptr %4334, align 8
  %4335 = call ptr @make_candy_function(ptr @Core_function_run.1058, ptr %4330, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4335, ptr @fun_Core_function_run.1059, align 8
  %4336 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4337 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4336, i32 0, i32 0
  store ptr %4293, ptr %4337, align 8
  %4338 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4336, i32 0, i32 1
  store ptr %4288, ptr %4338, align 8
  %4339 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4336, i32 0, i32 2
  store ptr %997, ptr %4339, align 8
  %4340 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4336, i32 0, i32 3
  store ptr %4268, ptr %4340, align 8
  %4341 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1062, ptr %4336, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4341, ptr @fun_Core_function_doNotRun.1063, align 8
  %4342 = alloca ptr, i64 11, align 8
  %4343 = alloca ptr, i64 11, align 8
  %4344 = load ptr, ptr @tag_Is0, align 8
  %4345 = load ptr, ptr @fun_Core_function_is0.1035, align 8
  %4346 = getelementptr ptr, ptr %4342, i64 0
  store ptr %4344, ptr %4346, align 8
  %4347 = getelementptr ptr, ptr %4343, i64 0
  store ptr %4345, ptr %4347, align 8
  %4348 = load ptr, ptr @tag_DoNotRun, align 8
  %4349 = load ptr, ptr @fun_Core_function_doNotRun.1063, align 8
  %4350 = getelementptr ptr, ptr %4342, i64 1
  store ptr %4348, ptr %4350, align 8
  %4351 = getelementptr ptr, ptr %4343, i64 1
  store ptr %4349, ptr %4351, align 8
  %4352 = load ptr, ptr @tag_Is, align 8
  %4353 = load ptr, ptr @fun_Core_function_is.1033, align 8
  %4354 = getelementptr ptr, ptr %4342, i64 2
  store ptr %4352, ptr %4354, align 8
  %4355 = getelementptr ptr, ptr %4343, i64 2
  store ptr %4353, ptr %4355, align 8
  %4356 = load ptr, ptr @tag_Is3, align 8
  %4357 = load ptr, ptr @fun_Core_function_is3.1047, align 8
  %4358 = getelementptr ptr, ptr %4342, i64 3
  store ptr %4356, ptr %4358, align 8
  %4359 = getelementptr ptr, ptr %4343, i64 3
  store ptr %4357, ptr %4359, align 8
  %4360 = load ptr, ptr @tag_Is2, align 8
  %4361 = load ptr, ptr @fun_Core_function_is2.1043, align 8
  %4362 = getelementptr ptr, ptr %4342, i64 4
  store ptr %4360, ptr %4362, align 8
  %4363 = getelementptr ptr, ptr %4343, i64 4
  store ptr %4361, ptr %4363, align 8
  %4364 = load ptr, ptr @tag_Is4, align 8
  %4365 = load ptr, ptr @fun_Core_function_is4.1051, align 8
  %4366 = getelementptr ptr, ptr %4342, i64 5
  store ptr %4364, ptr %4366, align 8
  %4367 = getelementptr ptr, ptr %4343, i64 5
  store ptr %4365, ptr %4367, align 8
  %4368 = load ptr, ptr @tag_Is1, align 8
  %4369 = load ptr, ptr @fun_Core_function_is1.1039, align 8
  %4370 = getelementptr ptr, ptr %4342, i64 6
  store ptr %4368, ptr %4370, align 8
  %4371 = getelementptr ptr, ptr %4343, i64 6
  store ptr %4369, ptr %4371, align 8
  %4372 = load ptr, ptr @tag_Is5, align 8
  %4373 = load ptr, ptr @fun_Core_function_is5.1055, align 8
  %4374 = getelementptr ptr, ptr %4342, i64 7
  store ptr %4372, ptr %4374, align 8
  %4375 = getelementptr ptr, ptr %4343, i64 7
  store ptr %4373, ptr %4375, align 8
  %4376 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4377 = getelementptr ptr, ptr %4342, i64 8
  store ptr %4376, ptr %4377, align 8
  %4378 = getelementptr ptr, ptr %4343, i64 8
  store ptr %4293, ptr %4378, align 8
  %4379 = load ptr, ptr @tag_Run, align 8
  %4380 = load ptr, ptr @fun_Core_function_run.1059, align 8
  %4381 = getelementptr ptr, ptr %4342, i64 9
  store ptr %4379, ptr %4381, align 8
  %4382 = getelementptr ptr, ptr %4343, i64 9
  store ptr %4380, ptr %4382, align 8
  %4383 = getelementptr ptr, ptr %4342, i64 10
  store ptr null, ptr %4383, align 8
  %4384 = getelementptr ptr, ptr %4343, i64 10
  store ptr null, ptr %4384, align 8
  %4385 = call ptr @make_candy_struct(ptr %4342, ptr %4343)
  %4386 = load ptr, ptr @tag_Equals, align 8
  %4387 = call ptr @Builtins__structGet(ptr %997, ptr %4386)
  %4388 = load ptr, ptr @tag_TypeOf, align 8
  %4389 = call ptr @Builtins__structGet(ptr %997, ptr %4388)
  %4390 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4391 = getelementptr inbounds { ptr }, ptr %4390, i32 0, i32 0
  store ptr %4385, ptr %4391, align 8
  %4392 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.1066, ptr %4390, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4392, ptr @fun_Core_bool_lazyAnd.1067, align 8
  %4393 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4394 = call ptr @make_candy_function(ptr @Core_bool_and.1094, ptr %4393, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4394, ptr @fun_Core_bool_and.1095, align 8
  %4395 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4396 = getelementptr inbounds { ptr }, ptr %4395, i32 0, i32 0
  store ptr %4385, ptr %4396, align 8
  %4397 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.1098, ptr %4395, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4397, ptr @fun_Core_bool_lazyOr.1099, align 8
  %4398 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4399 = call ptr @make_candy_function(ptr @Core_bool_or.1126, ptr %4398, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4399, ptr @fun_Core_bool_or.1127, align 8
  %4400 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4401 = getelementptr inbounds { ptr }, ptr %4400, i32 0, i32 0
  store ptr %4266, ptr %4401, align 8
  %4402 = call ptr @make_candy_function(ptr @Core_bool_xor.1130, ptr %4400, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4402, ptr @fun_Core_bool_xor.1131, align 8
  %4403 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4404 = call ptr @make_candy_function(ptr @Core_bool_implies.1132, ptr %4403, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4404, ptr @fun_Core_bool_implies.1133, align 8
  %4405 = alloca ptr, i64 9, align 8
  %4406 = alloca ptr, i64 9, align 8
  %4407 = load ptr, ptr @tag_LazyOr, align 8
  %4408 = load ptr, ptr @fun_Core_bool_lazyOr.1099, align 8
  %4409 = getelementptr ptr, ptr %4405, i64 0
  store ptr %4407, ptr %4409, align 8
  %4410 = getelementptr ptr, ptr %4406, i64 0
  store ptr %4408, ptr %4410, align 8
  %4411 = load ptr, ptr @tag_Implies, align 8
  %4412 = load ptr, ptr @fun_Core_bool_implies.1133, align 8
  %4413 = getelementptr ptr, ptr %4405, i64 1
  store ptr %4411, ptr %4413, align 8
  %4414 = getelementptr ptr, ptr %4406, i64 1
  store ptr %4412, ptr %4414, align 8
  %4415 = load ptr, ptr @tag_Not, align 8
  %4416 = load ptr, ptr @fun_Core_bool_not, align 8
  %4417 = getelementptr ptr, ptr %4405, i64 2
  store ptr %4415, ptr %4417, align 8
  %4418 = getelementptr ptr, ptr %4406, i64 2
  store ptr %4416, ptr %4418, align 8
  %4419 = load ptr, ptr @tag_And, align 8
  %4420 = load ptr, ptr @fun_Core_bool_and.1095, align 8
  %4421 = getelementptr ptr, ptr %4405, i64 3
  store ptr %4419, ptr %4421, align 8
  %4422 = getelementptr ptr, ptr %4406, i64 3
  store ptr %4420, ptr %4422, align 8
  %4423 = load ptr, ptr @tag_LazyAnd, align 8
  %4424 = load ptr, ptr @fun_Core_bool_lazyAnd.1067, align 8
  %4425 = getelementptr ptr, ptr %4405, i64 4
  store ptr %4423, ptr %4425, align 8
  %4426 = getelementptr ptr, ptr %4406, i64 4
  store ptr %4424, ptr %4426, align 8
  %4427 = load ptr, ptr @tag_Is, align 8
  %4428 = load ptr, ptr @fun_Core_bool_is, align 8
  %4429 = getelementptr ptr, ptr %4405, i64 5
  store ptr %4427, ptr %4429, align 8
  %4430 = getelementptr ptr, ptr %4406, i64 5
  store ptr %4428, ptr %4430, align 8
  %4431 = load ptr, ptr @tag_Or, align 8
  %4432 = load ptr, ptr @fun_Core_bool_or.1127, align 8
  %4433 = getelementptr ptr, ptr %4405, i64 6
  store ptr %4431, ptr %4433, align 8
  %4434 = getelementptr ptr, ptr %4406, i64 6
  store ptr %4432, ptr %4434, align 8
  %4435 = load ptr, ptr @tag_Xor, align 8
  %4436 = load ptr, ptr @fun_Core_bool_xor.1131, align 8
  %4437 = getelementptr ptr, ptr %4405, i64 7
  store ptr %4435, ptr %4437, align 8
  %4438 = getelementptr ptr, ptr %4406, i64 7
  store ptr %4436, ptr %4438, align 8
  %4439 = getelementptr ptr, ptr %4405, i64 8
  store ptr null, ptr %4439, align 8
  %4440 = getelementptr ptr, ptr %4406, i64 8
  store ptr null, ptr %4440, align 8
  %4441 = call ptr @make_candy_struct(ptr %4405, ptr %4406)
  %4442 = load ptr, ptr @tag_Equals, align 8
  %4443 = call ptr @Builtins__structGet(ptr %997, ptr %4442)
  %4444 = load ptr, ptr @tag_Equals, align 8
  %4445 = call ptr @Builtins__structGet(ptr %997, ptr %4444)
  %4446 = load ptr, ptr @tag_Equals, align 8
  %4447 = call ptr @Builtins__structGet(ptr %997, ptr %4446)
  %4448 = load ptr, ptr @tag_TypeOf, align 8
  %4449 = call ptr @Builtins__structGet(ptr %997, ptr %4448)
  %4450 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4451 = call ptr @Builtins__structGet(ptr %997, ptr %4450)
  %4452 = load ptr, ptr @tag_Equals, align 8
  %4453 = call ptr @Builtins__structGet(ptr %997, ptr %4452)
  %4454 = load ptr, ptr @tag_TypeOf, align 8
  %4455 = call ptr @Builtins__structGet(ptr %997, ptr %4454)
  %4456 = load ptr, ptr @tag_Equals, align 8
  %4457 = call ptr @Builtins__structGet(ptr %997, ptr %4456)
  %4458 = load ptr, ptr @tag_Equals, align 8
  %4459 = call ptr @Builtins__structGet(ptr %997, ptr %4458)
  %4460 = load ptr, ptr @tag_Equals, align 8
  %4461 = call ptr @Builtins__structGet(ptr %997, ptr %4460)
  %4462 = load ptr, ptr @tag_TypeOf, align 8
  %4463 = call ptr @Builtins__structGet(ptr %997, ptr %4462)
  %4464 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4465 = getelementptr inbounds { ptr, ptr }, ptr %4464, i32 0, i32 0
  store ptr %4461, ptr %4465, align 8
  %4466 = getelementptr inbounds { ptr, ptr }, ptr %4464, i32 0, i32 1
  store ptr %4463, ptr %4466, align 8
  %4467 = call ptr @make_candy_function(ptr @Core_type_is.1136, ptr %4464, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4467, ptr @fun_Core_type_is.1137, align 8
  %4468 = alloca ptr, i64 3, align 8
  %4469 = alloca ptr, i64 3, align 8
  %4470 = load ptr, ptr @tag_TypeOf, align 8
  %4471 = getelementptr ptr, ptr %4468, i64 0
  store ptr %4470, ptr %4471, align 8
  %4472 = getelementptr ptr, ptr %4469, i64 0
  store ptr %4463, ptr %4472, align 8
  %4473 = load ptr, ptr @tag_Is, align 8
  %4474 = load ptr, ptr @fun_Core_type_is.1137, align 8
  %4475 = getelementptr ptr, ptr %4468, i64 1
  store ptr %4473, ptr %4475, align 8
  %4476 = getelementptr ptr, ptr %4469, i64 1
  store ptr %4474, ptr %4476, align 8
  %4477 = getelementptr ptr, ptr %4468, i64 2
  store ptr null, ptr %4477, align 8
  %4478 = getelementptr ptr, ptr %4469, i64 2
  store ptr null, ptr %4478, align 8
  %4479 = call ptr @make_candy_struct(ptr %4468, ptr %4469)
  %4480 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4481 = getelementptr inbounds { ptr }, ptr %4480, i32 0, i32 0
  store ptr %4479, ptr %4481, align 8
  %4482 = call ptr @make_candy_function(ptr @Core_function_is.1138, ptr %4480, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4482, ptr @fun_Core_function_is.1139, align 8
  %4483 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4484 = call ptr @Builtins__structGet(ptr %997, ptr %4483)
  %4485 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4486 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4485, i32 0, i32 0
  store ptr %997, ptr %4486, align 8
  %4487 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4485, i32 0, i32 1
  store ptr %4484, ptr %4487, align 8
  %4488 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4485, i32 0, i32 2
  store ptr %4479, ptr %4488, align 8
  %4489 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4485, i32 0, i32 3
  store ptr %4459, ptr %4489, align 8
  %4490 = call ptr @make_candy_function(ptr @Core_function_is0.1140, ptr %4485, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4490, ptr @fun_Core_function_is0.1141, align 8
  %4491 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4492 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4491, i32 0, i32 0
  store ptr %997, ptr %4492, align 8
  %4493 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4491, i32 0, i32 1
  store ptr %4484, ptr %4493, align 8
  %4494 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4491, i32 0, i32 2
  store ptr %4479, ptr %4494, align 8
  %4495 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4491, i32 0, i32 3
  store ptr %4459, ptr %4495, align 8
  %4496 = call ptr @make_candy_function(ptr @Core_function_is1.1144, ptr %4491, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4496, ptr @fun_Core_function_is1.1145, align 8
  %4497 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4498 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4497, i32 0, i32 0
  store ptr %997, ptr %4498, align 8
  %4499 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4497, i32 0, i32 1
  store ptr %4484, ptr %4499, align 8
  %4500 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4497, i32 0, i32 2
  store ptr %4479, ptr %4500, align 8
  %4501 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4497, i32 0, i32 3
  store ptr %4459, ptr %4501, align 8
  %4502 = call ptr @make_candy_function(ptr @Core_function_is2.1148, ptr %4497, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4502, ptr @fun_Core_function_is2.1149, align 8
  %4503 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4504 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4503, i32 0, i32 0
  store ptr %997, ptr %4504, align 8
  %4505 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4503, i32 0, i32 1
  store ptr %4484, ptr %4505, align 8
  %4506 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4503, i32 0, i32 2
  store ptr %4479, ptr %4506, align 8
  %4507 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4503, i32 0, i32 3
  store ptr %4459, ptr %4507, align 8
  %4508 = call ptr @make_candy_function(ptr @Core_function_is3.1152, ptr %4503, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4508, ptr @fun_Core_function_is3.1153, align 8
  %4509 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4510 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4509, i32 0, i32 0
  store ptr %997, ptr %4510, align 8
  %4511 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4509, i32 0, i32 1
  store ptr %4484, ptr %4511, align 8
  %4512 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4509, i32 0, i32 2
  store ptr %4479, ptr %4512, align 8
  %4513 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4509, i32 0, i32 3
  store ptr %4459, ptr %4513, align 8
  %4514 = call ptr @make_candy_function(ptr @Core_function_is4.1156, ptr %4509, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4514, ptr @fun_Core_function_is4.1157, align 8
  %4515 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4516 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4515, i32 0, i32 0
  store ptr %997, ptr %4516, align 8
  %4517 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4515, i32 0, i32 1
  store ptr %4484, ptr %4517, align 8
  %4518 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4515, i32 0, i32 2
  store ptr %4479, ptr %4518, align 8
  %4519 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4515, i32 0, i32 3
  store ptr %4459, ptr %4519, align 8
  %4520 = call ptr @make_candy_function(ptr @Core_function_is5.1160, ptr %4515, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4520, ptr @fun_Core_function_is5.1161, align 8
  %4521 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4522 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4521, i32 0, i32 0
  store ptr %997, ptr %4522, align 8
  %4523 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4521, i32 0, i32 1
  store ptr %4484, ptr %4523, align 8
  %4524 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4521, i32 0, i32 2
  store ptr %4479, ptr %4524, align 8
  %4525 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4521, i32 0, i32 3
  store ptr %4459, ptr %4525, align 8
  %4526 = call ptr @make_candy_function(ptr @Core_function_run.1164, ptr %4521, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4526, ptr @fun_Core_function_run.1165, align 8
  %4527 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4528 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4527, i32 0, i32 0
  store ptr %997, ptr %4528, align 8
  %4529 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4527, i32 0, i32 1
  store ptr %4484, ptr %4529, align 8
  %4530 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4527, i32 0, i32 2
  store ptr %4479, ptr %4530, align 8
  %4531 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4527, i32 0, i32 3
  store ptr %4459, ptr %4531, align 8
  %4532 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1168, ptr %4527, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4532, ptr @fun_Core_function_doNotRun.1169, align 8
  %4533 = alloca ptr, i64 11, align 8
  %4534 = alloca ptr, i64 11, align 8
  %4535 = load ptr, ptr @tag_Is0, align 8
  %4536 = load ptr, ptr @fun_Core_function_is0.1141, align 8
  %4537 = getelementptr ptr, ptr %4533, i64 0
  store ptr %4535, ptr %4537, align 8
  %4538 = getelementptr ptr, ptr %4534, i64 0
  store ptr %4536, ptr %4538, align 8
  %4539 = load ptr, ptr @tag_DoNotRun, align 8
  %4540 = load ptr, ptr @fun_Core_function_doNotRun.1169, align 8
  %4541 = getelementptr ptr, ptr %4533, i64 1
  store ptr %4539, ptr %4541, align 8
  %4542 = getelementptr ptr, ptr %4534, i64 1
  store ptr %4540, ptr %4542, align 8
  %4543 = load ptr, ptr @tag_Is, align 8
  %4544 = load ptr, ptr @fun_Core_function_is.1139, align 8
  %4545 = getelementptr ptr, ptr %4533, i64 2
  store ptr %4543, ptr %4545, align 8
  %4546 = getelementptr ptr, ptr %4534, i64 2
  store ptr %4544, ptr %4546, align 8
  %4547 = load ptr, ptr @tag_Is3, align 8
  %4548 = load ptr, ptr @fun_Core_function_is3.1153, align 8
  %4549 = getelementptr ptr, ptr %4533, i64 3
  store ptr %4547, ptr %4549, align 8
  %4550 = getelementptr ptr, ptr %4534, i64 3
  store ptr %4548, ptr %4550, align 8
  %4551 = load ptr, ptr @tag_Is2, align 8
  %4552 = load ptr, ptr @fun_Core_function_is2.1149, align 8
  %4553 = getelementptr ptr, ptr %4533, i64 4
  store ptr %4551, ptr %4553, align 8
  %4554 = getelementptr ptr, ptr %4534, i64 4
  store ptr %4552, ptr %4554, align 8
  %4555 = load ptr, ptr @tag_Is4, align 8
  %4556 = load ptr, ptr @fun_Core_function_is4.1157, align 8
  %4557 = getelementptr ptr, ptr %4533, i64 5
  store ptr %4555, ptr %4557, align 8
  %4558 = getelementptr ptr, ptr %4534, i64 5
  store ptr %4556, ptr %4558, align 8
  %4559 = load ptr, ptr @tag_Is1, align 8
  %4560 = load ptr, ptr @fun_Core_function_is1.1145, align 8
  %4561 = getelementptr ptr, ptr %4533, i64 6
  store ptr %4559, ptr %4561, align 8
  %4562 = getelementptr ptr, ptr %4534, i64 6
  store ptr %4560, ptr %4562, align 8
  %4563 = load ptr, ptr @tag_Is5, align 8
  %4564 = load ptr, ptr @fun_Core_function_is5.1161, align 8
  %4565 = getelementptr ptr, ptr %4533, i64 7
  store ptr %4563, ptr %4565, align 8
  %4566 = getelementptr ptr, ptr %4534, i64 7
  store ptr %4564, ptr %4566, align 8
  %4567 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4568 = getelementptr ptr, ptr %4533, i64 8
  store ptr %4567, ptr %4568, align 8
  %4569 = getelementptr ptr, ptr %4534, i64 8
  store ptr %4484, ptr %4569, align 8
  %4570 = load ptr, ptr @tag_Run, align 8
  %4571 = load ptr, ptr @fun_Core_function_run.1165, align 8
  %4572 = getelementptr ptr, ptr %4533, i64 9
  store ptr %4570, ptr %4572, align 8
  %4573 = getelementptr ptr, ptr %4534, i64 9
  store ptr %4571, ptr %4573, align 8
  %4574 = getelementptr ptr, ptr %4533, i64 10
  store ptr null, ptr %4574, align 8
  %4575 = getelementptr ptr, ptr %4534, i64 10
  store ptr null, ptr %4575, align 8
  %4576 = call ptr @make_candy_struct(ptr %4533, ptr %4534)
  %4577 = load ptr, ptr @tag_Equals, align 8
  %4578 = call ptr @Builtins__structGet(ptr %997, ptr %4577)
  %4579 = load ptr, ptr @tag_TypeOf, align 8
  %4580 = call ptr @Builtins__structGet(ptr %997, ptr %4579)
  %4581 = load ptr, ptr @tag_IfElse, align 8
  %4582 = call ptr @Builtins__structGet(ptr %997, ptr %4581)
  %4583 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4584 = getelementptr inbounds { ptr }, ptr %4583, i32 0, i32 0
  store ptr %4576, ptr %4584, align 8
  %4585 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive.1172, ptr %4583, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4585, ptr @fun_Core_controlFlow_recursive.1173, align 8
  %4586 = load ptr, ptr @tag_Equals, align 8
  %4587 = call ptr @Builtins__structGet(ptr %997, ptr %4586)
  %4588 = load ptr, ptr @tag_Equals, align 8
  %4589 = call ptr @Builtins__structGet(ptr %997, ptr %4588)
  %4590 = load ptr, ptr @tag_Equals, align 8
  %4591 = call ptr @Builtins__structGet(ptr %997, ptr %4590)
  %4592 = load ptr, ptr @tag_TypeOf, align 8
  %4593 = call ptr @Builtins__structGet(ptr %997, ptr %4592)
  %4594 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4595 = getelementptr inbounds { ptr, ptr }, ptr %4594, i32 0, i32 0
  store ptr %4591, ptr %4595, align 8
  %4596 = getelementptr inbounds { ptr, ptr }, ptr %4594, i32 0, i32 1
  store ptr %4593, ptr %4596, align 8
  %4597 = call ptr @make_candy_function(ptr @Core_type_is.1178, ptr %4594, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4597, ptr @fun_Core_type_is.1179, align 8
  %4598 = alloca ptr, i64 3, align 8
  %4599 = alloca ptr, i64 3, align 8
  %4600 = load ptr, ptr @tag_TypeOf, align 8
  %4601 = getelementptr ptr, ptr %4598, i64 0
  store ptr %4600, ptr %4601, align 8
  %4602 = getelementptr ptr, ptr %4599, i64 0
  store ptr %4593, ptr %4602, align 8
  %4603 = load ptr, ptr @tag_Is, align 8
  %4604 = load ptr, ptr @fun_Core_type_is.1179, align 8
  %4605 = getelementptr ptr, ptr %4598, i64 1
  store ptr %4603, ptr %4605, align 8
  %4606 = getelementptr ptr, ptr %4599, i64 1
  store ptr %4604, ptr %4606, align 8
  %4607 = getelementptr ptr, ptr %4598, i64 2
  store ptr null, ptr %4607, align 8
  %4608 = getelementptr ptr, ptr %4599, i64 2
  store ptr null, ptr %4608, align 8
  %4609 = call ptr @make_candy_struct(ptr %4598, ptr %4599)
  %4610 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4611 = getelementptr inbounds { ptr }, ptr %4610, i32 0, i32 0
  store ptr %4609, ptr %4611, align 8
  %4612 = call ptr @make_candy_function(ptr @Core_function_is.1180, ptr %4610, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4612, ptr @fun_Core_function_is.1181, align 8
  %4613 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4614 = call ptr @Builtins__structGet(ptr %997, ptr %4613)
  %4615 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4616 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4615, i32 0, i32 0
  store ptr %997, ptr %4616, align 8
  %4617 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4615, i32 0, i32 1
  store ptr %4614, ptr %4617, align 8
  %4618 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4615, i32 0, i32 2
  store ptr %4609, ptr %4618, align 8
  %4619 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4615, i32 0, i32 3
  store ptr %4589, ptr %4619, align 8
  %4620 = call ptr @make_candy_function(ptr @Core_function_is0.1182, ptr %4615, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4620, ptr @fun_Core_function_is0.1183, align 8
  %4621 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4622 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4621, i32 0, i32 0
  store ptr %997, ptr %4622, align 8
  %4623 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4621, i32 0, i32 1
  store ptr %4614, ptr %4623, align 8
  %4624 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4621, i32 0, i32 2
  store ptr %4609, ptr %4624, align 8
  %4625 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4621, i32 0, i32 3
  store ptr %4589, ptr %4625, align 8
  %4626 = call ptr @make_candy_function(ptr @Core_function_is1.1186, ptr %4621, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4626, ptr @fun_Core_function_is1.1187, align 8
  %4627 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4628 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4627, i32 0, i32 0
  store ptr %997, ptr %4628, align 8
  %4629 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4627, i32 0, i32 1
  store ptr %4614, ptr %4629, align 8
  %4630 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4627, i32 0, i32 2
  store ptr %4609, ptr %4630, align 8
  %4631 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4627, i32 0, i32 3
  store ptr %4589, ptr %4631, align 8
  %4632 = call ptr @make_candy_function(ptr @Core_function_is2.1190, ptr %4627, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4632, ptr @fun_Core_function_is2.1191, align 8
  %4633 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4634 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4633, i32 0, i32 0
  store ptr %997, ptr %4634, align 8
  %4635 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4633, i32 0, i32 1
  store ptr %4614, ptr %4635, align 8
  %4636 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4633, i32 0, i32 2
  store ptr %4609, ptr %4636, align 8
  %4637 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4633, i32 0, i32 3
  store ptr %4589, ptr %4637, align 8
  %4638 = call ptr @make_candy_function(ptr @Core_function_is3.1194, ptr %4633, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4638, ptr @fun_Core_function_is3.1195, align 8
  %4639 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4640 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4639, i32 0, i32 0
  store ptr %997, ptr %4640, align 8
  %4641 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4639, i32 0, i32 1
  store ptr %4614, ptr %4641, align 8
  %4642 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4639, i32 0, i32 2
  store ptr %4609, ptr %4642, align 8
  %4643 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4639, i32 0, i32 3
  store ptr %4589, ptr %4643, align 8
  %4644 = call ptr @make_candy_function(ptr @Core_function_is4.1198, ptr %4639, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4644, ptr @fun_Core_function_is4.1199, align 8
  %4645 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4646 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4645, i32 0, i32 0
  store ptr %997, ptr %4646, align 8
  %4647 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4645, i32 0, i32 1
  store ptr %4614, ptr %4647, align 8
  %4648 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4645, i32 0, i32 2
  store ptr %4609, ptr %4648, align 8
  %4649 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4645, i32 0, i32 3
  store ptr %4589, ptr %4649, align 8
  %4650 = call ptr @make_candy_function(ptr @Core_function_is5.1202, ptr %4645, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4650, ptr @fun_Core_function_is5.1203, align 8
  %4651 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4652 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4651, i32 0, i32 0
  store ptr %997, ptr %4652, align 8
  %4653 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4651, i32 0, i32 1
  store ptr %4614, ptr %4653, align 8
  %4654 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4651, i32 0, i32 2
  store ptr %4609, ptr %4654, align 8
  %4655 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4651, i32 0, i32 3
  store ptr %4589, ptr %4655, align 8
  %4656 = call ptr @make_candy_function(ptr @Core_function_run.1206, ptr %4651, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4656, ptr @fun_Core_function_run.1207, align 8
  %4657 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4658 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4657, i32 0, i32 0
  store ptr %997, ptr %4658, align 8
  %4659 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4657, i32 0, i32 1
  store ptr %4614, ptr %4659, align 8
  %4660 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4657, i32 0, i32 2
  store ptr %4609, ptr %4660, align 8
  %4661 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4657, i32 0, i32 3
  store ptr %4589, ptr %4661, align 8
  %4662 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1210, ptr %4657, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4662, ptr @fun_Core_function_doNotRun.1211, align 8
  %4663 = alloca ptr, i64 11, align 8
  %4664 = alloca ptr, i64 11, align 8
  %4665 = load ptr, ptr @tag_Is0, align 8
  %4666 = load ptr, ptr @fun_Core_function_is0.1183, align 8
  %4667 = getelementptr ptr, ptr %4663, i64 0
  store ptr %4665, ptr %4667, align 8
  %4668 = getelementptr ptr, ptr %4664, i64 0
  store ptr %4666, ptr %4668, align 8
  %4669 = load ptr, ptr @tag_DoNotRun, align 8
  %4670 = load ptr, ptr @fun_Core_function_doNotRun.1211, align 8
  %4671 = getelementptr ptr, ptr %4663, i64 1
  store ptr %4669, ptr %4671, align 8
  %4672 = getelementptr ptr, ptr %4664, i64 1
  store ptr %4670, ptr %4672, align 8
  %4673 = load ptr, ptr @tag_Is, align 8
  %4674 = load ptr, ptr @fun_Core_function_is.1181, align 8
  %4675 = getelementptr ptr, ptr %4663, i64 2
  store ptr %4673, ptr %4675, align 8
  %4676 = getelementptr ptr, ptr %4664, i64 2
  store ptr %4674, ptr %4676, align 8
  %4677 = load ptr, ptr @tag_Is3, align 8
  %4678 = load ptr, ptr @fun_Core_function_is3.1195, align 8
  %4679 = getelementptr ptr, ptr %4663, i64 3
  store ptr %4677, ptr %4679, align 8
  %4680 = getelementptr ptr, ptr %4664, i64 3
  store ptr %4678, ptr %4680, align 8
  %4681 = load ptr, ptr @tag_Is2, align 8
  %4682 = load ptr, ptr @fun_Core_function_is2.1191, align 8
  %4683 = getelementptr ptr, ptr %4663, i64 4
  store ptr %4681, ptr %4683, align 8
  %4684 = getelementptr ptr, ptr %4664, i64 4
  store ptr %4682, ptr %4684, align 8
  %4685 = load ptr, ptr @tag_Is4, align 8
  %4686 = load ptr, ptr @fun_Core_function_is4.1199, align 8
  %4687 = getelementptr ptr, ptr %4663, i64 5
  store ptr %4685, ptr %4687, align 8
  %4688 = getelementptr ptr, ptr %4664, i64 5
  store ptr %4686, ptr %4688, align 8
  %4689 = load ptr, ptr @tag_Is1, align 8
  %4690 = load ptr, ptr @fun_Core_function_is1.1187, align 8
  %4691 = getelementptr ptr, ptr %4663, i64 6
  store ptr %4689, ptr %4691, align 8
  %4692 = getelementptr ptr, ptr %4664, i64 6
  store ptr %4690, ptr %4692, align 8
  %4693 = load ptr, ptr @tag_Is5, align 8
  %4694 = load ptr, ptr @fun_Core_function_is5.1203, align 8
  %4695 = getelementptr ptr, ptr %4663, i64 7
  store ptr %4693, ptr %4695, align 8
  %4696 = getelementptr ptr, ptr %4664, i64 7
  store ptr %4694, ptr %4696, align 8
  %4697 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4698 = getelementptr ptr, ptr %4663, i64 8
  store ptr %4697, ptr %4698, align 8
  %4699 = getelementptr ptr, ptr %4664, i64 8
  store ptr %4614, ptr %4699, align 8
  %4700 = load ptr, ptr @tag_Run, align 8
  %4701 = load ptr, ptr @fun_Core_function_run.1207, align 8
  %4702 = getelementptr ptr, ptr %4663, i64 9
  store ptr %4700, ptr %4702, align 8
  %4703 = getelementptr ptr, ptr %4664, i64 9
  store ptr %4701, ptr %4703, align 8
  %4704 = getelementptr ptr, ptr %4663, i64 10
  store ptr null, ptr %4704, align 8
  %4705 = getelementptr ptr, ptr %4664, i64 10
  store ptr null, ptr %4705, align 8
  %4706 = call ptr @make_candy_struct(ptr %4663, ptr %4664)
  %4707 = load ptr, ptr @tag_Equals, align 8
  %4708 = call ptr @Builtins__structGet(ptr %997, ptr %4707)
  %4709 = load ptr, ptr @tag_Equals, align 8
  %4710 = call ptr @Builtins__structGet(ptr %997, ptr %4709)
  %4711 = load ptr, ptr @tag_Equals, align 8
  %4712 = call ptr @Builtins__structGet(ptr %997, ptr %4711)
  %4713 = load ptr, ptr @tag_TypeOf, align 8
  %4714 = call ptr @Builtins__structGet(ptr %997, ptr %4713)
  %4715 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4716 = getelementptr inbounds { ptr, ptr }, ptr %4715, i32 0, i32 0
  store ptr %4714, ptr %4716, align 8
  %4717 = getelementptr inbounds { ptr, ptr }, ptr %4715, i32 0, i32 1
  store ptr %4712, ptr %4717, align 8
  %4718 = call ptr @make_candy_function(ptr @Core_type_is.1214, ptr %4715, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4718, ptr @fun_Core_type_is.1215, align 8
  %4719 = alloca ptr, i64 3, align 8
  %4720 = alloca ptr, i64 3, align 8
  %4721 = load ptr, ptr @tag_TypeOf, align 8
  %4722 = getelementptr ptr, ptr %4719, i64 0
  store ptr %4721, ptr %4722, align 8
  %4723 = getelementptr ptr, ptr %4720, i64 0
  store ptr %4714, ptr %4723, align 8
  %4724 = load ptr, ptr @tag_Is, align 8
  %4725 = load ptr, ptr @fun_Core_type_is.1215, align 8
  %4726 = getelementptr ptr, ptr %4719, i64 1
  store ptr %4724, ptr %4726, align 8
  %4727 = getelementptr ptr, ptr %4720, i64 1
  store ptr %4725, ptr %4727, align 8
  %4728 = getelementptr ptr, ptr %4719, i64 2
  store ptr null, ptr %4728, align 8
  %4729 = getelementptr ptr, ptr %4720, i64 2
  store ptr null, ptr %4729, align 8
  %4730 = call ptr @make_candy_struct(ptr %4719, ptr %4720)
  %4731 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4732 = getelementptr inbounds { ptr }, ptr %4731, i32 0, i32 0
  store ptr %4730, ptr %4732, align 8
  %4733 = call ptr @make_candy_function(ptr @Core_function_is.1216, ptr %4731, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4733, ptr @fun_Core_function_is.1217, align 8
  %4734 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4735 = call ptr @Builtins__structGet(ptr %997, ptr %4734)
  %4736 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4737 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4736, i32 0, i32 0
  store ptr %997, ptr %4737, align 8
  %4738 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4736, i32 0, i32 1
  store ptr %4735, ptr %4738, align 8
  %4739 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4736, i32 0, i32 2
  store ptr %4730, ptr %4739, align 8
  %4740 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4736, i32 0, i32 3
  store ptr %4710, ptr %4740, align 8
  %4741 = call ptr @make_candy_function(ptr @Core_function_is0.1218, ptr %4736, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4741, ptr @fun_Core_function_is0.1219, align 8
  %4742 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4743 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4742, i32 0, i32 0
  store ptr %997, ptr %4743, align 8
  %4744 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4742, i32 0, i32 1
  store ptr %4735, ptr %4744, align 8
  %4745 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4742, i32 0, i32 2
  store ptr %4730, ptr %4745, align 8
  %4746 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4742, i32 0, i32 3
  store ptr %4710, ptr %4746, align 8
  %4747 = call ptr @make_candy_function(ptr @Core_function_is1.1222, ptr %4742, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4747, ptr @fun_Core_function_is1.1223, align 8
  %4748 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4749 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4748, i32 0, i32 0
  store ptr %997, ptr %4749, align 8
  %4750 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4748, i32 0, i32 1
  store ptr %4735, ptr %4750, align 8
  %4751 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4748, i32 0, i32 2
  store ptr %4730, ptr %4751, align 8
  %4752 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4748, i32 0, i32 3
  store ptr %4710, ptr %4752, align 8
  %4753 = call ptr @make_candy_function(ptr @Core_function_is2.1226, ptr %4748, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4753, ptr @fun_Core_function_is2.1227, align 8
  %4754 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4755 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4754, i32 0, i32 0
  store ptr %997, ptr %4755, align 8
  %4756 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4754, i32 0, i32 1
  store ptr %4735, ptr %4756, align 8
  %4757 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4754, i32 0, i32 2
  store ptr %4730, ptr %4757, align 8
  %4758 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4754, i32 0, i32 3
  store ptr %4710, ptr %4758, align 8
  %4759 = call ptr @make_candy_function(ptr @Core_function_is3.1230, ptr %4754, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4759, ptr @fun_Core_function_is3.1231, align 8
  %4760 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4761 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4760, i32 0, i32 0
  store ptr %997, ptr %4761, align 8
  %4762 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4760, i32 0, i32 1
  store ptr %4735, ptr %4762, align 8
  %4763 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4760, i32 0, i32 2
  store ptr %4730, ptr %4763, align 8
  %4764 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4760, i32 0, i32 3
  store ptr %4710, ptr %4764, align 8
  %4765 = call ptr @make_candy_function(ptr @Core_function_is4.1234, ptr %4760, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4765, ptr @fun_Core_function_is4.1235, align 8
  %4766 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4767 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4766, i32 0, i32 0
  store ptr %997, ptr %4767, align 8
  %4768 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4766, i32 0, i32 1
  store ptr %4735, ptr %4768, align 8
  %4769 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4766, i32 0, i32 2
  store ptr %4730, ptr %4769, align 8
  %4770 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4766, i32 0, i32 3
  store ptr %4710, ptr %4770, align 8
  %4771 = call ptr @make_candy_function(ptr @Core_function_is5.1238, ptr %4766, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4771, ptr @fun_Core_function_is5.1239, align 8
  %4772 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4773 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4772, i32 0, i32 0
  store ptr %997, ptr %4773, align 8
  %4774 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4772, i32 0, i32 1
  store ptr %4735, ptr %4774, align 8
  %4775 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4772, i32 0, i32 2
  store ptr %4730, ptr %4775, align 8
  %4776 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4772, i32 0, i32 3
  store ptr %4710, ptr %4776, align 8
  %4777 = call ptr @make_candy_function(ptr @Core_function_run.1242, ptr %4772, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4777, ptr @fun_Core_function_run.1243, align 8
  %4778 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4779 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4778, i32 0, i32 0
  store ptr %997, ptr %4779, align 8
  %4780 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4778, i32 0, i32 1
  store ptr %4735, ptr %4780, align 8
  %4781 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4778, i32 0, i32 2
  store ptr %4730, ptr %4781, align 8
  %4782 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4778, i32 0, i32 3
  store ptr %4710, ptr %4782, align 8
  %4783 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1246, ptr %4778, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4783, ptr @fun_Core_function_doNotRun.1247, align 8
  %4784 = alloca ptr, i64 11, align 8
  %4785 = alloca ptr, i64 11, align 8
  %4786 = load ptr, ptr @tag_Is0, align 8
  %4787 = load ptr, ptr @fun_Core_function_is0.1219, align 8
  %4788 = getelementptr ptr, ptr %4784, i64 0
  store ptr %4786, ptr %4788, align 8
  %4789 = getelementptr ptr, ptr %4785, i64 0
  store ptr %4787, ptr %4789, align 8
  %4790 = load ptr, ptr @tag_DoNotRun, align 8
  %4791 = load ptr, ptr @fun_Core_function_doNotRun.1247, align 8
  %4792 = getelementptr ptr, ptr %4784, i64 1
  store ptr %4790, ptr %4792, align 8
  %4793 = getelementptr ptr, ptr %4785, i64 1
  store ptr %4791, ptr %4793, align 8
  %4794 = load ptr, ptr @tag_Is, align 8
  %4795 = load ptr, ptr @fun_Core_function_is.1217, align 8
  %4796 = getelementptr ptr, ptr %4784, i64 2
  store ptr %4794, ptr %4796, align 8
  %4797 = getelementptr ptr, ptr %4785, i64 2
  store ptr %4795, ptr %4797, align 8
  %4798 = load ptr, ptr @tag_Is3, align 8
  %4799 = load ptr, ptr @fun_Core_function_is3.1231, align 8
  %4800 = getelementptr ptr, ptr %4784, i64 3
  store ptr %4798, ptr %4800, align 8
  %4801 = getelementptr ptr, ptr %4785, i64 3
  store ptr %4799, ptr %4801, align 8
  %4802 = load ptr, ptr @tag_Is2, align 8
  %4803 = load ptr, ptr @fun_Core_function_is2.1227, align 8
  %4804 = getelementptr ptr, ptr %4784, i64 4
  store ptr %4802, ptr %4804, align 8
  %4805 = getelementptr ptr, ptr %4785, i64 4
  store ptr %4803, ptr %4805, align 8
  %4806 = load ptr, ptr @tag_Is4, align 8
  %4807 = load ptr, ptr @fun_Core_function_is4.1235, align 8
  %4808 = getelementptr ptr, ptr %4784, i64 5
  store ptr %4806, ptr %4808, align 8
  %4809 = getelementptr ptr, ptr %4785, i64 5
  store ptr %4807, ptr %4809, align 8
  %4810 = load ptr, ptr @tag_Is1, align 8
  %4811 = load ptr, ptr @fun_Core_function_is1.1223, align 8
  %4812 = getelementptr ptr, ptr %4784, i64 6
  store ptr %4810, ptr %4812, align 8
  %4813 = getelementptr ptr, ptr %4785, i64 6
  store ptr %4811, ptr %4813, align 8
  %4814 = load ptr, ptr @tag_Is5, align 8
  %4815 = load ptr, ptr @fun_Core_function_is5.1239, align 8
  %4816 = getelementptr ptr, ptr %4784, i64 7
  store ptr %4814, ptr %4816, align 8
  %4817 = getelementptr ptr, ptr %4785, i64 7
  store ptr %4815, ptr %4817, align 8
  %4818 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4819 = getelementptr ptr, ptr %4784, i64 8
  store ptr %4818, ptr %4819, align 8
  %4820 = getelementptr ptr, ptr %4785, i64 8
  store ptr %4735, ptr %4820, align 8
  %4821 = load ptr, ptr @tag_Run, align 8
  %4822 = load ptr, ptr @fun_Core_function_run.1243, align 8
  %4823 = getelementptr ptr, ptr %4784, i64 9
  store ptr %4821, ptr %4823, align 8
  %4824 = getelementptr ptr, ptr %4785, i64 9
  store ptr %4822, ptr %4824, align 8
  %4825 = getelementptr ptr, ptr %4784, i64 10
  store ptr null, ptr %4825, align 8
  %4826 = getelementptr ptr, ptr %4785, i64 10
  store ptr null, ptr %4826, align 8
  %4827 = call ptr @make_candy_struct(ptr %4784, ptr %4785)
  %4828 = load ptr, ptr @tag_Equals, align 8
  %4829 = call ptr @Builtins__structGet(ptr %997, ptr %4828)
  %4830 = load ptr, ptr @tag_TypeOf, align 8
  %4831 = call ptr @Builtins__structGet(ptr %997, ptr %4830)
  %4832 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4833 = getelementptr inbounds { ptr }, ptr %4832, i32 0, i32 0
  store ptr %4827, ptr %4833, align 8
  %4834 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.1250, ptr %4832, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4834, ptr @fun_Core_bool_lazyAnd.1251, align 8
  %4835 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4836 = call ptr @make_candy_function(ptr @Core_bool_and.1278, ptr %4835, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4836, ptr @fun_Core_bool_and.1279, align 8
  %4837 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4838 = getelementptr inbounds { ptr }, ptr %4837, i32 0, i32 0
  store ptr %4827, ptr %4838, align 8
  %4839 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.1282, ptr %4837, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4839, ptr @fun_Core_bool_lazyOr.1283, align 8
  %4840 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4841 = call ptr @make_candy_function(ptr @Core_bool_or.1310, ptr %4840, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4841, ptr @fun_Core_bool_or.1311, align 8
  %4842 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4843 = getelementptr inbounds { ptr }, ptr %4842, i32 0, i32 0
  store ptr %4708, ptr %4843, align 8
  %4844 = call ptr @make_candy_function(ptr @Core_bool_xor.1314, ptr %4842, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4844, ptr @fun_Core_bool_xor.1315, align 8
  %4845 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4846 = call ptr @make_candy_function(ptr @Core_bool_implies.1316, ptr %4845, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4846, ptr @fun_Core_bool_implies.1317, align 8
  %4847 = alloca ptr, i64 9, align 8
  %4848 = alloca ptr, i64 9, align 8
  %4849 = load ptr, ptr @tag_LazyOr, align 8
  %4850 = load ptr, ptr @fun_Core_bool_lazyOr.1283, align 8
  %4851 = getelementptr ptr, ptr %4847, i64 0
  store ptr %4849, ptr %4851, align 8
  %4852 = getelementptr ptr, ptr %4848, i64 0
  store ptr %4850, ptr %4852, align 8
  %4853 = load ptr, ptr @tag_Implies, align 8
  %4854 = load ptr, ptr @fun_Core_bool_implies.1317, align 8
  %4855 = getelementptr ptr, ptr %4847, i64 1
  store ptr %4853, ptr %4855, align 8
  %4856 = getelementptr ptr, ptr %4848, i64 1
  store ptr %4854, ptr %4856, align 8
  %4857 = load ptr, ptr @tag_Not, align 8
  %4858 = load ptr, ptr @fun_Core_bool_not, align 8
  %4859 = getelementptr ptr, ptr %4847, i64 2
  store ptr %4857, ptr %4859, align 8
  %4860 = getelementptr ptr, ptr %4848, i64 2
  store ptr %4858, ptr %4860, align 8
  %4861 = load ptr, ptr @tag_And, align 8
  %4862 = load ptr, ptr @fun_Core_bool_and.1279, align 8
  %4863 = getelementptr ptr, ptr %4847, i64 3
  store ptr %4861, ptr %4863, align 8
  %4864 = getelementptr ptr, ptr %4848, i64 3
  store ptr %4862, ptr %4864, align 8
  %4865 = load ptr, ptr @tag_LazyAnd, align 8
  %4866 = load ptr, ptr @fun_Core_bool_lazyAnd.1251, align 8
  %4867 = getelementptr ptr, ptr %4847, i64 4
  store ptr %4865, ptr %4867, align 8
  %4868 = getelementptr ptr, ptr %4848, i64 4
  store ptr %4866, ptr %4868, align 8
  %4869 = load ptr, ptr @tag_Is, align 8
  %4870 = load ptr, ptr @fun_Core_bool_is, align 8
  %4871 = getelementptr ptr, ptr %4847, i64 5
  store ptr %4869, ptr %4871, align 8
  %4872 = getelementptr ptr, ptr %4848, i64 5
  store ptr %4870, ptr %4872, align 8
  %4873 = load ptr, ptr @tag_Or, align 8
  %4874 = load ptr, ptr @fun_Core_bool_or.1311, align 8
  %4875 = getelementptr ptr, ptr %4847, i64 6
  store ptr %4873, ptr %4875, align 8
  %4876 = getelementptr ptr, ptr %4848, i64 6
  store ptr %4874, ptr %4876, align 8
  %4877 = load ptr, ptr @tag_Xor, align 8
  %4878 = load ptr, ptr @fun_Core_bool_xor.1315, align 8
  %4879 = getelementptr ptr, ptr %4847, i64 7
  store ptr %4877, ptr %4879, align 8
  %4880 = getelementptr ptr, ptr %4848, i64 7
  store ptr %4878, ptr %4880, align 8
  %4881 = getelementptr ptr, ptr %4847, i64 8
  store ptr null, ptr %4881, align 8
  %4882 = getelementptr ptr, ptr %4848, i64 8
  store ptr null, ptr %4882, align 8
  %4883 = call ptr @make_candy_struct(ptr %4847, ptr %4848)
  %4884 = load ptr, ptr @tag_Equals, align 8
  %4885 = call ptr @Builtins__structGet(ptr %997, ptr %4884)
  %4886 = load ptr, ptr @tag_Equals, align 8
  %4887 = call ptr @Builtins__structGet(ptr %997, ptr %4886)
  %4888 = load ptr, ptr @tag_Equals, align 8
  %4889 = call ptr @Builtins__structGet(ptr %997, ptr %4888)
  %4890 = load ptr, ptr @tag_TypeOf, align 8
  %4891 = call ptr @Builtins__structGet(ptr %997, ptr %4890)
  %4892 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4893 = getelementptr inbounds { ptr, ptr }, ptr %4892, i32 0, i32 0
  store ptr %4889, ptr %4893, align 8
  %4894 = getelementptr inbounds { ptr, ptr }, ptr %4892, i32 0, i32 1
  store ptr %4891, ptr %4894, align 8
  %4895 = call ptr @make_candy_function(ptr @Core_type_is.1320, ptr %4892, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4895, ptr @fun_Core_type_is.1321, align 8
  %4896 = alloca ptr, i64 3, align 8
  %4897 = alloca ptr, i64 3, align 8
  %4898 = load ptr, ptr @tag_TypeOf, align 8
  %4899 = getelementptr ptr, ptr %4896, i64 0
  store ptr %4898, ptr %4899, align 8
  %4900 = getelementptr ptr, ptr %4897, i64 0
  store ptr %4891, ptr %4900, align 8
  %4901 = load ptr, ptr @tag_Is, align 8
  %4902 = load ptr, ptr @fun_Core_type_is.1321, align 8
  %4903 = getelementptr ptr, ptr %4896, i64 1
  store ptr %4901, ptr %4903, align 8
  %4904 = getelementptr ptr, ptr %4897, i64 1
  store ptr %4902, ptr %4904, align 8
  %4905 = getelementptr ptr, ptr %4896, i64 2
  store ptr null, ptr %4905, align 8
  %4906 = getelementptr ptr, ptr %4897, i64 2
  store ptr null, ptr %4906, align 8
  %4907 = call ptr @make_candy_struct(ptr %4896, ptr %4897)
  %4908 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4909 = getelementptr inbounds { ptr }, ptr %4908, i32 0, i32 0
  store ptr %4907, ptr %4909, align 8
  %4910 = call ptr @make_candy_function(ptr @Core_function_is.1322, ptr %4908, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4910, ptr @fun_Core_function_is.1323, align 8
  %4911 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4912 = call ptr @Builtins__structGet(ptr %997, ptr %4911)
  %4913 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4914 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4913, i32 0, i32 0
  store ptr %997, ptr %4914, align 8
  %4915 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4913, i32 0, i32 1
  store ptr %4912, ptr %4915, align 8
  %4916 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4913, i32 0, i32 2
  store ptr %4907, ptr %4916, align 8
  %4917 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4913, i32 0, i32 3
  store ptr %4887, ptr %4917, align 8
  %4918 = call ptr @make_candy_function(ptr @Core_function_is0.1324, ptr %4913, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4918, ptr @fun_Core_function_is0.1325, align 8
  %4919 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4920 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4919, i32 0, i32 0
  store ptr %997, ptr %4920, align 8
  %4921 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4919, i32 0, i32 1
  store ptr %4912, ptr %4921, align 8
  %4922 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4919, i32 0, i32 2
  store ptr %4907, ptr %4922, align 8
  %4923 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4919, i32 0, i32 3
  store ptr %4887, ptr %4923, align 8
  %4924 = call ptr @make_candy_function(ptr @Core_function_is1.1328, ptr %4919, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4924, ptr @fun_Core_function_is1.1329, align 8
  %4925 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4926 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4925, i32 0, i32 0
  store ptr %997, ptr %4926, align 8
  %4927 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4925, i32 0, i32 1
  store ptr %4912, ptr %4927, align 8
  %4928 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4925, i32 0, i32 2
  store ptr %4907, ptr %4928, align 8
  %4929 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4925, i32 0, i32 3
  store ptr %4887, ptr %4929, align 8
  %4930 = call ptr @make_candy_function(ptr @Core_function_is2.1332, ptr %4925, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4930, ptr @fun_Core_function_is2.1333, align 8
  %4931 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4932 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4931, i32 0, i32 0
  store ptr %997, ptr %4932, align 8
  %4933 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4931, i32 0, i32 1
  store ptr %4912, ptr %4933, align 8
  %4934 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4931, i32 0, i32 2
  store ptr %4907, ptr %4934, align 8
  %4935 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4931, i32 0, i32 3
  store ptr %4887, ptr %4935, align 8
  %4936 = call ptr @make_candy_function(ptr @Core_function_is3.1336, ptr %4931, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4936, ptr @fun_Core_function_is3.1337, align 8
  %4937 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4938 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4937, i32 0, i32 0
  store ptr %997, ptr %4938, align 8
  %4939 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4937, i32 0, i32 1
  store ptr %4912, ptr %4939, align 8
  %4940 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4937, i32 0, i32 2
  store ptr %4907, ptr %4940, align 8
  %4941 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4937, i32 0, i32 3
  store ptr %4887, ptr %4941, align 8
  %4942 = call ptr @make_candy_function(ptr @Core_function_is4.1340, ptr %4937, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4942, ptr @fun_Core_function_is4.1341, align 8
  %4943 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4944 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4943, i32 0, i32 0
  store ptr %997, ptr %4944, align 8
  %4945 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4943, i32 0, i32 1
  store ptr %4912, ptr %4945, align 8
  %4946 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4943, i32 0, i32 2
  store ptr %4907, ptr %4946, align 8
  %4947 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4943, i32 0, i32 3
  store ptr %4887, ptr %4947, align 8
  %4948 = call ptr @make_candy_function(ptr @Core_function_is5.1344, ptr %4943, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4948, ptr @fun_Core_function_is5.1345, align 8
  %4949 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4950 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4949, i32 0, i32 0
  store ptr %997, ptr %4950, align 8
  %4951 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4949, i32 0, i32 1
  store ptr %4912, ptr %4951, align 8
  %4952 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4949, i32 0, i32 2
  store ptr %4907, ptr %4952, align 8
  %4953 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4949, i32 0, i32 3
  store ptr %4887, ptr %4953, align 8
  %4954 = call ptr @make_candy_function(ptr @Core_function_run.1348, ptr %4949, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4954, ptr @fun_Core_function_run.1349, align 8
  %4955 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4956 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4955, i32 0, i32 0
  store ptr %997, ptr %4956, align 8
  %4957 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4955, i32 0, i32 1
  store ptr %4912, ptr %4957, align 8
  %4958 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4955, i32 0, i32 2
  store ptr %4907, ptr %4958, align 8
  %4959 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %4955, i32 0, i32 3
  store ptr %4887, ptr %4959, align 8
  %4960 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1352, ptr %4955, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %4960, ptr @fun_Core_function_doNotRun.1353, align 8
  %4961 = alloca ptr, i64 11, align 8
  %4962 = alloca ptr, i64 11, align 8
  %4963 = load ptr, ptr @tag_Is0, align 8
  %4964 = load ptr, ptr @fun_Core_function_is0.1325, align 8
  %4965 = getelementptr ptr, ptr %4961, i64 0
  store ptr %4963, ptr %4965, align 8
  %4966 = getelementptr ptr, ptr %4962, i64 0
  store ptr %4964, ptr %4966, align 8
  %4967 = load ptr, ptr @tag_DoNotRun, align 8
  %4968 = load ptr, ptr @fun_Core_function_doNotRun.1353, align 8
  %4969 = getelementptr ptr, ptr %4961, i64 1
  store ptr %4967, ptr %4969, align 8
  %4970 = getelementptr ptr, ptr %4962, i64 1
  store ptr %4968, ptr %4970, align 8
  %4971 = load ptr, ptr @tag_Is, align 8
  %4972 = load ptr, ptr @fun_Core_function_is.1323, align 8
  %4973 = getelementptr ptr, ptr %4961, i64 2
  store ptr %4971, ptr %4973, align 8
  %4974 = getelementptr ptr, ptr %4962, i64 2
  store ptr %4972, ptr %4974, align 8
  %4975 = load ptr, ptr @tag_Is3, align 8
  %4976 = load ptr, ptr @fun_Core_function_is3.1337, align 8
  %4977 = getelementptr ptr, ptr %4961, i64 3
  store ptr %4975, ptr %4977, align 8
  %4978 = getelementptr ptr, ptr %4962, i64 3
  store ptr %4976, ptr %4978, align 8
  %4979 = load ptr, ptr @tag_Is2, align 8
  %4980 = load ptr, ptr @fun_Core_function_is2.1333, align 8
  %4981 = getelementptr ptr, ptr %4961, i64 4
  store ptr %4979, ptr %4981, align 8
  %4982 = getelementptr ptr, ptr %4962, i64 4
  store ptr %4980, ptr %4982, align 8
  %4983 = load ptr, ptr @tag_Is4, align 8
  %4984 = load ptr, ptr @fun_Core_function_is4.1341, align 8
  %4985 = getelementptr ptr, ptr %4961, i64 5
  store ptr %4983, ptr %4985, align 8
  %4986 = getelementptr ptr, ptr %4962, i64 5
  store ptr %4984, ptr %4986, align 8
  %4987 = load ptr, ptr @tag_Is1, align 8
  %4988 = load ptr, ptr @fun_Core_function_is1.1329, align 8
  %4989 = getelementptr ptr, ptr %4961, i64 6
  store ptr %4987, ptr %4989, align 8
  %4990 = getelementptr ptr, ptr %4962, i64 6
  store ptr %4988, ptr %4990, align 8
  %4991 = load ptr, ptr @tag_Is5, align 8
  %4992 = load ptr, ptr @fun_Core_function_is5.1345, align 8
  %4993 = getelementptr ptr, ptr %4961, i64 7
  store ptr %4991, ptr %4993, align 8
  %4994 = getelementptr ptr, ptr %4962, i64 7
  store ptr %4992, ptr %4994, align 8
  %4995 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4996 = getelementptr ptr, ptr %4961, i64 8
  store ptr %4995, ptr %4996, align 8
  %4997 = getelementptr ptr, ptr %4962, i64 8
  store ptr %4912, ptr %4997, align 8
  %4998 = load ptr, ptr @tag_Run, align 8
  %4999 = load ptr, ptr @fun_Core_function_run.1349, align 8
  %5000 = getelementptr ptr, ptr %4961, i64 9
  store ptr %4998, ptr %5000, align 8
  %5001 = getelementptr ptr, ptr %4962, i64 9
  store ptr %4999, ptr %5001, align 8
  %5002 = getelementptr ptr, ptr %4961, i64 10
  store ptr null, ptr %5002, align 8
  %5003 = getelementptr ptr, ptr %4962, i64 10
  store ptr null, ptr %5003, align 8
  %5004 = call ptr @make_candy_struct(ptr %4961, ptr %4962)
  %5005 = load ptr, ptr @tag_Equals, align 8
  %5006 = call ptr @Builtins__structGet(ptr %997, ptr %5005)
  %5007 = load ptr, ptr @tag_TypeOf, align 8
  %5008 = call ptr @Builtins__structGet(ptr %997, ptr %5007)
  %5009 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5010 = getelementptr inbounds { ptr }, ptr %5009, i32 0, i32 0
  store ptr %5004, ptr %5010, align 8
  %5011 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.1356, ptr %5009, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5011, ptr @fun_Core_bool_lazyAnd.1357, align 8
  %5012 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5013 = call ptr @make_candy_function(ptr @Core_bool_and.1384, ptr %5012, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5013, ptr @fun_Core_bool_and.1385, align 8
  %5014 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5015 = getelementptr inbounds { ptr }, ptr %5014, i32 0, i32 0
  store ptr %5004, ptr %5015, align 8
  %5016 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.1388, ptr %5014, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5016, ptr @fun_Core_bool_lazyOr.1389, align 8
  %5017 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5018 = call ptr @make_candy_function(ptr @Core_bool_or.1416, ptr %5017, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5018, ptr @fun_Core_bool_or.1417, align 8
  %5019 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5020 = getelementptr inbounds { ptr }, ptr %5019, i32 0, i32 0
  store ptr %4885, ptr %5020, align 8
  %5021 = call ptr @make_candy_function(ptr @Core_bool_xor.1420, ptr %5019, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5021, ptr @fun_Core_bool_xor.1421, align 8
  %5022 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5023 = call ptr @make_candy_function(ptr @Core_bool_implies.1422, ptr %5022, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5023, ptr @fun_Core_bool_implies.1423, align 8
  %5024 = alloca ptr, i64 9, align 8
  %5025 = alloca ptr, i64 9, align 8
  %5026 = load ptr, ptr @tag_LazyOr, align 8
  %5027 = load ptr, ptr @fun_Core_bool_lazyOr.1389, align 8
  %5028 = getelementptr ptr, ptr %5024, i64 0
  store ptr %5026, ptr %5028, align 8
  %5029 = getelementptr ptr, ptr %5025, i64 0
  store ptr %5027, ptr %5029, align 8
  %5030 = load ptr, ptr @tag_Implies, align 8
  %5031 = load ptr, ptr @fun_Core_bool_implies.1423, align 8
  %5032 = getelementptr ptr, ptr %5024, i64 1
  store ptr %5030, ptr %5032, align 8
  %5033 = getelementptr ptr, ptr %5025, i64 1
  store ptr %5031, ptr %5033, align 8
  %5034 = load ptr, ptr @tag_Not, align 8
  %5035 = load ptr, ptr @fun_Core_bool_not, align 8
  %5036 = getelementptr ptr, ptr %5024, i64 2
  store ptr %5034, ptr %5036, align 8
  %5037 = getelementptr ptr, ptr %5025, i64 2
  store ptr %5035, ptr %5037, align 8
  %5038 = load ptr, ptr @tag_And, align 8
  %5039 = load ptr, ptr @fun_Core_bool_and.1385, align 8
  %5040 = getelementptr ptr, ptr %5024, i64 3
  store ptr %5038, ptr %5040, align 8
  %5041 = getelementptr ptr, ptr %5025, i64 3
  store ptr %5039, ptr %5041, align 8
  %5042 = load ptr, ptr @tag_LazyAnd, align 8
  %5043 = load ptr, ptr @fun_Core_bool_lazyAnd.1357, align 8
  %5044 = getelementptr ptr, ptr %5024, i64 4
  store ptr %5042, ptr %5044, align 8
  %5045 = getelementptr ptr, ptr %5025, i64 4
  store ptr %5043, ptr %5045, align 8
  %5046 = load ptr, ptr @tag_Is, align 8
  %5047 = load ptr, ptr @fun_Core_bool_is, align 8
  %5048 = getelementptr ptr, ptr %5024, i64 5
  store ptr %5046, ptr %5048, align 8
  %5049 = getelementptr ptr, ptr %5025, i64 5
  store ptr %5047, ptr %5049, align 8
  %5050 = load ptr, ptr @tag_Or, align 8
  %5051 = load ptr, ptr @fun_Core_bool_or.1417, align 8
  %5052 = getelementptr ptr, ptr %5024, i64 6
  store ptr %5050, ptr %5052, align 8
  %5053 = getelementptr ptr, ptr %5025, i64 6
  store ptr %5051, ptr %5053, align 8
  %5054 = load ptr, ptr @tag_Xor, align 8
  %5055 = load ptr, ptr @fun_Core_bool_xor.1421, align 8
  %5056 = getelementptr ptr, ptr %5024, i64 7
  store ptr %5054, ptr %5056, align 8
  %5057 = getelementptr ptr, ptr %5025, i64 7
  store ptr %5055, ptr %5057, align 8
  %5058 = getelementptr ptr, ptr %5024, i64 8
  store ptr null, ptr %5058, align 8
  %5059 = getelementptr ptr, ptr %5025, i64 8
  store ptr null, ptr %5059, align 8
  %5060 = call ptr @make_candy_struct(ptr %5024, ptr %5025)
  %5061 = load ptr, ptr @tag_Equals, align 8
  %5062 = call ptr @Builtins__structGet(ptr %997, ptr %5061)
  %5063 = load ptr, ptr @tag_Equals, align 8
  %5064 = call ptr @Builtins__structGet(ptr %997, ptr %5063)
  %5065 = load ptr, ptr @tag_Equals, align 8
  %5066 = call ptr @Builtins__structGet(ptr %997, ptr %5065)
  %5067 = load ptr, ptr @tag_TypeOf, align 8
  %5068 = call ptr @Builtins__structGet(ptr %997, ptr %5067)
  %5069 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5070 = call ptr @Builtins__structGet(ptr %997, ptr %5069)
  %5071 = load ptr, ptr @tag_Equals, align 8
  %5072 = call ptr @Builtins__structGet(ptr %997, ptr %5071)
  %5073 = load ptr, ptr @tag_TypeOf, align 8
  %5074 = call ptr @Builtins__structGet(ptr %997, ptr %5073)
  %5075 = load ptr, ptr @tag_Equals, align 8
  %5076 = call ptr @Builtins__structGet(ptr %997, ptr %5075)
  %5077 = load ptr, ptr @tag_Equals, align 8
  %5078 = call ptr @Builtins__structGet(ptr %997, ptr %5077)
  %5079 = load ptr, ptr @tag_Equals, align 8
  %5080 = call ptr @Builtins__structGet(ptr %997, ptr %5079)
  %5081 = load ptr, ptr @tag_TypeOf, align 8
  %5082 = call ptr @Builtins__structGet(ptr %997, ptr %5081)
  %5083 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5084 = call ptr @Builtins__structGet(ptr %997, ptr %5083)
  %5085 = load ptr, ptr @tag_Equals, align 8
  %5086 = call ptr @Builtins__structGet(ptr %997, ptr %5085)
  %5087 = load ptr, ptr @tag_TypeOf, align 8
  %5088 = call ptr @Builtins__structGet(ptr %997, ptr %5087)
  %5089 = load ptr, ptr @tag_IfElse, align 8
  %5090 = call ptr @Builtins__structGet(ptr %997, ptr %5089)
  %5091 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5092 = getelementptr inbounds { ptr }, ptr %5091, i32 0, i32 0
  store ptr %5060, ptr %5092, align 8
  %5093 = call ptr @make_candy_function(ptr @Core_check_check.1426, ptr %5091, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5093, ptr @fun_Core_check_check.1427, align 8
  %5094 = load ptr, ptr @tag_Equals, align 8
  %5095 = call ptr @Builtins__structGet(ptr %997, ptr %5094)
  %5096 = load ptr, ptr @tag_Equals, align 8
  %5097 = call ptr @Builtins__structGet(ptr %997, ptr %5096)
  %5098 = load ptr, ptr @tag_Equals, align 8
  %5099 = call ptr @Builtins__structGet(ptr %997, ptr %5098)
  %5100 = load ptr, ptr @tag_TypeOf, align 8
  %5101 = call ptr @Builtins__structGet(ptr %997, ptr %5100)
  %5102 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5103 = call ptr @Builtins__structGet(ptr %997, ptr %5102)
  %5104 = load ptr, ptr @tag_Equals, align 8
  %5105 = call ptr @Builtins__structGet(ptr %997, ptr %5104)
  %5106 = load ptr, ptr @tag_TypeOf, align 8
  %5107 = call ptr @Builtins__structGet(ptr %997, ptr %5106)
  %5108 = load ptr, ptr @tag_Equals, align 8
  %5109 = call ptr @Builtins__structGet(ptr %997, ptr %5108)
  %5110 = load ptr, ptr @tag_Equals, align 8
  %5111 = call ptr @Builtins__structGet(ptr %997, ptr %5110)
  %5112 = load ptr, ptr @tag_Equals, align 8
  %5113 = call ptr @Builtins__structGet(ptr %997, ptr %5112)
  %5114 = load ptr, ptr @tag_TypeOf, align 8
  %5115 = call ptr @Builtins__structGet(ptr %997, ptr %5114)
  %5116 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5117 = getelementptr inbounds { ptr, ptr }, ptr %5116, i32 0, i32 0
  store ptr %5115, ptr %5117, align 8
  %5118 = getelementptr inbounds { ptr, ptr }, ptr %5116, i32 0, i32 1
  store ptr %5113, ptr %5118, align 8
  %5119 = call ptr @make_candy_function(ptr @Core_type_is.1432, ptr %5116, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5119, ptr @fun_Core_type_is.1433, align 8
  %5120 = alloca ptr, i64 3, align 8
  %5121 = alloca ptr, i64 3, align 8
  %5122 = load ptr, ptr @tag_TypeOf, align 8
  %5123 = getelementptr ptr, ptr %5120, i64 0
  store ptr %5122, ptr %5123, align 8
  %5124 = getelementptr ptr, ptr %5121, i64 0
  store ptr %5115, ptr %5124, align 8
  %5125 = load ptr, ptr @tag_Is, align 8
  %5126 = load ptr, ptr @fun_Core_type_is.1433, align 8
  %5127 = getelementptr ptr, ptr %5120, i64 1
  store ptr %5125, ptr %5127, align 8
  %5128 = getelementptr ptr, ptr %5121, i64 1
  store ptr %5126, ptr %5128, align 8
  %5129 = getelementptr ptr, ptr %5120, i64 2
  store ptr null, ptr %5129, align 8
  %5130 = getelementptr ptr, ptr %5121, i64 2
  store ptr null, ptr %5130, align 8
  %5131 = call ptr @make_candy_struct(ptr %5120, ptr %5121)
  %5132 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5133 = getelementptr inbounds { ptr }, ptr %5132, i32 0, i32 0
  store ptr %5131, ptr %5133, align 8
  %5134 = call ptr @make_candy_function(ptr @Core_function_is.1434, ptr %5132, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5134, ptr @fun_Core_function_is.1435, align 8
  %5135 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5136 = call ptr @Builtins__structGet(ptr %997, ptr %5135)
  %5137 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5138 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5137, i32 0, i32 0
  store ptr %997, ptr %5138, align 8
  %5139 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5137, i32 0, i32 1
  store ptr %5136, ptr %5139, align 8
  %5140 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5137, i32 0, i32 2
  store ptr %5131, ptr %5140, align 8
  %5141 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5137, i32 0, i32 3
  store ptr %5111, ptr %5141, align 8
  %5142 = call ptr @make_candy_function(ptr @Core_function_is0.1436, ptr %5137, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5142, ptr @fun_Core_function_is0.1437, align 8
  %5143 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5144 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5143, i32 0, i32 0
  store ptr %997, ptr %5144, align 8
  %5145 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5143, i32 0, i32 1
  store ptr %5136, ptr %5145, align 8
  %5146 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5143, i32 0, i32 2
  store ptr %5131, ptr %5146, align 8
  %5147 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5143, i32 0, i32 3
  store ptr %5111, ptr %5147, align 8
  %5148 = call ptr @make_candy_function(ptr @Core_function_is1.1440, ptr %5143, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5148, ptr @fun_Core_function_is1.1441, align 8
  %5149 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5150 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5149, i32 0, i32 0
  store ptr %997, ptr %5150, align 8
  %5151 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5149, i32 0, i32 1
  store ptr %5136, ptr %5151, align 8
  %5152 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5149, i32 0, i32 2
  store ptr %5131, ptr %5152, align 8
  %5153 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5149, i32 0, i32 3
  store ptr %5111, ptr %5153, align 8
  %5154 = call ptr @make_candy_function(ptr @Core_function_is2.1444, ptr %5149, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5154, ptr @fun_Core_function_is2.1445, align 8
  %5155 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5156 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5155, i32 0, i32 0
  store ptr %997, ptr %5156, align 8
  %5157 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5155, i32 0, i32 1
  store ptr %5136, ptr %5157, align 8
  %5158 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5155, i32 0, i32 2
  store ptr %5131, ptr %5158, align 8
  %5159 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5155, i32 0, i32 3
  store ptr %5111, ptr %5159, align 8
  %5160 = call ptr @make_candy_function(ptr @Core_function_is3.1448, ptr %5155, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5160, ptr @fun_Core_function_is3.1449, align 8
  %5161 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5162 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5161, i32 0, i32 0
  store ptr %997, ptr %5162, align 8
  %5163 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5161, i32 0, i32 1
  store ptr %5136, ptr %5163, align 8
  %5164 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5161, i32 0, i32 2
  store ptr %5131, ptr %5164, align 8
  %5165 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5161, i32 0, i32 3
  store ptr %5111, ptr %5165, align 8
  %5166 = call ptr @make_candy_function(ptr @Core_function_is4.1452, ptr %5161, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5166, ptr @fun_Core_function_is4.1453, align 8
  %5167 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5168 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5167, i32 0, i32 0
  store ptr %997, ptr %5168, align 8
  %5169 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5167, i32 0, i32 1
  store ptr %5136, ptr %5169, align 8
  %5170 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5167, i32 0, i32 2
  store ptr %5131, ptr %5170, align 8
  %5171 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5167, i32 0, i32 3
  store ptr %5111, ptr %5171, align 8
  %5172 = call ptr @make_candy_function(ptr @Core_function_is5.1456, ptr %5167, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5172, ptr @fun_Core_function_is5.1457, align 8
  %5173 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5174 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5173, i32 0, i32 0
  store ptr %997, ptr %5174, align 8
  %5175 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5173, i32 0, i32 1
  store ptr %5136, ptr %5175, align 8
  %5176 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5173, i32 0, i32 2
  store ptr %5131, ptr %5176, align 8
  %5177 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5173, i32 0, i32 3
  store ptr %5111, ptr %5177, align 8
  %5178 = call ptr @make_candy_function(ptr @Core_function_run.1460, ptr %5173, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5178, ptr @fun_Core_function_run.1461, align 8
  %5179 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5180 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5179, i32 0, i32 0
  store ptr %997, ptr %5180, align 8
  %5181 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5179, i32 0, i32 1
  store ptr %5136, ptr %5181, align 8
  %5182 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5179, i32 0, i32 2
  store ptr %5131, ptr %5182, align 8
  %5183 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5179, i32 0, i32 3
  store ptr %5111, ptr %5183, align 8
  %5184 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1464, ptr %5179, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5184, ptr @fun_Core_function_doNotRun.1465, align 8
  %5185 = alloca ptr, i64 11, align 8
  %5186 = alloca ptr, i64 11, align 8
  %5187 = load ptr, ptr @tag_Is0, align 8
  %5188 = load ptr, ptr @fun_Core_function_is0.1437, align 8
  %5189 = getelementptr ptr, ptr %5185, i64 0
  store ptr %5187, ptr %5189, align 8
  %5190 = getelementptr ptr, ptr %5186, i64 0
  store ptr %5188, ptr %5190, align 8
  %5191 = load ptr, ptr @tag_DoNotRun, align 8
  %5192 = load ptr, ptr @fun_Core_function_doNotRun.1465, align 8
  %5193 = getelementptr ptr, ptr %5185, i64 1
  store ptr %5191, ptr %5193, align 8
  %5194 = getelementptr ptr, ptr %5186, i64 1
  store ptr %5192, ptr %5194, align 8
  %5195 = load ptr, ptr @tag_Is, align 8
  %5196 = load ptr, ptr @fun_Core_function_is.1435, align 8
  %5197 = getelementptr ptr, ptr %5185, i64 2
  store ptr %5195, ptr %5197, align 8
  %5198 = getelementptr ptr, ptr %5186, i64 2
  store ptr %5196, ptr %5198, align 8
  %5199 = load ptr, ptr @tag_Is3, align 8
  %5200 = load ptr, ptr @fun_Core_function_is3.1449, align 8
  %5201 = getelementptr ptr, ptr %5185, i64 3
  store ptr %5199, ptr %5201, align 8
  %5202 = getelementptr ptr, ptr %5186, i64 3
  store ptr %5200, ptr %5202, align 8
  %5203 = load ptr, ptr @tag_Is2, align 8
  %5204 = load ptr, ptr @fun_Core_function_is2.1445, align 8
  %5205 = getelementptr ptr, ptr %5185, i64 4
  store ptr %5203, ptr %5205, align 8
  %5206 = getelementptr ptr, ptr %5186, i64 4
  store ptr %5204, ptr %5206, align 8
  %5207 = load ptr, ptr @tag_Is4, align 8
  %5208 = load ptr, ptr @fun_Core_function_is4.1453, align 8
  %5209 = getelementptr ptr, ptr %5185, i64 5
  store ptr %5207, ptr %5209, align 8
  %5210 = getelementptr ptr, ptr %5186, i64 5
  store ptr %5208, ptr %5210, align 8
  %5211 = load ptr, ptr @tag_Is1, align 8
  %5212 = load ptr, ptr @fun_Core_function_is1.1441, align 8
  %5213 = getelementptr ptr, ptr %5185, i64 6
  store ptr %5211, ptr %5213, align 8
  %5214 = getelementptr ptr, ptr %5186, i64 6
  store ptr %5212, ptr %5214, align 8
  %5215 = load ptr, ptr @tag_Is5, align 8
  %5216 = load ptr, ptr @fun_Core_function_is5.1457, align 8
  %5217 = getelementptr ptr, ptr %5185, i64 7
  store ptr %5215, ptr %5217, align 8
  %5218 = getelementptr ptr, ptr %5186, i64 7
  store ptr %5216, ptr %5218, align 8
  %5219 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5220 = getelementptr ptr, ptr %5185, i64 8
  store ptr %5219, ptr %5220, align 8
  %5221 = getelementptr ptr, ptr %5186, i64 8
  store ptr %5136, ptr %5221, align 8
  %5222 = load ptr, ptr @tag_Run, align 8
  %5223 = load ptr, ptr @fun_Core_function_run.1461, align 8
  %5224 = getelementptr ptr, ptr %5185, i64 9
  store ptr %5222, ptr %5224, align 8
  %5225 = getelementptr ptr, ptr %5186, i64 9
  store ptr %5223, ptr %5225, align 8
  %5226 = getelementptr ptr, ptr %5185, i64 10
  store ptr null, ptr %5226, align 8
  %5227 = getelementptr ptr, ptr %5186, i64 10
  store ptr null, ptr %5227, align 8
  %5228 = call ptr @make_candy_struct(ptr %5185, ptr %5186)
  %5229 = load ptr, ptr @tag_Equals, align 8
  %5230 = call ptr @Builtins__structGet(ptr %997, ptr %5229)
  %5231 = load ptr, ptr @tag_TypeOf, align 8
  %5232 = call ptr @Builtins__structGet(ptr %997, ptr %5231)
  %5233 = load ptr, ptr @tag_IfElse, align 8
  %5234 = call ptr @Builtins__structGet(ptr %997, ptr %5233)
  %5235 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5236 = getelementptr inbounds { ptr }, ptr %5235, i32 0, i32 0
  store ptr %5228, ptr %5236, align 8
  %5237 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive.1468, ptr %5235, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5237, ptr @fun_Core_controlFlow_recursive.1469, align 8
  %5238 = load ptr, ptr @tag_Equals, align 8
  %5239 = call ptr @Builtins__structGet(ptr %997, ptr %5238)
  %5240 = load ptr, ptr @tag_Equals, align 8
  %5241 = call ptr @Builtins__structGet(ptr %997, ptr %5240)
  %5242 = load ptr, ptr @tag_TypeOf, align 8
  %5243 = call ptr @Builtins__structGet(ptr %997, ptr %5242)
  %5244 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5245 = getelementptr inbounds { ptr, ptr }, ptr %5244, i32 0, i32 0
  store ptr %5241, ptr %5245, align 8
  %5246 = getelementptr inbounds { ptr, ptr }, ptr %5244, i32 0, i32 1
  store ptr %5243, ptr %5246, align 8
  %5247 = call ptr @make_candy_function(ptr @Core_type_is.1474, ptr %5244, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5247, ptr @fun_Core_type_is.1475, align 8
  %5248 = alloca ptr, i64 3, align 8
  %5249 = alloca ptr, i64 3, align 8
  %5250 = load ptr, ptr @tag_TypeOf, align 8
  %5251 = getelementptr ptr, ptr %5248, i64 0
  store ptr %5250, ptr %5251, align 8
  %5252 = getelementptr ptr, ptr %5249, i64 0
  store ptr %5243, ptr %5252, align 8
  %5253 = load ptr, ptr @tag_Is, align 8
  %5254 = load ptr, ptr @fun_Core_type_is.1475, align 8
  %5255 = getelementptr ptr, ptr %5248, i64 1
  store ptr %5253, ptr %5255, align 8
  %5256 = getelementptr ptr, ptr %5249, i64 1
  store ptr %5254, ptr %5256, align 8
  %5257 = getelementptr ptr, ptr %5248, i64 2
  store ptr null, ptr %5257, align 8
  %5258 = getelementptr ptr, ptr %5249, i64 2
  store ptr null, ptr %5258, align 8
  %5259 = call ptr @make_candy_struct(ptr %5248, ptr %5249)
  %5260 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5261 = getelementptr inbounds { ptr }, ptr %5260, i32 0, i32 0
  store ptr %5259, ptr %5261, align 8
  %5262 = call ptr @make_candy_function(ptr @Core_int_is.1476, ptr %5260, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5262, ptr @fun_Core_int_is.1477, align 8
  %5263 = load ptr, ptr @tag_IntAdd, align 8
  %5264 = call ptr @Builtins__structGet(ptr %997, ptr %5263)
  %5265 = load ptr, ptr @tag_IntSubtract, align 8
  %5266 = call ptr @Builtins__structGet(ptr %997, ptr %5265)
  %5267 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5268 = getelementptr inbounds { ptr, ptr }, ptr %5267, i32 0, i32 0
  store ptr %5266, ptr %5268, align 8
  %5269 = getelementptr inbounds { ptr, ptr }, ptr %5267, i32 0, i32 1
  store ptr %5259, ptr %5269, align 8
  %5270 = call ptr @make_candy_function(ptr @Core_int_negate.1478, ptr %5267, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5270, ptr @fun_Core_int_negate.1479, align 8
  %5271 = load ptr, ptr @tag_IntMultiply, align 8
  %5272 = call ptr @Builtins__structGet(ptr %997, ptr %5271)
  %5273 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %5274 = call ptr @Builtins__structGet(ptr %997, ptr %5273)
  %5275 = load ptr, ptr @tag_IntRemainder, align 8
  %5276 = call ptr @Builtins__structGet(ptr %997, ptr %5275)
  %5277 = load ptr, ptr @tag_IntModulo, align 8
  %5278 = call ptr @Builtins__structGet(ptr %997, ptr %5277)
  %5279 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5280 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5279, i32 0, i32 0
  store ptr %4883, ptr %5280, align 8
  %5281 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5279, i32 0, i32 1
  store ptr %997, ptr %5281, align 8
  %5282 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5279, i32 0, i32 2
  store ptr %5259, ptr %5282, align 8
  %5283 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5279, i32 0, i32 3
  store ptr %5239, ptr %5283, align 8
  %5284 = call ptr @make_candy_function(ptr @Core_int_compareTo.1480, ptr %5279, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5284, ptr @fun_Core_int_compareTo.1481, align 8
  %5285 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5286 = getelementptr inbounds { ptr, ptr }, ptr %5285, i32 0, i32 0
  store ptr %5259, ptr %5286, align 8
  %5287 = getelementptr inbounds { ptr, ptr }, ptr %5285, i32 0, i32 1
  store ptr %5239, ptr %5287, align 8
  %5288 = call ptr @make_candy_function(ptr @Core_int_isLessThan.1482, ptr %5285, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5288, ptr @fun_Core_int_isLessThan.1483, align 8
  %5289 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5290 = getelementptr inbounds { ptr, ptr }, ptr %5289, i32 0, i32 0
  store ptr %5259, ptr %5290, align 8
  %5291 = getelementptr inbounds { ptr, ptr }, ptr %5289, i32 0, i32 1
  store ptr %5239, ptr %5291, align 8
  %5292 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan.1484, ptr %5289, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5292, ptr @fun_Core_int_isGreaterThan.1485, align 8
  %5293 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5294 = getelementptr inbounds { ptr, ptr }, ptr %5293, i32 0, i32 0
  store ptr %4883, ptr %5294, align 8
  %5295 = getelementptr inbounds { ptr, ptr }, ptr %5293, i32 0, i32 1
  store ptr %5259, ptr %5295, align 8
  %5296 = call ptr @make_candy_function(ptr @Core_int_isLessThanOrEqualTo.1486, ptr %5293, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5296, ptr @fun_Core_int_isLessThanOrEqualTo.1487, align 8
  %5297 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5298 = getelementptr inbounds { ptr, ptr }, ptr %5297, i32 0, i32 0
  store ptr %4883, ptr %5298, align 8
  %5299 = getelementptr inbounds { ptr, ptr }, ptr %5297, i32 0, i32 1
  store ptr %5259, ptr %5299, align 8
  %5300 = call ptr @make_candy_function(ptr @Core_int_isGreaterThanOrEqualTo.1488, ptr %5297, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5300, ptr @fun_Core_int_isGreaterThanOrEqualTo.1489, align 8
  %5301 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5302 = getelementptr inbounds { ptr }, ptr %5301, i32 0, i32 0
  store ptr %5259, ptr %5302, align 8
  %5303 = call ptr @make_candy_function(ptr @Core_int_isPositive.1490, ptr %5301, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5303, ptr @fun_Core_int_isPositive.1491, align 8
  %5304 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5305 = getelementptr inbounds { ptr, ptr }, ptr %5304, i32 0, i32 0
  store ptr %4883, ptr %5305, align 8
  %5306 = getelementptr inbounds { ptr, ptr }, ptr %5304, i32 0, i32 1
  store ptr %5259, ptr %5306, align 8
  %5307 = call ptr @make_candy_function(ptr @Core_int_isNonPositive.1492, ptr %5304, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5307, ptr @fun_Core_int_isNonPositive.1493, align 8
  %5308 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5309 = getelementptr inbounds { ptr }, ptr %5308, i32 0, i32 0
  store ptr %5259, ptr %5309, align 8
  %5310 = call ptr @make_candy_function(ptr @Core_int_isNegative.1494, ptr %5308, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5310, ptr @fun_Core_int_isNegative.1495, align 8
  %5311 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5312 = getelementptr inbounds { ptr, ptr }, ptr %5311, i32 0, i32 0
  store ptr %4883, ptr %5312, align 8
  %5313 = getelementptr inbounds { ptr, ptr }, ptr %5311, i32 0, i32 1
  store ptr %5259, ptr %5313, align 8
  %5314 = call ptr @make_candy_function(ptr @Core_int_isNonNegative.1496, ptr %5311, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5314, ptr @fun_Core_int_isNonNegative.1497, align 8
  %5315 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5316 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5315, i32 0, i32 0
  store ptr %5259, ptr %5316, align 8
  %5317 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5315, i32 0, i32 1
  store ptr %5234, ptr %5317, align 8
  %5318 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5315, i32 0, i32 2
  store ptr %5266, ptr %5318, align 8
  %5319 = call ptr @make_candy_function(ptr @Core_int_absolute.1498, ptr %5315, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5319, ptr @fun_Core_int_absolute.1499, align 8
  %5320 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5321 = getelementptr inbounds { ptr }, ptr %5320, i32 0, i32 0
  store ptr %5259, ptr %5321, align 8
  %5322 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU32.1504, ptr %5320, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5322, ptr @fun_Core_int_fitsInRustU32.1505, align 8
  %5323 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5324 = getelementptr inbounds { ptr }, ptr %5323, i32 0, i32 0
  store ptr %5259, ptr %5324, align 8
  %5325 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU128.1506, ptr %5323, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5325, ptr @fun_Core_int_fitsInRustU128.1507, align 8
  %5326 = load ptr, ptr @tag_IntShiftLeft, align 8
  %5327 = call ptr @Builtins__structGet(ptr %997, ptr %5326)
  %5328 = load ptr, ptr @tag_IntShiftRight, align 8
  %5329 = call ptr @Builtins__structGet(ptr %997, ptr %5328)
  %5330 = load ptr, ptr @tag_IntBitLength, align 8
  %5331 = call ptr @Builtins__structGet(ptr %997, ptr %5330)
  %5332 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %5333 = call ptr @Builtins__structGet(ptr %997, ptr %5332)
  %5334 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %5335 = call ptr @Builtins__structGet(ptr %997, ptr %5334)
  %5336 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %5337 = call ptr @Builtins__structGet(ptr %997, ptr %5336)
  %5338 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5339 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5338, i32 0, i32 0
  store ptr %5333, ptr %5339, align 8
  %5340 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5338, i32 0, i32 1
  store ptr %5259, ptr %5340, align 8
  %5341 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5338, i32 0, i32 2
  store ptr %5239, ptr %5341, align 8
  %5342 = call ptr @make_candy_function(ptr @Core_int_isEven.1508, ptr %5338, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5342, ptr @fun_Core_int_isEven.1509, align 8
  %5343 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5344 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5343, i32 0, i32 0
  store ptr %5333, ptr %5344, align 8
  %5345 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5343, i32 0, i32 1
  store ptr %4883, ptr %5345, align 8
  %5346 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5343, i32 0, i32 2
  store ptr %5259, ptr %5346, align 8
  %5347 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5343, i32 0, i32 3
  store ptr %5239, ptr %5347, align 8
  %5348 = call ptr @make_candy_function(ptr @Core_int_isOdd.1510, ptr %5343, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5348, ptr @fun_Core_int_isOdd.1511, align 8
  %5349 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5350 = getelementptr inbounds { ptr, ptr }, ptr %5349, i32 0, i32 0
  store ptr %5259, ptr %5350, align 8
  %5351 = getelementptr inbounds { ptr, ptr }, ptr %5349, i32 0, i32 1
  store ptr %5234, ptr %5351, align 8
  %5352 = call ptr @make_candy_function(ptr @Core_int_min.1512, ptr %5349, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5352, ptr @fun_Core_int_min.1513, align 8
  %5353 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5354 = getelementptr inbounds { ptr, ptr }, ptr %5353, i32 0, i32 0
  store ptr %5259, ptr %5354, align 8
  %5355 = getelementptr inbounds { ptr, ptr }, ptr %5353, i32 0, i32 1
  store ptr %5234, ptr %5355, align 8
  %5356 = call ptr @make_candy_function(ptr @Core_int_max.1518, ptr %5353, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5356, ptr @fun_Core_int_max.1519, align 8
  %5357 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5358 = getelementptr inbounds { ptr }, ptr %5357, i32 0, i32 0
  store ptr %5259, ptr %5358, align 8
  %5359 = call ptr @make_candy_function(ptr @Core_int_coerceAtLeast.1524, ptr %5357, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5359, ptr @fun_Core_int_coerceAtLeast.1525, align 8
  %5360 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5361 = getelementptr inbounds { ptr }, ptr %5360, i32 0, i32 0
  store ptr %5259, ptr %5361, align 8
  %5362 = call ptr @make_candy_function(ptr @Core_int_coerceAtMost.1526, ptr %5360, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5362, ptr @fun_Core_int_coerceAtMost.1527, align 8
  %5363 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5364 = getelementptr inbounds { ptr }, ptr %5363, i32 0, i32 0
  store ptr %5259, ptr %5364, align 8
  %5365 = call ptr @make_candy_function(ptr @Core_int_coerceIn.1528, ptr %5363, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5365, ptr @fun_Core_int_coerceIn.1529, align 8
  %5366 = load ptr, ptr @tag_IntParse, align 8
  %5367 = call ptr @Builtins__structGet(ptr %997, ptr %5366)
  %5368 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5369 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5368, i32 0, i32 0
  store ptr %5234, ptr %5369, align 8
  %5370 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5368, i32 0, i32 1
  store ptr %5272, ptr %5370, align 8
  %5371 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5368, i32 0, i32 2
  store ptr %5259, ptr %5371, align 8
  %5372 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5368, i32 0, i32 3
  store ptr %5239, ptr %5372, align 8
  %5373 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5368, i32 0, i32 4
  store ptr %5329, ptr %5373, align 8
  %5374 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5368, i32 0, i32 5
  store ptr %5266, ptr %5374, align 8
  %5375 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5368, i32 0, i32 6
  store ptr %5333, ptr %5375, align 8
  %5376 = call ptr @make_candy_function(ptr @Core_int_pow.1530, ptr %5368, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5376, ptr @fun_Core_int_pow.1531, align 8
  %5377 = alloca ptr, i64 37, align 8
  %5378 = alloca ptr, i64 37, align 8
  %5379 = load ptr, ptr @tag_CoerceAtLeast, align 8
  %5380 = load ptr, ptr @fun_Core_int_coerceAtLeast.1525, align 8
  %5381 = getelementptr ptr, ptr %5377, i64 0
  store ptr %5379, ptr %5381, align 8
  %5382 = getelementptr ptr, ptr %5378, i64 0
  store ptr %5380, ptr %5382, align 8
  %5383 = load ptr, ptr @tag_FitsInRustU32, align 8
  %5384 = load ptr, ptr @fun_Core_int_fitsInRustU32.1505, align 8
  %5385 = getelementptr ptr, ptr %5377, i64 1
  store ptr %5383, ptr %5385, align 8
  %5386 = getelementptr ptr, ptr %5378, i64 1
  store ptr %5384, ptr %5386, align 8
  %5387 = load ptr, ptr @tag_CoerceIn, align 8
  %5388 = load ptr, ptr @fun_Core_int_coerceIn.1529, align 8
  %5389 = getelementptr ptr, ptr %5377, i64 2
  store ptr %5387, ptr %5389, align 8
  %5390 = getelementptr ptr, ptr %5378, i64 2
  store ptr %5388, ptr %5390, align 8
  %5391 = load ptr, ptr @tag_IsPositive, align 8
  %5392 = load ptr, ptr @fun_Core_int_isPositive.1491, align 8
  %5393 = getelementptr ptr, ptr %5377, i64 3
  store ptr %5391, ptr %5393, align 8
  %5394 = getelementptr ptr, ptr %5378, i64 3
  store ptr %5392, ptr %5394, align 8
  %5395 = load ptr, ptr @tag_BitwiseAnd, align 8
  %5396 = getelementptr ptr, ptr %5377, i64 4
  store ptr %5395, ptr %5396, align 8
  %5397 = getelementptr ptr, ptr %5378, i64 4
  store ptr %5333, ptr %5397, align 8
  %5398 = load ptr, ptr @tag_IsOdd, align 8
  %5399 = load ptr, ptr @fun_Core_int_isOdd.1511, align 8
  %5400 = getelementptr ptr, ptr %5377, i64 5
  store ptr %5398, ptr %5400, align 8
  %5401 = getelementptr ptr, ptr %5378, i64 5
  store ptr %5399, ptr %5401, align 8
  %5402 = load ptr, ptr @tag_BitwiseXor, align 8
  %5403 = getelementptr ptr, ptr %5377, i64 6
  store ptr %5402, ptr %5403, align 8
  %5404 = getelementptr ptr, ptr %5378, i64 6
  store ptr %5337, ptr %5404, align 8
  %5405 = load ptr, ptr @tag_IsLessThan, align 8
  %5406 = load ptr, ptr @fun_Core_int_isLessThan.1483, align 8
  %5407 = getelementptr ptr, ptr %5377, i64 7
  store ptr %5405, ptr %5407, align 8
  %5408 = getelementptr ptr, ptr %5378, i64 7
  store ptr %5406, ptr %5408, align 8
  %5409 = load ptr, ptr @tag_IsGreaterThan, align 8
  %5410 = load ptr, ptr @fun_Core_int_isGreaterThan.1485, align 8
  %5411 = getelementptr ptr, ptr %5377, i64 8
  store ptr %5409, ptr %5411, align 8
  %5412 = getelementptr ptr, ptr %5378, i64 8
  store ptr %5410, ptr %5412, align 8
  %5413 = load ptr, ptr @tag_DivideTruncating, align 8
  %5414 = getelementptr ptr, ptr %5377, i64 9
  store ptr %5413, ptr %5414, align 8
  %5415 = getelementptr ptr, ptr %5378, i64 9
  store ptr %5274, ptr %5415, align 8
  %5416 = load ptr, ptr @tag_Multiply, align 8
  %5417 = getelementptr ptr, ptr %5377, i64 10
  store ptr %5416, ptr %5417, align 8
  %5418 = getelementptr ptr, ptr %5378, i64 10
  store ptr %5272, ptr %5418, align 8
  %5419 = load ptr, ptr @tag_Subtract, align 8
  %5420 = getelementptr ptr, ptr %5377, i64 11
  store ptr %5419, ptr %5420, align 8
  %5421 = getelementptr ptr, ptr %5378, i64 11
  store ptr %5266, ptr %5421, align 8
  %5422 = load ptr, ptr @tag_BitLength, align 8
  %5423 = getelementptr ptr, ptr %5377, i64 12
  store ptr %5422, ptr %5423, align 8
  %5424 = getelementptr ptr, ptr %5378, i64 12
  store ptr %5331, ptr %5424, align 8
  %5425 = load ptr, ptr @tag_Max, align 8
  %5426 = load ptr, ptr @fun_Core_int_max.1519, align 8
  %5427 = getelementptr ptr, ptr %5377, i64 13
  store ptr %5425, ptr %5427, align 8
  %5428 = getelementptr ptr, ptr %5378, i64 13
  store ptr %5426, ptr %5428, align 8
  %5429 = load ptr, ptr @tag_FitsInRustU128, align 8
  %5430 = load ptr, ptr @fun_Core_int_fitsInRustU128.1507, align 8
  %5431 = getelementptr ptr, ptr %5377, i64 14
  store ptr %5429, ptr %5431, align 8
  %5432 = getelementptr ptr, ptr %5378, i64 14
  store ptr %5430, ptr %5432, align 8
  %5433 = load ptr, ptr @tag_Remainder, align 8
  %5434 = getelementptr ptr, ptr %5377, i64 15
  store ptr %5433, ptr %5434, align 8
  %5435 = getelementptr ptr, ptr %5378, i64 15
  store ptr %5276, ptr %5435, align 8
  %5436 = load ptr, ptr @tag_CoerceAtMost, align 8
  %5437 = load ptr, ptr @fun_Core_int_coerceAtMost.1527, align 8
  %5438 = getelementptr ptr, ptr %5377, i64 16
  store ptr %5436, ptr %5438, align 8
  %5439 = getelementptr ptr, ptr %5378, i64 16
  store ptr %5437, ptr %5439, align 8
  %5440 = load ptr, ptr @tag_ShiftLeft, align 8
  %5441 = getelementptr ptr, ptr %5377, i64 17
  store ptr %5440, ptr %5441, align 8
  %5442 = getelementptr ptr, ptr %5378, i64 17
  store ptr %5327, ptr %5442, align 8
  %5443 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %5444 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo.1487, align 8
  %5445 = getelementptr ptr, ptr %5377, i64 18
  store ptr %5443, ptr %5445, align 8
  %5446 = getelementptr ptr, ptr %5378, i64 18
  store ptr %5444, ptr %5446, align 8
  %5447 = load ptr, ptr @tag_Add, align 8
  %5448 = getelementptr ptr, ptr %5377, i64 19
  store ptr %5447, ptr %5448, align 8
  %5449 = getelementptr ptr, ptr %5378, i64 19
  store ptr %5264, ptr %5449, align 8
  %5450 = load ptr, ptr @tag_ShiftRight, align 8
  %5451 = getelementptr ptr, ptr %5377, i64 20
  store ptr %5450, ptr %5451, align 8
  %5452 = getelementptr ptr, ptr %5378, i64 20
  store ptr %5329, ptr %5452, align 8
  %5453 = load ptr, ptr @tag_Parse, align 8
  %5454 = getelementptr ptr, ptr %5377, i64 21
  store ptr %5453, ptr %5454, align 8
  %5455 = getelementptr ptr, ptr %5378, i64 21
  store ptr %5367, ptr %5455, align 8
  %5456 = load ptr, ptr @tag_Modulo, align 8
  %5457 = getelementptr ptr, ptr %5377, i64 22
  store ptr %5456, ptr %5457, align 8
  %5458 = getelementptr ptr, ptr %5378, i64 22
  store ptr %5278, ptr %5458, align 8
  %5459 = load ptr, ptr @tag_IsNonPositive, align 8
  %5460 = load ptr, ptr @fun_Core_int_isNonPositive.1493, align 8
  %5461 = getelementptr ptr, ptr %5377, i64 23
  store ptr %5459, ptr %5461, align 8
  %5462 = getelementptr ptr, ptr %5378, i64 23
  store ptr %5460, ptr %5462, align 8
  %5463 = load ptr, ptr @tag_IsEven, align 8
  %5464 = load ptr, ptr @fun_Core_int_isEven.1509, align 8
  %5465 = getelementptr ptr, ptr %5377, i64 24
  store ptr %5463, ptr %5465, align 8
  %5466 = getelementptr ptr, ptr %5378, i64 24
  store ptr %5464, ptr %5466, align 8
  %5467 = load ptr, ptr @tag_Absolute, align 8
  %5468 = load ptr, ptr @fun_Core_int_absolute.1499, align 8
  %5469 = getelementptr ptr, ptr %5377, i64 25
  store ptr %5467, ptr %5469, align 8
  %5470 = getelementptr ptr, ptr %5378, i64 25
  store ptr %5468, ptr %5470, align 8
  %5471 = load ptr, ptr @tag_BitwiseOr, align 8
  %5472 = getelementptr ptr, ptr %5377, i64 26
  store ptr %5471, ptr %5472, align 8
  %5473 = getelementptr ptr, ptr %5378, i64 26
  store ptr %5335, ptr %5473, align 8
  %5474 = load ptr, ptr @tag_IsNegative, align 8
  %5475 = load ptr, ptr @fun_Core_int_isNegative.1495, align 8
  %5476 = getelementptr ptr, ptr %5377, i64 27
  store ptr %5474, ptr %5476, align 8
  %5477 = getelementptr ptr, ptr %5378, i64 27
  store ptr %5475, ptr %5477, align 8
  %5478 = load ptr, ptr @tag_IsGreaterThanOrEqualTo, align 8
  %5479 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo.1489, align 8
  %5480 = getelementptr ptr, ptr %5377, i64 28
  store ptr %5478, ptr %5480, align 8
  %5481 = getelementptr ptr, ptr %5378, i64 28
  store ptr %5479, ptr %5481, align 8
  %5482 = load ptr, ptr @tag_Pow, align 8
  %5483 = load ptr, ptr @fun_Core_int_pow.1531, align 8
  %5484 = getelementptr ptr, ptr %5377, i64 29
  store ptr %5482, ptr %5484, align 8
  %5485 = getelementptr ptr, ptr %5378, i64 29
  store ptr %5483, ptr %5485, align 8
  %5486 = load ptr, ptr @tag_Negate, align 8
  %5487 = load ptr, ptr @fun_Core_int_negate.1479, align 8
  %5488 = getelementptr ptr, ptr %5377, i64 30
  store ptr %5486, ptr %5488, align 8
  %5489 = getelementptr ptr, ptr %5378, i64 30
  store ptr %5487, ptr %5489, align 8
  %5490 = load ptr, ptr @tag_IsNonNegative, align 8
  %5491 = load ptr, ptr @fun_Core_int_isNonNegative.1497, align 8
  %5492 = getelementptr ptr, ptr %5377, i64 31
  store ptr %5490, ptr %5492, align 8
  %5493 = getelementptr ptr, ptr %5378, i64 31
  store ptr %5491, ptr %5493, align 8
  %5494 = load ptr, ptr @tag_Is, align 8
  %5495 = load ptr, ptr @fun_Core_int_is.1477, align 8
  %5496 = getelementptr ptr, ptr %5377, i64 32
  store ptr %5494, ptr %5496, align 8
  %5497 = getelementptr ptr, ptr %5378, i64 32
  store ptr %5495, ptr %5497, align 8
  %5498 = load ptr, ptr @tag_TheAnswer, align 8
  %5499 = load ptr, ptr @num_42, align 8
  %5500 = getelementptr ptr, ptr %5377, i64 33
  store ptr %5498, ptr %5500, align 8
  %5501 = getelementptr ptr, ptr %5378, i64 33
  store ptr %5499, ptr %5501, align 8
  %5502 = load ptr, ptr @tag_Min, align 8
  %5503 = load ptr, ptr @fun_Core_int_min.1513, align 8
  %5504 = getelementptr ptr, ptr %5377, i64 34
  store ptr %5502, ptr %5504, align 8
  %5505 = getelementptr ptr, ptr %5378, i64 34
  store ptr %5503, ptr %5505, align 8
  %5506 = load ptr, ptr @tag_CompareTo, align 8
  %5507 = load ptr, ptr @fun_Core_int_compareTo.1481, align 8
  %5508 = getelementptr ptr, ptr %5377, i64 35
  store ptr %5506, ptr %5508, align 8
  %5509 = getelementptr ptr, ptr %5378, i64 35
  store ptr %5507, ptr %5509, align 8
  %5510 = getelementptr ptr, ptr %5377, i64 36
  store ptr null, ptr %5510, align 8
  %5511 = getelementptr ptr, ptr %5378, i64 36
  store ptr null, ptr %5511, align 8
  %5512 = call ptr @make_candy_struct(ptr %5377, ptr %5378)
  %5513 = load ptr, ptr @tag_Equals, align 8
  %5514 = call ptr @Builtins__structGet(ptr %997, ptr %5513)
  %5515 = load ptr, ptr @tag_Equals, align 8
  %5516 = call ptr @Builtins__structGet(ptr %997, ptr %5515)
  %5517 = load ptr, ptr @tag_Equals, align 8
  %5518 = call ptr @Builtins__structGet(ptr %997, ptr %5517)
  %5519 = load ptr, ptr @tag_TypeOf, align 8
  %5520 = call ptr @Builtins__structGet(ptr %997, ptr %5519)
  %5521 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5522 = call ptr @Builtins__structGet(ptr %997, ptr %5521)
  %5523 = load ptr, ptr @tag_Equals, align 8
  %5524 = call ptr @Builtins__structGet(ptr %997, ptr %5523)
  %5525 = load ptr, ptr @tag_TypeOf, align 8
  %5526 = call ptr @Builtins__structGet(ptr %997, ptr %5525)
  %5527 = load ptr, ptr @tag_Equals, align 8
  %5528 = call ptr @Builtins__structGet(ptr %997, ptr %5527)
  %5529 = load ptr, ptr @tag_Equals, align 8
  %5530 = call ptr @Builtins__structGet(ptr %997, ptr %5529)
  %5531 = load ptr, ptr @tag_Equals, align 8
  %5532 = call ptr @Builtins__structGet(ptr %997, ptr %5531)
  %5533 = load ptr, ptr @tag_TypeOf, align 8
  %5534 = call ptr @Builtins__structGet(ptr %997, ptr %5533)
  %5535 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5536 = call ptr @Builtins__structGet(ptr %997, ptr %5535)
  %5537 = load ptr, ptr @tag_Equals, align 8
  %5538 = call ptr @Builtins__structGet(ptr %997, ptr %5537)
  %5539 = load ptr, ptr @tag_TypeOf, align 8
  %5540 = call ptr @Builtins__structGet(ptr %997, ptr %5539)
  %5541 = load ptr, ptr @tag_Equals, align 8
  %5542 = call ptr @Builtins__structGet(ptr %997, ptr %5541)
  %5543 = load ptr, ptr @tag_Equals, align 8
  %5544 = call ptr @Builtins__structGet(ptr %997, ptr %5543)
  %5545 = load ptr, ptr @tag_Equals, align 8
  %5546 = call ptr @Builtins__structGet(ptr %997, ptr %5545)
  %5547 = load ptr, ptr @tag_TypeOf, align 8
  %5548 = call ptr @Builtins__structGet(ptr %997, ptr %5547)
  %5549 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5550 = call ptr @Builtins__structGet(ptr %997, ptr %5549)
  %5551 = load ptr, ptr @tag_Equals, align 8
  %5552 = call ptr @Builtins__structGet(ptr %997, ptr %5551)
  %5553 = load ptr, ptr @tag_TypeOf, align 8
  %5554 = call ptr @Builtins__structGet(ptr %997, ptr %5553)
  %5555 = load ptr, ptr @tag_IfElse, align 8
  %5556 = call ptr @Builtins__structGet(ptr %997, ptr %5555)
  %5557 = load ptr, ptr @tag_Equals, align 8
  %5558 = call ptr @Builtins__structGet(ptr %997, ptr %5557)
  %5559 = load ptr, ptr @tag_Equals, align 8
  %5560 = call ptr @Builtins__structGet(ptr %997, ptr %5559)
  %5561 = load ptr, ptr @tag_Equals, align 8
  %5562 = call ptr @Builtins__structGet(ptr %997, ptr %5561)
  %5563 = load ptr, ptr @tag_TypeOf, align 8
  %5564 = call ptr @Builtins__structGet(ptr %997, ptr %5563)
  %5565 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5566 = getelementptr inbounds { ptr, ptr }, ptr %5565, i32 0, i32 0
  store ptr %5564, ptr %5566, align 8
  %5567 = getelementptr inbounds { ptr, ptr }, ptr %5565, i32 0, i32 1
  store ptr %5562, ptr %5567, align 8
  %5568 = call ptr @make_candy_function(ptr @Core_type_is.1566, ptr %5565, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5568, ptr @fun_Core_type_is.1567, align 8
  %5569 = alloca ptr, i64 3, align 8
  %5570 = alloca ptr, i64 3, align 8
  %5571 = load ptr, ptr @tag_TypeOf, align 8
  %5572 = getelementptr ptr, ptr %5569, i64 0
  store ptr %5571, ptr %5572, align 8
  %5573 = getelementptr ptr, ptr %5570, i64 0
  store ptr %5564, ptr %5573, align 8
  %5574 = load ptr, ptr @tag_Is, align 8
  %5575 = load ptr, ptr @fun_Core_type_is.1567, align 8
  %5576 = getelementptr ptr, ptr %5569, i64 1
  store ptr %5574, ptr %5576, align 8
  %5577 = getelementptr ptr, ptr %5570, i64 1
  store ptr %5575, ptr %5577, align 8
  %5578 = getelementptr ptr, ptr %5569, i64 2
  store ptr null, ptr %5578, align 8
  %5579 = getelementptr ptr, ptr %5570, i64 2
  store ptr null, ptr %5579, align 8
  %5580 = call ptr @make_candy_struct(ptr %5569, ptr %5570)
  %5581 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5582 = getelementptr inbounds { ptr }, ptr %5581, i32 0, i32 0
  store ptr %5580, ptr %5582, align 8
  %5583 = call ptr @make_candy_function(ptr @Core_function_is.1568, ptr %5581, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5583, ptr @fun_Core_function_is.1569, align 8
  %5584 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5585 = call ptr @Builtins__structGet(ptr %997, ptr %5584)
  %5586 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5587 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5586, i32 0, i32 0
  store ptr %5585, ptr %5587, align 8
  %5588 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5586, i32 0, i32 1
  store ptr %997, ptr %5588, align 8
  %5589 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5586, i32 0, i32 2
  store ptr %5580, ptr %5589, align 8
  %5590 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5586, i32 0, i32 3
  store ptr %5560, ptr %5590, align 8
  %5591 = call ptr @make_candy_function(ptr @Core_function_is0.1570, ptr %5586, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5591, ptr @fun_Core_function_is0.1571, align 8
  %5592 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5593 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5592, i32 0, i32 0
  store ptr %5585, ptr %5593, align 8
  %5594 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5592, i32 0, i32 1
  store ptr %997, ptr %5594, align 8
  %5595 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5592, i32 0, i32 2
  store ptr %5580, ptr %5595, align 8
  %5596 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5592, i32 0, i32 3
  store ptr %5560, ptr %5596, align 8
  %5597 = call ptr @make_candy_function(ptr @Core_function_is1.1574, ptr %5592, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5597, ptr @fun_Core_function_is1.1575, align 8
  %5598 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5599 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5598, i32 0, i32 0
  store ptr %5585, ptr %5599, align 8
  %5600 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5598, i32 0, i32 1
  store ptr %997, ptr %5600, align 8
  %5601 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5598, i32 0, i32 2
  store ptr %5580, ptr %5601, align 8
  %5602 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5598, i32 0, i32 3
  store ptr %5560, ptr %5602, align 8
  %5603 = call ptr @make_candy_function(ptr @Core_function_is2.1578, ptr %5598, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5603, ptr @fun_Core_function_is2.1579, align 8
  %5604 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5605 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5604, i32 0, i32 0
  store ptr %5585, ptr %5605, align 8
  %5606 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5604, i32 0, i32 1
  store ptr %997, ptr %5606, align 8
  %5607 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5604, i32 0, i32 2
  store ptr %5580, ptr %5607, align 8
  %5608 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5604, i32 0, i32 3
  store ptr %5560, ptr %5608, align 8
  %5609 = call ptr @make_candy_function(ptr @Core_function_is3.1582, ptr %5604, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5609, ptr @fun_Core_function_is3.1583, align 8
  %5610 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5611 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5610, i32 0, i32 0
  store ptr %997, ptr %5611, align 8
  %5612 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5610, i32 0, i32 1
  store ptr %5580, ptr %5612, align 8
  %5613 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5610, i32 0, i32 2
  store ptr %5585, ptr %5613, align 8
  %5614 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5610, i32 0, i32 3
  store ptr %5560, ptr %5614, align 8
  %5615 = call ptr @make_candy_function(ptr @Core_function_is4.1586, ptr %5610, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5615, ptr @fun_Core_function_is4.1587, align 8
  %5616 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5617 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5616, i32 0, i32 0
  store ptr %5585, ptr %5617, align 8
  %5618 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5616, i32 0, i32 1
  store ptr %997, ptr %5618, align 8
  %5619 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5616, i32 0, i32 2
  store ptr %5580, ptr %5619, align 8
  %5620 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5616, i32 0, i32 3
  store ptr %5560, ptr %5620, align 8
  %5621 = call ptr @make_candy_function(ptr @Core_function_is5.1590, ptr %5616, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5621, ptr @fun_Core_function_is5.1591, align 8
  %5622 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5623 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5622, i32 0, i32 0
  store ptr %997, ptr %5623, align 8
  %5624 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5622, i32 0, i32 1
  store ptr %5585, ptr %5624, align 8
  %5625 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5622, i32 0, i32 2
  store ptr %5580, ptr %5625, align 8
  %5626 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5622, i32 0, i32 3
  store ptr %5560, ptr %5626, align 8
  %5627 = call ptr @make_candy_function(ptr @Core_function_run.1594, ptr %5622, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5627, ptr @fun_Core_function_run.1595, align 8
  %5628 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5629 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5628, i32 0, i32 0
  store ptr %5585, ptr %5629, align 8
  %5630 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5628, i32 0, i32 1
  store ptr %997, ptr %5630, align 8
  %5631 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5628, i32 0, i32 2
  store ptr %5580, ptr %5631, align 8
  %5632 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5628, i32 0, i32 3
  store ptr %5560, ptr %5632, align 8
  %5633 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1598, ptr %5628, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5633, ptr @fun_Core_function_doNotRun.1599, align 8
  %5634 = alloca ptr, i64 11, align 8
  %5635 = alloca ptr, i64 11, align 8
  %5636 = load ptr, ptr @tag_Is0, align 8
  %5637 = load ptr, ptr @fun_Core_function_is0.1571, align 8
  %5638 = getelementptr ptr, ptr %5634, i64 0
  store ptr %5636, ptr %5638, align 8
  %5639 = getelementptr ptr, ptr %5635, i64 0
  store ptr %5637, ptr %5639, align 8
  %5640 = load ptr, ptr @tag_DoNotRun, align 8
  %5641 = load ptr, ptr @fun_Core_function_doNotRun.1599, align 8
  %5642 = getelementptr ptr, ptr %5634, i64 1
  store ptr %5640, ptr %5642, align 8
  %5643 = getelementptr ptr, ptr %5635, i64 1
  store ptr %5641, ptr %5643, align 8
  %5644 = load ptr, ptr @tag_Is, align 8
  %5645 = load ptr, ptr @fun_Core_function_is.1569, align 8
  %5646 = getelementptr ptr, ptr %5634, i64 2
  store ptr %5644, ptr %5646, align 8
  %5647 = getelementptr ptr, ptr %5635, i64 2
  store ptr %5645, ptr %5647, align 8
  %5648 = load ptr, ptr @tag_Is3, align 8
  %5649 = load ptr, ptr @fun_Core_function_is3.1583, align 8
  %5650 = getelementptr ptr, ptr %5634, i64 3
  store ptr %5648, ptr %5650, align 8
  %5651 = getelementptr ptr, ptr %5635, i64 3
  store ptr %5649, ptr %5651, align 8
  %5652 = load ptr, ptr @tag_Is2, align 8
  %5653 = load ptr, ptr @fun_Core_function_is2.1579, align 8
  %5654 = getelementptr ptr, ptr %5634, i64 4
  store ptr %5652, ptr %5654, align 8
  %5655 = getelementptr ptr, ptr %5635, i64 4
  store ptr %5653, ptr %5655, align 8
  %5656 = load ptr, ptr @tag_Is4, align 8
  %5657 = load ptr, ptr @fun_Core_function_is4.1587, align 8
  %5658 = getelementptr ptr, ptr %5634, i64 5
  store ptr %5656, ptr %5658, align 8
  %5659 = getelementptr ptr, ptr %5635, i64 5
  store ptr %5657, ptr %5659, align 8
  %5660 = load ptr, ptr @tag_Is1, align 8
  %5661 = load ptr, ptr @fun_Core_function_is1.1575, align 8
  %5662 = getelementptr ptr, ptr %5634, i64 6
  store ptr %5660, ptr %5662, align 8
  %5663 = getelementptr ptr, ptr %5635, i64 6
  store ptr %5661, ptr %5663, align 8
  %5664 = load ptr, ptr @tag_Is5, align 8
  %5665 = load ptr, ptr @fun_Core_function_is5.1591, align 8
  %5666 = getelementptr ptr, ptr %5634, i64 7
  store ptr %5664, ptr %5666, align 8
  %5667 = getelementptr ptr, ptr %5635, i64 7
  store ptr %5665, ptr %5667, align 8
  %5668 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5669 = getelementptr ptr, ptr %5634, i64 8
  store ptr %5668, ptr %5669, align 8
  %5670 = getelementptr ptr, ptr %5635, i64 8
  store ptr %5585, ptr %5670, align 8
  %5671 = load ptr, ptr @tag_Run, align 8
  %5672 = load ptr, ptr @fun_Core_function_run.1595, align 8
  %5673 = getelementptr ptr, ptr %5634, i64 9
  store ptr %5671, ptr %5673, align 8
  %5674 = getelementptr ptr, ptr %5635, i64 9
  store ptr %5672, ptr %5674, align 8
  %5675 = getelementptr ptr, ptr %5634, i64 10
  store ptr null, ptr %5675, align 8
  %5676 = getelementptr ptr, ptr %5635, i64 10
  store ptr null, ptr %5676, align 8
  %5677 = call ptr @make_candy_struct(ptr %5634, ptr %5635)
  %5678 = load ptr, ptr @tag_Equals, align 8
  %5679 = call ptr @Builtins__structGet(ptr %997, ptr %5678)
  %5680 = load ptr, ptr @tag_Equals, align 8
  %5681 = call ptr @Builtins__structGet(ptr %997, ptr %5680)
  %5682 = load ptr, ptr @tag_Equals, align 8
  %5683 = call ptr @Builtins__structGet(ptr %997, ptr %5682)
  %5684 = load ptr, ptr @tag_TypeOf, align 8
  %5685 = call ptr @Builtins__structGet(ptr %997, ptr %5684)
  %5686 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5687 = call ptr @Builtins__structGet(ptr %997, ptr %5686)
  %5688 = load ptr, ptr @tag_Equals, align 8
  %5689 = call ptr @Builtins__structGet(ptr %997, ptr %5688)
  %5690 = load ptr, ptr @tag_TypeOf, align 8
  %5691 = call ptr @Builtins__structGet(ptr %997, ptr %5690)
  %5692 = load ptr, ptr @tag_Equals, align 8
  %5693 = call ptr @Builtins__structGet(ptr %997, ptr %5692)
  %5694 = load ptr, ptr @tag_Equals, align 8
  %5695 = call ptr @Builtins__structGet(ptr %997, ptr %5694)
  %5696 = load ptr, ptr @tag_Equals, align 8
  %5697 = call ptr @Builtins__structGet(ptr %997, ptr %5696)
  %5698 = load ptr, ptr @tag_TypeOf, align 8
  %5699 = call ptr @Builtins__structGet(ptr %997, ptr %5698)
  %5700 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5701 = call ptr @Builtins__structGet(ptr %997, ptr %5700)
  %5702 = load ptr, ptr @tag_Equals, align 8
  %5703 = call ptr @Builtins__structGet(ptr %997, ptr %5702)
  %5704 = load ptr, ptr @tag_TypeOf, align 8
  %5705 = call ptr @Builtins__structGet(ptr %997, ptr %5704)
  %5706 = load ptr, ptr @tag_IfElse, align 8
  %5707 = call ptr @Builtins__structGet(ptr %997, ptr %5706)
  %5708 = load ptr, ptr @tag_Equals, align 8
  %5709 = call ptr @Builtins__structGet(ptr %997, ptr %5708)
  %5710 = load ptr, ptr @tag_TypeOf, align 8
  %5711 = call ptr @Builtins__structGet(ptr %997, ptr %5710)
  %5712 = load ptr, ptr @tag_Equals, align 8
  %5713 = call ptr @Builtins__structGet(ptr %997, ptr %5712)
  %5714 = load ptr, ptr @tag_Equals, align 8
  %5715 = call ptr @Builtins__structGet(ptr %997, ptr %5714)
  %5716 = load ptr, ptr @tag_Equals, align 8
  %5717 = call ptr @Builtins__structGet(ptr %997, ptr %5716)
  %5718 = load ptr, ptr @tag_TypeOf, align 8
  %5719 = call ptr @Builtins__structGet(ptr %997, ptr %5718)
  %5720 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5721 = getelementptr inbounds { ptr, ptr }, ptr %5720, i32 0, i32 0
  store ptr %5717, ptr %5721, align 8
  %5722 = getelementptr inbounds { ptr, ptr }, ptr %5720, i32 0, i32 1
  store ptr %5719, ptr %5722, align 8
  %5723 = call ptr @make_candy_function(ptr @Core_type_is.1602, ptr %5720, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5723, ptr @fun_Core_type_is.1603, align 8
  %5724 = alloca ptr, i64 3, align 8
  %5725 = alloca ptr, i64 3, align 8
  %5726 = load ptr, ptr @tag_TypeOf, align 8
  %5727 = getelementptr ptr, ptr %5724, i64 0
  store ptr %5726, ptr %5727, align 8
  %5728 = getelementptr ptr, ptr %5725, i64 0
  store ptr %5719, ptr %5728, align 8
  %5729 = load ptr, ptr @tag_Is, align 8
  %5730 = load ptr, ptr @fun_Core_type_is.1603, align 8
  %5731 = getelementptr ptr, ptr %5724, i64 1
  store ptr %5729, ptr %5731, align 8
  %5732 = getelementptr ptr, ptr %5725, i64 1
  store ptr %5730, ptr %5732, align 8
  %5733 = getelementptr ptr, ptr %5724, i64 2
  store ptr null, ptr %5733, align 8
  %5734 = getelementptr ptr, ptr %5725, i64 2
  store ptr null, ptr %5734, align 8
  %5735 = call ptr @make_candy_struct(ptr %5724, ptr %5725)
  %5736 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5737 = getelementptr inbounds { ptr }, ptr %5736, i32 0, i32 0
  store ptr %5735, ptr %5737, align 8
  %5738 = call ptr @make_candy_function(ptr @Core_function_is.1604, ptr %5736, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5738, ptr @fun_Core_function_is.1605, align 8
  %5739 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5740 = call ptr @Builtins__structGet(ptr %997, ptr %5739)
  %5741 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5742 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5741, i32 0, i32 0
  store ptr %997, ptr %5742, align 8
  %5743 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5741, i32 0, i32 1
  store ptr %5740, ptr %5743, align 8
  %5744 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5741, i32 0, i32 2
  store ptr %5735, ptr %5744, align 8
  %5745 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5741, i32 0, i32 3
  store ptr %5715, ptr %5745, align 8
  %5746 = call ptr @make_candy_function(ptr @Core_function_is0.1606, ptr %5741, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5746, ptr @fun_Core_function_is0.1607, align 8
  %5747 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5748 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5747, i32 0, i32 0
  store ptr %997, ptr %5748, align 8
  %5749 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5747, i32 0, i32 1
  store ptr %5740, ptr %5749, align 8
  %5750 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5747, i32 0, i32 2
  store ptr %5735, ptr %5750, align 8
  %5751 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5747, i32 0, i32 3
  store ptr %5715, ptr %5751, align 8
  %5752 = call ptr @make_candy_function(ptr @Core_function_is1.1610, ptr %5747, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5752, ptr @fun_Core_function_is1.1611, align 8
  %5753 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5754 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5753, i32 0, i32 0
  store ptr %997, ptr %5754, align 8
  %5755 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5753, i32 0, i32 1
  store ptr %5740, ptr %5755, align 8
  %5756 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5753, i32 0, i32 2
  store ptr %5735, ptr %5756, align 8
  %5757 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5753, i32 0, i32 3
  store ptr %5715, ptr %5757, align 8
  %5758 = call ptr @make_candy_function(ptr @Core_function_is2.1614, ptr %5753, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5758, ptr @fun_Core_function_is2.1615, align 8
  %5759 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5760 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5759, i32 0, i32 0
  store ptr %997, ptr %5760, align 8
  %5761 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5759, i32 0, i32 1
  store ptr %5740, ptr %5761, align 8
  %5762 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5759, i32 0, i32 2
  store ptr %5735, ptr %5762, align 8
  %5763 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5759, i32 0, i32 3
  store ptr %5715, ptr %5763, align 8
  %5764 = call ptr @make_candy_function(ptr @Core_function_is3.1618, ptr %5759, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5764, ptr @fun_Core_function_is3.1619, align 8
  %5765 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5766 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5765, i32 0, i32 0
  store ptr %997, ptr %5766, align 8
  %5767 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5765, i32 0, i32 1
  store ptr %5740, ptr %5767, align 8
  %5768 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5765, i32 0, i32 2
  store ptr %5735, ptr %5768, align 8
  %5769 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5765, i32 0, i32 3
  store ptr %5715, ptr %5769, align 8
  %5770 = call ptr @make_candy_function(ptr @Core_function_is4.1622, ptr %5765, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5770, ptr @fun_Core_function_is4.1623, align 8
  %5771 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5772 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5771, i32 0, i32 0
  store ptr %997, ptr %5772, align 8
  %5773 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5771, i32 0, i32 1
  store ptr %5740, ptr %5773, align 8
  %5774 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5771, i32 0, i32 2
  store ptr %5735, ptr %5774, align 8
  %5775 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5771, i32 0, i32 3
  store ptr %5715, ptr %5775, align 8
  %5776 = call ptr @make_candy_function(ptr @Core_function_is5.1626, ptr %5771, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5776, ptr @fun_Core_function_is5.1627, align 8
  %5777 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5778 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5777, i32 0, i32 0
  store ptr %997, ptr %5778, align 8
  %5779 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5777, i32 0, i32 1
  store ptr %5740, ptr %5779, align 8
  %5780 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5777, i32 0, i32 2
  store ptr %5735, ptr %5780, align 8
  %5781 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5777, i32 0, i32 3
  store ptr %5715, ptr %5781, align 8
  %5782 = call ptr @make_candy_function(ptr @Core_function_run.1630, ptr %5777, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5782, ptr @fun_Core_function_run.1631, align 8
  %5783 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5784 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5783, i32 0, i32 0
  store ptr %997, ptr %5784, align 8
  %5785 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5783, i32 0, i32 1
  store ptr %5740, ptr %5785, align 8
  %5786 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5783, i32 0, i32 2
  store ptr %5735, ptr %5786, align 8
  %5787 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5783, i32 0, i32 3
  store ptr %5715, ptr %5787, align 8
  %5788 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1634, ptr %5783, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5788, ptr @fun_Core_function_doNotRun.1635, align 8
  %5789 = alloca ptr, i64 11, align 8
  %5790 = alloca ptr, i64 11, align 8
  %5791 = load ptr, ptr @tag_Is0, align 8
  %5792 = load ptr, ptr @fun_Core_function_is0.1607, align 8
  %5793 = getelementptr ptr, ptr %5789, i64 0
  store ptr %5791, ptr %5793, align 8
  %5794 = getelementptr ptr, ptr %5790, i64 0
  store ptr %5792, ptr %5794, align 8
  %5795 = load ptr, ptr @tag_DoNotRun, align 8
  %5796 = load ptr, ptr @fun_Core_function_doNotRun.1635, align 8
  %5797 = getelementptr ptr, ptr %5789, i64 1
  store ptr %5795, ptr %5797, align 8
  %5798 = getelementptr ptr, ptr %5790, i64 1
  store ptr %5796, ptr %5798, align 8
  %5799 = load ptr, ptr @tag_Is, align 8
  %5800 = load ptr, ptr @fun_Core_function_is.1605, align 8
  %5801 = getelementptr ptr, ptr %5789, i64 2
  store ptr %5799, ptr %5801, align 8
  %5802 = getelementptr ptr, ptr %5790, i64 2
  store ptr %5800, ptr %5802, align 8
  %5803 = load ptr, ptr @tag_Is3, align 8
  %5804 = load ptr, ptr @fun_Core_function_is3.1619, align 8
  %5805 = getelementptr ptr, ptr %5789, i64 3
  store ptr %5803, ptr %5805, align 8
  %5806 = getelementptr ptr, ptr %5790, i64 3
  store ptr %5804, ptr %5806, align 8
  %5807 = load ptr, ptr @tag_Is2, align 8
  %5808 = load ptr, ptr @fun_Core_function_is2.1615, align 8
  %5809 = getelementptr ptr, ptr %5789, i64 4
  store ptr %5807, ptr %5809, align 8
  %5810 = getelementptr ptr, ptr %5790, i64 4
  store ptr %5808, ptr %5810, align 8
  %5811 = load ptr, ptr @tag_Is4, align 8
  %5812 = load ptr, ptr @fun_Core_function_is4.1623, align 8
  %5813 = getelementptr ptr, ptr %5789, i64 5
  store ptr %5811, ptr %5813, align 8
  %5814 = getelementptr ptr, ptr %5790, i64 5
  store ptr %5812, ptr %5814, align 8
  %5815 = load ptr, ptr @tag_Is1, align 8
  %5816 = load ptr, ptr @fun_Core_function_is1.1611, align 8
  %5817 = getelementptr ptr, ptr %5789, i64 6
  store ptr %5815, ptr %5817, align 8
  %5818 = getelementptr ptr, ptr %5790, i64 6
  store ptr %5816, ptr %5818, align 8
  %5819 = load ptr, ptr @tag_Is5, align 8
  %5820 = load ptr, ptr @fun_Core_function_is5.1627, align 8
  %5821 = getelementptr ptr, ptr %5789, i64 7
  store ptr %5819, ptr %5821, align 8
  %5822 = getelementptr ptr, ptr %5790, i64 7
  store ptr %5820, ptr %5822, align 8
  %5823 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5824 = getelementptr ptr, ptr %5789, i64 8
  store ptr %5823, ptr %5824, align 8
  %5825 = getelementptr ptr, ptr %5790, i64 8
  store ptr %5740, ptr %5825, align 8
  %5826 = load ptr, ptr @tag_Run, align 8
  %5827 = load ptr, ptr @fun_Core_function_run.1631, align 8
  %5828 = getelementptr ptr, ptr %5789, i64 9
  store ptr %5826, ptr %5828, align 8
  %5829 = getelementptr ptr, ptr %5790, i64 9
  store ptr %5827, ptr %5829, align 8
  %5830 = getelementptr ptr, ptr %5789, i64 10
  store ptr null, ptr %5830, align 8
  %5831 = getelementptr ptr, ptr %5790, i64 10
  store ptr null, ptr %5831, align 8
  %5832 = call ptr @make_candy_struct(ptr %5789, ptr %5790)
  %5833 = load ptr, ptr @tag_Equals, align 8
  %5834 = call ptr @Builtins__structGet(ptr %997, ptr %5833)
  %5835 = load ptr, ptr @tag_TypeOf, align 8
  %5836 = call ptr @Builtins__structGet(ptr %997, ptr %5835)
  %5837 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5838 = getelementptr inbounds { ptr }, ptr %5837, i32 0, i32 0
  store ptr %5832, ptr %5838, align 8
  %5839 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.1638, ptr %5837, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5839, ptr @fun_Core_bool_lazyAnd.1639, align 8
  %5840 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5841 = call ptr @make_candy_function(ptr @Core_bool_and.1666, ptr %5840, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5841, ptr @fun_Core_bool_and.1667, align 8
  %5842 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5843 = getelementptr inbounds { ptr }, ptr %5842, i32 0, i32 0
  store ptr %5832, ptr %5843, align 8
  %5844 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.1670, ptr %5842, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5844, ptr @fun_Core_bool_lazyOr.1671, align 8
  %5845 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5846 = call ptr @make_candy_function(ptr @Core_bool_or.1698, ptr %5845, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5846, ptr @fun_Core_bool_or.1699, align 8
  %5847 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5848 = getelementptr inbounds { ptr }, ptr %5847, i32 0, i32 0
  store ptr %5713, ptr %5848, align 8
  %5849 = call ptr @make_candy_function(ptr @Core_bool_xor.1702, ptr %5847, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5849, ptr @fun_Core_bool_xor.1703, align 8
  %5850 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5851 = call ptr @make_candy_function(ptr @Core_bool_implies.1704, ptr %5850, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5851, ptr @fun_Core_bool_implies.1705, align 8
  %5852 = alloca ptr, i64 9, align 8
  %5853 = alloca ptr, i64 9, align 8
  %5854 = load ptr, ptr @tag_LazyOr, align 8
  %5855 = load ptr, ptr @fun_Core_bool_lazyOr.1671, align 8
  %5856 = getelementptr ptr, ptr %5852, i64 0
  store ptr %5854, ptr %5856, align 8
  %5857 = getelementptr ptr, ptr %5853, i64 0
  store ptr %5855, ptr %5857, align 8
  %5858 = load ptr, ptr @tag_Implies, align 8
  %5859 = load ptr, ptr @fun_Core_bool_implies.1705, align 8
  %5860 = getelementptr ptr, ptr %5852, i64 1
  store ptr %5858, ptr %5860, align 8
  %5861 = getelementptr ptr, ptr %5853, i64 1
  store ptr %5859, ptr %5861, align 8
  %5862 = load ptr, ptr @tag_Not, align 8
  %5863 = load ptr, ptr @fun_Core_bool_not, align 8
  %5864 = getelementptr ptr, ptr %5852, i64 2
  store ptr %5862, ptr %5864, align 8
  %5865 = getelementptr ptr, ptr %5853, i64 2
  store ptr %5863, ptr %5865, align 8
  %5866 = load ptr, ptr @tag_And, align 8
  %5867 = load ptr, ptr @fun_Core_bool_and.1667, align 8
  %5868 = getelementptr ptr, ptr %5852, i64 3
  store ptr %5866, ptr %5868, align 8
  %5869 = getelementptr ptr, ptr %5853, i64 3
  store ptr %5867, ptr %5869, align 8
  %5870 = load ptr, ptr @tag_LazyAnd, align 8
  %5871 = load ptr, ptr @fun_Core_bool_lazyAnd.1639, align 8
  %5872 = getelementptr ptr, ptr %5852, i64 4
  store ptr %5870, ptr %5872, align 8
  %5873 = getelementptr ptr, ptr %5853, i64 4
  store ptr %5871, ptr %5873, align 8
  %5874 = load ptr, ptr @tag_Is, align 8
  %5875 = load ptr, ptr @fun_Core_bool_is, align 8
  %5876 = getelementptr ptr, ptr %5852, i64 5
  store ptr %5874, ptr %5876, align 8
  %5877 = getelementptr ptr, ptr %5853, i64 5
  store ptr %5875, ptr %5877, align 8
  %5878 = load ptr, ptr @tag_Or, align 8
  %5879 = load ptr, ptr @fun_Core_bool_or.1699, align 8
  %5880 = getelementptr ptr, ptr %5852, i64 6
  store ptr %5878, ptr %5880, align 8
  %5881 = getelementptr ptr, ptr %5853, i64 6
  store ptr %5879, ptr %5881, align 8
  %5882 = load ptr, ptr @tag_Xor, align 8
  %5883 = load ptr, ptr @fun_Core_bool_xor.1703, align 8
  %5884 = getelementptr ptr, ptr %5852, i64 7
  store ptr %5882, ptr %5884, align 8
  %5885 = getelementptr ptr, ptr %5853, i64 7
  store ptr %5883, ptr %5885, align 8
  %5886 = getelementptr ptr, ptr %5852, i64 8
  store ptr null, ptr %5886, align 8
  %5887 = getelementptr ptr, ptr %5853, i64 8
  store ptr null, ptr %5887, align 8
  %5888 = call ptr @make_candy_struct(ptr %5852, ptr %5853)
  %5889 = load ptr, ptr @tag_Equals, align 8
  %5890 = call ptr @Builtins__structGet(ptr %997, ptr %5889)
  %5891 = load ptr, ptr @tag_Equals, align 8
  %5892 = call ptr @Builtins__structGet(ptr %997, ptr %5891)
  %5893 = load ptr, ptr @tag_Equals, align 8
  %5894 = call ptr @Builtins__structGet(ptr %997, ptr %5893)
  %5895 = load ptr, ptr @tag_TypeOf, align 8
  %5896 = call ptr @Builtins__structGet(ptr %997, ptr %5895)
  %5897 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5898 = call ptr @Builtins__structGet(ptr %997, ptr %5897)
  %5899 = load ptr, ptr @tag_Equals, align 8
  %5900 = call ptr @Builtins__structGet(ptr %997, ptr %5899)
  %5901 = load ptr, ptr @tag_TypeOf, align 8
  %5902 = call ptr @Builtins__structGet(ptr %997, ptr %5901)
  %5903 = load ptr, ptr @tag_Equals, align 8
  %5904 = call ptr @Builtins__structGet(ptr %997, ptr %5903)
  %5905 = load ptr, ptr @tag_Equals, align 8
  %5906 = call ptr @Builtins__structGet(ptr %997, ptr %5905)
  %5907 = load ptr, ptr @tag_Equals, align 8
  %5908 = call ptr @Builtins__structGet(ptr %997, ptr %5907)
  %5909 = load ptr, ptr @tag_TypeOf, align 8
  %5910 = call ptr @Builtins__structGet(ptr %997, ptr %5909)
  %5911 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5912 = call ptr @Builtins__structGet(ptr %997, ptr %5911)
  %5913 = load ptr, ptr @tag_Equals, align 8
  %5914 = call ptr @Builtins__structGet(ptr %997, ptr %5913)
  %5915 = load ptr, ptr @tag_TypeOf, align 8
  %5916 = call ptr @Builtins__structGet(ptr %997, ptr %5915)
  %5917 = load ptr, ptr @tag_IfElse, align 8
  %5918 = call ptr @Builtins__structGet(ptr %997, ptr %5917)
  %5919 = load ptr, ptr @tag_Equals, align 8
  %5920 = call ptr @Builtins__structGet(ptr %997, ptr %5919)
  %5921 = load ptr, ptr @tag_TypeOf, align 8
  %5922 = call ptr @Builtins__structGet(ptr %997, ptr %5921)
  %5923 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5924 = getelementptr inbounds { ptr, ptr }, ptr %5923, i32 0, i32 0
  store ptr %5922, ptr %5924, align 8
  %5925 = getelementptr inbounds { ptr, ptr }, ptr %5923, i32 0, i32 1
  store ptr %5920, ptr %5925, align 8
  %5926 = call ptr @make_candy_function(ptr @Core_type_is.1708, ptr %5923, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5926, ptr @fun_Core_type_is.1709, align 8
  %5927 = alloca ptr, i64 3, align 8
  %5928 = alloca ptr, i64 3, align 8
  %5929 = load ptr, ptr @tag_TypeOf, align 8
  %5930 = getelementptr ptr, ptr %5927, i64 0
  store ptr %5929, ptr %5930, align 8
  %5931 = getelementptr ptr, ptr %5928, i64 0
  store ptr %5922, ptr %5931, align 8
  %5932 = load ptr, ptr @tag_Is, align 8
  %5933 = load ptr, ptr @fun_Core_type_is.1709, align 8
  %5934 = getelementptr ptr, ptr %5927, i64 1
  store ptr %5932, ptr %5934, align 8
  %5935 = getelementptr ptr, ptr %5928, i64 1
  store ptr %5933, ptr %5935, align 8
  %5936 = getelementptr ptr, ptr %5927, i64 2
  store ptr null, ptr %5936, align 8
  %5937 = getelementptr ptr, ptr %5928, i64 2
  store ptr null, ptr %5937, align 8
  %5938 = call ptr @make_candy_struct(ptr %5927, ptr %5928)
  %5939 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5940 = getelementptr inbounds { ptr }, ptr %5939, i32 0, i32 0
  store ptr %5938, ptr %5940, align 8
  %5941 = call ptr @make_candy_function(ptr @Core_tag_is.1710, ptr %5939, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5941, ptr @fun_Core_tag_is.1711, align 8
  %5942 = load ptr, ptr @tag_TagHasValue, align 8
  %5943 = call ptr @Builtins__structGet(ptr %997, ptr %5942)
  %5944 = load ptr, ptr @tag_TagWithoutValue, align 8
  %5945 = call ptr @Builtins__structGet(ptr %997, ptr %5944)
  %5946 = load ptr, ptr @tag_TagGetValue, align 8
  %5947 = call ptr @Builtins__structGet(ptr %997, ptr %5946)
  %5948 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5949 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5948, i32 0, i32 0
  store ptr %5947, ptr %5949, align 8
  %5950 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5948, i32 0, i32 1
  store ptr %5943, ptr %5950, align 8
  %5951 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5948, i32 0, i32 2
  store ptr %5938, ptr %5951, align 8
  %5952 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5948, i32 0, i32 3
  store ptr %5918, ptr %5952, align 8
  %5953 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5948, i32 0, i32 4
  store ptr %5888, ptr %5953, align 8
  %5954 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5948, i32 0, i32 5
  store ptr %5945, ptr %5954, align 8
  %5955 = call ptr @make_candy_function(ptr @Core_tag_withSymbol.1712, ptr %5948, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5955, ptr @fun_Core_tag_withSymbol.1713, align 8
  %5956 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5957 = getelementptr inbounds { ptr, ptr }, ptr %5956, i32 0, i32 0
  store ptr %5945, ptr %5957, align 8
  %5958 = getelementptr inbounds { ptr, ptr }, ptr %5956, i32 0, i32 1
  store ptr %5938, ptr %5958, align 8
  %5959 = call ptr @make_candy_function(ptr @Core_tag_withValue.1718, ptr %5956, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5959, ptr @fun_Core_tag_withValue.1719, align 8
  %5960 = alloca ptr, i64 7, align 8
  %5961 = alloca ptr, i64 7, align 8
  %5962 = load ptr, ptr @tag_Is, align 8
  %5963 = load ptr, ptr @fun_Core_tag_is.1711, align 8
  %5964 = getelementptr ptr, ptr %5960, i64 0
  store ptr %5962, ptr %5964, align 8
  %5965 = getelementptr ptr, ptr %5961, i64 0
  store ptr %5963, ptr %5965, align 8
  %5966 = load ptr, ptr @tag_WithoutValue, align 8
  %5967 = getelementptr ptr, ptr %5960, i64 1
  store ptr %5966, ptr %5967, align 8
  %5968 = getelementptr ptr, ptr %5961, i64 1
  store ptr %5945, ptr %5968, align 8
  %5969 = load ptr, ptr @tag_WithValue, align 8
  %5970 = load ptr, ptr @fun_Core_tag_withValue.1719, align 8
  %5971 = getelementptr ptr, ptr %5960, i64 2
  store ptr %5969, ptr %5971, align 8
  %5972 = getelementptr ptr, ptr %5961, i64 2
  store ptr %5970, ptr %5972, align 8
  %5973 = load ptr, ptr @tag_GetValue, align 8
  %5974 = getelementptr ptr, ptr %5960, i64 3
  store ptr %5973, ptr %5974, align 8
  %5975 = getelementptr ptr, ptr %5961, i64 3
  store ptr %5947, ptr %5975, align 8
  %5976 = load ptr, ptr @tag_HasValue, align 8
  %5977 = getelementptr ptr, ptr %5960, i64 4
  store ptr %5976, ptr %5977, align 8
  %5978 = getelementptr ptr, ptr %5961, i64 4
  store ptr %5943, ptr %5978, align 8
  %5979 = load ptr, ptr @tag_WithSymbol, align 8
  %5980 = load ptr, ptr @fun_Core_tag_withSymbol.1713, align 8
  %5981 = getelementptr ptr, ptr %5960, i64 5
  store ptr %5979, ptr %5981, align 8
  %5982 = getelementptr ptr, ptr %5961, i64 5
  store ptr %5980, ptr %5982, align 8
  %5983 = getelementptr ptr, ptr %5960, i64 6
  store ptr null, ptr %5983, align 8
  %5984 = getelementptr ptr, ptr %5961, i64 6
  store ptr null, ptr %5984, align 8
  %5985 = call ptr @make_candy_struct(ptr %5960, ptr %5961)
  %5986 = load ptr, ptr @tag_Equals, align 8
  %5987 = call ptr @Builtins__structGet(ptr %997, ptr %5986)
  %5988 = load ptr, ptr @tag_TypeOf, align 8
  %5989 = call ptr @Builtins__structGet(ptr %997, ptr %5988)
  %5990 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5991 = getelementptr inbounds { ptr, ptr }, ptr %5990, i32 0, i32 0
  store ptr %5987, ptr %5991, align 8
  %5992 = getelementptr inbounds { ptr, ptr }, ptr %5990, i32 0, i32 1
  store ptr %5989, ptr %5992, align 8
  %5993 = call ptr @make_candy_function(ptr @Core_type_is.1720, ptr %5990, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5993, ptr @fun_Core_type_is.1721, align 8
  %5994 = alloca ptr, i64 3, align 8
  %5995 = alloca ptr, i64 3, align 8
  %5996 = load ptr, ptr @tag_TypeOf, align 8
  %5997 = getelementptr ptr, ptr %5994, i64 0
  store ptr %5996, ptr %5997, align 8
  %5998 = getelementptr ptr, ptr %5995, i64 0
  store ptr %5989, ptr %5998, align 8
  %5999 = load ptr, ptr @tag_Is, align 8
  %6000 = load ptr, ptr @fun_Core_type_is.1721, align 8
  %6001 = getelementptr ptr, ptr %5994, i64 1
  store ptr %5999, ptr %6001, align 8
  %6002 = getelementptr ptr, ptr %5995, i64 1
  store ptr %6000, ptr %6002, align 8
  %6003 = getelementptr ptr, ptr %5994, i64 2
  store ptr null, ptr %6003, align 8
  %6004 = getelementptr ptr, ptr %5995, i64 2
  store ptr null, ptr %6004, align 8
  %6005 = call ptr @make_candy_struct(ptr %5994, ptr %5995)
  %6006 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %6006, align 1
  %6007 = call ptr @make_candy_text(ptr %6006)
  store ptr %6007, ptr @"Core:result:is:1", align 8
  %6008 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %6008, align 1
  %6009 = call ptr @make_candy_tag(ptr %6008, ptr null)
  store ptr %6009, ptr @tag_Ok, align 8
  %6010 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %6010, align 1
  %6011 = call ptr @make_candy_text(ptr %6010)
  store ptr %6011, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %6012 = alloca ptr, i64 3, align 8
  %6013 = load ptr, ptr @tag_NoMatch, align 8
  %6014 = getelementptr ptr, ptr %6012, i64 0
  store ptr %6013, ptr %6014, align 8
  %6015 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %6016 = getelementptr ptr, ptr %6012, i64 1
  store ptr %6015, ptr %6016, align 8
  %6017 = getelementptr ptr, ptr %6012, i64 2
  store ptr null, ptr %6017, align 8
  %6018 = call ptr @make_candy_list(ptr %6012)
  store ptr %6018, ptr @190, align 8
  %6019 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %6019, align 1
  %6020 = call ptr @make_candy_text(ptr %6019)
  store ptr %6020, ptr @"text_Expected Ok, got ", align 8
  %6021 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %6021, align 1
  %6022 = call ptr @make_candy_tag(ptr %6021, ptr null)
  store ptr %6022, ptr @tag_Error, align 8
  %6023 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %6023, align 1
  %6024 = call ptr @make_candy_text(ptr %6023)
  store ptr %6024, ptr @"text_Expected Error, got ", align 8
  %6025 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:is:1:_\00", ptr %6025, align 1
  %6026 = call ptr @make_candy_text(ptr %6025)
  store ptr %6026, ptr @"Core:result:is:1:_", align 8
  %6027 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6028 = call ptr @make_candy_function(ptr @Core_result_is, ptr %6027, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6028, ptr @fun_Core_result_is, align 8
  %6029 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:getValue:2\00", ptr %6029, align 1
  %6030 = call ptr @make_candy_text(ptr %6029)
  store ptr %6030, ptr @"Core:result:getValue:2", align 8
  %6031 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %6031, align 1
  %6032 = call ptr @make_candy_text(ptr %6031)
  store ptr %6032, ptr @"text_`is result` was not satisfied", align 8
  %6033 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:getValue:4\00", ptr %6033, align 1
  %6034 = call ptr @make_candy_text(ptr %6033)
  store ptr %6034, ptr @"Core:result:getValue:4", align 8
  %6035 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:getValue:13\00", ptr %6035, align 1
  %6036 = call ptr @make_candy_text(ptr %6035)
  store ptr %6036, ptr @"Core:result:getValue:13", align 8
  %6037 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:getValue:14\00", ptr %6037, align 1
  %6038 = call ptr @make_candy_text(ptr %6037)
  store ptr %6038, ptr @"Core:result:getValue:14", align 8
  %6039 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6040 = getelementptr inbounds { ptr }, ptr %6039, i32 0, i32 0
  store ptr %5985, ptr %6040, align 8
  %6041 = call ptr @make_candy_function(ptr @Core_result_getValue, ptr %6039, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6041, ptr @fun_Core_result_getValue, align 8
  %6042 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:isOk:2\00", ptr %6042, align 1
  %6043 = call ptr @make_candy_text(ptr %6042)
  store ptr %6043, ptr @"Core:result:isOk:2", align 8
  %6044 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:isOk:4\00", ptr %6044, align 1
  %6045 = call ptr @make_candy_text(ptr %6044)
  store ptr %6045, ptr @"Core:result:isOk:4", align 8
  %6046 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:isOk:13\00", ptr %6046, align 1
  %6047 = call ptr @make_candy_text(ptr %6046)
  store ptr %6047, ptr @"Core:result:isOk:13", align 8
  %6048 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:isOk:14\00", ptr %6048, align 1
  %6049 = call ptr @make_candy_text(ptr %6048)
  store ptr %6049, ptr @"Core:result:isOk:14", align 8
  %6050 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:isOk:17\00", ptr %6050, align 1
  %6051 = call ptr @make_candy_text(ptr %6050)
  store ptr %6051, ptr @"Core:result:isOk:17", align 8
  %6052 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6053 = getelementptr inbounds { ptr, ptr }, ptr %6052, i32 0, i32 0
  store ptr %5985, ptr %6053, align 8
  %6054 = getelementptr inbounds { ptr, ptr }, ptr %6052, i32 0, i32 1
  store ptr %5558, ptr %6054, align 8
  %6055 = call ptr @make_candy_function(ptr @Core_result_isOk, ptr %6052, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6055, ptr @fun_Core_result_isOk, align 8
  %6056 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:2\00", ptr %6056, align 1
  %6057 = call ptr @make_candy_text(ptr %6056)
  store ptr %6057, ptr @"Core:result:unwrap:2", align 8
  %6058 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:4\00", ptr %6058, align 1
  %6059 = call ptr @make_candy_text(ptr %6058)
  store ptr %6059, ptr @"Core:result:unwrap:4", align 8
  %6060 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:7\00", ptr %6060, align 1
  %6061 = call ptr @make_candy_text(ptr %6060)
  store ptr %6061, ptr @"Core:result:unwrap:7", align 8
  %6062 = alloca i8, i64 32, align 1
  store [32 x i8] c"`isOk result` was not satisfied\00", ptr %6062, align 1
  %6063 = call ptr @make_candy_text(ptr %6062)
  store ptr %6063, ptr @"text_`isOk result` was not satisfied", align 8
  %6064 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:9\00", ptr %6064, align 1
  %6065 = call ptr @make_candy_text(ptr %6064)
  store ptr %6065, ptr @"Core:result:unwrap:9", align 8
  %6066 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:unwrap:12\00", ptr %6066, align 1
  %6067 = call ptr @make_candy_text(ptr %6066)
  store ptr %6067, ptr @"Core:result:unwrap:12", align 8
  %6068 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6069 = getelementptr inbounds { ptr, ptr }, ptr %6068, i32 0, i32 0
  store ptr %5558, ptr %6069, align 8
  %6070 = getelementptr inbounds { ptr, ptr }, ptr %6068, i32 0, i32 1
  store ptr %5985, ptr %6070, align 8
  %6071 = call ptr @make_candy_function(ptr @Core_result_unwrap, ptr %6068, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6071, ptr @fun_Core_result_unwrap, align 8
  %6072 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:expect:2\00", ptr %6072, align 1
  %6073 = call ptr @make_candy_text(ptr %6072)
  store ptr %6073, ptr @"Core:result:expect:2", align 8
  %6074 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:expect:4\00", ptr %6074, align 1
  %6075 = call ptr @make_candy_text(ptr %6074)
  store ptr %6075, ptr @"Core:result:expect:4", align 8
  %6076 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:12\00", ptr %6076, align 1
  %6077 = call ptr @make_candy_text(ptr %6076)
  store ptr %6077, ptr @"Core:result:expect:12", align 8
  %6078 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:15\00", ptr %6078, align 1
  %6079 = call ptr @make_candy_text(ptr %6078)
  store ptr %6079, ptr @"Core:result:expect:15", align 8
  %6080 = alloca i8, i64 41, align 1
  store [41 x i8] c"`type.is message Text` was not satisfied\00", ptr %6080, align 1
  %6081 = call ptr @make_candy_text(ptr %6080)
  store ptr %6081, ptr @"text_`type.is message Text` was not satisfied", align 8
  %6082 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:17\00", ptr %6082, align 1
  %6083 = call ptr @make_candy_text(ptr %6082)
  store ptr %6083, ptr @"Core:result:expect:17", align 8
  %6084 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:20\00", ptr %6084, align 1
  %6085 = call ptr @make_candy_text(ptr %6084)
  store ptr %6085, ptr @"Core:result:expect:20", align 8
  %6086 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:22\00", ptr %6086, align 1
  %6087 = call ptr @make_candy_text(ptr %6086)
  store ptr %6087, ptr @"Core:result:expect:22", align 8
  %6088 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:25\00", ptr %6088, align 1
  %6089 = call ptr @make_candy_text(ptr %6088)
  store ptr %6089, ptr @"Core:result:expect:25", align 8
  %6090 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6091 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6090, i32 0, i32 0
  store ptr %5558, ptr %6091, align 8
  %6092 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6090, i32 0, i32 1
  store ptr %6005, ptr %6092, align 8
  %6093 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6090, i32 0, i32 2
  store ptr %5985, ptr %6093, align 8
  %6094 = call ptr @make_candy_function(ptr @Core_result_expect, ptr %6090, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6094, ptr @fun_Core_result_expect, align 8
  %6095 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:isError:2\00", ptr %6095, align 1
  %6096 = call ptr @make_candy_text(ptr %6095)
  store ptr %6096, ptr @"Core:result:isError:2", align 8
  %6097 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:isError:4\00", ptr %6097, align 1
  %6098 = call ptr @make_candy_text(ptr %6097)
  store ptr %6098, ptr @"Core:result:isError:4", align 8
  %6099 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:isError:13\00", ptr %6099, align 1
  %6100 = call ptr @make_candy_text(ptr %6099)
  store ptr %6100, ptr @"Core:result:isError:13", align 8
  %6101 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:isError:14\00", ptr %6101, align 1
  %6102 = call ptr @make_candy_text(ptr %6101)
  store ptr %6102, ptr @"Core:result:isError:14", align 8
  %6103 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:isError:17\00", ptr %6103, align 1
  %6104 = call ptr @make_candy_text(ptr %6103)
  store ptr %6104, ptr @"Core:result:isError:17", align 8
  %6105 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6106 = getelementptr inbounds { ptr, ptr }, ptr %6105, i32 0, i32 0
  store ptr %5985, ptr %6106, align 8
  %6107 = getelementptr inbounds { ptr, ptr }, ptr %6105, i32 0, i32 1
  store ptr %5558, ptr %6107, align 8
  %6108 = call ptr @make_candy_function(ptr @Core_result_isError, ptr %6105, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6108, ptr @fun_Core_result_isError, align 8
  %6109 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:unwrapError:2\00", ptr %6109, align 1
  %6110 = call ptr @make_candy_text(ptr %6109)
  store ptr %6110, ptr @"Core:result:unwrapError:2", align 8
  %6111 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:unwrapError:4\00", ptr %6111, align 1
  %6112 = call ptr @make_candy_text(ptr %6111)
  store ptr %6112, ptr @"Core:result:unwrapError:4", align 8
  %6113 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:unwrapError:7\00", ptr %6113, align 1
  %6114 = call ptr @make_candy_text(ptr %6113)
  store ptr %6114, ptr @"Core:result:unwrapError:7", align 8
  %6115 = alloca i8, i64 35, align 1
  store [35 x i8] c"`isError result` was not satisfied\00", ptr %6115, align 1
  %6116 = call ptr @make_candy_text(ptr %6115)
  store ptr %6116, ptr @"text_`isError result` was not satisfied", align 8
  %6117 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:unwrapError:9\00", ptr %6117, align 1
  %6118 = call ptr @make_candy_text(ptr %6117)
  store ptr %6118, ptr @"Core:result:unwrapError:9", align 8
  %6119 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapError:12\00", ptr %6119, align 1
  %6120 = call ptr @make_candy_text(ptr %6119)
  store ptr %6120, ptr @"Core:result:unwrapError:12", align 8
  %6121 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6122 = getelementptr inbounds { ptr, ptr }, ptr %6121, i32 0, i32 0
  store ptr %5558, ptr %6122, align 8
  %6123 = getelementptr inbounds { ptr, ptr }, ptr %6121, i32 0, i32 1
  store ptr %5985, ptr %6123, align 8
  %6124 = call ptr @make_candy_function(ptr @Core_result_unwrapError, ptr %6121, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6124, ptr @fun_Core_result_unwrapError, align 8
  %6125 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:expectError:2\00", ptr %6125, align 1
  %6126 = call ptr @make_candy_text(ptr %6125)
  store ptr %6126, ptr @"Core:result:expectError:2", align 8
  %6127 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:expectError:4\00", ptr %6127, align 1
  %6128 = call ptr @make_candy_text(ptr %6127)
  store ptr %6128, ptr @"Core:result:expectError:4", align 8
  %6129 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:12\00", ptr %6129, align 1
  %6130 = call ptr @make_candy_text(ptr %6129)
  store ptr %6130, ptr @"Core:result:expectError:12", align 8
  %6131 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:15\00", ptr %6131, align 1
  %6132 = call ptr @make_candy_text(ptr %6131)
  store ptr %6132, ptr @"Core:result:expectError:15", align 8
  %6133 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:17\00", ptr %6133, align 1
  %6134 = call ptr @make_candy_text(ptr %6133)
  store ptr %6134, ptr @"Core:result:expectError:17", align 8
  %6135 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:20\00", ptr %6135, align 1
  %6136 = call ptr @make_candy_text(ptr %6135)
  store ptr %6136, ptr @"Core:result:expectError:20", align 8
  %6137 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:22\00", ptr %6137, align 1
  %6138 = call ptr @make_candy_text(ptr %6137)
  store ptr %6138, ptr @"Core:result:expectError:22", align 8
  %6139 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:25\00", ptr %6139, align 1
  %6140 = call ptr @make_candy_text(ptr %6139)
  store ptr %6140, ptr @"Core:result:expectError:25", align 8
  %6141 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6142 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6141, i32 0, i32 0
  store ptr %5558, ptr %6142, align 8
  %6143 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6141, i32 0, i32 1
  store ptr %6005, ptr %6143, align 8
  %6144 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6141, i32 0, i32 2
  store ptr %5985, ptr %6144, align 8
  %6145 = call ptr @make_candy_function(ptr @Core_result_expectError, ptr %6141, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6145, ptr @fun_Core_result_expectError, align 8
  %6146 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:2\00", ptr %6146, align 1
  %6147 = call ptr @make_candy_text(ptr %6146)
  store ptr %6147, ptr @"Core:result:mapOrElse:2", align 8
  %6148 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %6148, align 1
  %6149 = call ptr @make_candy_text(ptr %6148)
  store ptr %6149, ptr @"Core:result:mapOrElse:4", align 8
  %6150 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:12\00", ptr %6150, align 1
  %6151 = call ptr @make_candy_text(ptr %6150)
  store ptr %6151, ptr @"Core:result:mapOrElse:12", align 8
  %6152 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:14\00", ptr %6152, align 1
  %6153 = call ptr @make_candy_text(ptr %6152)
  store ptr %6153, ptr @"Core:result:mapOrElse:14", align 8
  %6154 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %6154, align 1
  %6155 = call ptr @make_candy_text(ptr %6154)
  store ptr %6155, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %6156 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:16\00", ptr %6156, align 1
  %6157 = call ptr @make_candy_text(ptr %6156)
  store ptr %6157, ptr @"Core:result:mapOrElse:16", align 8
  %6158 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:24\00", ptr %6158, align 1
  %6159 = call ptr @make_candy_text(ptr %6158)
  store ptr %6159, ptr @"Core:result:mapOrElse:24", align 8
  %6160 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:26\00", ptr %6160, align 1
  %6161 = call ptr @make_candy_text(ptr %6160)
  store ptr %6161, ptr @"Core:result:mapOrElse:26", align 8
  %6162 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %6162, align 1
  %6163 = call ptr @make_candy_text(ptr %6162)
  store ptr %6163, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %6164 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:28\00", ptr %6164, align 1
  %6165 = call ptr @make_candy_text(ptr %6164)
  store ptr %6165, ptr @"Core:result:mapOrElse:28", align 8
  %6166 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:30\00", ptr %6166, align 1
  %6167 = call ptr @make_candy_text(ptr %6166)
  store ptr %6167, ptr @"Core:result:mapOrElse:30", align 8
  %6168 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:30:value\00", ptr %6168, align 1
  %6169 = call ptr @make_candy_text(ptr %6168)
  store ptr %6169, ptr @"Core:result:mapOrElse:30:value", align 8
  %6170 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:2\00", ptr %6170, align 1
  %6171 = call ptr @make_candy_text(ptr %6170)
  store ptr %6171, ptr @"Core:result:mapOrElse:30:2", align 8
  %6172 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:30:value#1\00", ptr %6172, align 1
  %6173 = call ptr @make_candy_text(ptr %6172)
  store ptr %6173, ptr @"Core:result:mapOrElse:30:value#1", align 8
  %6174 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:5\00", ptr %6174, align 1
  %6175 = call ptr @make_candy_text(ptr %6174)
  store ptr %6175, ptr @"Core:result:mapOrElse:30:5", align 8
  %6176 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6177 = getelementptr inbounds { ptr }, ptr %6176, i32 0, i32 0
  store ptr %5677, ptr %6177, align 8
  %6178 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %6176, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6178, ptr @fun_Core_result_mapOrElse, align 8
  %6179 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:2\00", ptr %6179, align 1
  %6180 = call ptr @make_candy_text(ptr %6179)
  store ptr %6180, ptr @"Core:result:mapOr:2", align 8
  %6181 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:4\00", ptr %6181, align 1
  %6182 = call ptr @make_candy_text(ptr %6181)
  store ptr %6182, ptr @"Core:result:mapOr:4", align 8
  %6183 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:12\00", ptr %6183, align 1
  %6184 = call ptr @make_candy_text(ptr %6183)
  store ptr %6184, ptr @"Core:result:mapOr:12", align 8
  %6185 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:14\00", ptr %6185, align 1
  %6186 = call ptr @make_candy_text(ptr %6185)
  store ptr %6186, ptr @"Core:result:mapOr:14", align 8
  %6187 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:16\00", ptr %6187, align 1
  %6188 = call ptr @make_candy_text(ptr %6187)
  store ptr %6188, ptr @"Core:result:mapOr:16", align 8
  %6189 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:21\00", ptr %6189, align 1
  %6190 = call ptr @make_candy_text(ptr %6189)
  store ptr %6190, ptr @"Core:result:mapOr:21", align 8
  %6191 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6192 = getelementptr inbounds { ptr }, ptr %6191, i32 0, i32 0
  store ptr %5677, ptr %6192, align 8
  %6193 = call ptr @make_candy_function(ptr @Core_result_mapOr, ptr %6191, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6193, ptr @fun_Core_result_mapOr, align 8
  %6194 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:2\00", ptr %6194, align 1
  %6195 = call ptr @make_candy_text(ptr %6194)
  store ptr %6195, ptr @"Core:result:flatMap:2", align 8
  %6196 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:4\00", ptr %6196, align 1
  %6197 = call ptr @make_candy_text(ptr %6196)
  store ptr %6197, ptr @"Core:result:flatMap:4", align 8
  %6198 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:12\00", ptr %6198, align 1
  %6199 = call ptr @make_candy_text(ptr %6198)
  store ptr %6199, ptr @"Core:result:flatMap:12", align 8
  %6200 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:14\00", ptr %6200, align 1
  %6201 = call ptr @make_candy_text(ptr %6200)
  store ptr %6201, ptr @"Core:result:flatMap:14", align 8
  %6202 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:16\00", ptr %6202, align 1
  %6203 = call ptr @make_candy_text(ptr %6202)
  store ptr %6203, ptr @"Core:result:flatMap:16", align 8
  %6204 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:flatMap:19:2\00", ptr %6204, align 1
  %6205 = call ptr @make_candy_text(ptr %6204)
  store ptr %6205, ptr @"Core:result:flatMap:19:2", align 8
  %6206 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:21\00", ptr %6206, align 1
  %6207 = call ptr @make_candy_text(ptr %6206)
  store ptr %6207, ptr @"Core:result:flatMap:21", align 8
  %6208 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6209 = getelementptr inbounds { ptr }, ptr %6208, i32 0, i32 0
  store ptr %5677, ptr %6209, align 8
  %6210 = call ptr @make_candy_function(ptr @Core_result_flatMap, ptr %6208, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6210, ptr @fun_Core_result_flatMap, align 8
  %6211 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:2\00", ptr %6211, align 1
  %6212 = call ptr @make_candy_text(ptr %6211)
  store ptr %6212, ptr @"Core:result:map:2", align 8
  %6213 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:4\00", ptr %6213, align 1
  %6214 = call ptr @make_candy_text(ptr %6213)
  store ptr %6214, ptr @"Core:result:map:4", align 8
  %6215 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:12\00", ptr %6215, align 1
  %6216 = call ptr @make_candy_text(ptr %6215)
  store ptr %6216, ptr @"Core:result:map:12", align 8
  %6217 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:14\00", ptr %6217, align 1
  %6218 = call ptr @make_candy_text(ptr %6217)
  store ptr %6218, ptr @"Core:result:map:14", align 8
  %6219 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:16\00", ptr %6219, align 1
  %6220 = call ptr @make_candy_text(ptr %6219)
  store ptr %6220, ptr @"Core:result:map:16", align 8
  %6221 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:map:19:3\00", ptr %6221, align 1
  %6222 = call ptr @make_candy_text(ptr %6221)
  store ptr %6222, ptr @"Core:result:map:19:3", align 8
  %6223 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:20\00", ptr %6223, align 1
  %6224 = call ptr @make_candy_text(ptr %6223)
  store ptr %6224, ptr @"Core:result:map:20", align 8
  %6225 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6226 = getelementptr inbounds { ptr }, ptr %6225, i32 0, i32 0
  store ptr %5677, ptr %6226, align 8
  %6227 = call ptr @make_candy_function(ptr @Core_result_map, ptr %6225, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6227, ptr @fun_Core_result_map, align 8
  %6228 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:and:2\00", ptr %6228, align 1
  %6229 = call ptr @make_candy_text(ptr %6228)
  store ptr %6229, ptr @"Core:result:and:2", align 8
  %6230 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is resultA` was not satisfied\00", ptr %6230, align 1
  %6231 = call ptr @make_candy_text(ptr %6230)
  store ptr %6231, ptr @"text_`is resultA` was not satisfied", align 8
  %6232 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:and:4\00", ptr %6232, align 1
  %6233 = call ptr @make_candy_text(ptr %6232)
  store ptr %6233, ptr @"Core:result:and:4", align 8
  %6234 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:and:7\00", ptr %6234, align 1
  %6235 = call ptr @make_candy_text(ptr %6234)
  store ptr %6235, ptr @"Core:result:and:7", align 8
  %6236 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is resultB` was not satisfied\00", ptr %6236, align 1
  %6237 = call ptr @make_candy_text(ptr %6236)
  store ptr %6237, ptr @"text_`is resultB` was not satisfied", align 8
  %6238 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:and:9\00", ptr %6238, align 1
  %6239 = call ptr @make_candy_text(ptr %6238)
  store ptr %6239, ptr @"Core:result:and:9", align 8
  %6240 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:and:13\00", ptr %6240, align 1
  %6241 = call ptr @make_candy_text(ptr %6240)
  store ptr %6241, ptr @"Core:result:and:13", align 8
  %6242 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6243 = call ptr @make_candy_function(ptr @Core_result_and, ptr %6242, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6243, ptr @fun_Core_result_and, align 8
  %6244 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:flatMapError:2\00", ptr %6244, align 1
  %6245 = call ptr @make_candy_text(ptr %6244)
  store ptr %6245, ptr @"Core:result:flatMapError:2", align 8
  %6246 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:flatMapError:4\00", ptr %6246, align 1
  %6247 = call ptr @make_candy_text(ptr %6246)
  store ptr %6247, ptr @"Core:result:flatMapError:4", align 8
  %6248 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:flatMapError:12\00", ptr %6248, align 1
  %6249 = call ptr @make_candy_text(ptr %6248)
  store ptr %6249, ptr @"Core:result:flatMapError:12", align 8
  %6250 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:flatMapError:14\00", ptr %6250, align 1
  %6251 = call ptr @make_candy_text(ptr %6250)
  store ptr %6251, ptr @"Core:result:flatMapError:14", align 8
  %6252 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:flatMapError:16\00", ptr %6252, align 1
  %6253 = call ptr @make_candy_text(ptr %6252)
  store ptr %6253, ptr @"Core:result:flatMapError:16", align 8
  %6254 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:flatMapError:20:2\00", ptr %6254, align 1
  %6255 = call ptr @make_candy_text(ptr %6254)
  store ptr %6255, ptr @"Core:result:flatMapError:20:2", align 8
  %6256 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:flatMapError:21\00", ptr %6256, align 1
  %6257 = call ptr @make_candy_text(ptr %6256)
  store ptr %6257, ptr @"Core:result:flatMapError:21", align 8
  %6258 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6259 = getelementptr inbounds { ptr }, ptr %6258, i32 0, i32 0
  store ptr %5677, ptr %6259, align 8
  %6260 = call ptr @make_candy_function(ptr @Core_result_flatMapError, ptr %6258, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6260, ptr @fun_Core_result_flatMapError, align 8
  %6261 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:mapError:2\00", ptr %6261, align 1
  %6262 = call ptr @make_candy_text(ptr %6261)
  store ptr %6262, ptr @"Core:result:mapError:2", align 8
  %6263 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:mapError:4\00", ptr %6263, align 1
  %6264 = call ptr @make_candy_text(ptr %6263)
  store ptr %6264, ptr @"Core:result:mapError:4", align 8
  %6265 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapError:12\00", ptr %6265, align 1
  %6266 = call ptr @make_candy_text(ptr %6265)
  store ptr %6266, ptr @"Core:result:mapError:12", align 8
  %6267 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapError:14\00", ptr %6267, align 1
  %6268 = call ptr @make_candy_text(ptr %6267)
  store ptr %6268, ptr @"Core:result:mapError:14", align 8
  %6269 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapError:16\00", ptr %6269, align 1
  %6270 = call ptr @make_candy_text(ptr %6269)
  store ptr %6270, ptr @"Core:result:mapError:16", align 8
  %6271 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:mapError:19:3\00", ptr %6271, align 1
  %6272 = call ptr @make_candy_text(ptr %6271)
  store ptr %6272, ptr @"Core:result:mapError:19:3", align 8
  %6273 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapError:20\00", ptr %6273, align 1
  %6274 = call ptr @make_candy_text(ptr %6273)
  store ptr %6274, ptr @"Core:result:mapError:20", align 8
  %6275 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6276 = getelementptr inbounds { ptr }, ptr %6275, i32 0, i32 0
  store ptr %5677, ptr %6276, align 8
  %6277 = call ptr @make_candy_function(ptr @Core_result_mapError, ptr %6275, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6277, ptr @fun_Core_result_mapError, align 8
  %6278 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:or:2\00", ptr %6278, align 1
  %6279 = call ptr @make_candy_text(ptr %6278)
  store ptr %6279, ptr @"Core:result:or:2", align 8
  %6280 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:or:4\00", ptr %6280, align 1
  %6281 = call ptr @make_candy_text(ptr %6280)
  store ptr %6281, ptr @"Core:result:or:4", align 8
  %6282 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:or:7\00", ptr %6282, align 1
  %6283 = call ptr @make_candy_text(ptr %6282)
  store ptr %6283, ptr @"Core:result:or:7", align 8
  %6284 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:or:9\00", ptr %6284, align 1
  %6285 = call ptr @make_candy_text(ptr %6284)
  store ptr %6285, ptr @"Core:result:or:9", align 8
  %6286 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:or:13\00", ptr %6286, align 1
  %6287 = call ptr @make_candy_text(ptr %6286)
  store ptr %6287, ptr @"Core:result:or:13", align 8
  %6288 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6289 = call ptr @make_candy_function(ptr @Core_result_or, ptr %6288, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6289, ptr @fun_Core_result_or, align 8
  %6290 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:2\00", ptr %6290, align 1
  %6291 = call ptr @make_candy_text(ptr %6290)
  store ptr %6291, ptr @"Core:result:unwrapOrElse:2", align 8
  %6292 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:4\00", ptr %6292, align 1
  %6293 = call ptr @make_candy_text(ptr %6292)
  store ptr %6293, ptr @"Core:result:unwrapOrElse:4", align 8
  %6294 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:12\00", ptr %6294, align 1
  %6295 = call ptr @make_candy_text(ptr %6294)
  store ptr %6295, ptr @"Core:result:unwrapOrElse:12", align 8
  %6296 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:14\00", ptr %6296, align 1
  %6297 = call ptr @make_candy_text(ptr %6296)
  store ptr %6297, ptr @"Core:result:unwrapOrElse:14", align 8
  %6298 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function.is0 defaultGetter` was not satisfied\00", ptr %6298, align 1
  %6299 = call ptr @make_candy_text(ptr %6298)
  store ptr %6299, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %6300 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:16\00", ptr %6300, align 1
  %6301 = call ptr @make_candy_text(ptr %6300)
  store ptr %6301, ptr @"Core:result:unwrapOrElse:16", align 8
  %6302 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6303 = call ptr @make_candy_function(ptr @"Core_iterable_range_38, Core_result_unwrapOrElse_19", ptr %6302, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6303, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_19", align 8
  %6304 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:20:7\00", ptr %6304, align 1
  %6305 = call ptr @make_candy_text(ptr %6304)
  store ptr %6305, ptr @"Core:result:unwrapOrElse:20:7", align 8
  %6306 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:20:9\00", ptr %6306, align 1
  %6307 = call ptr @make_candy_text(ptr %6306)
  store ptr %6307, ptr @"Core:result:unwrapOrElse:20:9", align 8
  %6308 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:21\00", ptr %6308, align 1
  %6309 = call ptr @make_candy_text(ptr %6308)
  store ptr %6309, ptr @"Core:result:unwrapOrElse:21", align 8
  %6310 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6311 = getelementptr inbounds { ptr }, ptr %6310, i32 0, i32 0
  store ptr %5677, ptr %6311, align 8
  %6312 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse, ptr %6310, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6312, ptr @fun_Core_result_unwrapOrElse, align 8
  %6313 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:2\00", ptr %6313, align 1
  %6314 = call ptr @make_candy_text(ptr %6313)
  store ptr %6314, ptr @"Core:result:unwrapOr:2", align 8
  %6315 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:4\00", ptr %6315, align 1
  %6316 = call ptr @make_candy_text(ptr %6315)
  store ptr %6316, ptr @"Core:result:unwrapOr:4", align 8
  %6317 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:8\00", ptr %6317, align 1
  %6318 = call ptr @make_candy_text(ptr %6317)
  store ptr %6318, ptr @"Core:result:unwrapOr:8", align 8
  %6319 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6320 = call ptr @make_candy_function(ptr @Core_result_unwrapOr, ptr %6319, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6320, ptr @fun_Core_result_unwrapOr, align 8
  %6321 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatten:2\00", ptr %6321, align 1
  %6322 = call ptr @make_candy_text(ptr %6321)
  store ptr %6322, ptr @"Core:result:flatten:2", align 8
  %6323 = alloca i8, i64 38, align 1
  store [38 x i8] c"`is resultOfResult` was not satisfied\00", ptr %6323, align 1
  %6324 = call ptr @make_candy_text(ptr %6323)
  store ptr %6324, ptr @"text_`is resultOfResult` was not satisfied", align 8
  %6325 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatten:4\00", ptr %6325, align 1
  %6326 = call ptr @make_candy_text(ptr %6325)
  store ptr %6326, ptr @"Core:result:flatten:4", align 8
  %6327 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:flatten:7:2\00", ptr %6327, align 1
  %6328 = call ptr @make_candy_text(ptr %6327)
  store ptr %6328, ptr @"Core:result:flatten:7:2", align 8
  %6329 = alloca i8, i64 35, align 1
  store [35 x i8] c"`is innerResult` was not satisfied\00", ptr %6329, align 1
  %6330 = call ptr @make_candy_text(ptr %6329)
  store ptr %6330, ptr @"text_`is innerResult` was not satisfied", align 8
  %6331 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:flatten:7:4\00", ptr %6331, align 1
  %6332 = call ptr @make_candy_text(ptr %6331)
  store ptr %6332, ptr @"Core:result:flatten:7:4", align 8
  %6333 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatten:8\00", ptr %6333, align 1
  %6334 = call ptr @make_candy_text(ptr %6333)
  store ptr %6334, ptr @"Core:result:flatten:8", align 8
  %6335 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6336 = call ptr @make_candy_function(ptr @Core_result_flatten, ptr %6335, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6336, ptr @fun_Core_result_flatten, align 8
  %6337 = alloca i8, i64 9, align 1
  store [9 x i8] c"UnwrapOr\00", ptr %6337, align 1
  %6338 = call ptr @make_candy_tag(ptr %6337, ptr null)
  store ptr %6338, ptr @tag_UnwrapOr, align 8
  %6339 = alloca i8, i64 7, align 1
  store [7 x i8] c"Expect\00", ptr %6339, align 1
  %6340 = call ptr @make_candy_tag(ptr %6339, ptr null)
  store ptr %6340, ptr @tag_Expect, align 8
  %6341 = alloca i8, i64 8, align 1
  store [8 x i8] c"Flatten\00", ptr %6341, align 1
  %6342 = call ptr @make_candy_tag(ptr %6341, ptr null)
  store ptr %6342, ptr @tag_Flatten, align 8
  %6343 = alloca i8, i64 10, align 1
  store [10 x i8] c"MapOrElse\00", ptr %6343, align 1
  %6344 = call ptr @make_candy_tag(ptr %6343, ptr null)
  store ptr %6344, ptr @tag_MapOrElse, align 8
  %6345 = alloca i8, i64 4, align 1
  store [4 x i8] c"Map\00", ptr %6345, align 1
  %6346 = call ptr @make_candy_tag(ptr %6345, ptr null)
  store ptr %6346, ptr @tag_Map, align 8
  %6347 = alloca i8, i64 8, align 1
  store [8 x i8] c"IsError\00", ptr %6347, align 1
  %6348 = call ptr @make_candy_tag(ptr %6347, ptr null)
  store ptr %6348, ptr @tag_IsError, align 8
  %6349 = alloca i8, i64 8, align 1
  store [8 x i8] c"FlatMap\00", ptr %6349, align 1
  %6350 = call ptr @make_candy_tag(ptr %6349, ptr null)
  store ptr %6350, ptr @tag_FlatMap, align 8
  %6351 = alloca i8, i64 12, align 1
  store [12 x i8] c"ExpectError\00", ptr %6351, align 1
  %6352 = call ptr @make_candy_tag(ptr %6351, ptr null)
  store ptr %6352, ptr @tag_ExpectError, align 8
  %6353 = alloca i8, i64 12, align 1
  store [12 x i8] c"UnwrapError\00", ptr %6353, align 1
  %6354 = call ptr @make_candy_tag(ptr %6353, ptr null)
  store ptr %6354, ptr @tag_UnwrapError, align 8
  %6355 = alloca i8, i64 13, align 1
  store [13 x i8] c"UnwrapOrElse\00", ptr %6355, align 1
  %6356 = call ptr @make_candy_tag(ptr %6355, ptr null)
  store ptr %6356, ptr @tag_UnwrapOrElse, align 8
  %6357 = alloca i8, i64 7, align 1
  store [7 x i8] c"Unwrap\00", ptr %6357, align 1
  %6358 = call ptr @make_candy_tag(ptr %6357, ptr null)
  store ptr %6358, ptr @tag_Unwrap, align 8
  %6359 = alloca i8, i64 6, align 1
  store [6 x i8] c"MapOr\00", ptr %6359, align 1
  %6360 = call ptr @make_candy_tag(ptr %6359, ptr null)
  store ptr %6360, ptr @tag_MapOr, align 8
  %6361 = alloca i8, i64 13, align 1
  store [13 x i8] c"FlatMapError\00", ptr %6361, align 1
  %6362 = call ptr @make_candy_tag(ptr %6361, ptr null)
  store ptr %6362, ptr @tag_FlatMapError, align 8
  %6363 = alloca i8, i64 9, align 1
  store [9 x i8] c"MapError\00", ptr %6363, align 1
  %6364 = call ptr @make_candy_tag(ptr %6363, ptr null)
  store ptr %6364, ptr @tag_MapError, align 8
  %6365 = alloca i8, i64 5, align 1
  store [5 x i8] c"IsOk\00", ptr %6365, align 1
  %6366 = call ptr @make_candy_tag(ptr %6365, ptr null)
  store ptr %6366, ptr @tag_IsOk, align 8
  %6367 = alloca ptr, i64 20, align 8
  %6368 = alloca ptr, i64 20, align 8
  %6369 = load ptr, ptr @tag_UnwrapOrElse, align 8
  %6370 = load ptr, ptr @fun_Core_result_unwrapOrElse, align 8
  %6371 = getelementptr ptr, ptr %6367, i64 0
  store ptr %6369, ptr %6371, align 8
  %6372 = getelementptr ptr, ptr %6368, i64 0
  store ptr %6370, ptr %6372, align 8
  %6373 = load ptr, ptr @tag_GetValue, align 8
  %6374 = load ptr, ptr @fun_Core_result_getValue, align 8
  %6375 = getelementptr ptr, ptr %6367, i64 1
  store ptr %6373, ptr %6375, align 8
  %6376 = getelementptr ptr, ptr %6368, i64 1
  store ptr %6374, ptr %6376, align 8
  %6377 = load ptr, ptr @tag_Expect, align 8
  %6378 = load ptr, ptr @fun_Core_result_expect, align 8
  %6379 = getelementptr ptr, ptr %6367, i64 2
  store ptr %6377, ptr %6379, align 8
  %6380 = getelementptr ptr, ptr %6368, i64 2
  store ptr %6378, ptr %6380, align 8
  %6381 = load ptr, ptr @tag_And, align 8
  %6382 = load ptr, ptr @fun_Core_result_and, align 8
  %6383 = getelementptr ptr, ptr %6367, i64 3
  store ptr %6381, ptr %6383, align 8
  %6384 = getelementptr ptr, ptr %6368, i64 3
  store ptr %6382, ptr %6384, align 8
  %6385 = load ptr, ptr @tag_FlatMapError, align 8
  %6386 = load ptr, ptr @fun_Core_result_flatMapError, align 8
  %6387 = getelementptr ptr, ptr %6367, i64 4
  store ptr %6385, ptr %6387, align 8
  %6388 = getelementptr ptr, ptr %6368, i64 4
  store ptr %6386, ptr %6388, align 8
  %6389 = load ptr, ptr @tag_ExpectError, align 8
  %6390 = load ptr, ptr @fun_Core_result_expectError, align 8
  %6391 = getelementptr ptr, ptr %6367, i64 5
  store ptr %6389, ptr %6391, align 8
  %6392 = getelementptr ptr, ptr %6368, i64 5
  store ptr %6390, ptr %6392, align 8
  %6393 = load ptr, ptr @tag_MapOrElse, align 8
  %6394 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  %6395 = getelementptr ptr, ptr %6367, i64 6
  store ptr %6393, ptr %6395, align 8
  %6396 = getelementptr ptr, ptr %6368, i64 6
  store ptr %6394, ptr %6396, align 8
  %6397 = load ptr, ptr @tag_IsError, align 8
  %6398 = load ptr, ptr @fun_Core_result_isError, align 8
  %6399 = getelementptr ptr, ptr %6367, i64 7
  store ptr %6397, ptr %6399, align 8
  %6400 = getelementptr ptr, ptr %6368, i64 7
  store ptr %6398, ptr %6400, align 8
  %6401 = load ptr, ptr @tag_Flatten, align 8
  %6402 = load ptr, ptr @fun_Core_result_flatten, align 8
  %6403 = getelementptr ptr, ptr %6367, i64 8
  store ptr %6401, ptr %6403, align 8
  %6404 = getelementptr ptr, ptr %6368, i64 8
  store ptr %6402, ptr %6404, align 8
  %6405 = load ptr, ptr @tag_IsOk, align 8
  %6406 = load ptr, ptr @fun_Core_result_isOk, align 8
  %6407 = getelementptr ptr, ptr %6367, i64 9
  store ptr %6405, ptr %6407, align 8
  %6408 = getelementptr ptr, ptr %6368, i64 9
  store ptr %6406, ptr %6408, align 8
  %6409 = load ptr, ptr @tag_Unwrap, align 8
  %6410 = load ptr, ptr @fun_Core_result_unwrap, align 8
  %6411 = getelementptr ptr, ptr %6367, i64 10
  store ptr %6409, ptr %6411, align 8
  %6412 = getelementptr ptr, ptr %6368, i64 10
  store ptr %6410, ptr %6412, align 8
  %6413 = load ptr, ptr @tag_MapError, align 8
  %6414 = load ptr, ptr @fun_Core_result_mapError, align 8
  %6415 = getelementptr ptr, ptr %6367, i64 11
  store ptr %6413, ptr %6415, align 8
  %6416 = getelementptr ptr, ptr %6368, i64 11
  store ptr %6414, ptr %6416, align 8
  %6417 = load ptr, ptr @tag_UnwrapError, align 8
  %6418 = load ptr, ptr @fun_Core_result_unwrapError, align 8
  %6419 = getelementptr ptr, ptr %6367, i64 12
  store ptr %6417, ptr %6419, align 8
  %6420 = getelementptr ptr, ptr %6368, i64 12
  store ptr %6418, ptr %6420, align 8
  %6421 = load ptr, ptr @tag_Map, align 8
  %6422 = load ptr, ptr @fun_Core_result_map, align 8
  %6423 = getelementptr ptr, ptr %6367, i64 13
  store ptr %6421, ptr %6423, align 8
  %6424 = getelementptr ptr, ptr %6368, i64 13
  store ptr %6422, ptr %6424, align 8
  %6425 = load ptr, ptr @tag_UnwrapOr, align 8
  %6426 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  %6427 = getelementptr ptr, ptr %6367, i64 14
  store ptr %6425, ptr %6427, align 8
  %6428 = getelementptr ptr, ptr %6368, i64 14
  store ptr %6426, ptr %6428, align 8
  %6429 = load ptr, ptr @tag_Is, align 8
  %6430 = load ptr, ptr @fun_Core_result_is, align 8
  %6431 = getelementptr ptr, ptr %6367, i64 15
  store ptr %6429, ptr %6431, align 8
  %6432 = getelementptr ptr, ptr %6368, i64 15
  store ptr %6430, ptr %6432, align 8
  %6433 = load ptr, ptr @tag_Or, align 8
  %6434 = load ptr, ptr @fun_Core_result_or, align 8
  %6435 = getelementptr ptr, ptr %6367, i64 16
  store ptr %6433, ptr %6435, align 8
  %6436 = getelementptr ptr, ptr %6368, i64 16
  store ptr %6434, ptr %6436, align 8
  %6437 = load ptr, ptr @tag_MapOr, align 8
  %6438 = load ptr, ptr @fun_Core_result_mapOr, align 8
  %6439 = getelementptr ptr, ptr %6367, i64 17
  store ptr %6437, ptr %6439, align 8
  %6440 = getelementptr ptr, ptr %6368, i64 17
  store ptr %6438, ptr %6440, align 8
  %6441 = load ptr, ptr @tag_FlatMap, align 8
  %6442 = load ptr, ptr @fun_Core_result_flatMap, align 8
  %6443 = getelementptr ptr, ptr %6367, i64 18
  store ptr %6441, ptr %6443, align 8
  %6444 = getelementptr ptr, ptr %6368, i64 18
  store ptr %6442, ptr %6444, align 8
  %6445 = getelementptr ptr, ptr %6367, i64 19
  store ptr null, ptr %6445, align 8
  %6446 = getelementptr ptr, ptr %6368, i64 19
  store ptr null, ptr %6446, align 8
  %6447 = call ptr @make_candy_struct(ptr %6367, ptr %6368)
  %6448 = load ptr, ptr @tag_Equals, align 8
  %6449 = call ptr @Builtins__structGet(ptr %997, ptr %6448)
  %6450 = load ptr, ptr @tag_TypeOf, align 8
  %6451 = call ptr @Builtins__structGet(ptr %997, ptr %6450)
  %6452 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6453 = getelementptr inbounds { ptr, ptr }, ptr %6452, i32 0, i32 0
  store ptr %6451, ptr %6453, align 8
  %6454 = getelementptr inbounds { ptr, ptr }, ptr %6452, i32 0, i32 1
  store ptr %6449, ptr %6454, align 8
  %6455 = call ptr @make_candy_function(ptr @Core_type_is.1764, ptr %6452, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6455, ptr @fun_Core_type_is.1765, align 8
  %6456 = alloca ptr, i64 3, align 8
  %6457 = alloca ptr, i64 3, align 8
  %6458 = load ptr, ptr @tag_TypeOf, align 8
  %6459 = getelementptr ptr, ptr %6456, i64 0
  store ptr %6458, ptr %6459, align 8
  %6460 = getelementptr ptr, ptr %6457, i64 0
  store ptr %6451, ptr %6460, align 8
  %6461 = load ptr, ptr @tag_Is, align 8
  %6462 = load ptr, ptr @fun_Core_type_is.1765, align 8
  %6463 = getelementptr ptr, ptr %6456, i64 1
  store ptr %6461, ptr %6463, align 8
  %6464 = getelementptr ptr, ptr %6457, i64 1
  store ptr %6462, ptr %6464, align 8
  %6465 = getelementptr ptr, ptr %6456, i64 2
  store ptr null, ptr %6465, align 8
  %6466 = getelementptr ptr, ptr %6457, i64 2
  store ptr null, ptr %6466, align 8
  %6467 = call ptr @make_candy_struct(ptr %6456, ptr %6457)
  %6468 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:list:is:7\00", ptr %6468, align 1
  %6469 = call ptr @make_candy_text(ptr %6468)
  store ptr %6469, ptr @"Core:list:is:7", align 8
  %6470 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:list:is:10\00", ptr %6470, align 1
  %6471 = call ptr @make_candy_text(ptr %6470)
  store ptr %6471, ptr @"Core:list:is:10", align 8
  %6472 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6473 = getelementptr inbounds { ptr }, ptr %6472, i32 0, i32 0
  store ptr %6467, ptr %6473, align 8
  %6474 = call ptr @make_candy_function(ptr @Core_list_is, ptr %6472, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6474, ptr @fun_Core_list_is, align 8
  %6475 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:list:89\00", ptr %6475, align 1
  %6476 = call ptr @make_candy_text(ptr %6475)
  store ptr %6476, ptr @"Core:list:89", align 8
  %6477 = load ptr, ptr @tag_ListLength, align 8
  %6478 = call ptr @Builtins__structGet(ptr %997, ptr %6477)
  %6479 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is list` was not satisfied\00", ptr %6479, align 1
  %6480 = call ptr @make_candy_text(ptr %6479)
  store ptr %6480, ptr @"text_`is list` was not satisfied", align 8
  %6481 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:isEmpty:4\00", ptr %6481, align 1
  %6482 = call ptr @make_candy_text(ptr %6481)
  store ptr %6482, ptr @"Core:list:isEmpty:4", align 8
  %6483 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:isEmpty:8\00", ptr %6483, align 1
  %6484 = call ptr @make_candy_text(ptr %6483)
  store ptr %6484, ptr @"Core:list:isEmpty:8", align 8
  %6485 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:list:isEmpty:10\00", ptr %6485, align 1
  %6486 = call ptr @make_candy_text(ptr %6485)
  store ptr %6486, ptr @"Core:list:isEmpty:10", align 8
  %6487 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6488 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6487, i32 0, i32 0
  store ptr %4587, ptr %6488, align 8
  %6489 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6487, i32 0, i32 1
  store ptr %6478, ptr %6489, align 8
  %6490 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6487, i32 0, i32 2
  store ptr %6467, ptr %6490, align 8
  %6491 = call ptr @make_candy_function(ptr @Core_list_isEmpty, ptr %6487, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6491, ptr @fun_Core_list_isEmpty, align 8
  %6492 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:lastIndex:4\00", ptr %6492, align 1
  %6493 = call ptr @make_candy_text(ptr %6492)
  store ptr %6493, ptr @"Core:list:lastIndex:4", align 8
  %6494 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:lastIndex:8\00", ptr %6494, align 1
  %6495 = call ptr @make_candy_text(ptr %6494)
  store ptr %6495, ptr @"Core:list:lastIndex:8", align 8
  %6496 = alloca i8, i64 43, align 1
  store [43 x i8] c"Can't get the last index of an empty list.\00", ptr %6496, align 1
  %6497 = call ptr @make_candy_text(ptr %6496)
  store ptr %6497, ptr @"text_Can't get the last index of an empty list.", align 8
  %6498 = load ptr, ptr @"text_Can't get the last index of an empty list.", align 8
  %6499 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %6499, align 1
  %6500 = call ptr @make_candy_tag(ptr %6499, ptr %6498)
  store ptr %6500, ptr @tag_Error.1766, align 8
  %6501 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6502 = call ptr @make_candy_function(ptr @Core_list_lastIndex_9, ptr %6501, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6502, ptr @fun_Core_list_lastIndex_9, align 8
  %6503 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:lastIndex:10:3\00", ptr %6503, align 1
  %6504 = call ptr @make_candy_text(ptr %6503)
  store ptr %6504, ptr @"Core:list:lastIndex:10:3", align 8
  %6505 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:lastIndex:10:11\00", ptr %6505, align 1
  %6506 = call ptr @make_candy_text(ptr %6505)
  store ptr %6506, ptr @"Core:list:lastIndex:10:11", align 8
  %6507 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:lastIndex:10:13\00", ptr %6507, align 1
  %6508 = call ptr @make_candy_text(ptr %6507)
  store ptr %6508, ptr @"Core:list:lastIndex:10:13", align 8
  %6509 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:list:lastIndex:11\00", ptr %6509, align 1
  %6510 = call ptr @make_candy_text(ptr %6509)
  store ptr %6510, ptr @"Core:list:lastIndex:11", align 8
  %6511 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6512 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6511, i32 0, i32 0
  store ptr %6478, ptr %6512, align 8
  %6513 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6511, i32 0, i32 1
  store ptr %6467, ptr %6513, align 8
  %6514 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6511, i32 0, i32 2
  store ptr %4587, ptr %6514, align 8
  %6515 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6511, i32 0, i32 3
  store ptr %4582, ptr %6515, align 8
  %6516 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6511, i32 0, i32 4
  store ptr %5512, ptr %6516, align 8
  %6517 = call ptr @make_candy_function(ptr @Core_list_lastIndex, ptr %6511, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6517, ptr @fun_Core_list_lastIndex, align 8
  %6518 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:isValidIndex:4\00", ptr %6518, align 1
  %6519 = call ptr @make_candy_text(ptr %6518)
  store ptr %6519, ptr @"Core:list:isValidIndex:4", align 8
  %6520 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:12\00", ptr %6520, align 1
  %6521 = call ptr @make_candy_text(ptr %6520)
  store ptr %6521, ptr @"Core:list:isValidIndex:12", align 8
  %6522 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:14\00", ptr %6522, align 1
  %6523 = call ptr @make_candy_text(ptr %6522)
  store ptr %6523, ptr @"Core:list:isValidIndex:14", align 8
  %6524 = alloca i8, i64 33, align 1
  store [33 x i8] c"`int.is index` was not satisfied\00", ptr %6524, align 1
  %6525 = call ptr @make_candy_text(ptr %6524)
  store ptr %6525, ptr @"text_`int.is index` was not satisfied", align 8
  %6526 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:16\00", ptr %6526, align 1
  %6527 = call ptr @make_candy_text(ptr %6526)
  store ptr %6527, ptr @"Core:list:isValidIndex:16", align 8
  %6528 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:20\00", ptr %6528, align 1
  %6529 = call ptr @make_candy_text(ptr %6528)
  store ptr %6529, ptr @"Core:list:isValidIndex:20", align 8
  %6530 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:isValidIndex:22:8\00", ptr %6530, align 1
  %6531 = call ptr @make_candy_text(ptr %6530)
  store ptr %6531, ptr @"Core:list:isValidIndex:22:8", align 8
  %6532 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:isValidIndex:22:9\00", ptr %6532, align 1
  %6533 = call ptr @make_candy_text(ptr %6532)
  store ptr %6533, ptr @"Core:list:isValidIndex:22:9", align 8
  %6534 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:23\00", ptr %6534, align 1
  %6535 = call ptr @make_candy_text(ptr %6534)
  store ptr %6535, ptr @"Core:list:isValidIndex:23", align 8
  %6536 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:31\00", ptr %6536, align 1
  %6537 = call ptr @make_candy_text(ptr %6536)
  store ptr %6537, ptr @"Core:list:isValidIndex:31", align 8
  %6538 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:isValidIndex:32:8\00", ptr %6538, align 1
  %6539 = call ptr @make_candy_text(ptr %6538)
  store ptr %6539, ptr @"Core:list:isValidIndex:32:8", align 8
  %6540 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:isValidIndex:32:11\00", ptr %6540, align 1
  %6541 = call ptr @make_candy_text(ptr %6540)
  store ptr %6541, ptr @"Core:list:isValidIndex:32:11", align 8
  %6542 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:isValidIndex:32:19\00", ptr %6542, align 1
  %6543 = call ptr @make_candy_text(ptr %6542)
  store ptr %6543, ptr @"Core:list:isValidIndex:32:19", align 8
  %6544 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:isValidIndex:32:20\00", ptr %6544, align 1
  %6545 = call ptr @make_candy_text(ptr %6544)
  store ptr %6545, ptr @"Core:list:isValidIndex:32:20", align 8
  %6546 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:isValidIndex:32:21\00", ptr %6546, align 1
  %6547 = call ptr @make_candy_text(ptr %6546)
  store ptr %6547, ptr @"Core:list:isValidIndex:32:21", align 8
  %6548 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:33\00", ptr %6548, align 1
  %6549 = call ptr @make_candy_text(ptr %6548)
  store ptr %6549, ptr @"Core:list:isValidIndex:33", align 8
  %6550 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6551 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6550, i32 0, i32 0
  store ptr %6467, ptr %6551, align 8
  %6552 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6550, i32 0, i32 1
  store ptr %6447, ptr %6552, align 8
  %6553 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6550, i32 0, i32 2
  store ptr %5512, ptr %6553, align 8
  %6554 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6550, i32 0, i32 3
  store ptr %4441, ptr %6554, align 8
  %6555 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6550, i32 0, i32 4
  store ptr %6478, ptr %6555, align 8
  %6556 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6550, i32 0, i32 5
  store ptr %4587, ptr %6556, align 8
  %6557 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6550, i32 0, i32 6
  store ptr %4582, ptr %6557, align 8
  %6558 = call ptr @make_candy_function(ptr @Core_list_isValidIndex, ptr %6550, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6558, ptr @fun_Core_list_isValidIndex, align 8
  %6559 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:list:isValidInsertIndex:4\00", ptr %6559, align 1
  %6560 = call ptr @make_candy_text(ptr %6559)
  store ptr %6560, ptr @"Core:list:isValidInsertIndex:4", align 8
  %6561 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:list:isValidInsertIndex:12\00", ptr %6561, align 1
  %6562 = call ptr @make_candy_text(ptr %6561)
  store ptr %6562, ptr @"Core:list:isValidInsertIndex:12", align 8
  %6563 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:list:isValidInsertIndex:14\00", ptr %6563, align 1
  %6564 = call ptr @make_candy_text(ptr %6563)
  store ptr %6564, ptr @"Core:list:isValidInsertIndex:14", align 8
  %6565 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:list:isValidInsertIndex:16\00", ptr %6565, align 1
  %6566 = call ptr @make_candy_text(ptr %6565)
  store ptr %6566, ptr @"Core:list:isValidInsertIndex:16", align 8
  %6567 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:list:isValidInsertIndex:20\00", ptr %6567, align 1
  %6568 = call ptr @make_candy_text(ptr %6567)
  store ptr %6568, ptr @"Core:list:isValidInsertIndex:20", align 8
  %6569 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:list:isValidInsertIndex:22:8\00", ptr %6569, align 1
  %6570 = call ptr @make_candy_text(ptr %6569)
  store ptr %6570, ptr @"Core:list:isValidInsertIndex:22:8", align 8
  %6571 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:list:isValidInsertIndex:22:9\00", ptr %6571, align 1
  %6572 = call ptr @make_candy_text(ptr %6571)
  store ptr %6572, ptr @"Core:list:isValidInsertIndex:22:9", align 8
  %6573 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:list:isValidInsertIndex:23\00", ptr %6573, align 1
  %6574 = call ptr @make_candy_text(ptr %6573)
  store ptr %6574, ptr @"Core:list:isValidInsertIndex:23", align 8
  %6575 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:list:isValidInsertIndex:31\00", ptr %6575, align 1
  %6576 = call ptr @make_candy_text(ptr %6575)
  store ptr %6576, ptr @"Core:list:isValidInsertIndex:31", align 8
  %6577 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:list:isValidInsertIndex:32:8\00", ptr %6577, align 1
  %6578 = call ptr @make_candy_text(ptr %6577)
  store ptr %6578, ptr @"Core:list:isValidInsertIndex:32:8", align 8
  %6579 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:list:isValidInsertIndex:32:11\00", ptr %6579, align 1
  %6580 = call ptr @make_candy_text(ptr %6579)
  store ptr %6580, ptr @"Core:list:isValidInsertIndex:32:11", align 8
  %6581 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:list:isValidInsertIndex:32:12\00", ptr %6581, align 1
  %6582 = call ptr @make_candy_text(ptr %6581)
  store ptr %6582, ptr @"Core:list:isValidInsertIndex:32:12", align 8
  %6583 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:list:isValidInsertIndex:33\00", ptr %6583, align 1
  %6584 = call ptr @make_candy_text(ptr %6583)
  store ptr %6584, ptr @"Core:list:isValidInsertIndex:33", align 8
  %6585 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6586 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6585, i32 0, i32 0
  store ptr %4441, ptr %6586, align 8
  %6587 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6585, i32 0, i32 1
  store ptr %6478, ptr %6587, align 8
  %6588 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6585, i32 0, i32 2
  store ptr %6467, ptr %6588, align 8
  %6589 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6585, i32 0, i32 3
  store ptr %4587, ptr %6589, align 8
  %6590 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6585, i32 0, i32 4
  store ptr %4582, ptr %6590, align 8
  %6591 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6585, i32 0, i32 5
  store ptr %5512, ptr %6591, align 8
  %6592 = call ptr @make_candy_function(ptr @Core_list_isValidInsertIndex, ptr %6585, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6592, ptr @fun_Core_list_isValidInsertIndex, align 8
  %6593 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:list:98\00", ptr %6593, align 1
  %6594 = call ptr @make_candy_text(ptr %6593)
  store ptr %6594, ptr @"Core:list:98", align 8
  %6595 = load ptr, ptr @tag_ListGet, align 8
  %6596 = call ptr @Builtins__structGet(ptr %997, ptr %6595)
  %6597 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:single:4\00", ptr %6597, align 1
  %6598 = call ptr @make_candy_text(ptr %6597)
  store ptr %6598, ptr @"Core:list:single:4", align 8
  %6599 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:single:6\00", ptr %6599, align 1
  %6600 = call ptr @make_candy_text(ptr %6599)
  store ptr %6600, ptr @"Core:list:single:6", align 8
  %6601 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected 0 items, got \00", ptr %6601, align 1
  %6602 = call ptr @make_candy_text(ptr %6601)
  store ptr %6602, ptr @"text_Expected 0 items, got ", align 8
  %6603 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected a List, got `\00", ptr %6603, align 1
  %6604 = call ptr @make_candy_text(ptr %6603)
  store ptr %6604, ptr @"text_Expected a List, got `", align 8
  %6605 = alloca i8, i64 44, align 1
  store [44 x i8] c"Can't get the single item of an empty list.\00", ptr %6605, align 1
  %6606 = call ptr @make_candy_text(ptr %6605)
  store ptr %6606, ptr @"text_Can't get the single item of an empty list.", align 8
  %6607 = load ptr, ptr @"text_Can't get the single item of an empty list.", align 8
  %6608 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %6608, align 1
  %6609 = call ptr @make_candy_tag(ptr %6608, ptr %6607)
  store ptr %6609, ptr @tag_Error.1768, align 8
  %6610 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6611 = call ptr @make_candy_function(ptr @Core_list_single_6_case-0_matched, ptr %6610, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6611, ptr @fun_Core_list_single_6_case-0_matched, align 8
  %6612 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected 1 item, got \00", ptr %6612, align 1
  %6613 = call ptr @make_candy_text(ptr %6612)
  store ptr %6613, ptr @"text_Expected 1 item, got ", align 8
  %6614 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:list:single:6:item\00", ptr %6614, align 1
  %6615 = call ptr @make_candy_text(ptr %6614)
  store ptr %6615, ptr @"Core:list:single:6:item", align 8
  %6616 = alloca i8, i64 61, align 1
  store [61 x i8] c"Can't get the single item of a list with more than one item.\00", ptr %6616, align 1
  %6617 = call ptr @make_candy_text(ptr %6616)
  store ptr %6617, ptr @"text_Can't get the single item of a list with more than one item.", align 8
  %6618 = load ptr, ptr @"text_Can't get the single item of a list with more than one item.", align 8
  %6619 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %6619, align 1
  %6620 = call ptr @make_candy_tag(ptr %6619, ptr %6618)
  store ptr %6620, ptr @tag_Error.1769, align 8
  %6621 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6622 = getelementptr inbounds { ptr }, ptr %6621, i32 0, i32 0
  store ptr %6467, ptr %6622, align 8
  %6623 = call ptr @make_candy_function(ptr @Core_list_single, ptr %6621, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6623, ptr @fun_Core_list_single, align 8
  %6624 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:list:first:4\00", ptr %6624, align 1
  %6625 = call ptr @make_candy_text(ptr %6624)
  store ptr %6625, ptr @"Core:list:first:4", align 8
  %6626 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:list:first:6\00", ptr %6626, align 1
  %6627 = call ptr @make_candy_text(ptr %6626)
  store ptr %6627, ptr @"Core:list:first:6", align 8
  %6628 = alloca i8, i64 43, align 1
  store [43 x i8] c"Can't get the first item of an empty list.\00", ptr %6628, align 1
  %6629 = call ptr @make_candy_text(ptr %6628)
  store ptr %6629, ptr @"text_Can't get the first item of an empty list.", align 8
  %6630 = load ptr, ptr @"text_Can't get the first item of an empty list.", align 8
  %6631 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %6631, align 1
  %6632 = call ptr @make_candy_tag(ptr %6631, ptr %6630)
  store ptr %6632, ptr @tag_Error.1781, align 8
  %6633 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6634 = call ptr @make_candy_function(ptr @Core_list_first_6_case-0_matched, ptr %6633, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6634, ptr @fun_Core_list_first_6_case-0_matched, align 8
  %6635 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:list:first:6:13\00", ptr %6635, align 1
  %6636 = call ptr @make_candy_text(ptr %6635)
  store ptr %6636, ptr @"Core:list:first:6:13", align 8
  %6637 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6638 = getelementptr inbounds { ptr, ptr }, ptr %6637, i32 0, i32 0
  store ptr %6596, ptr %6638, align 8
  %6639 = getelementptr inbounds { ptr, ptr }, ptr %6637, i32 0, i32 1
  store ptr %6467, ptr %6639, align 8
  %6640 = call ptr @make_candy_function(ptr @Core_list_first, ptr %6637, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6640, ptr @fun_Core_list_first, align 8
  %6641 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:list:last:4\00", ptr %6641, align 1
  %6642 = call ptr @make_candy_text(ptr %6641)
  store ptr %6642, ptr @"Core:list:last:4", align 8
  %6643 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:list:last:7\00", ptr %6643, align 1
  %6644 = call ptr @make_candy_text(ptr %6643)
  store ptr %6644, ptr @"Core:list:last:7", align 8
  %6645 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:list:last:15\00", ptr %6645, align 1
  %6646 = call ptr @make_candy_text(ptr %6645)
  store ptr %6646, ptr @"Core:list:last:15", align 8
  %6647 = alloca i8, i64 42, align 1
  store [42 x i8] c"Can't get the last item of an empty list.\00", ptr %6647, align 1
  %6648 = call ptr @make_candy_text(ptr %6647)
  store ptr %6648, ptr @"text_Can't get the last item of an empty list.", align 8
  %6649 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6650 = call ptr @make_candy_function(ptr @Core_list_last_16, ptr %6649, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6650, ptr @fun_Core_list_last_16, align 8
  %6651 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:list:last:17\00", ptr %6651, align 1
  %6652 = call ptr @make_candy_text(ptr %6651)
  store ptr %6652, ptr @"Core:list:last:17", align 8
  %6653 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:list:last:25\00", ptr %6653, align 1
  %6654 = call ptr @make_candy_text(ptr %6653)
  store ptr %6654, ptr @"Core:list:last:25", align 8
  %6655 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:last:26:3\00", ptr %6655, align 1
  %6656 = call ptr @make_candy_text(ptr %6655)
  store ptr %6656, ptr @"Core:list:last:26:3", align 8
  %6657 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:list:last:27\00", ptr %6657, align 1
  %6658 = call ptr @make_candy_text(ptr %6657)
  store ptr %6658, ptr @"Core:list:last:27", align 8
  %6659 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6660 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6659, i32 0, i32 0
  store ptr %6596, ptr %6660, align 8
  %6661 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6659, i32 0, i32 1
  store ptr %6467, ptr %6661, align 8
  %6662 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6659, i32 0, i32 2
  store ptr %6447, ptr %6662, align 8
  %6663 = call ptr @make_candy_function(ptr @Core_list_last, ptr %6659, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6663, ptr @fun_Core_list_last, align 8
  %6664 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:107\00", ptr %6664, align 1
  %6665 = call ptr @make_candy_text(ptr %6664)
  store ptr %6665, ptr @"Core:list:107", align 8
  %6666 = load ptr, ptr @tag_ListInsert, align 8
  %6667 = call ptr @Builtins__structGet(ptr %997, ptr %6666)
  %6668 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:prepend:4\00", ptr %6668, align 1
  %6669 = call ptr @make_candy_text(ptr %6668)
  store ptr %6669, ptr @"Core:list:prepend:4", align 8
  %6670 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:prepend:9\00", ptr %6670, align 1
  %6671 = call ptr @make_candy_text(ptr %6670)
  store ptr %6671, ptr @"Core:list:prepend:9", align 8
  %6672 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6673 = getelementptr inbounds { ptr, ptr }, ptr %6672, i32 0, i32 0
  store ptr %6467, ptr %6673, align 8
  %6674 = getelementptr inbounds { ptr, ptr }, ptr %6672, i32 0, i32 1
  store ptr %6667, ptr %6674, align 8
  %6675 = call ptr @make_candy_function(ptr @Core_list_prepend, ptr %6672, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6675, ptr @fun_Core_list_prepend, align 8
  %6676 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:4\00", ptr %6676, align 1
  %6677 = call ptr @make_candy_text(ptr %6676)
  store ptr %6677, ptr @"Core:list:append:4", align 8
  %6678 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:9\00", ptr %6678, align 1
  %6679 = call ptr @make_candy_text(ptr %6678)
  store ptr %6679, ptr @"Core:list:append:9", align 8
  %6680 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:append:11\00", ptr %6680, align 1
  %6681 = call ptr @make_candy_text(ptr %6680)
  store ptr %6681, ptr @"Core:list:append:11", align 8
  %6682 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6683 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6682, i32 0, i32 0
  store ptr %6478, ptr %6683, align 8
  %6684 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6682, i32 0, i32 1
  store ptr %6467, ptr %6684, align 8
  %6685 = getelementptr inbounds { ptr, ptr, ptr }, ptr %6682, i32 0, i32 2
  store ptr %6667, ptr %6685, align 8
  %6686 = call ptr @make_candy_function(ptr @Core_list_append, ptr %6682, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6686, ptr @fun_Core_list_append, align 8
  %6687 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:116\00", ptr %6687, align 1
  %6688 = call ptr @make_candy_text(ptr %6687)
  store ptr %6688, ptr @"Core:list:116", align 8
  %6689 = load ptr, ptr @tag_ListReplace, align 8
  %6690 = call ptr @Builtins__structGet(ptr %997, ptr %6689)
  %6691 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:update:4\00", ptr %6691, align 1
  %6692 = call ptr @make_candy_text(ptr %6691)
  store ptr %6692, ptr @"Core:list:update:4", align 8
  %6693 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:12\00", ptr %6693, align 1
  %6694 = call ptr @make_candy_text(ptr %6693)
  store ptr %6694, ptr @"Core:list:update:12", align 8
  %6695 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:14\00", ptr %6695, align 1
  %6696 = call ptr @make_candy_text(ptr %6695)
  store ptr %6696, ptr @"Core:list:update:14", align 8
  %6697 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:16\00", ptr %6697, align 1
  %6698 = call ptr @make_candy_text(ptr %6697)
  store ptr %6698, ptr @"Core:list:update:16", align 8
  %6699 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:20\00", ptr %6699, align 1
  %6700 = call ptr @make_candy_text(ptr %6699)
  store ptr %6700, ptr @"Core:list:update:20", align 8
  %6701 = alloca i8, i64 46, align 1
  store [46 x i8] c"`list | isValidIndex index` was not satisfied\00", ptr %6701, align 1
  %6702 = call ptr @make_candy_text(ptr %6701)
  store ptr %6702, ptr @"text_`list | isValidIndex index` was not satisfied", align 8
  %6703 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:22\00", ptr %6703, align 1
  %6704 = call ptr @make_candy_text(ptr %6703)
  store ptr %6704, ptr @"Core:list:update:22", align 8
  %6705 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:30\00", ptr %6705, align 1
  %6706 = call ptr @make_candy_text(ptr %6705)
  store ptr %6706, ptr @"Core:list:update:30", align 8
  %6707 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:32\00", ptr %6707, align 1
  %6708 = call ptr @make_candy_text(ptr %6707)
  store ptr %6708, ptr @"Core:list:update:32", align 8
  %6709 = alloca i8, i64 41, align 1
  store [41 x i8] c"`function.is1 updater` was not satisfied\00", ptr %6709, align 1
  %6710 = call ptr @make_candy_text(ptr %6709)
  store ptr %6710, ptr @"text_`function.is1 updater` was not satisfied", align 8
  %6711 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:34\00", ptr %6711, align 1
  %6712 = call ptr @make_candy_text(ptr %6711)
  store ptr %6712, ptr @"Core:list:update:34", align 8
  %6713 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:38\00", ptr %6713, align 1
  %6714 = call ptr @make_candy_text(ptr %6713)
  store ptr %6714, ptr @"Core:list:update:38", align 8
  %6715 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:42\00", ptr %6715, align 1
  %6716 = call ptr @make_candy_text(ptr %6715)
  store ptr %6716, ptr @"Core:list:update:42", align 8
  %6717 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:update:48\00", ptr %6717, align 1
  %6718 = call ptr @make_candy_text(ptr %6717)
  store ptr %6718, ptr @"Core:list:update:48", align 8
  %6719 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6720 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6719, i32 0, i32 0
  store ptr %4706, ptr %6720, align 8
  %6721 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6719, i32 0, i32 1
  store ptr %6467, ptr %6721, align 8
  %6722 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6719, i32 0, i32 2
  store ptr %6596, ptr %6722, align 8
  %6723 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6719, i32 0, i32 3
  store ptr %6690, ptr %6723, align 8
  %6724 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6719, i32 0, i32 4
  store ptr %5512, ptr %6724, align 8
  %6725 = call ptr @make_candy_function(ptr @Core_list_update, ptr %6719, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6725, ptr @fun_Core_list_update, align 8
  %6726 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:125\00", ptr %6726, align 1
  %6727 = call ptr @make_candy_text(ptr %6726)
  store ptr %6727, ptr @"Core:list:125", align 8
  %6728 = load ptr, ptr @tag_ListRemoveAt, align 8
  %6729 = call ptr @Builtins__structGet(ptr %997, ptr %6728)
  %6730 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:134\00", ptr %6730, align 1
  %6731 = call ptr @make_candy_text(ptr %6730)
  store ptr %6731, ptr @"Core:list:134", align 8
  %6732 = load ptr, ptr @tag_ListFilled, align 8
  %6733 = call ptr @Builtins__structGet(ptr %997, ptr %6732)
  %6734 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:list:generate:7\00", ptr %6734, align 1
  %6735 = call ptr @make_candy_text(ptr %6734)
  store ptr %6735, ptr @"Core:list:generate:7", align 8
  %6736 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:list:generate:9\00", ptr %6736, align 1
  %6737 = call ptr @make_candy_text(ptr %6736)
  store ptr %6737, ptr @"Core:list:generate:9", align 8
  %6738 = alloca i8, i64 34, align 1
  store [34 x i8] c"`int.is length` was not satisfied\00", ptr %6738, align 1
  %6739 = call ptr @make_candy_text(ptr %6738)
  store ptr %6739, ptr @"text_`int.is length` was not satisfied", align 8
  %6740 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:11\00", ptr %6740, align 1
  %6741 = call ptr @make_candy_text(ptr %6740)
  store ptr %6741, ptr @"Core:list:generate:11", align 8
  %6742 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:19\00", ptr %6742, align 1
  %6743 = call ptr @make_candy_text(ptr %6742)
  store ptr %6743, ptr @"Core:list:generate:19", align 8
  %6744 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:21\00", ptr %6744, align 1
  %6745 = call ptr @make_candy_text(ptr %6744)
  store ptr %6745, ptr @"Core:list:generate:21", align 8
  %6746 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.isNonNegative length` was not satisfied\00", ptr %6746, align 1
  %6747 = call ptr @make_candy_text(ptr %6746)
  store ptr %6747, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %6748 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:23\00", ptr %6748, align 1
  %6749 = call ptr @make_candy_text(ptr %6748)
  store ptr %6749, ptr @"Core:list:generate:23", align 8
  %6750 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:31\00", ptr %6750, align 1
  %6751 = call ptr @make_candy_text(ptr %6750)
  store ptr %6751, ptr @"Core:list:generate:31", align 8
  %6752 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:33\00", ptr %6752, align 1
  %6753 = call ptr @make_candy_text(ptr %6752)
  store ptr %6753, ptr @"Core:list:generate:33", align 8
  %6754 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.fitsInRustU32 length` was not satisfied\00", ptr %6754, align 1
  %6755 = call ptr @make_candy_text(ptr %6754)
  store ptr %6755, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %6756 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:35\00", ptr %6756, align 1
  %6757 = call ptr @make_candy_text(ptr %6756)
  store ptr %6757, ptr @"Core:list:generate:35", align 8
  %6758 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:43\00", ptr %6758, align 1
  %6759 = call ptr @make_candy_text(ptr %6758)
  store ptr %6759, ptr @"Core:list:generate:43", align 8
  %6760 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:45\00", ptr %6760, align 1
  %6761 = call ptr @make_candy_text(ptr %6760)
  store ptr %6761, ptr @"Core:list:generate:45", align 8
  %6762 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 valueGetter` was not satisfied\00", ptr %6762, align 1
  %6763 = call ptr @make_candy_text(ptr %6762)
  store ptr %6763, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %6764 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:47\00", ptr %6764, align 1
  %6765 = call ptr @make_candy_text(ptr %6764)
  store ptr %6765, ptr @"Core:list:generate:47", align 8
  %6766 = alloca i8, i64 12, align 1
  store [12 x i8] c"Placeholder\00", ptr %6766, align 1
  %6767 = call ptr @make_candy_tag(ptr %6766, ptr null)
  store ptr %6767, ptr @tag_Placeholder, align 8
  %6768 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:51\00", ptr %6768, align 1
  %6769 = call ptr @make_candy_text(ptr %6768)
  store ptr %6769, ptr @"Core:list:generate:51", align 8
  %6770 = alloca i8, i64 6, align 1
  store [6 x i8] c"Index\00", ptr %6770, align 1
  %6771 = call ptr @make_candy_tag(ptr %6770, ptr null)
  store ptr %6771, ptr @tag_Index, align 8
  %6772 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:list:generate:59:1\00", ptr %6772, align 1
  %6773 = call ptr @make_candy_text(ptr %6772)
  store ptr %6773, ptr @"Core:list:generate:59:1", align 8
  %6774 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `List`: `\00", ptr %6774, align 1
  %6775 = call ptr @make_candy_text(ptr %6774)
  store ptr %6775, ptr @"text_Struct doesn't contain key `List`: `", align 8
  %6776 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Index`: `\00", ptr %6776, align 1
  %6777 = call ptr @make_candy_text(ptr %6776)
  store ptr %6777, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %6778 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:list:generate:59:list\00", ptr %6778, align 1
  %6779 = call ptr @make_candy_text(ptr %6778)
  store ptr %6779, ptr @"Core:list:generate:59:list", align 8
  %6780 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:generate:59:index\00", ptr %6780, align 1
  %6781 = call ptr @make_candy_text(ptr %6780)
  store ptr %6781, ptr @"Core:list:generate:59:index", align 8
  %6782 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:list:generate:59:6\00", ptr %6782, align 1
  %6783 = call ptr @make_candy_text(ptr %6782)
  store ptr %6783, ptr @"Core:list:generate:59:6", align 8
  %6784 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:generate:59:8:2\00", ptr %6784, align 1
  %6785 = call ptr @make_candy_text(ptr %6784)
  store ptr %6785, ptr @"Core:list:generate:59:8:2", align 8
  %6786 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:generate:59:8:8\00", ptr %6786, align 1
  %6787 = call ptr @make_candy_text(ptr %6786)
  store ptr %6787, ptr @"Core:list:generate:59:8:8", align 8
  %6788 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:list:generate:59:8:21\00", ptr %6788, align 1
  %6789 = call ptr @make_candy_text(ptr %6788)
  store ptr %6789, ptr @"Core:list:generate:59:8:21", align 8
  %6790 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:list:generate:59:8:24\00", ptr %6790, align 1
  %6791 = call ptr @make_candy_text(ptr %6790)
  store ptr %6791, ptr @"Core:list:generate:59:8:24", align 8
  %6792 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:list:generate:59:8:26\00", ptr %6792, align 1
  %6793 = call ptr @make_candy_text(ptr %6792)
  store ptr %6793, ptr @"Core:list:generate:59:8:26", align 8
  %6794 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:list:generate:59:9\00", ptr %6794, align 1
  %6795 = call ptr @make_candy_text(ptr %6794)
  store ptr %6795, ptr @"Core:list:generate:59:9", align 8
  %6796 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:generate:60\00", ptr %6796, align 1
  %6797 = call ptr @make_candy_text(ptr %6796)
  store ptr %6797, ptr @"Core:list:generate:60", align 8
  %6798 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6799 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6798, i32 0, i32 0
  store ptr %6690, ptr %6799, align 8
  %6800 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6798, i32 0, i32 1
  store ptr %4587, ptr %6800, align 8
  %6801 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6798, i32 0, i32 2
  store ptr %4706, ptr %6801, align 8
  %6802 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6798, i32 0, i32 3
  store ptr %5512, ptr %6802, align 8
  %6803 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6798, i32 0, i32 4
  store ptr %6733, ptr %6803, align 8
  %6804 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6798, i32 0, i32 5
  store ptr %4582, ptr %6804, align 8
  %6805 = call ptr @make_candy_function(ptr @Core_list_generate, ptr %6798, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6805, ptr @fun_Core_list_generate, align 8
  %6806 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:list:getRange:4\00", ptr %6806, align 1
  %6807 = call ptr @make_candy_text(ptr %6806)
  store ptr %6807, ptr @"Core:list:getRange:4", align 8
  %6808 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:12\00", ptr %6808, align 1
  %6809 = call ptr @make_candy_text(ptr %6808)
  store ptr %6809, ptr @"Core:list:getRange:12", align 8
  %6810 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:14\00", ptr %6810, align 1
  %6811 = call ptr @make_candy_text(ptr %6810)
  store ptr %6811, ptr @"Core:list:getRange:14", align 8
  %6812 = alloca i8, i64 42, align 1
  store [42 x i8] c"`int.is startInclusive` was not satisfied\00", ptr %6812, align 1
  %6813 = call ptr @make_candy_text(ptr %6812)
  store ptr %6813, ptr @"text_`int.is startInclusive` was not satisfied", align 8
  %6814 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:16\00", ptr %6814, align 1
  %6815 = call ptr @make_candy_text(ptr %6814)
  store ptr %6815, ptr @"Core:list:getRange:16", align 8
  %6816 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:25\00", ptr %6816, align 1
  %6817 = call ptr @make_candy_text(ptr %6816)
  store ptr %6817, ptr @"Core:list:getRange:25", align 8
  %6818 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:26\00", ptr %6818, align 1
  %6819 = call ptr @make_candy_text(ptr %6818)
  store ptr %6819, ptr @"Core:list:getRange:26", align 8
  %6820 = alloca i8, i64 55, align 1
  store [55 x i8] c"`startInclusive | int.isNonNegative` was not satisfied\00", ptr %6820, align 1
  %6821 = call ptr @make_candy_text(ptr %6820)
  store ptr %6821, ptr @"text_`startInclusive | int.isNonNegative` was not satisfied", align 8
  %6822 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:28\00", ptr %6822, align 1
  %6823 = call ptr @make_candy_text(ptr %6822)
  store ptr %6823, ptr @"Core:list:getRange:28", align 8
  %6824 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:37\00", ptr %6824, align 1
  %6825 = call ptr @make_candy_text(ptr %6824)
  store ptr %6825, ptr @"Core:list:getRange:37", align 8
  %6826 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:40\00", ptr %6826, align 1
  %6827 = call ptr @make_candy_text(ptr %6826)
  store ptr %6827, ptr @"Core:list:getRange:40", align 8
  %6828 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:41\00", ptr %6828, align 1
  %6829 = call ptr @make_candy_text(ptr %6828)
  store ptr %6829, ptr @"Core:list:getRange:41", align 8
  %6830 = alloca i8, i64 77, align 1
  store [77 x i8] c"`startInclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied\00", ptr %6830, align 1
  %6831 = call ptr @make_candy_text(ptr %6830)
  store ptr %6831, ptr @"text_`startInclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied", align 8
  %6832 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:43\00", ptr %6832, align 1
  %6833 = call ptr @make_candy_text(ptr %6832)
  store ptr %6833, ptr @"Core:list:getRange:43", align 8
  %6834 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:51\00", ptr %6834, align 1
  %6835 = call ptr @make_candy_text(ptr %6834)
  store ptr %6835, ptr @"Core:list:getRange:51", align 8
  %6836 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:53\00", ptr %6836, align 1
  %6837 = call ptr @make_candy_text(ptr %6836)
  store ptr %6837, ptr @"Core:list:getRange:53", align 8
  %6838 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.is endExclusive` was not satisfied\00", ptr %6838, align 1
  %6839 = call ptr @make_candy_text(ptr %6838)
  store ptr %6839, ptr @"text_`int.is endExclusive` was not satisfied", align 8
  %6840 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:55\00", ptr %6840, align 1
  %6841 = call ptr @make_candy_text(ptr %6840)
  store ptr %6841, ptr @"Core:list:getRange:55", align 8
  %6842 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:64\00", ptr %6842, align 1
  %6843 = call ptr @make_candy_text(ptr %6842)
  store ptr %6843, ptr @"Core:list:getRange:64", align 8
  %6844 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:65\00", ptr %6844, align 1
  %6845 = call ptr @make_candy_text(ptr %6844)
  store ptr %6845, ptr @"Core:list:getRange:65", align 8
  %6846 = alloca i8, i64 53, align 1
  store [53 x i8] c"`endExclusive | int.isNonNegative` was not satisfied\00", ptr %6846, align 1
  %6847 = call ptr @make_candy_text(ptr %6846)
  store ptr %6847, ptr @"text_`endExclusive | int.isNonNegative` was not satisfied", align 8
  %6848 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:67\00", ptr %6848, align 1
  %6849 = call ptr @make_candy_text(ptr %6848)
  store ptr %6849, ptr @"Core:list:getRange:67", align 8
  %6850 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:76\00", ptr %6850, align 1
  %6851 = call ptr @make_candy_text(ptr %6850)
  store ptr %6851, ptr @"Core:list:getRange:76", align 8
  %6852 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:79\00", ptr %6852, align 1
  %6853 = call ptr @make_candy_text(ptr %6852)
  store ptr %6853, ptr @"Core:list:getRange:79", align 8
  %6854 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:80\00", ptr %6854, align 1
  %6855 = call ptr @make_candy_text(ptr %6854)
  store ptr %6855, ptr @"Core:list:getRange:80", align 8
  %6856 = alloca i8, i64 75, align 1
  store [75 x i8] c"`endExclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied\00", ptr %6856, align 1
  %6857 = call ptr @make_candy_text(ptr %6856)
  store ptr %6857, ptr @"text_`endExclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied", align 8
  %6858 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:82\00", ptr %6858, align 1
  %6859 = call ptr @make_candy_text(ptr %6858)
  store ptr %6859, ptr @"Core:list:getRange:82", align 8
  %6860 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:91\00", ptr %6860, align 1
  %6861 = call ptr @make_candy_text(ptr %6860)
  store ptr %6861, ptr @"Core:list:getRange:91", align 8
  %6862 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:93\00", ptr %6862, align 1
  %6863 = call ptr @make_candy_text(ptr %6862)
  store ptr %6863, ptr @"Core:list:getRange:93", align 8
  %6864 = alloca i8, i64 74, align 1
  store [74 x i8] c"`startInclusive | int.isLessThanOrEqualTo endExclusive` was not satisfied\00", ptr %6864, align 1
  %6865 = call ptr @make_candy_text(ptr %6864)
  store ptr %6865, ptr @"text_`startInclusive | int.isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %6866 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:getRange:95\00", ptr %6866, align 1
  %6867 = call ptr @make_candy_text(ptr %6866)
  store ptr %6867, ptr @"Core:list:getRange:95", align 8
  %6868 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:list:getRange:105\00", ptr %6868, align 1
  %6869 = call ptr @make_candy_text(ptr %6868)
  store ptr %6869, ptr @"Core:list:getRange:105", align 8
  %6870 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:list:getRange:107\00", ptr %6870, align 1
  %6871 = call ptr @make_candy_text(ptr %6870)
  store ptr %6871, ptr @"Core:list:getRange:107", align 8
  %6872 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:getRange:108:10\00", ptr %6872, align 1
  %6873 = call ptr @make_candy_text(ptr %6872)
  store ptr %6873, ptr @"Core:list:getRange:108:10", align 8
  %6874 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:getRange:108:12\00", ptr %6874, align 1
  %6875 = call ptr @make_candy_text(ptr %6874)
  store ptr %6875, ptr @"Core:list:getRange:108:12", align 8
  %6876 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:getRange:108:13\00", ptr %6876, align 1
  %6877 = call ptr @make_candy_text(ptr %6876)
  store ptr %6877, ptr @"Core:list:getRange:108:13", align 8
  %6878 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:list:getRange:109\00", ptr %6878, align 1
  %6879 = call ptr @make_candy_text(ptr %6878)
  store ptr %6879, ptr @"Core:list:getRange:109", align 8
  %6880 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6881 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %6880, i32 0, i32 0
  store ptr %6467, ptr %6881, align 8
  %6882 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %6880, i32 0, i32 1
  store ptr %5512, ptr %6882, align 8
  %6883 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %6880, i32 0, i32 2
  store ptr %6478, ptr %6883, align 8
  %6884 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %6880, i32 0, i32 3
  store ptr %6596, ptr %6884, align 8
  %6885 = call ptr @make_candy_function(ptr @Core_list_getRange, ptr %6880, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6885, ptr @fun_Core_list_getRange, align 8
  %6886 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is listA` was not satisfied\00", ptr %6886, align 1
  %6887 = call ptr @make_candy_text(ptr %6886)
  store ptr %6887, ptr @"text_`is listA` was not satisfied", align 8
  %6888 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:list:concatenate:4\00", ptr %6888, align 1
  %6889 = call ptr @make_candy_text(ptr %6888)
  store ptr %6889, ptr @"Core:list:concatenate:4", align 8
  %6890 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is listB` was not satisfied\00", ptr %6890, align 1
  %6891 = call ptr @make_candy_text(ptr %6890)
  store ptr %6891, ptr @"text_`is listB` was not satisfied", align 8
  %6892 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:list:concatenate:9\00", ptr %6892, align 1
  %6893 = call ptr @make_candy_text(ptr %6892)
  store ptr %6893, ptr @"Core:list:concatenate:9", align 8
  %6894 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:concatenate:13\00", ptr %6894, align 1
  %6895 = call ptr @make_candy_text(ptr %6894)
  store ptr %6895, ptr @"Core:list:concatenate:13", align 8
  %6896 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:concatenate:21\00", ptr %6896, align 1
  %6897 = call ptr @make_candy_text(ptr %6896)
  store ptr %6897, ptr @"Core:list:concatenate:21", align 8
  %6898 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:concatenate:24\00", ptr %6898, align 1
  %6899 = call ptr @make_candy_text(ptr %6898)
  store ptr %6899, ptr @"Core:list:concatenate:24", align 8
  %6900 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:concatenate:25\00", ptr %6900, align 1
  %6901 = call ptr @make_candy_text(ptr %6900)
  store ptr %6901, ptr @"Core:list:concatenate:25", align 8
  %6902 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:list:concatenate:26:9\00", ptr %6902, align 1
  %6903 = call ptr @make_candy_text(ptr %6902)
  store ptr %6903, ptr @"Core:list:concatenate:26:9", align 8
  %6904 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:concatenate:26:12\00", ptr %6904, align 1
  %6905 = call ptr @make_candy_text(ptr %6904)
  store ptr %6905, ptr @"Core:list:concatenate:26:12", align 8
  %6906 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:concatenate:26:13\00", ptr %6906, align 1
  %6907 = call ptr @make_candy_text(ptr %6906)
  store ptr %6907, ptr @"Core:list:concatenate:26:13", align 8
  %6908 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:list:concatenate:26:14:3\00", ptr %6908, align 1
  %6909 = call ptr @make_candy_text(ptr %6908)
  store ptr %6909, ptr @"Core:list:concatenate:26:14:3", align 8
  %6910 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:list:concatenate:26:15:10\00", ptr %6910, align 1
  %6911 = call ptr @make_candy_text(ptr %6910)
  store ptr %6911, ptr @"Core:list:concatenate:26:15:10", align 8
  %6912 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:list:concatenate:26:15:13\00", ptr %6912, align 1
  %6913 = call ptr @make_candy_text(ptr %6912)
  store ptr %6913, ptr @"Core:list:concatenate:26:15:13", align 8
  %6914 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:list:concatenate:26:15:14\00", ptr %6914, align 1
  %6915 = call ptr @make_candy_text(ptr %6914)
  store ptr %6915, ptr @"Core:list:concatenate:26:15:14", align 8
  %6916 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:list:concatenate:26:15:15\00", ptr %6916, align 1
  %6917 = call ptr @make_candy_text(ptr %6916)
  store ptr %6917, ptr @"Core:list:concatenate:26:15:15", align 8
  %6918 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:concatenate:26:16\00", ptr %6918, align 1
  %6919 = call ptr @make_candy_text(ptr %6918)
  store ptr %6919, ptr @"Core:list:concatenate:26:16", align 8
  %6920 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:concatenate:27\00", ptr %6920, align 1
  %6921 = call ptr @make_candy_text(ptr %6920)
  store ptr %6921, ptr @"Core:list:concatenate:27", align 8
  %6922 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6923 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6922, i32 0, i32 0
  store ptr %6478, ptr %6923, align 8
  %6924 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6922, i32 0, i32 1
  store ptr %6596, ptr %6924, align 8
  %6925 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6922, i32 0, i32 2
  store ptr %6467, ptr %6925, align 8
  %6926 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6922, i32 0, i32 3
  store ptr %4582, ptr %6926, align 8
  %6927 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %6922, i32 0, i32 4
  store ptr %5512, ptr %6927, align 8
  %6928 = call ptr @make_candy_function(ptr @Core_list_concatenate, ptr %6922, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %6928, ptr @fun_Core_list_concatenate, align 8
  %6929 = alloca i8, i64 7, align 1
  store [7 x i8] c"Insert\00", ptr %6929, align 1
  %6930 = call ptr @make_candy_tag(ptr %6929, ptr null)
  store ptr %6930, ptr @tag_Insert, align 8
  %6931 = alloca i8, i64 9, align 1
  store [9 x i8] c"RemoveAt\00", ptr %6931, align 1
  %6932 = call ptr @make_candy_tag(ptr %6931, ptr null)
  store ptr %6932, ptr @tag_RemoveAt, align 8
  %6933 = alloca i8, i64 19, align 1
  store [19 x i8] c"IsValidInsertIndex\00", ptr %6933, align 1
  %6934 = call ptr @make_candy_tag(ptr %6933, ptr null)
  store ptr %6934, ptr @tag_IsValidInsertIndex, align 8
  %6935 = alloca i8, i64 7, align 1
  store [7 x i8] c"Length\00", ptr %6935, align 1
  %6936 = call ptr @make_candy_tag(ptr %6935, ptr null)
  store ptr %6936, ptr @tag_Length, align 8
  %6937 = alloca i8, i64 8, align 1
  store [8 x i8] c"IsEmpty\00", ptr %6937, align 1
  %6938 = call ptr @make_candy_tag(ptr %6937, ptr null)
  store ptr %6938, ptr @tag_IsEmpty, align 8
  %6939 = alloca i8, i64 8, align 1
  store [8 x i8] c"Prepend\00", ptr %6939, align 1
  %6940 = call ptr @make_candy_tag(ptr %6939, ptr null)
  store ptr %6940, ptr @tag_Prepend, align 8
  %6941 = alloca i8, i64 7, align 1
  store [7 x i8] c"Filled\00", ptr %6941, align 1
  %6942 = call ptr @make_candy_tag(ptr %6941, ptr null)
  store ptr %6942, ptr @tag_Filled, align 8
  %6943 = alloca i8, i64 10, align 1
  store [10 x i8] c"LastIndex\00", ptr %6943, align 1
  %6944 = call ptr @make_candy_tag(ptr %6943, ptr null)
  store ptr %6944, ptr @tag_LastIndex, align 8
  %6945 = alloca i8, i64 7, align 1
  store [7 x i8] c"Append\00", ptr %6945, align 1
  %6946 = call ptr @make_candy_tag(ptr %6945, ptr null)
  store ptr %6946, ptr @tag_Append, align 8
  %6947 = alloca i8, i64 7, align 1
  store [7 x i8] c"Single\00", ptr %6947, align 1
  %6948 = call ptr @make_candy_tag(ptr %6947, ptr null)
  store ptr %6948, ptr @tag_Single, align 8
  %6949 = alloca i8, i64 5, align 1
  store [5 x i8] c"Last\00", ptr %6949, align 1
  %6950 = call ptr @make_candy_tag(ptr %6949, ptr null)
  store ptr %6950, ptr @tag_Last, align 8
  %6951 = alloca i8, i64 12, align 1
  store [12 x i8] c"Concatenate\00", ptr %6951, align 1
  %6952 = call ptr @make_candy_tag(ptr %6951, ptr null)
  store ptr %6952, ptr @tag_Concatenate, align 8
  %6953 = alloca i8, i64 13, align 1
  store [13 x i8] c"IsValidIndex\00", ptr %6953, align 1
  %6954 = call ptr @make_candy_tag(ptr %6953, ptr null)
  store ptr %6954, ptr @tag_IsValidIndex, align 8
  %6955 = alloca i8, i64 9, align 1
  store [9 x i8] c"GetRange\00", ptr %6955, align 1
  %6956 = call ptr @make_candy_tag(ptr %6955, ptr null)
  store ptr %6956, ptr @tag_GetRange, align 8
  %6957 = alloca i8, i64 6, align 1
  store [6 x i8] c"First\00", ptr %6957, align 1
  %6958 = call ptr @make_candy_tag(ptr %6957, ptr null)
  store ptr %6958, ptr @tag_First, align 8
  %6959 = alloca i8, i64 9, align 1
  store [9 x i8] c"Generate\00", ptr %6959, align 1
  %6960 = call ptr @make_candy_tag(ptr %6959, ptr null)
  store ptr %6960, ptr @tag_Generate, align 8
  %6961 = alloca i8, i64 7, align 1
  store [7 x i8] c"Update\00", ptr %6961, align 1
  %6962 = call ptr @make_candy_tag(ptr %6961, ptr null)
  store ptr %6962, ptr @tag_Update, align 8
  %6963 = alloca i8, i64 8, align 1
  store [8 x i8] c"Replace\00", ptr %6963, align 1
  %6964 = call ptr @make_candy_tag(ptr %6963, ptr null)
  store ptr %6964, ptr @tag_Replace, align 8
  %6965 = alloca ptr, i64 21, align 8
  %6966 = alloca ptr, i64 21, align 8
  %6967 = load ptr, ptr @tag_Concatenate, align 8
  %6968 = load ptr, ptr @fun_Core_list_concatenate, align 8
  %6969 = getelementptr ptr, ptr %6965, i64 0
  store ptr %6967, ptr %6969, align 8
  %6970 = getelementptr ptr, ptr %6966, i64 0
  store ptr %6968, ptr %6970, align 8
  %6971 = load ptr, ptr @tag_Insert, align 8
  %6972 = getelementptr ptr, ptr %6965, i64 1
  store ptr %6971, ptr %6972, align 8
  %6973 = getelementptr ptr, ptr %6966, i64 1
  store ptr %6667, ptr %6973, align 8
  %6974 = load ptr, ptr @tag_Filled, align 8
  %6975 = getelementptr ptr, ptr %6965, i64 2
  store ptr %6974, ptr %6975, align 8
  %6976 = getelementptr ptr, ptr %6966, i64 2
  store ptr %6733, ptr %6976, align 8
  %6977 = load ptr, ptr @tag_Replace, align 8
  %6978 = getelementptr ptr, ptr %6965, i64 3
  store ptr %6977, ptr %6978, align 8
  %6979 = getelementptr ptr, ptr %6966, i64 3
  store ptr %6690, ptr %6979, align 8
  %6980 = load ptr, ptr @tag_LastIndex, align 8
  %6981 = load ptr, ptr @fun_Core_list_lastIndex, align 8
  %6982 = getelementptr ptr, ptr %6965, i64 4
  store ptr %6980, ptr %6982, align 8
  %6983 = getelementptr ptr, ptr %6966, i64 4
  store ptr %6981, ptr %6983, align 8
  %6984 = load ptr, ptr @tag_GetRange, align 8
  %6985 = load ptr, ptr @fun_Core_list_getRange, align 8
  %6986 = getelementptr ptr, ptr %6965, i64 5
  store ptr %6984, ptr %6986, align 8
  %6987 = getelementptr ptr, ptr %6966, i64 5
  store ptr %6985, ptr %6987, align 8
  %6988 = load ptr, ptr @tag_IsValidInsertIndex, align 8
  %6989 = load ptr, ptr @fun_Core_list_isValidInsertIndex, align 8
  %6990 = getelementptr ptr, ptr %6965, i64 6
  store ptr %6988, ptr %6990, align 8
  %6991 = getelementptr ptr, ptr %6966, i64 6
  store ptr %6989, ptr %6991, align 8
  %6992 = load ptr, ptr @tag_RemoveAt, align 8
  %6993 = getelementptr ptr, ptr %6965, i64 7
  store ptr %6992, ptr %6993, align 8
  %6994 = getelementptr ptr, ptr %6966, i64 7
  store ptr %6729, ptr %6994, align 8
  %6995 = load ptr, ptr @tag_IsEmpty, align 8
  %6996 = load ptr, ptr @fun_Core_list_isEmpty, align 8
  %6997 = getelementptr ptr, ptr %6965, i64 8
  store ptr %6995, ptr %6997, align 8
  %6998 = getelementptr ptr, ptr %6966, i64 8
  store ptr %6996, ptr %6998, align 8
  %6999 = load ptr, ptr @tag_First, align 8
  %7000 = load ptr, ptr @fun_Core_list_first, align 8
  %7001 = getelementptr ptr, ptr %6965, i64 9
  store ptr %6999, ptr %7001, align 8
  %7002 = getelementptr ptr, ptr %6966, i64 9
  store ptr %7000, ptr %7002, align 8
  %7003 = load ptr, ptr @tag_Get, align 8
  %7004 = getelementptr ptr, ptr %6965, i64 10
  store ptr %7003, ptr %7004, align 8
  %7005 = getelementptr ptr, ptr %6966, i64 10
  store ptr %6596, ptr %7005, align 8
  %7006 = load ptr, ptr @tag_Append, align 8
  %7007 = load ptr, ptr @fun_Core_list_append, align 8
  %7008 = getelementptr ptr, ptr %6965, i64 11
  store ptr %7006, ptr %7008, align 8
  %7009 = getelementptr ptr, ptr %6966, i64 11
  store ptr %7007, ptr %7009, align 8
  %7010 = load ptr, ptr @tag_Last, align 8
  %7011 = load ptr, ptr @fun_Core_list_last, align 8
  %7012 = getelementptr ptr, ptr %6965, i64 12
  store ptr %7010, ptr %7012, align 8
  %7013 = getelementptr ptr, ptr %6966, i64 12
  store ptr %7011, ptr %7013, align 8
  %7014 = load ptr, ptr @tag_Length, align 8
  %7015 = getelementptr ptr, ptr %6965, i64 13
  store ptr %7014, ptr %7015, align 8
  %7016 = getelementptr ptr, ptr %6966, i64 13
  store ptr %6478, ptr %7016, align 8
  %7017 = load ptr, ptr @tag_Prepend, align 8
  %7018 = load ptr, ptr @fun_Core_list_prepend, align 8
  %7019 = getelementptr ptr, ptr %6965, i64 14
  store ptr %7017, ptr %7019, align 8
  %7020 = getelementptr ptr, ptr %6966, i64 14
  store ptr %7018, ptr %7020, align 8
  %7021 = load ptr, ptr @tag_Is, align 8
  %7022 = load ptr, ptr @fun_Core_list_is, align 8
  %7023 = getelementptr ptr, ptr %6965, i64 15
  store ptr %7021, ptr %7023, align 8
  %7024 = getelementptr ptr, ptr %6966, i64 15
  store ptr %7022, ptr %7024, align 8
  %7025 = load ptr, ptr @tag_Update, align 8
  %7026 = load ptr, ptr @fun_Core_list_update, align 8
  %7027 = getelementptr ptr, ptr %6965, i64 16
  store ptr %7025, ptr %7027, align 8
  %7028 = getelementptr ptr, ptr %6966, i64 16
  store ptr %7026, ptr %7028, align 8
  %7029 = load ptr, ptr @tag_Generate, align 8
  %7030 = load ptr, ptr @fun_Core_list_generate, align 8
  %7031 = getelementptr ptr, ptr %6965, i64 17
  store ptr %7029, ptr %7031, align 8
  %7032 = getelementptr ptr, ptr %6966, i64 17
  store ptr %7030, ptr %7032, align 8
  %7033 = load ptr, ptr @tag_Single, align 8
  %7034 = load ptr, ptr @fun_Core_list_single, align 8
  %7035 = getelementptr ptr, ptr %6965, i64 18
  store ptr %7033, ptr %7035, align 8
  %7036 = getelementptr ptr, ptr %6966, i64 18
  store ptr %7034, ptr %7036, align 8
  %7037 = load ptr, ptr @tag_IsValidIndex, align 8
  %7038 = load ptr, ptr @fun_Core_list_isValidIndex, align 8
  %7039 = getelementptr ptr, ptr %6965, i64 19
  store ptr %7037, ptr %7039, align 8
  %7040 = getelementptr ptr, ptr %6966, i64 19
  store ptr %7038, ptr %7040, align 8
  %7041 = getelementptr ptr, ptr %6965, i64 20
  store ptr null, ptr %7041, align 8
  %7042 = getelementptr ptr, ptr %6966, i64 20
  store ptr null, ptr %7042, align 8
  %7043 = call ptr @make_candy_struct(ptr %6965, ptr %6966)
  %7044 = load ptr, ptr @tag_Equals, align 8
  %7045 = call ptr @Builtins__structGet(ptr %997, ptr %7044)
  %7046 = load ptr, ptr @tag_Equals, align 8
  %7047 = call ptr @Builtins__structGet(ptr %997, ptr %7046)
  %7048 = load ptr, ptr @tag_Equals, align 8
  %7049 = call ptr @Builtins__structGet(ptr %997, ptr %7048)
  %7050 = load ptr, ptr @tag_TypeOf, align 8
  %7051 = call ptr @Builtins__structGet(ptr %997, ptr %7050)
  %7052 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7053 = call ptr @Builtins__structGet(ptr %997, ptr %7052)
  %7054 = load ptr, ptr @tag_Equals, align 8
  %7055 = call ptr @Builtins__structGet(ptr %997, ptr %7054)
  %7056 = load ptr, ptr @tag_TypeOf, align 8
  %7057 = call ptr @Builtins__structGet(ptr %997, ptr %7056)
  %7058 = load ptr, ptr @tag_Equals, align 8
  %7059 = call ptr @Builtins__structGet(ptr %997, ptr %7058)
  %7060 = load ptr, ptr @tag_Equals, align 8
  %7061 = call ptr @Builtins__structGet(ptr %997, ptr %7060)
  %7062 = load ptr, ptr @tag_Equals, align 8
  %7063 = call ptr @Builtins__structGet(ptr %997, ptr %7062)
  %7064 = load ptr, ptr @tag_TypeOf, align 8
  %7065 = call ptr @Builtins__structGet(ptr %997, ptr %7064)
  %7066 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7067 = call ptr @Builtins__structGet(ptr %997, ptr %7066)
  %7068 = load ptr, ptr @tag_Equals, align 8
  %7069 = call ptr @Builtins__structGet(ptr %997, ptr %7068)
  %7070 = load ptr, ptr @tag_TypeOf, align 8
  %7071 = call ptr @Builtins__structGet(ptr %997, ptr %7070)
  %7072 = load ptr, ptr @tag_IfElse, align 8
  %7073 = call ptr @Builtins__structGet(ptr %997, ptr %7072)
  %7074 = load ptr, ptr @tag_Equals, align 8
  %7075 = call ptr @Builtins__structGet(ptr %997, ptr %7074)
  %7076 = load ptr, ptr @tag_TypeOf, align 8
  %7077 = call ptr @Builtins__structGet(ptr %997, ptr %7076)
  %7078 = load ptr, ptr @tag_Equals, align 8
  %7079 = call ptr @Builtins__structGet(ptr %997, ptr %7078)
  %7080 = load ptr, ptr @tag_TypeOf, align 8
  %7081 = call ptr @Builtins__structGet(ptr %997, ptr %7080)
  %7082 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7083 = getelementptr inbounds { ptr, ptr }, ptr %7082, i32 0, i32 0
  store ptr %7081, ptr %7083, align 8
  %7084 = getelementptr inbounds { ptr, ptr }, ptr %7082, i32 0, i32 1
  store ptr %7079, ptr %7084, align 8
  %7085 = call ptr @make_candy_function(ptr @Core_type_is.1795, ptr %7082, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7085, ptr @fun_Core_type_is.1796, align 8
  %7086 = alloca ptr, i64 3, align 8
  %7087 = alloca ptr, i64 3, align 8
  %7088 = load ptr, ptr @tag_TypeOf, align 8
  %7089 = getelementptr ptr, ptr %7086, i64 0
  store ptr %7088, ptr %7089, align 8
  %7090 = getelementptr ptr, ptr %7087, i64 0
  store ptr %7081, ptr %7090, align 8
  %7091 = load ptr, ptr @tag_Is, align 8
  %7092 = load ptr, ptr @fun_Core_type_is.1796, align 8
  %7093 = getelementptr ptr, ptr %7086, i64 1
  store ptr %7091, ptr %7093, align 8
  %7094 = getelementptr ptr, ptr %7087, i64 1
  store ptr %7092, ptr %7094, align 8
  %7095 = getelementptr ptr, ptr %7086, i64 2
  store ptr null, ptr %7095, align 8
  %7096 = getelementptr ptr, ptr %7087, i64 2
  store ptr null, ptr %7096, align 8
  %7097 = call ptr @make_candy_struct(ptr %7086, ptr %7087)
  %7098 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:text:is:7\00", ptr %7098, align 1
  %7099 = call ptr @make_candy_text(ptr %7098)
  store ptr %7099, ptr @"Core:text:is:7", align 8
  %7100 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:text:is:10\00", ptr %7100, align 1
  %7101 = call ptr @make_candy_text(ptr %7100)
  store ptr %7101, ptr @"Core:text:is:10", align 8
  %7102 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7103 = getelementptr inbounds { ptr }, ptr %7102, i32 0, i32 0
  store ptr %7097, ptr %7103, align 8
  %7104 = call ptr @make_candy_function(ptr @Core_text_is, ptr %7102, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7104, ptr @fun_Core_text_is, align 8
  %7105 = alloca i8, i64 1800, align 1
  store [1800 x i8] c"We're no strangers to love\0AYou know the rules and so do I\0AA full commitment's what I'm thinking of\0AYou wouldn't get this from any other guy\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AAnd if you ask me how I'm feeling\0ADon't tell me you're too blind to see\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give, never gonna give\0ANever gonna give, never gonna give\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\00", ptr %7105, align 1
  %7106 = call ptr @make_candy_text(ptr %7105)
  store ptr %7106, ptr @"text_We're no strangers to love\0AYou know the rules and so do I\0AA full commitment's what I'm thinking of\0AYou wouldn't get this from any other guy\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AAnd if you ask me how I'm feeling\0ADon't tell me you're too blind to see\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give, never gonna give\0ANever gonna give, never gonna give\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you", align 8
  %7107 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:341\00", ptr %7107, align 1
  %7108 = call ptr @make_candy_text(ptr %7107)
  store ptr %7108, ptr @"Core:text:341", align 8
  %7109 = load ptr, ptr @tag_TextFromUtf8, align 8
  %7110 = call ptr @Builtins__structGet(ptr %997, ptr %7109)
  %7111 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:350\00", ptr %7111, align 1
  %7112 = call ptr @make_candy_text(ptr %7111)
  store ptr %7112, ptr @"Core:text:350", align 8
  %7113 = load ptr, ptr @tag_TextIsEmpty, align 8
  %7114 = call ptr @Builtins__structGet(ptr %997, ptr %7113)
  %7115 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:359\00", ptr %7115, align 1
  %7116 = call ptr @make_candy_text(ptr %7115)
  store ptr %7116, ptr @"Core:text:359", align 8
  %7117 = load ptr, ptr @tag_TextLength, align 8
  %7118 = call ptr @Builtins__structGet(ptr %997, ptr %7117)
  %7119 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:368\00", ptr %7119, align 1
  %7120 = call ptr @make_candy_text(ptr %7119)
  store ptr %7120, ptr @"Core:text:368", align 8
  %7121 = load ptr, ptr @tag_TextCharacters, align 8
  %7122 = call ptr @Builtins__structGet(ptr %997, ptr %7121)
  %7123 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is text` was not satisfied\00", ptr %7123, align 1
  %7124 = call ptr @make_candy_text(ptr %7123)
  store ptr %7124, ptr @"text_`is text` was not satisfied", align 8
  %7125 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:text:characterAt:4\00", ptr %7125, align 1
  %7126 = call ptr @make_candy_text(ptr %7125)
  store ptr %7126, ptr @"Core:text:characterAt:4", align 8
  %7127 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:12\00", ptr %7127, align 1
  %7128 = call ptr @make_candy_text(ptr %7127)
  store ptr %7128, ptr @"Core:text:characterAt:12", align 8
  %7129 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:14\00", ptr %7129, align 1
  %7130 = call ptr @make_candy_text(ptr %7129)
  store ptr %7130, ptr @"Core:text:characterAt:14", align 8
  %7131 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:16\00", ptr %7131, align 1
  %7132 = call ptr @make_candy_text(ptr %7131)
  store ptr %7132, ptr @"Core:text:characterAt:16", align 8
  %7133 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:24\00", ptr %7133, align 1
  %7134 = call ptr @make_candy_text(ptr %7133)
  store ptr %7134, ptr @"Core:text:characterAt:24", align 8
  %7135 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:26\00", ptr %7135, align 1
  %7136 = call ptr @make_candy_text(ptr %7135)
  store ptr %7136, ptr @"Core:text:characterAt:26", align 8
  %7137 = alloca i8, i64 44, align 1
  store [44 x i8] c"`int.isNonNegative index` was not satisfied\00", ptr %7137, align 1
  %7138 = call ptr @make_candy_text(ptr %7137)
  store ptr %7138, ptr @"text_`int.isNonNegative index` was not satisfied", align 8
  %7139 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:28\00", ptr %7139, align 1
  %7140 = call ptr @make_candy_text(ptr %7139)
  store ptr %7140, ptr @"Core:text:characterAt:28", align 8
  %7141 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:36\00", ptr %7141, align 1
  %7142 = call ptr @make_candy_text(ptr %7141)
  store ptr %7142, ptr @"Core:text:characterAt:36", align 8
  %7143 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:40\00", ptr %7143, align 1
  %7144 = call ptr @make_candy_text(ptr %7143)
  store ptr %7144, ptr @"Core:text:characterAt:40", align 8
  %7145 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:41\00", ptr %7145, align 1
  %7146 = call ptr @make_candy_text(ptr %7145)
  store ptr %7146, ptr @"Core:text:characterAt:41", align 8
  %7147 = alloca i8, i64 55, align 1
  store [55 x i8] c"`int.isLessThan index (length text)` was not satisfied\00", ptr %7147, align 1
  %7148 = call ptr @make_candy_text(ptr %7147)
  store ptr %7148, ptr @"text_`int.isLessThan index (length text)` was not satisfied", align 8
  %7149 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:43\00", ptr %7149, align 1
  %7150 = call ptr @make_candy_text(ptr %7149)
  store ptr %7150, ptr @"Core:text:characterAt:43", align 8
  %7151 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:46\00", ptr %7151, align 1
  %7152 = call ptr @make_candy_text(ptr %7151)
  store ptr %7152, ptr @"Core:text:characterAt:46", align 8
  %7153 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:54\00", ptr %7153, align 1
  %7154 = call ptr @make_candy_text(ptr %7153)
  store ptr %7154, ptr @"Core:text:characterAt:54", align 8
  %7155 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:characterAt:56\00", ptr %7155, align 1
  %7156 = call ptr @make_candy_text(ptr %7155)
  store ptr %7156, ptr @"Core:text:characterAt:56", align 8
  %7157 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %7158 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7157, i32 0, i32 0
  store ptr %7122, ptr %7158, align 8
  %7159 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7157, i32 0, i32 1
  store ptr %4264, ptr %7159, align 8
  %7160 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7157, i32 0, i32 2
  store ptr %7118, ptr %7160, align 8
  %7161 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7157, i32 0, i32 3
  store ptr %7043, ptr %7161, align 8
  %7162 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7157, i32 0, i32 4
  store ptr %7097, ptr %7162, align 8
  %7163 = call ptr @make_candy_function(ptr @Core_text_characterAt, ptr %7157, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7163, ptr @fun_Core_text_characterAt, align 8
  %7164 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:377\00", ptr %7164, align 1
  %7165 = call ptr @make_candy_text(ptr %7164)
  store ptr %7165, ptr @"Core:text:377", align 8
  %7166 = load ptr, ptr @tag_TextGetRange, align 8
  %7167 = call ptr @Builtins__structGet(ptr %997, ptr %7166)
  %7168 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:386\00", ptr %7168, align 1
  %7169 = call ptr @make_candy_text(ptr %7168)
  store ptr %7169, ptr @"Core:text:386", align 8
  %7170 = load ptr, ptr @tag_TextConcatenate, align 8
  %7171 = call ptr @Builtins__structGet(ptr %997, ptr %7170)
  %7172 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:395\00", ptr %7172, align 1
  %7173 = call ptr @make_candy_text(ptr %7172)
  store ptr %7173, ptr @"Core:text:395", align 8
  %7174 = load ptr, ptr @tag_TextStartsWith, align 8
  %7175 = call ptr @Builtins__structGet(ptr %997, ptr %7174)
  %7176 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:404\00", ptr %7176, align 1
  %7177 = call ptr @make_candy_text(ptr %7176)
  store ptr %7177, ptr @"Core:text:404", align 8
  %7178 = load ptr, ptr @tag_TextEndsWith, align 8
  %7179 = call ptr @Builtins__structGet(ptr %997, ptr %7178)
  %7180 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:413\00", ptr %7180, align 1
  %7181 = call ptr @make_candy_text(ptr %7180)
  store ptr %7181, ptr @"Core:text:413", align 8
  %7182 = load ptr, ptr @tag_TextContains, align 8
  %7183 = call ptr @Builtins__structGet(ptr %997, ptr %7182)
  %7184 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removePrefix:4\00", ptr %7184, align 1
  %7185 = call ptr @make_candy_text(ptr %7184)
  store ptr %7185, ptr @"Core:text:removePrefix:4", align 8
  %7186 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is prefix` was not satisfied\00", ptr %7186, align 1
  %7187 = call ptr @make_candy_text(ptr %7186)
  store ptr %7187, ptr @"text_`is prefix` was not satisfied", align 8
  %7188 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removePrefix:9\00", ptr %7188, align 1
  %7189 = call ptr @make_candy_text(ptr %7188)
  store ptr %7189, ptr @"Core:text:removePrefix:9", align 8
  %7190 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removePrefix:14\00", ptr %7190, align 1
  %7191 = call ptr @make_candy_text(ptr %7190)
  store ptr %7191, ptr @"Core:text:removePrefix:14", align 8
  %7192 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:4\00", ptr %7192, align 1
  %7193 = call ptr @make_candy_text(ptr %7192)
  store ptr %7193, ptr @"Core:text:removePrefix:15:4", align 8
  %7194 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:7\00", ptr %7194, align 1
  %7195 = call ptr @make_candy_text(ptr %7194)
  store ptr %7195, ptr @"Core:text:removePrefix:15:7", align 8
  %7196 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:8\00", ptr %7196, align 1
  %7197 = call ptr @make_candy_text(ptr %7196)
  store ptr %7197, ptr @"Core:text:removePrefix:15:8", align 8
  %7198 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removePrefix:17\00", ptr %7198, align 1
  %7199 = call ptr @make_candy_text(ptr %7198)
  store ptr %7199, ptr @"Core:text:removePrefix:17", align 8
  %7200 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %7201 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7200, i32 0, i32 0
  store ptr %7175, ptr %7201, align 8
  %7202 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7200, i32 0, i32 1
  store ptr %7118, ptr %7202, align 8
  %7203 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7200, i32 0, i32 2
  store ptr %3456, ptr %7203, align 8
  %7204 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7200, i32 0, i32 3
  store ptr %7097, ptr %7204, align 8
  %7205 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %7200, i32 0, i32 4
  store ptr %7167, ptr %7205, align 8
  %7206 = call ptr @make_candy_function(ptr @Core_text_removePrefix, ptr %7200, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7206, ptr @fun_Core_text_removePrefix, align 8
  %7207 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removeSuffix:4\00", ptr %7207, align 1
  %7208 = call ptr @make_candy_text(ptr %7207)
  store ptr %7208, ptr @"Core:text:removeSuffix:4", align 8
  %7209 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is suffix` was not satisfied\00", ptr %7209, align 1
  %7210 = call ptr @make_candy_text(ptr %7209)
  store ptr %7210, ptr @"text_`is suffix` was not satisfied", align 8
  %7211 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removeSuffix:9\00", ptr %7211, align 1
  %7212 = call ptr @make_candy_text(ptr %7211)
  store ptr %7212, ptr @"Core:text:removeSuffix:9", align 8
  %7213 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removeSuffix:12\00", ptr %7213, align 1
  %7214 = call ptr @make_candy_text(ptr %7213)
  store ptr %7214, ptr @"Core:text:removeSuffix:12", align 8
  %7215 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removeSuffix:18\00", ptr %7215, align 1
  %7216 = call ptr @make_candy_text(ptr %7215)
  store ptr %7216, ptr @"Core:text:removeSuffix:18", align 8
  %7217 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:text:removeSuffix:19:10\00", ptr %7217, align 1
  %7218 = call ptr @make_candy_text(ptr %7217)
  store ptr %7218, ptr @"Core:text:removeSuffix:19:10", align 8
  %7219 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:text:removeSuffix:19:13\00", ptr %7219, align 1
  %7220 = call ptr @make_candy_text(ptr %7219)
  store ptr %7220, ptr @"Core:text:removeSuffix:19:13", align 8
  %7221 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:text:removeSuffix:19:14\00", ptr %7221, align 1
  %7222 = call ptr @make_candy_text(ptr %7221)
  store ptr %7222, ptr @"Core:text:removeSuffix:19:14", align 8
  %7223 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:text:removeSuffix:19:16\00", ptr %7223, align 1
  %7224 = call ptr @make_candy_text(ptr %7223)
  store ptr %7224, ptr @"Core:text:removeSuffix:19:16", align 8
  %7225 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removeSuffix:21\00", ptr %7225, align 1
  %7226 = call ptr @make_candy_text(ptr %7225)
  store ptr %7226, ptr @"Core:text:removeSuffix:21", align 8
  %7227 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %7228 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %7227, i32 0, i32 0
  store ptr %4264, ptr %7228, align 8
  %7229 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %7227, i32 0, i32 1
  store ptr %7118, ptr %7229, align 8
  %7230 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %7227, i32 0, i32 2
  store ptr %3456, ptr %7230, align 8
  %7231 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %7227, i32 0, i32 3
  store ptr %7097, ptr %7231, align 8
  %7232 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %7227, i32 0, i32 4
  store ptr %7179, ptr %7232, align 8
  %7233 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %7227, i32 0, i32 5
  store ptr %7167, ptr %7233, align 8
  %7234 = call ptr @make_candy_function(ptr @Core_text_removeSuffix, ptr %7227, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7234, ptr @fun_Core_text_removeSuffix, align 8
  %7235 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:422\00", ptr %7235, align 1
  %7236 = call ptr @make_candy_text(ptr %7235)
  store ptr %7236, ptr @"Core:text:422", align 8
  %7237 = load ptr, ptr @tag_TextTrimStart, align 8
  %7238 = call ptr @Builtins__structGet(ptr %997, ptr %7237)
  %7239 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:431\00", ptr %7239, align 1
  %7240 = call ptr @make_candy_text(ptr %7239)
  store ptr %7240, ptr @"Core:text:431", align 8
  %7241 = load ptr, ptr @tag_TextTrimEnd, align 8
  %7242 = call ptr @Builtins__structGet(ptr %997, ptr %7241)
  %7243 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:text:trim:4\00", ptr %7243, align 1
  %7244 = call ptr @make_candy_text(ptr %7243)
  store ptr %7244, ptr @"Core:text:trim:4", align 8
  %7245 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:text:trim:7\00", ptr %7245, align 1
  %7246 = call ptr @make_candy_text(ptr %7245)
  store ptr %7246, ptr @"Core:text:trim:7", align 8
  %7247 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:text:trim:9\00", ptr %7247, align 1
  %7248 = call ptr @make_candy_text(ptr %7247)
  store ptr %7248, ptr @"Core:text:trim:9", align 8
  %7249 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %7250 = getelementptr inbounds { ptr, ptr, ptr }, ptr %7249, i32 0, i32 0
  store ptr %7242, ptr %7250, align 8
  %7251 = getelementptr inbounds { ptr, ptr, ptr }, ptr %7249, i32 0, i32 1
  store ptr %7097, ptr %7251, align 8
  %7252 = getelementptr inbounds { ptr, ptr, ptr }, ptr %7249, i32 0, i32 2
  store ptr %7238, ptr %7252, align 8
  %7253 = call ptr @make_candy_function(ptr @Core_text_trim, ptr %7249, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7253, ptr @fun_Core_text_trim, align 8
  %7254 = alloca i8, i64 11, align 1
  store [11 x i8] c"StartsWith\00", ptr %7254, align 1
  %7255 = call ptr @make_candy_tag(ptr %7254, ptr null)
  store ptr %7255, ptr @tag_StartsWith, align 8
  %7256 = alloca i8, i64 5, align 1
  store [5 x i8] c"Rick\00", ptr %7256, align 1
  %7257 = call ptr @make_candy_tag(ptr %7256, ptr null)
  store ptr %7257, ptr @tag_Rick, align 8
  %7258 = alloca i8, i64 5, align 1
  store [5 x i8] c"Trim\00", ptr %7258, align 1
  %7259 = call ptr @make_candy_tag(ptr %7258, ptr null)
  store ptr %7259, ptr @tag_Trim, align 8
  %7260 = alloca i8, i64 9, align 1
  store [9 x i8] c"Contains\00", ptr %7260, align 1
  %7261 = call ptr @make_candy_tag(ptr %7260, ptr null)
  store ptr %7261, ptr @tag_Contains, align 8
  %7262 = alloca i8, i64 11, align 1
  store [11 x i8] c"Characters\00", ptr %7262, align 1
  %7263 = call ptr @make_candy_tag(ptr %7262, ptr null)
  store ptr %7263, ptr @tag_Characters, align 8
  %7264 = alloca i8, i64 9, align 1
  store [9 x i8] c"EndsWith\00", ptr %7264, align 1
  %7265 = call ptr @make_candy_tag(ptr %7264, ptr null)
  store ptr %7265, ptr @tag_EndsWith, align 8
  %7266 = alloca i8, i64 13, align 1
  store [13 x i8] c"RemoveSuffix\00", ptr %7266, align 1
  %7267 = call ptr @make_candy_tag(ptr %7266, ptr null)
  store ptr %7267, ptr @tag_RemoveSuffix, align 8
  %7268 = alloca i8, i64 13, align 1
  store [13 x i8] c"RemovePrefix\00", ptr %7268, align 1
  %7269 = call ptr @make_candy_tag(ptr %7268, ptr null)
  store ptr %7269, ptr @tag_RemovePrefix, align 8
  %7270 = alloca i8, i64 9, align 1
  store [9 x i8] c"FromUtf8\00", ptr %7270, align 1
  %7271 = call ptr @make_candy_tag(ptr %7270, ptr null)
  store ptr %7271, ptr @tag_FromUtf8, align 8
  %7272 = alloca i8, i64 12, align 1
  store [12 x i8] c"CharacterAt\00", ptr %7272, align 1
  %7273 = call ptr @make_candy_tag(ptr %7272, ptr null)
  store ptr %7273, ptr @tag_CharacterAt, align 8
  %7274 = alloca i8, i64 10, align 1
  store [10 x i8] c"TrimStart\00", ptr %7274, align 1
  %7275 = call ptr @make_candy_tag(ptr %7274, ptr null)
  store ptr %7275, ptr @tag_TrimStart, align 8
  %7276 = alloca i8, i64 8, align 1
  store [8 x i8] c"TrimEnd\00", ptr %7276, align 1
  %7277 = call ptr @make_candy_tag(ptr %7276, ptr null)
  store ptr %7277, ptr @tag_TrimEnd, align 8
  %7278 = alloca ptr, i64 18, align 8
  %7279 = alloca ptr, i64 18, align 8
  %7280 = load ptr, ptr @tag_Length, align 8
  %7281 = getelementptr ptr, ptr %7278, i64 0
  store ptr %7280, ptr %7281, align 8
  %7282 = getelementptr ptr, ptr %7279, i64 0
  store ptr %7118, ptr %7282, align 8
  %7283 = load ptr, ptr @tag_Trim, align 8
  %7284 = load ptr, ptr @fun_Core_text_trim, align 8
  %7285 = getelementptr ptr, ptr %7278, i64 1
  store ptr %7283, ptr %7285, align 8
  %7286 = getelementptr ptr, ptr %7279, i64 1
  store ptr %7284, ptr %7286, align 8
  %7287 = load ptr, ptr @tag_RemoveSuffix, align 8
  %7288 = load ptr, ptr @fun_Core_text_removeSuffix, align 8
  %7289 = getelementptr ptr, ptr %7278, i64 2
  store ptr %7287, ptr %7289, align 8
  %7290 = getelementptr ptr, ptr %7279, i64 2
  store ptr %7288, ptr %7290, align 8
  %7291 = load ptr, ptr @tag_Characters, align 8
  %7292 = getelementptr ptr, ptr %7278, i64 3
  store ptr %7291, ptr %7292, align 8
  %7293 = getelementptr ptr, ptr %7279, i64 3
  store ptr %7122, ptr %7293, align 8
  %7294 = load ptr, ptr @tag_RemovePrefix, align 8
  %7295 = load ptr, ptr @fun_Core_text_removePrefix, align 8
  %7296 = getelementptr ptr, ptr %7278, i64 4
  store ptr %7294, ptr %7296, align 8
  %7297 = getelementptr ptr, ptr %7279, i64 4
  store ptr %7295, ptr %7297, align 8
  %7298 = load ptr, ptr @tag_Is, align 8
  %7299 = load ptr, ptr @fun_Core_text_is, align 8
  %7300 = getelementptr ptr, ptr %7278, i64 5
  store ptr %7298, ptr %7300, align 8
  %7301 = getelementptr ptr, ptr %7279, i64 5
  store ptr %7299, ptr %7301, align 8
  %7302 = load ptr, ptr @tag_Rick, align 8
  %7303 = load ptr, ptr @"text_We're no strangers to love\0AYou know the rules and so do I\0AA full commitment's what I'm thinking of\0AYou wouldn't get this from any other guy\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AAnd if you ask me how I'm feeling\0ADon't tell me you're too blind to see\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give, never gonna give\0ANever gonna give, never gonna give\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you", align 8
  %7304 = getelementptr ptr, ptr %7278, i64 6
  store ptr %7302, ptr %7304, align 8
  %7305 = getelementptr ptr, ptr %7279, i64 6
  store ptr %7303, ptr %7305, align 8
  %7306 = load ptr, ptr @tag_Concatenate, align 8
  %7307 = getelementptr ptr, ptr %7278, i64 7
  store ptr %7306, ptr %7307, align 8
  %7308 = getelementptr ptr, ptr %7279, i64 7
  store ptr %7171, ptr %7308, align 8
  %7309 = load ptr, ptr @tag_CharacterAt, align 8
  %7310 = load ptr, ptr @fun_Core_text_characterAt, align 8
  %7311 = getelementptr ptr, ptr %7278, i64 8
  store ptr %7309, ptr %7311, align 8
  %7312 = getelementptr ptr, ptr %7279, i64 8
  store ptr %7310, ptr %7312, align 8
  %7313 = load ptr, ptr @tag_GetRange, align 8
  %7314 = getelementptr ptr, ptr %7278, i64 9
  store ptr %7313, ptr %7314, align 8
  %7315 = getelementptr ptr, ptr %7279, i64 9
  store ptr %7167, ptr %7315, align 8
  %7316 = load ptr, ptr @tag_TrimEnd, align 8
  %7317 = getelementptr ptr, ptr %7278, i64 10
  store ptr %7316, ptr %7317, align 8
  %7318 = getelementptr ptr, ptr %7279, i64 10
  store ptr %7242, ptr %7318, align 8
  %7319 = load ptr, ptr @tag_IsEmpty, align 8
  %7320 = getelementptr ptr, ptr %7278, i64 11
  store ptr %7319, ptr %7320, align 8
  %7321 = getelementptr ptr, ptr %7279, i64 11
  store ptr %7114, ptr %7321, align 8
  %7322 = load ptr, ptr @tag_Contains, align 8
  %7323 = getelementptr ptr, ptr %7278, i64 12
  store ptr %7322, ptr %7323, align 8
  %7324 = getelementptr ptr, ptr %7279, i64 12
  store ptr %7183, ptr %7324, align 8
  %7325 = load ptr, ptr @tag_StartsWith, align 8
  %7326 = getelementptr ptr, ptr %7278, i64 13
  store ptr %7325, ptr %7326, align 8
  %7327 = getelementptr ptr, ptr %7279, i64 13
  store ptr %7175, ptr %7327, align 8
  %7328 = load ptr, ptr @tag_EndsWith, align 8
  %7329 = getelementptr ptr, ptr %7278, i64 14
  store ptr %7328, ptr %7329, align 8
  %7330 = getelementptr ptr, ptr %7279, i64 14
  store ptr %7179, ptr %7330, align 8
  %7331 = load ptr, ptr @tag_FromUtf8, align 8
  %7332 = getelementptr ptr, ptr %7278, i64 15
  store ptr %7331, ptr %7332, align 8
  %7333 = getelementptr ptr, ptr %7279, i64 15
  store ptr %7110, ptr %7333, align 8
  %7334 = load ptr, ptr @tag_TrimStart, align 8
  %7335 = getelementptr ptr, ptr %7278, i64 16
  store ptr %7334, ptr %7335, align 8
  %7336 = getelementptr ptr, ptr %7279, i64 16
  store ptr %7238, ptr %7336, align 8
  %7337 = getelementptr ptr, ptr %7278, i64 17
  store ptr null, ptr %7337, align 8
  %7338 = getelementptr ptr, ptr %7279, i64 17
  store ptr null, ptr %7338, align 8
  %7339 = call ptr @make_candy_struct(ptr %7278, ptr %7279)
  %7340 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:toDebugText:toDebugText:7\00", ptr %7340, align 1
  %7341 = call ptr @make_candy_text(ptr %7340)
  store ptr %7341, ptr @"Core:toDebugText:toDebugText:7", align 8
  %7342 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:toDebugText:toDebugText:9\00", ptr %7342, align 1
  %7343 = call ptr @make_candy_text(ptr %7342)
  store ptr %7343, ptr @"Core:toDebugText:toDebugText:9", align 8
  %7344 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:isScale:7\00", ptr %7344, align 1
  %7345 = call ptr @make_candy_text(ptr %7344)
  store ptr %7345, ptr @"Core:fixedDecimal:isScale:7", align 8
  %7346 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:isScale:9\00", ptr %7346, align 1
  %7347 = call ptr @make_candy_text(ptr %7346)
  store ptr %7347, ptr @"Core:fixedDecimal:isScale:9", align 8
  %7348 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:isScale:17\00", ptr %7348, align 1
  %7349 = call ptr @make_candy_text(ptr %7348)
  store ptr %7349, ptr @"Core:fixedDecimal:isScale:17", align 8
  %7350 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isScale:18:7\00", ptr %7350, align 1
  %7351 = call ptr @make_candy_text(ptr %7350)
  store ptr %7351, ptr @"Core:fixedDecimal:isScale:18:7", align 8
  %7352 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isScale:18:9\00", ptr %7352, align 1
  %7353 = call ptr @make_candy_text(ptr %7352)
  store ptr %7353, ptr @"Core:fixedDecimal:isScale:18:9", align 8
  %7354 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:isScale:19\00", ptr %7354, align 1
  %7355 = call ptr @make_candy_text(ptr %7354)
  store ptr %7355, ptr @"Core:fixedDecimal:isScale:19", align 8
  %7356 = alloca i8, i64 34, align 1
  store [34 x i8] c"`isScale scale` was not satisfied\00", ptr %7356, align 1
  %7357 = call ptr @make_candy_text(ptr %7356)
  store ptr %7357, ptr @"text_`isScale scale` was not satisfied", align 8
  %7358 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:scaleFactor:4\00", ptr %7358, align 1
  %7359 = call ptr @make_candy_text(ptr %7358)
  store ptr %7359, ptr @"Core:fixedDecimal:scaleFactor:4", align 8
  %7360 = call ptr @make_candy_int(i64 10)
  store ptr %7360, ptr @num_10, align 8
  %7361 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:scaleFactor:13\00", ptr %7361, align 1
  %7362 = call ptr @make_candy_text(ptr %7361)
  store ptr %7362, ptr @"Core:fixedDecimal:scaleFactor:13", align 8
  %7363 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:scaleFactor:15\00", ptr %7363, align 1
  %7364 = call ptr @make_candy_text(ptr %7363)
  store ptr %7364, ptr @"Core:fixedDecimal:scaleFactor:15", align 8
  %7365 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7366 = getelementptr inbounds { ptr, ptr }, ptr %7365, i32 0, i32 0
  store ptr %1628, ptr %7366, align 8
  %7367 = getelementptr inbounds { ptr, ptr }, ptr %7365, i32 0, i32 1
  store ptr %3048, ptr %7367, align 8
  %7368 = call ptr @make_candy_function(ptr @Core_fixedDecimal_scaleFactor, ptr %7365, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7368, ptr @fun_Core_fixedDecimal_scaleFactor, align 8
  %7369 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:fixedDecimal:is:1\00", ptr %7369, align 1
  %7370 = call ptr @make_candy_text(ptr %7369)
  store ptr %7370, ptr @"Core:fixedDecimal:is:1", align 8
  %7371 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %7371, align 1
  %7372 = call ptr @make_candy_tag(ptr %7371, ptr null)
  store ptr %7372, ptr @tag_FixedDecimal, align 8
  %7373 = alloca i8, i64 11, align 1
  store [11 x i8] c"MinorUnits\00", ptr %7373, align 1
  %7374 = call ptr @make_candy_tag(ptr %7373, ptr null)
  store ptr %7374, ptr @tag_MinorUnits, align 8
  %7375 = alloca i8, i64 43, align 1
  store [43 x i8] c"Struct doesn't contain key `MinorUnits`: `\00", ptr %7375, align 1
  %7376 = call ptr @make_candy_text(ptr %7375)
  store ptr %7376, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %7377 = alloca i8, i64 6, align 1
  store [6 x i8] c"Scale\00", ptr %7377, align 1
  %7378 = call ptr @make_candy_tag(ptr %7377, ptr null)
  store ptr %7378, ptr @tag_Scale, align 8
  %7379 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Scale`: `\00", ptr %7379, align 1
  %7380 = call ptr @make_candy_text(ptr %7379)
  store ptr %7380, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %7381 = alloca i8, i64 28, align 1
  store [28 x i8] c"Expected FixedDecimal, got \00", ptr %7381, align 1
  %7382 = call ptr @make_candy_text(ptr %7381)
  store ptr %7382, ptr @"text_Expected FixedDecimal, got ", align 8
  %7383 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:is:1:minorUnits\00", ptr %7383, align 1
  %7384 = call ptr @make_candy_text(ptr %7383)
  store ptr %7384, ptr @"Core:fixedDecimal:is:1:minorUnits", align 8
  %7385 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:is:1:scale\00", ptr %7385, align 1
  %7386 = call ptr @make_candy_text(ptr %7385)
  store ptr %7386, ptr @"Core:fixedDecimal:is:1:scale", align 8
  %7387 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:is:1:7\00", ptr %7387, align 1
  %7388 = call ptr @make_candy_text(ptr %7387)
  store ptr %7388, ptr @"Core:fixedDecimal:is:1:7", align 8
  %7389 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:is:1:9\00", ptr %7389, align 1
  %7390 = call ptr @make_candy_text(ptr %7389)
  store ptr %7390, ptr @"Core:fixedDecimal:is:1:9", align 8
  %7391 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:is:1:17\00", ptr %7391, align 1
  %7392 = call ptr @make_candy_text(ptr %7391)
  store ptr %7392, ptr @"Core:fixedDecimal:is:1:17", align 8
  %7393 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:is:1:19\00", ptr %7393, align 1
  %7394 = call ptr @make_candy_text(ptr %7393)
  store ptr %7394, ptr @"Core:fixedDecimal:is:1:19", align 8
  %7395 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7396 = getelementptr inbounds { ptr, ptr }, ptr %7395, i32 0, i32 0
  store ptr %1628, ptr %7396, align 8
  %7397 = getelementptr inbounds { ptr, ptr }, ptr %7395, i32 0, i32 1
  store ptr %3048, ptr %7397, align 8
  %7398 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is, ptr %7395, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7398, ptr @fun_Core_fixedDecimal_is, align 8
  %7399 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:minorUnits:2\00", ptr %7399, align 1
  %7400 = call ptr @make_candy_text(ptr %7399)
  store ptr %7400, ptr @"Core:fixedDecimal:minorUnits:2", align 8
  %7401 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:minorUnits:4\00", ptr %7401, align 1
  %7402 = call ptr @make_candy_text(ptr %7401)
  store ptr %7402, ptr @"Core:fixedDecimal:minorUnits:4", align 8
  %7403 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:18\00", ptr %7403, align 1
  %7404 = call ptr @make_candy_text(ptr %7403)
  store ptr %7404, ptr @"Core:fixedDecimal:minorUnits:18", align 8
  %7405 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:19\00", ptr %7405, align 1
  %7406 = call ptr @make_candy_text(ptr %7405)
  store ptr %7406, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  %7407 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:21\00", ptr %7407, align 1
  %7408 = call ptr @make_candy_text(ptr %7407)
  store ptr %7408, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  %7409 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7410 = getelementptr inbounds { ptr }, ptr %7409, i32 0, i32 0
  store ptr %3412, ptr %7410, align 8
  %7411 = call ptr @make_candy_function(ptr @Core_fixedDecimal_minorUnits, ptr %7409, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7411, ptr @fun_Core_fixedDecimal_minorUnits, align 8
  %7412 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:scale:2\00", ptr %7412, align 1
  %7413 = call ptr @make_candy_text(ptr %7412)
  store ptr %7413, ptr @"Core:fixedDecimal:scale:2", align 8
  %7414 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:scale:4\00", ptr %7414, align 1
  %7415 = call ptr @make_candy_text(ptr %7414)
  store ptr %7415, ptr @"Core:fixedDecimal:scale:4", align 8
  %7416 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:18\00", ptr %7416, align 1
  %7417 = call ptr @make_candy_text(ptr %7416)
  store ptr %7417, ptr @"Core:fixedDecimal:scale:18", align 8
  %7418 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:19\00", ptr %7418, align 1
  %7419 = call ptr @make_candy_text(ptr %7418)
  store ptr %7419, ptr @"Core:fixedDecimal:scale:19", align 8
  %7420 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:21\00", ptr %7420, align 1
  %7421 = call ptr @make_candy_text(ptr %7420)
  store ptr %7421, ptr @"Core:fixedDecimal:scale:21", align 8
  %7422 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7423 = getelementptr inbounds { ptr }, ptr %7422, i32 0, i32 0
  store ptr %3412, ptr %7423, align 8
  %7424 = call ptr @make_candy_function(ptr @Core_fixedDecimal_scale, ptr %7422, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7424, ptr @fun_Core_fixedDecimal_scale, align 8
  %7425 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:fromIntScaled:7\00", ptr %7425, align 1
  %7426 = call ptr @make_candy_text(ptr %7425)
  store ptr %7426, ptr @"Core:fixedDecimal:fromIntScaled:7", align 8
  %7427 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:fromIntScaled:9\00", ptr %7427, align 1
  %7428 = call ptr @make_candy_text(ptr %7427)
  store ptr %7428, ptr @"Core:fixedDecimal:fromIntScaled:9", align 8
  %7429 = alloca i8, i64 38, align 1
  store [38 x i8] c"`int.is minorUnits` was not satisfied\00", ptr %7429, align 1
  %7430 = call ptr @make_candy_text(ptr %7429)
  store ptr %7430, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %7431 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:11\00", ptr %7431, align 1
  %7432 = call ptr @make_candy_text(ptr %7431)
  store ptr %7432, ptr @"Core:fixedDecimal:fromIntScaled:11", align 8
  %7433 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:16\00", ptr %7433, align 1
  %7434 = call ptr @make_candy_text(ptr %7433)
  store ptr %7434, ptr @"Core:fixedDecimal:fromIntScaled:16", align 8
  %7435 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7436 = getelementptr inbounds { ptr, ptr }, ptr %7435, i32 0, i32 0
  store ptr %3048, ptr %7436, align 8
  %7437 = getelementptr inbounds { ptr, ptr }, ptr %7435, i32 0, i32 1
  store ptr %1628, ptr %7437, align 8
  %7438 = call ptr @make_candy_function(ptr @Core_fixedDecimal_fromIntScaled, ptr %7435, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7438, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  %7439 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:fromInt:7\00", ptr %7439, align 1
  %7440 = call ptr @make_candy_text(ptr %7439)
  store ptr %7440, ptr @"Core:fixedDecimal:fromInt:7", align 8
  %7441 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:fromInt:9\00", ptr %7441, align 1
  %7442 = call ptr @make_candy_text(ptr %7441)
  store ptr %7442, ptr @"Core:fixedDecimal:fromInt:9", align 8
  %7443 = alloca i8, i64 29, align 1
  store [29 x i8] c"`int.is a` was not satisfied\00", ptr %7443, align 1
  %7444 = call ptr @make_candy_text(ptr %7443)
  store ptr %7444, ptr @"text_`int.is a` was not satisfied", align 8
  %7445 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:fromInt:11\00", ptr %7445, align 1
  %7446 = call ptr @make_candy_text(ptr %7445)
  store ptr %7446, ptr @"Core:fixedDecimal:fromInt:11", align 8
  %7447 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:fromInt:15\00", ptr %7447, align 1
  %7448 = call ptr @make_candy_text(ptr %7447)
  store ptr %7448, ptr @"Core:fixedDecimal:fromInt:15", align 8
  %7449 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7450 = getelementptr inbounds { ptr }, ptr %7449, i32 0, i32 0
  store ptr %3048, ptr %7450, align 8
  %7451 = call ptr @make_candy_function(ptr @Core_fixedDecimal_fromInt, ptr %7449, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7451, ptr @fun_Core_fixedDecimal_fromInt, align 8
  %7452 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:2\00", ptr %7452, align 1
  %7453 = call ptr @make_candy_text(ptr %7452)
  store ptr %7453, ptr @"Core:fixedDecimal:floorToInt:2", align 8
  %7454 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:4\00", ptr %7454, align 1
  %7455 = call ptr @make_candy_text(ptr %7454)
  store ptr %7455, ptr @"Core:fixedDecimal:floorToInt:4", align 8
  %7456 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:7\00", ptr %7456, align 1
  %7457 = call ptr @make_candy_text(ptr %7456)
  store ptr %7457, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  %7458 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:15\00", ptr %7458, align 1
  %7459 = call ptr @make_candy_text(ptr %7458)
  store ptr %7459, ptr @"Core:fixedDecimal:floorToInt:15", align 8
  %7460 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:18\00", ptr %7460, align 1
  %7461 = call ptr @make_candy_text(ptr %7460)
  store ptr %7461, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  %7462 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:20\00", ptr %7462, align 1
  %7463 = call ptr @make_candy_text(ptr %7462)
  store ptr %7463, ptr @"Core:fixedDecimal:floorToInt:20", align 8
  %7464 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:21\00", ptr %7464, align 1
  %7465 = call ptr @make_candy_text(ptr %7464)
  store ptr %7465, ptr @"Core:fixedDecimal:floorToInt:21", align 8
  %7466 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7467 = getelementptr inbounds { ptr, ptr }, ptr %7466, i32 0, i32 0
  store ptr %3412, ptr %7467, align 8
  %7468 = getelementptr inbounds { ptr, ptr }, ptr %7466, i32 0, i32 1
  store ptr %3048, ptr %7468, align 8
  %7469 = call ptr @make_candy_function(ptr @Core_fixedDecimal_floorToInt, ptr %7466, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7469, ptr @fun_Core_fixedDecimal_floorToInt, align 8
  %7470 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:2\00", ptr %7470, align 1
  %7471 = call ptr @make_candy_text(ptr %7470)
  store ptr %7471, ptr @"Core:fixedDecimal:rescaledMinorUnits:2", align 8
  %7472 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:4\00", ptr %7472, align 1
  %7473 = call ptr @make_candy_text(ptr %7472)
  store ptr %7473, ptr @"Core:fixedDecimal:rescaledMinorUnits:4", align 8
  %7474 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isScale targetScale` was not satisfied\00", ptr %7474, align 1
  %7475 = call ptr @make_candy_text(ptr %7474)
  store ptr %7475, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %7476 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:9\00", ptr %7476, align 1
  %7477 = call ptr @make_candy_text(ptr %7476)
  store ptr %7477, ptr @"Core:fixedDecimal:rescaledMinorUnits:9", align 8
  %7478 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:13\00", ptr %7478, align 1
  %7479 = call ptr @make_candy_text(ptr %7478)
  store ptr %7479, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  %7480 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:21\00", ptr %7480, align 1
  %7481 = call ptr @make_candy_text(ptr %7480)
  store ptr %7481, ptr @"Core:fixedDecimal:rescaledMinorUnits:21", align 8
  %7482 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:23\00", ptr %7482, align 1
  %7483 = call ptr @make_candy_text(ptr %7482)
  store ptr %7483, ptr @"Core:fixedDecimal:rescaledMinorUnits:23", align 8
  %7484 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:2\00", ptr %7484, align 1
  %7485 = call ptr @make_candy_text(ptr %7484)
  store ptr %7485, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:2", align 8
  %7486 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:10\00", ptr %7486, align 1
  %7487 = call ptr @make_candy_text(ptr %7486)
  store ptr %7487, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:10", align 8
  %7488 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:14\00", ptr %7488, align 1
  %7489 = call ptr @make_candy_text(ptr %7488)
  store ptr %7489, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:14", align 8
  %7490 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:22\00", ptr %7490, align 1
  %7491 = call ptr @make_candy_text(ptr %7490)
  store ptr %7491, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:22", align 8
  %7492 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:24\00", ptr %7492, align 1
  %7493 = call ptr @make_candy_text(ptr %7492)
  store ptr %7493, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  %7494 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:25\00", ptr %7494, align 1
  %7495 = call ptr @make_candy_text(ptr %7494)
  store ptr %7495, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:25", align 8
  %7496 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:26\00", ptr %7496, align 1
  %7497 = call ptr @make_candy_text(ptr %7496)
  store ptr %7497, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:26", align 8
  %7498 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:2\00", ptr %7498, align 1
  %7499 = call ptr @make_candy_text(ptr %7498)
  store ptr %7499, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:2", align 8
  %7500 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:10\00", ptr %7500, align 1
  %7501 = call ptr @make_candy_text(ptr %7500)
  store ptr %7501, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:10", align 8
  %7502 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:20\00", ptr %7502, align 1
  %7503 = call ptr @make_candy_text(ptr %7502)
  store ptr %7503, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:20", align 8
  %7504 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:23\00", ptr %7504, align 1
  %7505 = call ptr @make_candy_text(ptr %7504)
  store ptr %7505, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:23", align 8
  %7506 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:24\00", ptr %7506, align 1
  %7507 = call ptr @make_candy_text(ptr %7506)
  store ptr %7507, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  %7508 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:25\00", ptr %7508, align 1
  %7509 = call ptr @make_candy_text(ptr %7508)
  store ptr %7509, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:25", align 8
  %7510 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:26\00", ptr %7510, align 1
  %7511 = call ptr @make_candy_text(ptr %7510)
  store ptr %7511, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  %7512 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:26\00", ptr %7512, align 1
  %7513 = call ptr @make_candy_text(ptr %7512)
  store ptr %7513, ptr @"Core:fixedDecimal:rescaledMinorUnits:26", align 8
  %7514 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %7515 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7514, i32 0, i32 0
  store ptr %1628, ptr %7515, align 8
  %7516 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7514, i32 0, i32 1
  store ptr %3048, ptr %7516, align 8
  %7517 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7514, i32 0, i32 2
  store ptr %3412, ptr %7517, align 8
  %7518 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7514, i32 0, i32 3
  store ptr %1868, ptr %7518, align 8
  %7519 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits, ptr %7514, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7519, ptr @fun_Core_fixedDecimal_rescaledMinorUnits, align 8
  %7520 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:rescale:2\00", ptr %7520, align 1
  %7521 = call ptr @make_candy_text(ptr %7520)
  store ptr %7521, ptr @"Core:fixedDecimal:rescale:2", align 8
  %7522 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:rescale:4\00", ptr %7522, align 1
  %7523 = call ptr @make_candy_text(ptr %7522)
  store ptr %7523, ptr @"Core:fixedDecimal:rescale:4", align 8
  %7524 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:rescale:9\00", ptr %7524, align 1
  %7525 = call ptr @make_candy_text(ptr %7524)
  store ptr %7525, ptr @"Core:fixedDecimal:rescale:9", align 8
  %7526 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:rescale:14\00", ptr %7526, align 1
  %7527 = call ptr @make_candy_text(ptr %7526)
  store ptr %7527, ptr @"Core:fixedDecimal:rescale:14", align 8
  %7528 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:rescale:16\00", ptr %7528, align 1
  %7529 = call ptr @make_candy_text(ptr %7528)
  store ptr %7529, ptr @"Core:fixedDecimal:rescale:16", align 8
  %7530 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7531 = getelementptr inbounds { ptr, ptr }, ptr %7530, i32 0, i32 0
  store ptr %1628, ptr %7531, align 8
  %7532 = getelementptr inbounds { ptr, ptr }, ptr %7530, i32 0, i32 1
  store ptr %3048, ptr %7532, align 8
  %7533 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescale, ptr %7530, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7533, ptr @fun_Core_fixedDecimal_rescale, align 8
  %7534 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:2\00", ptr %7534, align 1
  %7535 = call ptr @make_candy_text(ptr %7534)
  store ptr %7535, ptr @"Core:fixedDecimal:comparableMinorUnits:2", align 8
  %7536 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:4\00", ptr %7536, align 1
  %7537 = call ptr @make_candy_text(ptr %7536)
  store ptr %7537, ptr @"Core:fixedDecimal:comparableMinorUnits:4", align 8
  %7538 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:7\00", ptr %7538, align 1
  %7539 = call ptr @make_candy_text(ptr %7538)
  store ptr %7539, ptr @"Core:fixedDecimal:comparableMinorUnits:7", align 8
  %7540 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:9\00", ptr %7540, align 1
  %7541 = call ptr @make_candy_text(ptr %7540)
  store ptr %7541, ptr @"Core:fixedDecimal:comparableMinorUnits:9", align 8
  %7542 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:17\00", ptr %7542, align 1
  %7543 = call ptr @make_candy_text(ptr %7542)
  store ptr %7543, ptr @"Core:fixedDecimal:comparableMinorUnits:17", align 8
  %7544 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:20\00", ptr %7544, align 1
  %7545 = call ptr @make_candy_text(ptr %7544)
  store ptr %7545, ptr @"Core:fixedDecimal:comparableMinorUnits:20", align 8
  %7546 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:23\00", ptr %7546, align 1
  %7547 = call ptr @make_candy_text(ptr %7546)
  store ptr %7547, ptr @"Core:fixedDecimal:comparableMinorUnits:23", align 8
  %7548 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:24\00", ptr %7548, align 1
  %7549 = call ptr @make_candy_text(ptr %7548)
  store ptr %7549, ptr @"Core:fixedDecimal:comparableMinorUnits:24", align 8
  %7550 = alloca i8, i64 7, align 1
  store [7 x i8] c"ValueA\00", ptr %7550, align 1
  %7551 = call ptr @make_candy_tag(ptr %7550, ptr null)
  store ptr %7551, ptr @tag_ValueA, align 8
  %7552 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:30\00", ptr %7552, align 1
  %7553 = call ptr @make_candy_text(ptr %7552)
  store ptr %7553, ptr @"Core:fixedDecimal:comparableMinorUnits:30", align 8
  %7554 = alloca i8, i64 7, align 1
  store [7 x i8] c"ValueB\00", ptr %7554, align 1
  %7555 = call ptr @make_candy_tag(ptr %7554, ptr null)
  store ptr %7555, ptr @tag_ValueB, align 8
  %7556 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:35\00", ptr %7556, align 1
  %7557 = call ptr @make_candy_text(ptr %7556)
  store ptr %7557, ptr @"Core:fixedDecimal:comparableMinorUnits:35", align 8
  %7558 = alloca i8, i64 12, align 1
  store [12 x i8] c"TargetScale\00", ptr %7558, align 1
  %7559 = call ptr @make_candy_tag(ptr %7558, ptr null)
  store ptr %7559, ptr @tag_TargetScale, align 8
  %7560 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7561 = getelementptr inbounds { ptr, ptr }, ptr %7560, i32 0, i32 0
  store ptr %3412, ptr %7561, align 8
  %7562 = getelementptr inbounds { ptr, ptr }, ptr %7560, i32 0, i32 1
  store ptr %3048, ptr %7562, align 8
  %7563 = call ptr @make_candy_function(ptr @Core_fixedDecimal_comparableMinorUnits, ptr %7560, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7563, ptr @fun_Core_fixedDecimal_comparableMinorUnits, align 8
  %7564 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:2\00", ptr %7564, align 1
  %7565 = call ptr @make_candy_text(ptr %7564)
  store ptr %7565, ptr @"Core:fixedDecimal:add:2", align 8
  %7566 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is summandA` was not satisfied\00", ptr %7566, align 1
  %7567 = call ptr @make_candy_text(ptr %7566)
  store ptr %7567, ptr @"text_`is summandA` was not satisfied", align 8
  %7568 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:4\00", ptr %7568, align 1
  %7569 = call ptr @make_candy_text(ptr %7568)
  store ptr %7569, ptr @"Core:fixedDecimal:add:4", align 8
  %7570 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:7\00", ptr %7570, align 1
  %7571 = call ptr @make_candy_text(ptr %7570)
  store ptr %7571, ptr @"Core:fixedDecimal:add:7", align 8
  %7572 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is summandB` was not satisfied\00", ptr %7572, align 1
  %7573 = call ptr @make_candy_text(ptr %7572)
  store ptr %7573, ptr @"text_`is summandB` was not satisfied", align 8
  %7574 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:9\00", ptr %7574, align 1
  %7575 = call ptr @make_candy_text(ptr %7574)
  store ptr %7575, ptr @"Core:fixedDecimal:add:9", align 8
  %7576 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:13\00", ptr %7576, align 1
  %7577 = call ptr @make_candy_text(ptr %7576)
  store ptr %7577, ptr @"Core:fixedDecimal:add:13", align 8
  %7578 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:14\00", ptr %7578, align 1
  %7579 = call ptr @make_candy_text(ptr %7578)
  store ptr %7579, ptr @"Core:fixedDecimal:add:14", align 8
  %7580 = alloca i8, i64 39, align 1
  store [39 x i8] c"Struct doesn't contain key `ValueA`: `\00", ptr %7580, align 1
  %7581 = call ptr @make_candy_text(ptr %7580)
  store ptr %7581, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %7582 = alloca i8, i64 39, align 1
  store [39 x i8] c"Struct doesn't contain key `ValueB`: `\00", ptr %7582, align 1
  %7583 = call ptr @make_candy_text(ptr %7582)
  store ptr %7583, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %7584 = alloca i8, i64 44, align 1
  store [44 x i8] c"Struct doesn't contain key `TargetScale`: `\00", ptr %7584, align 1
  %7585 = call ptr @make_candy_text(ptr %7584)
  store ptr %7585, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %7586 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:add:valueA\00", ptr %7586, align 1
  %7587 = call ptr @make_candy_text(ptr %7586)
  store ptr %7587, ptr @"Core:fixedDecimal:add:valueA", align 8
  %7588 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:add:valueB\00", ptr %7588, align 1
  %7589 = call ptr @make_candy_text(ptr %7588)
  store ptr %7589, ptr @"Core:fixedDecimal:add:valueB", align 8
  %7590 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:add:targetScale\00", ptr %7590, align 1
  %7591 = call ptr @make_candy_text(ptr %7590)
  store ptr %7591, ptr @"Core:fixedDecimal:add:targetScale", align 8
  %7592 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:25\00", ptr %7592, align 1
  %7593 = call ptr @make_candy_text(ptr %7592)
  store ptr %7593, ptr @"Core:fixedDecimal:add:25", align 8
  %7594 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:27\00", ptr %7594, align 1
  %7595 = call ptr @make_candy_text(ptr %7594)
  store ptr %7595, ptr @"Core:fixedDecimal:add:27", align 8
  %7596 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:29\00", ptr %7596, align 1
  %7597 = call ptr @make_candy_text(ptr %7596)
  store ptr %7597, ptr @"Core:fixedDecimal:add:29", align 8
  %7598 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7599 = getelementptr inbounds { ptr }, ptr %7598, i32 0, i32 0
  store ptr %3048, ptr %7599, align 8
  %7600 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add, ptr %7598, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7600, ptr @fun_Core_fixedDecimal_add, align 8
  %7601 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:2\00", ptr %7601, align 1
  %7602 = call ptr @make_candy_text(ptr %7601)
  store ptr %7602, ptr @"Core:fixedDecimal:subtract:2", align 8
  %7603 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is minuend` was not satisfied\00", ptr %7603, align 1
  %7604 = call ptr @make_candy_text(ptr %7603)
  store ptr %7604, ptr @"text_`is minuend` was not satisfied", align 8
  %7605 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:4\00", ptr %7605, align 1
  %7606 = call ptr @make_candy_text(ptr %7605)
  store ptr %7606, ptr @"Core:fixedDecimal:subtract:4", align 8
  %7607 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:7\00", ptr %7607, align 1
  %7608 = call ptr @make_candy_text(ptr %7607)
  store ptr %7608, ptr @"Core:fixedDecimal:subtract:7", align 8
  %7609 = alloca i8, i64 34, align 1
  store [34 x i8] c"`is subtrahend` was not satisfied\00", ptr %7609, align 1
  %7610 = call ptr @make_candy_text(ptr %7609)
  store ptr %7610, ptr @"text_`is subtrahend` was not satisfied", align 8
  %7611 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:9\00", ptr %7611, align 1
  %7612 = call ptr @make_candy_text(ptr %7611)
  store ptr %7612, ptr @"Core:fixedDecimal:subtract:9", align 8
  %7613 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:13\00", ptr %7613, align 1
  %7614 = call ptr @make_candy_text(ptr %7613)
  store ptr %7614, ptr @"Core:fixedDecimal:subtract:13", align 8
  %7615 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:14\00", ptr %7615, align 1
  %7616 = call ptr @make_candy_text(ptr %7615)
  store ptr %7616, ptr @"Core:fixedDecimal:subtract:14", align 8
  %7617 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:subtract:valueA\00", ptr %7617, align 1
  %7618 = call ptr @make_candy_text(ptr %7617)
  store ptr %7618, ptr @"Core:fixedDecimal:subtract:valueA", align 8
  %7619 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:subtract:valueB\00", ptr %7619, align 1
  %7620 = call ptr @make_candy_text(ptr %7619)
  store ptr %7620, ptr @"Core:fixedDecimal:subtract:valueB", align 8
  %7621 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:subtract:targetScale\00", ptr %7621, align 1
  %7622 = call ptr @make_candy_text(ptr %7621)
  store ptr %7622, ptr @"Core:fixedDecimal:subtract:targetScale", align 8
  %7623 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:25\00", ptr %7623, align 1
  %7624 = call ptr @make_candy_text(ptr %7623)
  store ptr %7624, ptr @"Core:fixedDecimal:subtract:25", align 8
  %7625 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:27\00", ptr %7625, align 1
  %7626 = call ptr @make_candy_text(ptr %7625)
  store ptr %7626, ptr @"Core:fixedDecimal:subtract:27", align 8
  %7627 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:29\00", ptr %7627, align 1
  %7628 = call ptr @make_candy_text(ptr %7627)
  store ptr %7628, ptr @"Core:fixedDecimal:subtract:29", align 8
  %7629 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7630 = getelementptr inbounds { ptr }, ptr %7629, i32 0, i32 0
  store ptr %3048, ptr %7630, align 8
  %7631 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract, ptr %7629, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7631, ptr @fun_Core_fixedDecimal_subtract, align 8
  %7632 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:negate:2\00", ptr %7632, align 1
  %7633 = call ptr @make_candy_text(ptr %7632)
  store ptr %7633, ptr @"Core:fixedDecimal:negate:2", align 8
  %7634 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:negate:4\00", ptr %7634, align 1
  %7635 = call ptr @make_candy_text(ptr %7634)
  store ptr %7635, ptr @"Core:fixedDecimal:negate:4", align 8
  %7636 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:negate:8\00", ptr %7636, align 1
  %7637 = call ptr @make_candy_text(ptr %7636)
  store ptr %7637, ptr @"Core:fixedDecimal:negate:8", align 8
  %7638 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:16\00", ptr %7638, align 1
  %7639 = call ptr @make_candy_text(ptr %7638)
  store ptr %7639, ptr @"Core:fixedDecimal:negate:16", align 8
  %7640 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:17\00", ptr %7640, align 1
  %7641 = call ptr @make_candy_text(ptr %7640)
  store ptr %7641, ptr @"Core:fixedDecimal:negate:17", align 8
  %7642 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:20\00", ptr %7642, align 1
  %7643 = call ptr @make_candy_text(ptr %7642)
  store ptr %7643, ptr @"Core:fixedDecimal:negate:20", align 8
  %7644 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:21\00", ptr %7644, align 1
  %7645 = call ptr @make_candy_text(ptr %7644)
  store ptr %7645, ptr @"Core:fixedDecimal:negate:21", align 8
  %7646 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7647 = getelementptr inbounds { ptr, ptr }, ptr %7646, i32 0, i32 0
  store ptr %3412, ptr %7647, align 8
  %7648 = getelementptr inbounds { ptr, ptr }, ptr %7646, i32 0, i32 1
  store ptr %3048, ptr %7648, align 8
  %7649 = call ptr @make_candy_function(ptr @Core_fixedDecimal_negate, ptr %7646, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7649, ptr @fun_Core_fixedDecimal_negate, align 8
  %7650 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:multiply:2\00", ptr %7650, align 1
  %7651 = call ptr @make_candy_text(ptr %7650)
  store ptr %7651, ptr @"Core:fixedDecimal:multiply:2", align 8
  %7652 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is factorA` was not satisfied\00", ptr %7652, align 1
  %7653 = call ptr @make_candy_text(ptr %7652)
  store ptr %7653, ptr @"text_`is factorA` was not satisfied", align 8
  %7654 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:multiply:4\00", ptr %7654, align 1
  %7655 = call ptr @make_candy_text(ptr %7654)
  store ptr %7655, ptr @"Core:fixedDecimal:multiply:4", align 8
  %7656 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:multiply:7\00", ptr %7656, align 1
  %7657 = call ptr @make_candy_text(ptr %7656)
  store ptr %7657, ptr @"Core:fixedDecimal:multiply:7", align 8
  %7658 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is factorB` was not satisfied\00", ptr %7658, align 1
  %7659 = call ptr @make_candy_text(ptr %7658)
  store ptr %7659, ptr @"text_`is factorB` was not satisfied", align 8
  %7660 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:multiply:9\00", ptr %7660, align 1
  %7661 = call ptr @make_candy_text(ptr %7660)
  store ptr %7661, ptr @"Core:fixedDecimal:multiply:9", align 8
  %7662 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:13\00", ptr %7662, align 1
  %7663 = call ptr @make_candy_text(ptr %7662)
  store ptr %7663, ptr @"Core:fixedDecimal:multiply:13", align 8
  %7664 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:21\00", ptr %7664, align 1
  %7665 = call ptr @make_candy_text(ptr %7664)
  store ptr %7665, ptr @"Core:fixedDecimal:multiply:21", align 8
  %7666 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:24\00", ptr %7666, align 1
  %7667 = call ptr @make_candy_text(ptr %7666)
  store ptr %7667, ptr @"Core:fixedDecimal:multiply:24", align 8
  %7668 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:25\00", ptr %7668, align 1
  %7669 = call ptr @make_candy_text(ptr %7668)
  store ptr %7669, ptr @"Core:fixedDecimal:multiply:25", align 8
  %7670 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:28\00", ptr %7670, align 1
  %7671 = call ptr @make_candy_text(ptr %7670)
  store ptr %7671, ptr @"Core:fixedDecimal:multiply:28", align 8
  %7672 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:36\00", ptr %7672, align 1
  %7673 = call ptr @make_candy_text(ptr %7672)
  store ptr %7673, ptr @"Core:fixedDecimal:multiply:36", align 8
  %7674 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:39\00", ptr %7674, align 1
  %7675 = call ptr @make_candy_text(ptr %7674)
  store ptr %7675, ptr @"Core:fixedDecimal:multiply:39", align 8
  %7676 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:40\00", ptr %7676, align 1
  %7677 = call ptr @make_candy_text(ptr %7676)
  store ptr %7677, ptr @"Core:fixedDecimal:multiply:40", align 8
  %7678 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:41\00", ptr %7678, align 1
  %7679 = call ptr @make_candy_text(ptr %7678)
  store ptr %7679, ptr @"Core:fixedDecimal:multiply:41", align 8
  %7680 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7681 = getelementptr inbounds { ptr, ptr }, ptr %7680, i32 0, i32 0
  store ptr %3048, ptr %7681, align 8
  %7682 = getelementptr inbounds { ptr, ptr }, ptr %7680, i32 0, i32 1
  store ptr %3412, ptr %7682, align 8
  %7683 = call ptr @make_candy_function(ptr @Core_fixedDecimal_multiply, ptr %7680, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7683, ptr @fun_Core_fixedDecimal_multiply, align 8
  %7684 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:divideTruncating:2\00", ptr %7684, align 1
  %7685 = call ptr @make_candy_text(ptr %7684)
  store ptr %7685, ptr @"Core:fixedDecimal:divideTruncating:2", align 8
  %7686 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is dividend` was not satisfied\00", ptr %7686, align 1
  %7687 = call ptr @make_candy_text(ptr %7686)
  store ptr %7687, ptr @"text_`is dividend` was not satisfied", align 8
  %7688 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:divideTruncating:4\00", ptr %7688, align 1
  %7689 = call ptr @make_candy_text(ptr %7688)
  store ptr %7689, ptr @"Core:fixedDecimal:divideTruncating:4", align 8
  %7690 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:divideTruncating:7\00", ptr %7690, align 1
  %7691 = call ptr @make_candy_text(ptr %7690)
  store ptr %7691, ptr @"Core:fixedDecimal:divideTruncating:7", align 8
  %7692 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is divisor` was not satisfied\00", ptr %7692, align 1
  %7693 = call ptr @make_candy_text(ptr %7692)
  store ptr %7693, ptr @"text_`is divisor` was not satisfied", align 8
  %7694 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:divideTruncating:9\00", ptr %7694, align 1
  %7695 = call ptr @make_candy_text(ptr %7694)
  store ptr %7695, ptr @"Core:fixedDecimal:divideTruncating:9", align 8
  %7696 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:12\00", ptr %7696, align 1
  %7697 = call ptr @make_candy_text(ptr %7696)
  store ptr %7697, ptr @"Core:fixedDecimal:divideTruncating:12", align 8
  %7698 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:15\00", ptr %7698, align 1
  %7699 = call ptr @make_candy_text(ptr %7698)
  store ptr %7699, ptr @"Core:fixedDecimal:divideTruncating:15", align 8
  %7700 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:23\00", ptr %7700, align 1
  %7701 = call ptr @make_candy_text(ptr %7700)
  store ptr %7701, ptr @"Core:fixedDecimal:divideTruncating:23", align 8
  %7702 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:24\00", ptr %7702, align 1
  %7703 = call ptr @make_candy_text(ptr %7702)
  store ptr %7703, ptr @"Core:fixedDecimal:divideTruncating:24", align 8
  %7704 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:32\00", ptr %7704, align 1
  %7705 = call ptr @make_candy_text(ptr %7704)
  store ptr %7705, ptr @"Core:fixedDecimal:divideTruncating:32", align 8
  %7706 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:36\00", ptr %7706, align 1
  %7707 = call ptr @make_candy_text(ptr %7706)
  store ptr %7707, ptr @"Core:fixedDecimal:divideTruncating:36", align 8
  %7708 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:37\00", ptr %7708, align 1
  %7709 = call ptr @make_candy_text(ptr %7708)
  store ptr %7709, ptr @"Core:fixedDecimal:divideTruncating:37", align 8
  %7710 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:divideTruncating:valueA\00", ptr %7710, align 1
  %7711 = call ptr @make_candy_text(ptr %7710)
  store ptr %7711, ptr @"Core:fixedDecimal:divideTruncating:valueA", align 8
  %7712 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:divideTruncating:valueB\00", ptr %7712, align 1
  %7713 = call ptr @make_candy_text(ptr %7712)
  store ptr %7713, ptr @"Core:fixedDecimal:divideTruncating:valueB", align 8
  %7714 = alloca i8, i64 47, align 1
  store [47 x i8] c"Core:fixedDecimal:divideTruncating:targetScale\00", ptr %7714, align 1
  %7715 = call ptr @make_candy_text(ptr %7714)
  store ptr %7715, ptr @"Core:fixedDecimal:divideTruncating:targetScale", align 8
  %7716 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:48\00", ptr %7716, align 1
  %7717 = call ptr @make_candy_text(ptr %7716)
  store ptr %7717, ptr @"Core:fixedDecimal:divideTruncating:48", align 8
  %7718 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:51\00", ptr %7718, align 1
  %7719 = call ptr @make_candy_text(ptr %7718)
  store ptr %7719, ptr @"Core:fixedDecimal:divideTruncating:51", align 8
  %7720 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:52\00", ptr %7720, align 1
  %7721 = call ptr @make_candy_text(ptr %7720)
  store ptr %7721, ptr @"Core:fixedDecimal:divideTruncating:52", align 8
  %7722 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:60\00", ptr %7722, align 1
  %7723 = call ptr @make_candy_text(ptr %7722)
  store ptr %7723, ptr @"Core:fixedDecimal:divideTruncating:60", align 8
  %7724 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:62\00", ptr %7724, align 1
  %7725 = call ptr @make_candy_text(ptr %7724)
  store ptr %7725, ptr @"Core:fixedDecimal:divideTruncating:62", align 8
  %7726 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:64\00", ptr %7726, align 1
  %7727 = call ptr @make_candy_text(ptr %7726)
  store ptr %7727, ptr @"Core:fixedDecimal:divideTruncating:64", align 8
  %7728 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %7729 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7728, i32 0, i32 0
  store ptr %1628, ptr %7729, align 8
  %7730 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7728, i32 0, i32 1
  store ptr %3048, ptr %7730, align 8
  %7731 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7728, i32 0, i32 2
  store ptr %1870, ptr %7731, align 8
  %7732 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7728, i32 0, i32 3
  store ptr %3412, ptr %7732, align 8
  %7733 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating, ptr %7728, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7733, ptr @fun_Core_fixedDecimal_divideTruncating, align 8
  %7734 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:2\00", ptr %7734, align 1
  %7735 = call ptr @make_candy_text(ptr %7734)
  store ptr %7735, ptr @"Core:fixedDecimal:divideTruncatingAtScale:2", align 8
  %7736 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:4\00", ptr %7736, align 1
  %7737 = call ptr @make_candy_text(ptr %7736)
  store ptr %7737, ptr @"Core:fixedDecimal:divideTruncatingAtScale:4", align 8
  %7738 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:7\00", ptr %7738, align 1
  %7739 = call ptr @make_candy_text(ptr %7738)
  store ptr %7739, ptr @"Core:fixedDecimal:divideTruncatingAtScale:7", align 8
  %7740 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:9\00", ptr %7740, align 1
  %7741 = call ptr @make_candy_text(ptr %7740)
  store ptr %7741, ptr @"Core:fixedDecimal:divideTruncatingAtScale:9", align 8
  %7742 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:14\00", ptr %7742, align 1
  %7743 = call ptr @make_candy_text(ptr %7742)
  store ptr %7743, ptr @"Core:fixedDecimal:divideTruncatingAtScale:14", align 8
  %7744 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:17\00", ptr %7744, align 1
  %7745 = call ptr @make_candy_text(ptr %7744)
  store ptr %7745, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  %7746 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:20\00", ptr %7746, align 1
  %7747 = call ptr @make_candy_text(ptr %7746)
  store ptr %7747, ptr @"Core:fixedDecimal:divideTruncatingAtScale:20", align 8
  %7748 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:28\00", ptr %7748, align 1
  %7749 = call ptr @make_candy_text(ptr %7748)
  store ptr %7749, ptr @"Core:fixedDecimal:divideTruncatingAtScale:28", align 8
  %7750 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:29\00", ptr %7750, align 1
  %7751 = call ptr @make_candy_text(ptr %7750)
  store ptr %7751, ptr @"Core:fixedDecimal:divideTruncatingAtScale:29", align 8
  %7752 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:37\00", ptr %7752, align 1
  %7753 = call ptr @make_candy_text(ptr %7752)
  store ptr %7753, ptr @"Core:fixedDecimal:divideTruncatingAtScale:37", align 8
  %7754 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:41\00", ptr %7754, align 1
  %7755 = call ptr @make_candy_text(ptr %7754)
  store ptr %7755, ptr @"Core:fixedDecimal:divideTruncatingAtScale:41", align 8
  %7756 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:42\00", ptr %7756, align 1
  %7757 = call ptr @make_candy_text(ptr %7756)
  store ptr %7757, ptr @"Core:fixedDecimal:divideTruncatingAtScale:42", align 8
  %7758 = alloca i8, i64 49, align 1
  store [49 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:valueA\00", ptr %7758, align 1
  %7759 = call ptr @make_candy_text(ptr %7758)
  store ptr %7759, ptr @"Core:fixedDecimal:divideTruncatingAtScale:valueA", align 8
  %7760 = alloca i8, i64 49, align 1
  store [49 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:valueB\00", ptr %7760, align 1
  %7761 = call ptr @make_candy_text(ptr %7760)
  store ptr %7761, ptr @"Core:fixedDecimal:divideTruncatingAtScale:valueB", align 8
  %7762 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:53\00", ptr %7762, align 1
  %7763 = call ptr @make_candy_text(ptr %7762)
  store ptr %7763, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  %7764 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:56\00", ptr %7764, align 1
  %7765 = call ptr @make_candy_text(ptr %7764)
  store ptr %7765, ptr @"Core:fixedDecimal:divideTruncatingAtScale:56", align 8
  %7766 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:57\00", ptr %7766, align 1
  %7767 = call ptr @make_candy_text(ptr %7766)
  store ptr %7767, ptr @"Core:fixedDecimal:divideTruncatingAtScale:57", align 8
  %7768 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:65\00", ptr %7768, align 1
  %7769 = call ptr @make_candy_text(ptr %7768)
  store ptr %7769, ptr @"Core:fixedDecimal:divideTruncatingAtScale:65", align 8
  %7770 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:67\00", ptr %7770, align 1
  %7771 = call ptr @make_candy_text(ptr %7770)
  store ptr %7771, ptr @"Core:fixedDecimal:divideTruncatingAtScale:67", align 8
  %7772 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:69\00", ptr %7772, align 1
  %7773 = call ptr @make_candy_text(ptr %7772)
  store ptr %7773, ptr @"Core:fixedDecimal:divideTruncatingAtScale:69", align 8
  %7774 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %7775 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7774, i32 0, i32 0
  store ptr %1628, ptr %7775, align 8
  %7776 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7774, i32 0, i32 1
  store ptr %3048, ptr %7776, align 8
  %7777 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7774, i32 0, i32 2
  store ptr %1870, ptr %7777, align 8
  %7778 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %7774, i32 0, i32 3
  store ptr %3412, ptr %7778, align 8
  %7779 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale, ptr %7774, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7779, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale, align 8
  %7780 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:2\00", ptr %7780, align 1
  %7781 = call ptr @make_candy_text(ptr %7780)
  store ptr %7781, ptr @"Core:fixedDecimal:compareTo:2", align 8
  %7782 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:4\00", ptr %7782, align 1
  %7783 = call ptr @make_candy_text(ptr %7782)
  store ptr %7783, ptr @"Core:fixedDecimal:compareTo:4", align 8
  %7784 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:7\00", ptr %7784, align 1
  %7785 = call ptr @make_candy_text(ptr %7784)
  store ptr %7785, ptr @"Core:fixedDecimal:compareTo:7", align 8
  %7786 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:9\00", ptr %7786, align 1
  %7787 = call ptr @make_candy_text(ptr %7786)
  store ptr %7787, ptr @"Core:fixedDecimal:compareTo:9", align 8
  %7788 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:13\00", ptr %7788, align 1
  %7789 = call ptr @make_candy_text(ptr %7788)
  store ptr %7789, ptr @"Core:fixedDecimal:compareTo:13", align 8
  %7790 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:14\00", ptr %7790, align 1
  %7791 = call ptr @make_candy_text(ptr %7790)
  store ptr %7791, ptr @"Core:fixedDecimal:compareTo:14", align 8
  %7792 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:compareTo:valueA#1\00", ptr %7792, align 1
  %7793 = call ptr @make_candy_text(ptr %7792)
  store ptr %7793, ptr @"Core:fixedDecimal:compareTo:valueA#1", align 8
  %7794 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:compareTo:valueB#1\00", ptr %7794, align 1
  %7795 = call ptr @make_candy_text(ptr %7794)
  store ptr %7795, ptr @"Core:fixedDecimal:compareTo:valueB#1", align 8
  %7796 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:24\00", ptr %7796, align 1
  %7797 = call ptr @make_candy_text(ptr %7796)
  store ptr %7797, ptr @"Core:fixedDecimal:compareTo:24", align 8
  %7798 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:26\00", ptr %7798, align 1
  %7799 = call ptr @make_candy_text(ptr %7798)
  store ptr %7799, ptr @"Core:fixedDecimal:compareTo:26", align 8
  %7800 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:32\00", ptr %7800, align 1
  %7801 = call ptr @make_candy_text(ptr %7800)
  store ptr %7801, ptr @"Core:fixedDecimal:compareTo:32", align 8
  %7802 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:40\00", ptr %7802, align 1
  %7803 = call ptr @make_candy_text(ptr %7802)
  store ptr %7803, ptr @"Core:fixedDecimal:compareTo:40", align 8
  %7804 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:44\00", ptr %7804, align 1
  %7805 = call ptr @make_candy_text(ptr %7804)
  store ptr %7805, ptr @"Core:fixedDecimal:compareTo:44", align 8
  %7806 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:45\00", ptr %7806, align 1
  %7807 = call ptr @make_candy_text(ptr %7806)
  store ptr %7807, ptr @"Core:fixedDecimal:compareTo:45", align 8
  %7808 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:46\00", ptr %7808, align 1
  %7809 = call ptr @make_candy_text(ptr %7808)
  store ptr %7809, ptr @"Core:fixedDecimal:compareTo:46", align 8
  %7810 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %7811 = getelementptr inbounds { ptr, ptr, ptr }, ptr %7810, i32 0, i32 0
  store ptr %3048, ptr %7811, align 8
  %7812 = getelementptr inbounds { ptr, ptr, ptr }, ptr %7810, i32 0, i32 1
  store ptr %1628, ptr %7812, align 8
  %7813 = getelementptr inbounds { ptr, ptr, ptr }, ptr %7810, i32 0, i32 2
  store ptr %1870, ptr %7813, align 8
  %7814 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo, ptr %7810, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7814, ptr @fun_Core_fixedDecimal_compareTo, align 8
  %7815 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isLessThan:2\00", ptr %7815, align 1
  %7816 = call ptr @make_candy_text(ptr %7815)
  store ptr %7816, ptr @"Core:fixedDecimal:isLessThan:2", align 8
  %7817 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isLessThan:4\00", ptr %7817, align 1
  %7818 = call ptr @make_candy_text(ptr %7817)
  store ptr %7818, ptr @"Core:fixedDecimal:isLessThan:4", align 8
  %7819 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isLessThan:7\00", ptr %7819, align 1
  %7820 = call ptr @make_candy_text(ptr %7819)
  store ptr %7820, ptr @"Core:fixedDecimal:isLessThan:7", align 8
  %7821 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isLessThan:9\00", ptr %7821, align 1
  %7822 = call ptr @make_candy_text(ptr %7821)
  store ptr %7822, ptr @"Core:fixedDecimal:isLessThan:9", align 8
  %7823 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isLessThan:14\00", ptr %7823, align 1
  %7824 = call ptr @make_candy_text(ptr %7823)
  store ptr %7824, ptr @"Core:fixedDecimal:isLessThan:14", align 8
  %7825 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isLessThan:16\00", ptr %7825, align 1
  %7826 = call ptr @make_candy_text(ptr %7825)
  store ptr %7826, ptr @"Core:fixedDecimal:isLessThan:16", align 8
  %7827 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7828 = getelementptr inbounds { ptr }, ptr %7827, i32 0, i32 0
  store ptr %1870, ptr %7828, align 8
  %7829 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isLessThan, ptr %7827, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7829, ptr @fun_Core_fixedDecimal_isLessThan, align 8
  %7830 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:2\00", ptr %7830, align 1
  %7831 = call ptr @make_candy_text(ptr %7830)
  store ptr %7831, ptr @"Core:fixedDecimal:isGreaterThan:2", align 8
  %7832 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:4\00", ptr %7832, align 1
  %7833 = call ptr @make_candy_text(ptr %7832)
  store ptr %7833, ptr @"Core:fixedDecimal:isGreaterThan:4", align 8
  %7834 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:7\00", ptr %7834, align 1
  %7835 = call ptr @make_candy_text(ptr %7834)
  store ptr %7835, ptr @"Core:fixedDecimal:isGreaterThan:7", align 8
  %7836 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:9\00", ptr %7836, align 1
  %7837 = call ptr @make_candy_text(ptr %7836)
  store ptr %7837, ptr @"Core:fixedDecimal:isGreaterThan:9", align 8
  %7838 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isGreaterThan:14\00", ptr %7838, align 1
  %7839 = call ptr @make_candy_text(ptr %7838)
  store ptr %7839, ptr @"Core:fixedDecimal:isGreaterThan:14", align 8
  %7840 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isGreaterThan:16\00", ptr %7840, align 1
  %7841 = call ptr @make_candy_text(ptr %7840)
  store ptr %7841, ptr @"Core:fixedDecimal:isGreaterThan:16", align 8
  %7842 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7843 = getelementptr inbounds { ptr }, ptr %7842, i32 0, i32 0
  store ptr %1870, ptr %7843, align 8
  %7844 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isGreaterThan, ptr %7842, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7844, ptr @fun_Core_fixedDecimal_isGreaterThan, align 8
  %7845 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:2\00", ptr %7845, align 1
  %7846 = call ptr @make_candy_text(ptr %7845)
  store ptr %7846, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:2", align 8
  %7847 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:4\00", ptr %7847, align 1
  %7848 = call ptr @make_candy_text(ptr %7847)
  store ptr %7848, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:4", align 8
  %7849 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:7\00", ptr %7849, align 1
  %7850 = call ptr @make_candy_text(ptr %7849)
  store ptr %7850, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:7", align 8
  %7851 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:9\00", ptr %7851, align 1
  %7852 = call ptr @make_candy_text(ptr %7851)
  store ptr %7852, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:9", align 8
  %7853 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:13\00", ptr %7853, align 1
  %7854 = call ptr @make_candy_text(ptr %7853)
  store ptr %7854, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %7855 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:21\00", ptr %7855, align 1
  %7856 = call ptr @make_candy_text(ptr %7855)
  store ptr %7856, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:21", align 8
  %7857 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:22\00", ptr %7857, align 1
  %7858 = call ptr @make_candy_text(ptr %7857)
  store ptr %7858, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:22", align 8
  %7859 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7860 = getelementptr inbounds { ptr, ptr }, ptr %7859, i32 0, i32 0
  store ptr %1628, ptr %7860, align 8
  %7861 = getelementptr inbounds { ptr, ptr }, ptr %7859, i32 0, i32 1
  store ptr %1870, ptr %7861, align 8
  %7862 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isLessThanOrEqualTo, ptr %7859, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7862, ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo, align 8
  %7863 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:isGreaterThanOrEqualTo:2\00", ptr %7863, align 1
  %7864 = call ptr @make_candy_text(ptr %7863)
  store ptr %7864, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:2", align 8
  %7865 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:isGreaterThanOrEqualTo:4\00", ptr %7865, align 1
  %7866 = call ptr @make_candy_text(ptr %7865)
  store ptr %7866, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:4", align 8
  %7867 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:isGreaterThanOrEqualTo:7\00", ptr %7867, align 1
  %7868 = call ptr @make_candy_text(ptr %7867)
  store ptr %7868, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:7", align 8
  %7869 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:isGreaterThanOrEqualTo:9\00", ptr %7869, align 1
  %7870 = call ptr @make_candy_text(ptr %7869)
  store ptr %7870, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:9", align 8
  %7871 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:isGreaterThanOrEqualTo:13\00", ptr %7871, align 1
  %7872 = call ptr @make_candy_text(ptr %7871)
  store ptr %7872, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:13", align 8
  %7873 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:isGreaterThanOrEqualTo:21\00", ptr %7873, align 1
  %7874 = call ptr @make_candy_text(ptr %7873)
  store ptr %7874, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:21", align 8
  %7875 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:isGreaterThanOrEqualTo:22\00", ptr %7875, align 1
  %7876 = call ptr @make_candy_text(ptr %7875)
  store ptr %7876, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:22", align 8
  %7877 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7878 = getelementptr inbounds { ptr, ptr }, ptr %7877, i32 0, i32 0
  store ptr %1628, ptr %7878, align 8
  %7879 = getelementptr inbounds { ptr, ptr }, ptr %7877, i32 0, i32 1
  store ptr %1870, ptr %7879, align 8
  %7880 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isGreaterThanOrEqualTo, ptr %7877, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7880, ptr @fun_Core_fixedDecimal_isGreaterThanOrEqualTo, align 8
  %7881 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isPositive:2\00", ptr %7881, align 1
  %7882 = call ptr @make_candy_text(ptr %7881)
  store ptr %7882, ptr @"Core:fixedDecimal:isPositive:2", align 8
  %7883 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isPositive:4\00", ptr %7883, align 1
  %7884 = call ptr @make_candy_text(ptr %7883)
  store ptr %7884, ptr @"Core:fixedDecimal:isPositive:4", align 8
  %7885 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isPositive:7\00", ptr %7885, align 1
  %7886 = call ptr @make_candy_text(ptr %7885)
  store ptr %7886, ptr @"Core:fixedDecimal:isPositive:7", align 8
  %7887 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isPositive:15\00", ptr %7887, align 1
  %7888 = call ptr @make_candy_text(ptr %7887)
  store ptr %7888, ptr @"Core:fixedDecimal:isPositive:15", align 8
  %7889 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isPositive:17\00", ptr %7889, align 1
  %7890 = call ptr @make_candy_text(ptr %7889)
  store ptr %7890, ptr @"Core:fixedDecimal:isPositive:17", align 8
  %7891 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7892 = getelementptr inbounds { ptr, ptr }, ptr %7891, i32 0, i32 0
  store ptr %3412, ptr %7892, align 8
  %7893 = getelementptr inbounds { ptr, ptr }, ptr %7891, i32 0, i32 1
  store ptr %3048, ptr %7893, align 8
  %7894 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isPositive, ptr %7891, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7894, ptr @fun_Core_fixedDecimal_isPositive, align 8
  %7895 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonPositive:2\00", ptr %7895, align 1
  %7896 = call ptr @make_candy_text(ptr %7895)
  store ptr %7896, ptr @"Core:fixedDecimal:isNonPositive:2", align 8
  %7897 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonPositive:4\00", ptr %7897, align 1
  %7898 = call ptr @make_candy_text(ptr %7897)
  store ptr %7898, ptr @"Core:fixedDecimal:isNonPositive:4", align 8
  %7899 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonPositive:7\00", ptr %7899, align 1
  %7900 = call ptr @make_candy_text(ptr %7899)
  store ptr %7900, ptr @"Core:fixedDecimal:isNonPositive:7", align 8
  %7901 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isNonPositive:15\00", ptr %7901, align 1
  %7902 = call ptr @make_candy_text(ptr %7901)
  store ptr %7902, ptr @"Core:fixedDecimal:isNonPositive:15", align 8
  %7903 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isNonPositive:16\00", ptr %7903, align 1
  %7904 = call ptr @make_candy_text(ptr %7903)
  store ptr %7904, ptr @"Core:fixedDecimal:isNonPositive:16", align 8
  %7905 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7906 = getelementptr inbounds { ptr }, ptr %7905, i32 0, i32 0
  store ptr %1628, ptr %7906, align 8
  %7907 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isNonPositive, ptr %7905, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7907, ptr @fun_Core_fixedDecimal_isNonPositive, align 8
  %7908 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:2\00", ptr %7908, align 1
  %7909 = call ptr @make_candy_text(ptr %7908)
  store ptr %7909, ptr @"Core:fixedDecimal:isNegative:2", align 8
  %7910 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:4\00", ptr %7910, align 1
  %7911 = call ptr @make_candy_text(ptr %7910)
  store ptr %7911, ptr @"Core:fixedDecimal:isNegative:4", align 8
  %7912 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:7\00", ptr %7912, align 1
  %7913 = call ptr @make_candy_text(ptr %7912)
  store ptr %7913, ptr @"Core:fixedDecimal:isNegative:7", align 8
  %7914 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isNegative:15\00", ptr %7914, align 1
  %7915 = call ptr @make_candy_text(ptr %7914)
  store ptr %7915, ptr @"Core:fixedDecimal:isNegative:15", align 8
  %7916 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isNegative:17\00", ptr %7916, align 1
  %7917 = call ptr @make_candy_text(ptr %7916)
  store ptr %7917, ptr @"Core:fixedDecimal:isNegative:17", align 8
  %7918 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7919 = getelementptr inbounds { ptr, ptr }, ptr %7918, i32 0, i32 0
  store ptr %3412, ptr %7919, align 8
  %7920 = getelementptr inbounds { ptr, ptr }, ptr %7918, i32 0, i32 1
  store ptr %3048, ptr %7920, align 8
  %7921 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isNegative, ptr %7918, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7921, ptr @fun_Core_fixedDecimal_isNegative, align 8
  %7922 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonNegative:2\00", ptr %7922, align 1
  %7923 = call ptr @make_candy_text(ptr %7922)
  store ptr %7923, ptr @"Core:fixedDecimal:isNonNegative:2", align 8
  %7924 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonNegative:4\00", ptr %7924, align 1
  %7925 = call ptr @make_candy_text(ptr %7924)
  store ptr %7925, ptr @"Core:fixedDecimal:isNonNegative:4", align 8
  %7926 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonNegative:7\00", ptr %7926, align 1
  %7927 = call ptr @make_candy_text(ptr %7926)
  store ptr %7927, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  %7928 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isNonNegative:15\00", ptr %7928, align 1
  %7929 = call ptr @make_candy_text(ptr %7928)
  store ptr %7929, ptr @"Core:fixedDecimal:isNonNegative:15", align 8
  %7930 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isNonNegative:16\00", ptr %7930, align 1
  %7931 = call ptr @make_candy_text(ptr %7930)
  store ptr %7931, ptr @"Core:fixedDecimal:isNonNegative:16", align 8
  %7932 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7933 = getelementptr inbounds { ptr }, ptr %7932, i32 0, i32 0
  store ptr %1628, ptr %7933, align 8
  %7934 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isNonNegative, ptr %7932, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7934, ptr @fun_Core_fixedDecimal_isNonNegative, align 8
  %7935 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:absolute:2\00", ptr %7935, align 1
  %7936 = call ptr @make_candy_text(ptr %7935)
  store ptr %7936, ptr @"Core:fixedDecimal:absolute:2", align 8
  %7937 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:absolute:4\00", ptr %7937, align 1
  %7938 = call ptr @make_candy_text(ptr %7937)
  store ptr %7938, ptr @"Core:fixedDecimal:absolute:4", align 8
  %7939 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:absolute:8\00", ptr %7939, align 1
  %7940 = call ptr @make_candy_text(ptr %7939)
  store ptr %7940, ptr @"Core:fixedDecimal:absolute:8", align 8
  %7941 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:absolute:9:2\00", ptr %7941, align 1
  %7942 = call ptr @make_candy_text(ptr %7941)
  store ptr %7942, ptr @"Core:fixedDecimal:absolute:9:2", align 8
  %7943 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:absolute:11\00", ptr %7943, align 1
  %7944 = call ptr @make_candy_text(ptr %7943)
  store ptr %7944, ptr @"Core:fixedDecimal:absolute:11", align 8
  %7945 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7946 = getelementptr inbounds { ptr }, ptr %7945, i32 0, i32 0
  store ptr %1868, ptr %7946, align 8
  %7947 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute, ptr %7945, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7947, ptr @fun_Core_fixedDecimal_absolute, align 8
  %7948 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:2\00", ptr %7948, align 1
  %7949 = call ptr @make_candy_text(ptr %7948)
  store ptr %7949, ptr @"Core:fixedDecimal:approxEquals:2", align 8
  %7950 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:4\00", ptr %7950, align 1
  %7951 = call ptr @make_candy_text(ptr %7950)
  store ptr %7951, ptr @"Core:fixedDecimal:approxEquals:4", align 8
  %7952 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:7\00", ptr %7952, align 1
  %7953 = call ptr @make_candy_text(ptr %7952)
  store ptr %7953, ptr @"Core:fixedDecimal:approxEquals:7", align 8
  %7954 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:9\00", ptr %7954, align 1
  %7955 = call ptr @make_candy_text(ptr %7954)
  store ptr %7955, ptr @"Core:fixedDecimal:approxEquals:9", align 8
  %7956 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:12\00", ptr %7956, align 1
  %7957 = call ptr @make_candy_text(ptr %7956)
  store ptr %7957, ptr @"Core:fixedDecimal:approxEquals:12", align 8
  %7958 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is delta` was not satisfied\00", ptr %7958, align 1
  %7959 = call ptr @make_candy_text(ptr %7958)
  store ptr %7959, ptr @"text_`is delta` was not satisfied", align 8
  %7960 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:14\00", ptr %7960, align 1
  %7961 = call ptr @make_candy_text(ptr %7960)
  store ptr %7961, ptr @"Core:fixedDecimal:approxEquals:14", align 8
  %7962 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:17\00", ptr %7962, align 1
  %7963 = call ptr @make_candy_text(ptr %7962)
  store ptr %7963, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  %7964 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative delta` was not satisfied\00", ptr %7964, align 1
  %7965 = call ptr @make_candy_text(ptr %7964)
  store ptr %7965, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  %7966 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:19\00", ptr %7966, align 1
  %7967 = call ptr @make_candy_text(ptr %7966)
  store ptr %7967, ptr @"Core:fixedDecimal:approxEquals:19", align 8
  %7968 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:23\00", ptr %7968, align 1
  %7969 = call ptr @make_candy_text(ptr %7968)
  store ptr %7969, ptr @"Core:fixedDecimal:approxEquals:23", align 8
  %7970 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:25\00", ptr %7970, align 1
  %7971 = call ptr @make_candy_text(ptr %7970)
  store ptr %7971, ptr @"Core:fixedDecimal:approxEquals:25", align 8
  %7972 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:28\00", ptr %7972, align 1
  %7973 = call ptr @make_candy_text(ptr %7972)
  store ptr %7973, ptr @"Core:fixedDecimal:approxEquals:28", align 8
  %7974 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7975 = getelementptr inbounds { ptr }, ptr %7974, i32 0, i32 0
  store ptr %1628, ptr %7975, align 8
  %7976 = call ptr @make_candy_function(ptr @Core_fixedDecimal_approxEquals, ptr %7974, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7976, ptr @fun_Core_fixedDecimal_approxEquals, align 8
  %7977 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:min:2\00", ptr %7977, align 1
  %7978 = call ptr @make_candy_text(ptr %7977)
  store ptr %7978, ptr @"Core:fixedDecimal:min:2", align 8
  %7979 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:min:4\00", ptr %7979, align 1
  %7980 = call ptr @make_candy_text(ptr %7979)
  store ptr %7980, ptr @"Core:fixedDecimal:min:4", align 8
  %7981 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:min:7\00", ptr %7981, align 1
  %7982 = call ptr @make_candy_text(ptr %7981)
  store ptr %7982, ptr @"Core:fixedDecimal:min:7", align 8
  %7983 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:min:9\00", ptr %7983, align 1
  %7984 = call ptr @make_candy_text(ptr %7983)
  store ptr %7984, ptr @"Core:fixedDecimal:min:9", align 8
  %7985 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:min:14\00", ptr %7985, align 1
  %7986 = call ptr @make_candy_text(ptr %7985)
  store ptr %7986, ptr @"Core:fixedDecimal:min:14", align 8
  %7987 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:min:17\00", ptr %7987, align 1
  %7988 = call ptr @make_candy_text(ptr %7987)
  store ptr %7988, ptr @"Core:fixedDecimal:min:17", align 8
  %7989 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7990 = getelementptr inbounds { ptr }, ptr %7989, i32 0, i32 0
  store ptr %1868, ptr %7990, align 8
  %7991 = call ptr @make_candy_function(ptr @Core_fixedDecimal_min, ptr %7989, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7991, ptr @fun_Core_fixedDecimal_min, align 8
  %7992 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:max:2\00", ptr %7992, align 1
  %7993 = call ptr @make_candy_text(ptr %7992)
  store ptr %7993, ptr @"Core:fixedDecimal:max:2", align 8
  %7994 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:max:4\00", ptr %7994, align 1
  %7995 = call ptr @make_candy_text(ptr %7994)
  store ptr %7995, ptr @"Core:fixedDecimal:max:4", align 8
  %7996 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:max:7\00", ptr %7996, align 1
  %7997 = call ptr @make_candy_text(ptr %7996)
  store ptr %7997, ptr @"Core:fixedDecimal:max:7", align 8
  %7998 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:max:9\00", ptr %7998, align 1
  %7999 = call ptr @make_candy_text(ptr %7998)
  store ptr %7999, ptr @"Core:fixedDecimal:max:9", align 8
  %8000 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:max:14\00", ptr %8000, align 1
  %8001 = call ptr @make_candy_text(ptr %8000)
  store ptr %8001, ptr @"Core:fixedDecimal:max:14", align 8
  %8002 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:max:17\00", ptr %8002, align 1
  %8003 = call ptr @make_candy_text(ptr %8002)
  store ptr %8003, ptr @"Core:fixedDecimal:max:17", align 8
  %8004 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8005 = getelementptr inbounds { ptr }, ptr %8004, i32 0, i32 0
  store ptr %1868, ptr %8005, align 8
  %8006 = call ptr @make_candy_function(ptr @Core_fixedDecimal_max, ptr %8004, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8006, ptr @fun_Core_fixedDecimal_max, align 8
  %8007 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:coerceAtLeast:2\00", ptr %8007, align 1
  %8008 = call ptr @make_candy_text(ptr %8007)
  store ptr %8008, ptr @"Core:fixedDecimal:coerceAtLeast:2", align 8
  %8009 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:coerceAtLeast:4\00", ptr %8009, align 1
  %8010 = call ptr @make_candy_text(ptr %8009)
  store ptr %8010, ptr @"Core:fixedDecimal:coerceAtLeast:4", align 8
  %8011 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:coerceAtLeast:7\00", ptr %8011, align 1
  %8012 = call ptr @make_candy_text(ptr %8011)
  store ptr %8012, ptr @"Core:fixedDecimal:coerceAtLeast:7", align 8
  %8013 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:coerceAtLeast:9\00", ptr %8013, align 1
  %8014 = call ptr @make_candy_text(ptr %8013)
  store ptr %8014, ptr @"Core:fixedDecimal:coerceAtLeast:9", align 8
  %8015 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:coerceAtLeast:13\00", ptr %8015, align 1
  %8016 = call ptr @make_candy_text(ptr %8015)
  store ptr %8016, ptr @"Core:fixedDecimal:coerceAtLeast:13", align 8
  %8017 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8018 = call ptr @make_candy_function(ptr @Core_fixedDecimal_coerceAtLeast, ptr %8017, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8018, ptr @fun_Core_fixedDecimal_coerceAtLeast, align 8
  %8019 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:coerceAtMost:2\00", ptr %8019, align 1
  %8020 = call ptr @make_candy_text(ptr %8019)
  store ptr %8020, ptr @"Core:fixedDecimal:coerceAtMost:2", align 8
  %8021 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:coerceAtMost:4\00", ptr %8021, align 1
  %8022 = call ptr @make_candy_text(ptr %8021)
  store ptr %8022, ptr @"Core:fixedDecimal:coerceAtMost:4", align 8
  %8023 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:coerceAtMost:7\00", ptr %8023, align 1
  %8024 = call ptr @make_candy_text(ptr %8023)
  store ptr %8024, ptr @"Core:fixedDecimal:coerceAtMost:7", align 8
  %8025 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:coerceAtMost:9\00", ptr %8025, align 1
  %8026 = call ptr @make_candy_text(ptr %8025)
  store ptr %8026, ptr @"Core:fixedDecimal:coerceAtMost:9", align 8
  %8027 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:coerceAtMost:13\00", ptr %8027, align 1
  %8028 = call ptr @make_candy_text(ptr %8027)
  store ptr %8028, ptr @"Core:fixedDecimal:coerceAtMost:13", align 8
  %8029 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8030 = call ptr @make_candy_function(ptr @Core_fixedDecimal_coerceAtMost, ptr %8029, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8030, ptr @fun_Core_fixedDecimal_coerceAtMost, align 8
  %8031 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:coerceIn:2\00", ptr %8031, align 1
  %8032 = call ptr @make_candy_text(ptr %8031)
  store ptr %8032, ptr @"Core:fixedDecimal:coerceIn:2", align 8
  %8033 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:coerceIn:4\00", ptr %8033, align 1
  %8034 = call ptr @make_candy_text(ptr %8033)
  store ptr %8034, ptr @"Core:fixedDecimal:coerceIn:4", align 8
  %8035 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:coerceIn:7\00", ptr %8035, align 1
  %8036 = call ptr @make_candy_text(ptr %8035)
  store ptr %8036, ptr @"Core:fixedDecimal:coerceIn:7", align 8
  %8037 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:coerceIn:9\00", ptr %8037, align 1
  %8038 = call ptr @make_candy_text(ptr %8037)
  store ptr %8038, ptr @"Core:fixedDecimal:coerceIn:9", align 8
  %8039 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:coerceIn:12\00", ptr %8039, align 1
  %8040 = call ptr @make_candy_text(ptr %8039)
  store ptr %8040, ptr @"Core:fixedDecimal:coerceIn:12", align 8
  %8041 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:coerceIn:14\00", ptr %8041, align 1
  %8042 = call ptr @make_candy_text(ptr %8041)
  store ptr %8042, ptr @"Core:fixedDecimal:coerceIn:14", align 8
  %8043 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:coerceIn:18\00", ptr %8043, align 1
  %8044 = call ptr @make_candy_text(ptr %8043)
  store ptr %8044, ptr @"Core:fixedDecimal:coerceIn:18", align 8
  %8045 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:coerceIn:20\00", ptr %8045, align 1
  %8046 = call ptr @make_candy_text(ptr %8045)
  store ptr %8046, ptr @"Core:fixedDecimal:coerceIn:20", align 8
  %8047 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:coerceIn:24\00", ptr %8047, align 1
  %8048 = call ptr @make_candy_text(ptr %8047)
  store ptr %8048, ptr @"Core:fixedDecimal:coerceIn:24", align 8
  %8049 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:coerceIn:27\00", ptr %8049, align 1
  %8050 = call ptr @make_candy_text(ptr %8049)
  store ptr %8050, ptr @"Core:fixedDecimal:coerceIn:27", align 8
  %8051 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8052 = call ptr @make_candy_function(ptr @Core_fixedDecimal_coerceIn, ptr %8051, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8052, ptr @fun_Core_fixedDecimal_coerceIn, align 8
  %8053 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:2\00", ptr %8053, align 1
  %8054 = call ptr @make_candy_text(ptr %8053)
  store ptr %8054, ptr @"Core:fixedDecimal:toText:2", align 8
  %8055 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:4\00", ptr %8055, align 1
  %8056 = call ptr @make_candy_text(ptr %8055)
  store ptr %8056, ptr @"Core:fixedDecimal:toText:4", align 8
  %8057 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:7\00", ptr %8057, align 1
  %8058 = call ptr @make_candy_text(ptr %8057)
  store ptr %8058, ptr @"Core:fixedDecimal:toText:7", align 8
  %8059 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:2\00", ptr %8059, align 1
  %8060 = call ptr @make_candy_text(ptr %8059)
  store ptr %8060, ptr @"Core:fixedDecimal:toText:10:2", align 8
  %8061 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:4\00", ptr %8061, align 1
  %8062 = call ptr @make_candy_text(ptr %8061)
  store ptr %8062, ptr @"Core:fixedDecimal:toText:10:4", align 8
  %8063 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:8\00", ptr %8063, align 1
  %8064 = call ptr @make_candy_text(ptr %8063)
  store ptr %8064, ptr @"Core:fixedDecimal:toText:10:8", align 8
  %8065 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:16\00", ptr %8065, align 1
  %8066 = call ptr @make_candy_text(ptr %8065)
  store ptr %8066, ptr @"Core:fixedDecimal:toText:10:16", align 8
  %8067 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:18\00", ptr %8067, align 1
  %8068 = call ptr @make_candy_text(ptr %8067)
  store ptr %8068, ptr @"Core:fixedDecimal:toText:10:18", align 8
  %8069 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:28\00", ptr %8069, align 1
  %8070 = call ptr @make_candy_text(ptr %8069)
  store ptr %8070, ptr @"Core:fixedDecimal:toText:10:28", align 8
  %8071 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:30\00", ptr %8071, align 1
  %8072 = call ptr @make_candy_text(ptr %8071)
  store ptr %8072, ptr @"Core:fixedDecimal:toText:10:30", align 8
  %8073 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:toText:10:31:8\00", ptr %8073, align 1
  %8074 = call ptr @make_candy_text(ptr %8073)
  store ptr %8074, ptr @"Core:fixedDecimal:toText:10:31:8", align 8
  %8075 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:31:10\00", ptr %8075, align 1
  %8076 = call ptr @make_candy_text(ptr %8075)
  store ptr %8076, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  %8077 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:31:20\00", ptr %8077, align 1
  %8078 = call ptr @make_candy_text(ptr %8077)
  store ptr %8078, ptr @"Core:fixedDecimal:toText:10:31:20", align 8
  %8079 = alloca i8, i64 2, align 1
  store [2 x i8] c"1\00", ptr %8079, align 1
  %8080 = call ptr @make_candy_text(ptr %8079)
  store ptr %8080, ptr @text_1, align 8
  %8081 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:31:28\00", ptr %8081, align 1
  %8082 = call ptr @make_candy_text(ptr %8081)
  store ptr %8082, ptr @"Core:fixedDecimal:toText:10:31:28", align 8
  %8083 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:toText:10:32:8\00", ptr %8083, align 1
  %8084 = call ptr @make_candy_text(ptr %8083)
  store ptr %8084, ptr @"Core:fixedDecimal:toText:10:32:8", align 8
  %8085 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:32:10\00", ptr %8085, align 1
  %8086 = call ptr @make_candy_text(ptr %8085)
  store ptr %8086, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  %8087 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:32:20\00", ptr %8087, align 1
  %8088 = call ptr @make_candy_text(ptr %8087)
  store ptr %8088, ptr @"Core:fixedDecimal:toText:10:32:20", align 8
  %8089 = alloca i8, i64 3, align 1
  store [3 x i8] c"-1\00", ptr %8089, align 1
  %8090 = call ptr @make_candy_text(ptr %8089)
  store ptr %8090, ptr @text_-1, align 8
  %8091 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:32:28\00", ptr %8091, align 1
  %8092 = call ptr @make_candy_text(ptr %8091)
  store ptr %8092, ptr @"Core:fixedDecimal:toText:10:32:28", align 8
  %8093 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:33\00", ptr %8093, align 1
  %8094 = call ptr @make_candy_text(ptr %8093)
  store ptr %8094, ptr @"Core:fixedDecimal:toText:10:33", align 8
  %8095 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:11\00", ptr %8095, align 1
  %8096 = call ptr @make_candy_text(ptr %8095)
  store ptr %8096, ptr @"Core:fixedDecimal:toText:11", align 8
  %8097 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:20\00", ptr %8097, align 1
  %8098 = call ptr @make_candy_text(ptr %8097)
  store ptr %8098, ptr @"Core:fixedDecimal:toText:20", align 8
  %8099 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:21\00", ptr %8099, align 1
  %8100 = call ptr @make_candy_text(ptr %8099)
  store ptr %8100, ptr @"Core:fixedDecimal:toText:21", align 8
  %8101 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:23:0\00", ptr %8101, align 1
  %8102 = call ptr @make_candy_text(ptr %8101)
  store ptr %8102, ptr @"Core:fixedDecimal:toText:23:0", align 8
  %8103 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:24\00", ptr %8103, align 1
  %8104 = call ptr @make_candy_text(ptr %8103)
  store ptr %8104, ptr @"Core:fixedDecimal:toText:24", align 8
  %8105 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:27\00", ptr %8105, align 1
  %8106 = call ptr @make_candy_text(ptr %8105)
  store ptr %8106, ptr @"Core:fixedDecimal:toText:27", align 8
  %8107 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:28\00", ptr %8107, align 1
  %8108 = call ptr @make_candy_text(ptr %8107)
  store ptr %8108, ptr @"Core:fixedDecimal:toText:28", align 8
  %8109 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:30:0\00", ptr %8109, align 1
  %8110 = call ptr @make_candy_text(ptr %8109)
  store ptr %8110, ptr @"Core:fixedDecimal:toText:30:0", align 8
  %8111 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:31\00", ptr %8111, align 1
  %8112 = call ptr @make_candy_text(ptr %8111)
  store ptr %8112, ptr @"Core:fixedDecimal:toText:31", align 8
  %8113 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:32\00", ptr %8113, align 1
  %8114 = call ptr @make_candy_text(ptr %8113)
  store ptr %8114, ptr @"Core:fixedDecimal:toText:32", align 8
  %8115 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:33\00", ptr %8115, align 1
  %8116 = call ptr @make_candy_text(ptr %8115)
  store ptr %8116, ptr @"Core:fixedDecimal:toText:33", align 8
  %8117 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8118 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %8117, i32 0, i32 0
  store ptr %7339, ptr %8118, align 8
  %8119 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %8117, i32 0, i32 1
  store ptr %3048, ptr %8119, align 8
  %8120 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %8117, i32 0, i32 2
  store ptr %997, ptr %8120, align 8
  %8121 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %8117, i32 0, i32 3
  store ptr %1868, ptr %8121, align 8
  %8122 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %8117, i32 0, i32 4
  store ptr %3412, ptr %8122, align 8
  %8123 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText, ptr %8117, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8123, ptr @fun_Core_fixedDecimal_toText, align 8
  %8124 = alloca i8, i64 14, align 1
  store [14 x i8] c"FromIntScaled\00", ptr %8124, align 1
  %8125 = call ptr @make_candy_tag(ptr %8124, ptr null)
  store ptr %8125, ptr @tag_FromIntScaled, align 8
  %8126 = alloca i8, i64 7, align 1
  store [7 x i8] c"ToText\00", ptr %8126, align 1
  %8127 = call ptr @make_candy_tag(ptr %8126, ptr null)
  store ptr %8127, ptr @tag_ToText, align 8
  %8128 = alloca i8, i64 8, align 1
  store [8 x i8] c"Rescale\00", ptr %8128, align 1
  %8129 = call ptr @make_candy_tag(ptr %8128, ptr null)
  store ptr %8129, ptr @tag_Rescale, align 8
  %8130 = alloca i8, i64 24, align 1
  store [24 x i8] c"DivideTruncatingAtScale\00", ptr %8130, align 1
  %8131 = call ptr @make_candy_tag(ptr %8130, ptr null)
  store ptr %8131, ptr @tag_DivideTruncatingAtScale, align 8
  %8132 = alloca i8, i64 11, align 1
  store [11 x i8] c"FloorToInt\00", ptr %8132, align 1
  %8133 = call ptr @make_candy_tag(ptr %8132, ptr null)
  store ptr %8133, ptr @tag_FloorToInt, align 8
  %8134 = alloca i8, i64 13, align 1
  store [13 x i8] c"ApproxEquals\00", ptr %8134, align 1
  %8135 = call ptr @make_candy_tag(ptr %8134, ptr null)
  store ptr %8135, ptr @tag_ApproxEquals, align 8
  %8136 = alloca i8, i64 8, align 1
  store [8 x i8] c"FromInt\00", ptr %8136, align 1
  %8137 = call ptr @make_candy_tag(ptr %8136, ptr null)
  store ptr %8137, ptr @tag_FromInt, align 8
  %8138 = alloca ptr, i64 31, align 8
  %8139 = alloca ptr, i64 31, align 8
  %8140 = load ptr, ptr @tag_IsGreaterThanOrEqualTo, align 8
  %8141 = load ptr, ptr @fun_Core_fixedDecimal_isGreaterThanOrEqualTo, align 8
  %8142 = getelementptr ptr, ptr %8138, i64 0
  store ptr %8140, ptr %8142, align 8
  %8143 = getelementptr ptr, ptr %8139, i64 0
  store ptr %8141, ptr %8143, align 8
  %8144 = load ptr, ptr @tag_FloorToInt, align 8
  %8145 = load ptr, ptr @fun_Core_fixedDecimal_floorToInt, align 8
  %8146 = getelementptr ptr, ptr %8138, i64 1
  store ptr %8144, ptr %8146, align 8
  %8147 = getelementptr ptr, ptr %8139, i64 1
  store ptr %8145, ptr %8147, align 8
  %8148 = load ptr, ptr @tag_FromInt, align 8
  %8149 = load ptr, ptr @fun_Core_fixedDecimal_fromInt, align 8
  %8150 = getelementptr ptr, ptr %8138, i64 2
  store ptr %8148, ptr %8150, align 8
  %8151 = getelementptr ptr, ptr %8139, i64 2
  store ptr %8149, ptr %8151, align 8
  %8152 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %8153 = load ptr, ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo, align 8
  %8154 = getelementptr ptr, ptr %8138, i64 3
  store ptr %8152, ptr %8154, align 8
  %8155 = getelementptr ptr, ptr %8139, i64 3
  store ptr %8153, ptr %8155, align 8
  %8156 = load ptr, ptr @tag_IsNegative, align 8
  %8157 = load ptr, ptr @fun_Core_fixedDecimal_isNegative, align 8
  %8158 = getelementptr ptr, ptr %8138, i64 4
  store ptr %8156, ptr %8158, align 8
  %8159 = getelementptr ptr, ptr %8139, i64 4
  store ptr %8157, ptr %8159, align 8
  %8160 = load ptr, ptr @tag_CoerceIn, align 8
  %8161 = load ptr, ptr @fun_Core_fixedDecimal_coerceIn, align 8
  %8162 = getelementptr ptr, ptr %8138, i64 5
  store ptr %8160, ptr %8162, align 8
  %8163 = getelementptr ptr, ptr %8139, i64 5
  store ptr %8161, ptr %8163, align 8
  %8164 = load ptr, ptr @tag_IsNonNegative, align 8
  %8165 = load ptr, ptr @fun_Core_fixedDecimal_isNonNegative, align 8
  %8166 = getelementptr ptr, ptr %8138, i64 6
  store ptr %8164, ptr %8166, align 8
  %8167 = getelementptr ptr, ptr %8139, i64 6
  store ptr %8165, ptr %8167, align 8
  %8168 = load ptr, ptr @tag_Multiply, align 8
  %8169 = load ptr, ptr @fun_Core_fixedDecimal_multiply, align 8
  %8170 = getelementptr ptr, ptr %8138, i64 7
  store ptr %8168, ptr %8170, align 8
  %8171 = getelementptr ptr, ptr %8139, i64 7
  store ptr %8169, ptr %8171, align 8
  %8172 = load ptr, ptr @tag_IsLessThan, align 8
  %8173 = load ptr, ptr @fun_Core_fixedDecimal_isLessThan, align 8
  %8174 = getelementptr ptr, ptr %8138, i64 8
  store ptr %8172, ptr %8174, align 8
  %8175 = getelementptr ptr, ptr %8139, i64 8
  store ptr %8173, ptr %8175, align 8
  %8176 = load ptr, ptr @tag_Is, align 8
  %8177 = load ptr, ptr @fun_Core_fixedDecimal_is, align 8
  %8178 = getelementptr ptr, ptr %8138, i64 9
  store ptr %8176, ptr %8178, align 8
  %8179 = getelementptr ptr, ptr %8139, i64 9
  store ptr %8177, ptr %8179, align 8
  %8180 = load ptr, ptr @tag_Rescale, align 8
  %8181 = load ptr, ptr @fun_Core_fixedDecimal_rescale, align 8
  %8182 = getelementptr ptr, ptr %8138, i64 10
  store ptr %8180, ptr %8182, align 8
  %8183 = getelementptr ptr, ptr %8139, i64 10
  store ptr %8181, ptr %8183, align 8
  %8184 = load ptr, ptr @tag_CoerceAtLeast, align 8
  %8185 = load ptr, ptr @fun_Core_fixedDecimal_coerceAtLeast, align 8
  %8186 = getelementptr ptr, ptr %8138, i64 11
  store ptr %8184, ptr %8186, align 8
  %8187 = getelementptr ptr, ptr %8139, i64 11
  store ptr %8185, ptr %8187, align 8
  %8188 = load ptr, ptr @tag_Absolute, align 8
  %8189 = load ptr, ptr @fun_Core_fixedDecimal_absolute, align 8
  %8190 = getelementptr ptr, ptr %8138, i64 12
  store ptr %8188, ptr %8190, align 8
  %8191 = getelementptr ptr, ptr %8139, i64 12
  store ptr %8189, ptr %8191, align 8
  %8192 = load ptr, ptr @tag_CoerceAtMost, align 8
  %8193 = load ptr, ptr @fun_Core_fixedDecimal_coerceAtMost, align 8
  %8194 = getelementptr ptr, ptr %8138, i64 13
  store ptr %8192, ptr %8194, align 8
  %8195 = getelementptr ptr, ptr %8139, i64 13
  store ptr %8193, ptr %8195, align 8
  %8196 = load ptr, ptr @tag_Scale, align 8
  %8197 = load ptr, ptr @fun_Core_fixedDecimal_scale, align 8
  %8198 = getelementptr ptr, ptr %8138, i64 14
  store ptr %8196, ptr %8198, align 8
  %8199 = getelementptr ptr, ptr %8139, i64 14
  store ptr %8197, ptr %8199, align 8
  %8200 = load ptr, ptr @tag_IsGreaterThan, align 8
  %8201 = load ptr, ptr @fun_Core_fixedDecimal_isGreaterThan, align 8
  %8202 = getelementptr ptr, ptr %8138, i64 15
  store ptr %8200, ptr %8202, align 8
  %8203 = getelementptr ptr, ptr %8139, i64 15
  store ptr %8201, ptr %8203, align 8
  %8204 = load ptr, ptr @tag_DivideTruncating, align 8
  %8205 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating, align 8
  %8206 = getelementptr ptr, ptr %8138, i64 16
  store ptr %8204, ptr %8206, align 8
  %8207 = getelementptr ptr, ptr %8139, i64 16
  store ptr %8205, ptr %8207, align 8
  %8208 = load ptr, ptr @tag_IsNonPositive, align 8
  %8209 = load ptr, ptr @fun_Core_fixedDecimal_isNonPositive, align 8
  %8210 = getelementptr ptr, ptr %8138, i64 17
  store ptr %8208, ptr %8210, align 8
  %8211 = getelementptr ptr, ptr %8139, i64 17
  store ptr %8209, ptr %8211, align 8
  %8212 = load ptr, ptr @tag_Add, align 8
  %8213 = load ptr, ptr @fun_Core_fixedDecimal_add, align 8
  %8214 = getelementptr ptr, ptr %8138, i64 18
  store ptr %8212, ptr %8214, align 8
  %8215 = getelementptr ptr, ptr %8139, i64 18
  store ptr %8213, ptr %8215, align 8
  %8216 = load ptr, ptr @tag_Max, align 8
  %8217 = load ptr, ptr @fun_Core_fixedDecimal_max, align 8
  %8218 = getelementptr ptr, ptr %8138, i64 19
  store ptr %8216, ptr %8218, align 8
  %8219 = getelementptr ptr, ptr %8139, i64 19
  store ptr %8217, ptr %8219, align 8
  %8220 = load ptr, ptr @tag_ApproxEquals, align 8
  %8221 = load ptr, ptr @fun_Core_fixedDecimal_approxEquals, align 8
  %8222 = getelementptr ptr, ptr %8138, i64 20
  store ptr %8220, ptr %8222, align 8
  %8223 = getelementptr ptr, ptr %8139, i64 20
  store ptr %8221, ptr %8223, align 8
  %8224 = load ptr, ptr @tag_Min, align 8
  %8225 = load ptr, ptr @fun_Core_fixedDecimal_min, align 8
  %8226 = getelementptr ptr, ptr %8138, i64 21
  store ptr %8224, ptr %8226, align 8
  %8227 = getelementptr ptr, ptr %8139, i64 21
  store ptr %8225, ptr %8227, align 8
  %8228 = load ptr, ptr @tag_CompareTo, align 8
  %8229 = load ptr, ptr @fun_Core_fixedDecimal_compareTo, align 8
  %8230 = getelementptr ptr, ptr %8138, i64 22
  store ptr %8228, ptr %8230, align 8
  %8231 = getelementptr ptr, ptr %8139, i64 22
  store ptr %8229, ptr %8231, align 8
  %8232 = load ptr, ptr @tag_Subtract, align 8
  %8233 = load ptr, ptr @fun_Core_fixedDecimal_subtract, align 8
  %8234 = getelementptr ptr, ptr %8138, i64 23
  store ptr %8232, ptr %8234, align 8
  %8235 = getelementptr ptr, ptr %8139, i64 23
  store ptr %8233, ptr %8235, align 8
  %8236 = load ptr, ptr @tag_IsPositive, align 8
  %8237 = load ptr, ptr @fun_Core_fixedDecimal_isPositive, align 8
  %8238 = getelementptr ptr, ptr %8138, i64 24
  store ptr %8236, ptr %8238, align 8
  %8239 = getelementptr ptr, ptr %8139, i64 24
  store ptr %8237, ptr %8239, align 8
  %8240 = load ptr, ptr @tag_ToText, align 8
  %8241 = load ptr, ptr @fun_Core_fixedDecimal_toText, align 8
  %8242 = getelementptr ptr, ptr %8138, i64 25
  store ptr %8240, ptr %8242, align 8
  %8243 = getelementptr ptr, ptr %8139, i64 25
  store ptr %8241, ptr %8243, align 8
  %8244 = load ptr, ptr @tag_FromIntScaled, align 8
  %8245 = load ptr, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  %8246 = getelementptr ptr, ptr %8138, i64 26
  store ptr %8244, ptr %8246, align 8
  %8247 = getelementptr ptr, ptr %8139, i64 26
  store ptr %8245, ptr %8247, align 8
  %8248 = load ptr, ptr @tag_MinorUnits, align 8
  %8249 = load ptr, ptr @fun_Core_fixedDecimal_minorUnits, align 8
  %8250 = getelementptr ptr, ptr %8138, i64 27
  store ptr %8248, ptr %8250, align 8
  %8251 = getelementptr ptr, ptr %8139, i64 27
  store ptr %8249, ptr %8251, align 8
  %8252 = load ptr, ptr @tag_Negate, align 8
  %8253 = load ptr, ptr @fun_Core_fixedDecimal_negate, align 8
  %8254 = getelementptr ptr, ptr %8138, i64 28
  store ptr %8252, ptr %8254, align 8
  %8255 = getelementptr ptr, ptr %8139, i64 28
  store ptr %8253, ptr %8255, align 8
  %8256 = load ptr, ptr @tag_DivideTruncatingAtScale, align 8
  %8257 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale, align 8
  %8258 = getelementptr ptr, ptr %8138, i64 29
  store ptr %8256, ptr %8258, align 8
  %8259 = getelementptr ptr, ptr %8139, i64 29
  store ptr %8257, ptr %8259, align 8
  %8260 = getelementptr ptr, ptr %8138, i64 30
  store ptr null, ptr %8260, align 8
  %8261 = getelementptr ptr, ptr %8139, i64 30
  store ptr null, ptr %8261, align 8
  %8262 = call ptr @make_candy_struct(ptr %8138, ptr %8139)
  %8263 = load ptr, ptr @tag_Equals, align 8
  %8264 = call ptr @Builtins__structGet(ptr %997, ptr %8263)
  %8265 = load ptr, ptr @tag_Equals, align 8
  %8266 = call ptr @Builtins__structGet(ptr %997, ptr %8265)
  %8267 = load ptr, ptr @tag_TypeOf, align 8
  %8268 = call ptr @Builtins__structGet(ptr %997, ptr %8267)
  %8269 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8270 = call ptr @Builtins__structGet(ptr %997, ptr %8269)
  %8271 = load ptr, ptr @tag_Equals, align 8
  %8272 = call ptr @Builtins__structGet(ptr %997, ptr %8271)
  %8273 = load ptr, ptr @tag_Equals, align 8
  %8274 = call ptr @Builtins__structGet(ptr %997, ptr %8273)
  %8275 = load ptr, ptr @tag_Equals, align 8
  %8276 = call ptr @Builtins__structGet(ptr %997, ptr %8275)
  %8277 = load ptr, ptr @tag_TypeOf, align 8
  %8278 = call ptr @Builtins__structGet(ptr %997, ptr %8277)
  %8279 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8280 = getelementptr inbounds { ptr, ptr }, ptr %8279, i32 0, i32 0
  store ptr %8278, ptr %8280, align 8
  %8281 = getelementptr inbounds { ptr, ptr }, ptr %8279, i32 0, i32 1
  store ptr %8276, ptr %8281, align 8
  %8282 = call ptr @make_candy_function(ptr @Core_type_is.1902, ptr %8279, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8282, ptr @fun_Core_type_is.1903, align 8
  %8283 = alloca ptr, i64 3, align 8
  %8284 = alloca ptr, i64 3, align 8
  %8285 = load ptr, ptr @tag_TypeOf, align 8
  %8286 = getelementptr ptr, ptr %8283, i64 0
  store ptr %8285, ptr %8286, align 8
  %8287 = getelementptr ptr, ptr %8284, i64 0
  store ptr %8278, ptr %8287, align 8
  %8288 = load ptr, ptr @tag_Is, align 8
  %8289 = load ptr, ptr @fun_Core_type_is.1903, align 8
  %8290 = getelementptr ptr, ptr %8283, i64 1
  store ptr %8288, ptr %8290, align 8
  %8291 = getelementptr ptr, ptr %8284, i64 1
  store ptr %8289, ptr %8291, align 8
  %8292 = getelementptr ptr, ptr %8283, i64 2
  store ptr null, ptr %8292, align 8
  %8293 = getelementptr ptr, ptr %8284, i64 2
  store ptr null, ptr %8293, align 8
  %8294 = call ptr @make_candy_struct(ptr %8283, ptr %8284)
  %8295 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8296 = getelementptr inbounds { ptr }, ptr %8295, i32 0, i32 0
  store ptr %8294, ptr %8296, align 8
  %8297 = call ptr @make_candy_function(ptr @Core_function_is.1904, ptr %8295, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8297, ptr @fun_Core_function_is.1905, align 8
  %8298 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8299 = call ptr @Builtins__structGet(ptr %997, ptr %8298)
  %8300 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8301 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8300, i32 0, i32 0
  store ptr %997, ptr %8301, align 8
  %8302 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8300, i32 0, i32 1
  store ptr %8299, ptr %8302, align 8
  %8303 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8300, i32 0, i32 2
  store ptr %8294, ptr %8303, align 8
  %8304 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8300, i32 0, i32 3
  store ptr %8274, ptr %8304, align 8
  %8305 = call ptr @make_candy_function(ptr @Core_function_is0.1906, ptr %8300, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8305, ptr @fun_Core_function_is0.1907, align 8
  %8306 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8307 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8306, i32 0, i32 0
  store ptr %997, ptr %8307, align 8
  %8308 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8306, i32 0, i32 1
  store ptr %8299, ptr %8308, align 8
  %8309 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8306, i32 0, i32 2
  store ptr %8294, ptr %8309, align 8
  %8310 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8306, i32 0, i32 3
  store ptr %8274, ptr %8310, align 8
  %8311 = call ptr @make_candy_function(ptr @Core_function_is1.1910, ptr %8306, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8311, ptr @fun_Core_function_is1.1911, align 8
  %8312 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8313 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8312, i32 0, i32 0
  store ptr %997, ptr %8313, align 8
  %8314 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8312, i32 0, i32 1
  store ptr %8299, ptr %8314, align 8
  %8315 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8312, i32 0, i32 2
  store ptr %8294, ptr %8315, align 8
  %8316 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8312, i32 0, i32 3
  store ptr %8274, ptr %8316, align 8
  %8317 = call ptr @make_candy_function(ptr @Core_function_is2.1914, ptr %8312, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8317, ptr @fun_Core_function_is2.1915, align 8
  %8318 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8319 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8318, i32 0, i32 0
  store ptr %997, ptr %8319, align 8
  %8320 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8318, i32 0, i32 1
  store ptr %8299, ptr %8320, align 8
  %8321 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8318, i32 0, i32 2
  store ptr %8294, ptr %8321, align 8
  %8322 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8318, i32 0, i32 3
  store ptr %8274, ptr %8322, align 8
  %8323 = call ptr @make_candy_function(ptr @Core_function_is3.1918, ptr %8318, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8323, ptr @fun_Core_function_is3.1919, align 8
  %8324 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8325 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8324, i32 0, i32 0
  store ptr %997, ptr %8325, align 8
  %8326 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8324, i32 0, i32 1
  store ptr %8299, ptr %8326, align 8
  %8327 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8324, i32 0, i32 2
  store ptr %8294, ptr %8327, align 8
  %8328 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8324, i32 0, i32 3
  store ptr %8274, ptr %8328, align 8
  %8329 = call ptr @make_candy_function(ptr @Core_function_is4.1922, ptr %8324, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8329, ptr @fun_Core_function_is4.1923, align 8
  %8330 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8331 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8330, i32 0, i32 0
  store ptr %997, ptr %8331, align 8
  %8332 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8330, i32 0, i32 1
  store ptr %8299, ptr %8332, align 8
  %8333 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8330, i32 0, i32 2
  store ptr %8294, ptr %8333, align 8
  %8334 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8330, i32 0, i32 3
  store ptr %8274, ptr %8334, align 8
  %8335 = call ptr @make_candy_function(ptr @Core_function_is5.1926, ptr %8330, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8335, ptr @fun_Core_function_is5.1927, align 8
  %8336 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8337 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8336, i32 0, i32 0
  store ptr %997, ptr %8337, align 8
  %8338 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8336, i32 0, i32 1
  store ptr %8299, ptr %8338, align 8
  %8339 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8336, i32 0, i32 2
  store ptr %8294, ptr %8339, align 8
  %8340 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8336, i32 0, i32 3
  store ptr %8274, ptr %8340, align 8
  %8341 = call ptr @make_candy_function(ptr @Core_function_run.1930, ptr %8336, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8341, ptr @fun_Core_function_run.1931, align 8
  %8342 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8343 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8342, i32 0, i32 0
  store ptr %997, ptr %8343, align 8
  %8344 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8342, i32 0, i32 1
  store ptr %8299, ptr %8344, align 8
  %8345 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8342, i32 0, i32 2
  store ptr %8294, ptr %8345, align 8
  %8346 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8342, i32 0, i32 3
  store ptr %8274, ptr %8346, align 8
  %8347 = call ptr @make_candy_function(ptr @Core_function_doNotRun.1934, ptr %8342, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8347, ptr @fun_Core_function_doNotRun.1935, align 8
  %8348 = alloca ptr, i64 11, align 8
  %8349 = alloca ptr, i64 11, align 8
  %8350 = load ptr, ptr @tag_Is0, align 8
  %8351 = load ptr, ptr @fun_Core_function_is0.1907, align 8
  %8352 = getelementptr ptr, ptr %8348, i64 0
  store ptr %8350, ptr %8352, align 8
  %8353 = getelementptr ptr, ptr %8349, i64 0
  store ptr %8351, ptr %8353, align 8
  %8354 = load ptr, ptr @tag_DoNotRun, align 8
  %8355 = load ptr, ptr @fun_Core_function_doNotRun.1935, align 8
  %8356 = getelementptr ptr, ptr %8348, i64 1
  store ptr %8354, ptr %8356, align 8
  %8357 = getelementptr ptr, ptr %8349, i64 1
  store ptr %8355, ptr %8357, align 8
  %8358 = load ptr, ptr @tag_Is, align 8
  %8359 = load ptr, ptr @fun_Core_function_is.1905, align 8
  %8360 = getelementptr ptr, ptr %8348, i64 2
  store ptr %8358, ptr %8360, align 8
  %8361 = getelementptr ptr, ptr %8349, i64 2
  store ptr %8359, ptr %8361, align 8
  %8362 = load ptr, ptr @tag_Is3, align 8
  %8363 = load ptr, ptr @fun_Core_function_is3.1919, align 8
  %8364 = getelementptr ptr, ptr %8348, i64 3
  store ptr %8362, ptr %8364, align 8
  %8365 = getelementptr ptr, ptr %8349, i64 3
  store ptr %8363, ptr %8365, align 8
  %8366 = load ptr, ptr @tag_Is2, align 8
  %8367 = load ptr, ptr @fun_Core_function_is2.1915, align 8
  %8368 = getelementptr ptr, ptr %8348, i64 4
  store ptr %8366, ptr %8368, align 8
  %8369 = getelementptr ptr, ptr %8349, i64 4
  store ptr %8367, ptr %8369, align 8
  %8370 = load ptr, ptr @tag_Is4, align 8
  %8371 = load ptr, ptr @fun_Core_function_is4.1923, align 8
  %8372 = getelementptr ptr, ptr %8348, i64 5
  store ptr %8370, ptr %8372, align 8
  %8373 = getelementptr ptr, ptr %8349, i64 5
  store ptr %8371, ptr %8373, align 8
  %8374 = load ptr, ptr @tag_Is1, align 8
  %8375 = load ptr, ptr @fun_Core_function_is1.1911, align 8
  %8376 = getelementptr ptr, ptr %8348, i64 6
  store ptr %8374, ptr %8376, align 8
  %8377 = getelementptr ptr, ptr %8349, i64 6
  store ptr %8375, ptr %8377, align 8
  %8378 = load ptr, ptr @tag_Is5, align 8
  %8379 = load ptr, ptr @fun_Core_function_is5.1927, align 8
  %8380 = getelementptr ptr, ptr %8348, i64 7
  store ptr %8378, ptr %8380, align 8
  %8381 = getelementptr ptr, ptr %8349, i64 7
  store ptr %8379, ptr %8381, align 8
  %8382 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8383 = getelementptr ptr, ptr %8348, i64 8
  store ptr %8382, ptr %8383, align 8
  %8384 = getelementptr ptr, ptr %8349, i64 8
  store ptr %8299, ptr %8384, align 8
  %8385 = load ptr, ptr @tag_Run, align 8
  %8386 = load ptr, ptr @fun_Core_function_run.1931, align 8
  %8387 = getelementptr ptr, ptr %8348, i64 9
  store ptr %8385, ptr %8387, align 8
  %8388 = getelementptr ptr, ptr %8349, i64 9
  store ptr %8386, ptr %8388, align 8
  %8389 = getelementptr ptr, ptr %8348, i64 10
  store ptr null, ptr %8389, align 8
  %8390 = getelementptr ptr, ptr %8349, i64 10
  store ptr null, ptr %8390, align 8
  %8391 = call ptr @make_candy_struct(ptr %8348, ptr %8349)
  %8392 = load ptr, ptr @tag_Equals, align 8
  %8393 = call ptr @Builtins__structGet(ptr %997, ptr %8392)
  %8394 = load ptr, ptr @tag_TypeOf, align 8
  %8395 = call ptr @Builtins__structGet(ptr %997, ptr %8394)
  %8396 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8397 = getelementptr inbounds { ptr }, ptr %8396, i32 0, i32 0
  store ptr %8391, ptr %8397, align 8
  %8398 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.1938, ptr %8396, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8398, ptr @fun_Core_bool_lazyAnd.1939, align 8
  %8399 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8400 = call ptr @make_candy_function(ptr @Core_bool_and.1966, ptr %8399, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8400, ptr @fun_Core_bool_and.1967, align 8
  %8401 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8402 = getelementptr inbounds { ptr }, ptr %8401, i32 0, i32 0
  store ptr %8391, ptr %8402, align 8
  %8403 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.1970, ptr %8401, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8403, ptr @fun_Core_bool_lazyOr.1971, align 8
  %8404 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8405 = call ptr @make_candy_function(ptr @Core_bool_or.1998, ptr %8404, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8405, ptr @fun_Core_bool_or.1999, align 8
  %8406 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8407 = getelementptr inbounds { ptr }, ptr %8406, i32 0, i32 0
  store ptr %8272, ptr %8407, align 8
  %8408 = call ptr @make_candy_function(ptr @Core_bool_xor.2002, ptr %8406, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8408, ptr @fun_Core_bool_xor.2003, align 8
  %8409 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8410 = call ptr @make_candy_function(ptr @Core_bool_implies.2004, ptr %8409, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8410, ptr @fun_Core_bool_implies.2005, align 8
  %8411 = alloca ptr, i64 9, align 8
  %8412 = alloca ptr, i64 9, align 8
  %8413 = load ptr, ptr @tag_LazyOr, align 8
  %8414 = load ptr, ptr @fun_Core_bool_lazyOr.1971, align 8
  %8415 = getelementptr ptr, ptr %8411, i64 0
  store ptr %8413, ptr %8415, align 8
  %8416 = getelementptr ptr, ptr %8412, i64 0
  store ptr %8414, ptr %8416, align 8
  %8417 = load ptr, ptr @tag_Implies, align 8
  %8418 = load ptr, ptr @fun_Core_bool_implies.2005, align 8
  %8419 = getelementptr ptr, ptr %8411, i64 1
  store ptr %8417, ptr %8419, align 8
  %8420 = getelementptr ptr, ptr %8412, i64 1
  store ptr %8418, ptr %8420, align 8
  %8421 = load ptr, ptr @tag_Not, align 8
  %8422 = load ptr, ptr @fun_Core_bool_not, align 8
  %8423 = getelementptr ptr, ptr %8411, i64 2
  store ptr %8421, ptr %8423, align 8
  %8424 = getelementptr ptr, ptr %8412, i64 2
  store ptr %8422, ptr %8424, align 8
  %8425 = load ptr, ptr @tag_And, align 8
  %8426 = load ptr, ptr @fun_Core_bool_and.1967, align 8
  %8427 = getelementptr ptr, ptr %8411, i64 3
  store ptr %8425, ptr %8427, align 8
  %8428 = getelementptr ptr, ptr %8412, i64 3
  store ptr %8426, ptr %8428, align 8
  %8429 = load ptr, ptr @tag_LazyAnd, align 8
  %8430 = load ptr, ptr @fun_Core_bool_lazyAnd.1939, align 8
  %8431 = getelementptr ptr, ptr %8411, i64 4
  store ptr %8429, ptr %8431, align 8
  %8432 = getelementptr ptr, ptr %8412, i64 4
  store ptr %8430, ptr %8432, align 8
  %8433 = load ptr, ptr @tag_Is, align 8
  %8434 = load ptr, ptr @fun_Core_bool_is, align 8
  %8435 = getelementptr ptr, ptr %8411, i64 5
  store ptr %8433, ptr %8435, align 8
  %8436 = getelementptr ptr, ptr %8412, i64 5
  store ptr %8434, ptr %8436, align 8
  %8437 = load ptr, ptr @tag_Or, align 8
  %8438 = load ptr, ptr @fun_Core_bool_or.1999, align 8
  %8439 = getelementptr ptr, ptr %8411, i64 6
  store ptr %8437, ptr %8439, align 8
  %8440 = getelementptr ptr, ptr %8412, i64 6
  store ptr %8438, ptr %8440, align 8
  %8441 = load ptr, ptr @tag_Xor, align 8
  %8442 = load ptr, ptr @fun_Core_bool_xor.2003, align 8
  %8443 = getelementptr ptr, ptr %8411, i64 7
  store ptr %8441, ptr %8443, align 8
  %8444 = getelementptr ptr, ptr %8412, i64 7
  store ptr %8442, ptr %8444, align 8
  %8445 = getelementptr ptr, ptr %8411, i64 8
  store ptr null, ptr %8445, align 8
  %8446 = getelementptr ptr, ptr %8412, i64 8
  store ptr null, ptr %8446, align 8
  %8447 = call ptr @make_candy_struct(ptr %8411, ptr %8412)
  %8448 = load ptr, ptr @tag_Equals, align 8
  %8449 = call ptr @Builtins__structGet(ptr %997, ptr %8448)
  %8450 = load ptr, ptr @tag_Equals, align 8
  %8451 = call ptr @Builtins__structGet(ptr %997, ptr %8450)
  %8452 = load ptr, ptr @tag_Equals, align 8
  %8453 = call ptr @Builtins__structGet(ptr %997, ptr %8452)
  %8454 = load ptr, ptr @tag_TypeOf, align 8
  %8455 = call ptr @Builtins__structGet(ptr %997, ptr %8454)
  %8456 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8457 = getelementptr inbounds { ptr, ptr }, ptr %8456, i32 0, i32 0
  store ptr %8453, ptr %8457, align 8
  %8458 = getelementptr inbounds { ptr, ptr }, ptr %8456, i32 0, i32 1
  store ptr %8455, ptr %8458, align 8
  %8459 = call ptr @make_candy_function(ptr @Core_type_is.2008, ptr %8456, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8459, ptr @fun_Core_type_is.2009, align 8
  %8460 = alloca ptr, i64 3, align 8
  %8461 = alloca ptr, i64 3, align 8
  %8462 = load ptr, ptr @tag_TypeOf, align 8
  %8463 = getelementptr ptr, ptr %8460, i64 0
  store ptr %8462, ptr %8463, align 8
  %8464 = getelementptr ptr, ptr %8461, i64 0
  store ptr %8455, ptr %8464, align 8
  %8465 = load ptr, ptr @tag_Is, align 8
  %8466 = load ptr, ptr @fun_Core_type_is.2009, align 8
  %8467 = getelementptr ptr, ptr %8460, i64 1
  store ptr %8465, ptr %8467, align 8
  %8468 = getelementptr ptr, ptr %8461, i64 1
  store ptr %8466, ptr %8468, align 8
  %8469 = getelementptr ptr, ptr %8460, i64 2
  store ptr null, ptr %8469, align 8
  %8470 = getelementptr ptr, ptr %8461, i64 2
  store ptr null, ptr %8470, align 8
  %8471 = call ptr @make_candy_struct(ptr %8460, ptr %8461)
  %8472 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8473 = getelementptr inbounds { ptr }, ptr %8472, i32 0, i32 0
  store ptr %8471, ptr %8473, align 8
  %8474 = call ptr @make_candy_function(ptr @Core_function_is.2010, ptr %8472, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8474, ptr @fun_Core_function_is.2011, align 8
  %8475 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8476 = call ptr @Builtins__structGet(ptr %997, ptr %8475)
  %8477 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8478 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8477, i32 0, i32 0
  store ptr %997, ptr %8478, align 8
  %8479 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8477, i32 0, i32 1
  store ptr %8476, ptr %8479, align 8
  %8480 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8477, i32 0, i32 2
  store ptr %8471, ptr %8480, align 8
  %8481 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8477, i32 0, i32 3
  store ptr %8451, ptr %8481, align 8
  %8482 = call ptr @make_candy_function(ptr @Core_function_is0.2012, ptr %8477, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8482, ptr @fun_Core_function_is0.2013, align 8
  %8483 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8484 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8483, i32 0, i32 0
  store ptr %997, ptr %8484, align 8
  %8485 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8483, i32 0, i32 1
  store ptr %8476, ptr %8485, align 8
  %8486 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8483, i32 0, i32 2
  store ptr %8471, ptr %8486, align 8
  %8487 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8483, i32 0, i32 3
  store ptr %8451, ptr %8487, align 8
  %8488 = call ptr @make_candy_function(ptr @Core_function_is1.2016, ptr %8483, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8488, ptr @fun_Core_function_is1.2017, align 8
  %8489 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8490 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8489, i32 0, i32 0
  store ptr %997, ptr %8490, align 8
  %8491 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8489, i32 0, i32 1
  store ptr %8476, ptr %8491, align 8
  %8492 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8489, i32 0, i32 2
  store ptr %8471, ptr %8492, align 8
  %8493 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8489, i32 0, i32 3
  store ptr %8451, ptr %8493, align 8
  %8494 = call ptr @make_candy_function(ptr @Core_function_is2.2020, ptr %8489, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8494, ptr @fun_Core_function_is2.2021, align 8
  %8495 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8496 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8495, i32 0, i32 0
  store ptr %997, ptr %8496, align 8
  %8497 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8495, i32 0, i32 1
  store ptr %8476, ptr %8497, align 8
  %8498 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8495, i32 0, i32 2
  store ptr %8471, ptr %8498, align 8
  %8499 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8495, i32 0, i32 3
  store ptr %8451, ptr %8499, align 8
  %8500 = call ptr @make_candy_function(ptr @Core_function_is3.2024, ptr %8495, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8500, ptr @fun_Core_function_is3.2025, align 8
  %8501 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8502 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8501, i32 0, i32 0
  store ptr %997, ptr %8502, align 8
  %8503 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8501, i32 0, i32 1
  store ptr %8476, ptr %8503, align 8
  %8504 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8501, i32 0, i32 2
  store ptr %8471, ptr %8504, align 8
  %8505 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8501, i32 0, i32 3
  store ptr %8451, ptr %8505, align 8
  %8506 = call ptr @make_candy_function(ptr @Core_function_is4.2028, ptr %8501, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8506, ptr @fun_Core_function_is4.2029, align 8
  %8507 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8508 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8507, i32 0, i32 0
  store ptr %997, ptr %8508, align 8
  %8509 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8507, i32 0, i32 1
  store ptr %8476, ptr %8509, align 8
  %8510 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8507, i32 0, i32 2
  store ptr %8471, ptr %8510, align 8
  %8511 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8507, i32 0, i32 3
  store ptr %8451, ptr %8511, align 8
  %8512 = call ptr @make_candy_function(ptr @Core_function_is5.2032, ptr %8507, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8512, ptr @fun_Core_function_is5.2033, align 8
  %8513 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8514 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8513, i32 0, i32 0
  store ptr %997, ptr %8514, align 8
  %8515 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8513, i32 0, i32 1
  store ptr %8476, ptr %8515, align 8
  %8516 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8513, i32 0, i32 2
  store ptr %8471, ptr %8516, align 8
  %8517 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8513, i32 0, i32 3
  store ptr %8451, ptr %8517, align 8
  %8518 = call ptr @make_candy_function(ptr @Core_function_run.2036, ptr %8513, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8518, ptr @fun_Core_function_run.2037, align 8
  %8519 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8520 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8519, i32 0, i32 0
  store ptr %997, ptr %8520, align 8
  %8521 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8519, i32 0, i32 1
  store ptr %8476, ptr %8521, align 8
  %8522 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8519, i32 0, i32 2
  store ptr %8471, ptr %8522, align 8
  %8523 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8519, i32 0, i32 3
  store ptr %8451, ptr %8523, align 8
  %8524 = call ptr @make_candy_function(ptr @Core_function_doNotRun.2040, ptr %8519, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8524, ptr @fun_Core_function_doNotRun.2041, align 8
  %8525 = alloca ptr, i64 11, align 8
  %8526 = alloca ptr, i64 11, align 8
  %8527 = load ptr, ptr @tag_Is0, align 8
  %8528 = load ptr, ptr @fun_Core_function_is0.2013, align 8
  %8529 = getelementptr ptr, ptr %8525, i64 0
  store ptr %8527, ptr %8529, align 8
  %8530 = getelementptr ptr, ptr %8526, i64 0
  store ptr %8528, ptr %8530, align 8
  %8531 = load ptr, ptr @tag_DoNotRun, align 8
  %8532 = load ptr, ptr @fun_Core_function_doNotRun.2041, align 8
  %8533 = getelementptr ptr, ptr %8525, i64 1
  store ptr %8531, ptr %8533, align 8
  %8534 = getelementptr ptr, ptr %8526, i64 1
  store ptr %8532, ptr %8534, align 8
  %8535 = load ptr, ptr @tag_Is, align 8
  %8536 = load ptr, ptr @fun_Core_function_is.2011, align 8
  %8537 = getelementptr ptr, ptr %8525, i64 2
  store ptr %8535, ptr %8537, align 8
  %8538 = getelementptr ptr, ptr %8526, i64 2
  store ptr %8536, ptr %8538, align 8
  %8539 = load ptr, ptr @tag_Is3, align 8
  %8540 = load ptr, ptr @fun_Core_function_is3.2025, align 8
  %8541 = getelementptr ptr, ptr %8525, i64 3
  store ptr %8539, ptr %8541, align 8
  %8542 = getelementptr ptr, ptr %8526, i64 3
  store ptr %8540, ptr %8542, align 8
  %8543 = load ptr, ptr @tag_Is2, align 8
  %8544 = load ptr, ptr @fun_Core_function_is2.2021, align 8
  %8545 = getelementptr ptr, ptr %8525, i64 4
  store ptr %8543, ptr %8545, align 8
  %8546 = getelementptr ptr, ptr %8526, i64 4
  store ptr %8544, ptr %8546, align 8
  %8547 = load ptr, ptr @tag_Is4, align 8
  %8548 = load ptr, ptr @fun_Core_function_is4.2029, align 8
  %8549 = getelementptr ptr, ptr %8525, i64 5
  store ptr %8547, ptr %8549, align 8
  %8550 = getelementptr ptr, ptr %8526, i64 5
  store ptr %8548, ptr %8550, align 8
  %8551 = load ptr, ptr @tag_Is1, align 8
  %8552 = load ptr, ptr @fun_Core_function_is1.2017, align 8
  %8553 = getelementptr ptr, ptr %8525, i64 6
  store ptr %8551, ptr %8553, align 8
  %8554 = getelementptr ptr, ptr %8526, i64 6
  store ptr %8552, ptr %8554, align 8
  %8555 = load ptr, ptr @tag_Is5, align 8
  %8556 = load ptr, ptr @fun_Core_function_is5.2033, align 8
  %8557 = getelementptr ptr, ptr %8525, i64 7
  store ptr %8555, ptr %8557, align 8
  %8558 = getelementptr ptr, ptr %8526, i64 7
  store ptr %8556, ptr %8558, align 8
  %8559 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8560 = getelementptr ptr, ptr %8525, i64 8
  store ptr %8559, ptr %8560, align 8
  %8561 = getelementptr ptr, ptr %8526, i64 8
  store ptr %8476, ptr %8561, align 8
  %8562 = load ptr, ptr @tag_Run, align 8
  %8563 = load ptr, ptr @fun_Core_function_run.2037, align 8
  %8564 = getelementptr ptr, ptr %8525, i64 9
  store ptr %8562, ptr %8564, align 8
  %8565 = getelementptr ptr, ptr %8526, i64 9
  store ptr %8563, ptr %8565, align 8
  %8566 = getelementptr ptr, ptr %8525, i64 10
  store ptr null, ptr %8566, align 8
  %8567 = getelementptr ptr, ptr %8526, i64 10
  store ptr null, ptr %8567, align 8
  %8568 = call ptr @make_candy_struct(ptr %8525, ptr %8526)
  %8569 = load ptr, ptr @tag_Equals, align 8
  %8570 = call ptr @Builtins__structGet(ptr %997, ptr %8569)
  %8571 = load ptr, ptr @tag_TypeOf, align 8
  %8572 = call ptr @Builtins__structGet(ptr %997, ptr %8571)
  %8573 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8574 = getelementptr inbounds { ptr }, ptr %8573, i32 0, i32 0
  store ptr %8568, ptr %8574, align 8
  %8575 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.2044, ptr %8573, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8575, ptr @fun_Core_bool_lazyAnd.2045, align 8
  %8576 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8577 = call ptr @make_candy_function(ptr @Core_bool_and.2072, ptr %8576, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8577, ptr @fun_Core_bool_and.2073, align 8
  %8578 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8579 = getelementptr inbounds { ptr }, ptr %8578, i32 0, i32 0
  store ptr %8568, ptr %8579, align 8
  %8580 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.2076, ptr %8578, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8580, ptr @fun_Core_bool_lazyOr.2077, align 8
  %8581 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8582 = call ptr @make_candy_function(ptr @Core_bool_or.2104, ptr %8581, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8582, ptr @fun_Core_bool_or.2105, align 8
  %8583 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8584 = getelementptr inbounds { ptr }, ptr %8583, i32 0, i32 0
  store ptr %8449, ptr %8584, align 8
  %8585 = call ptr @make_candy_function(ptr @Core_bool_xor.2108, ptr %8583, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8585, ptr @fun_Core_bool_xor.2109, align 8
  %8586 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %8587 = call ptr @make_candy_function(ptr @Core_bool_implies.2110, ptr %8586, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %8587, ptr @fun_Core_bool_implies.2111, align 8
  %8588 = alloca ptr, i64 9, align 8
  %8589 = alloca ptr, i64 9, align 8
  %8590 = load ptr, ptr @tag_LazyOr, align 8
  %8591 = load ptr, ptr @fun_Core_bool_lazyOr.2077, align 8
  %8592 = getelementptr ptr, ptr %8588, i64 0
  store ptr %8590, ptr %8592, align 8
  %8593 = getelementptr ptr, ptr %8589, i64 0
  store ptr %8591, ptr %8593, align 8
  %8594 = load ptr, ptr @tag_Implies, align 8
  %8595 = load ptr, ptr @fun_Core_bool_implies.2111, align 8
  %8596 = getelementptr ptr, ptr %8588, i64 1
  store ptr %8594, ptr %8596, align 8
  %8597 = getelementptr ptr, ptr %8589, i64 1
  store ptr %8595, ptr %8597, align 8
  %8598 = load ptr, ptr @tag_Not, align 8
  %8599 = load ptr, ptr @fun_Core_bool_not, align 8
  %8600 = getelementptr ptr, ptr %8588, i64 2
  store ptr %8598, ptr %8600, align 8
  %8601 = getelementptr ptr, ptr %8589, i64 2
  store ptr %8599, ptr %8601, align 8
  %8602 = load ptr, ptr @tag_And, align 8
  %8603 = load ptr, ptr @fun_Core_bool_and.2073, align 8
  %8604 = getelementptr ptr, ptr %8588, i64 3
  store ptr %8602, ptr %8604, align 8
  %8605 = getelementptr ptr, ptr %8589, i64 3
  store ptr %8603, ptr %8605, align 8
  %8606 = load ptr, ptr @tag_LazyAnd, align 8
  %8607 = load ptr, ptr @fun_Core_bool_lazyAnd.2045, align 8
  %8608 = getelementptr ptr, ptr %8588, i64 4
  store ptr %8606, ptr %8608, align 8
  %8609 = getelementptr ptr, ptr %8589, i64 4
  store ptr %8607, ptr %8609, align 8
  %8610 = load ptr, ptr @tag_Is, align 8
  %8611 = load ptr, ptr @fun_Core_bool_is, align 8
  %8612 = getelementptr ptr, ptr %8588, i64 5
  store ptr %8610, ptr %8612, align 8
  %8613 = getelementptr ptr, ptr %8589, i64 5
  store ptr %8611, ptr %8613, align 8
  %8614 = load ptr, ptr @tag_Or, align 8
  %8615 = load ptr, ptr @fun_Core_bool_or.2105, align 8
  %8616 = getelementptr ptr, ptr %8588, i64 6
  store ptr %8614, ptr %8616, align 8
  %8617 = getelementptr ptr, ptr %8589, i64 6
  store ptr %8615, ptr %8617, align 8
  %8618 = load ptr, ptr @tag_Xor, align 8
  %8619 = load ptr, ptr @fun_Core_bool_xor.2109, align 8
  %8620 = getelementptr ptr, ptr %8588, i64 7
  store ptr %8618, ptr %8620, align 8
  %8621 = getelementptr ptr, ptr %8589, i64 7
  store ptr %8619, ptr %8621, align 8
  %8622 = getelementptr ptr, ptr %8588, i64 8
  store ptr null, ptr %8622, align 8
  %8623 = getelementptr ptr, ptr %8589, i64 8
  store ptr null, ptr %8623, align 8
  %8624 = call ptr @make_candy_struct(ptr %8588, ptr %8589)
  %8625 = load ptr, ptr @tag_Equals, align 8
  %8626 = call ptr @Builtins__structGet(ptr %997, ptr %8625)
  %8627 = load ptr, ptr @tag_Equals, align 8
  %8628 = call ptr @Builtins__structGet(ptr %997, ptr %8627)
  %8629 = load ptr, ptr @tag_Equals, align 8
  %8630 = call ptr @Builtins__structGet(ptr %997, ptr %8629)
  %8631 = load ptr, ptr @tag_TypeOf, align 8
  %8632 = call ptr @Builtins__structGet(ptr %997, ptr %8631)
  %8633 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8634 = call ptr @Builtins__structGet(ptr %997, ptr %8633)
  %8635 = load ptr, ptr @tag_Equals, align 8
  %8636 = call ptr @Builtins__structGet(ptr %997, ptr %8635)
  %8637 = load ptr, ptr @tag_TypeOf, align 8
  %8638 = call ptr @Builtins__structGet(ptr %997, ptr %8637)
  %8639 = load ptr, ptr @tag_Equals, align 8
  %8640 = call ptr @Builtins__structGet(ptr %997, ptr %8639)
  %8641 = load ptr, ptr @tag_Equals, align 8
  %8642 = call ptr @Builtins__structGet(ptr %997, ptr %8641)
  %8643 = load ptr, ptr @tag_Equals, align 8
  %8644 = call ptr @Builtins__structGet(ptr %997, ptr %8643)
  %8645 = load ptr, ptr @tag_TypeOf, align 8
  %8646 = call ptr @Builtins__structGet(ptr %997, ptr %8645)
  %8647 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8648 = call ptr @Builtins__structGet(ptr %997, ptr %8647)
  %8649 = load ptr, ptr @tag_Equals, align 8
  %8650 = call ptr @Builtins__structGet(ptr %997, ptr %8649)
  %8651 = load ptr, ptr @tag_TypeOf, align 8
  %8652 = call ptr @Builtins__structGet(ptr %997, ptr %8651)
  %8653 = load ptr, ptr @tag_IfElse, align 8
  %8654 = call ptr @Builtins__structGet(ptr %997, ptr %8653)
  %8655 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8656 = getelementptr inbounds { ptr }, ptr %8655, i32 0, i32 0
  store ptr %8624, ptr %8656, align 8
  %8657 = call ptr @make_candy_function(ptr @Core_check_check.2114, ptr %8655, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8657, ptr @fun_Core_check_check.2115, align 8
  %8658 = load ptr, ptr @tag_Equals, align 8
  %8659 = call ptr @Builtins__structGet(ptr %997, ptr %8658)
  %8660 = load ptr, ptr @tag_Equals, align 8
  %8661 = call ptr @Builtins__structGet(ptr %997, ptr %8660)
  %8662 = load ptr, ptr @tag_Equals, align 8
  %8663 = call ptr @Builtins__structGet(ptr %997, ptr %8662)
  %8664 = load ptr, ptr @tag_TypeOf, align 8
  %8665 = call ptr @Builtins__structGet(ptr %997, ptr %8664)
  %8666 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8667 = call ptr @Builtins__structGet(ptr %997, ptr %8666)
  %8668 = load ptr, ptr @tag_Equals, align 8
  %8669 = call ptr @Builtins__structGet(ptr %997, ptr %8668)
  %8670 = load ptr, ptr @tag_TypeOf, align 8
  %8671 = call ptr @Builtins__structGet(ptr %997, ptr %8670)
  %8672 = load ptr, ptr @tag_Equals, align 8
  %8673 = call ptr @Builtins__structGet(ptr %997, ptr %8672)
  %8674 = load ptr, ptr @tag_Equals, align 8
  %8675 = call ptr @Builtins__structGet(ptr %997, ptr %8674)
  %8676 = load ptr, ptr @tag_Equals, align 8
  %8677 = call ptr @Builtins__structGet(ptr %997, ptr %8676)
  %8678 = load ptr, ptr @tag_TypeOf, align 8
  %8679 = call ptr @Builtins__structGet(ptr %997, ptr %8678)
  %8680 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8681 = getelementptr inbounds { ptr, ptr }, ptr %8680, i32 0, i32 0
  store ptr %8679, ptr %8681, align 8
  %8682 = getelementptr inbounds { ptr, ptr }, ptr %8680, i32 0, i32 1
  store ptr %8677, ptr %8682, align 8
  %8683 = call ptr @make_candy_function(ptr @Core_type_is.2120, ptr %8680, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8683, ptr @fun_Core_type_is.2121, align 8
  %8684 = alloca ptr, i64 3, align 8
  %8685 = alloca ptr, i64 3, align 8
  %8686 = load ptr, ptr @tag_TypeOf, align 8
  %8687 = getelementptr ptr, ptr %8684, i64 0
  store ptr %8686, ptr %8687, align 8
  %8688 = getelementptr ptr, ptr %8685, i64 0
  store ptr %8679, ptr %8688, align 8
  %8689 = load ptr, ptr @tag_Is, align 8
  %8690 = load ptr, ptr @fun_Core_type_is.2121, align 8
  %8691 = getelementptr ptr, ptr %8684, i64 1
  store ptr %8689, ptr %8691, align 8
  %8692 = getelementptr ptr, ptr %8685, i64 1
  store ptr %8690, ptr %8692, align 8
  %8693 = getelementptr ptr, ptr %8684, i64 2
  store ptr null, ptr %8693, align 8
  %8694 = getelementptr ptr, ptr %8685, i64 2
  store ptr null, ptr %8694, align 8
  %8695 = call ptr @make_candy_struct(ptr %8684, ptr %8685)
  %8696 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8697 = getelementptr inbounds { ptr }, ptr %8696, i32 0, i32 0
  store ptr %8695, ptr %8697, align 8
  %8698 = call ptr @make_candy_function(ptr @Core_function_is.2122, ptr %8696, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8698, ptr @fun_Core_function_is.2123, align 8
  %8699 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8700 = call ptr @Builtins__structGet(ptr %997, ptr %8699)
  %8701 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8702 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8701, i32 0, i32 0
  store ptr %997, ptr %8702, align 8
  %8703 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8701, i32 0, i32 1
  store ptr %8700, ptr %8703, align 8
  %8704 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8701, i32 0, i32 2
  store ptr %8695, ptr %8704, align 8
  %8705 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8701, i32 0, i32 3
  store ptr %8675, ptr %8705, align 8
  %8706 = call ptr @make_candy_function(ptr @Core_function_is0.2124, ptr %8701, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8706, ptr @fun_Core_function_is0.2125, align 8
  %8707 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8708 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8707, i32 0, i32 0
  store ptr %997, ptr %8708, align 8
  %8709 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8707, i32 0, i32 1
  store ptr %8700, ptr %8709, align 8
  %8710 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8707, i32 0, i32 2
  store ptr %8695, ptr %8710, align 8
  %8711 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8707, i32 0, i32 3
  store ptr %8675, ptr %8711, align 8
  %8712 = call ptr @make_candy_function(ptr @Core_function_is1.2128, ptr %8707, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8712, ptr @fun_Core_function_is1.2129, align 8
  %8713 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8714 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8713, i32 0, i32 0
  store ptr %997, ptr %8714, align 8
  %8715 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8713, i32 0, i32 1
  store ptr %8700, ptr %8715, align 8
  %8716 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8713, i32 0, i32 2
  store ptr %8695, ptr %8716, align 8
  %8717 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8713, i32 0, i32 3
  store ptr %8675, ptr %8717, align 8
  %8718 = call ptr @make_candy_function(ptr @Core_function_is2.2132, ptr %8713, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8718, ptr @fun_Core_function_is2.2133, align 8
  %8719 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8720 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8719, i32 0, i32 0
  store ptr %997, ptr %8720, align 8
  %8721 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8719, i32 0, i32 1
  store ptr %8700, ptr %8721, align 8
  %8722 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8719, i32 0, i32 2
  store ptr %8695, ptr %8722, align 8
  %8723 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8719, i32 0, i32 3
  store ptr %8675, ptr %8723, align 8
  %8724 = call ptr @make_candy_function(ptr @Core_function_is3.2136, ptr %8719, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8724, ptr @fun_Core_function_is3.2137, align 8
  %8725 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8726 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8725, i32 0, i32 0
  store ptr %997, ptr %8726, align 8
  %8727 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8725, i32 0, i32 1
  store ptr %8700, ptr %8727, align 8
  %8728 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8725, i32 0, i32 2
  store ptr %8695, ptr %8728, align 8
  %8729 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8725, i32 0, i32 3
  store ptr %8675, ptr %8729, align 8
  %8730 = call ptr @make_candy_function(ptr @Core_function_is4.2140, ptr %8725, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8730, ptr @fun_Core_function_is4.2141, align 8
  %8731 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8732 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8731, i32 0, i32 0
  store ptr %997, ptr %8732, align 8
  %8733 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8731, i32 0, i32 1
  store ptr %8700, ptr %8733, align 8
  %8734 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8731, i32 0, i32 2
  store ptr %8695, ptr %8734, align 8
  %8735 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8731, i32 0, i32 3
  store ptr %8675, ptr %8735, align 8
  %8736 = call ptr @make_candy_function(ptr @Core_function_is5.2144, ptr %8731, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8736, ptr @fun_Core_function_is5.2145, align 8
  %8737 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8738 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8737, i32 0, i32 0
  store ptr %997, ptr %8738, align 8
  %8739 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8737, i32 0, i32 1
  store ptr %8700, ptr %8739, align 8
  %8740 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8737, i32 0, i32 2
  store ptr %8695, ptr %8740, align 8
  %8741 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8737, i32 0, i32 3
  store ptr %8675, ptr %8741, align 8
  %8742 = call ptr @make_candy_function(ptr @Core_function_run.2148, ptr %8737, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8742, ptr @fun_Core_function_run.2149, align 8
  %8743 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8744 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8743, i32 0, i32 0
  store ptr %997, ptr %8744, align 8
  %8745 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8743, i32 0, i32 1
  store ptr %8700, ptr %8745, align 8
  %8746 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8743, i32 0, i32 2
  store ptr %8695, ptr %8746, align 8
  %8747 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8743, i32 0, i32 3
  store ptr %8675, ptr %8747, align 8
  %8748 = call ptr @make_candy_function(ptr @Core_function_doNotRun.2152, ptr %8743, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8748, ptr @fun_Core_function_doNotRun.2153, align 8
  %8749 = alloca ptr, i64 11, align 8
  %8750 = alloca ptr, i64 11, align 8
  %8751 = load ptr, ptr @tag_Is0, align 8
  %8752 = load ptr, ptr @fun_Core_function_is0.2125, align 8
  %8753 = getelementptr ptr, ptr %8749, i64 0
  store ptr %8751, ptr %8753, align 8
  %8754 = getelementptr ptr, ptr %8750, i64 0
  store ptr %8752, ptr %8754, align 8
  %8755 = load ptr, ptr @tag_DoNotRun, align 8
  %8756 = load ptr, ptr @fun_Core_function_doNotRun.2153, align 8
  %8757 = getelementptr ptr, ptr %8749, i64 1
  store ptr %8755, ptr %8757, align 8
  %8758 = getelementptr ptr, ptr %8750, i64 1
  store ptr %8756, ptr %8758, align 8
  %8759 = load ptr, ptr @tag_Is, align 8
  %8760 = load ptr, ptr @fun_Core_function_is.2123, align 8
  %8761 = getelementptr ptr, ptr %8749, i64 2
  store ptr %8759, ptr %8761, align 8
  %8762 = getelementptr ptr, ptr %8750, i64 2
  store ptr %8760, ptr %8762, align 8
  %8763 = load ptr, ptr @tag_Is3, align 8
  %8764 = load ptr, ptr @fun_Core_function_is3.2137, align 8
  %8765 = getelementptr ptr, ptr %8749, i64 3
  store ptr %8763, ptr %8765, align 8
  %8766 = getelementptr ptr, ptr %8750, i64 3
  store ptr %8764, ptr %8766, align 8
  %8767 = load ptr, ptr @tag_Is2, align 8
  %8768 = load ptr, ptr @fun_Core_function_is2.2133, align 8
  %8769 = getelementptr ptr, ptr %8749, i64 4
  store ptr %8767, ptr %8769, align 8
  %8770 = getelementptr ptr, ptr %8750, i64 4
  store ptr %8768, ptr %8770, align 8
  %8771 = load ptr, ptr @tag_Is4, align 8
  %8772 = load ptr, ptr @fun_Core_function_is4.2141, align 8
  %8773 = getelementptr ptr, ptr %8749, i64 5
  store ptr %8771, ptr %8773, align 8
  %8774 = getelementptr ptr, ptr %8750, i64 5
  store ptr %8772, ptr %8774, align 8
  %8775 = load ptr, ptr @tag_Is1, align 8
  %8776 = load ptr, ptr @fun_Core_function_is1.2129, align 8
  %8777 = getelementptr ptr, ptr %8749, i64 6
  store ptr %8775, ptr %8777, align 8
  %8778 = getelementptr ptr, ptr %8750, i64 6
  store ptr %8776, ptr %8778, align 8
  %8779 = load ptr, ptr @tag_Is5, align 8
  %8780 = load ptr, ptr @fun_Core_function_is5.2145, align 8
  %8781 = getelementptr ptr, ptr %8749, i64 7
  store ptr %8779, ptr %8781, align 8
  %8782 = getelementptr ptr, ptr %8750, i64 7
  store ptr %8780, ptr %8782, align 8
  %8783 = load ptr, ptr @tag_GetArgumentCount, align 8
  %8784 = getelementptr ptr, ptr %8749, i64 8
  store ptr %8783, ptr %8784, align 8
  %8785 = getelementptr ptr, ptr %8750, i64 8
  store ptr %8700, ptr %8785, align 8
  %8786 = load ptr, ptr @tag_Run, align 8
  %8787 = load ptr, ptr @fun_Core_function_run.2149, align 8
  %8788 = getelementptr ptr, ptr %8749, i64 9
  store ptr %8786, ptr %8788, align 8
  %8789 = getelementptr ptr, ptr %8750, i64 9
  store ptr %8787, ptr %8789, align 8
  %8790 = getelementptr ptr, ptr %8749, i64 10
  store ptr null, ptr %8790, align 8
  %8791 = getelementptr ptr, ptr %8750, i64 10
  store ptr null, ptr %8791, align 8
  %8792 = call ptr @make_candy_struct(ptr %8749, ptr %8750)
  %8793 = load ptr, ptr @tag_Equals, align 8
  %8794 = call ptr @Builtins__structGet(ptr %997, ptr %8793)
  %8795 = load ptr, ptr @tag_TypeOf, align 8
  %8796 = call ptr @Builtins__structGet(ptr %997, ptr %8795)
  %8797 = load ptr, ptr @tag_IfElse, align 8
  %8798 = call ptr @Builtins__structGet(ptr %997, ptr %8797)
  %8799 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8800 = getelementptr inbounds { ptr }, ptr %8799, i32 0, i32 0
  store ptr %8792, ptr %8800, align 8
  %8801 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive.2156, ptr %8799, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8801, ptr @fun_Core_controlFlow_recursive.2157, align 8
  %8802 = load ptr, ptr @tag_Equals, align 8
  %8803 = call ptr @Builtins__structGet(ptr %997, ptr %8802)
  %8804 = load ptr, ptr @tag_Equals, align 8
  %8805 = call ptr @Builtins__structGet(ptr %997, ptr %8804)
  %8806 = load ptr, ptr @tag_TypeOf, align 8
  %8807 = call ptr @Builtins__structGet(ptr %997, ptr %8806)
  %8808 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8809 = getelementptr inbounds { ptr, ptr }, ptr %8808, i32 0, i32 0
  store ptr %8805, ptr %8809, align 8
  %8810 = getelementptr inbounds { ptr, ptr }, ptr %8808, i32 0, i32 1
  store ptr %8807, ptr %8810, align 8
  %8811 = call ptr @make_candy_function(ptr @Core_type_is.2162, ptr %8808, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8811, ptr @fun_Core_type_is.2163, align 8
  %8812 = alloca ptr, i64 3, align 8
  %8813 = alloca ptr, i64 3, align 8
  %8814 = load ptr, ptr @tag_TypeOf, align 8
  %8815 = getelementptr ptr, ptr %8812, i64 0
  store ptr %8814, ptr %8815, align 8
  %8816 = getelementptr ptr, ptr %8813, i64 0
  store ptr %8807, ptr %8816, align 8
  %8817 = load ptr, ptr @tag_Is, align 8
  %8818 = load ptr, ptr @fun_Core_type_is.2163, align 8
  %8819 = getelementptr ptr, ptr %8812, i64 1
  store ptr %8817, ptr %8819, align 8
  %8820 = getelementptr ptr, ptr %8813, i64 1
  store ptr %8818, ptr %8820, align 8
  %8821 = getelementptr ptr, ptr %8812, i64 2
  store ptr null, ptr %8821, align 8
  %8822 = getelementptr ptr, ptr %8813, i64 2
  store ptr null, ptr %8822, align 8
  %8823 = call ptr @make_candy_struct(ptr %8812, ptr %8813)
  %8824 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8825 = getelementptr inbounds { ptr }, ptr %8824, i32 0, i32 0
  store ptr %8823, ptr %8825, align 8
  %8826 = call ptr @make_candy_function(ptr @Core_int_is.2164, ptr %8824, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8826, ptr @fun_Core_int_is.2165, align 8
  %8827 = load ptr, ptr @tag_IntAdd, align 8
  %8828 = call ptr @Builtins__structGet(ptr %997, ptr %8827)
  %8829 = load ptr, ptr @tag_IntSubtract, align 8
  %8830 = call ptr @Builtins__structGet(ptr %997, ptr %8829)
  %8831 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8832 = getelementptr inbounds { ptr, ptr }, ptr %8831, i32 0, i32 0
  store ptr %8830, ptr %8832, align 8
  %8833 = getelementptr inbounds { ptr, ptr }, ptr %8831, i32 0, i32 1
  store ptr %8823, ptr %8833, align 8
  %8834 = call ptr @make_candy_function(ptr @Core_int_negate.2166, ptr %8831, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8834, ptr @fun_Core_int_negate.2167, align 8
  %8835 = load ptr, ptr @tag_IntMultiply, align 8
  %8836 = call ptr @Builtins__structGet(ptr %997, ptr %8835)
  %8837 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %8838 = call ptr @Builtins__structGet(ptr %997, ptr %8837)
  %8839 = load ptr, ptr @tag_IntRemainder, align 8
  %8840 = call ptr @Builtins__structGet(ptr %997, ptr %8839)
  %8841 = load ptr, ptr @tag_IntModulo, align 8
  %8842 = call ptr @Builtins__structGet(ptr %997, ptr %8841)
  %8843 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8844 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8843, i32 0, i32 0
  store ptr %997, ptr %8844, align 8
  %8845 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8843, i32 0, i32 1
  store ptr %8447, ptr %8845, align 8
  %8846 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8843, i32 0, i32 2
  store ptr %8823, ptr %8846, align 8
  %8847 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8843, i32 0, i32 3
  store ptr %8803, ptr %8847, align 8
  %8848 = call ptr @make_candy_function(ptr @Core_int_compareTo.2168, ptr %8843, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8848, ptr @fun_Core_int_compareTo.2169, align 8
  %8849 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8850 = getelementptr inbounds { ptr, ptr }, ptr %8849, i32 0, i32 0
  store ptr %8823, ptr %8850, align 8
  %8851 = getelementptr inbounds { ptr, ptr }, ptr %8849, i32 0, i32 1
  store ptr %8803, ptr %8851, align 8
  %8852 = call ptr @make_candy_function(ptr @Core_int_isLessThan.2170, ptr %8849, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8852, ptr @fun_Core_int_isLessThan.2171, align 8
  %8853 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8854 = getelementptr inbounds { ptr, ptr }, ptr %8853, i32 0, i32 0
  store ptr %8823, ptr %8854, align 8
  %8855 = getelementptr inbounds { ptr, ptr }, ptr %8853, i32 0, i32 1
  store ptr %8803, ptr %8855, align 8
  %8856 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan.2172, ptr %8853, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8856, ptr @fun_Core_int_isGreaterThan.2173, align 8
  %8857 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8858 = getelementptr inbounds { ptr, ptr }, ptr %8857, i32 0, i32 0
  store ptr %8447, ptr %8858, align 8
  %8859 = getelementptr inbounds { ptr, ptr }, ptr %8857, i32 0, i32 1
  store ptr %8823, ptr %8859, align 8
  %8860 = call ptr @make_candy_function(ptr @Core_int_isLessThanOrEqualTo.2174, ptr %8857, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8860, ptr @fun_Core_int_isLessThanOrEqualTo.2175, align 8
  %8861 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8862 = getelementptr inbounds { ptr, ptr }, ptr %8861, i32 0, i32 0
  store ptr %8447, ptr %8862, align 8
  %8863 = getelementptr inbounds { ptr, ptr }, ptr %8861, i32 0, i32 1
  store ptr %8823, ptr %8863, align 8
  %8864 = call ptr @make_candy_function(ptr @Core_int_isGreaterThanOrEqualTo.2176, ptr %8861, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8864, ptr @fun_Core_int_isGreaterThanOrEqualTo.2177, align 8
  %8865 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8866 = getelementptr inbounds { ptr }, ptr %8865, i32 0, i32 0
  store ptr %8823, ptr %8866, align 8
  %8867 = call ptr @make_candy_function(ptr @Core_int_isPositive.2178, ptr %8865, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8867, ptr @fun_Core_int_isPositive.2179, align 8
  %8868 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8869 = getelementptr inbounds { ptr, ptr }, ptr %8868, i32 0, i32 0
  store ptr %8447, ptr %8869, align 8
  %8870 = getelementptr inbounds { ptr, ptr }, ptr %8868, i32 0, i32 1
  store ptr %8823, ptr %8870, align 8
  %8871 = call ptr @make_candy_function(ptr @Core_int_isNonPositive.2180, ptr %8868, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8871, ptr @fun_Core_int_isNonPositive.2181, align 8
  %8872 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8873 = getelementptr inbounds { ptr }, ptr %8872, i32 0, i32 0
  store ptr %8823, ptr %8873, align 8
  %8874 = call ptr @make_candy_function(ptr @Core_int_isNegative.2182, ptr %8872, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8874, ptr @fun_Core_int_isNegative.2183, align 8
  %8875 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8876 = getelementptr inbounds { ptr, ptr }, ptr %8875, i32 0, i32 0
  store ptr %8447, ptr %8876, align 8
  %8877 = getelementptr inbounds { ptr, ptr }, ptr %8875, i32 0, i32 1
  store ptr %8823, ptr %8877, align 8
  %8878 = call ptr @make_candy_function(ptr @Core_int_isNonNegative.2184, ptr %8875, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8878, ptr @fun_Core_int_isNonNegative.2185, align 8
  %8879 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8880 = getelementptr inbounds { ptr, ptr, ptr }, ptr %8879, i32 0, i32 0
  store ptr %8830, ptr %8880, align 8
  %8881 = getelementptr inbounds { ptr, ptr, ptr }, ptr %8879, i32 0, i32 1
  store ptr %8823, ptr %8881, align 8
  %8882 = getelementptr inbounds { ptr, ptr, ptr }, ptr %8879, i32 0, i32 2
  store ptr %8798, ptr %8882, align 8
  %8883 = call ptr @make_candy_function(ptr @Core_int_absolute.2186, ptr %8879, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8883, ptr @fun_Core_int_absolute.2187, align 8
  %8884 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8885 = getelementptr inbounds { ptr }, ptr %8884, i32 0, i32 0
  store ptr %8823, ptr %8885, align 8
  %8886 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU32.2192, ptr %8884, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8886, ptr @fun_Core_int_fitsInRustU32.2193, align 8
  %8887 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8888 = getelementptr inbounds { ptr }, ptr %8887, i32 0, i32 0
  store ptr %8823, ptr %8888, align 8
  %8889 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU128.2194, ptr %8887, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8889, ptr @fun_Core_int_fitsInRustU128.2195, align 8
  %8890 = load ptr, ptr @tag_IntShiftLeft, align 8
  %8891 = call ptr @Builtins__structGet(ptr %997, ptr %8890)
  %8892 = load ptr, ptr @tag_IntShiftRight, align 8
  %8893 = call ptr @Builtins__structGet(ptr %997, ptr %8892)
  %8894 = load ptr, ptr @tag_IntBitLength, align 8
  %8895 = call ptr @Builtins__structGet(ptr %997, ptr %8894)
  %8896 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %8897 = call ptr @Builtins__structGet(ptr %997, ptr %8896)
  %8898 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %8899 = call ptr @Builtins__structGet(ptr %997, ptr %8898)
  %8900 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %8901 = call ptr @Builtins__structGet(ptr %997, ptr %8900)
  %8902 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8903 = getelementptr inbounds { ptr, ptr, ptr }, ptr %8902, i32 0, i32 0
  store ptr %8897, ptr %8903, align 8
  %8904 = getelementptr inbounds { ptr, ptr, ptr }, ptr %8902, i32 0, i32 1
  store ptr %8823, ptr %8904, align 8
  %8905 = getelementptr inbounds { ptr, ptr, ptr }, ptr %8902, i32 0, i32 2
  store ptr %8803, ptr %8905, align 8
  %8906 = call ptr @make_candy_function(ptr @Core_int_isEven.2196, ptr %8902, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8906, ptr @fun_Core_int_isEven.2197, align 8
  %8907 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8908 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8907, i32 0, i32 0
  store ptr %8897, ptr %8908, align 8
  %8909 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8907, i32 0, i32 1
  store ptr %8447, ptr %8909, align 8
  %8910 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8907, i32 0, i32 2
  store ptr %8823, ptr %8910, align 8
  %8911 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %8907, i32 0, i32 3
  store ptr %8803, ptr %8911, align 8
  %8912 = call ptr @make_candy_function(ptr @Core_int_isOdd.2198, ptr %8907, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8912, ptr @fun_Core_int_isOdd.2199, align 8
  %8913 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8914 = getelementptr inbounds { ptr, ptr }, ptr %8913, i32 0, i32 0
  store ptr %8823, ptr %8914, align 8
  %8915 = getelementptr inbounds { ptr, ptr }, ptr %8913, i32 0, i32 1
  store ptr %8798, ptr %8915, align 8
  %8916 = call ptr @make_candy_function(ptr @Core_int_min.2200, ptr %8913, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8916, ptr @fun_Core_int_min.2201, align 8
  %8917 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8918 = getelementptr inbounds { ptr, ptr }, ptr %8917, i32 0, i32 0
  store ptr %8823, ptr %8918, align 8
  %8919 = getelementptr inbounds { ptr, ptr }, ptr %8917, i32 0, i32 1
  store ptr %8798, ptr %8919, align 8
  %8920 = call ptr @make_candy_function(ptr @Core_int_max.2206, ptr %8917, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8920, ptr @fun_Core_int_max.2207, align 8
  %8921 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8922 = getelementptr inbounds { ptr }, ptr %8921, i32 0, i32 0
  store ptr %8823, ptr %8922, align 8
  %8923 = call ptr @make_candy_function(ptr @Core_int_coerceAtLeast.2212, ptr %8921, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8923, ptr @fun_Core_int_coerceAtLeast.2213, align 8
  %8924 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8925 = getelementptr inbounds { ptr }, ptr %8924, i32 0, i32 0
  store ptr %8823, ptr %8925, align 8
  %8926 = call ptr @make_candy_function(ptr @Core_int_coerceAtMost.2214, ptr %8924, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8926, ptr @fun_Core_int_coerceAtMost.2215, align 8
  %8927 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8928 = getelementptr inbounds { ptr }, ptr %8927, i32 0, i32 0
  store ptr %8823, ptr %8928, align 8
  %8929 = call ptr @make_candy_function(ptr @Core_int_coerceIn.2216, ptr %8927, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8929, ptr @fun_Core_int_coerceIn.2217, align 8
  %8930 = load ptr, ptr @tag_IntParse, align 8
  %8931 = call ptr @Builtins__structGet(ptr %997, ptr %8930)
  %8932 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %8933 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8932, i32 0, i32 0
  store ptr %8836, ptr %8933, align 8
  %8934 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8932, i32 0, i32 1
  store ptr %8823, ptr %8934, align 8
  %8935 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8932, i32 0, i32 2
  store ptr %8803, ptr %8935, align 8
  %8936 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8932, i32 0, i32 3
  store ptr %8893, ptr %8936, align 8
  %8937 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8932, i32 0, i32 4
  store ptr %8830, ptr %8937, align 8
  %8938 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8932, i32 0, i32 5
  store ptr %8897, ptr %8938, align 8
  %8939 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8932, i32 0, i32 6
  store ptr %8798, ptr %8939, align 8
  %8940 = call ptr @make_candy_function(ptr @Core_int_pow.2218, ptr %8932, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8940, ptr @fun_Core_int_pow.2219, align 8
  %8941 = alloca ptr, i64 37, align 8
  %8942 = alloca ptr, i64 37, align 8
  %8943 = load ptr, ptr @tag_CoerceAtLeast, align 8
  %8944 = load ptr, ptr @fun_Core_int_coerceAtLeast.2213, align 8
  %8945 = getelementptr ptr, ptr %8941, i64 0
  store ptr %8943, ptr %8945, align 8
  %8946 = getelementptr ptr, ptr %8942, i64 0
  store ptr %8944, ptr %8946, align 8
  %8947 = load ptr, ptr @tag_FitsInRustU32, align 8
  %8948 = load ptr, ptr @fun_Core_int_fitsInRustU32.2193, align 8
  %8949 = getelementptr ptr, ptr %8941, i64 1
  store ptr %8947, ptr %8949, align 8
  %8950 = getelementptr ptr, ptr %8942, i64 1
  store ptr %8948, ptr %8950, align 8
  %8951 = load ptr, ptr @tag_CoerceIn, align 8
  %8952 = load ptr, ptr @fun_Core_int_coerceIn.2217, align 8
  %8953 = getelementptr ptr, ptr %8941, i64 2
  store ptr %8951, ptr %8953, align 8
  %8954 = getelementptr ptr, ptr %8942, i64 2
  store ptr %8952, ptr %8954, align 8
  %8955 = load ptr, ptr @tag_IsPositive, align 8
  %8956 = load ptr, ptr @fun_Core_int_isPositive.2179, align 8
  %8957 = getelementptr ptr, ptr %8941, i64 3
  store ptr %8955, ptr %8957, align 8
  %8958 = getelementptr ptr, ptr %8942, i64 3
  store ptr %8956, ptr %8958, align 8
  %8959 = load ptr, ptr @tag_BitwiseAnd, align 8
  %8960 = getelementptr ptr, ptr %8941, i64 4
  store ptr %8959, ptr %8960, align 8
  %8961 = getelementptr ptr, ptr %8942, i64 4
  store ptr %8897, ptr %8961, align 8
  %8962 = load ptr, ptr @tag_IsOdd, align 8
  %8963 = load ptr, ptr @fun_Core_int_isOdd.2199, align 8
  %8964 = getelementptr ptr, ptr %8941, i64 5
  store ptr %8962, ptr %8964, align 8
  %8965 = getelementptr ptr, ptr %8942, i64 5
  store ptr %8963, ptr %8965, align 8
  %8966 = load ptr, ptr @tag_BitwiseXor, align 8
  %8967 = getelementptr ptr, ptr %8941, i64 6
  store ptr %8966, ptr %8967, align 8
  %8968 = getelementptr ptr, ptr %8942, i64 6
  store ptr %8901, ptr %8968, align 8
  %8969 = load ptr, ptr @tag_IsLessThan, align 8
  %8970 = load ptr, ptr @fun_Core_int_isLessThan.2171, align 8
  %8971 = getelementptr ptr, ptr %8941, i64 7
  store ptr %8969, ptr %8971, align 8
  %8972 = getelementptr ptr, ptr %8942, i64 7
  store ptr %8970, ptr %8972, align 8
  %8973 = load ptr, ptr @tag_IsGreaterThan, align 8
  %8974 = load ptr, ptr @fun_Core_int_isGreaterThan.2173, align 8
  %8975 = getelementptr ptr, ptr %8941, i64 8
  store ptr %8973, ptr %8975, align 8
  %8976 = getelementptr ptr, ptr %8942, i64 8
  store ptr %8974, ptr %8976, align 8
  %8977 = load ptr, ptr @tag_DivideTruncating, align 8
  %8978 = getelementptr ptr, ptr %8941, i64 9
  store ptr %8977, ptr %8978, align 8
  %8979 = getelementptr ptr, ptr %8942, i64 9
  store ptr %8838, ptr %8979, align 8
  %8980 = load ptr, ptr @tag_Multiply, align 8
  %8981 = getelementptr ptr, ptr %8941, i64 10
  store ptr %8980, ptr %8981, align 8
  %8982 = getelementptr ptr, ptr %8942, i64 10
  store ptr %8836, ptr %8982, align 8
  %8983 = load ptr, ptr @tag_Subtract, align 8
  %8984 = getelementptr ptr, ptr %8941, i64 11
  store ptr %8983, ptr %8984, align 8
  %8985 = getelementptr ptr, ptr %8942, i64 11
  store ptr %8830, ptr %8985, align 8
  %8986 = load ptr, ptr @tag_BitLength, align 8
  %8987 = getelementptr ptr, ptr %8941, i64 12
  store ptr %8986, ptr %8987, align 8
  %8988 = getelementptr ptr, ptr %8942, i64 12
  store ptr %8895, ptr %8988, align 8
  %8989 = load ptr, ptr @tag_Max, align 8
  %8990 = load ptr, ptr @fun_Core_int_max.2207, align 8
  %8991 = getelementptr ptr, ptr %8941, i64 13
  store ptr %8989, ptr %8991, align 8
  %8992 = getelementptr ptr, ptr %8942, i64 13
  store ptr %8990, ptr %8992, align 8
  %8993 = load ptr, ptr @tag_FitsInRustU128, align 8
  %8994 = load ptr, ptr @fun_Core_int_fitsInRustU128.2195, align 8
  %8995 = getelementptr ptr, ptr %8941, i64 14
  store ptr %8993, ptr %8995, align 8
  %8996 = getelementptr ptr, ptr %8942, i64 14
  store ptr %8994, ptr %8996, align 8
  %8997 = load ptr, ptr @tag_Remainder, align 8
  %8998 = getelementptr ptr, ptr %8941, i64 15
  store ptr %8997, ptr %8998, align 8
  %8999 = getelementptr ptr, ptr %8942, i64 15
  store ptr %8840, ptr %8999, align 8
  %9000 = load ptr, ptr @tag_CoerceAtMost, align 8
  %9001 = load ptr, ptr @fun_Core_int_coerceAtMost.2215, align 8
  %9002 = getelementptr ptr, ptr %8941, i64 16
  store ptr %9000, ptr %9002, align 8
  %9003 = getelementptr ptr, ptr %8942, i64 16
  store ptr %9001, ptr %9003, align 8
  %9004 = load ptr, ptr @tag_ShiftLeft, align 8
  %9005 = getelementptr ptr, ptr %8941, i64 17
  store ptr %9004, ptr %9005, align 8
  %9006 = getelementptr ptr, ptr %8942, i64 17
  store ptr %8891, ptr %9006, align 8
  %9007 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %9008 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo.2175, align 8
  %9009 = getelementptr ptr, ptr %8941, i64 18
  store ptr %9007, ptr %9009, align 8
  %9010 = getelementptr ptr, ptr %8942, i64 18
  store ptr %9008, ptr %9010, align 8
  %9011 = load ptr, ptr @tag_Add, align 8
  %9012 = getelementptr ptr, ptr %8941, i64 19
  store ptr %9011, ptr %9012, align 8
  %9013 = getelementptr ptr, ptr %8942, i64 19
  store ptr %8828, ptr %9013, align 8
  %9014 = load ptr, ptr @tag_ShiftRight, align 8
  %9015 = getelementptr ptr, ptr %8941, i64 20
  store ptr %9014, ptr %9015, align 8
  %9016 = getelementptr ptr, ptr %8942, i64 20
  store ptr %8893, ptr %9016, align 8
  %9017 = load ptr, ptr @tag_Parse, align 8
  %9018 = getelementptr ptr, ptr %8941, i64 21
  store ptr %9017, ptr %9018, align 8
  %9019 = getelementptr ptr, ptr %8942, i64 21
  store ptr %8931, ptr %9019, align 8
  %9020 = load ptr, ptr @tag_Modulo, align 8
  %9021 = getelementptr ptr, ptr %8941, i64 22
  store ptr %9020, ptr %9021, align 8
  %9022 = getelementptr ptr, ptr %8942, i64 22
  store ptr %8842, ptr %9022, align 8
  %9023 = load ptr, ptr @tag_IsNonPositive, align 8
  %9024 = load ptr, ptr @fun_Core_int_isNonPositive.2181, align 8
  %9025 = getelementptr ptr, ptr %8941, i64 23
  store ptr %9023, ptr %9025, align 8
  %9026 = getelementptr ptr, ptr %8942, i64 23
  store ptr %9024, ptr %9026, align 8
  %9027 = load ptr, ptr @tag_IsEven, align 8
  %9028 = load ptr, ptr @fun_Core_int_isEven.2197, align 8
  %9029 = getelementptr ptr, ptr %8941, i64 24
  store ptr %9027, ptr %9029, align 8
  %9030 = getelementptr ptr, ptr %8942, i64 24
  store ptr %9028, ptr %9030, align 8
  %9031 = load ptr, ptr @tag_Absolute, align 8
  %9032 = load ptr, ptr @fun_Core_int_absolute.2187, align 8
  %9033 = getelementptr ptr, ptr %8941, i64 25
  store ptr %9031, ptr %9033, align 8
  %9034 = getelementptr ptr, ptr %8942, i64 25
  store ptr %9032, ptr %9034, align 8
  %9035 = load ptr, ptr @tag_BitwiseOr, align 8
  %9036 = getelementptr ptr, ptr %8941, i64 26
  store ptr %9035, ptr %9036, align 8
  %9037 = getelementptr ptr, ptr %8942, i64 26
  store ptr %8899, ptr %9037, align 8
  %9038 = load ptr, ptr @tag_IsNegative, align 8
  %9039 = load ptr, ptr @fun_Core_int_isNegative.2183, align 8
  %9040 = getelementptr ptr, ptr %8941, i64 27
  store ptr %9038, ptr %9040, align 8
  %9041 = getelementptr ptr, ptr %8942, i64 27
  store ptr %9039, ptr %9041, align 8
  %9042 = load ptr, ptr @tag_IsGreaterThanOrEqualTo, align 8
  %9043 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo.2177, align 8
  %9044 = getelementptr ptr, ptr %8941, i64 28
  store ptr %9042, ptr %9044, align 8
  %9045 = getelementptr ptr, ptr %8942, i64 28
  store ptr %9043, ptr %9045, align 8
  %9046 = load ptr, ptr @tag_Pow, align 8
  %9047 = load ptr, ptr @fun_Core_int_pow.2219, align 8
  %9048 = getelementptr ptr, ptr %8941, i64 29
  store ptr %9046, ptr %9048, align 8
  %9049 = getelementptr ptr, ptr %8942, i64 29
  store ptr %9047, ptr %9049, align 8
  %9050 = load ptr, ptr @tag_Negate, align 8
  %9051 = load ptr, ptr @fun_Core_int_negate.2167, align 8
  %9052 = getelementptr ptr, ptr %8941, i64 30
  store ptr %9050, ptr %9052, align 8
  %9053 = getelementptr ptr, ptr %8942, i64 30
  store ptr %9051, ptr %9053, align 8
  %9054 = load ptr, ptr @tag_IsNonNegative, align 8
  %9055 = load ptr, ptr @fun_Core_int_isNonNegative.2185, align 8
  %9056 = getelementptr ptr, ptr %8941, i64 31
  store ptr %9054, ptr %9056, align 8
  %9057 = getelementptr ptr, ptr %8942, i64 31
  store ptr %9055, ptr %9057, align 8
  %9058 = load ptr, ptr @tag_Is, align 8
  %9059 = load ptr, ptr @fun_Core_int_is.2165, align 8
  %9060 = getelementptr ptr, ptr %8941, i64 32
  store ptr %9058, ptr %9060, align 8
  %9061 = getelementptr ptr, ptr %8942, i64 32
  store ptr %9059, ptr %9061, align 8
  %9062 = load ptr, ptr @tag_TheAnswer, align 8
  %9063 = load ptr, ptr @num_42, align 8
  %9064 = getelementptr ptr, ptr %8941, i64 33
  store ptr %9062, ptr %9064, align 8
  %9065 = getelementptr ptr, ptr %8942, i64 33
  store ptr %9063, ptr %9065, align 8
  %9066 = load ptr, ptr @tag_Min, align 8
  %9067 = load ptr, ptr @fun_Core_int_min.2201, align 8
  %9068 = getelementptr ptr, ptr %8941, i64 34
  store ptr %9066, ptr %9068, align 8
  %9069 = getelementptr ptr, ptr %8942, i64 34
  store ptr %9067, ptr %9069, align 8
  %9070 = load ptr, ptr @tag_CompareTo, align 8
  %9071 = load ptr, ptr @fun_Core_int_compareTo.2169, align 8
  %9072 = getelementptr ptr, ptr %8941, i64 35
  store ptr %9070, ptr %9072, align 8
  %9073 = getelementptr ptr, ptr %8942, i64 35
  store ptr %9071, ptr %9073, align 8
  %9074 = getelementptr ptr, ptr %8941, i64 36
  store ptr null, ptr %9074, align 8
  %9075 = getelementptr ptr, ptr %8942, i64 36
  store ptr null, ptr %9075, align 8
  %9076 = call ptr @make_candy_struct(ptr %8941, ptr %8942)
  %9077 = load ptr, ptr @tag_Equals, align 8
  %9078 = call ptr @Builtins__structGet(ptr %997, ptr %9077)
  %9079 = load ptr, ptr @tag_Equals, align 8
  %9080 = call ptr @Builtins__structGet(ptr %997, ptr %9079)
  %9081 = load ptr, ptr @tag_Equals, align 8
  %9082 = call ptr @Builtins__structGet(ptr %997, ptr %9081)
  %9083 = load ptr, ptr @tag_TypeOf, align 8
  %9084 = call ptr @Builtins__structGet(ptr %997, ptr %9083)
  %9085 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9086 = call ptr @Builtins__structGet(ptr %997, ptr %9085)
  %9087 = load ptr, ptr @tag_Equals, align 8
  %9088 = call ptr @Builtins__structGet(ptr %997, ptr %9087)
  %9089 = load ptr, ptr @tag_TypeOf, align 8
  %9090 = call ptr @Builtins__structGet(ptr %997, ptr %9089)
  %9091 = load ptr, ptr @tag_Equals, align 8
  %9092 = call ptr @Builtins__structGet(ptr %997, ptr %9091)
  %9093 = load ptr, ptr @tag_Equals, align 8
  %9094 = call ptr @Builtins__structGet(ptr %997, ptr %9093)
  %9095 = load ptr, ptr @tag_Equals, align 8
  %9096 = call ptr @Builtins__structGet(ptr %997, ptr %9095)
  %9097 = load ptr, ptr @tag_TypeOf, align 8
  %9098 = call ptr @Builtins__structGet(ptr %997, ptr %9097)
  %9099 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9100 = call ptr @Builtins__structGet(ptr %997, ptr %9099)
  %9101 = load ptr, ptr @tag_Equals, align 8
  %9102 = call ptr @Builtins__structGet(ptr %997, ptr %9101)
  %9103 = load ptr, ptr @tag_TypeOf, align 8
  %9104 = call ptr @Builtins__structGet(ptr %997, ptr %9103)
  %9105 = load ptr, ptr @tag_Equals, align 8
  %9106 = call ptr @Builtins__structGet(ptr %997, ptr %9105)
  %9107 = load ptr, ptr @tag_Equals, align 8
  %9108 = call ptr @Builtins__structGet(ptr %997, ptr %9107)
  %9109 = load ptr, ptr @tag_Equals, align 8
  %9110 = call ptr @Builtins__structGet(ptr %997, ptr %9109)
  %9111 = load ptr, ptr @tag_TypeOf, align 8
  %9112 = call ptr @Builtins__structGet(ptr %997, ptr %9111)
  %9113 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9114 = call ptr @Builtins__structGet(ptr %997, ptr %9113)
  %9115 = load ptr, ptr @tag_Equals, align 8
  %9116 = call ptr @Builtins__structGet(ptr %997, ptr %9115)
  %9117 = load ptr, ptr @tag_TypeOf, align 8
  %9118 = call ptr @Builtins__structGet(ptr %997, ptr %9117)
  %9119 = load ptr, ptr @tag_IfElse, align 8
  %9120 = call ptr @Builtins__structGet(ptr %997, ptr %9119)
  %9121 = load ptr, ptr @tag_Equals, align 8
  %9122 = call ptr @Builtins__structGet(ptr %997, ptr %9121)
  %9123 = load ptr, ptr @tag_Equals, align 8
  %9124 = call ptr @Builtins__structGet(ptr %997, ptr %9123)
  %9125 = load ptr, ptr @tag_Equals, align 8
  %9126 = call ptr @Builtins__structGet(ptr %997, ptr %9125)
  %9127 = load ptr, ptr @tag_TypeOf, align 8
  %9128 = call ptr @Builtins__structGet(ptr %997, ptr %9127)
  %9129 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9130 = call ptr @Builtins__structGet(ptr %997, ptr %9129)
  %9131 = load ptr, ptr @tag_Equals, align 8
  %9132 = call ptr @Builtins__structGet(ptr %997, ptr %9131)
  %9133 = load ptr, ptr @tag_Equals, align 8
  %9134 = call ptr @Builtins__structGet(ptr %997, ptr %9133)
  %9135 = load ptr, ptr @tag_Equals, align 8
  %9136 = call ptr @Builtins__structGet(ptr %997, ptr %9135)
  %9137 = load ptr, ptr @tag_TypeOf, align 8
  %9138 = call ptr @Builtins__structGet(ptr %997, ptr %9137)
  %9139 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9140 = call ptr @Builtins__structGet(ptr %997, ptr %9139)
  %9141 = load ptr, ptr @tag_Equals, align 8
  %9142 = call ptr @Builtins__structGet(ptr %997, ptr %9141)
  %9143 = load ptr, ptr @tag_TypeOf, align 8
  %9144 = call ptr @Builtins__structGet(ptr %997, ptr %9143)
  %9145 = load ptr, ptr @tag_Equals, align 8
  %9146 = call ptr @Builtins__structGet(ptr %997, ptr %9145)
  %9147 = load ptr, ptr @tag_Equals, align 8
  %9148 = call ptr @Builtins__structGet(ptr %997, ptr %9147)
  %9149 = load ptr, ptr @tag_Equals, align 8
  %9150 = call ptr @Builtins__structGet(ptr %997, ptr %9149)
  %9151 = load ptr, ptr @tag_TypeOf, align 8
  %9152 = call ptr @Builtins__structGet(ptr %997, ptr %9151)
  %9153 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9154 = call ptr @Builtins__structGet(ptr %997, ptr %9153)
  %9155 = load ptr, ptr @tag_Equals, align 8
  %9156 = call ptr @Builtins__structGet(ptr %997, ptr %9155)
  %9157 = load ptr, ptr @tag_TypeOf, align 8
  %9158 = call ptr @Builtins__structGet(ptr %997, ptr %9157)
  %9159 = load ptr, ptr @tag_Equals, align 8
  %9160 = call ptr @Builtins__structGet(ptr %997, ptr %9159)
  %9161 = load ptr, ptr @tag_Equals, align 8
  %9162 = call ptr @Builtins__structGet(ptr %997, ptr %9161)
  %9163 = load ptr, ptr @tag_Equals, align 8
  %9164 = call ptr @Builtins__structGet(ptr %997, ptr %9163)
  %9165 = load ptr, ptr @tag_TypeOf, align 8
  %9166 = call ptr @Builtins__structGet(ptr %997, ptr %9165)
  %9167 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9168 = call ptr @Builtins__structGet(ptr %997, ptr %9167)
  %9169 = load ptr, ptr @tag_Equals, align 8
  %9170 = call ptr @Builtins__structGet(ptr %997, ptr %9169)
  %9171 = load ptr, ptr @tag_TypeOf, align 8
  %9172 = call ptr @Builtins__structGet(ptr %997, ptr %9171)
  %9173 = load ptr, ptr @tag_Equals, align 8
  %9174 = call ptr @Builtins__structGet(ptr %997, ptr %9173)
  %9175 = load ptr, ptr @tag_Equals, align 8
  %9176 = call ptr @Builtins__structGet(ptr %997, ptr %9175)
  %9177 = load ptr, ptr @tag_Equals, align 8
  %9178 = call ptr @Builtins__structGet(ptr %997, ptr %9177)
  %9179 = load ptr, ptr @tag_TypeOf, align 8
  %9180 = call ptr @Builtins__structGet(ptr %997, ptr %9179)
  %9181 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9182 = call ptr @Builtins__structGet(ptr %997, ptr %9181)
  %9183 = load ptr, ptr @tag_Equals, align 8
  %9184 = call ptr @Builtins__structGet(ptr %997, ptr %9183)
  %9185 = load ptr, ptr @tag_TypeOf, align 8
  %9186 = call ptr @Builtins__structGet(ptr %997, ptr %9185)
  %9187 = load ptr, ptr @tag_IfElse, align 8
  %9188 = call ptr @Builtins__structGet(ptr %997, ptr %9187)
  %9189 = load ptr, ptr @tag_Equals, align 8
  %9190 = call ptr @Builtins__structGet(ptr %997, ptr %9189)
  %9191 = load ptr, ptr @tag_Equals, align 8
  %9192 = call ptr @Builtins__structGet(ptr %997, ptr %9191)
  %9193 = load ptr, ptr @tag_Equals, align 8
  %9194 = call ptr @Builtins__structGet(ptr %997, ptr %9193)
  %9195 = load ptr, ptr @tag_TypeOf, align 8
  %9196 = call ptr @Builtins__structGet(ptr %997, ptr %9195)
  %9197 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9198 = call ptr @Builtins__structGet(ptr %997, ptr %9197)
  %9199 = load ptr, ptr @tag_Equals, align 8
  %9200 = call ptr @Builtins__structGet(ptr %997, ptr %9199)
  %9201 = load ptr, ptr @tag_TypeOf, align 8
  %9202 = call ptr @Builtins__structGet(ptr %997, ptr %9201)
  %9203 = load ptr, ptr @tag_Equals, align 8
  %9204 = call ptr @Builtins__structGet(ptr %997, ptr %9203)
  %9205 = load ptr, ptr @tag_Equals, align 8
  %9206 = call ptr @Builtins__structGet(ptr %997, ptr %9205)
  %9207 = load ptr, ptr @tag_Equals, align 8
  %9208 = call ptr @Builtins__structGet(ptr %997, ptr %9207)
  %9209 = load ptr, ptr @tag_TypeOf, align 8
  %9210 = call ptr @Builtins__structGet(ptr %997, ptr %9209)
  %9211 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9212 = call ptr @Builtins__structGet(ptr %997, ptr %9211)
  %9213 = load ptr, ptr @tag_Equals, align 8
  %9214 = call ptr @Builtins__structGet(ptr %997, ptr %9213)
  %9215 = load ptr, ptr @tag_TypeOf, align 8
  %9216 = call ptr @Builtins__structGet(ptr %997, ptr %9215)
  %9217 = load ptr, ptr @tag_IfElse, align 8
  %9218 = call ptr @Builtins__structGet(ptr %997, ptr %9217)
  %9219 = load ptr, ptr @tag_Equals, align 8
  %9220 = call ptr @Builtins__structGet(ptr %997, ptr %9219)
  %9221 = load ptr, ptr @tag_Equals, align 8
  %9222 = call ptr @Builtins__structGet(ptr %997, ptr %9221)
  %9223 = load ptr, ptr @tag_TypeOf, align 8
  %9224 = call ptr @Builtins__structGet(ptr %997, ptr %9223)
  %9225 = load ptr, ptr @tag_IntAdd, align 8
  %9226 = call ptr @Builtins__structGet(ptr %997, ptr %9225)
  %9227 = load ptr, ptr @tag_IntSubtract, align 8
  %9228 = call ptr @Builtins__structGet(ptr %997, ptr %9227)
  %9229 = load ptr, ptr @tag_IntMultiply, align 8
  %9230 = call ptr @Builtins__structGet(ptr %997, ptr %9229)
  %9231 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %9232 = call ptr @Builtins__structGet(ptr %997, ptr %9231)
  %9233 = load ptr, ptr @tag_IntRemainder, align 8
  %9234 = call ptr @Builtins__structGet(ptr %997, ptr %9233)
  %9235 = load ptr, ptr @tag_IntModulo, align 8
  %9236 = call ptr @Builtins__structGet(ptr %997, ptr %9235)
  %9237 = load ptr, ptr @tag_IntShiftLeft, align 8
  %9238 = call ptr @Builtins__structGet(ptr %997, ptr %9237)
  %9239 = load ptr, ptr @tag_IntShiftRight, align 8
  %9240 = call ptr @Builtins__structGet(ptr %997, ptr %9239)
  %9241 = load ptr, ptr @tag_IntBitLength, align 8
  %9242 = call ptr @Builtins__structGet(ptr %997, ptr %9241)
  %9243 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %9244 = call ptr @Builtins__structGet(ptr %997, ptr %9243)
  %9245 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %9246 = call ptr @Builtins__structGet(ptr %997, ptr %9245)
  %9247 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %9248 = call ptr @Builtins__structGet(ptr %997, ptr %9247)
  %9249 = load ptr, ptr @tag_IntParse, align 8
  %9250 = call ptr @Builtins__structGet(ptr %997, ptr %9249)
  %9251 = load ptr, ptr @tag_Equals, align 8
  %9252 = call ptr @Builtins__structGet(ptr %997, ptr %9251)
  %9253 = load ptr, ptr @tag_Equals, align 8
  %9254 = call ptr @Builtins__structGet(ptr %997, ptr %9253)
  %9255 = load ptr, ptr @tag_Equals, align 8
  %9256 = call ptr @Builtins__structGet(ptr %997, ptr %9255)
  %9257 = load ptr, ptr @tag_TypeOf, align 8
  %9258 = call ptr @Builtins__structGet(ptr %997, ptr %9257)
  %9259 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9260 = call ptr @Builtins__structGet(ptr %997, ptr %9259)
  %9261 = load ptr, ptr @tag_Equals, align 8
  %9262 = call ptr @Builtins__structGet(ptr %997, ptr %9261)
  %9263 = load ptr, ptr @tag_TypeOf, align 8
  %9264 = call ptr @Builtins__structGet(ptr %997, ptr %9263)
  %9265 = load ptr, ptr @tag_Equals, align 8
  %9266 = call ptr @Builtins__structGet(ptr %997, ptr %9265)
  %9267 = load ptr, ptr @tag_Equals, align 8
  %9268 = call ptr @Builtins__structGet(ptr %997, ptr %9267)
  %9269 = load ptr, ptr @tag_Equals, align 8
  %9270 = call ptr @Builtins__structGet(ptr %997, ptr %9269)
  %9271 = load ptr, ptr @tag_TypeOf, align 8
  %9272 = call ptr @Builtins__structGet(ptr %997, ptr %9271)
  %9273 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9274 = call ptr @Builtins__structGet(ptr %997, ptr %9273)
  %9275 = load ptr, ptr @tag_Equals, align 8
  %9276 = call ptr @Builtins__structGet(ptr %997, ptr %9275)
  %9277 = load ptr, ptr @tag_TypeOf, align 8
  %9278 = call ptr @Builtins__structGet(ptr %997, ptr %9277)
  %9279 = load ptr, ptr @tag_Equals, align 8
  %9280 = call ptr @Builtins__structGet(ptr %997, ptr %9279)
  %9281 = load ptr, ptr @tag_Equals, align 8
  %9282 = call ptr @Builtins__structGet(ptr %997, ptr %9281)
  %9283 = load ptr, ptr @tag_Equals, align 8
  %9284 = call ptr @Builtins__structGet(ptr %997, ptr %9283)
  %9285 = load ptr, ptr @tag_TypeOf, align 8
  %9286 = call ptr @Builtins__structGet(ptr %997, ptr %9285)
  %9287 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9288 = call ptr @Builtins__structGet(ptr %997, ptr %9287)
  %9289 = load ptr, ptr @tag_Equals, align 8
  %9290 = call ptr @Builtins__structGet(ptr %997, ptr %9289)
  %9291 = load ptr, ptr @tag_TypeOf, align 8
  %9292 = call ptr @Builtins__structGet(ptr %997, ptr %9291)
  %9293 = load ptr, ptr @tag_IfElse, align 8
  %9294 = call ptr @Builtins__structGet(ptr %997, ptr %9293)
  %9295 = load ptr, ptr @tag_Equals, align 8
  %9296 = call ptr @Builtins__structGet(ptr %997, ptr %9295)
  %9297 = load ptr, ptr @tag_Equals, align 8
  %9298 = call ptr @Builtins__structGet(ptr %997, ptr %9297)
  %9299 = load ptr, ptr @tag_Equals, align 8
  %9300 = call ptr @Builtins__structGet(ptr %997, ptr %9299)
  %9301 = load ptr, ptr @tag_TypeOf, align 8
  %9302 = call ptr @Builtins__structGet(ptr %997, ptr %9301)
  %9303 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9304 = call ptr @Builtins__structGet(ptr %997, ptr %9303)
  %9305 = load ptr, ptr @tag_Equals, align 8
  %9306 = call ptr @Builtins__structGet(ptr %997, ptr %9305)
  %9307 = load ptr, ptr @tag_Equals, align 8
  %9308 = call ptr @Builtins__structGet(ptr %997, ptr %9307)
  %9309 = load ptr, ptr @tag_Equals, align 8
  %9310 = call ptr @Builtins__structGet(ptr %997, ptr %9309)
  %9311 = load ptr, ptr @tag_TypeOf, align 8
  %9312 = call ptr @Builtins__structGet(ptr %997, ptr %9311)
  %9313 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9314 = call ptr @Builtins__structGet(ptr %997, ptr %9313)
  %9315 = load ptr, ptr @tag_Equals, align 8
  %9316 = call ptr @Builtins__structGet(ptr %997, ptr %9315)
  %9317 = load ptr, ptr @tag_TypeOf, align 8
  %9318 = call ptr @Builtins__structGet(ptr %997, ptr %9317)
  %9319 = load ptr, ptr @tag_Equals, align 8
  %9320 = call ptr @Builtins__structGet(ptr %997, ptr %9319)
  %9321 = load ptr, ptr @tag_Equals, align 8
  %9322 = call ptr @Builtins__structGet(ptr %997, ptr %9321)
  %9323 = load ptr, ptr @tag_Equals, align 8
  %9324 = call ptr @Builtins__structGet(ptr %997, ptr %9323)
  %9325 = load ptr, ptr @tag_TypeOf, align 8
  %9326 = call ptr @Builtins__structGet(ptr %997, ptr %9325)
  %9327 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9328 = call ptr @Builtins__structGet(ptr %997, ptr %9327)
  %9329 = load ptr, ptr @tag_Equals, align 8
  %9330 = call ptr @Builtins__structGet(ptr %997, ptr %9329)
  %9331 = load ptr, ptr @tag_TypeOf, align 8
  %9332 = call ptr @Builtins__structGet(ptr %997, ptr %9331)
  %9333 = load ptr, ptr @tag_IfElse, align 8
  %9334 = call ptr @Builtins__structGet(ptr %997, ptr %9333)
  %9335 = load ptr, ptr @tag_Equals, align 8
  %9336 = call ptr @Builtins__structGet(ptr %997, ptr %9335)
  %9337 = load ptr, ptr @tag_TypeOf, align 8
  %9338 = call ptr @Builtins__structGet(ptr %997, ptr %9337)
  %9339 = load ptr, ptr @tag_Equals, align 8
  %9340 = call ptr @Builtins__structGet(ptr %997, ptr %9339)
  %9341 = load ptr, ptr @tag_Equals, align 8
  %9342 = call ptr @Builtins__structGet(ptr %997, ptr %9341)
  %9343 = load ptr, ptr @tag_Equals, align 8
  %9344 = call ptr @Builtins__structGet(ptr %997, ptr %9343)
  %9345 = load ptr, ptr @tag_TypeOf, align 8
  %9346 = call ptr @Builtins__structGet(ptr %997, ptr %9345)
  %9347 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9348 = call ptr @Builtins__structGet(ptr %997, ptr %9347)
  %9349 = load ptr, ptr @tag_Equals, align 8
  %9350 = call ptr @Builtins__structGet(ptr %997, ptr %9349)
  %9351 = load ptr, ptr @tag_TypeOf, align 8
  %9352 = call ptr @Builtins__structGet(ptr %997, ptr %9351)
  %9353 = load ptr, ptr @tag_Equals, align 8
  %9354 = call ptr @Builtins__structGet(ptr %997, ptr %9353)
  %9355 = load ptr, ptr @tag_Equals, align 8
  %9356 = call ptr @Builtins__structGet(ptr %997, ptr %9355)
  %9357 = load ptr, ptr @tag_Equals, align 8
  %9358 = call ptr @Builtins__structGet(ptr %997, ptr %9357)
  %9359 = load ptr, ptr @tag_TypeOf, align 8
  %9360 = call ptr @Builtins__structGet(ptr %997, ptr %9359)
  %9361 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9362 = call ptr @Builtins__structGet(ptr %997, ptr %9361)
  %9363 = load ptr, ptr @tag_Equals, align 8
  %9364 = call ptr @Builtins__structGet(ptr %997, ptr %9363)
  %9365 = load ptr, ptr @tag_TypeOf, align 8
  %9366 = call ptr @Builtins__structGet(ptr %997, ptr %9365)
  %9367 = load ptr, ptr @tag_Equals, align 8
  %9368 = call ptr @Builtins__structGet(ptr %997, ptr %9367)
  %9369 = load ptr, ptr @tag_Equals, align 8
  %9370 = call ptr @Builtins__structGet(ptr %997, ptr %9369)
  %9371 = load ptr, ptr @tag_Equals, align 8
  %9372 = call ptr @Builtins__structGet(ptr %997, ptr %9371)
  %9373 = load ptr, ptr @tag_TypeOf, align 8
  %9374 = call ptr @Builtins__structGet(ptr %997, ptr %9373)
  %9375 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9376 = call ptr @Builtins__structGet(ptr %997, ptr %9375)
  %9377 = load ptr, ptr @tag_Equals, align 8
  %9378 = call ptr @Builtins__structGet(ptr %997, ptr %9377)
  %9379 = load ptr, ptr @tag_TypeOf, align 8
  %9380 = call ptr @Builtins__structGet(ptr %997, ptr %9379)
  %9381 = load ptr, ptr @tag_IfElse, align 8
  %9382 = call ptr @Builtins__structGet(ptr %997, ptr %9381)
  %9383 = load ptr, ptr @tag_Equals, align 8
  %9384 = call ptr @Builtins__structGet(ptr %997, ptr %9383)
  %9385 = load ptr, ptr @tag_TypeOf, align 8
  %9386 = call ptr @Builtins__structGet(ptr %997, ptr %9385)
  %9387 = load ptr, ptr @tag_TagHasValue, align 8
  %9388 = call ptr @Builtins__structGet(ptr %997, ptr %9387)
  %9389 = load ptr, ptr @tag_TagWithoutValue, align 8
  %9390 = call ptr @Builtins__structGet(ptr %997, ptr %9389)
  %9391 = load ptr, ptr @tag_TagGetValue, align 8
  %9392 = call ptr @Builtins__structGet(ptr %997, ptr %9391)
  %9393 = load ptr, ptr @tag_Equals, align 8
  %9394 = call ptr @Builtins__structGet(ptr %997, ptr %9393)
  %9395 = load ptr, ptr @tag_TypeOf, align 8
  %9396 = call ptr @Builtins__structGet(ptr %997, ptr %9395)
  %9397 = load ptr, ptr @tag_Equals, align 8
  %9398 = call ptr @Builtins__structGet(ptr %997, ptr %9397)
  %9399 = load ptr, ptr @tag_Equals, align 8
  %9400 = call ptr @Builtins__structGet(ptr %997, ptr %9399)
  %9401 = load ptr, ptr @tag_Equals, align 8
  %9402 = call ptr @Builtins__structGet(ptr %997, ptr %9401)
  %9403 = load ptr, ptr @tag_TypeOf, align 8
  %9404 = call ptr @Builtins__structGet(ptr %997, ptr %9403)
  %9405 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9406 = call ptr @Builtins__structGet(ptr %997, ptr %9405)
  %9407 = load ptr, ptr @tag_Equals, align 8
  %9408 = call ptr @Builtins__structGet(ptr %997, ptr %9407)
  %9409 = load ptr, ptr @tag_TypeOf, align 8
  %9410 = call ptr @Builtins__structGet(ptr %997, ptr %9409)
  %9411 = load ptr, ptr @tag_Equals, align 8
  %9412 = call ptr @Builtins__structGet(ptr %997, ptr %9411)
  %9413 = load ptr, ptr @tag_Equals, align 8
  %9414 = call ptr @Builtins__structGet(ptr %997, ptr %9413)
  %9415 = load ptr, ptr @tag_Equals, align 8
  %9416 = call ptr @Builtins__structGet(ptr %997, ptr %9415)
  %9417 = load ptr, ptr @tag_TypeOf, align 8
  %9418 = call ptr @Builtins__structGet(ptr %997, ptr %9417)
  %9419 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9420 = call ptr @Builtins__structGet(ptr %997, ptr %9419)
  %9421 = load ptr, ptr @tag_Equals, align 8
  %9422 = call ptr @Builtins__structGet(ptr %997, ptr %9421)
  %9423 = load ptr, ptr @tag_TypeOf, align 8
  %9424 = call ptr @Builtins__structGet(ptr %997, ptr %9423)
  %9425 = load ptr, ptr @tag_Equals, align 8
  %9426 = call ptr @Builtins__structGet(ptr %997, ptr %9425)
  %9427 = load ptr, ptr @tag_Equals, align 8
  %9428 = call ptr @Builtins__structGet(ptr %997, ptr %9427)
  %9429 = load ptr, ptr @tag_Equals, align 8
  %9430 = call ptr @Builtins__structGet(ptr %997, ptr %9429)
  %9431 = load ptr, ptr @tag_TypeOf, align 8
  %9432 = call ptr @Builtins__structGet(ptr %997, ptr %9431)
  %9433 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9434 = call ptr @Builtins__structGet(ptr %997, ptr %9433)
  %9435 = load ptr, ptr @tag_Equals, align 8
  %9436 = call ptr @Builtins__structGet(ptr %997, ptr %9435)
  %9437 = load ptr, ptr @tag_TypeOf, align 8
  %9438 = call ptr @Builtins__structGet(ptr %997, ptr %9437)
  %9439 = load ptr, ptr @tag_IfElse, align 8
  %9440 = call ptr @Builtins__structGet(ptr %997, ptr %9439)
  %9441 = load ptr, ptr @tag_Equals, align 8
  %9442 = call ptr @Builtins__structGet(ptr %997, ptr %9441)
  %9443 = load ptr, ptr @tag_Equals, align 8
  %9444 = call ptr @Builtins__structGet(ptr %997, ptr %9443)
  %9445 = load ptr, ptr @tag_Equals, align 8
  %9446 = call ptr @Builtins__structGet(ptr %997, ptr %9445)
  %9447 = load ptr, ptr @tag_TypeOf, align 8
  %9448 = call ptr @Builtins__structGet(ptr %997, ptr %9447)
  %9449 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9450 = call ptr @Builtins__structGet(ptr %997, ptr %9449)
  %9451 = load ptr, ptr @tag_Equals, align 8
  %9452 = call ptr @Builtins__structGet(ptr %997, ptr %9451)
  %9453 = load ptr, ptr @tag_Equals, align 8
  %9454 = call ptr @Builtins__structGet(ptr %997, ptr %9453)
  %9455 = load ptr, ptr @tag_Equals, align 8
  %9456 = call ptr @Builtins__structGet(ptr %997, ptr %9455)
  %9457 = load ptr, ptr @tag_TypeOf, align 8
  %9458 = call ptr @Builtins__structGet(ptr %997, ptr %9457)
  %9459 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9460 = call ptr @Builtins__structGet(ptr %997, ptr %9459)
  %9461 = load ptr, ptr @tag_Equals, align 8
  %9462 = call ptr @Builtins__structGet(ptr %997, ptr %9461)
  %9463 = load ptr, ptr @tag_TypeOf, align 8
  %9464 = call ptr @Builtins__structGet(ptr %997, ptr %9463)
  %9465 = load ptr, ptr @tag_Equals, align 8
  %9466 = call ptr @Builtins__structGet(ptr %997, ptr %9465)
  %9467 = load ptr, ptr @tag_Equals, align 8
  %9468 = call ptr @Builtins__structGet(ptr %997, ptr %9467)
  %9469 = load ptr, ptr @tag_Equals, align 8
  %9470 = call ptr @Builtins__structGet(ptr %997, ptr %9469)
  %9471 = load ptr, ptr @tag_TypeOf, align 8
  %9472 = call ptr @Builtins__structGet(ptr %997, ptr %9471)
  %9473 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9474 = call ptr @Builtins__structGet(ptr %997, ptr %9473)
  %9475 = load ptr, ptr @tag_Equals, align 8
  %9476 = call ptr @Builtins__structGet(ptr %997, ptr %9475)
  %9477 = load ptr, ptr @tag_TypeOf, align 8
  %9478 = call ptr @Builtins__structGet(ptr %997, ptr %9477)
  %9479 = load ptr, ptr @tag_Equals, align 8
  %9480 = call ptr @Builtins__structGet(ptr %997, ptr %9479)
  %9481 = load ptr, ptr @tag_Equals, align 8
  %9482 = call ptr @Builtins__structGet(ptr %997, ptr %9481)
  %9483 = load ptr, ptr @tag_Equals, align 8
  %9484 = call ptr @Builtins__structGet(ptr %997, ptr %9483)
  %9485 = load ptr, ptr @tag_TypeOf, align 8
  %9486 = call ptr @Builtins__structGet(ptr %997, ptr %9485)
  %9487 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9488 = call ptr @Builtins__structGet(ptr %997, ptr %9487)
  %9489 = load ptr, ptr @tag_Equals, align 8
  %9490 = call ptr @Builtins__structGet(ptr %997, ptr %9489)
  %9491 = load ptr, ptr @tag_TypeOf, align 8
  %9492 = call ptr @Builtins__structGet(ptr %997, ptr %9491)
  %9493 = load ptr, ptr @tag_Equals, align 8
  %9494 = call ptr @Builtins__structGet(ptr %997, ptr %9493)
  %9495 = load ptr, ptr @tag_Equals, align 8
  %9496 = call ptr @Builtins__structGet(ptr %997, ptr %9495)
  %9497 = load ptr, ptr @tag_Equals, align 8
  %9498 = call ptr @Builtins__structGet(ptr %997, ptr %9497)
  %9499 = load ptr, ptr @tag_TypeOf, align 8
  %9500 = call ptr @Builtins__structGet(ptr %997, ptr %9499)
  %9501 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9502 = call ptr @Builtins__structGet(ptr %997, ptr %9501)
  %9503 = load ptr, ptr @tag_Equals, align 8
  %9504 = call ptr @Builtins__structGet(ptr %997, ptr %9503)
  %9505 = load ptr, ptr @tag_TypeOf, align 8
  %9506 = call ptr @Builtins__structGet(ptr %997, ptr %9505)
  %9507 = load ptr, ptr @tag_IfElse, align 8
  %9508 = call ptr @Builtins__structGet(ptr %997, ptr %9507)
  %9509 = load ptr, ptr @tag_Equals, align 8
  %9510 = call ptr @Builtins__structGet(ptr %997, ptr %9509)
  %9511 = load ptr, ptr @tag_Equals, align 8
  %9512 = call ptr @Builtins__structGet(ptr %997, ptr %9511)
  %9513 = load ptr, ptr @tag_Equals, align 8
  %9514 = call ptr @Builtins__structGet(ptr %997, ptr %9513)
  %9515 = load ptr, ptr @tag_TypeOf, align 8
  %9516 = call ptr @Builtins__structGet(ptr %997, ptr %9515)
  %9517 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9518 = call ptr @Builtins__structGet(ptr %997, ptr %9517)
  %9519 = load ptr, ptr @tag_Equals, align 8
  %9520 = call ptr @Builtins__structGet(ptr %997, ptr %9519)
  %9521 = load ptr, ptr @tag_TypeOf, align 8
  %9522 = call ptr @Builtins__structGet(ptr %997, ptr %9521)
  %9523 = load ptr, ptr @tag_Equals, align 8
  %9524 = call ptr @Builtins__structGet(ptr %997, ptr %9523)
  %9525 = load ptr, ptr @tag_Equals, align 8
  %9526 = call ptr @Builtins__structGet(ptr %997, ptr %9525)
  %9527 = load ptr, ptr @tag_Equals, align 8
  %9528 = call ptr @Builtins__structGet(ptr %997, ptr %9527)
  %9529 = load ptr, ptr @tag_TypeOf, align 8
  %9530 = call ptr @Builtins__structGet(ptr %997, ptr %9529)
  %9531 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9532 = call ptr @Builtins__structGet(ptr %997, ptr %9531)
  %9533 = load ptr, ptr @tag_Equals, align 8
  %9534 = call ptr @Builtins__structGet(ptr %997, ptr %9533)
  %9535 = load ptr, ptr @tag_TypeOf, align 8
  %9536 = call ptr @Builtins__structGet(ptr %997, ptr %9535)
  %9537 = load ptr, ptr @tag_IfElse, align 8
  %9538 = call ptr @Builtins__structGet(ptr %997, ptr %9537)
  %9539 = load ptr, ptr @tag_Equals, align 8
  %9540 = call ptr @Builtins__structGet(ptr %997, ptr %9539)
  %9541 = load ptr, ptr @tag_Equals, align 8
  %9542 = call ptr @Builtins__structGet(ptr %997, ptr %9541)
  %9543 = load ptr, ptr @tag_TypeOf, align 8
  %9544 = call ptr @Builtins__structGet(ptr %997, ptr %9543)
  %9545 = load ptr, ptr @tag_IntAdd, align 8
  %9546 = call ptr @Builtins__structGet(ptr %997, ptr %9545)
  %9547 = load ptr, ptr @tag_IntSubtract, align 8
  %9548 = call ptr @Builtins__structGet(ptr %997, ptr %9547)
  %9549 = load ptr, ptr @tag_IntMultiply, align 8
  %9550 = call ptr @Builtins__structGet(ptr %997, ptr %9549)
  %9551 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %9552 = call ptr @Builtins__structGet(ptr %997, ptr %9551)
  %9553 = load ptr, ptr @tag_IntRemainder, align 8
  %9554 = call ptr @Builtins__structGet(ptr %997, ptr %9553)
  %9555 = load ptr, ptr @tag_IntModulo, align 8
  %9556 = call ptr @Builtins__structGet(ptr %997, ptr %9555)
  %9557 = load ptr, ptr @tag_IntShiftLeft, align 8
  %9558 = call ptr @Builtins__structGet(ptr %997, ptr %9557)
  %9559 = load ptr, ptr @tag_IntShiftRight, align 8
  %9560 = call ptr @Builtins__structGet(ptr %997, ptr %9559)
  %9561 = load ptr, ptr @tag_IntBitLength, align 8
  %9562 = call ptr @Builtins__structGet(ptr %997, ptr %9561)
  %9563 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %9564 = call ptr @Builtins__structGet(ptr %997, ptr %9563)
  %9565 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %9566 = call ptr @Builtins__structGet(ptr %997, ptr %9565)
  %9567 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %9568 = call ptr @Builtins__structGet(ptr %997, ptr %9567)
  %9569 = load ptr, ptr @tag_IntParse, align 8
  %9570 = call ptr @Builtins__structGet(ptr %997, ptr %9569)
  %9571 = load ptr, ptr @tag_Equals, align 8
  %9572 = call ptr @Builtins__structGet(ptr %997, ptr %9571)
  %9573 = load ptr, ptr @tag_Equals, align 8
  %9574 = call ptr @Builtins__structGet(ptr %997, ptr %9573)
  %9575 = load ptr, ptr @tag_Equals, align 8
  %9576 = call ptr @Builtins__structGet(ptr %997, ptr %9575)
  %9577 = load ptr, ptr @tag_TypeOf, align 8
  %9578 = call ptr @Builtins__structGet(ptr %997, ptr %9577)
  %9579 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9580 = call ptr @Builtins__structGet(ptr %997, ptr %9579)
  %9581 = load ptr, ptr @tag_Equals, align 8
  %9582 = call ptr @Builtins__structGet(ptr %997, ptr %9581)
  %9583 = load ptr, ptr @tag_TypeOf, align 8
  %9584 = call ptr @Builtins__structGet(ptr %997, ptr %9583)
  %9585 = load ptr, ptr @tag_Equals, align 8
  %9586 = call ptr @Builtins__structGet(ptr %997, ptr %9585)
  %9587 = load ptr, ptr @tag_Equals, align 8
  %9588 = call ptr @Builtins__structGet(ptr %997, ptr %9587)
  %9589 = load ptr, ptr @tag_Equals, align 8
  %9590 = call ptr @Builtins__structGet(ptr %997, ptr %9589)
  %9591 = load ptr, ptr @tag_TypeOf, align 8
  %9592 = call ptr @Builtins__structGet(ptr %997, ptr %9591)
  %9593 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9594 = call ptr @Builtins__structGet(ptr %997, ptr %9593)
  %9595 = load ptr, ptr @tag_Equals, align 8
  %9596 = call ptr @Builtins__structGet(ptr %997, ptr %9595)
  %9597 = load ptr, ptr @tag_TypeOf, align 8
  %9598 = call ptr @Builtins__structGet(ptr %997, ptr %9597)
  %9599 = load ptr, ptr @tag_Equals, align 8
  %9600 = call ptr @Builtins__structGet(ptr %997, ptr %9599)
  %9601 = load ptr, ptr @tag_Equals, align 8
  %9602 = call ptr @Builtins__structGet(ptr %997, ptr %9601)
  %9603 = load ptr, ptr @tag_Equals, align 8
  %9604 = call ptr @Builtins__structGet(ptr %997, ptr %9603)
  %9605 = load ptr, ptr @tag_TypeOf, align 8
  %9606 = call ptr @Builtins__structGet(ptr %997, ptr %9605)
  %9607 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9608 = call ptr @Builtins__structGet(ptr %997, ptr %9607)
  %9609 = load ptr, ptr @tag_Equals, align 8
  %9610 = call ptr @Builtins__structGet(ptr %997, ptr %9609)
  %9611 = load ptr, ptr @tag_TypeOf, align 8
  %9612 = call ptr @Builtins__structGet(ptr %997, ptr %9611)
  %9613 = load ptr, ptr @tag_IfElse, align 8
  %9614 = call ptr @Builtins__structGet(ptr %997, ptr %9613)
  %9615 = load ptr, ptr @tag_Equals, align 8
  %9616 = call ptr @Builtins__structGet(ptr %997, ptr %9615)
  %9617 = load ptr, ptr @tag_Equals, align 8
  %9618 = call ptr @Builtins__structGet(ptr %997, ptr %9617)
  %9619 = load ptr, ptr @tag_Equals, align 8
  %9620 = call ptr @Builtins__structGet(ptr %997, ptr %9619)
  %9621 = load ptr, ptr @tag_TypeOf, align 8
  %9622 = call ptr @Builtins__structGet(ptr %997, ptr %9621)
  %9623 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9624 = call ptr @Builtins__structGet(ptr %997, ptr %9623)
  %9625 = load ptr, ptr @tag_Equals, align 8
  %9626 = call ptr @Builtins__structGet(ptr %997, ptr %9625)
  %9627 = load ptr, ptr @tag_Equals, align 8
  %9628 = call ptr @Builtins__structGet(ptr %997, ptr %9627)
  %9629 = load ptr, ptr @tag_Equals, align 8
  %9630 = call ptr @Builtins__structGet(ptr %997, ptr %9629)
  %9631 = load ptr, ptr @tag_TypeOf, align 8
  %9632 = call ptr @Builtins__structGet(ptr %997, ptr %9631)
  %9633 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9634 = call ptr @Builtins__structGet(ptr %997, ptr %9633)
  %9635 = load ptr, ptr @tag_Equals, align 8
  %9636 = call ptr @Builtins__structGet(ptr %997, ptr %9635)
  %9637 = load ptr, ptr @tag_TypeOf, align 8
  %9638 = call ptr @Builtins__structGet(ptr %997, ptr %9637)
  %9639 = load ptr, ptr @tag_Equals, align 8
  %9640 = call ptr @Builtins__structGet(ptr %997, ptr %9639)
  %9641 = load ptr, ptr @tag_Equals, align 8
  %9642 = call ptr @Builtins__structGet(ptr %997, ptr %9641)
  %9643 = load ptr, ptr @tag_Equals, align 8
  %9644 = call ptr @Builtins__structGet(ptr %997, ptr %9643)
  %9645 = load ptr, ptr @tag_TypeOf, align 8
  %9646 = call ptr @Builtins__structGet(ptr %997, ptr %9645)
  %9647 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9648 = call ptr @Builtins__structGet(ptr %997, ptr %9647)
  %9649 = load ptr, ptr @tag_Equals, align 8
  %9650 = call ptr @Builtins__structGet(ptr %997, ptr %9649)
  %9651 = load ptr, ptr @tag_TypeOf, align 8
  %9652 = call ptr @Builtins__structGet(ptr %997, ptr %9651)
  %9653 = load ptr, ptr @tag_IfElse, align 8
  %9654 = call ptr @Builtins__structGet(ptr %997, ptr %9653)
  %9655 = load ptr, ptr @tag_Equals, align 8
  %9656 = call ptr @Builtins__structGet(ptr %997, ptr %9655)
  %9657 = load ptr, ptr @tag_TypeOf, align 8
  %9658 = call ptr @Builtins__structGet(ptr %997, ptr %9657)
  %9659 = load ptr, ptr @tag_Equals, align 8
  %9660 = call ptr @Builtins__structGet(ptr %997, ptr %9659)
  %9661 = load ptr, ptr @tag_Equals, align 8
  %9662 = call ptr @Builtins__structGet(ptr %997, ptr %9661)
  %9663 = load ptr, ptr @tag_Equals, align 8
  %9664 = call ptr @Builtins__structGet(ptr %997, ptr %9663)
  %9665 = load ptr, ptr @tag_TypeOf, align 8
  %9666 = call ptr @Builtins__structGet(ptr %997, ptr %9665)
  %9667 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9668 = call ptr @Builtins__structGet(ptr %997, ptr %9667)
  %9669 = load ptr, ptr @tag_Equals, align 8
  %9670 = call ptr @Builtins__structGet(ptr %997, ptr %9669)
  %9671 = load ptr, ptr @tag_TypeOf, align 8
  %9672 = call ptr @Builtins__structGet(ptr %997, ptr %9671)
  %9673 = load ptr, ptr @tag_Equals, align 8
  %9674 = call ptr @Builtins__structGet(ptr %997, ptr %9673)
  %9675 = load ptr, ptr @tag_Equals, align 8
  %9676 = call ptr @Builtins__structGet(ptr %997, ptr %9675)
  %9677 = load ptr, ptr @tag_Equals, align 8
  %9678 = call ptr @Builtins__structGet(ptr %997, ptr %9677)
  %9679 = load ptr, ptr @tag_TypeOf, align 8
  %9680 = call ptr @Builtins__structGet(ptr %997, ptr %9679)
  %9681 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9682 = call ptr @Builtins__structGet(ptr %997, ptr %9681)
  %9683 = load ptr, ptr @tag_Equals, align 8
  %9684 = call ptr @Builtins__structGet(ptr %997, ptr %9683)
  %9685 = load ptr, ptr @tag_TypeOf, align 8
  %9686 = call ptr @Builtins__structGet(ptr %997, ptr %9685)
  %9687 = load ptr, ptr @tag_Equals, align 8
  %9688 = call ptr @Builtins__structGet(ptr %997, ptr %9687)
  %9689 = load ptr, ptr @tag_Equals, align 8
  %9690 = call ptr @Builtins__structGet(ptr %997, ptr %9689)
  %9691 = load ptr, ptr @tag_Equals, align 8
  %9692 = call ptr @Builtins__structGet(ptr %997, ptr %9691)
  %9693 = load ptr, ptr @tag_TypeOf, align 8
  %9694 = call ptr @Builtins__structGet(ptr %997, ptr %9693)
  %9695 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9696 = call ptr @Builtins__structGet(ptr %997, ptr %9695)
  %9697 = load ptr, ptr @tag_Equals, align 8
  %9698 = call ptr @Builtins__structGet(ptr %997, ptr %9697)
  %9699 = load ptr, ptr @tag_TypeOf, align 8
  %9700 = call ptr @Builtins__structGet(ptr %997, ptr %9699)
  %9701 = load ptr, ptr @tag_IfElse, align 8
  %9702 = call ptr @Builtins__structGet(ptr %997, ptr %9701)
  %9703 = load ptr, ptr @tag_Equals, align 8
  %9704 = call ptr @Builtins__structGet(ptr %997, ptr %9703)
  %9705 = load ptr, ptr @tag_TypeOf, align 8
  %9706 = call ptr @Builtins__structGet(ptr %997, ptr %9705)
  %9707 = load ptr, ptr @tag_TagHasValue, align 8
  %9708 = call ptr @Builtins__structGet(ptr %997, ptr %9707)
  %9709 = load ptr, ptr @tag_TagWithoutValue, align 8
  %9710 = call ptr @Builtins__structGet(ptr %997, ptr %9709)
  %9711 = load ptr, ptr @tag_TagGetValue, align 8
  %9712 = call ptr @Builtins__structGet(ptr %997, ptr %9711)
  %9713 = load ptr, ptr @tag_Equals, align 8
  %9714 = call ptr @Builtins__structGet(ptr %997, ptr %9713)
  %9715 = load ptr, ptr @tag_TypeOf, align 8
  %9716 = call ptr @Builtins__structGet(ptr %997, ptr %9715)
  %9717 = load ptr, ptr @tag_Equals, align 8
  %9718 = call ptr @Builtins__structGet(ptr %997, ptr %9717)
  %9719 = load ptr, ptr @tag_TypeOf, align 8
  %9720 = call ptr @Builtins__structGet(ptr %997, ptr %9719)
  %9721 = load ptr, ptr @tag_ListLength, align 8
  %9722 = call ptr @Builtins__structGet(ptr %997, ptr %9721)
  %9723 = load ptr, ptr @tag_ListGet, align 8
  %9724 = call ptr @Builtins__structGet(ptr %997, ptr %9723)
  %9725 = load ptr, ptr @tag_ListInsert, align 8
  %9726 = call ptr @Builtins__structGet(ptr %997, ptr %9725)
  %9727 = load ptr, ptr @tag_ListReplace, align 8
  %9728 = call ptr @Builtins__structGet(ptr %997, ptr %9727)
  %9729 = load ptr, ptr @tag_ListRemoveAt, align 8
  %9730 = call ptr @Builtins__structGet(ptr %997, ptr %9729)
  %9731 = load ptr, ptr @tag_ListFilled, align 8
  %9732 = call ptr @Builtins__structGet(ptr %997, ptr %9731)
  %9733 = load ptr, ptr @tag_Equals, align 8
  %9734 = call ptr @Builtins__structGet(ptr %997, ptr %9733)
  %9735 = load ptr, ptr @tag_Equals, align 8
  %9736 = call ptr @Builtins__structGet(ptr %997, ptr %9735)
  %9737 = load ptr, ptr @tag_Equals, align 8
  %9738 = call ptr @Builtins__structGet(ptr %997, ptr %9737)
  %9739 = load ptr, ptr @tag_TypeOf, align 8
  %9740 = call ptr @Builtins__structGet(ptr %997, ptr %9739)
  %9741 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9742 = call ptr @Builtins__structGet(ptr %997, ptr %9741)
  %9743 = load ptr, ptr @tag_Equals, align 8
  %9744 = call ptr @Builtins__structGet(ptr %997, ptr %9743)
  %9745 = load ptr, ptr @tag_TypeOf, align 8
  %9746 = call ptr @Builtins__structGet(ptr %997, ptr %9745)
  %9747 = load ptr, ptr @tag_Equals, align 8
  %9748 = call ptr @Builtins__structGet(ptr %997, ptr %9747)
  %9749 = load ptr, ptr @tag_Equals, align 8
  %9750 = call ptr @Builtins__structGet(ptr %997, ptr %9749)
  %9751 = load ptr, ptr @tag_Equals, align 8
  %9752 = call ptr @Builtins__structGet(ptr %997, ptr %9751)
  %9753 = load ptr, ptr @tag_TypeOf, align 8
  %9754 = call ptr @Builtins__structGet(ptr %997, ptr %9753)
  %9755 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9756 = call ptr @Builtins__structGet(ptr %997, ptr %9755)
  %9757 = load ptr, ptr @tag_Equals, align 8
  %9758 = call ptr @Builtins__structGet(ptr %997, ptr %9757)
  %9759 = load ptr, ptr @tag_TypeOf, align 8
  %9760 = call ptr @Builtins__structGet(ptr %997, ptr %9759)
  %9761 = load ptr, ptr @tag_Equals, align 8
  %9762 = call ptr @Builtins__structGet(ptr %997, ptr %9761)
  %9763 = load ptr, ptr @tag_Equals, align 8
  %9764 = call ptr @Builtins__structGet(ptr %997, ptr %9763)
  %9765 = load ptr, ptr @tag_Equals, align 8
  %9766 = call ptr @Builtins__structGet(ptr %997, ptr %9765)
  %9767 = load ptr, ptr @tag_TypeOf, align 8
  %9768 = call ptr @Builtins__structGet(ptr %997, ptr %9767)
  %9769 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9770 = call ptr @Builtins__structGet(ptr %997, ptr %9769)
  %9771 = load ptr, ptr @tag_Equals, align 8
  %9772 = call ptr @Builtins__structGet(ptr %997, ptr %9771)
  %9773 = load ptr, ptr @tag_TypeOf, align 8
  %9774 = call ptr @Builtins__structGet(ptr %997, ptr %9773)
  %9775 = load ptr, ptr @tag_IfElse, align 8
  %9776 = call ptr @Builtins__structGet(ptr %997, ptr %9775)
  %9777 = load ptr, ptr @tag_Equals, align 8
  %9778 = call ptr @Builtins__structGet(ptr %997, ptr %9777)
  %9779 = load ptr, ptr @tag_Equals, align 8
  %9780 = call ptr @Builtins__structGet(ptr %997, ptr %9779)
  %9781 = load ptr, ptr @tag_Equals, align 8
  %9782 = call ptr @Builtins__structGet(ptr %997, ptr %9781)
  %9783 = load ptr, ptr @tag_Equals, align 8
  %9784 = call ptr @Builtins__structGet(ptr %997, ptr %9783)
  %9785 = load ptr, ptr @tag_TypeOf, align 8
  %9786 = call ptr @Builtins__structGet(ptr %997, ptr %9785)
  %9787 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9788 = call ptr @Builtins__structGet(ptr %997, ptr %9787)
  %9789 = load ptr, ptr @tag_Equals, align 8
  %9790 = call ptr @Builtins__structGet(ptr %997, ptr %9789)
  %9791 = load ptr, ptr @tag_TypeOf, align 8
  %9792 = call ptr @Builtins__structGet(ptr %997, ptr %9791)
  %9793 = load ptr, ptr @tag_Equals, align 8
  %9794 = call ptr @Builtins__structGet(ptr %997, ptr %9793)
  %9795 = load ptr, ptr @tag_Equals, align 8
  %9796 = call ptr @Builtins__structGet(ptr %997, ptr %9795)
  %9797 = load ptr, ptr @tag_Equals, align 8
  %9798 = call ptr @Builtins__structGet(ptr %997, ptr %9797)
  %9799 = load ptr, ptr @tag_TypeOf, align 8
  %9800 = call ptr @Builtins__structGet(ptr %997, ptr %9799)
  %9801 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9802 = call ptr @Builtins__structGet(ptr %997, ptr %9801)
  %9803 = load ptr, ptr @tag_Equals, align 8
  %9804 = call ptr @Builtins__structGet(ptr %997, ptr %9803)
  %9805 = load ptr, ptr @tag_TypeOf, align 8
  %9806 = call ptr @Builtins__structGet(ptr %997, ptr %9805)
  %9807 = load ptr, ptr @tag_Equals, align 8
  %9808 = call ptr @Builtins__structGet(ptr %997, ptr %9807)
  %9809 = load ptr, ptr @tag_Equals, align 8
  %9810 = call ptr @Builtins__structGet(ptr %997, ptr %9809)
  %9811 = load ptr, ptr @tag_Equals, align 8
  %9812 = call ptr @Builtins__structGet(ptr %997, ptr %9811)
  %9813 = load ptr, ptr @tag_TypeOf, align 8
  %9814 = call ptr @Builtins__structGet(ptr %997, ptr %9813)
  %9815 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9816 = call ptr @Builtins__structGet(ptr %997, ptr %9815)
  %9817 = load ptr, ptr @tag_Equals, align 8
  %9818 = call ptr @Builtins__structGet(ptr %997, ptr %9817)
  %9819 = load ptr, ptr @tag_TypeOf, align 8
  %9820 = call ptr @Builtins__structGet(ptr %997, ptr %9819)
  %9821 = load ptr, ptr @tag_Equals, align 8
  %9822 = call ptr @Builtins__structGet(ptr %997, ptr %9821)
  %9823 = load ptr, ptr @tag_Equals, align 8
  %9824 = call ptr @Builtins__structGet(ptr %997, ptr %9823)
  %9825 = load ptr, ptr @tag_Equals, align 8
  %9826 = call ptr @Builtins__structGet(ptr %997, ptr %9825)
  %9827 = load ptr, ptr @tag_TypeOf, align 8
  %9828 = call ptr @Builtins__structGet(ptr %997, ptr %9827)
  %9829 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9830 = call ptr @Builtins__structGet(ptr %997, ptr %9829)
  %9831 = load ptr, ptr @tag_Equals, align 8
  %9832 = call ptr @Builtins__structGet(ptr %997, ptr %9831)
  %9833 = load ptr, ptr @tag_TypeOf, align 8
  %9834 = call ptr @Builtins__structGet(ptr %997, ptr %9833)
  %9835 = load ptr, ptr @tag_IfElse, align 8
  %9836 = call ptr @Builtins__structGet(ptr %997, ptr %9835)
  %9837 = load ptr, ptr @tag_Equals, align 8
  %9838 = call ptr @Builtins__structGet(ptr %997, ptr %9837)
  %9839 = load ptr, ptr @tag_Equals, align 8
  %9840 = call ptr @Builtins__structGet(ptr %997, ptr %9839)
  %9841 = load ptr, ptr @tag_Equals, align 8
  %9842 = call ptr @Builtins__structGet(ptr %997, ptr %9841)
  %9843 = load ptr, ptr @tag_TypeOf, align 8
  %9844 = call ptr @Builtins__structGet(ptr %997, ptr %9843)
  %9845 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9846 = call ptr @Builtins__structGet(ptr %997, ptr %9845)
  %9847 = load ptr, ptr @tag_Equals, align 8
  %9848 = call ptr @Builtins__structGet(ptr %997, ptr %9847)
  %9849 = load ptr, ptr @tag_TypeOf, align 8
  %9850 = call ptr @Builtins__structGet(ptr %997, ptr %9849)
  %9851 = load ptr, ptr @tag_Equals, align 8
  %9852 = call ptr @Builtins__structGet(ptr %997, ptr %9851)
  %9853 = load ptr, ptr @tag_Equals, align 8
  %9854 = call ptr @Builtins__structGet(ptr %997, ptr %9853)
  %9855 = load ptr, ptr @tag_Equals, align 8
  %9856 = call ptr @Builtins__structGet(ptr %997, ptr %9855)
  %9857 = load ptr, ptr @tag_TypeOf, align 8
  %9858 = call ptr @Builtins__structGet(ptr %997, ptr %9857)
  %9859 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9860 = call ptr @Builtins__structGet(ptr %997, ptr %9859)
  %9861 = load ptr, ptr @tag_Equals, align 8
  %9862 = call ptr @Builtins__structGet(ptr %997, ptr %9861)
  %9863 = load ptr, ptr @tag_TypeOf, align 8
  %9864 = call ptr @Builtins__structGet(ptr %997, ptr %9863)
  %9865 = load ptr, ptr @tag_IfElse, align 8
  %9866 = call ptr @Builtins__structGet(ptr %997, ptr %9865)
  %9867 = load ptr, ptr @tag_Equals, align 8
  %9868 = call ptr @Builtins__structGet(ptr %997, ptr %9867)
  %9869 = load ptr, ptr @tag_Equals, align 8
  %9870 = call ptr @Builtins__structGet(ptr %997, ptr %9869)
  %9871 = load ptr, ptr @tag_TypeOf, align 8
  %9872 = call ptr @Builtins__structGet(ptr %997, ptr %9871)
  %9873 = load ptr, ptr @tag_IntAdd, align 8
  %9874 = call ptr @Builtins__structGet(ptr %997, ptr %9873)
  %9875 = load ptr, ptr @tag_IntSubtract, align 8
  %9876 = call ptr @Builtins__structGet(ptr %997, ptr %9875)
  %9877 = load ptr, ptr @tag_IntMultiply, align 8
  %9878 = call ptr @Builtins__structGet(ptr %997, ptr %9877)
  %9879 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %9880 = call ptr @Builtins__structGet(ptr %997, ptr %9879)
  %9881 = load ptr, ptr @tag_IntRemainder, align 8
  %9882 = call ptr @Builtins__structGet(ptr %997, ptr %9881)
  %9883 = load ptr, ptr @tag_IntModulo, align 8
  %9884 = call ptr @Builtins__structGet(ptr %997, ptr %9883)
  %9885 = load ptr, ptr @tag_IntShiftLeft, align 8
  %9886 = call ptr @Builtins__structGet(ptr %997, ptr %9885)
  %9887 = load ptr, ptr @tag_IntShiftRight, align 8
  %9888 = call ptr @Builtins__structGet(ptr %997, ptr %9887)
  %9889 = load ptr, ptr @tag_IntBitLength, align 8
  %9890 = call ptr @Builtins__structGet(ptr %997, ptr %9889)
  %9891 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %9892 = call ptr @Builtins__structGet(ptr %997, ptr %9891)
  %9893 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %9894 = call ptr @Builtins__structGet(ptr %997, ptr %9893)
  %9895 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %9896 = call ptr @Builtins__structGet(ptr %997, ptr %9895)
  %9897 = load ptr, ptr @tag_IntParse, align 8
  %9898 = call ptr @Builtins__structGet(ptr %997, ptr %9897)
  %9899 = load ptr, ptr @tag_Equals, align 8
  %9900 = call ptr @Builtins__structGet(ptr %997, ptr %9899)
  %9901 = load ptr, ptr @tag_Equals, align 8
  %9902 = call ptr @Builtins__structGet(ptr %997, ptr %9901)
  %9903 = load ptr, ptr @tag_Equals, align 8
  %9904 = call ptr @Builtins__structGet(ptr %997, ptr %9903)
  %9905 = load ptr, ptr @tag_TypeOf, align 8
  %9906 = call ptr @Builtins__structGet(ptr %997, ptr %9905)
  %9907 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9908 = call ptr @Builtins__structGet(ptr %997, ptr %9907)
  %9909 = load ptr, ptr @tag_Equals, align 8
  %9910 = call ptr @Builtins__structGet(ptr %997, ptr %9909)
  %9911 = load ptr, ptr @tag_TypeOf, align 8
  %9912 = call ptr @Builtins__structGet(ptr %997, ptr %9911)
  %9913 = load ptr, ptr @tag_Equals, align 8
  %9914 = call ptr @Builtins__structGet(ptr %997, ptr %9913)
  %9915 = load ptr, ptr @tag_Equals, align 8
  %9916 = call ptr @Builtins__structGet(ptr %997, ptr %9915)
  %9917 = load ptr, ptr @tag_Equals, align 8
  %9918 = call ptr @Builtins__structGet(ptr %997, ptr %9917)
  %9919 = load ptr, ptr @tag_TypeOf, align 8
  %9920 = call ptr @Builtins__structGet(ptr %997, ptr %9919)
  %9921 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9922 = call ptr @Builtins__structGet(ptr %997, ptr %9921)
  %9923 = load ptr, ptr @tag_Equals, align 8
  %9924 = call ptr @Builtins__structGet(ptr %997, ptr %9923)
  %9925 = load ptr, ptr @tag_TypeOf, align 8
  %9926 = call ptr @Builtins__structGet(ptr %997, ptr %9925)
  %9927 = load ptr, ptr @tag_Equals, align 8
  %9928 = call ptr @Builtins__structGet(ptr %997, ptr %9927)
  %9929 = load ptr, ptr @tag_Equals, align 8
  %9930 = call ptr @Builtins__structGet(ptr %997, ptr %9929)
  %9931 = load ptr, ptr @tag_Equals, align 8
  %9932 = call ptr @Builtins__structGet(ptr %997, ptr %9931)
  %9933 = load ptr, ptr @tag_TypeOf, align 8
  %9934 = call ptr @Builtins__structGet(ptr %997, ptr %9933)
  %9935 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9936 = call ptr @Builtins__structGet(ptr %997, ptr %9935)
  %9937 = load ptr, ptr @tag_Equals, align 8
  %9938 = call ptr @Builtins__structGet(ptr %997, ptr %9937)
  %9939 = load ptr, ptr @tag_TypeOf, align 8
  %9940 = call ptr @Builtins__structGet(ptr %997, ptr %9939)
  %9941 = load ptr, ptr @tag_IfElse, align 8
  %9942 = call ptr @Builtins__structGet(ptr %997, ptr %9941)
  %9943 = load ptr, ptr @tag_Equals, align 8
  %9944 = call ptr @Builtins__structGet(ptr %997, ptr %9943)
  %9945 = load ptr, ptr @tag_Equals, align 8
  %9946 = call ptr @Builtins__structGet(ptr %997, ptr %9945)
  %9947 = load ptr, ptr @tag_Equals, align 8
  %9948 = call ptr @Builtins__structGet(ptr %997, ptr %9947)
  %9949 = load ptr, ptr @tag_TypeOf, align 8
  %9950 = call ptr @Builtins__structGet(ptr %997, ptr %9949)
  %9951 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9952 = call ptr @Builtins__structGet(ptr %997, ptr %9951)
  %9953 = load ptr, ptr @tag_Equals, align 8
  %9954 = call ptr @Builtins__structGet(ptr %997, ptr %9953)
  %9955 = load ptr, ptr @tag_Equals, align 8
  %9956 = call ptr @Builtins__structGet(ptr %997, ptr %9955)
  %9957 = load ptr, ptr @tag_Equals, align 8
  %9958 = call ptr @Builtins__structGet(ptr %997, ptr %9957)
  %9959 = load ptr, ptr @tag_TypeOf, align 8
  %9960 = call ptr @Builtins__structGet(ptr %997, ptr %9959)
  %9961 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9962 = call ptr @Builtins__structGet(ptr %997, ptr %9961)
  %9963 = load ptr, ptr @tag_Equals, align 8
  %9964 = call ptr @Builtins__structGet(ptr %997, ptr %9963)
  %9965 = load ptr, ptr @tag_TypeOf, align 8
  %9966 = call ptr @Builtins__structGet(ptr %997, ptr %9965)
  %9967 = load ptr, ptr @tag_Equals, align 8
  %9968 = call ptr @Builtins__structGet(ptr %997, ptr %9967)
  %9969 = load ptr, ptr @tag_Equals, align 8
  %9970 = call ptr @Builtins__structGet(ptr %997, ptr %9969)
  %9971 = load ptr, ptr @tag_Equals, align 8
  %9972 = call ptr @Builtins__structGet(ptr %997, ptr %9971)
  %9973 = load ptr, ptr @tag_TypeOf, align 8
  %9974 = call ptr @Builtins__structGet(ptr %997, ptr %9973)
  %9975 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9976 = call ptr @Builtins__structGet(ptr %997, ptr %9975)
  %9977 = load ptr, ptr @tag_Equals, align 8
  %9978 = call ptr @Builtins__structGet(ptr %997, ptr %9977)
  %9979 = load ptr, ptr @tag_TypeOf, align 8
  %9980 = call ptr @Builtins__structGet(ptr %997, ptr %9979)
  %9981 = load ptr, ptr @tag_Equals, align 8
  %9982 = call ptr @Builtins__structGet(ptr %997, ptr %9981)
  %9983 = load ptr, ptr @tag_Equals, align 8
  %9984 = call ptr @Builtins__structGet(ptr %997, ptr %9983)
  %9985 = load ptr, ptr @tag_Equals, align 8
  %9986 = call ptr @Builtins__structGet(ptr %997, ptr %9985)
  %9987 = load ptr, ptr @tag_TypeOf, align 8
  %9988 = call ptr @Builtins__structGet(ptr %997, ptr %9987)
  %9989 = load ptr, ptr @tag_GetArgumentCount, align 8
  %9990 = call ptr @Builtins__structGet(ptr %997, ptr %9989)
  %9991 = load ptr, ptr @tag_Equals, align 8
  %9992 = call ptr @Builtins__structGet(ptr %997, ptr %9991)
  %9993 = load ptr, ptr @tag_TypeOf, align 8
  %9994 = call ptr @Builtins__structGet(ptr %997, ptr %9993)
  %9995 = load ptr, ptr @tag_Equals, align 8
  %9996 = call ptr @Builtins__structGet(ptr %997, ptr %9995)
  %9997 = load ptr, ptr @tag_Equals, align 8
  %9998 = call ptr @Builtins__structGet(ptr %997, ptr %9997)
  %9999 = load ptr, ptr @tag_Equals, align 8
  %10000 = call ptr @Builtins__structGet(ptr %997, ptr %9999)
  %10001 = load ptr, ptr @tag_TypeOf, align 8
  %10002 = call ptr @Builtins__structGet(ptr %997, ptr %10001)
  %10003 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10004 = call ptr @Builtins__structGet(ptr %997, ptr %10003)
  %10005 = load ptr, ptr @tag_Equals, align 8
  %10006 = call ptr @Builtins__structGet(ptr %997, ptr %10005)
  %10007 = load ptr, ptr @tag_TypeOf, align 8
  %10008 = call ptr @Builtins__structGet(ptr %997, ptr %10007)
  %10009 = load ptr, ptr @tag_IfElse, align 8
  %10010 = call ptr @Builtins__structGet(ptr %997, ptr %10009)
  %10011 = load ptr, ptr @tag_Equals, align 8
  %10012 = call ptr @Builtins__structGet(ptr %997, ptr %10011)
  %10013 = load ptr, ptr @tag_Equals, align 8
  %10014 = call ptr @Builtins__structGet(ptr %997, ptr %10013)
  %10015 = load ptr, ptr @tag_Equals, align 8
  %10016 = call ptr @Builtins__structGet(ptr %997, ptr %10015)
  %10017 = load ptr, ptr @tag_TypeOf, align 8
  %10018 = call ptr @Builtins__structGet(ptr %997, ptr %10017)
  %10019 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10020 = call ptr @Builtins__structGet(ptr %997, ptr %10019)
  %10021 = load ptr, ptr @tag_Equals, align 8
  %10022 = call ptr @Builtins__structGet(ptr %997, ptr %10021)
  %10023 = load ptr, ptr @tag_TypeOf, align 8
  %10024 = call ptr @Builtins__structGet(ptr %997, ptr %10023)
  %10025 = load ptr, ptr @tag_Equals, align 8
  %10026 = call ptr @Builtins__structGet(ptr %997, ptr %10025)
  %10027 = load ptr, ptr @tag_Equals, align 8
  %10028 = call ptr @Builtins__structGet(ptr %997, ptr %10027)
  %10029 = load ptr, ptr @tag_Equals, align 8
  %10030 = call ptr @Builtins__structGet(ptr %997, ptr %10029)
  %10031 = load ptr, ptr @tag_TypeOf, align 8
  %10032 = call ptr @Builtins__structGet(ptr %997, ptr %10031)
  %10033 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10034 = call ptr @Builtins__structGet(ptr %997, ptr %10033)
  %10035 = load ptr, ptr @tag_Equals, align 8
  %10036 = call ptr @Builtins__structGet(ptr %997, ptr %10035)
  %10037 = load ptr, ptr @tag_TypeOf, align 8
  %10038 = call ptr @Builtins__structGet(ptr %997, ptr %10037)
  %10039 = load ptr, ptr @tag_IfElse, align 8
  %10040 = call ptr @Builtins__structGet(ptr %997, ptr %10039)
  %10041 = load ptr, ptr @tag_Equals, align 8
  %10042 = call ptr @Builtins__structGet(ptr %997, ptr %10041)
  %10043 = load ptr, ptr @tag_Equals, align 8
  %10044 = call ptr @Builtins__structGet(ptr %997, ptr %10043)
  %10045 = load ptr, ptr @tag_TypeOf, align 8
  %10046 = call ptr @Builtins__structGet(ptr %997, ptr %10045)
  %10047 = load ptr, ptr @tag_IntAdd, align 8
  %10048 = call ptr @Builtins__structGet(ptr %997, ptr %10047)
  %10049 = load ptr, ptr @tag_IntSubtract, align 8
  %10050 = call ptr @Builtins__structGet(ptr %997, ptr %10049)
  %10051 = load ptr, ptr @tag_IntMultiply, align 8
  %10052 = call ptr @Builtins__structGet(ptr %997, ptr %10051)
  %10053 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %10054 = call ptr @Builtins__structGet(ptr %997, ptr %10053)
  %10055 = load ptr, ptr @tag_IntRemainder, align 8
  %10056 = call ptr @Builtins__structGet(ptr %997, ptr %10055)
  %10057 = load ptr, ptr @tag_IntModulo, align 8
  %10058 = call ptr @Builtins__structGet(ptr %997, ptr %10057)
  %10059 = load ptr, ptr @tag_IntShiftLeft, align 8
  %10060 = call ptr @Builtins__structGet(ptr %997, ptr %10059)
  %10061 = load ptr, ptr @tag_IntShiftRight, align 8
  %10062 = call ptr @Builtins__structGet(ptr %997, ptr %10061)
  %10063 = load ptr, ptr @tag_IntBitLength, align 8
  %10064 = call ptr @Builtins__structGet(ptr %997, ptr %10063)
  %10065 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %10066 = call ptr @Builtins__structGet(ptr %997, ptr %10065)
  %10067 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %10068 = call ptr @Builtins__structGet(ptr %997, ptr %10067)
  %10069 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %10070 = call ptr @Builtins__structGet(ptr %997, ptr %10069)
  %10071 = load ptr, ptr @tag_IntParse, align 8
  %10072 = call ptr @Builtins__structGet(ptr %997, ptr %10071)
  %10073 = load ptr, ptr @tag_Equals, align 8
  %10074 = call ptr @Builtins__structGet(ptr %997, ptr %10073)
  %10075 = load ptr, ptr @tag_Equals, align 8
  %10076 = call ptr @Builtins__structGet(ptr %997, ptr %10075)
  %10077 = load ptr, ptr @tag_Equals, align 8
  %10078 = call ptr @Builtins__structGet(ptr %997, ptr %10077)
  %10079 = load ptr, ptr @tag_TypeOf, align 8
  %10080 = call ptr @Builtins__structGet(ptr %997, ptr %10079)
  %10081 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10082 = call ptr @Builtins__structGet(ptr %997, ptr %10081)
  %10083 = load ptr, ptr @tag_Equals, align 8
  %10084 = call ptr @Builtins__structGet(ptr %997, ptr %10083)
  %10085 = load ptr, ptr @tag_TypeOf, align 8
  %10086 = call ptr @Builtins__structGet(ptr %997, ptr %10085)
  %10087 = load ptr, ptr @tag_Equals, align 8
  %10088 = call ptr @Builtins__structGet(ptr %997, ptr %10087)
  %10089 = load ptr, ptr @tag_Equals, align 8
  %10090 = call ptr @Builtins__structGet(ptr %997, ptr %10089)
  %10091 = load ptr, ptr @tag_Equals, align 8
  %10092 = call ptr @Builtins__structGet(ptr %997, ptr %10091)
  %10093 = load ptr, ptr @tag_TypeOf, align 8
  %10094 = call ptr @Builtins__structGet(ptr %997, ptr %10093)
  %10095 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10096 = call ptr @Builtins__structGet(ptr %997, ptr %10095)
  %10097 = load ptr, ptr @tag_Equals, align 8
  %10098 = call ptr @Builtins__structGet(ptr %997, ptr %10097)
  %10099 = load ptr, ptr @tag_TypeOf, align 8
  %10100 = call ptr @Builtins__structGet(ptr %997, ptr %10099)
  %10101 = load ptr, ptr @tag_Equals, align 8
  %10102 = call ptr @Builtins__structGet(ptr %997, ptr %10101)
  %10103 = load ptr, ptr @tag_Equals, align 8
  %10104 = call ptr @Builtins__structGet(ptr %997, ptr %10103)
  %10105 = load ptr, ptr @tag_Equals, align 8
  %10106 = call ptr @Builtins__structGet(ptr %997, ptr %10105)
  %10107 = load ptr, ptr @tag_TypeOf, align 8
  %10108 = call ptr @Builtins__structGet(ptr %997, ptr %10107)
  %10109 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10110 = call ptr @Builtins__structGet(ptr %997, ptr %10109)
  %10111 = load ptr, ptr @tag_Equals, align 8
  %10112 = call ptr @Builtins__structGet(ptr %997, ptr %10111)
  %10113 = load ptr, ptr @tag_TypeOf, align 8
  %10114 = call ptr @Builtins__structGet(ptr %997, ptr %10113)
  %10115 = load ptr, ptr @tag_IfElse, align 8
  %10116 = call ptr @Builtins__structGet(ptr %997, ptr %10115)
  %10117 = load ptr, ptr @tag_Equals, align 8
  %10118 = call ptr @Builtins__structGet(ptr %997, ptr %10117)
  %10119 = load ptr, ptr @tag_Equals, align 8
  %10120 = call ptr @Builtins__structGet(ptr %997, ptr %10119)
  %10121 = load ptr, ptr @tag_Equals, align 8
  %10122 = call ptr @Builtins__structGet(ptr %997, ptr %10121)
  %10123 = load ptr, ptr @tag_TypeOf, align 8
  %10124 = call ptr @Builtins__structGet(ptr %997, ptr %10123)
  %10125 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10126 = call ptr @Builtins__structGet(ptr %997, ptr %10125)
  %10127 = load ptr, ptr @tag_Equals, align 8
  %10128 = call ptr @Builtins__structGet(ptr %997, ptr %10127)
  %10129 = load ptr, ptr @tag_Equals, align 8
  %10130 = call ptr @Builtins__structGet(ptr %997, ptr %10129)
  %10131 = load ptr, ptr @tag_Equals, align 8
  %10132 = call ptr @Builtins__structGet(ptr %997, ptr %10131)
  %10133 = load ptr, ptr @tag_TypeOf, align 8
  %10134 = call ptr @Builtins__structGet(ptr %997, ptr %10133)
  %10135 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10136 = call ptr @Builtins__structGet(ptr %997, ptr %10135)
  %10137 = load ptr, ptr @tag_Equals, align 8
  %10138 = call ptr @Builtins__structGet(ptr %997, ptr %10137)
  %10139 = load ptr, ptr @tag_TypeOf, align 8
  %10140 = call ptr @Builtins__structGet(ptr %997, ptr %10139)
  %10141 = load ptr, ptr @tag_Equals, align 8
  %10142 = call ptr @Builtins__structGet(ptr %997, ptr %10141)
  %10143 = load ptr, ptr @tag_Equals, align 8
  %10144 = call ptr @Builtins__structGet(ptr %997, ptr %10143)
  %10145 = load ptr, ptr @tag_Equals, align 8
  %10146 = call ptr @Builtins__structGet(ptr %997, ptr %10145)
  %10147 = load ptr, ptr @tag_TypeOf, align 8
  %10148 = call ptr @Builtins__structGet(ptr %997, ptr %10147)
  %10149 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10150 = call ptr @Builtins__structGet(ptr %997, ptr %10149)
  %10151 = load ptr, ptr @tag_Equals, align 8
  %10152 = call ptr @Builtins__structGet(ptr %997, ptr %10151)
  %10153 = load ptr, ptr @tag_TypeOf, align 8
  %10154 = call ptr @Builtins__structGet(ptr %997, ptr %10153)
  %10155 = load ptr, ptr @tag_IfElse, align 8
  %10156 = call ptr @Builtins__structGet(ptr %997, ptr %10155)
  %10157 = load ptr, ptr @tag_Equals, align 8
  %10158 = call ptr @Builtins__structGet(ptr %997, ptr %10157)
  %10159 = load ptr, ptr @tag_TypeOf, align 8
  %10160 = call ptr @Builtins__structGet(ptr %997, ptr %10159)
  %10161 = load ptr, ptr @tag_Equals, align 8
  %10162 = call ptr @Builtins__structGet(ptr %997, ptr %10161)
  %10163 = load ptr, ptr @tag_Equals, align 8
  %10164 = call ptr @Builtins__structGet(ptr %997, ptr %10163)
  %10165 = load ptr, ptr @tag_Equals, align 8
  %10166 = call ptr @Builtins__structGet(ptr %997, ptr %10165)
  %10167 = load ptr, ptr @tag_TypeOf, align 8
  %10168 = call ptr @Builtins__structGet(ptr %997, ptr %10167)
  %10169 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10170 = call ptr @Builtins__structGet(ptr %997, ptr %10169)
  %10171 = load ptr, ptr @tag_Equals, align 8
  %10172 = call ptr @Builtins__structGet(ptr %997, ptr %10171)
  %10173 = load ptr, ptr @tag_TypeOf, align 8
  %10174 = call ptr @Builtins__structGet(ptr %997, ptr %10173)
  %10175 = load ptr, ptr @tag_Equals, align 8
  %10176 = call ptr @Builtins__structGet(ptr %997, ptr %10175)
  %10177 = load ptr, ptr @tag_Equals, align 8
  %10178 = call ptr @Builtins__structGet(ptr %997, ptr %10177)
  %10179 = load ptr, ptr @tag_Equals, align 8
  %10180 = call ptr @Builtins__structGet(ptr %997, ptr %10179)
  %10181 = load ptr, ptr @tag_TypeOf, align 8
  %10182 = call ptr @Builtins__structGet(ptr %997, ptr %10181)
  %10183 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10184 = call ptr @Builtins__structGet(ptr %997, ptr %10183)
  %10185 = load ptr, ptr @tag_Equals, align 8
  %10186 = call ptr @Builtins__structGet(ptr %997, ptr %10185)
  %10187 = load ptr, ptr @tag_TypeOf, align 8
  %10188 = call ptr @Builtins__structGet(ptr %997, ptr %10187)
  %10189 = load ptr, ptr @tag_Equals, align 8
  %10190 = call ptr @Builtins__structGet(ptr %997, ptr %10189)
  %10191 = load ptr, ptr @tag_Equals, align 8
  %10192 = call ptr @Builtins__structGet(ptr %997, ptr %10191)
  %10193 = load ptr, ptr @tag_Equals, align 8
  %10194 = call ptr @Builtins__structGet(ptr %997, ptr %10193)
  %10195 = load ptr, ptr @tag_TypeOf, align 8
  %10196 = call ptr @Builtins__structGet(ptr %997, ptr %10195)
  %10197 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10198 = call ptr @Builtins__structGet(ptr %997, ptr %10197)
  %10199 = load ptr, ptr @tag_Equals, align 8
  %10200 = call ptr @Builtins__structGet(ptr %997, ptr %10199)
  %10201 = load ptr, ptr @tag_TypeOf, align 8
  %10202 = call ptr @Builtins__structGet(ptr %997, ptr %10201)
  %10203 = load ptr, ptr @tag_IfElse, align 8
  %10204 = call ptr @Builtins__structGet(ptr %997, ptr %10203)
  %10205 = load ptr, ptr @tag_Equals, align 8
  %10206 = call ptr @Builtins__structGet(ptr %997, ptr %10205)
  %10207 = load ptr, ptr @tag_TypeOf, align 8
  %10208 = call ptr @Builtins__structGet(ptr %997, ptr %10207)
  %10209 = load ptr, ptr @tag_TagHasValue, align 8
  %10210 = call ptr @Builtins__structGet(ptr %997, ptr %10209)
  %10211 = load ptr, ptr @tag_TagWithoutValue, align 8
  %10212 = call ptr @Builtins__structGet(ptr %997, ptr %10211)
  %10213 = load ptr, ptr @tag_TagGetValue, align 8
  %10214 = call ptr @Builtins__structGet(ptr %997, ptr %10213)
  %10215 = load ptr, ptr @tag_Equals, align 8
  %10216 = call ptr @Builtins__structGet(ptr %997, ptr %10215)
  %10217 = load ptr, ptr @tag_TypeOf, align 8
  %10218 = call ptr @Builtins__structGet(ptr %997, ptr %10217)
  %10219 = load ptr, ptr @tag_Equals, align 8
  %10220 = call ptr @Builtins__structGet(ptr %997, ptr %10219)
  %10221 = load ptr, ptr @tag_TypeOf, align 8
  %10222 = call ptr @Builtins__structGet(ptr %997, ptr %10221)
  %10223 = load ptr, ptr @tag_ListLength, align 8
  %10224 = call ptr @Builtins__structGet(ptr %997, ptr %10223)
  %10225 = load ptr, ptr @tag_ListGet, align 8
  %10226 = call ptr @Builtins__structGet(ptr %997, ptr %10225)
  %10227 = load ptr, ptr @tag_ListInsert, align 8
  %10228 = call ptr @Builtins__structGet(ptr %997, ptr %10227)
  %10229 = load ptr, ptr @tag_ListReplace, align 8
  %10230 = call ptr @Builtins__structGet(ptr %997, ptr %10229)
  %10231 = load ptr, ptr @tag_ListRemoveAt, align 8
  %10232 = call ptr @Builtins__structGet(ptr %997, ptr %10231)
  %10233 = load ptr, ptr @tag_ListFilled, align 8
  %10234 = call ptr @Builtins__structGet(ptr %997, ptr %10233)
  %10235 = load ptr, ptr @tag_Equals, align 8
  %10236 = call ptr @Builtins__structGet(ptr %997, ptr %10235)
  %10237 = load ptr, ptr @tag_Equals, align 8
  %10238 = call ptr @Builtins__structGet(ptr %997, ptr %10237)
  %10239 = load ptr, ptr @tag_Equals, align 8
  %10240 = call ptr @Builtins__structGet(ptr %997, ptr %10239)
  %10241 = load ptr, ptr @tag_TypeOf, align 8
  %10242 = call ptr @Builtins__structGet(ptr %997, ptr %10241)
  %10243 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10244 = call ptr @Builtins__structGet(ptr %997, ptr %10243)
  %10245 = load ptr, ptr @tag_Equals, align 8
  %10246 = call ptr @Builtins__structGet(ptr %997, ptr %10245)
  %10247 = load ptr, ptr @tag_TypeOf, align 8
  %10248 = call ptr @Builtins__structGet(ptr %997, ptr %10247)
  %10249 = load ptr, ptr @tag_Equals, align 8
  %10250 = call ptr @Builtins__structGet(ptr %997, ptr %10249)
  %10251 = load ptr, ptr @tag_Equals, align 8
  %10252 = call ptr @Builtins__structGet(ptr %997, ptr %10251)
  %10253 = load ptr, ptr @tag_Equals, align 8
  %10254 = call ptr @Builtins__structGet(ptr %997, ptr %10253)
  %10255 = load ptr, ptr @tag_TypeOf, align 8
  %10256 = call ptr @Builtins__structGet(ptr %997, ptr %10255)
  %10257 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10258 = call ptr @Builtins__structGet(ptr %997, ptr %10257)
  %10259 = load ptr, ptr @tag_Equals, align 8
  %10260 = call ptr @Builtins__structGet(ptr %997, ptr %10259)
  %10261 = load ptr, ptr @tag_TypeOf, align 8
  %10262 = call ptr @Builtins__structGet(ptr %997, ptr %10261)
  %10263 = load ptr, ptr @tag_IfElse, align 8
  %10264 = call ptr @Builtins__structGet(ptr %997, ptr %10263)
  %10265 = load ptr, ptr @tag_Equals, align 8
  %10266 = call ptr @Builtins__structGet(ptr %997, ptr %10265)
  %10267 = load ptr, ptr @tag_TypeOf, align 8
  %10268 = call ptr @Builtins__structGet(ptr %997, ptr %10267)
  %10269 = load ptr, ptr @tag_Equals, align 8
  %10270 = call ptr @Builtins__structGet(ptr %997, ptr %10269)
  %10271 = load ptr, ptr @tag_TypeOf, align 8
  %10272 = call ptr @Builtins__structGet(ptr %997, ptr %10271)
  %10273 = load ptr, ptr @tag_TextFromUtf8, align 8
  %10274 = call ptr @Builtins__structGet(ptr %997, ptr %10273)
  %10275 = load ptr, ptr @tag_TextIsEmpty, align 8
  %10276 = call ptr @Builtins__structGet(ptr %997, ptr %10275)
  %10277 = load ptr, ptr @tag_TextLength, align 8
  %10278 = call ptr @Builtins__structGet(ptr %997, ptr %10277)
  %10279 = load ptr, ptr @tag_TextCharacters, align 8
  %10280 = call ptr @Builtins__structGet(ptr %997, ptr %10279)
  %10281 = load ptr, ptr @tag_TextGetRange, align 8
  %10282 = call ptr @Builtins__structGet(ptr %997, ptr %10281)
  %10283 = load ptr, ptr @tag_TextConcatenate, align 8
  %10284 = call ptr @Builtins__structGet(ptr %997, ptr %10283)
  %10285 = load ptr, ptr @tag_TextStartsWith, align 8
  %10286 = call ptr @Builtins__structGet(ptr %997, ptr %10285)
  %10287 = load ptr, ptr @tag_TextEndsWith, align 8
  %10288 = call ptr @Builtins__structGet(ptr %997, ptr %10287)
  %10289 = load ptr, ptr @tag_TextContains, align 8
  %10290 = call ptr @Builtins__structGet(ptr %997, ptr %10289)
  %10291 = load ptr, ptr @tag_TextTrimStart, align 8
  %10292 = call ptr @Builtins__structGet(ptr %997, ptr %10291)
  %10293 = load ptr, ptr @tag_TextTrimEnd, align 8
  %10294 = call ptr @Builtins__structGet(ptr %997, ptr %10293)
  %10295 = load ptr, ptr @tag_Equals, align 8
  %10296 = call ptr @Builtins__structGet(ptr %997, ptr %10295)
  %10297 = load ptr, ptr @tag_Equals, align 8
  %10298 = call ptr @Builtins__structGet(ptr %997, ptr %10297)
  %10299 = load ptr, ptr @tag_Equals, align 8
  %10300 = call ptr @Builtins__structGet(ptr %997, ptr %10299)
  %10301 = load ptr, ptr @tag_TypeOf, align 8
  %10302 = call ptr @Builtins__structGet(ptr %997, ptr %10301)
  %10303 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10304 = call ptr @Builtins__structGet(ptr %997, ptr %10303)
  %10305 = load ptr, ptr @tag_Equals, align 8
  %10306 = call ptr @Builtins__structGet(ptr %997, ptr %10305)
  %10307 = load ptr, ptr @tag_TypeOf, align 8
  %10308 = call ptr @Builtins__structGet(ptr %997, ptr %10307)
  %10309 = load ptr, ptr @tag_Equals, align 8
  %10310 = call ptr @Builtins__structGet(ptr %997, ptr %10309)
  %10311 = load ptr, ptr @tag_Equals, align 8
  %10312 = call ptr @Builtins__structGet(ptr %997, ptr %10311)
  %10313 = load ptr, ptr @tag_Equals, align 8
  %10314 = call ptr @Builtins__structGet(ptr %997, ptr %10313)
  %10315 = load ptr, ptr @tag_TypeOf, align 8
  %10316 = call ptr @Builtins__structGet(ptr %997, ptr %10315)
  %10317 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10318 = call ptr @Builtins__structGet(ptr %997, ptr %10317)
  %10319 = load ptr, ptr @tag_Equals, align 8
  %10320 = call ptr @Builtins__structGet(ptr %997, ptr %10319)
  %10321 = load ptr, ptr @tag_TypeOf, align 8
  %10322 = call ptr @Builtins__structGet(ptr %997, ptr %10321)
  %10323 = load ptr, ptr @tag_Equals, align 8
  %10324 = call ptr @Builtins__structGet(ptr %997, ptr %10323)
  %10325 = load ptr, ptr @tag_Equals, align 8
  %10326 = call ptr @Builtins__structGet(ptr %997, ptr %10325)
  %10327 = load ptr, ptr @tag_Equals, align 8
  %10328 = call ptr @Builtins__structGet(ptr %997, ptr %10327)
  %10329 = load ptr, ptr @tag_TypeOf, align 8
  %10330 = call ptr @Builtins__structGet(ptr %997, ptr %10329)
  %10331 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10332 = call ptr @Builtins__structGet(ptr %997, ptr %10331)
  %10333 = load ptr, ptr @tag_Equals, align 8
  %10334 = call ptr @Builtins__structGet(ptr %997, ptr %10333)
  %10335 = load ptr, ptr @tag_TypeOf, align 8
  %10336 = call ptr @Builtins__structGet(ptr %997, ptr %10335)
  %10337 = load ptr, ptr @tag_IfElse, align 8
  %10338 = call ptr @Builtins__structGet(ptr %997, ptr %10337)
  %10339 = load ptr, ptr @tag_Equals, align 8
  %10340 = call ptr @Builtins__structGet(ptr %997, ptr %10339)
  %10341 = load ptr, ptr @tag_Equals, align 8
  %10342 = call ptr @Builtins__structGet(ptr %997, ptr %10341)
  %10343 = load ptr, ptr @tag_Equals, align 8
  %10344 = call ptr @Builtins__structGet(ptr %997, ptr %10343)
  %10345 = load ptr, ptr @tag_TypeOf, align 8
  %10346 = call ptr @Builtins__structGet(ptr %997, ptr %10345)
  %10347 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10348 = call ptr @Builtins__structGet(ptr %997, ptr %10347)
  %10349 = load ptr, ptr @tag_Equals, align 8
  %10350 = call ptr @Builtins__structGet(ptr %997, ptr %10349)
  %10351 = load ptr, ptr @tag_Equals, align 8
  %10352 = call ptr @Builtins__structGet(ptr %997, ptr %10351)
  %10353 = load ptr, ptr @tag_Equals, align 8
  %10354 = call ptr @Builtins__structGet(ptr %997, ptr %10353)
  %10355 = load ptr, ptr @tag_TypeOf, align 8
  %10356 = call ptr @Builtins__structGet(ptr %997, ptr %10355)
  %10357 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10358 = call ptr @Builtins__structGet(ptr %997, ptr %10357)
  %10359 = load ptr, ptr @tag_Equals, align 8
  %10360 = call ptr @Builtins__structGet(ptr %997, ptr %10359)
  %10361 = load ptr, ptr @tag_TypeOf, align 8
  %10362 = call ptr @Builtins__structGet(ptr %997, ptr %10361)
  %10363 = load ptr, ptr @tag_Equals, align 8
  %10364 = call ptr @Builtins__structGet(ptr %997, ptr %10363)
  %10365 = load ptr, ptr @tag_Equals, align 8
  %10366 = call ptr @Builtins__structGet(ptr %997, ptr %10365)
  %10367 = load ptr, ptr @tag_Equals, align 8
  %10368 = call ptr @Builtins__structGet(ptr %997, ptr %10367)
  %10369 = load ptr, ptr @tag_TypeOf, align 8
  %10370 = call ptr @Builtins__structGet(ptr %997, ptr %10369)
  %10371 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10372 = call ptr @Builtins__structGet(ptr %997, ptr %10371)
  %10373 = load ptr, ptr @tag_Equals, align 8
  %10374 = call ptr @Builtins__structGet(ptr %997, ptr %10373)
  %10375 = load ptr, ptr @tag_TypeOf, align 8
  %10376 = call ptr @Builtins__structGet(ptr %997, ptr %10375)
  %10377 = load ptr, ptr @tag_Equals, align 8
  %10378 = call ptr @Builtins__structGet(ptr %997, ptr %10377)
  %10379 = load ptr, ptr @tag_Equals, align 8
  %10380 = call ptr @Builtins__structGet(ptr %997, ptr %10379)
  %10381 = load ptr, ptr @tag_Equals, align 8
  %10382 = call ptr @Builtins__structGet(ptr %997, ptr %10381)
  %10383 = load ptr, ptr @tag_TypeOf, align 8
  %10384 = call ptr @Builtins__structGet(ptr %997, ptr %10383)
  %10385 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10386 = call ptr @Builtins__structGet(ptr %997, ptr %10385)
  %10387 = load ptr, ptr @tag_Equals, align 8
  %10388 = call ptr @Builtins__structGet(ptr %997, ptr %10387)
  %10389 = load ptr, ptr @tag_TypeOf, align 8
  %10390 = call ptr @Builtins__structGet(ptr %997, ptr %10389)
  %10391 = load ptr, ptr @tag_Equals, align 8
  %10392 = call ptr @Builtins__structGet(ptr %997, ptr %10391)
  %10393 = load ptr, ptr @tag_Equals, align 8
  %10394 = call ptr @Builtins__structGet(ptr %997, ptr %10393)
  %10395 = load ptr, ptr @tag_Equals, align 8
  %10396 = call ptr @Builtins__structGet(ptr %997, ptr %10395)
  %10397 = load ptr, ptr @tag_TypeOf, align 8
  %10398 = call ptr @Builtins__structGet(ptr %997, ptr %10397)
  %10399 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10400 = call ptr @Builtins__structGet(ptr %997, ptr %10399)
  %10401 = load ptr, ptr @tag_Equals, align 8
  %10402 = call ptr @Builtins__structGet(ptr %997, ptr %10401)
  %10403 = load ptr, ptr @tag_TypeOf, align 8
  %10404 = call ptr @Builtins__structGet(ptr %997, ptr %10403)
  %10405 = load ptr, ptr @tag_IfElse, align 8
  %10406 = call ptr @Builtins__structGet(ptr %997, ptr %10405)
  %10407 = load ptr, ptr @tag_Equals, align 8
  %10408 = call ptr @Builtins__structGet(ptr %997, ptr %10407)
  %10409 = load ptr, ptr @tag_Equals, align 8
  %10410 = call ptr @Builtins__structGet(ptr %997, ptr %10409)
  %10411 = load ptr, ptr @tag_Equals, align 8
  %10412 = call ptr @Builtins__structGet(ptr %997, ptr %10411)
  %10413 = load ptr, ptr @tag_TypeOf, align 8
  %10414 = call ptr @Builtins__structGet(ptr %997, ptr %10413)
  %10415 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10416 = call ptr @Builtins__structGet(ptr %997, ptr %10415)
  %10417 = load ptr, ptr @tag_Equals, align 8
  %10418 = call ptr @Builtins__structGet(ptr %997, ptr %10417)
  %10419 = load ptr, ptr @tag_TypeOf, align 8
  %10420 = call ptr @Builtins__structGet(ptr %997, ptr %10419)
  %10421 = load ptr, ptr @tag_Equals, align 8
  %10422 = call ptr @Builtins__structGet(ptr %997, ptr %10421)
  %10423 = load ptr, ptr @tag_Equals, align 8
  %10424 = call ptr @Builtins__structGet(ptr %997, ptr %10423)
  %10425 = load ptr, ptr @tag_Equals, align 8
  %10426 = call ptr @Builtins__structGet(ptr %997, ptr %10425)
  %10427 = load ptr, ptr @tag_TypeOf, align 8
  %10428 = call ptr @Builtins__structGet(ptr %997, ptr %10427)
  %10429 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10430 = call ptr @Builtins__structGet(ptr %997, ptr %10429)
  %10431 = load ptr, ptr @tag_Equals, align 8
  %10432 = call ptr @Builtins__structGet(ptr %997, ptr %10431)
  %10433 = load ptr, ptr @tag_TypeOf, align 8
  %10434 = call ptr @Builtins__structGet(ptr %997, ptr %10433)
  %10435 = load ptr, ptr @tag_IfElse, align 8
  %10436 = call ptr @Builtins__structGet(ptr %997, ptr %10435)
  %10437 = load ptr, ptr @tag_Equals, align 8
  %10438 = call ptr @Builtins__structGet(ptr %997, ptr %10437)
  %10439 = load ptr, ptr @tag_Equals, align 8
  %10440 = call ptr @Builtins__structGet(ptr %997, ptr %10439)
  %10441 = load ptr, ptr @tag_TypeOf, align 8
  %10442 = call ptr @Builtins__structGet(ptr %997, ptr %10441)
  %10443 = load ptr, ptr @tag_IntAdd, align 8
  %10444 = call ptr @Builtins__structGet(ptr %997, ptr %10443)
  %10445 = load ptr, ptr @tag_IntSubtract, align 8
  %10446 = call ptr @Builtins__structGet(ptr %997, ptr %10445)
  %10447 = load ptr, ptr @tag_IntMultiply, align 8
  %10448 = call ptr @Builtins__structGet(ptr %997, ptr %10447)
  %10449 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %10450 = call ptr @Builtins__structGet(ptr %997, ptr %10449)
  %10451 = load ptr, ptr @tag_IntRemainder, align 8
  %10452 = call ptr @Builtins__structGet(ptr %997, ptr %10451)
  %10453 = load ptr, ptr @tag_IntModulo, align 8
  %10454 = call ptr @Builtins__structGet(ptr %997, ptr %10453)
  %10455 = load ptr, ptr @tag_IntShiftLeft, align 8
  %10456 = call ptr @Builtins__structGet(ptr %997, ptr %10455)
  %10457 = load ptr, ptr @tag_IntShiftRight, align 8
  %10458 = call ptr @Builtins__structGet(ptr %997, ptr %10457)
  %10459 = load ptr, ptr @tag_IntBitLength, align 8
  %10460 = call ptr @Builtins__structGet(ptr %997, ptr %10459)
  %10461 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %10462 = call ptr @Builtins__structGet(ptr %997, ptr %10461)
  %10463 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %10464 = call ptr @Builtins__structGet(ptr %997, ptr %10463)
  %10465 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %10466 = call ptr @Builtins__structGet(ptr %997, ptr %10465)
  %10467 = load ptr, ptr @tag_IntParse, align 8
  %10468 = call ptr @Builtins__structGet(ptr %997, ptr %10467)
  %10469 = load ptr, ptr @tag_Equals, align 8
  %10470 = call ptr @Builtins__structGet(ptr %997, ptr %10469)
  %10471 = load ptr, ptr @tag_Equals, align 8
  %10472 = call ptr @Builtins__structGet(ptr %997, ptr %10471)
  %10473 = load ptr, ptr @tag_Equals, align 8
  %10474 = call ptr @Builtins__structGet(ptr %997, ptr %10473)
  %10475 = load ptr, ptr @tag_TypeOf, align 8
  %10476 = call ptr @Builtins__structGet(ptr %997, ptr %10475)
  %10477 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10478 = call ptr @Builtins__structGet(ptr %997, ptr %10477)
  %10479 = load ptr, ptr @tag_Equals, align 8
  %10480 = call ptr @Builtins__structGet(ptr %997, ptr %10479)
  %10481 = load ptr, ptr @tag_TypeOf, align 8
  %10482 = call ptr @Builtins__structGet(ptr %997, ptr %10481)
  %10483 = load ptr, ptr @tag_Equals, align 8
  %10484 = call ptr @Builtins__structGet(ptr %997, ptr %10483)
  %10485 = load ptr, ptr @tag_Equals, align 8
  %10486 = call ptr @Builtins__structGet(ptr %997, ptr %10485)
  %10487 = load ptr, ptr @tag_Equals, align 8
  %10488 = call ptr @Builtins__structGet(ptr %997, ptr %10487)
  %10489 = load ptr, ptr @tag_TypeOf, align 8
  %10490 = call ptr @Builtins__structGet(ptr %997, ptr %10489)
  %10491 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10492 = call ptr @Builtins__structGet(ptr %997, ptr %10491)
  %10493 = load ptr, ptr @tag_Equals, align 8
  %10494 = call ptr @Builtins__structGet(ptr %997, ptr %10493)
  %10495 = load ptr, ptr @tag_TypeOf, align 8
  %10496 = call ptr @Builtins__structGet(ptr %997, ptr %10495)
  %10497 = load ptr, ptr @tag_Equals, align 8
  %10498 = call ptr @Builtins__structGet(ptr %997, ptr %10497)
  %10499 = load ptr, ptr @tag_Equals, align 8
  %10500 = call ptr @Builtins__structGet(ptr %997, ptr %10499)
  %10501 = load ptr, ptr @tag_Equals, align 8
  %10502 = call ptr @Builtins__structGet(ptr %997, ptr %10501)
  %10503 = load ptr, ptr @tag_TypeOf, align 8
  %10504 = call ptr @Builtins__structGet(ptr %997, ptr %10503)
  %10505 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10506 = call ptr @Builtins__structGet(ptr %997, ptr %10505)
  %10507 = load ptr, ptr @tag_Equals, align 8
  %10508 = call ptr @Builtins__structGet(ptr %997, ptr %10507)
  %10509 = load ptr, ptr @tag_TypeOf, align 8
  %10510 = call ptr @Builtins__structGet(ptr %997, ptr %10509)
  %10511 = load ptr, ptr @tag_IfElse, align 8
  %10512 = call ptr @Builtins__structGet(ptr %997, ptr %10511)
  %10513 = load ptr, ptr @tag_Equals, align 8
  %10514 = call ptr @Builtins__structGet(ptr %997, ptr %10513)
  %10515 = load ptr, ptr @tag_Equals, align 8
  %10516 = call ptr @Builtins__structGet(ptr %997, ptr %10515)
  %10517 = load ptr, ptr @tag_Equals, align 8
  %10518 = call ptr @Builtins__structGet(ptr %997, ptr %10517)
  %10519 = load ptr, ptr @tag_TypeOf, align 8
  %10520 = call ptr @Builtins__structGet(ptr %997, ptr %10519)
  %10521 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10522 = call ptr @Builtins__structGet(ptr %997, ptr %10521)
  %10523 = load ptr, ptr @tag_Equals, align 8
  %10524 = call ptr @Builtins__structGet(ptr %997, ptr %10523)
  %10525 = load ptr, ptr @tag_Equals, align 8
  %10526 = call ptr @Builtins__structGet(ptr %997, ptr %10525)
  %10527 = load ptr, ptr @tag_Equals, align 8
  %10528 = call ptr @Builtins__structGet(ptr %997, ptr %10527)
  %10529 = load ptr, ptr @tag_TypeOf, align 8
  %10530 = call ptr @Builtins__structGet(ptr %997, ptr %10529)
  %10531 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10532 = call ptr @Builtins__structGet(ptr %997, ptr %10531)
  %10533 = load ptr, ptr @tag_Equals, align 8
  %10534 = call ptr @Builtins__structGet(ptr %997, ptr %10533)
  %10535 = load ptr, ptr @tag_TypeOf, align 8
  %10536 = call ptr @Builtins__structGet(ptr %997, ptr %10535)
  %10537 = load ptr, ptr @tag_Equals, align 8
  %10538 = call ptr @Builtins__structGet(ptr %997, ptr %10537)
  %10539 = load ptr, ptr @tag_Equals, align 8
  %10540 = call ptr @Builtins__structGet(ptr %997, ptr %10539)
  %10541 = load ptr, ptr @tag_Equals, align 8
  %10542 = call ptr @Builtins__structGet(ptr %997, ptr %10541)
  %10543 = load ptr, ptr @tag_TypeOf, align 8
  %10544 = call ptr @Builtins__structGet(ptr %997, ptr %10543)
  %10545 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10546 = call ptr @Builtins__structGet(ptr %997, ptr %10545)
  %10547 = load ptr, ptr @tag_Equals, align 8
  %10548 = call ptr @Builtins__structGet(ptr %997, ptr %10547)
  %10549 = load ptr, ptr @tag_TypeOf, align 8
  %10550 = call ptr @Builtins__structGet(ptr %997, ptr %10549)
  %10551 = load ptr, ptr @tag_IfElse, align 8
  %10552 = call ptr @Builtins__structGet(ptr %997, ptr %10551)
  %10553 = load ptr, ptr @tag_Equals, align 8
  %10554 = call ptr @Builtins__structGet(ptr %997, ptr %10553)
  %10555 = load ptr, ptr @tag_TypeOf, align 8
  %10556 = call ptr @Builtins__structGet(ptr %997, ptr %10555)
  %10557 = load ptr, ptr @tag_Equals, align 8
  %10558 = call ptr @Builtins__structGet(ptr %997, ptr %10557)
  %10559 = load ptr, ptr @tag_Equals, align 8
  %10560 = call ptr @Builtins__structGet(ptr %997, ptr %10559)
  %10561 = load ptr, ptr @tag_Equals, align 8
  %10562 = call ptr @Builtins__structGet(ptr %997, ptr %10561)
  %10563 = load ptr, ptr @tag_TypeOf, align 8
  %10564 = call ptr @Builtins__structGet(ptr %997, ptr %10563)
  %10565 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10566 = call ptr @Builtins__structGet(ptr %997, ptr %10565)
  %10567 = load ptr, ptr @tag_Equals, align 8
  %10568 = call ptr @Builtins__structGet(ptr %997, ptr %10567)
  %10569 = load ptr, ptr @tag_TypeOf, align 8
  %10570 = call ptr @Builtins__structGet(ptr %997, ptr %10569)
  %10571 = load ptr, ptr @tag_Equals, align 8
  %10572 = call ptr @Builtins__structGet(ptr %997, ptr %10571)
  %10573 = load ptr, ptr @tag_Equals, align 8
  %10574 = call ptr @Builtins__structGet(ptr %997, ptr %10573)
  %10575 = load ptr, ptr @tag_Equals, align 8
  %10576 = call ptr @Builtins__structGet(ptr %997, ptr %10575)
  %10577 = load ptr, ptr @tag_TypeOf, align 8
  %10578 = call ptr @Builtins__structGet(ptr %997, ptr %10577)
  %10579 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10580 = call ptr @Builtins__structGet(ptr %997, ptr %10579)
  %10581 = load ptr, ptr @tag_Equals, align 8
  %10582 = call ptr @Builtins__structGet(ptr %997, ptr %10581)
  %10583 = load ptr, ptr @tag_TypeOf, align 8
  %10584 = call ptr @Builtins__structGet(ptr %997, ptr %10583)
  %10585 = load ptr, ptr @tag_Equals, align 8
  %10586 = call ptr @Builtins__structGet(ptr %997, ptr %10585)
  %10587 = load ptr, ptr @tag_Equals, align 8
  %10588 = call ptr @Builtins__structGet(ptr %997, ptr %10587)
  %10589 = load ptr, ptr @tag_Equals, align 8
  %10590 = call ptr @Builtins__structGet(ptr %997, ptr %10589)
  %10591 = load ptr, ptr @tag_TypeOf, align 8
  %10592 = call ptr @Builtins__structGet(ptr %997, ptr %10591)
  %10593 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10594 = call ptr @Builtins__structGet(ptr %997, ptr %10593)
  %10595 = load ptr, ptr @tag_Equals, align 8
  %10596 = call ptr @Builtins__structGet(ptr %997, ptr %10595)
  %10597 = load ptr, ptr @tag_TypeOf, align 8
  %10598 = call ptr @Builtins__structGet(ptr %997, ptr %10597)
  %10599 = load ptr, ptr @tag_IfElse, align 8
  %10600 = call ptr @Builtins__structGet(ptr %997, ptr %10599)
  %10601 = load ptr, ptr @tag_Equals, align 8
  %10602 = call ptr @Builtins__structGet(ptr %997, ptr %10601)
  %10603 = load ptr, ptr @tag_TypeOf, align 8
  %10604 = call ptr @Builtins__structGet(ptr %997, ptr %10603)
  %10605 = load ptr, ptr @tag_TagHasValue, align 8
  %10606 = call ptr @Builtins__structGet(ptr %997, ptr %10605)
  %10607 = load ptr, ptr @tag_TagWithoutValue, align 8
  %10608 = call ptr @Builtins__structGet(ptr %997, ptr %10607)
  %10609 = load ptr, ptr @tag_TagGetValue, align 8
  %10610 = call ptr @Builtins__structGet(ptr %997, ptr %10609)
  %10611 = load ptr, ptr @tag_Equals, align 8
  %10612 = call ptr @Builtins__structGet(ptr %997, ptr %10611)
  %10613 = load ptr, ptr @tag_TypeOf, align 8
  %10614 = call ptr @Builtins__structGet(ptr %997, ptr %10613)
  %10615 = load ptr, ptr @tag_Equals, align 8
  %10616 = call ptr @Builtins__structGet(ptr %997, ptr %10615)
  %10617 = load ptr, ptr @tag_TypeOf, align 8
  %10618 = call ptr @Builtins__structGet(ptr %997, ptr %10617)
  %10619 = load ptr, ptr @tag_ListLength, align 8
  %10620 = call ptr @Builtins__structGet(ptr %997, ptr %10619)
  %10621 = load ptr, ptr @tag_ListGet, align 8
  %10622 = call ptr @Builtins__structGet(ptr %997, ptr %10621)
  %10623 = load ptr, ptr @tag_ListInsert, align 8
  %10624 = call ptr @Builtins__structGet(ptr %997, ptr %10623)
  %10625 = load ptr, ptr @tag_ListReplace, align 8
  %10626 = call ptr @Builtins__structGet(ptr %997, ptr %10625)
  %10627 = load ptr, ptr @tag_ListRemoveAt, align 8
  %10628 = call ptr @Builtins__structGet(ptr %997, ptr %10627)
  %10629 = load ptr, ptr @tag_ListFilled, align 8
  %10630 = call ptr @Builtins__structGet(ptr %997, ptr %10629)
  %10631 = load ptr, ptr @tag_Equals, align 8
  %10632 = call ptr @Builtins__structGet(ptr %997, ptr %10631)
  %10633 = load ptr, ptr @tag_TypeOf, align 8
  %10634 = call ptr @Builtins__structGet(ptr %997, ptr %10633)
  %10635 = load ptr, ptr @tag_Equals, align 8
  %10636 = call ptr @Builtins__structGet(ptr %997, ptr %10635)
  %10637 = load ptr, ptr @tag_Equals, align 8
  %10638 = call ptr @Builtins__structGet(ptr %997, ptr %10637)
  %10639 = load ptr, ptr @tag_Equals, align 8
  %10640 = call ptr @Builtins__structGet(ptr %997, ptr %10639)
  %10641 = load ptr, ptr @tag_TypeOf, align 8
  %10642 = call ptr @Builtins__structGet(ptr %997, ptr %10641)
  %10643 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10644 = call ptr @Builtins__structGet(ptr %997, ptr %10643)
  %10645 = load ptr, ptr @tag_Equals, align 8
  %10646 = call ptr @Builtins__structGet(ptr %997, ptr %10645)
  %10647 = load ptr, ptr @tag_TypeOf, align 8
  %10648 = call ptr @Builtins__structGet(ptr %997, ptr %10647)
  %10649 = load ptr, ptr @tag_Equals, align 8
  %10650 = call ptr @Builtins__structGet(ptr %997, ptr %10649)
  %10651 = load ptr, ptr @tag_Equals, align 8
  %10652 = call ptr @Builtins__structGet(ptr %997, ptr %10651)
  %10653 = load ptr, ptr @tag_Equals, align 8
  %10654 = call ptr @Builtins__structGet(ptr %997, ptr %10653)
  %10655 = load ptr, ptr @tag_TypeOf, align 8
  %10656 = call ptr @Builtins__structGet(ptr %997, ptr %10655)
  %10657 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10658 = call ptr @Builtins__structGet(ptr %997, ptr %10657)
  %10659 = load ptr, ptr @tag_Equals, align 8
  %10660 = call ptr @Builtins__structGet(ptr %997, ptr %10659)
  %10661 = load ptr, ptr @tag_TypeOf, align 8
  %10662 = call ptr @Builtins__structGet(ptr %997, ptr %10661)
  %10663 = load ptr, ptr @tag_Equals, align 8
  %10664 = call ptr @Builtins__structGet(ptr %997, ptr %10663)
  %10665 = load ptr, ptr @tag_Equals, align 8
  %10666 = call ptr @Builtins__structGet(ptr %997, ptr %10665)
  %10667 = load ptr, ptr @tag_Equals, align 8
  %10668 = call ptr @Builtins__structGet(ptr %997, ptr %10667)
  %10669 = load ptr, ptr @tag_TypeOf, align 8
  %10670 = call ptr @Builtins__structGet(ptr %997, ptr %10669)
  %10671 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10672 = call ptr @Builtins__structGet(ptr %997, ptr %10671)
  %10673 = load ptr, ptr @tag_Equals, align 8
  %10674 = call ptr @Builtins__structGet(ptr %997, ptr %10673)
  %10675 = load ptr, ptr @tag_TypeOf, align 8
  %10676 = call ptr @Builtins__structGet(ptr %997, ptr %10675)
  %10677 = load ptr, ptr @tag_IfElse, align 8
  %10678 = call ptr @Builtins__structGet(ptr %997, ptr %10677)
  %10679 = load ptr, ptr @tag_Equals, align 8
  %10680 = call ptr @Builtins__structGet(ptr %997, ptr %10679)
  %10681 = load ptr, ptr @tag_Equals, align 8
  %10682 = call ptr @Builtins__structGet(ptr %997, ptr %10681)
  %10683 = load ptr, ptr @tag_Equals, align 8
  %10684 = call ptr @Builtins__structGet(ptr %997, ptr %10683)
  %10685 = load ptr, ptr @tag_TypeOf, align 8
  %10686 = call ptr @Builtins__structGet(ptr %997, ptr %10685)
  %10687 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10688 = call ptr @Builtins__structGet(ptr %997, ptr %10687)
  %10689 = load ptr, ptr @tag_Equals, align 8
  %10690 = call ptr @Builtins__structGet(ptr %997, ptr %10689)
  %10691 = load ptr, ptr @tag_Equals, align 8
  %10692 = call ptr @Builtins__structGet(ptr %997, ptr %10691)
  %10693 = load ptr, ptr @tag_Equals, align 8
  %10694 = call ptr @Builtins__structGet(ptr %997, ptr %10693)
  %10695 = load ptr, ptr @tag_TypeOf, align 8
  %10696 = call ptr @Builtins__structGet(ptr %997, ptr %10695)
  %10697 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10698 = call ptr @Builtins__structGet(ptr %997, ptr %10697)
  %10699 = load ptr, ptr @tag_Equals, align 8
  %10700 = call ptr @Builtins__structGet(ptr %997, ptr %10699)
  %10701 = load ptr, ptr @tag_TypeOf, align 8
  %10702 = call ptr @Builtins__structGet(ptr %997, ptr %10701)
  %10703 = load ptr, ptr @tag_Equals, align 8
  %10704 = call ptr @Builtins__structGet(ptr %997, ptr %10703)
  %10705 = load ptr, ptr @tag_Equals, align 8
  %10706 = call ptr @Builtins__structGet(ptr %997, ptr %10705)
  %10707 = load ptr, ptr @tag_Equals, align 8
  %10708 = call ptr @Builtins__structGet(ptr %997, ptr %10707)
  %10709 = load ptr, ptr @tag_TypeOf, align 8
  %10710 = call ptr @Builtins__structGet(ptr %997, ptr %10709)
  %10711 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10712 = call ptr @Builtins__structGet(ptr %997, ptr %10711)
  %10713 = load ptr, ptr @tag_Equals, align 8
  %10714 = call ptr @Builtins__structGet(ptr %997, ptr %10713)
  %10715 = load ptr, ptr @tag_TypeOf, align 8
  %10716 = call ptr @Builtins__structGet(ptr %997, ptr %10715)
  %10717 = load ptr, ptr @tag_IfElse, align 8
  %10718 = call ptr @Builtins__structGet(ptr %997, ptr %10717)
  %10719 = load ptr, ptr @tag_Equals, align 8
  %10720 = call ptr @Builtins__structGet(ptr %997, ptr %10719)
  %10721 = load ptr, ptr @tag_TypeOf, align 8
  %10722 = call ptr @Builtins__structGet(ptr %997, ptr %10721)
  %10723 = load ptr, ptr @tag_Equals, align 8
  %10724 = call ptr @Builtins__structGet(ptr %997, ptr %10723)
  %10725 = load ptr, ptr @tag_Equals, align 8
  %10726 = call ptr @Builtins__structGet(ptr %997, ptr %10725)
  %10727 = load ptr, ptr @tag_Equals, align 8
  %10728 = call ptr @Builtins__structGet(ptr %997, ptr %10727)
  %10729 = load ptr, ptr @tag_TypeOf, align 8
  %10730 = call ptr @Builtins__structGet(ptr %997, ptr %10729)
  %10731 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10732 = call ptr @Builtins__structGet(ptr %997, ptr %10731)
  %10733 = load ptr, ptr @tag_Equals, align 8
  %10734 = call ptr @Builtins__structGet(ptr %997, ptr %10733)
  %10735 = load ptr, ptr @tag_TypeOf, align 8
  %10736 = call ptr @Builtins__structGet(ptr %997, ptr %10735)
  %10737 = load ptr, ptr @tag_Equals, align 8
  %10738 = call ptr @Builtins__structGet(ptr %997, ptr %10737)
  %10739 = load ptr, ptr @tag_Equals, align 8
  %10740 = call ptr @Builtins__structGet(ptr %997, ptr %10739)
  %10741 = load ptr, ptr @tag_Equals, align 8
  %10742 = call ptr @Builtins__structGet(ptr %997, ptr %10741)
  %10743 = load ptr, ptr @tag_TypeOf, align 8
  %10744 = call ptr @Builtins__structGet(ptr %997, ptr %10743)
  %10745 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10746 = call ptr @Builtins__structGet(ptr %997, ptr %10745)
  %10747 = load ptr, ptr @tag_Equals, align 8
  %10748 = call ptr @Builtins__structGet(ptr %997, ptr %10747)
  %10749 = load ptr, ptr @tag_TypeOf, align 8
  %10750 = call ptr @Builtins__structGet(ptr %997, ptr %10749)
  %10751 = load ptr, ptr @tag_Equals, align 8
  %10752 = call ptr @Builtins__structGet(ptr %997, ptr %10751)
  %10753 = load ptr, ptr @tag_Equals, align 8
  %10754 = call ptr @Builtins__structGet(ptr %997, ptr %10753)
  %10755 = load ptr, ptr @tag_Equals, align 8
  %10756 = call ptr @Builtins__structGet(ptr %997, ptr %10755)
  %10757 = load ptr, ptr @tag_TypeOf, align 8
  %10758 = call ptr @Builtins__structGet(ptr %997, ptr %10757)
  %10759 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10760 = call ptr @Builtins__structGet(ptr %997, ptr %10759)
  %10761 = load ptr, ptr @tag_Equals, align 8
  %10762 = call ptr @Builtins__structGet(ptr %997, ptr %10761)
  %10763 = load ptr, ptr @tag_TypeOf, align 8
  %10764 = call ptr @Builtins__structGet(ptr %997, ptr %10763)
  %10765 = load ptr, ptr @tag_IfElse, align 8
  %10766 = call ptr @Builtins__structGet(ptr %997, ptr %10765)
  %10767 = load ptr, ptr @tag_Equals, align 8
  %10768 = call ptr @Builtins__structGet(ptr %997, ptr %10767)
  %10769 = load ptr, ptr @tag_TypeOf, align 8
  %10770 = call ptr @Builtins__structGet(ptr %997, ptr %10769)
  %10771 = load ptr, ptr @tag_TagHasValue, align 8
  %10772 = call ptr @Builtins__structGet(ptr %997, ptr %10771)
  %10773 = load ptr, ptr @tag_TagWithoutValue, align 8
  %10774 = call ptr @Builtins__structGet(ptr %997, ptr %10773)
  %10775 = load ptr, ptr @tag_TagGetValue, align 8
  %10776 = call ptr @Builtins__structGet(ptr %997, ptr %10775)
  %10777 = load ptr, ptr @tag_Equals, align 8
  %10778 = call ptr @Builtins__structGet(ptr %997, ptr %10777)
  %10779 = load ptr, ptr @tag_TypeOf, align 8
  %10780 = call ptr @Builtins__structGet(ptr %997, ptr %10779)
  %10781 = load ptr, ptr @tag_Equals, align 8
  %10782 = call ptr @Builtins__structGet(ptr %997, ptr %10781)
  %10783 = load ptr, ptr @tag_Equals, align 8
  %10784 = call ptr @Builtins__structGet(ptr %997, ptr %10783)
  %10785 = load ptr, ptr @tag_Equals, align 8
  %10786 = call ptr @Builtins__structGet(ptr %997, ptr %10785)
  %10787 = load ptr, ptr @tag_TypeOf, align 8
  %10788 = call ptr @Builtins__structGet(ptr %997, ptr %10787)
  %10789 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10790 = call ptr @Builtins__structGet(ptr %997, ptr %10789)
  %10791 = load ptr, ptr @tag_Equals, align 8
  %10792 = call ptr @Builtins__structGet(ptr %997, ptr %10791)
  %10793 = load ptr, ptr @tag_TypeOf, align 8
  %10794 = call ptr @Builtins__structGet(ptr %997, ptr %10793)
  %10795 = load ptr, ptr @tag_Equals, align 8
  %10796 = call ptr @Builtins__structGet(ptr %997, ptr %10795)
  %10797 = load ptr, ptr @tag_Equals, align 8
  %10798 = call ptr @Builtins__structGet(ptr %997, ptr %10797)
  %10799 = load ptr, ptr @tag_Equals, align 8
  %10800 = call ptr @Builtins__structGet(ptr %997, ptr %10799)
  %10801 = load ptr, ptr @tag_TypeOf, align 8
  %10802 = call ptr @Builtins__structGet(ptr %997, ptr %10801)
  %10803 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10804 = call ptr @Builtins__structGet(ptr %997, ptr %10803)
  %10805 = load ptr, ptr @tag_Equals, align 8
  %10806 = call ptr @Builtins__structGet(ptr %997, ptr %10805)
  %10807 = load ptr, ptr @tag_TypeOf, align 8
  %10808 = call ptr @Builtins__structGet(ptr %997, ptr %10807)
  %10809 = load ptr, ptr @tag_IfElse, align 8
  %10810 = call ptr @Builtins__structGet(ptr %997, ptr %10809)
  %10811 = load ptr, ptr @tag_Equals, align 8
  %10812 = call ptr @Builtins__structGet(ptr %997, ptr %10811)
  %10813 = load ptr, ptr @tag_TypeOf, align 8
  %10814 = call ptr @Builtins__structGet(ptr %997, ptr %10813)
  %10815 = load ptr, ptr @tag_Equals, align 8
  %10816 = call ptr @Builtins__structGet(ptr %997, ptr %10815)
  %10817 = load ptr, ptr @tag_Equals, align 8
  %10818 = call ptr @Builtins__structGet(ptr %997, ptr %10817)
  %10819 = load ptr, ptr @tag_Equals, align 8
  %10820 = call ptr @Builtins__structGet(ptr %997, ptr %10819)
  %10821 = load ptr, ptr @tag_TypeOf, align 8
  %10822 = call ptr @Builtins__structGet(ptr %997, ptr %10821)
  %10823 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10824 = call ptr @Builtins__structGet(ptr %997, ptr %10823)
  %10825 = load ptr, ptr @tag_Equals, align 8
  %10826 = call ptr @Builtins__structGet(ptr %997, ptr %10825)
  %10827 = load ptr, ptr @tag_TypeOf, align 8
  %10828 = call ptr @Builtins__structGet(ptr %997, ptr %10827)
  %10829 = load ptr, ptr @tag_Equals, align 8
  %10830 = call ptr @Builtins__structGet(ptr %997, ptr %10829)
  %10831 = load ptr, ptr @tag_Equals, align 8
  %10832 = call ptr @Builtins__structGet(ptr %997, ptr %10831)
  %10833 = load ptr, ptr @tag_Equals, align 8
  %10834 = call ptr @Builtins__structGet(ptr %997, ptr %10833)
  %10835 = load ptr, ptr @tag_TypeOf, align 8
  %10836 = call ptr @Builtins__structGet(ptr %997, ptr %10835)
  %10837 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10838 = call ptr @Builtins__structGet(ptr %997, ptr %10837)
  %10839 = load ptr, ptr @tag_Equals, align 8
  %10840 = call ptr @Builtins__structGet(ptr %997, ptr %10839)
  %10841 = load ptr, ptr @tag_TypeOf, align 8
  %10842 = call ptr @Builtins__structGet(ptr %997, ptr %10841)
  %10843 = load ptr, ptr @tag_Equals, align 8
  %10844 = call ptr @Builtins__structGet(ptr %997, ptr %10843)
  %10845 = load ptr, ptr @tag_Equals, align 8
  %10846 = call ptr @Builtins__structGet(ptr %997, ptr %10845)
  %10847 = load ptr, ptr @tag_Equals, align 8
  %10848 = call ptr @Builtins__structGet(ptr %997, ptr %10847)
  %10849 = load ptr, ptr @tag_TypeOf, align 8
  %10850 = call ptr @Builtins__structGet(ptr %997, ptr %10849)
  %10851 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10852 = call ptr @Builtins__structGet(ptr %997, ptr %10851)
  %10853 = load ptr, ptr @tag_Equals, align 8
  %10854 = call ptr @Builtins__structGet(ptr %997, ptr %10853)
  %10855 = load ptr, ptr @tag_TypeOf, align 8
  %10856 = call ptr @Builtins__structGet(ptr %997, ptr %10855)
  %10857 = load ptr, ptr @tag_IfElse, align 8
  %10858 = call ptr @Builtins__structGet(ptr %997, ptr %10857)
  %10859 = load ptr, ptr @tag_Equals, align 8
  %10860 = call ptr @Builtins__structGet(ptr %997, ptr %10859)
  %10861 = load ptr, ptr @tag_TypeOf, align 8
  %10862 = call ptr @Builtins__structGet(ptr %997, ptr %10861)
  %10863 = load ptr, ptr @tag_TagHasValue, align 8
  %10864 = call ptr @Builtins__structGet(ptr %997, ptr %10863)
  %10865 = load ptr, ptr @tag_TagWithoutValue, align 8
  %10866 = call ptr @Builtins__structGet(ptr %997, ptr %10865)
  %10867 = load ptr, ptr @tag_TagGetValue, align 8
  %10868 = call ptr @Builtins__structGet(ptr %997, ptr %10867)
  %10869 = load ptr, ptr @tag_Equals, align 8
  %10870 = call ptr @Builtins__structGet(ptr %997, ptr %10869)
  %10871 = load ptr, ptr @tag_Equals, align 8
  %10872 = call ptr @Builtins__structGet(ptr %997, ptr %10871)
  %10873 = load ptr, ptr @tag_Equals, align 8
  %10874 = call ptr @Builtins__structGet(ptr %997, ptr %10873)
  %10875 = load ptr, ptr @tag_TypeOf, align 8
  %10876 = call ptr @Builtins__structGet(ptr %997, ptr %10875)
  %10877 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10878 = call ptr @Builtins__structGet(ptr %997, ptr %10877)
  %10879 = load ptr, ptr @tag_Equals, align 8
  %10880 = call ptr @Builtins__structGet(ptr %997, ptr %10879)
  %10881 = load ptr, ptr @tag_TypeOf, align 8
  %10882 = call ptr @Builtins__structGet(ptr %997, ptr %10881)
  %10883 = load ptr, ptr @tag_Equals, align 8
  %10884 = call ptr @Builtins__structGet(ptr %997, ptr %10883)
  %10885 = load ptr, ptr @tag_Equals, align 8
  %10886 = call ptr @Builtins__structGet(ptr %997, ptr %10885)
  %10887 = load ptr, ptr @tag_Equals, align 8
  %10888 = call ptr @Builtins__structGet(ptr %997, ptr %10887)
  %10889 = load ptr, ptr @tag_TypeOf, align 8
  %10890 = call ptr @Builtins__structGet(ptr %997, ptr %10889)
  %10891 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10892 = call ptr @Builtins__structGet(ptr %997, ptr %10891)
  %10893 = load ptr, ptr @tag_Equals, align 8
  %10894 = call ptr @Builtins__structGet(ptr %997, ptr %10893)
  %10895 = load ptr, ptr @tag_TypeOf, align 8
  %10896 = call ptr @Builtins__structGet(ptr %997, ptr %10895)
  %10897 = load ptr, ptr @tag_Equals, align 8
  %10898 = call ptr @Builtins__structGet(ptr %997, ptr %10897)
  %10899 = load ptr, ptr @tag_Equals, align 8
  %10900 = call ptr @Builtins__structGet(ptr %997, ptr %10899)
  %10901 = load ptr, ptr @tag_Equals, align 8
  %10902 = call ptr @Builtins__structGet(ptr %997, ptr %10901)
  %10903 = load ptr, ptr @tag_TypeOf, align 8
  %10904 = call ptr @Builtins__structGet(ptr %997, ptr %10903)
  %10905 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10906 = call ptr @Builtins__structGet(ptr %997, ptr %10905)
  %10907 = load ptr, ptr @tag_Equals, align 8
  %10908 = call ptr @Builtins__structGet(ptr %997, ptr %10907)
  %10909 = load ptr, ptr @tag_TypeOf, align 8
  %10910 = call ptr @Builtins__structGet(ptr %997, ptr %10909)
  %10911 = load ptr, ptr @tag_IfElse, align 8
  %10912 = call ptr @Builtins__structGet(ptr %997, ptr %10911)
  %10913 = load ptr, ptr @tag_Equals, align 8
  %10914 = call ptr @Builtins__structGet(ptr %997, ptr %10913)
  %10915 = load ptr, ptr @tag_Equals, align 8
  %10916 = call ptr @Builtins__structGet(ptr %997, ptr %10915)
  %10917 = load ptr, ptr @tag_Equals, align 8
  %10918 = call ptr @Builtins__structGet(ptr %997, ptr %10917)
  %10919 = load ptr, ptr @tag_Equals, align 8
  %10920 = call ptr @Builtins__structGet(ptr %997, ptr %10919)
  %10921 = load ptr, ptr @tag_TypeOf, align 8
  %10922 = call ptr @Builtins__structGet(ptr %997, ptr %10921)
  %10923 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10924 = call ptr @Builtins__structGet(ptr %997, ptr %10923)
  %10925 = load ptr, ptr @tag_Equals, align 8
  %10926 = call ptr @Builtins__structGet(ptr %997, ptr %10925)
  %10927 = load ptr, ptr @tag_TypeOf, align 8
  %10928 = call ptr @Builtins__structGet(ptr %997, ptr %10927)
  %10929 = load ptr, ptr @tag_Equals, align 8
  %10930 = call ptr @Builtins__structGet(ptr %997, ptr %10929)
  %10931 = load ptr, ptr @tag_Equals, align 8
  %10932 = call ptr @Builtins__structGet(ptr %997, ptr %10931)
  %10933 = load ptr, ptr @tag_Equals, align 8
  %10934 = call ptr @Builtins__structGet(ptr %997, ptr %10933)
  %10935 = load ptr, ptr @tag_TypeOf, align 8
  %10936 = call ptr @Builtins__structGet(ptr %997, ptr %10935)
  %10937 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10938 = call ptr @Builtins__structGet(ptr %997, ptr %10937)
  %10939 = load ptr, ptr @tag_Equals, align 8
  %10940 = call ptr @Builtins__structGet(ptr %997, ptr %10939)
  %10941 = load ptr, ptr @tag_TypeOf, align 8
  %10942 = call ptr @Builtins__structGet(ptr %997, ptr %10941)
  %10943 = load ptr, ptr @tag_Equals, align 8
  %10944 = call ptr @Builtins__structGet(ptr %997, ptr %10943)
  %10945 = load ptr, ptr @tag_Equals, align 8
  %10946 = call ptr @Builtins__structGet(ptr %997, ptr %10945)
  %10947 = load ptr, ptr @tag_Equals, align 8
  %10948 = call ptr @Builtins__structGet(ptr %997, ptr %10947)
  %10949 = load ptr, ptr @tag_TypeOf, align 8
  %10950 = call ptr @Builtins__structGet(ptr %997, ptr %10949)
  %10951 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10952 = call ptr @Builtins__structGet(ptr %997, ptr %10951)
  %10953 = load ptr, ptr @tag_Equals, align 8
  %10954 = call ptr @Builtins__structGet(ptr %997, ptr %10953)
  %10955 = load ptr, ptr @tag_TypeOf, align 8
  %10956 = call ptr @Builtins__structGet(ptr %997, ptr %10955)
  %10957 = load ptr, ptr @tag_Equals, align 8
  %10958 = call ptr @Builtins__structGet(ptr %997, ptr %10957)
  %10959 = load ptr, ptr @tag_Equals, align 8
  %10960 = call ptr @Builtins__structGet(ptr %997, ptr %10959)
  %10961 = load ptr, ptr @tag_Equals, align 8
  %10962 = call ptr @Builtins__structGet(ptr %997, ptr %10961)
  %10963 = load ptr, ptr @tag_TypeOf, align 8
  %10964 = call ptr @Builtins__structGet(ptr %997, ptr %10963)
  %10965 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10966 = call ptr @Builtins__structGet(ptr %997, ptr %10965)
  %10967 = load ptr, ptr @tag_Equals, align 8
  %10968 = call ptr @Builtins__structGet(ptr %997, ptr %10967)
  %10969 = load ptr, ptr @tag_TypeOf, align 8
  %10970 = call ptr @Builtins__structGet(ptr %997, ptr %10969)
  %10971 = load ptr, ptr @tag_IfElse, align 8
  %10972 = call ptr @Builtins__structGet(ptr %997, ptr %10971)
  %10973 = load ptr, ptr @tag_Equals, align 8
  %10974 = call ptr @Builtins__structGet(ptr %997, ptr %10973)
  %10975 = load ptr, ptr @tag_Equals, align 8
  %10976 = call ptr @Builtins__structGet(ptr %997, ptr %10975)
  %10977 = load ptr, ptr @tag_Equals, align 8
  %10978 = call ptr @Builtins__structGet(ptr %997, ptr %10977)
  %10979 = load ptr, ptr @tag_TypeOf, align 8
  %10980 = call ptr @Builtins__structGet(ptr %997, ptr %10979)
  %10981 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10982 = call ptr @Builtins__structGet(ptr %997, ptr %10981)
  %10983 = load ptr, ptr @tag_Equals, align 8
  %10984 = call ptr @Builtins__structGet(ptr %997, ptr %10983)
  %10985 = load ptr, ptr @tag_TypeOf, align 8
  %10986 = call ptr @Builtins__structGet(ptr %997, ptr %10985)
  %10987 = load ptr, ptr @tag_Equals, align 8
  %10988 = call ptr @Builtins__structGet(ptr %997, ptr %10987)
  %10989 = load ptr, ptr @tag_Equals, align 8
  %10990 = call ptr @Builtins__structGet(ptr %997, ptr %10989)
  %10991 = load ptr, ptr @tag_Equals, align 8
  %10992 = call ptr @Builtins__structGet(ptr %997, ptr %10991)
  %10993 = load ptr, ptr @tag_TypeOf, align 8
  %10994 = call ptr @Builtins__structGet(ptr %997, ptr %10993)
  %10995 = load ptr, ptr @tag_GetArgumentCount, align 8
  %10996 = call ptr @Builtins__structGet(ptr %997, ptr %10995)
  %10997 = load ptr, ptr @tag_Equals, align 8
  %10998 = call ptr @Builtins__structGet(ptr %997, ptr %10997)
  %10999 = load ptr, ptr @tag_TypeOf, align 8
  %11000 = call ptr @Builtins__structGet(ptr %997, ptr %10999)
  %11001 = load ptr, ptr @tag_IfElse, align 8
  %11002 = call ptr @Builtins__structGet(ptr %997, ptr %11001)
  %11003 = load ptr, ptr @tag_Equals, align 8
  %11004 = call ptr @Builtins__structGet(ptr %997, ptr %11003)
  %11005 = load ptr, ptr @tag_Equals, align 8
  %11006 = call ptr @Builtins__structGet(ptr %997, ptr %11005)
  %11007 = load ptr, ptr @tag_TypeOf, align 8
  %11008 = call ptr @Builtins__structGet(ptr %997, ptr %11007)
  %11009 = load ptr, ptr @tag_IntAdd, align 8
  %11010 = call ptr @Builtins__structGet(ptr %997, ptr %11009)
  %11011 = load ptr, ptr @tag_IntSubtract, align 8
  %11012 = call ptr @Builtins__structGet(ptr %997, ptr %11011)
  %11013 = load ptr, ptr @tag_IntMultiply, align 8
  %11014 = call ptr @Builtins__structGet(ptr %997, ptr %11013)
  %11015 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %11016 = call ptr @Builtins__structGet(ptr %997, ptr %11015)
  %11017 = load ptr, ptr @tag_IntRemainder, align 8
  %11018 = call ptr @Builtins__structGet(ptr %997, ptr %11017)
  %11019 = load ptr, ptr @tag_IntModulo, align 8
  %11020 = call ptr @Builtins__structGet(ptr %997, ptr %11019)
  %11021 = load ptr, ptr @tag_IntShiftLeft, align 8
  %11022 = call ptr @Builtins__structGet(ptr %997, ptr %11021)
  %11023 = load ptr, ptr @tag_IntShiftRight, align 8
  %11024 = call ptr @Builtins__structGet(ptr %997, ptr %11023)
  %11025 = load ptr, ptr @tag_IntBitLength, align 8
  %11026 = call ptr @Builtins__structGet(ptr %997, ptr %11025)
  %11027 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %11028 = call ptr @Builtins__structGet(ptr %997, ptr %11027)
  %11029 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %11030 = call ptr @Builtins__structGet(ptr %997, ptr %11029)
  %11031 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %11032 = call ptr @Builtins__structGet(ptr %997, ptr %11031)
  %11033 = load ptr, ptr @tag_IntParse, align 8
  %11034 = call ptr @Builtins__structGet(ptr %997, ptr %11033)
  %11035 = load ptr, ptr @tag_Equals, align 8
  %11036 = call ptr @Builtins__structGet(ptr %997, ptr %11035)
  %11037 = load ptr, ptr @tag_Equals, align 8
  %11038 = call ptr @Builtins__structGet(ptr %997, ptr %11037)
  %11039 = load ptr, ptr @tag_Equals, align 8
  %11040 = call ptr @Builtins__structGet(ptr %997, ptr %11039)
  %11041 = load ptr, ptr @tag_TypeOf, align 8
  %11042 = call ptr @Builtins__structGet(ptr %997, ptr %11041)
  %11043 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11044 = call ptr @Builtins__structGet(ptr %997, ptr %11043)
  %11045 = load ptr, ptr @tag_Equals, align 8
  %11046 = call ptr @Builtins__structGet(ptr %997, ptr %11045)
  %11047 = load ptr, ptr @tag_TypeOf, align 8
  %11048 = call ptr @Builtins__structGet(ptr %997, ptr %11047)
  %11049 = load ptr, ptr @tag_Equals, align 8
  %11050 = call ptr @Builtins__structGet(ptr %997, ptr %11049)
  %11051 = load ptr, ptr @tag_Equals, align 8
  %11052 = call ptr @Builtins__structGet(ptr %997, ptr %11051)
  %11053 = load ptr, ptr @tag_Equals, align 8
  %11054 = call ptr @Builtins__structGet(ptr %997, ptr %11053)
  %11055 = load ptr, ptr @tag_TypeOf, align 8
  %11056 = call ptr @Builtins__structGet(ptr %997, ptr %11055)
  %11057 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11058 = call ptr @Builtins__structGet(ptr %997, ptr %11057)
  %11059 = load ptr, ptr @tag_Equals, align 8
  %11060 = call ptr @Builtins__structGet(ptr %997, ptr %11059)
  %11061 = load ptr, ptr @tag_TypeOf, align 8
  %11062 = call ptr @Builtins__structGet(ptr %997, ptr %11061)
  %11063 = load ptr, ptr @tag_Equals, align 8
  %11064 = call ptr @Builtins__structGet(ptr %997, ptr %11063)
  %11065 = load ptr, ptr @tag_Equals, align 8
  %11066 = call ptr @Builtins__structGet(ptr %997, ptr %11065)
  %11067 = load ptr, ptr @tag_Equals, align 8
  %11068 = call ptr @Builtins__structGet(ptr %997, ptr %11067)
  %11069 = load ptr, ptr @tag_TypeOf, align 8
  %11070 = call ptr @Builtins__structGet(ptr %997, ptr %11069)
  %11071 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11072 = call ptr @Builtins__structGet(ptr %997, ptr %11071)
  %11073 = load ptr, ptr @tag_Equals, align 8
  %11074 = call ptr @Builtins__structGet(ptr %997, ptr %11073)
  %11075 = load ptr, ptr @tag_TypeOf, align 8
  %11076 = call ptr @Builtins__structGet(ptr %997, ptr %11075)
  %11077 = load ptr, ptr @tag_IfElse, align 8
  %11078 = call ptr @Builtins__structGet(ptr %997, ptr %11077)
  %11079 = load ptr, ptr @tag_Equals, align 8
  %11080 = call ptr @Builtins__structGet(ptr %997, ptr %11079)
  %11081 = load ptr, ptr @tag_Equals, align 8
  %11082 = call ptr @Builtins__structGet(ptr %997, ptr %11081)
  %11083 = load ptr, ptr @tag_Equals, align 8
  %11084 = call ptr @Builtins__structGet(ptr %997, ptr %11083)
  %11085 = load ptr, ptr @tag_TypeOf, align 8
  %11086 = call ptr @Builtins__structGet(ptr %997, ptr %11085)
  %11087 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11088 = call ptr @Builtins__structGet(ptr %997, ptr %11087)
  %11089 = load ptr, ptr @tag_Equals, align 8
  %11090 = call ptr @Builtins__structGet(ptr %997, ptr %11089)
  %11091 = load ptr, ptr @tag_Equals, align 8
  %11092 = call ptr @Builtins__structGet(ptr %997, ptr %11091)
  %11093 = load ptr, ptr @tag_Equals, align 8
  %11094 = call ptr @Builtins__structGet(ptr %997, ptr %11093)
  %11095 = load ptr, ptr @tag_TypeOf, align 8
  %11096 = call ptr @Builtins__structGet(ptr %997, ptr %11095)
  %11097 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11098 = call ptr @Builtins__structGet(ptr %997, ptr %11097)
  %11099 = load ptr, ptr @tag_Equals, align 8
  %11100 = call ptr @Builtins__structGet(ptr %997, ptr %11099)
  %11101 = load ptr, ptr @tag_TypeOf, align 8
  %11102 = call ptr @Builtins__structGet(ptr %997, ptr %11101)
  %11103 = load ptr, ptr @tag_Equals, align 8
  %11104 = call ptr @Builtins__structGet(ptr %997, ptr %11103)
  %11105 = load ptr, ptr @tag_Equals, align 8
  %11106 = call ptr @Builtins__structGet(ptr %997, ptr %11105)
  %11107 = load ptr, ptr @tag_Equals, align 8
  %11108 = call ptr @Builtins__structGet(ptr %997, ptr %11107)
  %11109 = load ptr, ptr @tag_TypeOf, align 8
  %11110 = call ptr @Builtins__structGet(ptr %997, ptr %11109)
  %11111 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11112 = call ptr @Builtins__structGet(ptr %997, ptr %11111)
  %11113 = load ptr, ptr @tag_Equals, align 8
  %11114 = call ptr @Builtins__structGet(ptr %997, ptr %11113)
  %11115 = load ptr, ptr @tag_TypeOf, align 8
  %11116 = call ptr @Builtins__structGet(ptr %997, ptr %11115)
  %11117 = load ptr, ptr @tag_Equals, align 8
  %11118 = call ptr @Builtins__structGet(ptr %997, ptr %11117)
  %11119 = load ptr, ptr @tag_Equals, align 8
  %11120 = call ptr @Builtins__structGet(ptr %997, ptr %11119)
  %11121 = load ptr, ptr @tag_Equals, align 8
  %11122 = call ptr @Builtins__structGet(ptr %997, ptr %11121)
  %11123 = load ptr, ptr @tag_TypeOf, align 8
  %11124 = call ptr @Builtins__structGet(ptr %997, ptr %11123)
  %11125 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11126 = call ptr @Builtins__structGet(ptr %997, ptr %11125)
  %11127 = load ptr, ptr @tag_Equals, align 8
  %11128 = call ptr @Builtins__structGet(ptr %997, ptr %11127)
  %11129 = load ptr, ptr @tag_TypeOf, align 8
  %11130 = call ptr @Builtins__structGet(ptr %997, ptr %11129)
  %11131 = load ptr, ptr @tag_Equals, align 8
  %11132 = call ptr @Builtins__structGet(ptr %997, ptr %11131)
  %11133 = load ptr, ptr @tag_Equals, align 8
  %11134 = call ptr @Builtins__structGet(ptr %997, ptr %11133)
  %11135 = load ptr, ptr @tag_Equals, align 8
  %11136 = call ptr @Builtins__structGet(ptr %997, ptr %11135)
  %11137 = load ptr, ptr @tag_TypeOf, align 8
  %11138 = call ptr @Builtins__structGet(ptr %997, ptr %11137)
  %11139 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11140 = call ptr @Builtins__structGet(ptr %997, ptr %11139)
  %11141 = load ptr, ptr @tag_Equals, align 8
  %11142 = call ptr @Builtins__structGet(ptr %997, ptr %11141)
  %11143 = load ptr, ptr @tag_TypeOf, align 8
  %11144 = call ptr @Builtins__structGet(ptr %997, ptr %11143)
  %11145 = load ptr, ptr @tag_IfElse, align 8
  %11146 = call ptr @Builtins__structGet(ptr %997, ptr %11145)
  %11147 = load ptr, ptr @tag_Equals, align 8
  %11148 = call ptr @Builtins__structGet(ptr %997, ptr %11147)
  %11149 = load ptr, ptr @tag_Equals, align 8
  %11150 = call ptr @Builtins__structGet(ptr %997, ptr %11149)
  %11151 = load ptr, ptr @tag_Equals, align 8
  %11152 = call ptr @Builtins__structGet(ptr %997, ptr %11151)
  %11153 = load ptr, ptr @tag_TypeOf, align 8
  %11154 = call ptr @Builtins__structGet(ptr %997, ptr %11153)
  %11155 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11156 = call ptr @Builtins__structGet(ptr %997, ptr %11155)
  %11157 = load ptr, ptr @tag_Equals, align 8
  %11158 = call ptr @Builtins__structGet(ptr %997, ptr %11157)
  %11159 = load ptr, ptr @tag_TypeOf, align 8
  %11160 = call ptr @Builtins__structGet(ptr %997, ptr %11159)
  %11161 = load ptr, ptr @tag_Equals, align 8
  %11162 = call ptr @Builtins__structGet(ptr %997, ptr %11161)
  %11163 = load ptr, ptr @tag_Equals, align 8
  %11164 = call ptr @Builtins__structGet(ptr %997, ptr %11163)
  %11165 = load ptr, ptr @tag_Equals, align 8
  %11166 = call ptr @Builtins__structGet(ptr %997, ptr %11165)
  %11167 = load ptr, ptr @tag_TypeOf, align 8
  %11168 = call ptr @Builtins__structGet(ptr %997, ptr %11167)
  %11169 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11170 = call ptr @Builtins__structGet(ptr %997, ptr %11169)
  %11171 = load ptr, ptr @tag_Equals, align 8
  %11172 = call ptr @Builtins__structGet(ptr %997, ptr %11171)
  %11173 = load ptr, ptr @tag_TypeOf, align 8
  %11174 = call ptr @Builtins__structGet(ptr %997, ptr %11173)
  %11175 = load ptr, ptr @tag_IfElse, align 8
  %11176 = call ptr @Builtins__structGet(ptr %997, ptr %11175)
  %11177 = load ptr, ptr @tag_Equals, align 8
  %11178 = call ptr @Builtins__structGet(ptr %997, ptr %11177)
  %11179 = load ptr, ptr @tag_Equals, align 8
  %11180 = call ptr @Builtins__structGet(ptr %997, ptr %11179)
  %11181 = load ptr, ptr @tag_TypeOf, align 8
  %11182 = call ptr @Builtins__structGet(ptr %997, ptr %11181)
  %11183 = load ptr, ptr @tag_IntAdd, align 8
  %11184 = call ptr @Builtins__structGet(ptr %997, ptr %11183)
  %11185 = load ptr, ptr @tag_IntSubtract, align 8
  %11186 = call ptr @Builtins__structGet(ptr %997, ptr %11185)
  %11187 = load ptr, ptr @tag_IntMultiply, align 8
  %11188 = call ptr @Builtins__structGet(ptr %997, ptr %11187)
  %11189 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %11190 = call ptr @Builtins__structGet(ptr %997, ptr %11189)
  %11191 = load ptr, ptr @tag_IntRemainder, align 8
  %11192 = call ptr @Builtins__structGet(ptr %997, ptr %11191)
  %11193 = load ptr, ptr @tag_IntModulo, align 8
  %11194 = call ptr @Builtins__structGet(ptr %997, ptr %11193)
  %11195 = load ptr, ptr @tag_IntShiftLeft, align 8
  %11196 = call ptr @Builtins__structGet(ptr %997, ptr %11195)
  %11197 = load ptr, ptr @tag_IntShiftRight, align 8
  %11198 = call ptr @Builtins__structGet(ptr %997, ptr %11197)
  %11199 = load ptr, ptr @tag_IntBitLength, align 8
  %11200 = call ptr @Builtins__structGet(ptr %997, ptr %11199)
  %11201 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %11202 = call ptr @Builtins__structGet(ptr %997, ptr %11201)
  %11203 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %11204 = call ptr @Builtins__structGet(ptr %997, ptr %11203)
  %11205 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %11206 = call ptr @Builtins__structGet(ptr %997, ptr %11205)
  %11207 = load ptr, ptr @tag_IntParse, align 8
  %11208 = call ptr @Builtins__structGet(ptr %997, ptr %11207)
  %11209 = load ptr, ptr @tag_Equals, align 8
  %11210 = call ptr @Builtins__structGet(ptr %997, ptr %11209)
  %11211 = load ptr, ptr @tag_Equals, align 8
  %11212 = call ptr @Builtins__structGet(ptr %997, ptr %11211)
  %11213 = load ptr, ptr @tag_Equals, align 8
  %11214 = call ptr @Builtins__structGet(ptr %997, ptr %11213)
  %11215 = load ptr, ptr @tag_TypeOf, align 8
  %11216 = call ptr @Builtins__structGet(ptr %997, ptr %11215)
  %11217 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11218 = call ptr @Builtins__structGet(ptr %997, ptr %11217)
  %11219 = load ptr, ptr @tag_Equals, align 8
  %11220 = call ptr @Builtins__structGet(ptr %997, ptr %11219)
  %11221 = load ptr, ptr @tag_TypeOf, align 8
  %11222 = call ptr @Builtins__structGet(ptr %997, ptr %11221)
  %11223 = load ptr, ptr @tag_Equals, align 8
  %11224 = call ptr @Builtins__structGet(ptr %997, ptr %11223)
  %11225 = load ptr, ptr @tag_Equals, align 8
  %11226 = call ptr @Builtins__structGet(ptr %997, ptr %11225)
  %11227 = load ptr, ptr @tag_Equals, align 8
  %11228 = call ptr @Builtins__structGet(ptr %997, ptr %11227)
  %11229 = load ptr, ptr @tag_TypeOf, align 8
  %11230 = call ptr @Builtins__structGet(ptr %997, ptr %11229)
  %11231 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11232 = call ptr @Builtins__structGet(ptr %997, ptr %11231)
  %11233 = load ptr, ptr @tag_Equals, align 8
  %11234 = call ptr @Builtins__structGet(ptr %997, ptr %11233)
  %11235 = load ptr, ptr @tag_TypeOf, align 8
  %11236 = call ptr @Builtins__structGet(ptr %997, ptr %11235)
  %11237 = load ptr, ptr @tag_Equals, align 8
  %11238 = call ptr @Builtins__structGet(ptr %997, ptr %11237)
  %11239 = load ptr, ptr @tag_Equals, align 8
  %11240 = call ptr @Builtins__structGet(ptr %997, ptr %11239)
  %11241 = load ptr, ptr @tag_Equals, align 8
  %11242 = call ptr @Builtins__structGet(ptr %997, ptr %11241)
  %11243 = load ptr, ptr @tag_TypeOf, align 8
  %11244 = call ptr @Builtins__structGet(ptr %997, ptr %11243)
  %11245 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11246 = call ptr @Builtins__structGet(ptr %997, ptr %11245)
  %11247 = load ptr, ptr @tag_Equals, align 8
  %11248 = call ptr @Builtins__structGet(ptr %997, ptr %11247)
  %11249 = load ptr, ptr @tag_TypeOf, align 8
  %11250 = call ptr @Builtins__structGet(ptr %997, ptr %11249)
  %11251 = load ptr, ptr @tag_IfElse, align 8
  %11252 = call ptr @Builtins__structGet(ptr %997, ptr %11251)
  %11253 = load ptr, ptr @tag_Equals, align 8
  %11254 = call ptr @Builtins__structGet(ptr %997, ptr %11253)
  %11255 = load ptr, ptr @tag_Equals, align 8
  %11256 = call ptr @Builtins__structGet(ptr %997, ptr %11255)
  %11257 = load ptr, ptr @tag_Equals, align 8
  %11258 = call ptr @Builtins__structGet(ptr %997, ptr %11257)
  %11259 = load ptr, ptr @tag_TypeOf, align 8
  %11260 = call ptr @Builtins__structGet(ptr %997, ptr %11259)
  %11261 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11262 = call ptr @Builtins__structGet(ptr %997, ptr %11261)
  %11263 = load ptr, ptr @tag_Equals, align 8
  %11264 = call ptr @Builtins__structGet(ptr %997, ptr %11263)
  %11265 = load ptr, ptr @tag_Equals, align 8
  %11266 = call ptr @Builtins__structGet(ptr %997, ptr %11265)
  %11267 = load ptr, ptr @tag_Equals, align 8
  %11268 = call ptr @Builtins__structGet(ptr %997, ptr %11267)
  %11269 = load ptr, ptr @tag_TypeOf, align 8
  %11270 = call ptr @Builtins__structGet(ptr %997, ptr %11269)
  %11271 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11272 = call ptr @Builtins__structGet(ptr %997, ptr %11271)
  %11273 = load ptr, ptr @tag_Equals, align 8
  %11274 = call ptr @Builtins__structGet(ptr %997, ptr %11273)
  %11275 = load ptr, ptr @tag_TypeOf, align 8
  %11276 = call ptr @Builtins__structGet(ptr %997, ptr %11275)
  %11277 = load ptr, ptr @tag_Equals, align 8
  %11278 = call ptr @Builtins__structGet(ptr %997, ptr %11277)
  %11279 = load ptr, ptr @tag_Equals, align 8
  %11280 = call ptr @Builtins__structGet(ptr %997, ptr %11279)
  %11281 = load ptr, ptr @tag_Equals, align 8
  %11282 = call ptr @Builtins__structGet(ptr %997, ptr %11281)
  %11283 = load ptr, ptr @tag_TypeOf, align 8
  %11284 = call ptr @Builtins__structGet(ptr %997, ptr %11283)
  %11285 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11286 = call ptr @Builtins__structGet(ptr %997, ptr %11285)
  %11287 = load ptr, ptr @tag_Equals, align 8
  %11288 = call ptr @Builtins__structGet(ptr %997, ptr %11287)
  %11289 = load ptr, ptr @tag_TypeOf, align 8
  %11290 = call ptr @Builtins__structGet(ptr %997, ptr %11289)
  %11291 = load ptr, ptr @tag_IfElse, align 8
  %11292 = call ptr @Builtins__structGet(ptr %997, ptr %11291)
  %11293 = load ptr, ptr @tag_Equals, align 8
  %11294 = call ptr @Builtins__structGet(ptr %997, ptr %11293)
  %11295 = load ptr, ptr @tag_TypeOf, align 8
  %11296 = call ptr @Builtins__structGet(ptr %997, ptr %11295)
  %11297 = load ptr, ptr @tag_Equals, align 8
  %11298 = call ptr @Builtins__structGet(ptr %997, ptr %11297)
  %11299 = load ptr, ptr @tag_Equals, align 8
  %11300 = call ptr @Builtins__structGet(ptr %997, ptr %11299)
  %11301 = load ptr, ptr @tag_Equals, align 8
  %11302 = call ptr @Builtins__structGet(ptr %997, ptr %11301)
  %11303 = load ptr, ptr @tag_TypeOf, align 8
  %11304 = call ptr @Builtins__structGet(ptr %997, ptr %11303)
  %11305 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11306 = call ptr @Builtins__structGet(ptr %997, ptr %11305)
  %11307 = load ptr, ptr @tag_Equals, align 8
  %11308 = call ptr @Builtins__structGet(ptr %997, ptr %11307)
  %11309 = load ptr, ptr @tag_TypeOf, align 8
  %11310 = call ptr @Builtins__structGet(ptr %997, ptr %11309)
  %11311 = load ptr, ptr @tag_Equals, align 8
  %11312 = call ptr @Builtins__structGet(ptr %997, ptr %11311)
  %11313 = load ptr, ptr @tag_Equals, align 8
  %11314 = call ptr @Builtins__structGet(ptr %997, ptr %11313)
  %11315 = load ptr, ptr @tag_Equals, align 8
  %11316 = call ptr @Builtins__structGet(ptr %997, ptr %11315)
  %11317 = load ptr, ptr @tag_TypeOf, align 8
  %11318 = call ptr @Builtins__structGet(ptr %997, ptr %11317)
  %11319 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11320 = call ptr @Builtins__structGet(ptr %997, ptr %11319)
  %11321 = load ptr, ptr @tag_Equals, align 8
  %11322 = call ptr @Builtins__structGet(ptr %997, ptr %11321)
  %11323 = load ptr, ptr @tag_TypeOf, align 8
  %11324 = call ptr @Builtins__structGet(ptr %997, ptr %11323)
  %11325 = load ptr, ptr @tag_Equals, align 8
  %11326 = call ptr @Builtins__structGet(ptr %997, ptr %11325)
  %11327 = load ptr, ptr @tag_Equals, align 8
  %11328 = call ptr @Builtins__structGet(ptr %997, ptr %11327)
  %11329 = load ptr, ptr @tag_Equals, align 8
  %11330 = call ptr @Builtins__structGet(ptr %997, ptr %11329)
  %11331 = load ptr, ptr @tag_TypeOf, align 8
  %11332 = call ptr @Builtins__structGet(ptr %997, ptr %11331)
  %11333 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11334 = call ptr @Builtins__structGet(ptr %997, ptr %11333)
  %11335 = load ptr, ptr @tag_Equals, align 8
  %11336 = call ptr @Builtins__structGet(ptr %997, ptr %11335)
  %11337 = load ptr, ptr @tag_TypeOf, align 8
  %11338 = call ptr @Builtins__structGet(ptr %997, ptr %11337)
  %11339 = load ptr, ptr @tag_IfElse, align 8
  %11340 = call ptr @Builtins__structGet(ptr %997, ptr %11339)
  %11341 = load ptr, ptr @tag_Equals, align 8
  %11342 = call ptr @Builtins__structGet(ptr %997, ptr %11341)
  %11343 = load ptr, ptr @tag_TypeOf, align 8
  %11344 = call ptr @Builtins__structGet(ptr %997, ptr %11343)
  %11345 = load ptr, ptr @tag_TagHasValue, align 8
  %11346 = call ptr @Builtins__structGet(ptr %997, ptr %11345)
  %11347 = load ptr, ptr @tag_TagWithoutValue, align 8
  %11348 = call ptr @Builtins__structGet(ptr %997, ptr %11347)
  %11349 = load ptr, ptr @tag_TagGetValue, align 8
  %11350 = call ptr @Builtins__structGet(ptr %997, ptr %11349)
  %11351 = load ptr, ptr @tag_Equals, align 8
  %11352 = call ptr @Builtins__structGet(ptr %997, ptr %11351)
  %11353 = load ptr, ptr @tag_TypeOf, align 8
  %11354 = call ptr @Builtins__structGet(ptr %997, ptr %11353)
  %11355 = load ptr, ptr @tag_Equals, align 8
  %11356 = call ptr @Builtins__structGet(ptr %997, ptr %11355)
  %11357 = load ptr, ptr @tag_TypeOf, align 8
  %11358 = call ptr @Builtins__structGet(ptr %997, ptr %11357)
  %11359 = load ptr, ptr @tag_ListLength, align 8
  %11360 = call ptr @Builtins__structGet(ptr %997, ptr %11359)
  %11361 = load ptr, ptr @tag_ListGet, align 8
  %11362 = call ptr @Builtins__structGet(ptr %997, ptr %11361)
  %11363 = load ptr, ptr @tag_ListInsert, align 8
  %11364 = call ptr @Builtins__structGet(ptr %997, ptr %11363)
  %11365 = load ptr, ptr @tag_ListReplace, align 8
  %11366 = call ptr @Builtins__structGet(ptr %997, ptr %11365)
  %11367 = load ptr, ptr @tag_ListRemoveAt, align 8
  %11368 = call ptr @Builtins__structGet(ptr %997, ptr %11367)
  %11369 = load ptr, ptr @tag_ListFilled, align 8
  %11370 = call ptr @Builtins__structGet(ptr %997, ptr %11369)
  %11371 = load ptr, ptr @tag_Equals, align 8
  %11372 = call ptr @Builtins__structGet(ptr %997, ptr %11371)
  %11373 = load ptr, ptr @tag_Equals, align 8
  %11374 = call ptr @Builtins__structGet(ptr %997, ptr %11373)
  %11375 = load ptr, ptr @tag_Equals, align 8
  %11376 = call ptr @Builtins__structGet(ptr %997, ptr %11375)
  %11377 = load ptr, ptr @tag_TypeOf, align 8
  %11378 = call ptr @Builtins__structGet(ptr %997, ptr %11377)
  %11379 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11380 = call ptr @Builtins__structGet(ptr %997, ptr %11379)
  %11381 = load ptr, ptr @tag_Equals, align 8
  %11382 = call ptr @Builtins__structGet(ptr %997, ptr %11381)
  %11383 = load ptr, ptr @tag_TypeOf, align 8
  %11384 = call ptr @Builtins__structGet(ptr %997, ptr %11383)
  %11385 = load ptr, ptr @tag_Equals, align 8
  %11386 = call ptr @Builtins__structGet(ptr %997, ptr %11385)
  %11387 = load ptr, ptr @tag_Equals, align 8
  %11388 = call ptr @Builtins__structGet(ptr %997, ptr %11387)
  %11389 = load ptr, ptr @tag_Equals, align 8
  %11390 = call ptr @Builtins__structGet(ptr %997, ptr %11389)
  %11391 = load ptr, ptr @tag_TypeOf, align 8
  %11392 = call ptr @Builtins__structGet(ptr %997, ptr %11391)
  %11393 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11394 = call ptr @Builtins__structGet(ptr %997, ptr %11393)
  %11395 = load ptr, ptr @tag_Equals, align 8
  %11396 = call ptr @Builtins__structGet(ptr %997, ptr %11395)
  %11397 = load ptr, ptr @tag_TypeOf, align 8
  %11398 = call ptr @Builtins__structGet(ptr %997, ptr %11397)
  %11399 = load ptr, ptr @tag_IfElse, align 8
  %11400 = call ptr @Builtins__structGet(ptr %997, ptr %11399)
  %11401 = load ptr, ptr @tag_Equals, align 8
  %11402 = call ptr @Builtins__structGet(ptr %997, ptr %11401)
  %11403 = load ptr, ptr @tag_TypeOf, align 8
  %11404 = call ptr @Builtins__structGet(ptr %997, ptr %11403)
  %11405 = load ptr, ptr @tag_Equals, align 8
  %11406 = call ptr @Builtins__structGet(ptr %997, ptr %11405)
  %11407 = load ptr, ptr @tag_TypeOf, align 8
  %11408 = call ptr @Builtins__structGet(ptr %997, ptr %11407)
  %11409 = load ptr, ptr @tag_TextFromUtf8, align 8
  %11410 = call ptr @Builtins__structGet(ptr %997, ptr %11409)
  %11411 = load ptr, ptr @tag_TextIsEmpty, align 8
  %11412 = call ptr @Builtins__structGet(ptr %997, ptr %11411)
  %11413 = load ptr, ptr @tag_TextLength, align 8
  %11414 = call ptr @Builtins__structGet(ptr %997, ptr %11413)
  %11415 = load ptr, ptr @tag_TextCharacters, align 8
  %11416 = call ptr @Builtins__structGet(ptr %997, ptr %11415)
  %11417 = load ptr, ptr @tag_TextGetRange, align 8
  %11418 = call ptr @Builtins__structGet(ptr %997, ptr %11417)
  %11419 = load ptr, ptr @tag_TextConcatenate, align 8
  %11420 = call ptr @Builtins__structGet(ptr %997, ptr %11419)
  %11421 = load ptr, ptr @tag_TextStartsWith, align 8
  %11422 = call ptr @Builtins__structGet(ptr %997, ptr %11421)
  %11423 = load ptr, ptr @tag_TextEndsWith, align 8
  %11424 = call ptr @Builtins__structGet(ptr %997, ptr %11423)
  %11425 = load ptr, ptr @tag_TextContains, align 8
  %11426 = call ptr @Builtins__structGet(ptr %997, ptr %11425)
  %11427 = load ptr, ptr @tag_TextTrimStart, align 8
  %11428 = call ptr @Builtins__structGet(ptr %997, ptr %11427)
  %11429 = load ptr, ptr @tag_TextTrimEnd, align 8
  %11430 = call ptr @Builtins__structGet(ptr %997, ptr %11429)
  %11431 = load ptr, ptr @tag_Equals, align 8
  %11432 = call ptr @Builtins__structGet(ptr %997, ptr %11431)
  %11433 = load ptr, ptr @tag_Equals, align 8
  %11434 = call ptr @Builtins__structGet(ptr %997, ptr %11433)
  %11435 = load ptr, ptr @tag_Equals, align 8
  %11436 = call ptr @Builtins__structGet(ptr %997, ptr %11435)
  %11437 = load ptr, ptr @tag_TypeOf, align 8
  %11438 = call ptr @Builtins__structGet(ptr %997, ptr %11437)
  %11439 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11440 = call ptr @Builtins__structGet(ptr %997, ptr %11439)
  %11441 = load ptr, ptr @tag_Equals, align 8
  %11442 = call ptr @Builtins__structGet(ptr %997, ptr %11441)
  %11443 = load ptr, ptr @tag_TypeOf, align 8
  %11444 = call ptr @Builtins__structGet(ptr %997, ptr %11443)
  %11445 = load ptr, ptr @tag_Equals, align 8
  %11446 = call ptr @Builtins__structGet(ptr %997, ptr %11445)
  %11447 = load ptr, ptr @tag_Equals, align 8
  %11448 = call ptr @Builtins__structGet(ptr %997, ptr %11447)
  %11449 = load ptr, ptr @tag_Equals, align 8
  %11450 = call ptr @Builtins__structGet(ptr %997, ptr %11449)
  %11451 = load ptr, ptr @tag_TypeOf, align 8
  %11452 = call ptr @Builtins__structGet(ptr %997, ptr %11451)
  %11453 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11454 = call ptr @Builtins__structGet(ptr %997, ptr %11453)
  %11455 = load ptr, ptr @tag_Equals, align 8
  %11456 = call ptr @Builtins__structGet(ptr %997, ptr %11455)
  %11457 = load ptr, ptr @tag_TypeOf, align 8
  %11458 = call ptr @Builtins__structGet(ptr %997, ptr %11457)
  %11459 = load ptr, ptr @tag_Equals, align 8
  %11460 = call ptr @Builtins__structGet(ptr %997, ptr %11459)
  %11461 = load ptr, ptr @tag_Equals, align 8
  %11462 = call ptr @Builtins__structGet(ptr %997, ptr %11461)
  %11463 = load ptr, ptr @tag_Equals, align 8
  %11464 = call ptr @Builtins__structGet(ptr %997, ptr %11463)
  %11465 = load ptr, ptr @tag_TypeOf, align 8
  %11466 = call ptr @Builtins__structGet(ptr %997, ptr %11465)
  %11467 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11468 = call ptr @Builtins__structGet(ptr %997, ptr %11467)
  %11469 = load ptr, ptr @tag_Equals, align 8
  %11470 = call ptr @Builtins__structGet(ptr %997, ptr %11469)
  %11471 = load ptr, ptr @tag_TypeOf, align 8
  %11472 = call ptr @Builtins__structGet(ptr %997, ptr %11471)
  %11473 = load ptr, ptr @tag_IfElse, align 8
  %11474 = call ptr @Builtins__structGet(ptr %997, ptr %11473)
  %11475 = load ptr, ptr @tag_Equals, align 8
  %11476 = call ptr @Builtins__structGet(ptr %997, ptr %11475)
  %11477 = load ptr, ptr @tag_Equals, align 8
  %11478 = call ptr @Builtins__structGet(ptr %997, ptr %11477)
  %11479 = load ptr, ptr @tag_Equals, align 8
  %11480 = call ptr @Builtins__structGet(ptr %997, ptr %11479)
  %11481 = load ptr, ptr @tag_Equals, align 8
  %11482 = call ptr @Builtins__structGet(ptr %997, ptr %11481)
  %11483 = load ptr, ptr @tag_TypeOf, align 8
  %11484 = call ptr @Builtins__structGet(ptr %997, ptr %11483)
  %11485 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11486 = call ptr @Builtins__structGet(ptr %997, ptr %11485)
  %11487 = load ptr, ptr @tag_Equals, align 8
  %11488 = call ptr @Builtins__structGet(ptr %997, ptr %11487)
  %11489 = load ptr, ptr @tag_TypeOf, align 8
  %11490 = call ptr @Builtins__structGet(ptr %997, ptr %11489)
  %11491 = load ptr, ptr @tag_Equals, align 8
  %11492 = call ptr @Builtins__structGet(ptr %997, ptr %11491)
  %11493 = load ptr, ptr @tag_Equals, align 8
  %11494 = call ptr @Builtins__structGet(ptr %997, ptr %11493)
  %11495 = load ptr, ptr @tag_Equals, align 8
  %11496 = call ptr @Builtins__structGet(ptr %997, ptr %11495)
  %11497 = load ptr, ptr @tag_TypeOf, align 8
  %11498 = call ptr @Builtins__structGet(ptr %997, ptr %11497)
  %11499 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11500 = call ptr @Builtins__structGet(ptr %997, ptr %11499)
  %11501 = load ptr, ptr @tag_Equals, align 8
  %11502 = call ptr @Builtins__structGet(ptr %997, ptr %11501)
  %11503 = load ptr, ptr @tag_TypeOf, align 8
  %11504 = call ptr @Builtins__structGet(ptr %997, ptr %11503)
  %11505 = load ptr, ptr @tag_Equals, align 8
  %11506 = call ptr @Builtins__structGet(ptr %997, ptr %11505)
  %11507 = load ptr, ptr @tag_Equals, align 8
  %11508 = call ptr @Builtins__structGet(ptr %997, ptr %11507)
  %11509 = load ptr, ptr @tag_Equals, align 8
  %11510 = call ptr @Builtins__structGet(ptr %997, ptr %11509)
  %11511 = load ptr, ptr @tag_TypeOf, align 8
  %11512 = call ptr @Builtins__structGet(ptr %997, ptr %11511)
  %11513 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11514 = call ptr @Builtins__structGet(ptr %997, ptr %11513)
  %11515 = load ptr, ptr @tag_Equals, align 8
  %11516 = call ptr @Builtins__structGet(ptr %997, ptr %11515)
  %11517 = load ptr, ptr @tag_TypeOf, align 8
  %11518 = call ptr @Builtins__structGet(ptr %997, ptr %11517)
  %11519 = load ptr, ptr @tag_Equals, align 8
  %11520 = call ptr @Builtins__structGet(ptr %997, ptr %11519)
  %11521 = load ptr, ptr @tag_Equals, align 8
  %11522 = call ptr @Builtins__structGet(ptr %997, ptr %11521)
  %11523 = load ptr, ptr @tag_Equals, align 8
  %11524 = call ptr @Builtins__structGet(ptr %997, ptr %11523)
  %11525 = load ptr, ptr @tag_TypeOf, align 8
  %11526 = call ptr @Builtins__structGet(ptr %997, ptr %11525)
  %11527 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11528 = call ptr @Builtins__structGet(ptr %997, ptr %11527)
  %11529 = load ptr, ptr @tag_Equals, align 8
  %11530 = call ptr @Builtins__structGet(ptr %997, ptr %11529)
  %11531 = load ptr, ptr @tag_TypeOf, align 8
  %11532 = call ptr @Builtins__structGet(ptr %997, ptr %11531)
  %11533 = load ptr, ptr @tag_IfElse, align 8
  %11534 = call ptr @Builtins__structGet(ptr %997, ptr %11533)
  %11535 = load ptr, ptr @tag_Equals, align 8
  %11536 = call ptr @Builtins__structGet(ptr %997, ptr %11535)
  %11537 = load ptr, ptr @tag_Equals, align 8
  %11538 = call ptr @Builtins__structGet(ptr %997, ptr %11537)
  %11539 = load ptr, ptr @tag_Equals, align 8
  %11540 = call ptr @Builtins__structGet(ptr %997, ptr %11539)
  %11541 = load ptr, ptr @tag_TypeOf, align 8
  %11542 = call ptr @Builtins__structGet(ptr %997, ptr %11541)
  %11543 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11544 = call ptr @Builtins__structGet(ptr %997, ptr %11543)
  %11545 = load ptr, ptr @tag_Equals, align 8
  %11546 = call ptr @Builtins__structGet(ptr %997, ptr %11545)
  %11547 = load ptr, ptr @tag_TypeOf, align 8
  %11548 = call ptr @Builtins__structGet(ptr %997, ptr %11547)
  %11549 = load ptr, ptr @tag_Equals, align 8
  %11550 = call ptr @Builtins__structGet(ptr %997, ptr %11549)
  %11551 = load ptr, ptr @tag_Equals, align 8
  %11552 = call ptr @Builtins__structGet(ptr %997, ptr %11551)
  %11553 = load ptr, ptr @tag_Equals, align 8
  %11554 = call ptr @Builtins__structGet(ptr %997, ptr %11553)
  %11555 = load ptr, ptr @tag_TypeOf, align 8
  %11556 = call ptr @Builtins__structGet(ptr %997, ptr %11555)
  %11557 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11558 = call ptr @Builtins__structGet(ptr %997, ptr %11557)
  %11559 = load ptr, ptr @tag_Equals, align 8
  %11560 = call ptr @Builtins__structGet(ptr %997, ptr %11559)
  %11561 = load ptr, ptr @tag_TypeOf, align 8
  %11562 = call ptr @Builtins__structGet(ptr %997, ptr %11561)
  %11563 = load ptr, ptr @tag_IfElse, align 8
  %11564 = call ptr @Builtins__structGet(ptr %997, ptr %11563)
  %11565 = load ptr, ptr @tag_Equals, align 8
  %11566 = call ptr @Builtins__structGet(ptr %997, ptr %11565)
  %11567 = load ptr, ptr @tag_Equals, align 8
  %11568 = call ptr @Builtins__structGet(ptr %997, ptr %11567)
  %11569 = load ptr, ptr @tag_TypeOf, align 8
  %11570 = call ptr @Builtins__structGet(ptr %997, ptr %11569)
  %11571 = load ptr, ptr @tag_IntAdd, align 8
  %11572 = call ptr @Builtins__structGet(ptr %997, ptr %11571)
  %11573 = load ptr, ptr @tag_IntSubtract, align 8
  %11574 = call ptr @Builtins__structGet(ptr %997, ptr %11573)
  %11575 = load ptr, ptr @tag_IntMultiply, align 8
  %11576 = call ptr @Builtins__structGet(ptr %997, ptr %11575)
  %11577 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %11578 = call ptr @Builtins__structGet(ptr %997, ptr %11577)
  %11579 = load ptr, ptr @tag_IntRemainder, align 8
  %11580 = call ptr @Builtins__structGet(ptr %997, ptr %11579)
  %11581 = load ptr, ptr @tag_IntModulo, align 8
  %11582 = call ptr @Builtins__structGet(ptr %997, ptr %11581)
  %11583 = load ptr, ptr @tag_IntShiftLeft, align 8
  %11584 = call ptr @Builtins__structGet(ptr %997, ptr %11583)
  %11585 = load ptr, ptr @tag_IntShiftRight, align 8
  %11586 = call ptr @Builtins__structGet(ptr %997, ptr %11585)
  %11587 = load ptr, ptr @tag_IntBitLength, align 8
  %11588 = call ptr @Builtins__structGet(ptr %997, ptr %11587)
  %11589 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %11590 = call ptr @Builtins__structGet(ptr %997, ptr %11589)
  %11591 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %11592 = call ptr @Builtins__structGet(ptr %997, ptr %11591)
  %11593 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %11594 = call ptr @Builtins__structGet(ptr %997, ptr %11593)
  %11595 = load ptr, ptr @tag_IntParse, align 8
  %11596 = call ptr @Builtins__structGet(ptr %997, ptr %11595)
  %11597 = load ptr, ptr @tag_Equals, align 8
  %11598 = call ptr @Builtins__structGet(ptr %997, ptr %11597)
  %11599 = load ptr, ptr @tag_Equals, align 8
  %11600 = call ptr @Builtins__structGet(ptr %997, ptr %11599)
  %11601 = load ptr, ptr @tag_Equals, align 8
  %11602 = call ptr @Builtins__structGet(ptr %997, ptr %11601)
  %11603 = load ptr, ptr @tag_TypeOf, align 8
  %11604 = call ptr @Builtins__structGet(ptr %997, ptr %11603)
  %11605 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11606 = call ptr @Builtins__structGet(ptr %997, ptr %11605)
  %11607 = load ptr, ptr @tag_Equals, align 8
  %11608 = call ptr @Builtins__structGet(ptr %997, ptr %11607)
  %11609 = load ptr, ptr @tag_TypeOf, align 8
  %11610 = call ptr @Builtins__structGet(ptr %997, ptr %11609)
  %11611 = load ptr, ptr @tag_Equals, align 8
  %11612 = call ptr @Builtins__structGet(ptr %997, ptr %11611)
  %11613 = load ptr, ptr @tag_Equals, align 8
  %11614 = call ptr @Builtins__structGet(ptr %997, ptr %11613)
  %11615 = load ptr, ptr @tag_Equals, align 8
  %11616 = call ptr @Builtins__structGet(ptr %997, ptr %11615)
  %11617 = load ptr, ptr @tag_TypeOf, align 8
  %11618 = call ptr @Builtins__structGet(ptr %997, ptr %11617)
  %11619 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11620 = call ptr @Builtins__structGet(ptr %997, ptr %11619)
  %11621 = load ptr, ptr @tag_Equals, align 8
  %11622 = call ptr @Builtins__structGet(ptr %997, ptr %11621)
  %11623 = load ptr, ptr @tag_TypeOf, align 8
  %11624 = call ptr @Builtins__structGet(ptr %997, ptr %11623)
  %11625 = load ptr, ptr @tag_Equals, align 8
  %11626 = call ptr @Builtins__structGet(ptr %997, ptr %11625)
  %11627 = load ptr, ptr @tag_Equals, align 8
  %11628 = call ptr @Builtins__structGet(ptr %997, ptr %11627)
  %11629 = load ptr, ptr @tag_Equals, align 8
  %11630 = call ptr @Builtins__structGet(ptr %997, ptr %11629)
  %11631 = load ptr, ptr @tag_TypeOf, align 8
  %11632 = call ptr @Builtins__structGet(ptr %997, ptr %11631)
  %11633 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11634 = call ptr @Builtins__structGet(ptr %997, ptr %11633)
  %11635 = load ptr, ptr @tag_Equals, align 8
  %11636 = call ptr @Builtins__structGet(ptr %997, ptr %11635)
  %11637 = load ptr, ptr @tag_TypeOf, align 8
  %11638 = call ptr @Builtins__structGet(ptr %997, ptr %11637)
  %11639 = load ptr, ptr @tag_IfElse, align 8
  %11640 = call ptr @Builtins__structGet(ptr %997, ptr %11639)
  %11641 = load ptr, ptr @tag_Equals, align 8
  %11642 = call ptr @Builtins__structGet(ptr %997, ptr %11641)
  %11643 = load ptr, ptr @tag_Equals, align 8
  %11644 = call ptr @Builtins__structGet(ptr %997, ptr %11643)
  %11645 = load ptr, ptr @tag_Equals, align 8
  %11646 = call ptr @Builtins__structGet(ptr %997, ptr %11645)
  %11647 = load ptr, ptr @tag_TypeOf, align 8
  %11648 = call ptr @Builtins__structGet(ptr %997, ptr %11647)
  %11649 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11650 = call ptr @Builtins__structGet(ptr %997, ptr %11649)
  %11651 = load ptr, ptr @tag_Equals, align 8
  %11652 = call ptr @Builtins__structGet(ptr %997, ptr %11651)
  %11653 = load ptr, ptr @tag_Equals, align 8
  %11654 = call ptr @Builtins__structGet(ptr %997, ptr %11653)
  %11655 = load ptr, ptr @tag_Equals, align 8
  %11656 = call ptr @Builtins__structGet(ptr %997, ptr %11655)
  %11657 = load ptr, ptr @tag_TypeOf, align 8
  %11658 = call ptr @Builtins__structGet(ptr %997, ptr %11657)
  %11659 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11660 = call ptr @Builtins__structGet(ptr %997, ptr %11659)
  %11661 = load ptr, ptr @tag_Equals, align 8
  %11662 = call ptr @Builtins__structGet(ptr %997, ptr %11661)
  %11663 = load ptr, ptr @tag_TypeOf, align 8
  %11664 = call ptr @Builtins__structGet(ptr %997, ptr %11663)
  %11665 = load ptr, ptr @tag_Equals, align 8
  %11666 = call ptr @Builtins__structGet(ptr %997, ptr %11665)
  %11667 = load ptr, ptr @tag_Equals, align 8
  %11668 = call ptr @Builtins__structGet(ptr %997, ptr %11667)
  %11669 = load ptr, ptr @tag_Equals, align 8
  %11670 = call ptr @Builtins__structGet(ptr %997, ptr %11669)
  %11671 = load ptr, ptr @tag_TypeOf, align 8
  %11672 = call ptr @Builtins__structGet(ptr %997, ptr %11671)
  %11673 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11674 = call ptr @Builtins__structGet(ptr %997, ptr %11673)
  %11675 = load ptr, ptr @tag_Equals, align 8
  %11676 = call ptr @Builtins__structGet(ptr %997, ptr %11675)
  %11677 = load ptr, ptr @tag_TypeOf, align 8
  %11678 = call ptr @Builtins__structGet(ptr %997, ptr %11677)
  %11679 = load ptr, ptr @tag_Equals, align 8
  %11680 = call ptr @Builtins__structGet(ptr %997, ptr %11679)
  %11681 = load ptr, ptr @tag_Equals, align 8
  %11682 = call ptr @Builtins__structGet(ptr %997, ptr %11681)
  %11683 = load ptr, ptr @tag_Equals, align 8
  %11684 = call ptr @Builtins__structGet(ptr %997, ptr %11683)
  %11685 = load ptr, ptr @tag_TypeOf, align 8
  %11686 = call ptr @Builtins__structGet(ptr %997, ptr %11685)
  %11687 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11688 = call ptr @Builtins__structGet(ptr %997, ptr %11687)
  %11689 = load ptr, ptr @tag_Equals, align 8
  %11690 = call ptr @Builtins__structGet(ptr %997, ptr %11689)
  %11691 = load ptr, ptr @tag_TypeOf, align 8
  %11692 = call ptr @Builtins__structGet(ptr %997, ptr %11691)
  %11693 = load ptr, ptr @tag_Equals, align 8
  %11694 = call ptr @Builtins__structGet(ptr %997, ptr %11693)
  %11695 = load ptr, ptr @tag_Equals, align 8
  %11696 = call ptr @Builtins__structGet(ptr %997, ptr %11695)
  %11697 = load ptr, ptr @tag_Equals, align 8
  %11698 = call ptr @Builtins__structGet(ptr %997, ptr %11697)
  %11699 = load ptr, ptr @tag_TypeOf, align 8
  %11700 = call ptr @Builtins__structGet(ptr %997, ptr %11699)
  %11701 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11702 = call ptr @Builtins__structGet(ptr %997, ptr %11701)
  %11703 = load ptr, ptr @tag_Equals, align 8
  %11704 = call ptr @Builtins__structGet(ptr %997, ptr %11703)
  %11705 = load ptr, ptr @tag_TypeOf, align 8
  %11706 = call ptr @Builtins__structGet(ptr %997, ptr %11705)
  %11707 = load ptr, ptr @tag_IfElse, align 8
  %11708 = call ptr @Builtins__structGet(ptr %997, ptr %11707)
  %11709 = load ptr, ptr @tag_Equals, align 8
  %11710 = call ptr @Builtins__structGet(ptr %997, ptr %11709)
  %11711 = load ptr, ptr @tag_Equals, align 8
  %11712 = call ptr @Builtins__structGet(ptr %997, ptr %11711)
  %11713 = load ptr, ptr @tag_Equals, align 8
  %11714 = call ptr @Builtins__structGet(ptr %997, ptr %11713)
  %11715 = load ptr, ptr @tag_TypeOf, align 8
  %11716 = call ptr @Builtins__structGet(ptr %997, ptr %11715)
  %11717 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11718 = call ptr @Builtins__structGet(ptr %997, ptr %11717)
  %11719 = load ptr, ptr @tag_Equals, align 8
  %11720 = call ptr @Builtins__structGet(ptr %997, ptr %11719)
  %11721 = load ptr, ptr @tag_TypeOf, align 8
  %11722 = call ptr @Builtins__structGet(ptr %997, ptr %11721)
  %11723 = load ptr, ptr @tag_Equals, align 8
  %11724 = call ptr @Builtins__structGet(ptr %997, ptr %11723)
  %11725 = load ptr, ptr @tag_Equals, align 8
  %11726 = call ptr @Builtins__structGet(ptr %997, ptr %11725)
  %11727 = load ptr, ptr @tag_Equals, align 8
  %11728 = call ptr @Builtins__structGet(ptr %997, ptr %11727)
  %11729 = load ptr, ptr @tag_TypeOf, align 8
  %11730 = call ptr @Builtins__structGet(ptr %997, ptr %11729)
  %11731 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11732 = call ptr @Builtins__structGet(ptr %997, ptr %11731)
  %11733 = load ptr, ptr @tag_Equals, align 8
  %11734 = call ptr @Builtins__structGet(ptr %997, ptr %11733)
  %11735 = load ptr, ptr @tag_TypeOf, align 8
  %11736 = call ptr @Builtins__structGet(ptr %997, ptr %11735)
  %11737 = load ptr, ptr @tag_IfElse, align 8
  %11738 = call ptr @Builtins__structGet(ptr %997, ptr %11737)
  %11739 = load ptr, ptr @tag_Equals, align 8
  %11740 = call ptr @Builtins__structGet(ptr %997, ptr %11739)
  %11741 = load ptr, ptr @tag_Equals, align 8
  %11742 = call ptr @Builtins__structGet(ptr %997, ptr %11741)
  %11743 = load ptr, ptr @tag_TypeOf, align 8
  %11744 = call ptr @Builtins__structGet(ptr %997, ptr %11743)
  %11745 = load ptr, ptr @tag_IntAdd, align 8
  %11746 = call ptr @Builtins__structGet(ptr %997, ptr %11745)
  %11747 = load ptr, ptr @tag_IntSubtract, align 8
  %11748 = call ptr @Builtins__structGet(ptr %997, ptr %11747)
  %11749 = load ptr, ptr @tag_IntMultiply, align 8
  %11750 = call ptr @Builtins__structGet(ptr %997, ptr %11749)
  %11751 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %11752 = call ptr @Builtins__structGet(ptr %997, ptr %11751)
  %11753 = load ptr, ptr @tag_IntRemainder, align 8
  %11754 = call ptr @Builtins__structGet(ptr %997, ptr %11753)
  %11755 = load ptr, ptr @tag_IntModulo, align 8
  %11756 = call ptr @Builtins__structGet(ptr %997, ptr %11755)
  %11757 = load ptr, ptr @tag_IntShiftLeft, align 8
  %11758 = call ptr @Builtins__structGet(ptr %997, ptr %11757)
  %11759 = load ptr, ptr @tag_IntShiftRight, align 8
  %11760 = call ptr @Builtins__structGet(ptr %997, ptr %11759)
  %11761 = load ptr, ptr @tag_IntBitLength, align 8
  %11762 = call ptr @Builtins__structGet(ptr %997, ptr %11761)
  %11763 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %11764 = call ptr @Builtins__structGet(ptr %997, ptr %11763)
  %11765 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %11766 = call ptr @Builtins__structGet(ptr %997, ptr %11765)
  %11767 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %11768 = call ptr @Builtins__structGet(ptr %997, ptr %11767)
  %11769 = load ptr, ptr @tag_IntParse, align 8
  %11770 = call ptr @Builtins__structGet(ptr %997, ptr %11769)
  %11771 = load ptr, ptr @tag_Equals, align 8
  %11772 = call ptr @Builtins__structGet(ptr %997, ptr %11771)
  %11773 = load ptr, ptr @tag_Equals, align 8
  %11774 = call ptr @Builtins__structGet(ptr %997, ptr %11773)
  %11775 = load ptr, ptr @tag_Equals, align 8
  %11776 = call ptr @Builtins__structGet(ptr %997, ptr %11775)
  %11777 = load ptr, ptr @tag_TypeOf, align 8
  %11778 = call ptr @Builtins__structGet(ptr %997, ptr %11777)
  %11779 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11780 = call ptr @Builtins__structGet(ptr %997, ptr %11779)
  %11781 = load ptr, ptr @tag_Equals, align 8
  %11782 = call ptr @Builtins__structGet(ptr %997, ptr %11781)
  %11783 = load ptr, ptr @tag_TypeOf, align 8
  %11784 = call ptr @Builtins__structGet(ptr %997, ptr %11783)
  %11785 = load ptr, ptr @tag_Equals, align 8
  %11786 = call ptr @Builtins__structGet(ptr %997, ptr %11785)
  %11787 = load ptr, ptr @tag_Equals, align 8
  %11788 = call ptr @Builtins__structGet(ptr %997, ptr %11787)
  %11789 = load ptr, ptr @tag_Equals, align 8
  %11790 = call ptr @Builtins__structGet(ptr %997, ptr %11789)
  %11791 = load ptr, ptr @tag_TypeOf, align 8
  %11792 = call ptr @Builtins__structGet(ptr %997, ptr %11791)
  %11793 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11794 = call ptr @Builtins__structGet(ptr %997, ptr %11793)
  %11795 = load ptr, ptr @tag_Equals, align 8
  %11796 = call ptr @Builtins__structGet(ptr %997, ptr %11795)
  %11797 = load ptr, ptr @tag_TypeOf, align 8
  %11798 = call ptr @Builtins__structGet(ptr %997, ptr %11797)
  %11799 = load ptr, ptr @tag_Equals, align 8
  %11800 = call ptr @Builtins__structGet(ptr %997, ptr %11799)
  %11801 = load ptr, ptr @tag_Equals, align 8
  %11802 = call ptr @Builtins__structGet(ptr %997, ptr %11801)
  %11803 = load ptr, ptr @tag_Equals, align 8
  %11804 = call ptr @Builtins__structGet(ptr %997, ptr %11803)
  %11805 = load ptr, ptr @tag_TypeOf, align 8
  %11806 = call ptr @Builtins__structGet(ptr %997, ptr %11805)
  %11807 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11808 = call ptr @Builtins__structGet(ptr %997, ptr %11807)
  %11809 = load ptr, ptr @tag_Equals, align 8
  %11810 = call ptr @Builtins__structGet(ptr %997, ptr %11809)
  %11811 = load ptr, ptr @tag_TypeOf, align 8
  %11812 = call ptr @Builtins__structGet(ptr %997, ptr %11811)
  %11813 = load ptr, ptr @tag_IfElse, align 8
  %11814 = call ptr @Builtins__structGet(ptr %997, ptr %11813)
  %11815 = load ptr, ptr @tag_Equals, align 8
  %11816 = call ptr @Builtins__structGet(ptr %997, ptr %11815)
  %11817 = load ptr, ptr @tag_Equals, align 8
  %11818 = call ptr @Builtins__structGet(ptr %997, ptr %11817)
  %11819 = load ptr, ptr @tag_Equals, align 8
  %11820 = call ptr @Builtins__structGet(ptr %997, ptr %11819)
  %11821 = load ptr, ptr @tag_TypeOf, align 8
  %11822 = call ptr @Builtins__structGet(ptr %997, ptr %11821)
  %11823 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11824 = call ptr @Builtins__structGet(ptr %997, ptr %11823)
  %11825 = load ptr, ptr @tag_Equals, align 8
  %11826 = call ptr @Builtins__structGet(ptr %997, ptr %11825)
  %11827 = load ptr, ptr @tag_Equals, align 8
  %11828 = call ptr @Builtins__structGet(ptr %997, ptr %11827)
  %11829 = load ptr, ptr @tag_Equals, align 8
  %11830 = call ptr @Builtins__structGet(ptr %997, ptr %11829)
  %11831 = load ptr, ptr @tag_TypeOf, align 8
  %11832 = call ptr @Builtins__structGet(ptr %997, ptr %11831)
  %11833 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11834 = call ptr @Builtins__structGet(ptr %997, ptr %11833)
  %11835 = load ptr, ptr @tag_Equals, align 8
  %11836 = call ptr @Builtins__structGet(ptr %997, ptr %11835)
  %11837 = load ptr, ptr @tag_TypeOf, align 8
  %11838 = call ptr @Builtins__structGet(ptr %997, ptr %11837)
  %11839 = load ptr, ptr @tag_Equals, align 8
  %11840 = call ptr @Builtins__structGet(ptr %997, ptr %11839)
  %11841 = load ptr, ptr @tag_Equals, align 8
  %11842 = call ptr @Builtins__structGet(ptr %997, ptr %11841)
  %11843 = load ptr, ptr @tag_Equals, align 8
  %11844 = call ptr @Builtins__structGet(ptr %997, ptr %11843)
  %11845 = load ptr, ptr @tag_TypeOf, align 8
  %11846 = call ptr @Builtins__structGet(ptr %997, ptr %11845)
  %11847 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11848 = call ptr @Builtins__structGet(ptr %997, ptr %11847)
  %11849 = load ptr, ptr @tag_Equals, align 8
  %11850 = call ptr @Builtins__structGet(ptr %997, ptr %11849)
  %11851 = load ptr, ptr @tag_TypeOf, align 8
  %11852 = call ptr @Builtins__structGet(ptr %997, ptr %11851)
  %11853 = load ptr, ptr @tag_IfElse, align 8
  %11854 = call ptr @Builtins__structGet(ptr %997, ptr %11853)
  %11855 = load ptr, ptr @tag_Equals, align 8
  %11856 = call ptr @Builtins__structGet(ptr %997, ptr %11855)
  %11857 = load ptr, ptr @tag_TypeOf, align 8
  %11858 = call ptr @Builtins__structGet(ptr %997, ptr %11857)
  %11859 = load ptr, ptr @tag_Equals, align 8
  %11860 = call ptr @Builtins__structGet(ptr %997, ptr %11859)
  %11861 = load ptr, ptr @tag_Equals, align 8
  %11862 = call ptr @Builtins__structGet(ptr %997, ptr %11861)
  %11863 = load ptr, ptr @tag_Equals, align 8
  %11864 = call ptr @Builtins__structGet(ptr %997, ptr %11863)
  %11865 = load ptr, ptr @tag_TypeOf, align 8
  %11866 = call ptr @Builtins__structGet(ptr %997, ptr %11865)
  %11867 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11868 = call ptr @Builtins__structGet(ptr %997, ptr %11867)
  %11869 = load ptr, ptr @tag_Equals, align 8
  %11870 = call ptr @Builtins__structGet(ptr %997, ptr %11869)
  %11871 = load ptr, ptr @tag_TypeOf, align 8
  %11872 = call ptr @Builtins__structGet(ptr %997, ptr %11871)
  %11873 = load ptr, ptr @tag_Equals, align 8
  %11874 = call ptr @Builtins__structGet(ptr %997, ptr %11873)
  %11875 = load ptr, ptr @tag_Equals, align 8
  %11876 = call ptr @Builtins__structGet(ptr %997, ptr %11875)
  %11877 = load ptr, ptr @tag_Equals, align 8
  %11878 = call ptr @Builtins__structGet(ptr %997, ptr %11877)
  %11879 = load ptr, ptr @tag_TypeOf, align 8
  %11880 = call ptr @Builtins__structGet(ptr %997, ptr %11879)
  %11881 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11882 = call ptr @Builtins__structGet(ptr %997, ptr %11881)
  %11883 = load ptr, ptr @tag_Equals, align 8
  %11884 = call ptr @Builtins__structGet(ptr %997, ptr %11883)
  %11885 = load ptr, ptr @tag_TypeOf, align 8
  %11886 = call ptr @Builtins__structGet(ptr %997, ptr %11885)
  %11887 = load ptr, ptr @tag_Equals, align 8
  %11888 = call ptr @Builtins__structGet(ptr %997, ptr %11887)
  %11889 = load ptr, ptr @tag_Equals, align 8
  %11890 = call ptr @Builtins__structGet(ptr %997, ptr %11889)
  %11891 = load ptr, ptr @tag_Equals, align 8
  %11892 = call ptr @Builtins__structGet(ptr %997, ptr %11891)
  %11893 = load ptr, ptr @tag_TypeOf, align 8
  %11894 = call ptr @Builtins__structGet(ptr %997, ptr %11893)
  %11895 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11896 = call ptr @Builtins__structGet(ptr %997, ptr %11895)
  %11897 = load ptr, ptr @tag_Equals, align 8
  %11898 = call ptr @Builtins__structGet(ptr %997, ptr %11897)
  %11899 = load ptr, ptr @tag_TypeOf, align 8
  %11900 = call ptr @Builtins__structGet(ptr %997, ptr %11899)
  %11901 = load ptr, ptr @tag_IfElse, align 8
  %11902 = call ptr @Builtins__structGet(ptr %997, ptr %11901)
  %11903 = load ptr, ptr @tag_Equals, align 8
  %11904 = call ptr @Builtins__structGet(ptr %997, ptr %11903)
  %11905 = load ptr, ptr @tag_TypeOf, align 8
  %11906 = call ptr @Builtins__structGet(ptr %997, ptr %11905)
  %11907 = load ptr, ptr @tag_TagHasValue, align 8
  %11908 = call ptr @Builtins__structGet(ptr %997, ptr %11907)
  %11909 = load ptr, ptr @tag_TagWithoutValue, align 8
  %11910 = call ptr @Builtins__structGet(ptr %997, ptr %11909)
  %11911 = load ptr, ptr @tag_TagGetValue, align 8
  %11912 = call ptr @Builtins__structGet(ptr %997, ptr %11911)
  %11913 = load ptr, ptr @tag_Equals, align 8
  %11914 = call ptr @Builtins__structGet(ptr %997, ptr %11913)
  %11915 = load ptr, ptr @tag_TypeOf, align 8
  %11916 = call ptr @Builtins__structGet(ptr %997, ptr %11915)
  %11917 = load ptr, ptr @tag_Equals, align 8
  %11918 = call ptr @Builtins__structGet(ptr %997, ptr %11917)
  %11919 = load ptr, ptr @tag_TypeOf, align 8
  %11920 = call ptr @Builtins__structGet(ptr %997, ptr %11919)
  %11921 = load ptr, ptr @tag_ListLength, align 8
  %11922 = call ptr @Builtins__structGet(ptr %997, ptr %11921)
  %11923 = load ptr, ptr @tag_ListGet, align 8
  %11924 = call ptr @Builtins__structGet(ptr %997, ptr %11923)
  %11925 = load ptr, ptr @tag_ListInsert, align 8
  %11926 = call ptr @Builtins__structGet(ptr %997, ptr %11925)
  %11927 = load ptr, ptr @tag_ListReplace, align 8
  %11928 = call ptr @Builtins__structGet(ptr %997, ptr %11927)
  %11929 = load ptr, ptr @tag_ListRemoveAt, align 8
  %11930 = call ptr @Builtins__structGet(ptr %997, ptr %11929)
  %11931 = load ptr, ptr @tag_ListFilled, align 8
  %11932 = call ptr @Builtins__structGet(ptr %997, ptr %11931)
  %11933 = load ptr, ptr @tag_Equals, align 8
  %11934 = call ptr @Builtins__structGet(ptr %997, ptr %11933)
  %11935 = load ptr, ptr @tag_Equals, align 8
  %11936 = call ptr @Builtins__structGet(ptr %997, ptr %11935)
  %11937 = load ptr, ptr @tag_Equals, align 8
  %11938 = call ptr @Builtins__structGet(ptr %997, ptr %11937)
  %11939 = load ptr, ptr @tag_TypeOf, align 8
  %11940 = call ptr @Builtins__structGet(ptr %997, ptr %11939)
  %11941 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11942 = call ptr @Builtins__structGet(ptr %997, ptr %11941)
  %11943 = load ptr, ptr @tag_Equals, align 8
  %11944 = call ptr @Builtins__structGet(ptr %997, ptr %11943)
  %11945 = load ptr, ptr @tag_TypeOf, align 8
  %11946 = call ptr @Builtins__structGet(ptr %997, ptr %11945)
  %11947 = load ptr, ptr @tag_Equals, align 8
  %11948 = call ptr @Builtins__structGet(ptr %997, ptr %11947)
  %11949 = load ptr, ptr @tag_Equals, align 8
  %11950 = call ptr @Builtins__structGet(ptr %997, ptr %11949)
  %11951 = load ptr, ptr @tag_Equals, align 8
  %11952 = call ptr @Builtins__structGet(ptr %997, ptr %11951)
  %11953 = load ptr, ptr @tag_TypeOf, align 8
  %11954 = call ptr @Builtins__structGet(ptr %997, ptr %11953)
  %11955 = load ptr, ptr @tag_GetArgumentCount, align 8
  %11956 = call ptr @Builtins__structGet(ptr %997, ptr %11955)
  %11957 = load ptr, ptr @tag_Equals, align 8
  %11958 = call ptr @Builtins__structGet(ptr %997, ptr %11957)
  %11959 = load ptr, ptr @tag_TypeOf, align 8
  %11960 = call ptr @Builtins__structGet(ptr %997, ptr %11959)
  %11961 = load ptr, ptr @tag_IfElse, align 8
  %11962 = call ptr @Builtins__structGet(ptr %997, ptr %11961)
  %11963 = load ptr, ptr @tag_Equals, align 8
  %11964 = call ptr @Builtins__structGet(ptr %997, ptr %11963)
  %11965 = load ptr, ptr @tag_TypeOf, align 8
  %11966 = call ptr @Builtins__structGet(ptr %997, ptr %11965)
  %11967 = load ptr, ptr @tag_Equals, align 8
  %11968 = call ptr @Builtins__structGet(ptr %997, ptr %11967)
  %11969 = load ptr, ptr @tag_TypeOf, align 8
  %11970 = call ptr @Builtins__structGet(ptr %997, ptr %11969)
  %11971 = load ptr, ptr @tag_TextFromUtf8, align 8
  %11972 = call ptr @Builtins__structGet(ptr %997, ptr %11971)
  %11973 = load ptr, ptr @tag_TextIsEmpty, align 8
  %11974 = call ptr @Builtins__structGet(ptr %997, ptr %11973)
  %11975 = load ptr, ptr @tag_TextLength, align 8
  %11976 = call ptr @Builtins__structGet(ptr %997, ptr %11975)
  %11977 = load ptr, ptr @tag_TextCharacters, align 8
  %11978 = call ptr @Builtins__structGet(ptr %997, ptr %11977)
  %11979 = load ptr, ptr @tag_TextGetRange, align 8
  %11980 = call ptr @Builtins__structGet(ptr %997, ptr %11979)
  %11981 = load ptr, ptr @tag_TextConcatenate, align 8
  %11982 = call ptr @Builtins__structGet(ptr %997, ptr %11981)
  %11983 = load ptr, ptr @tag_TextStartsWith, align 8
  %11984 = call ptr @Builtins__structGet(ptr %997, ptr %11983)
  %11985 = load ptr, ptr @tag_TextEndsWith, align 8
  %11986 = call ptr @Builtins__structGet(ptr %997, ptr %11985)
  %11987 = load ptr, ptr @tag_TextContains, align 8
  %11988 = call ptr @Builtins__structGet(ptr %997, ptr %11987)
  %11989 = load ptr, ptr @tag_TextTrimStart, align 8
  %11990 = call ptr @Builtins__structGet(ptr %997, ptr %11989)
  %11991 = load ptr, ptr @tag_TextTrimEnd, align 8
  %11992 = call ptr @Builtins__structGet(ptr %997, ptr %11991)
  %11993 = load ptr, ptr @tag_Equals, align 8
  %11994 = call ptr @Builtins__structGet(ptr %997, ptr %11993)
  %11995 = load ptr, ptr @tag_TypeOf, align 8
  %11996 = call ptr @Builtins__structGet(ptr %997, ptr %11995)
  %11997 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:sqrt:sqrt:7\00", ptr %11997, align 1
  %11998 = call ptr @make_candy_text(ptr %11997)
  store ptr %11998, ptr @"Examples:sqrt:sqrt:7", align 8
  %11999 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:sqrt:sqrt:9\00", ptr %11999, align 1
  %12000 = call ptr @make_candy_text(ptr %11999)
  store ptr %12000, ptr @"Examples:sqrt:sqrt:9", align 8
  %12001 = alloca i8, i64 38, align 1
  store [38 x i8] c"`fixedDecimal.is x` was not satisfied\00", ptr %12001, align 1
  %12002 = call ptr @make_candy_text(ptr %12001)
  store ptr %12002, ptr @"text_`fixedDecimal.is x` was not satisfied", align 8
  %12003 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:11\00", ptr %12003, align 1
  %12004 = call ptr @make_candy_text(ptr %12003)
  store ptr %12004, ptr @"Examples:sqrt:sqrt:11", align 8
  %12005 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:19\00", ptr %12005, align 1
  %12006 = call ptr @make_candy_text(ptr %12005)
  store ptr %12006, ptr @"Examples:sqrt:sqrt:19", align 8
  %12007 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:21\00", ptr %12007, align 1
  %12008 = call ptr @make_candy_text(ptr %12007)
  store ptr %12008, ptr @"Examples:sqrt:sqrt:21", align 8
  %12009 = alloca i8, i64 49, align 1
  store [49 x i8] c"`fixedDecimal.isNonNegative x` was not satisfied\00", ptr %12009, align 1
  %12010 = call ptr @make_candy_text(ptr %12009)
  store ptr %12010, ptr @"text_`fixedDecimal.isNonNegative x` was not satisfied", align 8
  %12011 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:23\00", ptr %12011, align 1
  %12012 = call ptr @make_candy_text(ptr %12011)
  store ptr %12012, ptr @"Examples:sqrt:sqrt:23", align 8
  %12013 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:31\00", ptr %12013, align 1
  %12014 = call ptr @make_candy_text(ptr %12013)
  store ptr %12014, ptr @"Examples:sqrt:sqrt:31", align 8
  %12015 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:33\00", ptr %12015, align 1
  %12016 = call ptr @make_candy_text(ptr %12015)
  store ptr %12016, ptr @"Examples:sqrt:sqrt:33", align 8
  %12017 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int.is precision` was not satisfied\00", ptr %12017, align 1
  %12018 = call ptr @make_candy_text(ptr %12017)
  store ptr %12018, ptr @"text_`int.is precision` was not satisfied", align 8
  %12019 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:35\00", ptr %12019, align 1
  %12020 = call ptr @make_candy_text(ptr %12019)
  store ptr %12020, ptr @"Examples:sqrt:sqrt:35", align 8
  %12021 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:43\00", ptr %12021, align 1
  %12022 = call ptr @make_candy_text(ptr %12021)
  store ptr %12022, ptr @"Examples:sqrt:sqrt:43", align 8
  %12023 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:45\00", ptr %12023, align 1
  %12024 = call ptr @make_candy_text(ptr %12023)
  store ptr %12024, ptr @"Examples:sqrt:sqrt:45", align 8
  %12025 = alloca i8, i64 48, align 1
  store [48 x i8] c"`int.isNonNegative precision` was not satisfied\00", ptr %12025, align 1
  %12026 = call ptr @make_candy_text(ptr %12025)
  store ptr %12026, ptr @"text_`int.isNonNegative precision` was not satisfied", align 8
  %12027 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:47\00", ptr %12027, align 1
  %12028 = call ptr @make_candy_text(ptr %12027)
  store ptr %12028, ptr @"Examples:sqrt:sqrt:47", align 8
  %12029 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:56\00", ptr %12029, align 1
  %12030 = call ptr @make_candy_text(ptr %12029)
  store ptr %12030, ptr @"Examples:sqrt:sqrt:56", align 8
  %12031 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:58\00", ptr %12031, align 1
  %12032 = call ptr @make_candy_text(ptr %12031)
  store ptr %12032, ptr @"Examples:sqrt:sqrt:58", align 8
  %12033 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:69\00", ptr %12033, align 1
  %12034 = call ptr @make_candy_text(ptr %12033)
  store ptr %12034, ptr @"Examples:sqrt:sqrt:69", align 8
  %12035 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:78\00", ptr %12035, align 1
  %12036 = call ptr @make_candy_text(ptr %12035)
  store ptr %12036, ptr @"Examples:sqrt:sqrt:78", align 8
  %12037 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:79\00", ptr %12037, align 1
  %12038 = call ptr @make_candy_text(ptr %12037)
  store ptr %12038, ptr @"Examples:sqrt:sqrt:79", align 8
  %12039 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:81\00", ptr %12039, align 1
  %12040 = call ptr @make_candy_text(ptr %12039)
  store ptr %12040, ptr @"Examples:sqrt:sqrt:81", align 8
  %12041 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:sqrt:sqrt:82:7\00", ptr %12041, align 1
  %12042 = call ptr @make_candy_text(ptr %12041)
  store ptr %12042, ptr @"Examples:sqrt:sqrt:82:7", align 8
  %12043 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:16\00", ptr %12043, align 1
  %12044 = call ptr @make_candy_text(ptr %12043)
  store ptr %12044, ptr @"Examples:sqrt:sqrt:82:16", align 8
  %12045 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:25\00", ptr %12045, align 1
  %12046 = call ptr @make_candy_text(ptr %12045)
  store ptr %12046, ptr @"Examples:sqrt:sqrt:82:25", align 8
  %12047 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:28\00", ptr %12047, align 1
  %12048 = call ptr @make_candy_text(ptr %12047)
  store ptr %12048, ptr @"Examples:sqrt:sqrt:82:28", align 8
  %12049 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:29\00", ptr %12049, align 1
  %12050 = call ptr @make_candy_text(ptr %12049)
  store ptr %12050, ptr @"Examples:sqrt:sqrt:82:29", align 8
  %12051 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:38\00", ptr %12051, align 1
  %12052 = call ptr @make_candy_text(ptr %12051)
  store ptr %12052, ptr @"Examples:sqrt:sqrt:82:38", align 8
  %12053 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:39\00", ptr %12053, align 1
  %12054 = call ptr @make_candy_text(ptr %12053)
  store ptr %12054, ptr @"Examples:sqrt:sqrt:82:39", align 8
  %12055 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:41\00", ptr %12055, align 1
  %12056 = call ptr @make_candy_text(ptr %12055)
  store ptr %12056, ptr @"Examples:sqrt:sqrt:82:41", align 8
  %12057 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:51\00", ptr %12057, align 1
  %12058 = call ptr @make_candy_text(ptr %12057)
  store ptr %12058, ptr @"Examples:sqrt:sqrt:82:51", align 8
  %12059 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:55\00", ptr %12059, align 1
  %12060 = call ptr @make_candy_text(ptr %12059)
  store ptr %12060, ptr @"Examples:sqrt:sqrt:82:55", align 8
  %12061 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:sqrt:sqrt:82:57:2\00", ptr %12061, align 1
  %12062 = call ptr @make_candy_text(ptr %12061)
  store ptr %12062, ptr @"Examples:sqrt:sqrt:82:57:2", align 8
  %12063 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:58\00", ptr %12063, align 1
  %12064 = call ptr @make_candy_text(ptr %12063)
  store ptr %12064, ptr @"Examples:sqrt:sqrt:82:58", align 8
  %12065 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:83\00", ptr %12065, align 1
  %12066 = call ptr @make_candy_text(ptr %12065)
  store ptr %12066, ptr @"Examples:sqrt:sqrt:83", align 8
  %12067 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %12068 = getelementptr inbounds { ptr, ptr, ptr }, ptr %12067, i32 0, i32 0
  store ptr %9076, ptr %12068, align 8
  %12069 = getelementptr inbounds { ptr, ptr, ptr }, ptr %12067, i32 0, i32 1
  store ptr %8262, ptr %12069, align 8
  %12070 = getelementptr inbounds { ptr, ptr, ptr }, ptr %12067, i32 0, i32 2
  store ptr %1432, ptr %12070, align 8
  %12071 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt, ptr %12067, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %12071, ptr @fun_Examples_sqrt_sqrt, align 8
  %12072 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:10\00", ptr %12072, align 1
  %12073 = call ptr @make_candy_text(ptr %12072)
  store ptr %12073, ptr @"Examples:sqrt:main:10", align 8
  %12074 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:11\00", ptr %12074, align 1
  %12075 = call ptr @make_candy_text(ptr %12074)
  store ptr %12075, ptr @"Examples:sqrt:main:11", align 8
  %12076 = call ptr @make_candy_int(i64 65)
  store ptr %12076, ptr @num_65, align 8
  %12077 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:14\00", ptr %12077, align 1
  %12078 = call ptr @make_candy_text(ptr %12077)
  store ptr %12078, ptr @"Examples:sqrt:main:14", align 8
  %12079 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:23\00", ptr %12079, align 1
  %12080 = call ptr @make_candy_text(ptr %12079)
  store ptr %12080, ptr @"Examples:sqrt:main:23", align 8
  %12081 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:46\00", ptr %12081, align 1
  %12082 = call ptr @make_candy_text(ptr %12081)
  store ptr %12082, ptr @"Examples:sqrt:main:46", align 8
  %12083 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:47\00", ptr %12083, align 1
  %12084 = call ptr @make_candy_text(ptr %12083)
  store ptr %12084, ptr @"Examples:sqrt:main:47", align 8
  %12085 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:48\00", ptr %12085, align 1
  %12086 = call ptr @make_candy_text(ptr %12085)
  store ptr %12086, ptr @"Examples:sqrt:main:48", align 8
  %12087 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:49\00", ptr %12087, align 1
  %12088 = call ptr @make_candy_text(ptr %12087)
  store ptr %12088, ptr @"Examples:sqrt:main:49", align 8
  %12089 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:sqrt:main:51:0\00", ptr %12089, align 1
  %12090 = call ptr @make_candy_text(ptr %12089)
  store ptr %12090, ptr @"Examples:sqrt:main:51:0", align 8
  %12091 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:52\00", ptr %12091, align 1
  %12092 = call ptr @make_candy_text(ptr %12091)
  store ptr %12092, ptr @"Examples:sqrt:main:52", align 8
  %12093 = alloca i8, i64 18, align 1
  store [18 x i8] c"The root of 2 is \00", ptr %12093, align 1
  %12094 = call ptr @make_candy_text(ptr %12093)
  store ptr %12094, ptr @"text_The root of 2 is ", align 8
  %12095 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:55\00", ptr %12095, align 1
  %12096 = call ptr @make_candy_text(ptr %12095)
  store ptr %12096, ptr @"Examples:sqrt:main:55", align 8
  %12097 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:56\00", ptr %12097, align 1
  %12098 = call ptr @make_candy_text(ptr %12097)
  store ptr %12098, ptr @"Examples:sqrt:main:56", align 8
  %12099 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %12100 = getelementptr inbounds { ptr, ptr }, ptr %12099, i32 0, i32 0
  store ptr %997, ptr %12100, align 8
  %12101 = getelementptr inbounds { ptr, ptr }, ptr %12099, i32 0, i32 1
  store ptr %8262, ptr %12101, align 8
  %12102 = call ptr @make_candy_function(ptr @Examples_sqrt_main, ptr %12099, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %12102, ptr @fun_Examples_sqrt_main, align 8
  %12103 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %12103, align 1
  %12104 = call ptr @make_candy_tag(ptr %12103, ptr null)
  store ptr %12104, ptr @tag_Main, align 8
  %12105 = alloca i8, i64 5, align 1
  store [5 x i8] c"Sqrt\00", ptr %12105, align 1
  %12106 = call ptr @make_candy_tag(ptr %12105, ptr null)
  store ptr %12106, ptr @tag_Sqrt, align 8
  %12107 = alloca ptr, i64 3, align 8
  %12108 = alloca ptr, i64 3, align 8
  %12109 = load ptr, ptr @tag_Sqrt, align 8
  %12110 = load ptr, ptr @fun_Examples_sqrt_sqrt, align 8
  %12111 = getelementptr ptr, ptr %12107, i64 0
  store ptr %12109, ptr %12111, align 8
  %12112 = getelementptr ptr, ptr %12108, i64 0
  store ptr %12110, ptr %12112, align 8
  %12113 = load ptr, ptr @tag_Main, align 8
  %12114 = load ptr, ptr @fun_Examples_sqrt_main, align 8
  %12115 = getelementptr ptr, ptr %12107, i64 1
  store ptr %12113, ptr %12115, align 8
  %12116 = getelementptr ptr, ptr %12108, i64 1
  store ptr %12114, ptr %12116, align 8
  %12117 = getelementptr ptr, ptr %12107, i64 2
  store ptr null, ptr %12117, align 8
  %12118 = getelementptr ptr, ptr %12108, i64 2
  store ptr null, ptr %12118, align 8
  %12119 = call ptr @make_candy_struct(ptr %12107, ptr %12108)
  %12120 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %12120, align 1
  %12121 = call ptr @make_candy_tag(ptr %12120, ptr null)
  %12122 = call ptr @candy_builtin_struct_get(ptr %12119, ptr %12121)
  %12123 = call ptr @run_candy_main(ptr %12122, ptr @candy_environment)
  call void @print_candy_value(ptr %12123)
  %12124 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %12124)
  %12125 = load ptr, ptr @"Builtins::fitsInRustU128:10", align 8
  call void @free_candy_value(ptr %12125)
  %12126 = load ptr, ptr @"Builtins::fitsInRustU128:16", align 8
  call void @free_candy_value(ptr %12126)
  %12127 = load ptr, ptr @"Builtins::fitsInRustU128:5", align 8
  call void @free_candy_value(ptr %12127)
  %12128 = load ptr, ptr @"Builtins::fitsInRustU128:8", align 8
  call void @free_candy_value(ptr %12128)
  %12129 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %12129)
  %12130 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %12130)
  %12131 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %12131)
  %12132 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %12132)
  %12133 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %12133)
  %12134 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %12134)
  %12135 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %12135)
  %12136 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %12136)
  %12137 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %12137)
  %12138 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %12138)
  %12139 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %12139)
  %12140 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %12140)
  %12141 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %12141)
  %12142 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %12142)
  %12143 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %12143)
  %12144 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %12144)
  %12145 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %12145)
  %12146 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %12146)
  %12147 = load ptr, ptr @"Builtins::intBitLength:11", align 8
  call void @free_candy_value(ptr %12147)
  %12148 = load ptr, ptr @"Builtins::intBitLength:5", align 8
  call void @free_candy_value(ptr %12148)
  %12149 = load ptr, ptr @"Builtins::intBitwiseAnd:11", align 8
  call void @free_candy_value(ptr %12149)
  %12150 = load ptr, ptr @"Builtins::intBitwiseAnd:18", align 8
  call void @free_candy_value(ptr %12150)
  %12151 = load ptr, ptr @"Builtins::intBitwiseAnd:5", align 8
  call void @free_candy_value(ptr %12151)
  %12152 = load ptr, ptr @"Builtins::intBitwiseOr:11", align 8
  call void @free_candy_value(ptr %12152)
  %12153 = load ptr, ptr @"Builtins::intBitwiseOr:18", align 8
  call void @free_candy_value(ptr %12153)
  %12154 = load ptr, ptr @"Builtins::intBitwiseOr:5", align 8
  call void @free_candy_value(ptr %12154)
  %12155 = load ptr, ptr @"Builtins::intBitwiseXor:11", align 8
  call void @free_candy_value(ptr %12155)
  %12156 = load ptr, ptr @"Builtins::intBitwiseXor:18", align 8
  call void @free_candy_value(ptr %12156)
  %12157 = load ptr, ptr @"Builtins::intBitwiseXor:5", align 8
  call void @free_candy_value(ptr %12157)
  %12158 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %12158)
  %12159 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %12159)
  %12160 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %12160)
  %12161 = load ptr, ptr @"Builtins::intDivideTruncating:11", align 8
  call void @free_candy_value(ptr %12161)
  %12162 = load ptr, ptr @"Builtins::intDivideTruncating:17", align 8
  call void @free_candy_value(ptr %12162)
  %12163 = load ptr, ptr @"Builtins::intDivideTruncating:25", align 8
  call void @free_candy_value(ptr %12163)
  %12164 = load ptr, ptr @"Builtins::intDivideTruncating:32", align 8
  call void @free_candy_value(ptr %12164)
  %12165 = load ptr, ptr @"Builtins::intDivideTruncating:5", align 8
  call void @free_candy_value(ptr %12165)
  %12166 = load ptr, ptr @"Builtins::intModulo:11", align 8
  call void @free_candy_value(ptr %12166)
  %12167 = load ptr, ptr @"Builtins::intModulo:17", align 8
  call void @free_candy_value(ptr %12167)
  %12168 = load ptr, ptr @"Builtins::intModulo:25", align 8
  call void @free_candy_value(ptr %12168)
  %12169 = load ptr, ptr @"Builtins::intModulo:32", align 8
  call void @free_candy_value(ptr %12169)
  %12170 = load ptr, ptr @"Builtins::intModulo:5", align 8
  call void @free_candy_value(ptr %12170)
  %12171 = load ptr, ptr @"Builtins::intMultiply:11", align 8
  call void @free_candy_value(ptr %12171)
  %12172 = load ptr, ptr @"Builtins::intMultiply:18", align 8
  call void @free_candy_value(ptr %12172)
  %12173 = load ptr, ptr @"Builtins::intMultiply:5", align 8
  call void @free_candy_value(ptr %12173)
  %12174 = load ptr, ptr @"Builtins::intParse:11", align 8
  call void @free_candy_value(ptr %12174)
  %12175 = load ptr, ptr @"Builtins::intParse:5", align 8
  call void @free_candy_value(ptr %12175)
  %12176 = load ptr, ptr @"Builtins::intRemainder:11", align 8
  call void @free_candy_value(ptr %12176)
  %12177 = load ptr, ptr @"Builtins::intRemainder:17", align 8
  call void @free_candy_value(ptr %12177)
  %12178 = load ptr, ptr @"Builtins::intRemainder:25", align 8
  call void @free_candy_value(ptr %12178)
  %12179 = load ptr, ptr @"Builtins::intRemainder:32", align 8
  call void @free_candy_value(ptr %12179)
  %12180 = load ptr, ptr @"Builtins::intRemainder:5", align 8
  call void @free_candy_value(ptr %12180)
  %12181 = load ptr, ptr @"Builtins::intShiftLeft:11", align 8
  call void @free_candy_value(ptr %12181)
  %12182 = load ptr, ptr @"Builtins::intShiftLeft:14", align 8
  call void @free_candy_value(ptr %12182)
  %12183 = load ptr, ptr @"Builtins::intShiftLeft:23", align 8
  call void @free_candy_value(ptr %12183)
  %12184 = load ptr, ptr @"Builtins::intShiftLeft:24", align 8
  call void @free_candy_value(ptr %12184)
  %12185 = load ptr, ptr @"Builtins::intShiftLeft:26:0", align 8
  call void @free_candy_value(ptr %12185)
  %12186 = load ptr, ptr @"Builtins::intShiftLeft:27", align 8
  call void @free_candy_value(ptr %12186)
  %12187 = load ptr, ptr @"Builtins::intShiftLeft:29", align 8
  call void @free_candy_value(ptr %12187)
  %12188 = load ptr, ptr @"Builtins::intShiftLeft:30", align 8
  call void @free_candy_value(ptr %12188)
  %12189 = load ptr, ptr @"Builtins::intShiftLeft:31", align 8
  call void @free_candy_value(ptr %12189)
  %12190 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  call void @free_candy_value(ptr %12190)
  %12191 = load ptr, ptr @"Builtins::intShiftLeft:42", align 8
  call void @free_candy_value(ptr %12191)
  %12192 = load ptr, ptr @"Builtins::intShiftLeft:49", align 8
  call void @free_candy_value(ptr %12192)
  %12193 = load ptr, ptr @"Builtins::intShiftLeft:5", align 8
  call void @free_candy_value(ptr %12193)
  %12194 = load ptr, ptr @"Builtins::intShiftRight:11", align 8
  call void @free_candy_value(ptr %12194)
  %12195 = load ptr, ptr @"Builtins::intShiftRight:14", align 8
  call void @free_candy_value(ptr %12195)
  %12196 = load ptr, ptr @"Builtins::intShiftRight:23", align 8
  call void @free_candy_value(ptr %12196)
  %12197 = load ptr, ptr @"Builtins::intShiftRight:24", align 8
  call void @free_candy_value(ptr %12197)
  %12198 = load ptr, ptr @"Builtins::intShiftRight:26:0", align 8
  call void @free_candy_value(ptr %12198)
  %12199 = load ptr, ptr @"Builtins::intShiftRight:27", align 8
  call void @free_candy_value(ptr %12199)
  %12200 = load ptr, ptr @"Builtins::intShiftRight:29", align 8
  call void @free_candy_value(ptr %12200)
  %12201 = load ptr, ptr @"Builtins::intShiftRight:30", align 8
  call void @free_candy_value(ptr %12201)
  %12202 = load ptr, ptr @"Builtins::intShiftRight:31", align 8
  call void @free_candy_value(ptr %12202)
  %12203 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  call void @free_candy_value(ptr %12203)
  %12204 = load ptr, ptr @"Builtins::intShiftRight:42", align 8
  call void @free_candy_value(ptr %12204)
  %12205 = load ptr, ptr @"Builtins::intShiftRight:49", align 8
  call void @free_candy_value(ptr %12205)
  %12206 = load ptr, ptr @"Builtins::intShiftRight:5", align 8
  call void @free_candy_value(ptr %12206)
  %12207 = load ptr, ptr @"Builtins::intSubtract:11", align 8
  call void @free_candy_value(ptr %12207)
  %12208 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %12208)
  %12209 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %12209)
  %12210 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  call void @free_candy_value(ptr %12210)
  %12211 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  call void @free_candy_value(ptr %12211)
  %12212 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  call void @free_candy_value(ptr %12212)
  %12213 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  call void @free_candy_value(ptr %12213)
  %12214 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %12214)
  %12215 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %12215)
  %12216 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %12216)
  %12217 = load ptr, ptr @"Builtins::listFilled:10", align 8
  call void @free_candy_value(ptr %12217)
  %12218 = load ptr, ptr @"Builtins::listFilled:17", align 8
  call void @free_candy_value(ptr %12218)
  %12219 = load ptr, ptr @"Builtins::listFilled:5", align 8
  call void @free_candy_value(ptr %12219)
  %12220 = load ptr, ptr @"Builtins::listFilled:8", align 8
  call void @free_candy_value(ptr %12220)
  %12221 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %12221)
  %12222 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %12222)
  %12223 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %12223)
  %12224 = load ptr, ptr @"Builtins::listGet:24", align 8
  call void @free_candy_value(ptr %12224)
  %12225 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %12225)
  %12226 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %12226)
  %12227 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %12227)
  %12228 = load ptr, ptr @"Builtins::listGet:5", align 8
  call void @free_candy_value(ptr %12228)
  %12229 = load ptr, ptr @"Builtins::listInsert:11", align 8
  call void @free_candy_value(ptr %12229)
  %12230 = load ptr, ptr @"Builtins::listInsert:14", align 8
  call void @free_candy_value(ptr %12230)
  %12231 = load ptr, ptr @"Builtins::listInsert:16", align 8
  call void @free_candy_value(ptr %12231)
  %12232 = load ptr, ptr @"Builtins::listInsert:24", align 8
  call void @free_candy_value(ptr %12232)
  %12233 = load ptr, ptr @"Builtins::listInsert:25", align 8
  call void @free_candy_value(ptr %12233)
  %12234 = load ptr, ptr @"Builtins::listInsert:27", align 8
  call void @free_candy_value(ptr %12234)
  %12235 = load ptr, ptr @"Builtins::listInsert:35", align 8
  call void @free_candy_value(ptr %12235)
  %12236 = load ptr, ptr @"Builtins::listInsert:5", align 8
  call void @free_candy_value(ptr %12236)
  %12237 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %12237)
  %12238 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %12238)
  %12239 = load ptr, ptr @"Builtins::listRemoveAt:11", align 8
  call void @free_candy_value(ptr %12239)
  %12240 = load ptr, ptr @"Builtins::listRemoveAt:14", align 8
  call void @free_candy_value(ptr %12240)
  %12241 = load ptr, ptr @"Builtins::listRemoveAt:16", align 8
  call void @free_candy_value(ptr %12241)
  %12242 = load ptr, ptr @"Builtins::listRemoveAt:21", align 8
  call void @free_candy_value(ptr %12242)
  %12243 = load ptr, ptr @"Builtins::listRemoveAt:22", align 8
  call void @free_candy_value(ptr %12243)
  %12244 = load ptr, ptr @"Builtins::listRemoveAt:27", align 8
  call void @free_candy_value(ptr %12244)
  %12245 = load ptr, ptr @"Builtins::listRemoveAt:34", align 8
  call void @free_candy_value(ptr %12245)
  %12246 = load ptr, ptr @"Builtins::listRemoveAt:5", align 8
  call void @free_candy_value(ptr %12246)
  %12247 = load ptr, ptr @"Builtins::listReplace:11", align 8
  call void @free_candy_value(ptr %12247)
  %12248 = load ptr, ptr @"Builtins::listReplace:14", align 8
  call void @free_candy_value(ptr %12248)
  %12249 = load ptr, ptr @"Builtins::listReplace:16", align 8
  call void @free_candy_value(ptr %12249)
  %12250 = load ptr, ptr @"Builtins::listReplace:21", align 8
  call void @free_candy_value(ptr %12250)
  %12251 = load ptr, ptr @"Builtins::listReplace:22", align 8
  call void @free_candy_value(ptr %12251)
  %12252 = load ptr, ptr @"Builtins::listReplace:27", align 8
  call void @free_candy_value(ptr %12252)
  %12253 = load ptr, ptr @"Builtins::listReplace:35", align 8
  call void @free_candy_value(ptr %12253)
  %12254 = load ptr, ptr @"Builtins::listReplace:5", align 8
  call void @free_candy_value(ptr %12254)
  %12255 = load ptr, ptr @"Builtins::not:1", align 8
  call void @free_candy_value(ptr %12255)
  %12256 = load ptr, ptr @"Builtins::print:11", align 8
  call void @free_candy_value(ptr %12256)
  %12257 = load ptr, ptr @"Builtins::print:5", align 8
  call void @free_candy_value(ptr %12257)
  %12258 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %12258)
  %12259 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %12259)
  %12260 = load ptr, ptr @"Builtins::structGet:22", align 8
  call void @free_candy_value(ptr %12260)
  %12261 = load ptr, ptr @"Builtins::structGet:24:0", align 8
  call void @free_candy_value(ptr %12261)
  %12262 = load ptr, ptr @"Builtins::structGet:25", align 8
  call void @free_candy_value(ptr %12262)
  %12263 = load ptr, ptr @"Builtins::structGet:28", align 8
  call void @free_candy_value(ptr %12263)
  %12264 = load ptr, ptr @"Builtins::structGet:29", align 8
  call void @free_candy_value(ptr %12264)
  %12265 = load ptr, ptr @"Builtins::structGet:31:0", align 8
  call void @free_candy_value(ptr %12265)
  %12266 = load ptr, ptr @"Builtins::structGet:32", align 8
  call void @free_candy_value(ptr %12266)
  %12267 = load ptr, ptr @"Builtins::structGet:34", align 8
  call void @free_candy_value(ptr %12267)
  %12268 = load ptr, ptr @"Builtins::structGet:35", align 8
  call void @free_candy_value(ptr %12268)
  %12269 = load ptr, ptr @"Builtins::structGet:36", align 8
  call void @free_candy_value(ptr %12269)
  %12270 = load ptr, ptr @"Builtins::structGet:37", align 8
  call void @free_candy_value(ptr %12270)
  %12271 = load ptr, ptr @"Builtins::structGet:38", align 8
  call void @free_candy_value(ptr %12271)
  %12272 = load ptr, ptr @"Builtins::structGet:45", align 8
  call void @free_candy_value(ptr %12272)
  %12273 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %12273)
  %12274 = load ptr, ptr @"Builtins::structGetKeys:11", align 8
  call void @free_candy_value(ptr %12274)
  %12275 = load ptr, ptr @"Builtins::structGetKeys:5", align 8
  call void @free_candy_value(ptr %12275)
  %12276 = load ptr, ptr @"Builtins::structHasKey:12", align 8
  call void @free_candy_value(ptr %12276)
  %12277 = load ptr, ptr @"Builtins::structHasKey:5", align 8
  call void @free_candy_value(ptr %12277)
  %12278 = load ptr, ptr @"Builtins::tagGetValue:11", align 8
  call void @free_candy_value(ptr %12278)
  %12279 = load ptr, ptr @"Builtins::tagGetValue:13", align 8
  call void @free_candy_value(ptr %12279)
  %12280 = load ptr, ptr @"Builtins::tagGetValue:19", align 8
  call void @free_candy_value(ptr %12280)
  %12281 = load ptr, ptr @"Builtins::tagGetValue:5", align 8
  call void @free_candy_value(ptr %12281)
  %12282 = load ptr, ptr @"Builtins::tagHasValue:11", align 8
  call void @free_candy_value(ptr %12282)
  %12283 = load ptr, ptr @"Builtins::tagHasValue:5", align 8
  call void @free_candy_value(ptr %12283)
  %12284 = load ptr, ptr @"Builtins::tagWithoutValue:11", align 8
  call void @free_candy_value(ptr %12284)
  %12285 = load ptr, ptr @"Builtins::tagWithoutValue:5", align 8
  call void @free_candy_value(ptr %12285)
  %12286 = load ptr, ptr @"Builtins::textCharacters:11", align 8
  call void @free_candy_value(ptr %12286)
  %12287 = load ptr, ptr @"Builtins::textCharacters:5", align 8
  call void @free_candy_value(ptr %12287)
  %12288 = load ptr, ptr @"Builtins::textConcatenate:11", align 8
  call void @free_candy_value(ptr %12288)
  %12289 = load ptr, ptr @"Builtins::textConcatenate:18", align 8
  call void @free_candy_value(ptr %12289)
  %12290 = load ptr, ptr @"Builtins::textConcatenate:5", align 8
  call void @free_candy_value(ptr %12290)
  %12291 = load ptr, ptr @"Builtins::textContains:11", align 8
  call void @free_candy_value(ptr %12291)
  %12292 = load ptr, ptr @"Builtins::textContains:18", align 8
  call void @free_candy_value(ptr %12292)
  %12293 = load ptr, ptr @"Builtins::textContains:5", align 8
  call void @free_candy_value(ptr %12293)
  %12294 = load ptr, ptr @"Builtins::textEndsWith:11", align 8
  call void @free_candy_value(ptr %12294)
  %12295 = load ptr, ptr @"Builtins::textEndsWith:18", align 8
  call void @free_candy_value(ptr %12295)
  %12296 = load ptr, ptr @"Builtins::textEndsWith:5", align 8
  call void @free_candy_value(ptr %12296)
  %12297 = load ptr, ptr @"Builtins::textFromUtf8:11", align 8
  call void @free_candy_value(ptr %12297)
  %12298 = load ptr, ptr @"Builtins::textFromUtf8:5", align 8
  call void @free_candy_value(ptr %12298)
  %12299 = load ptr, ptr @"Builtins::textGetRange:11", align 8
  call void @free_candy_value(ptr %12299)
  %12300 = load ptr, ptr @"Builtins::textGetRange:14", align 8
  call void @free_candy_value(ptr %12300)
  %12301 = load ptr, ptr @"Builtins::textGetRange:16", align 8
  call void @free_candy_value(ptr %12301)
  %12302 = load ptr, ptr @"Builtins::textGetRange:24", align 8
  call void @free_candy_value(ptr %12302)
  %12303 = load ptr, ptr @"Builtins::textGetRange:25", align 8
  call void @free_candy_value(ptr %12303)
  %12304 = load ptr, ptr @"Builtins::textGetRange:27", align 8
  call void @free_candy_value(ptr %12304)
  %12305 = load ptr, ptr @"Builtins::textGetRange:33", align 8
  call void @free_candy_value(ptr %12305)
  %12306 = load ptr, ptr @"Builtins::textGetRange:36", align 8
  call void @free_candy_value(ptr %12306)
  %12307 = load ptr, ptr @"Builtins::textGetRange:38", align 8
  call void @free_candy_value(ptr %12307)
  %12308 = load ptr, ptr @"Builtins::textGetRange:46", align 8
  call void @free_candy_value(ptr %12308)
  %12309 = load ptr, ptr @"Builtins::textGetRange:47", align 8
  call void @free_candy_value(ptr %12309)
  %12310 = load ptr, ptr @"Builtins::textGetRange:49", align 8
  call void @free_candy_value(ptr %12310)
  %12311 = load ptr, ptr @"Builtins::textGetRange:5", align 8
  call void @free_candy_value(ptr %12311)
  %12312 = load ptr, ptr @"Builtins::textGetRange:53", align 8
  call void @free_candy_value(ptr %12312)
  %12313 = load ptr, ptr @"Builtins::textGetRange:55", align 8
  call void @free_candy_value(ptr %12313)
  %12314 = load ptr, ptr @"Builtins::textGetRange:63", align 8
  call void @free_candy_value(ptr %12314)
  %12315 = load ptr, ptr @"Builtins::textIsEmpty:11", align 8
  call void @free_candy_value(ptr %12315)
  %12316 = load ptr, ptr @"Builtins::textIsEmpty:5", align 8
  call void @free_candy_value(ptr %12316)
  %12317 = load ptr, ptr @"Builtins::textLength:11", align 8
  call void @free_candy_value(ptr %12317)
  %12318 = load ptr, ptr @"Builtins::textLength:5", align 8
  call void @free_candy_value(ptr %12318)
  %12319 = load ptr, ptr @"Builtins::textStartsWith:11", align 8
  call void @free_candy_value(ptr %12319)
  %12320 = load ptr, ptr @"Builtins::textStartsWith:18", align 8
  call void @free_candy_value(ptr %12320)
  %12321 = load ptr, ptr @"Builtins::textStartsWith:5", align 8
  call void @free_candy_value(ptr %12321)
  %12322 = load ptr, ptr @"Builtins::textTrimEnd:11", align 8
  call void @free_candy_value(ptr %12322)
  %12323 = load ptr, ptr @"Builtins::textTrimEnd:5", align 8
  call void @free_candy_value(ptr %12323)
  %12324 = load ptr, ptr @"Builtins::textTrimStart:11", align 8
  call void @free_candy_value(ptr %12324)
  %12325 = load ptr, ptr @"Builtins::textTrimStart:5", align 8
  call void @free_candy_value(ptr %12325)
  %12326 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %12326)
  %12327 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %12327)
  %12328 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %12328)
  %12329 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %12329)
  %12330 = load ptr, ptr @"Core:equality:17", align 8
  call void @free_candy_value(ptr %12330)
  %12331 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %12331)
  %12332 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %12332)
  %12333 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %12333)
  %12334 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %12334)
  %12335 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %12335)
  %12336 = load ptr, ptr @fun_candy_builtin_int_bit_length, align 8
  call void @free_candy_value(ptr %12336)
  %12337 = load ptr, ptr @fun_candy_builtin_int_bitwise_and, align 8
  call void @free_candy_value(ptr %12337)
  %12338 = load ptr, ptr @fun_candy_builtin_int_bitwise_or, align 8
  call void @free_candy_value(ptr %12338)
  %12339 = load ptr, ptr @fun_candy_builtin_int_bitwise_xor, align 8
  call void @free_candy_value(ptr %12339)
  %12340 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %12340)
  %12341 = load ptr, ptr @fun_candy_builtin_int_divide_truncating, align 8
  call void @free_candy_value(ptr %12341)
  %12342 = load ptr, ptr @fun_candy_builtin_int_modulo, align 8
  call void @free_candy_value(ptr %12342)
  %12343 = load ptr, ptr @fun_candy_builtin_int_multiply, align 8
  call void @free_candy_value(ptr %12343)
  %12344 = load ptr, ptr @fun_candy_builtin_int_parse, align 8
  call void @free_candy_value(ptr %12344)
  %12345 = load ptr, ptr @fun_candy_builtin_int_remainder, align 8
  call void @free_candy_value(ptr %12345)
  %12346 = load ptr, ptr @fun_candy_builtin_int_shift_left, align 8
  call void @free_candy_value(ptr %12346)
  %12347 = load ptr, ptr @fun_candy_builtin_int_shift_right, align 8
  call void @free_candy_value(ptr %12347)
  %12348 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %12348)
  %12349 = load ptr, ptr @fun_candy_builtin_list_filled, align 8
  call void @free_candy_value(ptr %12349)
  %12350 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %12350)
  %12351 = load ptr, ptr @fun_candy_builtin_list_insert, align 8
  call void @free_candy_value(ptr %12351)
  %12352 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %12352)
  %12353 = load ptr, ptr @fun_candy_builtin_list_remove_at, align 8
  call void @free_candy_value(ptr %12353)
  %12354 = load ptr, ptr @fun_candy_builtin_list_replace, align 8
  call void @free_candy_value(ptr %12354)
  %12355 = load ptr, ptr @fun_candy_builtin_print, align 8
  call void @free_candy_value(ptr %12355)
  %12356 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %12356)
  %12357 = load ptr, ptr @fun_candy_builtin_struct_get_keys, align 8
  call void @free_candy_value(ptr %12357)
  %12358 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %12358)
  %12359 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %12359)
  %12360 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %12360)
  %12361 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %12361)
  %12362 = load ptr, ptr @fun_candy_builtin_text_characters, align 8
  call void @free_candy_value(ptr %12362)
  %12363 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %12363)
  %12364 = load ptr, ptr @fun_candy_builtin_text_contains, align 8
  call void @free_candy_value(ptr %12364)
  %12365 = load ptr, ptr @fun_candy_builtin_text_ends_with, align 8
  call void @free_candy_value(ptr %12365)
  %12366 = load ptr, ptr @fun_candy_builtin_text_from_utf8, align 8
  call void @free_candy_value(ptr %12366)
  %12367 = load ptr, ptr @fun_candy_builtin_text_get_range, align 8
  call void @free_candy_value(ptr %12367)
  %12368 = load ptr, ptr @fun_candy_builtin_text_is_empty, align 8
  call void @free_candy_value(ptr %12368)
  %12369 = load ptr, ptr @fun_candy_builtin_text_length, align 8
  call void @free_candy_value(ptr %12369)
  %12370 = load ptr, ptr @fun_candy_builtin_text_starts_with, align 8
  call void @free_candy_value(ptr %12370)
  %12371 = load ptr, ptr @fun_candy_builtin_text_trim_end, align 8
  call void @free_candy_value(ptr %12371)
  %12372 = load ptr, ptr @fun_candy_builtin_text_trim_start, align 8
  call void @free_candy_value(ptr %12372)
  %12373 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %12373)
  %12374 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %12374)
  %12375 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %12375)
  %12376 = load ptr, ptr @tag_Equals, align 8
  call void @free_candy_value(ptr %12376)
  %12377 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %12377)
  %12378 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %12378)
  %12379 = load ptr, ptr @tag_FunctionRun, align 8
  call void @free_candy_value(ptr %12379)
  %12380 = load ptr, ptr @tag_GetArgumentCount, align 8
  call void @free_candy_value(ptr %12380)
  %12381 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %12381)
  %12382 = load ptr, ptr @tag_IfElse, align 8
  call void @free_candy_value(ptr %12382)
  %12383 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %12383)
  %12384 = load ptr, ptr @tag_IntAdd, align 8
  call void @free_candy_value(ptr %12384)
  %12385 = load ptr, ptr @tag_IntBitLength, align 8
  call void @free_candy_value(ptr %12385)
  %12386 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  call void @free_candy_value(ptr %12386)
  %12387 = load ptr, ptr @tag_IntBitwiseOr, align 8
  call void @free_candy_value(ptr %12387)
  %12388 = load ptr, ptr @tag_IntBitwiseXor, align 8
  call void @free_candy_value(ptr %12388)
  %12389 = load ptr, ptr @tag_IntCompareTo, align 8
  call void @free_candy_value(ptr %12389)
  %12390 = load ptr, ptr @tag_IntDivideTruncating, align 8
  call void @free_candy_value(ptr %12390)
  %12391 = load ptr, ptr @tag_IntModulo, align 8
  call void @free_candy_value(ptr %12391)
  %12392 = load ptr, ptr @tag_IntMultiply, align 8
  call void @free_candy_value(ptr %12392)
  %12393 = load ptr, ptr @tag_IntParse, align 8
  call void @free_candy_value(ptr %12393)
  %12394 = load ptr, ptr @tag_IntRemainder, align 8
  call void @free_candy_value(ptr %12394)
  %12395 = load ptr, ptr @tag_IntShiftLeft, align 8
  call void @free_candy_value(ptr %12395)
  %12396 = load ptr, ptr @tag_IntShiftRight, align 8
  call void @free_candy_value(ptr %12396)
  %12397 = load ptr, ptr @tag_IntSubtract, align 8
  call void @free_candy_value(ptr %12397)
  %12398 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %12398)
  %12399 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %12399)
  %12400 = load ptr, ptr @tag_ListFilled, align 8
  call void @free_candy_value(ptr %12400)
  %12401 = load ptr, ptr @tag_ListGet, align 8
  call void @free_candy_value(ptr %12401)
  %12402 = load ptr, ptr @tag_ListInsert, align 8
  call void @free_candy_value(ptr %12402)
  %12403 = load ptr, ptr @tag_ListLength, align 8
  call void @free_candy_value(ptr %12403)
  %12404 = load ptr, ptr @tag_ListRemoveAt, align 8
  call void @free_candy_value(ptr %12404)
  %12405 = load ptr, ptr @tag_ListReplace, align 8
  call void @free_candy_value(ptr %12405)
  %12406 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %12406)
  %12407 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %12407)
  %12408 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %12408)
  %12409 = load ptr, ptr @tag_Print, align 8
  call void @free_candy_value(ptr %12409)
  %12410 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %12410)
  %12411 = load ptr, ptr @tag_StructGet, align 8
  call void @free_candy_value(ptr %12411)
  %12412 = load ptr, ptr @tag_StructGetKeys, align 8
  call void @free_candy_value(ptr %12412)
  %12413 = load ptr, ptr @tag_StructHasKey, align 8
  call void @free_candy_value(ptr %12413)
  %12414 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %12414)
  %12415 = load ptr, ptr @tag_TagGetValue, align 8
  call void @free_candy_value(ptr %12415)
  %12416 = load ptr, ptr @tag_TagHasValue, align 8
  call void @free_candy_value(ptr %12416)
  %12417 = load ptr, ptr @tag_TagWithoutValue, align 8
  call void @free_candy_value(ptr %12417)
  %12418 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %12418)
  %12419 = load ptr, ptr @tag_TextCharacters, align 8
  call void @free_candy_value(ptr %12419)
  %12420 = load ptr, ptr @tag_TextConcatenate, align 8
  call void @free_candy_value(ptr %12420)
  %12421 = load ptr, ptr @tag_TextContains, align 8
  call void @free_candy_value(ptr %12421)
  %12422 = load ptr, ptr @tag_TextEndsWith, align 8
  call void @free_candy_value(ptr %12422)
  %12423 = load ptr, ptr @tag_TextFromUtf8, align 8
  call void @free_candy_value(ptr %12423)
  %12424 = load ptr, ptr @tag_TextGetRange, align 8
  call void @free_candy_value(ptr %12424)
  %12425 = load ptr, ptr @tag_TextIsEmpty, align 8
  call void @free_candy_value(ptr %12425)
  %12426 = load ptr, ptr @tag_TextLength, align 8
  call void @free_candy_value(ptr %12426)
  %12427 = load ptr, ptr @tag_TextStartsWith, align 8
  call void @free_candy_value(ptr %12427)
  %12428 = load ptr, ptr @tag_TextTrimEnd, align 8
  call void @free_candy_value(ptr %12428)
  %12429 = load ptr, ptr @tag_TextTrimStart, align 8
  call void @free_candy_value(ptr %12429)
  %12430 = load ptr, ptr @tag_ToDebugText, align 8
  call void @free_candy_value(ptr %12430)
  %12431 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %12431)
  %12432 = load ptr, ptr @tag_TypeOf, align 8
  call void @free_candy_value(ptr %12432)
  %12433 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %12433)
  %12434 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %12434)
  %12435 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  call void @free_candy_value(ptr %12435)
  %12436 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %12436)
  %12437 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  call void @free_candy_value(ptr %12437)
  %12438 = load ptr, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  call void @free_candy_value(ptr %12438)
  %12439 = load ptr, ptr @"text_Expected Equal, got ", align 8
  call void @free_candy_value(ptr %12439)
  %12440 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %12440)
  %12441 = load ptr, ptr @"text_Expected Greater, got ", align 8
  call void @free_candy_value(ptr %12441)
  %12442 = load ptr, ptr @"text_Expected Less, got ", align 8
  call void @free_candy_value(ptr %12442)
  %12443 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %12443)
  %12444 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %12444)
  %12445 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %12445)
  %12446 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %12446)
  %12447 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  call void @free_candy_value(ptr %12447)
  %12448 = load ptr, ptr @"text_Struct `", align 8
  call void @free_candy_value(ptr %12448)
  %12449 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %12449)
  %12450 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %12450)
  %12451 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  call void @free_candy_value(ptr %12451)
  %12452 = load ptr, ptr @"text_You can't divide by zero.", align 8
  call void @free_candy_value(ptr %12452)
  %12453 = load ptr, ptr @"text_` is missing the key `", align 8
  call void @free_candy_value(ptr %12453)
  %12454 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %12454)
  %12455 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @free_candy_value(ptr %12455)
  %12456 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12456)
  %12457 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %12457)
  %12458 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12458)
  %12459 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12459)
  %12460 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %12460)
  %12461 = load ptr, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %12461)
  %12462 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %12462)
  %12463 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12463)
  %12464 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12464)
  %12465 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %12465)
  %12466 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %12466)
  %12467 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %12467)
  %12468 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %12468)
  %12469 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12469)
  %12470 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12470)
  %12471 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12471)
  %12472 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %12472)
  %12473 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %12473)
  %12474 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %12474)
  %12475 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %12475)
  %12476 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %12476)
  %12477 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %12477)
  %12478 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12478)
  %12479 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12479)
  %12480 = load ptr, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %12480)
  %12481 = load ptr, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12481)
  %12482 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %12482)
  %12483 = load ptr, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %12483)
  %12484 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12484)
  %12485 = load ptr, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %12485)
  %12486 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %12486)
  %12487 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %12487)
  %12488 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %12488)
  %12489 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %12489)
  %12490 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12490)
  %12491 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %12491)
  %12492 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12492)
  %12493 = load ptr, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %12493)
  %12494 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %12494)
  %12495 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  call void @free_candy_value(ptr %12495)
  %12496 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %12496)
  %12497 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %12497)
  %12498 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %12498)
  %12499 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %12499)
  %12500 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %12500)
  %12501 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %12501)
  %12502 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %12502)
  %12503 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %12503)
  %12504 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %12504)
  %12505 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %12505)
  %12506 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %12506)
  %12507 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %12507)
  %12508 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %12508)
  %12509 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  call void @free_candy_value(ptr %12509)
  %12510 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %12510)
  %12511 = load ptr, ptr @fun_Builtins__not, align 8
  call void @free_candy_value(ptr %12511)
  %12512 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  call void @free_candy_value(ptr %12512)
  %12513 = load ptr, ptr @fun_Builtins__not_1_equals_then.3, align 8
  call void @free_candy_value(ptr %12513)
  %12514 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  call void @free_candy_value(ptr %12514)
  %12515 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %12515)
  %12516 = load ptr, ptr @fun_Builtins__not_1_equals_else.5, align 8
  call void @free_candy_value(ptr %12516)
  %12517 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %12517)
  %12518 = load ptr, ptr @fun_Builtins__not_1_equals_else.7, align 8
  call void @free_candy_value(ptr %12518)
  %12519 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %12519)
  %12520 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %12520)
  %12521 = load ptr, ptr @fun_Builtins__not_1_equals_then.9, align 8
  call void @free_candy_value(ptr %12521)
  %12522 = load ptr, ptr @fun_Builtins__not_1_equals_then.11, align 8
  call void @free_candy_value(ptr %12522)
  %12523 = load ptr, ptr @fun_Builtins__not_1_equals_else.13, align 8
  call void @free_candy_value(ptr %12523)
  %12524 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %12524)
  %12525 = load ptr, ptr @fun_Builtins__not_1_equals_else.15, align 8
  call void @free_candy_value(ptr %12525)
  %12526 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %12526)
  %12527 = load ptr, ptr @fun_Builtins__not_1_equals_else.17, align 8
  call void @free_candy_value(ptr %12527)
  %12528 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %12528)
  %12529 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %12529)
  %12530 = load ptr, ptr @fun_Builtins__isNonNegative, align 8
  call void @free_candy_value(ptr %12530)
  %12531 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  call void @free_candy_value(ptr %12531)
  %12532 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  call void @free_candy_value(ptr %12532)
  %12533 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %12533)
  %12534 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %12534)
  %12535 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  call void @free_candy_value(ptr %12535)
  %12536 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %12536)
  %12537 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %12537)
  %12538 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %12538)
  %12539 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.23, align 8
  call void @free_candy_value(ptr %12539)
  %12540 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  call void @free_candy_value(ptr %12540)
  %12541 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  call void @free_candy_value(ptr %12541)
  %12542 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %12542)
  %12543 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  call void @free_candy_value(ptr %12543)
  %12544 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %12544)
  %12545 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %12545)
  %12546 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.31, align 8
  call void @free_candy_value(ptr %12546)
  %12547 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  call void @free_candy_value(ptr %12547)
  %12548 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  call void @free_candy_value(ptr %12548)
  %12549 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %12549)
  %12550 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  call void @free_candy_value(ptr %12550)
  %12551 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %12551)
  %12552 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %12552)
  %12553 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %12553)
  %12554 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  call void @free_candy_value(ptr %12554)
  %12555 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  call void @free_candy_value(ptr %12555)
  %12556 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  call void @free_candy_value(ptr %12556)
  %12557 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %12557)
  %12558 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  call void @free_candy_value(ptr %12558)
  %12559 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %12559)
  %12560 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  call void @free_candy_value(ptr %12560)
  %12561 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  call void @free_candy_value(ptr %12561)
  %12562 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43, align 8
  call void @free_candy_value(ptr %12562)
  %12563 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  call void @free_candy_value(ptr %12563)
  %12564 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  call void @free_candy_value(ptr %12564)
  %12565 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %12565)
  %12566 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  call void @free_candy_value(ptr %12566)
  %12567 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %12567)
  %12568 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %12568)
  %12569 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51, align 8
  call void @free_candy_value(ptr %12569)
  %12570 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  call void @free_candy_value(ptr %12570)
  %12571 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  call void @free_candy_value(ptr %12571)
  %12572 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %12572)
  %12573 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  call void @free_candy_value(ptr %12573)
  %12574 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %12574)
  %12575 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %12575)
  %12576 = load ptr, ptr @fun_Builtins__equals, align 8
  call void @free_candy_value(ptr %12576)
  %12577 = load ptr, ptr @fun_Builtins__functionRun, align 8
  call void @free_candy_value(ptr %12577)
  %12578 = load ptr, ptr @fun_Builtins__getArgumentCount, align 8
  call void @free_candy_value(ptr %12578)
  %12579 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %12579)
  %12580 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %12580)
  %12581 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  call void @free_candy_value(ptr %12581)
  %12582 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %12582)
  %12583 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %12583)
  %12584 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  call void @free_candy_value(ptr %12584)
  %12585 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %12585)
  %12586 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  call void @free_candy_value(ptr %12586)
  %12587 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %12587)
  %12588 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %12588)
  %12589 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %12589)
  %12590 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  call void @free_candy_value(ptr %12590)
  %12591 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  call void @free_candy_value(ptr %12591)
  %12592 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  call void @free_candy_value(ptr %12592)
  %12593 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %12593)
  %12594 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  call void @free_candy_value(ptr %12594)
  %12595 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %12595)
  %12596 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  call void @free_candy_value(ptr %12596)
  %12597 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %12597)
  %12598 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %12598)
  %12599 = load ptr, ptr @fun_Builtins__intAdd, align 8
  call void @free_candy_value(ptr %12599)
  %12600 = load ptr, ptr @fun_Builtins__intBitLength, align 8
  call void @free_candy_value(ptr %12600)
  %12601 = load ptr, ptr @fun_Builtins__intBitwiseAnd, align 8
  call void @free_candy_value(ptr %12601)
  %12602 = load ptr, ptr @fun_Builtins__intBitwiseOr, align 8
  call void @free_candy_value(ptr %12602)
  %12603 = load ptr, ptr @fun_Builtins__intBitwiseXor, align 8
  call void @free_candy_value(ptr %12603)
  %12604 = load ptr, ptr @fun_Builtins__intCompareTo, align 8
  call void @free_candy_value(ptr %12604)
  %12605 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  call void @free_candy_value(ptr %12605)
  %12606 = load ptr, ptr @fun_Builtins__intModulo, align 8
  call void @free_candy_value(ptr %12606)
  %12607 = load ptr, ptr @fun_Builtins__intMultiply, align 8
  call void @free_candy_value(ptr %12607)
  %12608 = load ptr, ptr @fun_Builtins__intParse, align 8
  call void @free_candy_value(ptr %12608)
  %12609 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  call void @free_candy_value(ptr %12609)
  %12610 = load ptr, ptr @fun_Builtins__intShiftLeft, align 8
  call void @free_candy_value(ptr %12610)
  %12611 = load ptr, ptr @fun_Builtins__intShiftLeft_25, align 8
  call void @free_candy_value(ptr %12611)
  %12612 = load ptr, ptr @fun_Builtins__intShiftLeft_26, align 8
  call void @free_candy_value(ptr %12612)
  %12613 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  call void @free_candy_value(ptr %12613)
  %12614 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  call void @free_candy_value(ptr %12614)
  %12615 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  call void @free_candy_value(ptr %12615)
  %12616 = load ptr, ptr @fun_Builtins__intSubtract, align 8
  call void @free_candy_value(ptr %12616)
  %12617 = load ptr, ptr @fun_Builtins__listFilled, align 8
  call void @free_candy_value(ptr %12617)
  %12618 = load ptr, ptr @fun_Builtins__listGet, align 8
  call void @free_candy_value(ptr %12618)
  %12619 = load ptr, ptr @fun_Builtins__listInsert, align 8
  call void @free_candy_value(ptr %12619)
  %12620 = load ptr, ptr @fun_Builtins__listLength, align 8
  call void @free_candy_value(ptr %12620)
  %12621 = load ptr, ptr @fun_Builtins__listRemoveAt, align 8
  call void @free_candy_value(ptr %12621)
  %12622 = load ptr, ptr @fun_Builtins__listReplace, align 8
  call void @free_candy_value(ptr %12622)
  %12623 = load ptr, ptr @fun_Builtins__print, align 8
  call void @free_candy_value(ptr %12623)
  %12624 = load ptr, ptr @fun_Builtins__structGet, align 8
  call void @free_candy_value(ptr %12624)
  %12625 = load ptr, ptr @fun_Builtins__structGet_23, align 8
  call void @free_candy_value(ptr %12625)
  %12626 = load ptr, ptr @fun_Builtins__structGet_24, align 8
  call void @free_candy_value(ptr %12626)
  %12627 = load ptr, ptr @fun_Builtins__structGet_30, align 8
  call void @free_candy_value(ptr %12627)
  %12628 = load ptr, ptr @fun_Builtins__structGet_31, align 8
  call void @free_candy_value(ptr %12628)
  %12629 = load ptr, ptr @fun_Builtins__structGetKeys, align 8
  call void @free_candy_value(ptr %12629)
  %12630 = load ptr, ptr @fun_Builtins__structHasKey, align 8
  call void @free_candy_value(ptr %12630)
  %12631 = load ptr, ptr @fun_Builtins__tagGetValue, align 8
  call void @free_candy_value(ptr %12631)
  %12632 = load ptr, ptr @fun_Builtins__tagHasValue, align 8
  call void @free_candy_value(ptr %12632)
  %12633 = load ptr, ptr @fun_Builtins__tagWithoutValue, align 8
  call void @free_candy_value(ptr %12633)
  %12634 = load ptr, ptr @fun_Builtins__textCharacters, align 8
  call void @free_candy_value(ptr %12634)
  %12635 = load ptr, ptr @fun_Builtins__textConcatenate, align 8
  call void @free_candy_value(ptr %12635)
  %12636 = load ptr, ptr @fun_Builtins__textContains, align 8
  call void @free_candy_value(ptr %12636)
  %12637 = load ptr, ptr @fun_Builtins__textEndsWith, align 8
  call void @free_candy_value(ptr %12637)
  %12638 = load ptr, ptr @fun_Builtins__textFromUtf8, align 8
  call void @free_candy_value(ptr %12638)
  %12639 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  call void @free_candy_value(ptr %12639)
  %12640 = load ptr, ptr @fun_Builtins__textIsEmpty, align 8
  call void @free_candy_value(ptr %12640)
  %12641 = load ptr, ptr @fun_Builtins__textLength, align 8
  call void @free_candy_value(ptr %12641)
  %12642 = load ptr, ptr @fun_Builtins__textStartsWith, align 8
  call void @free_candy_value(ptr %12642)
  %12643 = load ptr, ptr @fun_Builtins__textTrimEnd, align 8
  call void @free_candy_value(ptr %12643)
  %12644 = load ptr, ptr @fun_Builtins__textTrimStart, align 8
  call void @free_candy_value(ptr %12644)
  %12645 = load ptr, ptr @fun_Builtins__toDebugText, align 8
  call void @free_candy_value(ptr %12645)
  %12646 = load ptr, ptr @fun_Builtins__typeOf, align 8
  call void @free_candy_value(ptr %12646)
  %12647 = load ptr, ptr @"Core:type:28", align 8
  call void @free_candy_value(ptr %12647)
  %12648 = load ptr, ptr @"Core:type:is:2", align 8
  call void @free_candy_value(ptr %12648)
  %12649 = load ptr, ptr @"Core:type:is:5", align 8
  call void @free_candy_value(ptr %12649)
  %12650 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %12650)
  %12651 = load ptr, ptr @"Core:type:is:7", align 8
  call void @free_candy_value(ptr %12651)
  %12652 = load ptr, ptr @"Core:type:is:11", align 8
  call void @free_candy_value(ptr %12652)
  %12653 = load ptr, ptr @"Core:type:is:13", align 8
  call void @free_candy_value(ptr %12653)
  %12654 = load ptr, ptr @tag_Is, align 8
  call void @free_candy_value(ptr %12654)
  %12655 = load ptr, ptr @"Core:function:is:7", align 8
  call void @free_candy_value(ptr %12655)
  %12656 = load ptr, ptr @"Core:function:is:10", align 8
  call void @free_candy_value(ptr %12656)
  %12657 = load ptr, ptr @"Core:function:38", align 8
  call void @free_candy_value(ptr %12657)
  %12658 = load ptr, ptr @"Core:function:is0:7", align 8
  call void @free_candy_value(ptr %12658)
  %12659 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %12659)
  %12660 = load ptr, ptr @"Core:function:is0:11:5", align 8
  call void @free_candy_value(ptr %12660)
  %12661 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %12661)
  %12662 = load ptr, ptr @"Core:function:is1:7", align 8
  call void @free_candy_value(ptr %12662)
  %12663 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %12663)
  %12664 = load ptr, ptr @"Core:function:is1:11:5", align 8
  call void @free_candy_value(ptr %12664)
  %12665 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %12665)
  %12666 = load ptr, ptr @"Core:function:is2:7", align 8
  call void @free_candy_value(ptr %12666)
  %12667 = load ptr, ptr @"Core:function:is2:11:3", align 8
  call void @free_candy_value(ptr %12667)
  %12668 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %12668)
  %12669 = load ptr, ptr @"Core:function:is2:11:5", align 8
  call void @free_candy_value(ptr %12669)
  %12670 = load ptr, ptr @"Core:function:is2:13", align 8
  call void @free_candy_value(ptr %12670)
  %12671 = load ptr, ptr @"Core:function:is3:7", align 8
  call void @free_candy_value(ptr %12671)
  %12672 = load ptr, ptr @"Core:function:is3:11:3", align 8
  call void @free_candy_value(ptr %12672)
  %12673 = load ptr, ptr @num_3, align 8
  call void @free_candy_value(ptr %12673)
  %12674 = load ptr, ptr @"Core:function:is3:11:5", align 8
  call void @free_candy_value(ptr %12674)
  %12675 = load ptr, ptr @"Core:function:is3:13", align 8
  call void @free_candy_value(ptr %12675)
  %12676 = load ptr, ptr @"Core:function:is4:7", align 8
  call void @free_candy_value(ptr %12676)
  %12677 = load ptr, ptr @"Core:function:is4:11:3", align 8
  call void @free_candy_value(ptr %12677)
  %12678 = load ptr, ptr @num_4, align 8
  call void @free_candy_value(ptr %12678)
  %12679 = load ptr, ptr @"Core:function:is4:11:5", align 8
  call void @free_candy_value(ptr %12679)
  %12680 = load ptr, ptr @"Core:function:is4:13", align 8
  call void @free_candy_value(ptr %12680)
  %12681 = load ptr, ptr @"Core:function:is5:7", align 8
  call void @free_candy_value(ptr %12681)
  %12682 = load ptr, ptr @"Core:function:is5:11:3", align 8
  call void @free_candy_value(ptr %12682)
  %12683 = load ptr, ptr @num_5, align 8
  call void @free_candy_value(ptr %12683)
  %12684 = load ptr, ptr @"Core:function:is5:11:5", align 8
  call void @free_candy_value(ptr %12684)
  %12685 = load ptr, ptr @"Core:function:is5:13", align 8
  call void @free_candy_value(ptr %12685)
  %12686 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %12686)
  %12687 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %12687)
  %12688 = load ptr, ptr @"Core:function:run:12", align 8
  call void @free_candy_value(ptr %12688)
  %12689 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %12689)
  %12690 = load ptr, ptr @"Core:function:doNotRun:4", align 8
  call void @free_candy_value(ptr %12690)
  %12691 = load ptr, ptr @tag_DoNotRun, align 8
  call void @free_candy_value(ptr %12691)
  %12692 = load ptr, ptr @tag_Is4, align 8
  call void @free_candy_value(ptr %12692)
  %12693 = load ptr, ptr @tag_Is1, align 8
  call void @free_candy_value(ptr %12693)
  %12694 = load ptr, ptr @tag_Run, align 8
  call void @free_candy_value(ptr %12694)
  %12695 = load ptr, ptr @tag_Is0, align 8
  call void @free_candy_value(ptr %12695)
  %12696 = load ptr, ptr @tag_Is3, align 8
  call void @free_candy_value(ptr %12696)
  %12697 = load ptr, ptr @tag_Is2, align 8
  call void @free_candy_value(ptr %12697)
  %12698 = load ptr, ptr @tag_Is5, align 8
  call void @free_candy_value(ptr %12698)
  %12699 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %12699)
  %12700 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %12700)
  %12701 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  call void @free_candy_value(ptr %12701)
  %12702 = load ptr, ptr @fun_Core_bool_is_1_equals_then.75, align 8
  call void @free_candy_value(ptr %12702)
  %12703 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %12703)
  %12704 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %12704)
  %12705 = load ptr, ptr @fun_Core_bool_is_1_equals_else.77, align 8
  call void @free_candy_value(ptr %12705)
  %12706 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %12706)
  %12707 = load ptr, ptr @fun_Core_bool_is_1_equals_else.79, align 8
  call void @free_candy_value(ptr %12707)
  %12708 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %12708)
  %12709 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %12709)
  %12710 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %12710)
  %12711 = load ptr, ptr @fun_Core_bool_is_1_equals_then.81, align 8
  call void @free_candy_value(ptr %12711)
  %12712 = load ptr, ptr @fun_Core_bool_is_1_equals_then.83, align 8
  call void @free_candy_value(ptr %12712)
  %12713 = load ptr, ptr @fun_Core_bool_is_1_equals_else.85, align 8
  call void @free_candy_value(ptr %12713)
  %12714 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %12714)
  %12715 = load ptr, ptr @fun_Core_bool_is_1_equals_else.87, align 8
  call void @free_candy_value(ptr %12715)
  %12716 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %12716)
  %12717 = load ptr, ptr @fun_Core_bool_is_1_equals_else.89, align 8
  call void @free_candy_value(ptr %12717)
  %12718 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %12718)
  %12719 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %12719)
  %12720 = load ptr, ptr @"Core:bool:not:2", align 8
  call void @free_candy_value(ptr %12720)
  %12721 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  call void @free_candy_value(ptr %12721)
  %12722 = load ptr, ptr @"Core:bool:not:4", align 8
  call void @free_candy_value(ptr %12722)
  %12723 = load ptr, ptr @"Core:bool:not:6", align 8
  call void @free_candy_value(ptr %12723)
  %12724 = load ptr, ptr @fun_Core_bool_not, align 8
  call void @free_candy_value(ptr %12724)
  %12725 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  call void @free_candy_value(ptr %12725)
  %12726 = load ptr, ptr @fun_Core_bool_not_6_equals_then.91, align 8
  call void @free_candy_value(ptr %12726)
  %12727 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  call void @free_candy_value(ptr %12727)
  %12728 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %12728)
  %12729 = load ptr, ptr @fun_Core_bool_not_6_equals_else.93, align 8
  call void @free_candy_value(ptr %12729)
  %12730 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %12730)
  %12731 = load ptr, ptr @fun_Core_bool_not_6_equals_else.95, align 8
  call void @free_candy_value(ptr %12731)
  %12732 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %12732)
  %12733 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %12733)
  %12734 = load ptr, ptr @fun_Core_bool_not_6_equals_then.97, align 8
  call void @free_candy_value(ptr %12734)
  %12735 = load ptr, ptr @fun_Core_bool_not_6_equals_then.99, align 8
  call void @free_candy_value(ptr %12735)
  %12736 = load ptr, ptr @fun_Core_bool_not_6_equals_else.101, align 8
  call void @free_candy_value(ptr %12736)
  %12737 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %12737)
  %12738 = load ptr, ptr @fun_Core_bool_not_6_equals_else.103, align 8
  call void @free_candy_value(ptr %12738)
  %12739 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %12739)
  %12740 = load ptr, ptr @fun_Core_bool_not_6_equals_else.105, align 8
  call void @free_candy_value(ptr %12740)
  %12741 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %12741)
  %12742 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %12742)
  %12743 = load ptr, ptr @"Core:bool:lazyAnd:2", align 8
  call void @free_candy_value(ptr %12743)
  %12744 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %12744)
  %12745 = load ptr, ptr @"Core:bool:lazyAnd:4", align 8
  call void @free_candy_value(ptr %12745)
  %12746 = load ptr, ptr @"Core:bool:lazyAnd:12", align 8
  call void @free_candy_value(ptr %12746)
  %12747 = load ptr, ptr @"Core:bool:lazyAnd:14", align 8
  call void @free_candy_value(ptr %12747)
  %12748 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %12748)
  %12749 = load ptr, ptr @"Core:bool:lazyAnd:16", align 8
  call void @free_candy_value(ptr %12749)
  %12750 = load ptr, ptr @"Core:bool:lazyAnd:18", align 8
  call void @free_candy_value(ptr %12750)
  %12751 = load ptr, ptr @"Core:bool:lazyAnd:18:8", align 8
  call void @free_candy_value(ptr %12751)
  %12752 = load ptr, ptr @"Core:bool:lazyAnd:18:9", align 8
  call void @free_candy_value(ptr %12752)
  %12753 = load ptr, ptr @"Core:bool:lazyAnd:18:13", align 8
  call void @free_candy_value(ptr %12753)
  %12754 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %12754)
  %12755 = load ptr, ptr @"Core:bool:lazyAnd:18:21", align 8
  call void @free_candy_value(ptr %12755)
  %12756 = load ptr, ptr @"Core:bool:and:2", align 8
  call void @free_candy_value(ptr %12756)
  %12757 = load ptr, ptr @"Core:bool:and:4", align 8
  call void @free_candy_value(ptr %12757)
  %12758 = load ptr, ptr @"Core:bool:and:7", align 8
  call void @free_candy_value(ptr %12758)
  %12759 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %12759)
  %12760 = load ptr, ptr @"Core:bool:and:9", align 8
  call void @free_candy_value(ptr %12760)
  %12761 = load ptr, ptr @"Core:bool:and:13", align 8
  call void @free_candy_value(ptr %12761)
  %12762 = load ptr, ptr @"Core:bool:lazyOr:2", align 8
  call void @free_candy_value(ptr %12762)
  %12763 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %12763)
  %12764 = load ptr, ptr @"Core:bool:lazyOr:12", align 8
  call void @free_candy_value(ptr %12764)
  %12765 = load ptr, ptr @"Core:bool:lazyOr:14", align 8
  call void @free_candy_value(ptr %12765)
  %12766 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %12766)
  %12767 = load ptr, ptr @"Core:bool:lazyOr:18", align 8
  call void @free_candy_value(ptr %12767)
  %12768 = load ptr, ptr @"Core:bool:lazyOr:18:9", align 8
  call void @free_candy_value(ptr %12768)
  %12769 = load ptr, ptr @"Core:bool:lazyOr:18:10", align 8
  call void @free_candy_value(ptr %12769)
  %12770 = load ptr, ptr @"Core:bool:lazyOr:18:14", align 8
  call void @free_candy_value(ptr %12770)
  %12771 = load ptr, ptr @"Core:bool:lazyOr:18:22", align 8
  call void @free_candy_value(ptr %12771)
  %12772 = load ptr, ptr @"Core:bool:or:2", align 8
  call void @free_candy_value(ptr %12772)
  %12773 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %12773)
  %12774 = load ptr, ptr @"Core:bool:or:7", align 8
  call void @free_candy_value(ptr %12774)
  %12775 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %12775)
  %12776 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %12776)
  %12777 = load ptr, ptr @"Core:bool:xor:2", align 8
  call void @free_candy_value(ptr %12777)
  %12778 = load ptr, ptr @"Core:bool:xor:4", align 8
  call void @free_candy_value(ptr %12778)
  %12779 = load ptr, ptr @"Core:bool:xor:7", align 8
  call void @free_candy_value(ptr %12779)
  %12780 = load ptr, ptr @"Core:bool:xor:9", align 8
  call void @free_candy_value(ptr %12780)
  %12781 = load ptr, ptr @"Core:bool:xor:14", align 8
  call void @free_candy_value(ptr %12781)
  %12782 = load ptr, ptr @"Core:bool:xor:15", align 8
  call void @free_candy_value(ptr %12782)
  %12783 = load ptr, ptr @"Core:bool:implies:2", align 8
  call void @free_candy_value(ptr %12783)
  %12784 = load ptr, ptr @"Core:bool:implies:4", align 8
  call void @free_candy_value(ptr %12784)
  %12785 = load ptr, ptr @"Core:bool:implies:7", align 8
  call void @free_candy_value(ptr %12785)
  %12786 = load ptr, ptr @"Core:bool:implies:9", align 8
  call void @free_candy_value(ptr %12786)
  %12787 = load ptr, ptr @"Core:bool:implies:12", align 8
  call void @free_candy_value(ptr %12787)
  %12788 = load ptr, ptr @"Core:bool:implies:15", align 8
  call void @free_candy_value(ptr %12788)
  %12789 = load ptr, ptr @tag_LazyAnd, align 8
  call void @free_candy_value(ptr %12789)
  %12790 = load ptr, ptr @tag_Not, align 8
  call void @free_candy_value(ptr %12790)
  %12791 = load ptr, ptr @tag_Xor, align 8
  call void @free_candy_value(ptr %12791)
  %12792 = load ptr, ptr @tag_Implies, align 8
  call void @free_candy_value(ptr %12792)
  %12793 = load ptr, ptr @tag_LazyOr, align 8
  call void @free_candy_value(ptr %12793)
  %12794 = load ptr, ptr @tag_And, align 8
  call void @free_candy_value(ptr %12794)
  %12795 = load ptr, ptr @tag_Or, align 8
  call void @free_candy_value(ptr %12795)
  %12796 = load ptr, ptr @"Core:controlFlow:59", align 8
  call void @free_candy_value(ptr %12796)
  %12797 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %12797)
  %12798 = load ptr, ptr @"Core:check:check:7", align 8
  call void @free_candy_value(ptr %12798)
  %12799 = load ptr, ptr @"Core:check:check:9", align 8
  call void @free_candy_value(ptr %12799)
  %12800 = load ptr, ptr @"Core:check:check:11", align 8
  call void @free_candy_value(ptr %12800)
  %12801 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @free_candy_value(ptr %12801)
  %12802 = load ptr, ptr @"Core:check:check:20", align 8
  call void @free_candy_value(ptr %12802)
  %12803 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  call void @free_candy_value(ptr %12803)
  %12804 = load ptr, ptr @fun_Core_type_is, align 8
  call void @free_candy_value(ptr %12804)
  %12805 = load ptr, ptr @fun_Core_function_is, align 8
  call void @free_candy_value(ptr %12805)
  %12806 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %12806)
  %12807 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %12807)
  %12808 = load ptr, ptr @fun_Core_function_is1, align 8
  call void @free_candy_value(ptr %12808)
  %12809 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %12809)
  %12810 = load ptr, ptr @fun_Core_function_is2, align 8
  call void @free_candy_value(ptr %12810)
  %12811 = load ptr, ptr @fun_Core_function_is2_11, align 8
  call void @free_candy_value(ptr %12811)
  %12812 = load ptr, ptr @fun_Core_function_is3, align 8
  call void @free_candy_value(ptr %12812)
  %12813 = load ptr, ptr @fun_Core_function_is3_11, align 8
  call void @free_candy_value(ptr %12813)
  %12814 = load ptr, ptr @fun_Core_function_is4, align 8
  call void @free_candy_value(ptr %12814)
  %12815 = load ptr, ptr @fun_Core_function_is4_11, align 8
  call void @free_candy_value(ptr %12815)
  %12816 = load ptr, ptr @fun_Core_function_is5, align 8
  call void @free_candy_value(ptr %12816)
  %12817 = load ptr, ptr @fun_Core_function_is5_11, align 8
  call void @free_candy_value(ptr %12817)
  %12818 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %12818)
  %12819 = load ptr, ptr @fun_Core_function_is0_11.109, align 8
  call void @free_candy_value(ptr %12819)
  %12820 = load ptr, ptr @fun_Core_function_doNotRun, align 8
  call void @free_candy_value(ptr %12820)
  %12821 = load ptr, ptr @fun_Core_function_is0_11.111, align 8
  call void @free_candy_value(ptr %12821)
  %12822 = load ptr, ptr @"Core:controlFlow:recursive:7", align 8
  call void @free_candy_value(ptr %12822)
  %12823 = load ptr, ptr @"Core:controlFlow:recursive:9", align 8
  call void @free_candy_value(ptr %12823)
  %12824 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %12824)
  %12825 = load ptr, ptr @"Core:controlFlow:recursive:17", align 8
  call void @free_candy_value(ptr %12825)
  %12826 = load ptr, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  call void @free_candy_value(ptr %12826)
  %12827 = load ptr, ptr @"Core:controlFlow:recursive:18:5", align 8
  call void @free_candy_value(ptr %12827)
  %12828 = load ptr, ptr @"Core:controlFlow:recursive:23", align 8
  call void @free_candy_value(ptr %12828)
  %12829 = load ptr, ptr @fun_Core_controlFlow_recursive, align 8
  call void @free_candy_value(ptr %12829)
  %12830 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  call void @free_candy_value(ptr %12830)
  %12831 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  call void @free_candy_value(ptr %12831)
  %12832 = load ptr, ptr @fun_Core_type_is.113, align 8
  call void @free_candy_value(ptr %12832)
  %12833 = load ptr, ptr @fun_Core_function_is.115, align 8
  call void @free_candy_value(ptr %12833)
  %12834 = load ptr, ptr @fun_Core_function_is0.117, align 8
  call void @free_candy_value(ptr %12834)
  %12835 = load ptr, ptr @fun_Core_function_is0_11.119, align 8
  call void @free_candy_value(ptr %12835)
  %12836 = load ptr, ptr @fun_Core_function_is1.121, align 8
  call void @free_candy_value(ptr %12836)
  %12837 = load ptr, ptr @fun_Core_function_is1_11.123, align 8
  call void @free_candy_value(ptr %12837)
  %12838 = load ptr, ptr @fun_Core_function_is2.125, align 8
  call void @free_candy_value(ptr %12838)
  %12839 = load ptr, ptr @fun_Core_function_is2_11.127, align 8
  call void @free_candy_value(ptr %12839)
  %12840 = load ptr, ptr @fun_Core_function_is3.129, align 8
  call void @free_candy_value(ptr %12840)
  %12841 = load ptr, ptr @fun_Core_function_is3_11.131, align 8
  call void @free_candy_value(ptr %12841)
  %12842 = load ptr, ptr @fun_Core_function_is4.133, align 8
  call void @free_candy_value(ptr %12842)
  %12843 = load ptr, ptr @fun_Core_function_is4_11.135, align 8
  call void @free_candy_value(ptr %12843)
  %12844 = load ptr, ptr @fun_Core_function_is5.137, align 8
  call void @free_candy_value(ptr %12844)
  %12845 = load ptr, ptr @fun_Core_function_is5_11.139, align 8
  call void @free_candy_value(ptr %12845)
  %12846 = load ptr, ptr @fun_Core_function_run.141, align 8
  call void @free_candy_value(ptr %12846)
  %12847 = load ptr, ptr @fun_Core_function_is0_11.143, align 8
  call void @free_candy_value(ptr %12847)
  %12848 = load ptr, ptr @fun_Core_function_doNotRun.145, align 8
  call void @free_candy_value(ptr %12848)
  %12849 = load ptr, ptr @fun_Core_function_is0_11.147, align 8
  call void @free_candy_value(ptr %12849)
  %12850 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  call void @free_candy_value(ptr %12850)
  %12851 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  call void @free_candy_value(ptr %12851)
  %12852 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.149, align 8
  call void @free_candy_value(ptr %12852)
  %12853 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  call void @free_candy_value(ptr %12853)
  %12854 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %12854)
  %12855 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.151, align 8
  call void @free_candy_value(ptr %12855)
  %12856 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %12856)
  %12857 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.153, align 8
  call void @free_candy_value(ptr %12857)
  %12858 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %12858)
  %12859 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  call void @free_candy_value(ptr %12859)
  %12860 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %12860)
  %12861 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.155, align 8
  call void @free_candy_value(ptr %12861)
  %12862 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.157, align 8
  call void @free_candy_value(ptr %12862)
  %12863 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.159, align 8
  call void @free_candy_value(ptr %12863)
  %12864 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %12864)
  %12865 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.161, align 8
  call void @free_candy_value(ptr %12865)
  %12866 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %12866)
  %12867 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.163, align 8
  call void @free_candy_value(ptr %12867)
  %12868 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %12868)
  %12869 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %12869)
  %12870 = load ptr, ptr @fun_Core_bool_and, align 8
  call void @free_candy_value(ptr %12870)
  %12871 = load ptr, ptr @fun_Core_bool_and_12, align 8
  call void @free_candy_value(ptr %12871)
  %12872 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %12872)
  %12873 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  call void @free_candy_value(ptr %12873)
  %12874 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.165, align 8
  call void @free_candy_value(ptr %12874)
  %12875 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  call void @free_candy_value(ptr %12875)
  %12876 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %12876)
  %12877 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.167, align 8
  call void @free_candy_value(ptr %12877)
  %12878 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %12878)
  %12879 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.169, align 8
  call void @free_candy_value(ptr %12879)
  %12880 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %12880)
  %12881 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %12881)
  %12882 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.171, align 8
  call void @free_candy_value(ptr %12882)
  %12883 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.173, align 8
  call void @free_candy_value(ptr %12883)
  %12884 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.175, align 8
  call void @free_candy_value(ptr %12884)
  %12885 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %12885)
  %12886 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.177, align 8
  call void @free_candy_value(ptr %12886)
  %12887 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %12887)
  %12888 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.179, align 8
  call void @free_candy_value(ptr %12888)
  %12889 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %12889)
  %12890 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  call void @free_candy_value(ptr %12890)
  %12891 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %12891)
  %12892 = load ptr, ptr @fun_Core_bool_or, align 8
  call void @free_candy_value(ptr %12892)
  %12893 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %12893)
  %12894 = load ptr, ptr @fun_Core_bool_xor, align 8
  call void @free_candy_value(ptr %12894)
  %12895 = load ptr, ptr @fun_Core_bool_implies, align 8
  call void @free_candy_value(ptr %12895)
  %12896 = load ptr, ptr @fun_Core_bool_or_12.181, align 8
  call void @free_candy_value(ptr %12896)
  %12897 = load ptr, ptr @fun_Core_type_is.183, align 8
  call void @free_candy_value(ptr %12897)
  %12898 = load ptr, ptr @fun_Core_function_is.185, align 8
  call void @free_candy_value(ptr %12898)
  %12899 = load ptr, ptr @fun_Core_function_is0.187, align 8
  call void @free_candy_value(ptr %12899)
  %12900 = load ptr, ptr @fun_Core_function_is0_11.189, align 8
  call void @free_candy_value(ptr %12900)
  %12901 = load ptr, ptr @fun_Core_function_is1.191, align 8
  call void @free_candy_value(ptr %12901)
  %12902 = load ptr, ptr @fun_Core_function_is1_11.193, align 8
  call void @free_candy_value(ptr %12902)
  %12903 = load ptr, ptr @fun_Core_function_is2.195, align 8
  call void @free_candy_value(ptr %12903)
  %12904 = load ptr, ptr @fun_Core_function_is2_11.197, align 8
  call void @free_candy_value(ptr %12904)
  %12905 = load ptr, ptr @fun_Core_function_is3.199, align 8
  call void @free_candy_value(ptr %12905)
  %12906 = load ptr, ptr @fun_Core_function_is3_11.201, align 8
  call void @free_candy_value(ptr %12906)
  %12907 = load ptr, ptr @fun_Core_function_is4.203, align 8
  call void @free_candy_value(ptr %12907)
  %12908 = load ptr, ptr @fun_Core_function_is4_11.205, align 8
  call void @free_candy_value(ptr %12908)
  %12909 = load ptr, ptr @fun_Core_function_is5.207, align 8
  call void @free_candy_value(ptr %12909)
  %12910 = load ptr, ptr @fun_Core_function_is5_11.209, align 8
  call void @free_candy_value(ptr %12910)
  %12911 = load ptr, ptr @fun_Core_function_run.211, align 8
  call void @free_candy_value(ptr %12911)
  %12912 = load ptr, ptr @fun_Core_function_is0_11.213, align 8
  call void @free_candy_value(ptr %12912)
  %12913 = load ptr, ptr @fun_Core_function_doNotRun.215, align 8
  call void @free_candy_value(ptr %12913)
  %12914 = load ptr, ptr @fun_Core_function_is0_11.217, align 8
  call void @free_candy_value(ptr %12914)
  %12915 = load ptr, ptr @fun_Core_bool_lazyAnd.219, align 8
  call void @free_candy_value(ptr %12915)
  %12916 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.221, align 8
  call void @free_candy_value(ptr %12916)
  %12917 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.223, align 8
  call void @free_candy_value(ptr %12917)
  %12918 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.225, align 8
  call void @free_candy_value(ptr %12918)
  %12919 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %12919)
  %12920 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.227, align 8
  call void @free_candy_value(ptr %12920)
  %12921 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %12921)
  %12922 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.229, align 8
  call void @free_candy_value(ptr %12922)
  %12923 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %12923)
  %12924 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.231, align 8
  call void @free_candy_value(ptr %12924)
  %12925 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.233, align 8
  call void @free_candy_value(ptr %12925)
  %12926 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.235, align 8
  call void @free_candy_value(ptr %12926)
  %12927 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.237, align 8
  call void @free_candy_value(ptr %12927)
  %12928 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.239, align 8
  call void @free_candy_value(ptr %12928)
  %12929 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %12929)
  %12930 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.241, align 8
  call void @free_candy_value(ptr %12930)
  %12931 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %12931)
  %12932 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.243, align 8
  call void @free_candy_value(ptr %12932)
  %12933 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %12933)
  %12934 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.245, align 8
  call void @free_candy_value(ptr %12934)
  %12935 = load ptr, ptr @fun_Core_bool_and.247, align 8
  call void @free_candy_value(ptr %12935)
  %12936 = load ptr, ptr @fun_Core_bool_and_12.249, align 8
  call void @free_candy_value(ptr %12936)
  %12937 = load ptr, ptr @fun_Core_bool_lazyOr.251, align 8
  call void @free_candy_value(ptr %12937)
  %12938 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.253, align 8
  call void @free_candy_value(ptr %12938)
  %12939 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.255, align 8
  call void @free_candy_value(ptr %12939)
  %12940 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.257, align 8
  call void @free_candy_value(ptr %12940)
  %12941 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %12941)
  %12942 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.259, align 8
  call void @free_candy_value(ptr %12942)
  %12943 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %12943)
  %12944 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.261, align 8
  call void @free_candy_value(ptr %12944)
  %12945 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %12945)
  %12946 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.263, align 8
  call void @free_candy_value(ptr %12946)
  %12947 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.265, align 8
  call void @free_candy_value(ptr %12947)
  %12948 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.267, align 8
  call void @free_candy_value(ptr %12948)
  %12949 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.269, align 8
  call void @free_candy_value(ptr %12949)
  %12950 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %12950)
  %12951 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.271, align 8
  call void @free_candy_value(ptr %12951)
  %12952 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %12952)
  %12953 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.273, align 8
  call void @free_candy_value(ptr %12953)
  %12954 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %12954)
  %12955 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.275, align 8
  call void @free_candy_value(ptr %12955)
  %12956 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.277, align 8
  call void @free_candy_value(ptr %12956)
  %12957 = load ptr, ptr @fun_Core_bool_or.279, align 8
  call void @free_candy_value(ptr %12957)
  %12958 = load ptr, ptr @fun_Core_bool_or_12.281, align 8
  call void @free_candy_value(ptr %12958)
  %12959 = load ptr, ptr @fun_Core_bool_xor.283, align 8
  call void @free_candy_value(ptr %12959)
  %12960 = load ptr, ptr @fun_Core_bool_implies.285, align 8
  call void @free_candy_value(ptr %12960)
  %12961 = load ptr, ptr @fun_Core_bool_or_12.287, align 8
  call void @free_candy_value(ptr %12961)
  %12962 = load ptr, ptr @fun_Core_check_check, align 8
  call void @free_candy_value(ptr %12962)
  %12963 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.289", align 8
  call void @free_candy_value(ptr %12963)
  %12964 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.291", align 8
  call void @free_candy_value(ptr %12964)
  %12965 = load ptr, ptr @fun_Core_type_is.293, align 8
  call void @free_candy_value(ptr %12965)
  %12966 = load ptr, ptr @fun_Core_function_run.295, align 8
  call void @free_candy_value(ptr %12966)
  %12967 = load ptr, ptr @fun_Core_function_is0_11.297, align 8
  call void @free_candy_value(ptr %12967)
  %12968 = load ptr, ptr @fun_Core_type_is.299, align 8
  call void @free_candy_value(ptr %12968)
  %12969 = load ptr, ptr @fun_Core_function_is.301, align 8
  call void @free_candy_value(ptr %12969)
  %12970 = load ptr, ptr @fun_Core_function_is0.303, align 8
  call void @free_candy_value(ptr %12970)
  %12971 = load ptr, ptr @fun_Core_function_is0_11.305, align 8
  call void @free_candy_value(ptr %12971)
  %12972 = load ptr, ptr @fun_Core_function_is1.307, align 8
  call void @free_candy_value(ptr %12972)
  %12973 = load ptr, ptr @fun_Core_function_is1_11.309, align 8
  call void @free_candy_value(ptr %12973)
  %12974 = load ptr, ptr @fun_Core_function_is2.311, align 8
  call void @free_candy_value(ptr %12974)
  %12975 = load ptr, ptr @fun_Core_function_is2_11.313, align 8
  call void @free_candy_value(ptr %12975)
  %12976 = load ptr, ptr @fun_Core_function_is3.315, align 8
  call void @free_candy_value(ptr %12976)
  %12977 = load ptr, ptr @fun_Core_function_is3_11.317, align 8
  call void @free_candy_value(ptr %12977)
  %12978 = load ptr, ptr @fun_Core_function_is4.319, align 8
  call void @free_candy_value(ptr %12978)
  %12979 = load ptr, ptr @fun_Core_function_is4_11.321, align 8
  call void @free_candy_value(ptr %12979)
  %12980 = load ptr, ptr @fun_Core_function_is5.323, align 8
  call void @free_candy_value(ptr %12980)
  %12981 = load ptr, ptr @fun_Core_function_is5_11.325, align 8
  call void @free_candy_value(ptr %12981)
  %12982 = load ptr, ptr @fun_Core_function_run.327, align 8
  call void @free_candy_value(ptr %12982)
  %12983 = load ptr, ptr @fun_Core_function_is0_11.329, align 8
  call void @free_candy_value(ptr %12983)
  %12984 = load ptr, ptr @fun_Core_function_doNotRun.331, align 8
  call void @free_candy_value(ptr %12984)
  %12985 = load ptr, ptr @fun_Core_function_is0_11.333, align 8
  call void @free_candy_value(ptr %12985)
  %12986 = load ptr, ptr @fun_Core_bool_lazyAnd.335, align 8
  call void @free_candy_value(ptr %12986)
  %12987 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.337, align 8
  call void @free_candy_value(ptr %12987)
  %12988 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.339, align 8
  call void @free_candy_value(ptr %12988)
  %12989 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.341, align 8
  call void @free_candy_value(ptr %12989)
  %12990 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %12990)
  %12991 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.343, align 8
  call void @free_candy_value(ptr %12991)
  %12992 = load ptr, ptr @62, align 8
  call void @free_candy_value(ptr %12992)
  %12993 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.345, align 8
  call void @free_candy_value(ptr %12993)
  %12994 = load ptr, ptr @63, align 8
  call void @free_candy_value(ptr %12994)
  %12995 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.347, align 8
  call void @free_candy_value(ptr %12995)
  %12996 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.349, align 8
  call void @free_candy_value(ptr %12996)
  %12997 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.351, align 8
  call void @free_candy_value(ptr %12997)
  %12998 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.353, align 8
  call void @free_candy_value(ptr %12998)
  %12999 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.355, align 8
  call void @free_candy_value(ptr %12999)
  %13000 = load ptr, ptr @64, align 8
  call void @free_candy_value(ptr %13000)
  %13001 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.357, align 8
  call void @free_candy_value(ptr %13001)
  %13002 = load ptr, ptr @65, align 8
  call void @free_candy_value(ptr %13002)
  %13003 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.359, align 8
  call void @free_candy_value(ptr %13003)
  %13004 = load ptr, ptr @66, align 8
  call void @free_candy_value(ptr %13004)
  %13005 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.361, align 8
  call void @free_candy_value(ptr %13005)
  %13006 = load ptr, ptr @fun_Core_bool_and.363, align 8
  call void @free_candy_value(ptr %13006)
  %13007 = load ptr, ptr @fun_Core_bool_and_12.365, align 8
  call void @free_candy_value(ptr %13007)
  %13008 = load ptr, ptr @fun_Core_bool_lazyOr.367, align 8
  call void @free_candy_value(ptr %13008)
  %13009 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.369, align 8
  call void @free_candy_value(ptr %13009)
  %13010 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.371, align 8
  call void @free_candy_value(ptr %13010)
  %13011 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.373, align 8
  call void @free_candy_value(ptr %13011)
  %13012 = load ptr, ptr @67, align 8
  call void @free_candy_value(ptr %13012)
  %13013 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.375, align 8
  call void @free_candy_value(ptr %13013)
  %13014 = load ptr, ptr @68, align 8
  call void @free_candy_value(ptr %13014)
  %13015 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.377, align 8
  call void @free_candy_value(ptr %13015)
  %13016 = load ptr, ptr @69, align 8
  call void @free_candy_value(ptr %13016)
  %13017 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.379, align 8
  call void @free_candy_value(ptr %13017)
  %13018 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.381, align 8
  call void @free_candy_value(ptr %13018)
  %13019 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.383, align 8
  call void @free_candy_value(ptr %13019)
  %13020 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.385, align 8
  call void @free_candy_value(ptr %13020)
  %13021 = load ptr, ptr @70, align 8
  call void @free_candy_value(ptr %13021)
  %13022 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.387, align 8
  call void @free_candy_value(ptr %13022)
  %13023 = load ptr, ptr @71, align 8
  call void @free_candy_value(ptr %13023)
  %13024 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.389, align 8
  call void @free_candy_value(ptr %13024)
  %13025 = load ptr, ptr @72, align 8
  call void @free_candy_value(ptr %13025)
  %13026 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.391, align 8
  call void @free_candy_value(ptr %13026)
  %13027 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.393, align 8
  call void @free_candy_value(ptr %13027)
  %13028 = load ptr, ptr @fun_Core_bool_or.395, align 8
  call void @free_candy_value(ptr %13028)
  %13029 = load ptr, ptr @fun_Core_bool_or_12.397, align 8
  call void @free_candy_value(ptr %13029)
  %13030 = load ptr, ptr @fun_Core_bool_xor.399, align 8
  call void @free_candy_value(ptr %13030)
  %13031 = load ptr, ptr @fun_Core_bool_implies.401, align 8
  call void @free_candy_value(ptr %13031)
  %13032 = load ptr, ptr @fun_Core_bool_or_12.403, align 8
  call void @free_candy_value(ptr %13032)
  %13033 = load ptr, ptr @fun_Core_type_is.405, align 8
  call void @free_candy_value(ptr %13033)
  %13034 = load ptr, ptr @fun_Core_function_is.407, align 8
  call void @free_candy_value(ptr %13034)
  %13035 = load ptr, ptr @fun_Core_function_is0.409, align 8
  call void @free_candy_value(ptr %13035)
  %13036 = load ptr, ptr @fun_Core_function_is0_11.411, align 8
  call void @free_candy_value(ptr %13036)
  %13037 = load ptr, ptr @fun_Core_function_is1.413, align 8
  call void @free_candy_value(ptr %13037)
  %13038 = load ptr, ptr @fun_Core_function_is1_11.415, align 8
  call void @free_candy_value(ptr %13038)
  %13039 = load ptr, ptr @fun_Core_function_is2.417, align 8
  call void @free_candy_value(ptr %13039)
  %13040 = load ptr, ptr @fun_Core_function_is2_11.419, align 8
  call void @free_candy_value(ptr %13040)
  %13041 = load ptr, ptr @fun_Core_function_is3.421, align 8
  call void @free_candy_value(ptr %13041)
  %13042 = load ptr, ptr @fun_Core_function_is3_11.423, align 8
  call void @free_candy_value(ptr %13042)
  %13043 = load ptr, ptr @fun_Core_function_is4.425, align 8
  call void @free_candy_value(ptr %13043)
  %13044 = load ptr, ptr @fun_Core_function_is4_11.427, align 8
  call void @free_candy_value(ptr %13044)
  %13045 = load ptr, ptr @fun_Core_function_is5.429, align 8
  call void @free_candy_value(ptr %13045)
  %13046 = load ptr, ptr @fun_Core_function_is5_11.431, align 8
  call void @free_candy_value(ptr %13046)
  %13047 = load ptr, ptr @fun_Core_function_run.433, align 8
  call void @free_candy_value(ptr %13047)
  %13048 = load ptr, ptr @fun_Core_function_is0_11.435, align 8
  call void @free_candy_value(ptr %13048)
  %13049 = load ptr, ptr @fun_Core_function_doNotRun.437, align 8
  call void @free_candy_value(ptr %13049)
  %13050 = load ptr, ptr @fun_Core_function_is0_11.439, align 8
  call void @free_candy_value(ptr %13050)
  %13051 = load ptr, ptr @fun_Core_bool_lazyAnd.441, align 8
  call void @free_candy_value(ptr %13051)
  %13052 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.443, align 8
  call void @free_candy_value(ptr %13052)
  %13053 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.445, align 8
  call void @free_candy_value(ptr %13053)
  %13054 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.447, align 8
  call void @free_candy_value(ptr %13054)
  %13055 = load ptr, ptr @73, align 8
  call void @free_candy_value(ptr %13055)
  %13056 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.449, align 8
  call void @free_candy_value(ptr %13056)
  %13057 = load ptr, ptr @74, align 8
  call void @free_candy_value(ptr %13057)
  %13058 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.451, align 8
  call void @free_candy_value(ptr %13058)
  %13059 = load ptr, ptr @75, align 8
  call void @free_candy_value(ptr %13059)
  %13060 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.453, align 8
  call void @free_candy_value(ptr %13060)
  %13061 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.455, align 8
  call void @free_candy_value(ptr %13061)
  %13062 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.457, align 8
  call void @free_candy_value(ptr %13062)
  %13063 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.459, align 8
  call void @free_candy_value(ptr %13063)
  %13064 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.461, align 8
  call void @free_candy_value(ptr %13064)
  %13065 = load ptr, ptr @76, align 8
  call void @free_candy_value(ptr %13065)
  %13066 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.463, align 8
  call void @free_candy_value(ptr %13066)
  %13067 = load ptr, ptr @77, align 8
  call void @free_candy_value(ptr %13067)
  %13068 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.465, align 8
  call void @free_candy_value(ptr %13068)
  %13069 = load ptr, ptr @78, align 8
  call void @free_candy_value(ptr %13069)
  %13070 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.467, align 8
  call void @free_candy_value(ptr %13070)
  %13071 = load ptr, ptr @fun_Core_bool_and.469, align 8
  call void @free_candy_value(ptr %13071)
  %13072 = load ptr, ptr @fun_Core_bool_and_12.471, align 8
  call void @free_candy_value(ptr %13072)
  %13073 = load ptr, ptr @fun_Core_bool_lazyOr.473, align 8
  call void @free_candy_value(ptr %13073)
  %13074 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.475, align 8
  call void @free_candy_value(ptr %13074)
  %13075 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.477, align 8
  call void @free_candy_value(ptr %13075)
  %13076 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.479, align 8
  call void @free_candy_value(ptr %13076)
  %13077 = load ptr, ptr @79, align 8
  call void @free_candy_value(ptr %13077)
  %13078 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.481, align 8
  call void @free_candy_value(ptr %13078)
  %13079 = load ptr, ptr @80, align 8
  call void @free_candy_value(ptr %13079)
  %13080 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.483, align 8
  call void @free_candy_value(ptr %13080)
  %13081 = load ptr, ptr @81, align 8
  call void @free_candy_value(ptr %13081)
  %13082 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.485, align 8
  call void @free_candy_value(ptr %13082)
  %13083 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.487, align 8
  call void @free_candy_value(ptr %13083)
  %13084 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.489, align 8
  call void @free_candy_value(ptr %13084)
  %13085 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.491, align 8
  call void @free_candy_value(ptr %13085)
  %13086 = load ptr, ptr @82, align 8
  call void @free_candy_value(ptr %13086)
  %13087 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.493, align 8
  call void @free_candy_value(ptr %13087)
  %13088 = load ptr, ptr @83, align 8
  call void @free_candy_value(ptr %13088)
  %13089 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.495, align 8
  call void @free_candy_value(ptr %13089)
  %13090 = load ptr, ptr @84, align 8
  call void @free_candy_value(ptr %13090)
  %13091 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.497, align 8
  call void @free_candy_value(ptr %13091)
  %13092 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.499, align 8
  call void @free_candy_value(ptr %13092)
  %13093 = load ptr, ptr @fun_Core_bool_or.501, align 8
  call void @free_candy_value(ptr %13093)
  %13094 = load ptr, ptr @fun_Core_bool_or_12.503, align 8
  call void @free_candy_value(ptr %13094)
  %13095 = load ptr, ptr @fun_Core_bool_xor.505, align 8
  call void @free_candy_value(ptr %13095)
  %13096 = load ptr, ptr @fun_Core_bool_implies.507, align 8
  call void @free_candy_value(ptr %13096)
  %13097 = load ptr, ptr @fun_Core_bool_or_12.509, align 8
  call void @free_candy_value(ptr %13097)
  %13098 = load ptr, ptr @fun_Core_check_check.511, align 8
  call void @free_candy_value(ptr %13098)
  %13099 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.513", align 8
  call void @free_candy_value(ptr %13099)
  %13100 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.515", align 8
  call void @free_candy_value(ptr %13100)
  %13101 = load ptr, ptr @fun_Core_type_is.517, align 8
  call void @free_candy_value(ptr %13101)
  %13102 = load ptr, ptr @fun_Core_function_is.519, align 8
  call void @free_candy_value(ptr %13102)
  %13103 = load ptr, ptr @fun_Core_function_is0.521, align 8
  call void @free_candy_value(ptr %13103)
  %13104 = load ptr, ptr @fun_Core_function_is0_11.523, align 8
  call void @free_candy_value(ptr %13104)
  %13105 = load ptr, ptr @fun_Core_function_is1.525, align 8
  call void @free_candy_value(ptr %13105)
  %13106 = load ptr, ptr @fun_Core_function_is1_11.527, align 8
  call void @free_candy_value(ptr %13106)
  %13107 = load ptr, ptr @fun_Core_function_is2.529, align 8
  call void @free_candy_value(ptr %13107)
  %13108 = load ptr, ptr @fun_Core_function_is2_11.531, align 8
  call void @free_candy_value(ptr %13108)
  %13109 = load ptr, ptr @fun_Core_function_is3.533, align 8
  call void @free_candy_value(ptr %13109)
  %13110 = load ptr, ptr @fun_Core_function_is3_11.535, align 8
  call void @free_candy_value(ptr %13110)
  %13111 = load ptr, ptr @fun_Core_function_is4.537, align 8
  call void @free_candy_value(ptr %13111)
  %13112 = load ptr, ptr @fun_Core_function_is4_11.539, align 8
  call void @free_candy_value(ptr %13112)
  %13113 = load ptr, ptr @fun_Core_function_is5.541, align 8
  call void @free_candy_value(ptr %13113)
  %13114 = load ptr, ptr @fun_Core_function_is5_11.543, align 8
  call void @free_candy_value(ptr %13114)
  %13115 = load ptr, ptr @fun_Core_function_run.545, align 8
  call void @free_candy_value(ptr %13115)
  %13116 = load ptr, ptr @fun_Core_function_is0_11.547, align 8
  call void @free_candy_value(ptr %13116)
  %13117 = load ptr, ptr @fun_Core_function_doNotRun.549, align 8
  call void @free_candy_value(ptr %13117)
  %13118 = load ptr, ptr @fun_Core_function_is0_11.551, align 8
  call void @free_candy_value(ptr %13118)
  %13119 = load ptr, ptr @fun_Core_controlFlow_recursive.553, align 8
  call void @free_candy_value(ptr %13119)
  %13120 = load ptr, ptr @fun_Core_controlFlow_recursive_18.555, align 8
  call void @free_candy_value(ptr %13120)
  %13121 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.557, align 8
  call void @free_candy_value(ptr %13121)
  %13122 = load ptr, ptr @fun_Core_type_is.559, align 8
  call void @free_candy_value(ptr %13122)
  %13123 = load ptr, ptr @"Core:int:is:7", align 8
  call void @free_candy_value(ptr %13123)
  %13124 = load ptr, ptr @"Core:int:is:10", align 8
  call void @free_candy_value(ptr %13124)
  %13125 = load ptr, ptr @fun_Core_int_is, align 8
  call void @free_candy_value(ptr %13125)
  %13126 = load ptr, ptr @num_42, align 8
  call void @free_candy_value(ptr %13126)
  %13127 = load ptr, ptr @"Core:int:72", align 8
  call void @free_candy_value(ptr %13127)
  %13128 = load ptr, ptr @"Core:int:81", align 8
  call void @free_candy_value(ptr %13128)
  %13129 = load ptr, ptr @"Core:int:negate:4", align 8
  call void @free_candy_value(ptr %13129)
  %13130 = load ptr, ptr @"Core:int:negate:8", align 8
  call void @free_candy_value(ptr %13130)
  %13131 = load ptr, ptr @fun_Core_int_negate, align 8
  call void @free_candy_value(ptr %13131)
  %13132 = load ptr, ptr @"Core:int:90", align 8
  call void @free_candy_value(ptr %13132)
  %13133 = load ptr, ptr @"Core:int:99", align 8
  call void @free_candy_value(ptr %13133)
  %13134 = load ptr, ptr @"Core:int:108", align 8
  call void @free_candy_value(ptr %13134)
  %13135 = load ptr, ptr @"Core:int:117", align 8
  call void @free_candy_value(ptr %13135)
  %13136 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  call void @free_candy_value(ptr %13136)
  %13137 = load ptr, ptr @"Core:int:compareTo:4", align 8
  call void @free_candy_value(ptr %13137)
  %13138 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %13138)
  %13139 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %13139)
  %13140 = load ptr, ptr @"Core:int:compareTo:18", align 8
  call void @free_candy_value(ptr %13140)
  %13141 = load ptr, ptr @"Core:int:compareTo:20", align 8
  call void @free_candy_value(ptr %13141)
  %13142 = load ptr, ptr @"Core:int:compareTo:26", align 8
  call void @free_candy_value(ptr %13142)
  %13143 = load ptr, ptr @"Core:int:compareTo:34", align 8
  call void @free_candy_value(ptr %13143)
  %13144 = load ptr, ptr @"Core:int:compareTo:38", align 8
  call void @free_candy_value(ptr %13144)
  %13145 = load ptr, ptr @"Core:int:compareTo:39", align 8
  call void @free_candy_value(ptr %13145)
  %13146 = load ptr, ptr @"Core:int:compareTo:40", align 8
  call void @free_candy_value(ptr %13146)
  %13147 = load ptr, ptr @fun_Core_int_compareTo, align 8
  call void @free_candy_value(ptr %13147)
  %13148 = load ptr, ptr @"Core:int:isLessThan:4", align 8
  call void @free_candy_value(ptr %13148)
  %13149 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %13149)
  %13150 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %13150)
  %13151 = load ptr, ptr @"Core:int:isLessThan:16", align 8
  call void @free_candy_value(ptr %13151)
  %13152 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  call void @free_candy_value(ptr %13152)
  %13153 = load ptr, ptr @"Core:int:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %13153)
  %13154 = load ptr, ptr @"Core:int:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %13154)
  %13155 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  call void @free_candy_value(ptr %13155)
  %13156 = load ptr, ptr @"Core:int:isGreaterThan:16", align 8
  call void @free_candy_value(ptr %13156)
  %13157 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  call void @free_candy_value(ptr %13157)
  %13158 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %13158)
  %13159 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %13159)
  %13160 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %13160)
  %13161 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:21", align 8
  call void @free_candy_value(ptr %13161)
  %13162 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %13162)
  %13163 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %13163)
  %13164 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %13164)
  %13165 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %13165)
  %13166 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %13166)
  %13167 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:21", align 8
  call void @free_candy_value(ptr %13167)
  %13168 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %13168)
  %13169 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  call void @free_candy_value(ptr %13169)
  %13170 = load ptr, ptr @"Core:int:isPositive:4", align 8
  call void @free_candy_value(ptr %13170)
  %13171 = load ptr, ptr @"Core:int:isPositive:8", align 8
  call void @free_candy_value(ptr %13171)
  %13172 = load ptr, ptr @fun_Core_int_isPositive, align 8
  call void @free_candy_value(ptr %13172)
  %13173 = load ptr, ptr @"Core:int:isNonPositive:4", align 8
  call void @free_candy_value(ptr %13173)
  %13174 = load ptr, ptr @"Core:int:isNonPositive:7", align 8
  call void @free_candy_value(ptr %13174)
  %13175 = load ptr, ptr @"Core:int:isNonPositive:15", align 8
  call void @free_candy_value(ptr %13175)
  %13176 = load ptr, ptr @"Core:int:isNonPositive:16", align 8
  call void @free_candy_value(ptr %13176)
  %13177 = load ptr, ptr @fun_Core_int_isNonPositive, align 8
  call void @free_candy_value(ptr %13177)
  %13178 = load ptr, ptr @"Core:int:isNegative:4", align 8
  call void @free_candy_value(ptr %13178)
  %13179 = load ptr, ptr @"Core:int:isNegative:8", align 8
  call void @free_candy_value(ptr %13179)
  %13180 = load ptr, ptr @fun_Core_int_isNegative, align 8
  call void @free_candy_value(ptr %13180)
  %13181 = load ptr, ptr @"Core:int:isNonNegative:4", align 8
  call void @free_candy_value(ptr %13181)
  %13182 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  call void @free_candy_value(ptr %13182)
  %13183 = load ptr, ptr @"Core:int:isNonNegative:15", align 8
  call void @free_candy_value(ptr %13183)
  %13184 = load ptr, ptr @"Core:int:isNonNegative:16", align 8
  call void @free_candy_value(ptr %13184)
  %13185 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  call void @free_candy_value(ptr %13185)
  %13186 = load ptr, ptr @"Core:int:absolute:4", align 8
  call void @free_candy_value(ptr %13186)
  %13187 = load ptr, ptr @"Core:int:absolute:8", align 8
  call void @free_candy_value(ptr %13187)
  %13188 = load ptr, ptr @"Core:int:absolute:9:2", align 8
  call void @free_candy_value(ptr %13188)
  %13189 = load ptr, ptr @"Core:int:absolute:11", align 8
  call void @free_candy_value(ptr %13189)
  %13190 = load ptr, ptr @fun_Core_int_absolute, align 8
  call void @free_candy_value(ptr %13190)
  %13191 = load ptr, ptr @fun_Core_int_absolute_9, align 8
  call void @free_candy_value(ptr %13191)
  %13192 = load ptr, ptr @fun_Core_int_absolute_10, align 8
  call void @free_candy_value(ptr %13192)
  %13193 = load ptr, ptr @"Core:int:fitsInRustU32:4", align 8
  call void @free_candy_value(ptr %13193)
  %13194 = load ptr, ptr @"Core:int:fitsInRustU32:7", align 8
  call void @free_candy_value(ptr %13194)
  %13195 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  call void @free_candy_value(ptr %13195)
  %13196 = load ptr, ptr @"Core:int:fitsInRustU32:9", align 8
  call void @free_candy_value(ptr %13196)
  %13197 = load ptr, ptr @num_4294967295, align 8
  call void @free_candy_value(ptr %13197)
  %13198 = load ptr, ptr @"Core:int:fitsInRustU32:15", align 8
  call void @free_candy_value(ptr %13198)
  %13199 = load ptr, ptr @fun_Core_int_fitsInRustU32, align 8
  call void @free_candy_value(ptr %13199)
  %13200 = load ptr, ptr @"Core:int:fitsInRustU128:4", align 8
  call void @free_candy_value(ptr %13200)
  %13201 = load ptr, ptr @"Core:int:fitsInRustU128:7", align 8
  call void @free_candy_value(ptr %13201)
  %13202 = load ptr, ptr @"Core:int:fitsInRustU128:9", align 8
  call void @free_candy_value(ptr %13202)
  %13203 = load ptr, ptr @"Core:int:fitsInRustU128:15", align 8
  call void @free_candy_value(ptr %13203)
  %13204 = load ptr, ptr @fun_Core_int_fitsInRustU128, align 8
  call void @free_candy_value(ptr %13204)
  %13205 = load ptr, ptr @"Core:int:126", align 8
  call void @free_candy_value(ptr %13205)
  %13206 = load ptr, ptr @"Core:int:135", align 8
  call void @free_candy_value(ptr %13206)
  %13207 = load ptr, ptr @"Core:int:144", align 8
  call void @free_candy_value(ptr %13207)
  %13208 = load ptr, ptr @"Core:int:153", align 8
  call void @free_candy_value(ptr %13208)
  %13209 = load ptr, ptr @"Core:int:162", align 8
  call void @free_candy_value(ptr %13209)
  %13210 = load ptr, ptr @"Core:int:171", align 8
  call void @free_candy_value(ptr %13210)
  %13211 = load ptr, ptr @"Core:int:isEven:4", align 8
  call void @free_candy_value(ptr %13211)
  %13212 = load ptr, ptr @"Core:int:isEven:8", align 8
  call void @free_candy_value(ptr %13212)
  %13213 = load ptr, ptr @"Core:int:isEven:11", align 8
  call void @free_candy_value(ptr %13213)
  %13214 = load ptr, ptr @fun_Core_int_isEven, align 8
  call void @free_candy_value(ptr %13214)
  %13215 = load ptr, ptr @"Core:int:isOdd:4", align 8
  call void @free_candy_value(ptr %13215)
  %13216 = load ptr, ptr @"Core:int:isOdd:8", align 8
  call void @free_candy_value(ptr %13216)
  %13217 = load ptr, ptr @"Core:int:isOdd:11", align 8
  call void @free_candy_value(ptr %13217)
  %13218 = load ptr, ptr @"Core:int:isOdd:16", align 8
  call void @free_candy_value(ptr %13218)
  %13219 = load ptr, ptr @"Core:int:isOdd:26", align 8
  call void @free_candy_value(ptr %13219)
  %13220 = load ptr, ptr @"Core:int:isOdd:27", align 8
  call void @free_candy_value(ptr %13220)
  %13221 = load ptr, ptr @"Core:int:isOdd:28", align 8
  call void @free_candy_value(ptr %13221)
  %13222 = load ptr, ptr @"Core:int:isOdd:29", align 8
  call void @free_candy_value(ptr %13222)
  %13223 = load ptr, ptr @fun_Core_int_isOdd, align 8
  call void @free_candy_value(ptr %13223)
  %13224 = load ptr, ptr @"Core:int:min:4", align 8
  call void @free_candy_value(ptr %13224)
  %13225 = load ptr, ptr @"Core:int:min:9", align 8
  call void @free_candy_value(ptr %13225)
  %13226 = load ptr, ptr @"Core:int:min:14", align 8
  call void @free_candy_value(ptr %13226)
  %13227 = load ptr, ptr @"Core:int:min:17", align 8
  call void @free_candy_value(ptr %13227)
  %13228 = load ptr, ptr @fun_Core_int_min, align 8
  call void @free_candy_value(ptr %13228)
  %13229 = load ptr, ptr @fun_Core_int_min_15, align 8
  call void @free_candy_value(ptr %13229)
  %13230 = load ptr, ptr @fun_Core_int_min_16, align 8
  call void @free_candy_value(ptr %13230)
  %13231 = load ptr, ptr @"Core:int:max:4", align 8
  call void @free_candy_value(ptr %13231)
  %13232 = load ptr, ptr @"Core:int:max:9", align 8
  call void @free_candy_value(ptr %13232)
  %13233 = load ptr, ptr @"Core:int:max:14", align 8
  call void @free_candy_value(ptr %13233)
  %13234 = load ptr, ptr @"Core:int:max:17", align 8
  call void @free_candy_value(ptr %13234)
  %13235 = load ptr, ptr @fun_Core_int_max, align 8
  call void @free_candy_value(ptr %13235)
  %13236 = load ptr, ptr @fun_Core_int_max_15, align 8
  call void @free_candy_value(ptr %13236)
  %13237 = load ptr, ptr @fun_Core_int_max_16, align 8
  call void @free_candy_value(ptr %13237)
  %13238 = load ptr, ptr @"Core:int:coerceAtLeast:4", align 8
  call void @free_candy_value(ptr %13238)
  %13239 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  call void @free_candy_value(ptr %13239)
  %13240 = load ptr, ptr @"Core:int:coerceAtLeast:9", align 8
  call void @free_candy_value(ptr %13240)
  %13241 = load ptr, ptr @"Core:int:coerceAtLeast:13", align 8
  call void @free_candy_value(ptr %13241)
  %13242 = load ptr, ptr @fun_Core_int_coerceAtLeast, align 8
  call void @free_candy_value(ptr %13242)
  %13243 = load ptr, ptr @"Core:int:coerceAtMost:4", align 8
  call void @free_candy_value(ptr %13243)
  %13244 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  call void @free_candy_value(ptr %13244)
  %13245 = load ptr, ptr @"Core:int:coerceAtMost:9", align 8
  call void @free_candy_value(ptr %13245)
  %13246 = load ptr, ptr @"Core:int:coerceAtMost:13", align 8
  call void @free_candy_value(ptr %13246)
  %13247 = load ptr, ptr @fun_Core_int_coerceAtMost, align 8
  call void @free_candy_value(ptr %13247)
  %13248 = load ptr, ptr @"Core:int:coerceIn:4", align 8
  call void @free_candy_value(ptr %13248)
  %13249 = load ptr, ptr @"Core:int:coerceIn:9", align 8
  call void @free_candy_value(ptr %13249)
  %13250 = load ptr, ptr @"Core:int:coerceIn:14", align 8
  call void @free_candy_value(ptr %13250)
  %13251 = load ptr, ptr @"Core:int:coerceIn:18", align 8
  call void @free_candy_value(ptr %13251)
  %13252 = load ptr, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  call void @free_candy_value(ptr %13252)
  %13253 = load ptr, ptr @"Core:int:coerceIn:20", align 8
  call void @free_candy_value(ptr %13253)
  %13254 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  call void @free_candy_value(ptr %13254)
  %13255 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  call void @free_candy_value(ptr %13255)
  %13256 = load ptr, ptr @fun_Core_int_coerceIn, align 8
  call void @free_candy_value(ptr %13256)
  %13257 = load ptr, ptr @"Core:int:180", align 8
  call void @free_candy_value(ptr %13257)
  %13258 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  call void @free_candy_value(ptr %13258)
  %13259 = load ptr, ptr @"Core:int:pow:4", align 8
  call void @free_candy_value(ptr %13259)
  %13260 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %13260)
  %13261 = load ptr, ptr @"Core:int:pow:9", align 8
  call void @free_candy_value(ptr %13261)
  %13262 = load ptr, ptr @"Core:int:pow:12", align 8
  call void @free_candy_value(ptr %13262)
  %13263 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %13263)
  %13264 = load ptr, ptr @"Core:int:pow:14", align 8
  call void @free_candy_value(ptr %13264)
  %13265 = load ptr, ptr @tag_Base, align 8
  call void @free_candy_value(ptr %13265)
  %13266 = load ptr, ptr @tag_Exponent, align 8
  call void @free_candy_value(ptr %13266)
  %13267 = load ptr, ptr @"Core:int:pow:21:1", align 8
  call void @free_candy_value(ptr %13267)
  %13268 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  call void @free_candy_value(ptr %13268)
  %13269 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  call void @free_candy_value(ptr %13269)
  %13270 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  call void @free_candy_value(ptr %13270)
  %13271 = load ptr, ptr @"Core:int:pow:21:base", align 8
  call void @free_candy_value(ptr %13271)
  %13272 = load ptr, ptr @"Core:int:pow:21:exponent", align 8
  call void @free_candy_value(ptr %13272)
  %13273 = load ptr, ptr @"Core:int:pow:21:4", align 8
  call void @free_candy_value(ptr %13273)
  %13274 = load ptr, ptr @"text_Expected `0`, got `", align 8
  call void @free_candy_value(ptr %13274)
  %13275 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  call void @free_candy_value(ptr %13275)
  %13276 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  call void @free_candy_value(ptr %13276)
  %13277 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  call void @free_candy_value(ptr %13277)
  %13278 = load ptr, ptr @"Core:int:pow:21:4:5:10", align 8
  call void @free_candy_value(ptr %13278)
  %13279 = load ptr, ptr @"Core:int:pow:21:4:5:12", align 8
  call void @free_candy_value(ptr %13279)
  %13280 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  call void @free_candy_value(ptr %13280)
  %13281 = load ptr, ptr @"Core:int:pow:21:4:6:12", align 8
  call void @free_candy_value(ptr %13281)
  %13282 = load ptr, ptr @"Core:int:pow:21:4:6:15", align 8
  call void @free_candy_value(ptr %13282)
  %13283 = load ptr, ptr @"Core:int:pow:21:4:6:17", align 8
  call void @free_candy_value(ptr %13283)
  %13284 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  call void @free_candy_value(ptr %13284)
  %13285 = load ptr, ptr @"Core:int:pow:21:4:7", align 8
  call void @free_candy_value(ptr %13285)
  %13286 = load ptr, ptr @"Core:int:pow:22", align 8
  call void @free_candy_value(ptr %13286)
  %13287 = load ptr, ptr @fun_Core_int_pow, align 8
  call void @free_candy_value(ptr %13287)
  %13288 = load ptr, ptr @fun_Core_int_pow_21, align 8
  call void @free_candy_value(ptr %13288)
  %13289 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  call void @free_candy_value(ptr %13289)
  %13290 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  call void @free_candy_value(ptr %13290)
  %13291 = load ptr, ptr @85, align 8
  call void @free_candy_value(ptr %13291)
  %13292 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  call void @free_candy_value(ptr %13292)
  %13293 = load ptr, ptr @86, align 8
  call void @free_candy_value(ptr %13293)
  %13294 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  call void @free_candy_value(ptr %13294)
  %13295 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.561, align 8
  call void @free_candy_value(ptr %13295)
  %13296 = load ptr, ptr @87, align 8
  call void @free_candy_value(ptr %13296)
  %13297 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.563, align 8
  call void @free_candy_value(ptr %13297)
  %13298 = load ptr, ptr @88, align 8
  call void @free_candy_value(ptr %13298)
  %13299 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.565, align 8
  call void @free_candy_value(ptr %13299)
  %13300 = load ptr, ptr @89, align 8
  call void @free_candy_value(ptr %13300)
  %13301 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  call void @free_candy_value(ptr %13301)
  %13302 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.567, align 8
  call void @free_candy_value(ptr %13302)
  %13303 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  call void @free_candy_value(ptr %13303)
  %13304 = load ptr, ptr @90, align 8
  call void @free_candy_value(ptr %13304)
  %13305 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.569, align 8
  call void @free_candy_value(ptr %13305)
  %13306 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  call void @free_candy_value(ptr %13306)
  %13307 = load ptr, ptr @91, align 8
  call void @free_candy_value(ptr %13307)
  %13308 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %13308)
  %13309 = load ptr, ptr @fun_Core_int_pow_21_4_case-1_matched, align 8
  call void @free_candy_value(ptr %13309)
  %13310 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  call void @free_candy_value(ptr %13310)
  %13311 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  call void @free_candy_value(ptr %13311)
  %13312 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %13312)
  %13313 = load ptr, ptr @tag_BitwiseAnd, align 8
  call void @free_candy_value(ptr %13313)
  %13314 = load ptr, ptr @tag_BitwiseOr, align 8
  call void @free_candy_value(ptr %13314)
  %13315 = load ptr, ptr @tag_CoerceAtMost, align 8
  call void @free_candy_value(ptr %13315)
  %13316 = load ptr, ptr @tag_Remainder, align 8
  call void @free_candy_value(ptr %13316)
  %13317 = load ptr, ptr @tag_FitsInRustU32, align 8
  call void @free_candy_value(ptr %13317)
  %13318 = load ptr, ptr @tag_ShiftLeft, align 8
  call void @free_candy_value(ptr %13318)
  %13319 = load ptr, ptr @tag_IsPositive, align 8
  call void @free_candy_value(ptr %13319)
  %13320 = load ptr, ptr @tag_CoerceIn, align 8
  call void @free_candy_value(ptr %13320)
  %13321 = load ptr, ptr @tag_IsNegative, align 8
  call void @free_candy_value(ptr %13321)
  %13322 = load ptr, ptr @tag_IsNonNegative, align 8
  call void @free_candy_value(ptr %13322)
  %13323 = load ptr, ptr @tag_Modulo, align 8
  call void @free_candy_value(ptr %13323)
  %13324 = load ptr, ptr @tag_Parse, align 8
  call void @free_candy_value(ptr %13324)
  %13325 = load ptr, ptr @tag_IsGreaterThan, align 8
  call void @free_candy_value(ptr %13325)
  %13326 = load ptr, ptr @tag_IsNonPositive, align 8
  call void @free_candy_value(ptr %13326)
  %13327 = load ptr, ptr @tag_Multiply, align 8
  call void @free_candy_value(ptr %13327)
  %13328 = load ptr, ptr @tag_DivideTruncating, align 8
  call void @free_candy_value(ptr %13328)
  %13329 = load ptr, ptr @tag_Add, align 8
  call void @free_candy_value(ptr %13329)
  %13330 = load ptr, ptr @tag_BitwiseXor, align 8
  call void @free_candy_value(ptr %13330)
  %13331 = load ptr, ptr @tag_IsOdd, align 8
  call void @free_candy_value(ptr %13331)
  %13332 = load ptr, ptr @tag_IsGreaterThanOrEqualTo, align 8
  call void @free_candy_value(ptr %13332)
  %13333 = load ptr, ptr @tag_IsLessThan, align 8
  call void @free_candy_value(ptr %13333)
  %13334 = load ptr, ptr @tag_Negate, align 8
  call void @free_candy_value(ptr %13334)
  %13335 = load ptr, ptr @tag_Pow, align 8
  call void @free_candy_value(ptr %13335)
  %13336 = load ptr, ptr @tag_ShiftRight, align 8
  call void @free_candy_value(ptr %13336)
  %13337 = load ptr, ptr @tag_IsEven, align 8
  call void @free_candy_value(ptr %13337)
  %13338 = load ptr, ptr @tag_Max, align 8
  call void @free_candy_value(ptr %13338)
  %13339 = load ptr, ptr @tag_BitLength, align 8
  call void @free_candy_value(ptr %13339)
  %13340 = load ptr, ptr @tag_Min, align 8
  call void @free_candy_value(ptr %13340)
  %13341 = load ptr, ptr @tag_FitsInRustU128, align 8
  call void @free_candy_value(ptr %13341)
  %13342 = load ptr, ptr @tag_CoerceAtLeast, align 8
  call void @free_candy_value(ptr %13342)
  %13343 = load ptr, ptr @tag_CompareTo, align 8
  call void @free_candy_value(ptr %13343)
  %13344 = load ptr, ptr @tag_Absolute, align 8
  call void @free_candy_value(ptr %13344)
  %13345 = load ptr, ptr @tag_Subtract, align 8
  call void @free_candy_value(ptr %13345)
  %13346 = load ptr, ptr @tag_TheAnswer, align 8
  call void @free_candy_value(ptr %13346)
  %13347 = load ptr, ptr @tag_Get, align 8
  call void @free_candy_value(ptr %13347)
  %13348 = load ptr, ptr @fun_Core_type_is.571, align 8
  call void @free_candy_value(ptr %13348)
  %13349 = load ptr, ptr @fun_Core_function_is.573, align 8
  call void @free_candy_value(ptr %13349)
  %13350 = load ptr, ptr @fun_Core_function_is0.575, align 8
  call void @free_candy_value(ptr %13350)
  %13351 = load ptr, ptr @fun_Core_function_is0_11.577, align 8
  call void @free_candy_value(ptr %13351)
  %13352 = load ptr, ptr @fun_Core_function_is1.579, align 8
  call void @free_candy_value(ptr %13352)
  %13353 = load ptr, ptr @fun_Core_function_is1_11.581, align 8
  call void @free_candy_value(ptr %13353)
  %13354 = load ptr, ptr @fun_Core_function_is2.583, align 8
  call void @free_candy_value(ptr %13354)
  %13355 = load ptr, ptr @fun_Core_function_is2_11.585, align 8
  call void @free_candy_value(ptr %13355)
  %13356 = load ptr, ptr @fun_Core_function_is3.587, align 8
  call void @free_candy_value(ptr %13356)
  %13357 = load ptr, ptr @fun_Core_function_is3_11.589, align 8
  call void @free_candy_value(ptr %13357)
  %13358 = load ptr, ptr @fun_Core_function_is4.591, align 8
  call void @free_candy_value(ptr %13358)
  %13359 = load ptr, ptr @fun_Core_function_is4_11.593, align 8
  call void @free_candy_value(ptr %13359)
  %13360 = load ptr, ptr @fun_Core_function_is5.595, align 8
  call void @free_candy_value(ptr %13360)
  %13361 = load ptr, ptr @fun_Core_function_is5_11.597, align 8
  call void @free_candy_value(ptr %13361)
  %13362 = load ptr, ptr @fun_Core_function_run.599, align 8
  call void @free_candy_value(ptr %13362)
  %13363 = load ptr, ptr @fun_Core_function_is0_11.601, align 8
  call void @free_candy_value(ptr %13363)
  %13364 = load ptr, ptr @fun_Core_function_doNotRun.603, align 8
  call void @free_candy_value(ptr %13364)
  %13365 = load ptr, ptr @fun_Core_function_is0_11.605, align 8
  call void @free_candy_value(ptr %13365)
  %13366 = load ptr, ptr @fun_Core_bool_lazyAnd.607, align 8
  call void @free_candy_value(ptr %13366)
  %13367 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.609, align 8
  call void @free_candy_value(ptr %13367)
  %13368 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.611, align 8
  call void @free_candy_value(ptr %13368)
  %13369 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.613, align 8
  call void @free_candy_value(ptr %13369)
  %13370 = load ptr, ptr @92, align 8
  call void @free_candy_value(ptr %13370)
  %13371 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.615, align 8
  call void @free_candy_value(ptr %13371)
  %13372 = load ptr, ptr @93, align 8
  call void @free_candy_value(ptr %13372)
  %13373 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.617, align 8
  call void @free_candy_value(ptr %13373)
  %13374 = load ptr, ptr @94, align 8
  call void @free_candy_value(ptr %13374)
  %13375 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.619, align 8
  call void @free_candy_value(ptr %13375)
  %13376 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.621, align 8
  call void @free_candy_value(ptr %13376)
  %13377 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.623, align 8
  call void @free_candy_value(ptr %13377)
  %13378 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.625, align 8
  call void @free_candy_value(ptr %13378)
  %13379 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.627, align 8
  call void @free_candy_value(ptr %13379)
  %13380 = load ptr, ptr @95, align 8
  call void @free_candy_value(ptr %13380)
  %13381 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.629, align 8
  call void @free_candy_value(ptr %13381)
  %13382 = load ptr, ptr @96, align 8
  call void @free_candy_value(ptr %13382)
  %13383 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.631, align 8
  call void @free_candy_value(ptr %13383)
  %13384 = load ptr, ptr @97, align 8
  call void @free_candy_value(ptr %13384)
  %13385 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.633, align 8
  call void @free_candy_value(ptr %13385)
  %13386 = load ptr, ptr @fun_Core_bool_and.635, align 8
  call void @free_candy_value(ptr %13386)
  %13387 = load ptr, ptr @fun_Core_bool_and_12.637, align 8
  call void @free_candy_value(ptr %13387)
  %13388 = load ptr, ptr @fun_Core_bool_lazyOr.639, align 8
  call void @free_candy_value(ptr %13388)
  %13389 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.641, align 8
  call void @free_candy_value(ptr %13389)
  %13390 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.643, align 8
  call void @free_candy_value(ptr %13390)
  %13391 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.645, align 8
  call void @free_candy_value(ptr %13391)
  %13392 = load ptr, ptr @98, align 8
  call void @free_candy_value(ptr %13392)
  %13393 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.647, align 8
  call void @free_candy_value(ptr %13393)
  %13394 = load ptr, ptr @99, align 8
  call void @free_candy_value(ptr %13394)
  %13395 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.649, align 8
  call void @free_candy_value(ptr %13395)
  %13396 = load ptr, ptr @100, align 8
  call void @free_candy_value(ptr %13396)
  %13397 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.651, align 8
  call void @free_candy_value(ptr %13397)
  %13398 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.653, align 8
  call void @free_candy_value(ptr %13398)
  %13399 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.655, align 8
  call void @free_candy_value(ptr %13399)
  %13400 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.657, align 8
  call void @free_candy_value(ptr %13400)
  %13401 = load ptr, ptr @101, align 8
  call void @free_candy_value(ptr %13401)
  %13402 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.659, align 8
  call void @free_candy_value(ptr %13402)
  %13403 = load ptr, ptr @102, align 8
  call void @free_candy_value(ptr %13403)
  %13404 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.661, align 8
  call void @free_candy_value(ptr %13404)
  %13405 = load ptr, ptr @103, align 8
  call void @free_candy_value(ptr %13405)
  %13406 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.663, align 8
  call void @free_candy_value(ptr %13406)
  %13407 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.665, align 8
  call void @free_candy_value(ptr %13407)
  %13408 = load ptr, ptr @fun_Core_bool_or.667, align 8
  call void @free_candy_value(ptr %13408)
  %13409 = load ptr, ptr @fun_Core_bool_or_12.669, align 8
  call void @free_candy_value(ptr %13409)
  %13410 = load ptr, ptr @fun_Core_bool_xor.671, align 8
  call void @free_candy_value(ptr %13410)
  %13411 = load ptr, ptr @fun_Core_bool_implies.673, align 8
  call void @free_candy_value(ptr %13411)
  %13412 = load ptr, ptr @fun_Core_bool_or_12.675, align 8
  call void @free_candy_value(ptr %13412)
  %13413 = load ptr, ptr @fun_Core_type_is.677, align 8
  call void @free_candy_value(ptr %13413)
  %13414 = load ptr, ptr @"Core:tag:is:7", align 8
  call void @free_candy_value(ptr %13414)
  %13415 = load ptr, ptr @"Core:tag:is:10", align 8
  call void @free_candy_value(ptr %13415)
  %13416 = load ptr, ptr @fun_Core_tag_is, align 8
  call void @free_candy_value(ptr %13416)
  %13417 = load ptr, ptr @"Core:tag:48", align 8
  call void @free_candy_value(ptr %13417)
  %13418 = load ptr, ptr @"Core:tag:57", align 8
  call void @free_candy_value(ptr %13418)
  %13419 = load ptr, ptr @"Core:tag:66", align 8
  call void @free_candy_value(ptr %13419)
  %13420 = load ptr, ptr @"text_`is tag` was not satisfied", align 8
  call void @free_candy_value(ptr %13420)
  %13421 = load ptr, ptr @"Core:tag:withSymbol:4", align 8
  call void @free_candy_value(ptr %13421)
  %13422 = load ptr, ptr @"text_`is symbolTag` was not satisfied", align 8
  call void @free_candy_value(ptr %13422)
  %13423 = load ptr, ptr @"Core:tag:withSymbol:9", align 8
  call void @free_candy_value(ptr %13423)
  %13424 = load ptr, ptr @"Core:tag:withSymbol:12", align 8
  call void @free_candy_value(ptr %13424)
  %13425 = load ptr, ptr @"Core:tag:withSymbol:20", align 8
  call void @free_candy_value(ptr %13425)
  %13426 = load ptr, ptr @"Core:tag:withSymbol:21", align 8
  call void @free_candy_value(ptr %13426)
  %13427 = load ptr, ptr @"text_`symbolTag | hasValue | bool.not` was not satisfied", align 8
  call void @free_candy_value(ptr %13427)
  %13428 = load ptr, ptr @"Core:tag:withSymbol:23", align 8
  call void @free_candy_value(ptr %13428)
  %13429 = load ptr, ptr @"Core:tag:withSymbol:27", align 8
  call void @free_candy_value(ptr %13429)
  %13430 = load ptr, ptr @"Core:tag:withSymbol:28:3", align 8
  call void @free_candy_value(ptr %13430)
  %13431 = load ptr, ptr @"Core:tag:withSymbol:28:4", align 8
  call void @free_candy_value(ptr %13431)
  %13432 = load ptr, ptr @"Core:tag:withSymbol:29:2", align 8
  call void @free_candy_value(ptr %13432)
  %13433 = load ptr, ptr @"Core:tag:withSymbol:30", align 8
  call void @free_candy_value(ptr %13433)
  %13434 = load ptr, ptr @fun_Core_tag_withSymbol, align 8
  call void @free_candy_value(ptr %13434)
  %13435 = load ptr, ptr @fun_Core_tag_withSymbol_28, align 8
  call void @free_candy_value(ptr %13435)
  %13436 = load ptr, ptr @fun_Core_tag_withSymbol_29, align 8
  call void @free_candy_value(ptr %13436)
  %13437 = load ptr, ptr @"Core:tag:withValue:4", align 8
  call void @free_candy_value(ptr %13437)
  %13438 = load ptr, ptr @"Core:tag:withValue:7", align 8
  call void @free_candy_value(ptr %13438)
  %13439 = load ptr, ptr @"Core:tag:withValue:9", align 8
  call void @free_candy_value(ptr %13439)
  %13440 = load ptr, ptr @fun_Core_tag_withValue, align 8
  call void @free_candy_value(ptr %13440)
  %13441 = load ptr, ptr @tag_HasValue, align 8
  call void @free_candy_value(ptr %13441)
  %13442 = load ptr, ptr @tag_WithValue, align 8
  call void @free_candy_value(ptr %13442)
  %13443 = load ptr, ptr @tag_GetValue, align 8
  call void @free_candy_value(ptr %13443)
  %13444 = load ptr, ptr @tag_WithoutValue, align 8
  call void @free_candy_value(ptr %13444)
  %13445 = load ptr, ptr @tag_WithSymbol, align 8
  call void @free_candy_value(ptr %13445)
  %13446 = load ptr, ptr @fun_Core_type_is.679, align 8
  call void @free_candy_value(ptr %13446)
  %13447 = load ptr, ptr @fun_Core_function_is.681, align 8
  call void @free_candy_value(ptr %13447)
  %13448 = load ptr, ptr @fun_Core_function_is0.683, align 8
  call void @free_candy_value(ptr %13448)
  %13449 = load ptr, ptr @fun_Core_function_is0_11.685, align 8
  call void @free_candy_value(ptr %13449)
  %13450 = load ptr, ptr @fun_Core_function_is1.687, align 8
  call void @free_candy_value(ptr %13450)
  %13451 = load ptr, ptr @fun_Core_function_is1_11.689, align 8
  call void @free_candy_value(ptr %13451)
  %13452 = load ptr, ptr @fun_Core_function_is2.691, align 8
  call void @free_candy_value(ptr %13452)
  %13453 = load ptr, ptr @fun_Core_function_is2_11.693, align 8
  call void @free_candy_value(ptr %13453)
  %13454 = load ptr, ptr @fun_Core_function_is3.695, align 8
  call void @free_candy_value(ptr %13454)
  %13455 = load ptr, ptr @fun_Core_function_is3_11.697, align 8
  call void @free_candy_value(ptr %13455)
  %13456 = load ptr, ptr @fun_Core_function_is4.699, align 8
  call void @free_candy_value(ptr %13456)
  %13457 = load ptr, ptr @fun_Core_function_is4_11.701, align 8
  call void @free_candy_value(ptr %13457)
  %13458 = load ptr, ptr @fun_Core_function_is5.703, align 8
  call void @free_candy_value(ptr %13458)
  %13459 = load ptr, ptr @fun_Core_function_is5_11.705, align 8
  call void @free_candy_value(ptr %13459)
  %13460 = load ptr, ptr @fun_Core_function_run.707, align 8
  call void @free_candy_value(ptr %13460)
  %13461 = load ptr, ptr @fun_Core_function_is0_11.709, align 8
  call void @free_candy_value(ptr %13461)
  %13462 = load ptr, ptr @fun_Core_function_doNotRun.711, align 8
  call void @free_candy_value(ptr %13462)
  %13463 = load ptr, ptr @fun_Core_function_is0_11.713, align 8
  call void @free_candy_value(ptr %13463)
  %13464 = load ptr, ptr @fun_Core_bool_lazyAnd.715, align 8
  call void @free_candy_value(ptr %13464)
  %13465 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.717, align 8
  call void @free_candy_value(ptr %13465)
  %13466 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.719, align 8
  call void @free_candy_value(ptr %13466)
  %13467 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.721, align 8
  call void @free_candy_value(ptr %13467)
  %13468 = load ptr, ptr @104, align 8
  call void @free_candy_value(ptr %13468)
  %13469 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.723, align 8
  call void @free_candy_value(ptr %13469)
  %13470 = load ptr, ptr @105, align 8
  call void @free_candy_value(ptr %13470)
  %13471 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.725, align 8
  call void @free_candy_value(ptr %13471)
  %13472 = load ptr, ptr @106, align 8
  call void @free_candy_value(ptr %13472)
  %13473 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.727, align 8
  call void @free_candy_value(ptr %13473)
  %13474 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.729, align 8
  call void @free_candy_value(ptr %13474)
  %13475 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.731, align 8
  call void @free_candy_value(ptr %13475)
  %13476 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.733, align 8
  call void @free_candy_value(ptr %13476)
  %13477 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.735, align 8
  call void @free_candy_value(ptr %13477)
  %13478 = load ptr, ptr @107, align 8
  call void @free_candy_value(ptr %13478)
  %13479 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.737, align 8
  call void @free_candy_value(ptr %13479)
  %13480 = load ptr, ptr @108, align 8
  call void @free_candy_value(ptr %13480)
  %13481 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.739, align 8
  call void @free_candy_value(ptr %13481)
  %13482 = load ptr, ptr @109, align 8
  call void @free_candy_value(ptr %13482)
  %13483 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.741, align 8
  call void @free_candy_value(ptr %13483)
  %13484 = load ptr, ptr @fun_Core_bool_and.743, align 8
  call void @free_candy_value(ptr %13484)
  %13485 = load ptr, ptr @fun_Core_bool_and_12.745, align 8
  call void @free_candy_value(ptr %13485)
  %13486 = load ptr, ptr @fun_Core_bool_lazyOr.747, align 8
  call void @free_candy_value(ptr %13486)
  %13487 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.749, align 8
  call void @free_candy_value(ptr %13487)
  %13488 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.751, align 8
  call void @free_candy_value(ptr %13488)
  %13489 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.753, align 8
  call void @free_candy_value(ptr %13489)
  %13490 = load ptr, ptr @110, align 8
  call void @free_candy_value(ptr %13490)
  %13491 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.755, align 8
  call void @free_candy_value(ptr %13491)
  %13492 = load ptr, ptr @111, align 8
  call void @free_candy_value(ptr %13492)
  %13493 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.757, align 8
  call void @free_candy_value(ptr %13493)
  %13494 = load ptr, ptr @112, align 8
  call void @free_candy_value(ptr %13494)
  %13495 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.759, align 8
  call void @free_candy_value(ptr %13495)
  %13496 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.761, align 8
  call void @free_candy_value(ptr %13496)
  %13497 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.763, align 8
  call void @free_candy_value(ptr %13497)
  %13498 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.765, align 8
  call void @free_candy_value(ptr %13498)
  %13499 = load ptr, ptr @113, align 8
  call void @free_candy_value(ptr %13499)
  %13500 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.767, align 8
  call void @free_candy_value(ptr %13500)
  %13501 = load ptr, ptr @114, align 8
  call void @free_candy_value(ptr %13501)
  %13502 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.769, align 8
  call void @free_candy_value(ptr %13502)
  %13503 = load ptr, ptr @115, align 8
  call void @free_candy_value(ptr %13503)
  %13504 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.771, align 8
  call void @free_candy_value(ptr %13504)
  %13505 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.773, align 8
  call void @free_candy_value(ptr %13505)
  %13506 = load ptr, ptr @fun_Core_bool_or.775, align 8
  call void @free_candy_value(ptr %13506)
  %13507 = load ptr, ptr @fun_Core_bool_or_12.777, align 8
  call void @free_candy_value(ptr %13507)
  %13508 = load ptr, ptr @fun_Core_bool_xor.779, align 8
  call void @free_candy_value(ptr %13508)
  %13509 = load ptr, ptr @fun_Core_bool_implies.781, align 8
  call void @free_candy_value(ptr %13509)
  %13510 = load ptr, ptr @fun_Core_bool_or_12.783, align 8
  call void @free_candy_value(ptr %13510)
  %13511 = load ptr, ptr @fun_Core_type_is.785, align 8
  call void @free_candy_value(ptr %13511)
  %13512 = load ptr, ptr @fun_Core_function_is.787, align 8
  call void @free_candy_value(ptr %13512)
  %13513 = load ptr, ptr @fun_Core_function_is0.789, align 8
  call void @free_candy_value(ptr %13513)
  %13514 = load ptr, ptr @fun_Core_function_is0_11.791, align 8
  call void @free_candy_value(ptr %13514)
  %13515 = load ptr, ptr @fun_Core_function_is1.793, align 8
  call void @free_candy_value(ptr %13515)
  %13516 = load ptr, ptr @fun_Core_function_is1_11.795, align 8
  call void @free_candy_value(ptr %13516)
  %13517 = load ptr, ptr @fun_Core_function_is2.797, align 8
  call void @free_candy_value(ptr %13517)
  %13518 = load ptr, ptr @fun_Core_function_is2_11.799, align 8
  call void @free_candy_value(ptr %13518)
  %13519 = load ptr, ptr @fun_Core_function_is3.801, align 8
  call void @free_candy_value(ptr %13519)
  %13520 = load ptr, ptr @fun_Core_function_is3_11.803, align 8
  call void @free_candy_value(ptr %13520)
  %13521 = load ptr, ptr @fun_Core_function_is4.805, align 8
  call void @free_candy_value(ptr %13521)
  %13522 = load ptr, ptr @fun_Core_function_is4_11.807, align 8
  call void @free_candy_value(ptr %13522)
  %13523 = load ptr, ptr @fun_Core_function_is5.809, align 8
  call void @free_candy_value(ptr %13523)
  %13524 = load ptr, ptr @fun_Core_function_is5_11.811, align 8
  call void @free_candy_value(ptr %13524)
  %13525 = load ptr, ptr @fun_Core_function_run.813, align 8
  call void @free_candy_value(ptr %13525)
  %13526 = load ptr, ptr @fun_Core_function_is0_11.815, align 8
  call void @free_candy_value(ptr %13526)
  %13527 = load ptr, ptr @fun_Core_function_doNotRun.817, align 8
  call void @free_candy_value(ptr %13527)
  %13528 = load ptr, ptr @fun_Core_function_is0_11.819, align 8
  call void @free_candy_value(ptr %13528)
  %13529 = load ptr, ptr @fun_Core_bool_lazyAnd.821, align 8
  call void @free_candy_value(ptr %13529)
  %13530 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.823, align 8
  call void @free_candy_value(ptr %13530)
  %13531 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.825, align 8
  call void @free_candy_value(ptr %13531)
  %13532 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.827, align 8
  call void @free_candy_value(ptr %13532)
  %13533 = load ptr, ptr @116, align 8
  call void @free_candy_value(ptr %13533)
  %13534 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.829, align 8
  call void @free_candy_value(ptr %13534)
  %13535 = load ptr, ptr @117, align 8
  call void @free_candy_value(ptr %13535)
  %13536 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.831, align 8
  call void @free_candy_value(ptr %13536)
  %13537 = load ptr, ptr @118, align 8
  call void @free_candy_value(ptr %13537)
  %13538 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.833, align 8
  call void @free_candy_value(ptr %13538)
  %13539 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.835, align 8
  call void @free_candy_value(ptr %13539)
  %13540 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.837, align 8
  call void @free_candy_value(ptr %13540)
  %13541 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.839, align 8
  call void @free_candy_value(ptr %13541)
  %13542 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.841, align 8
  call void @free_candy_value(ptr %13542)
  %13543 = load ptr, ptr @119, align 8
  call void @free_candy_value(ptr %13543)
  %13544 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.843, align 8
  call void @free_candy_value(ptr %13544)
  %13545 = load ptr, ptr @120, align 8
  call void @free_candy_value(ptr %13545)
  %13546 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.845, align 8
  call void @free_candy_value(ptr %13546)
  %13547 = load ptr, ptr @121, align 8
  call void @free_candy_value(ptr %13547)
  %13548 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.847, align 8
  call void @free_candy_value(ptr %13548)
  %13549 = load ptr, ptr @fun_Core_bool_and.849, align 8
  call void @free_candy_value(ptr %13549)
  %13550 = load ptr, ptr @fun_Core_bool_and_12.851, align 8
  call void @free_candy_value(ptr %13550)
  %13551 = load ptr, ptr @fun_Core_bool_lazyOr.853, align 8
  call void @free_candy_value(ptr %13551)
  %13552 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.855, align 8
  call void @free_candy_value(ptr %13552)
  %13553 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.857, align 8
  call void @free_candy_value(ptr %13553)
  %13554 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.859, align 8
  call void @free_candy_value(ptr %13554)
  %13555 = load ptr, ptr @122, align 8
  call void @free_candy_value(ptr %13555)
  %13556 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.861, align 8
  call void @free_candy_value(ptr %13556)
  %13557 = load ptr, ptr @123, align 8
  call void @free_candy_value(ptr %13557)
  %13558 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.863, align 8
  call void @free_candy_value(ptr %13558)
  %13559 = load ptr, ptr @124, align 8
  call void @free_candy_value(ptr %13559)
  %13560 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.865, align 8
  call void @free_candy_value(ptr %13560)
  %13561 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.867, align 8
  call void @free_candy_value(ptr %13561)
  %13562 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.869, align 8
  call void @free_candy_value(ptr %13562)
  %13563 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.871, align 8
  call void @free_candy_value(ptr %13563)
  %13564 = load ptr, ptr @125, align 8
  call void @free_candy_value(ptr %13564)
  %13565 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.873, align 8
  call void @free_candy_value(ptr %13565)
  %13566 = load ptr, ptr @126, align 8
  call void @free_candy_value(ptr %13566)
  %13567 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.875, align 8
  call void @free_candy_value(ptr %13567)
  %13568 = load ptr, ptr @127, align 8
  call void @free_candy_value(ptr %13568)
  %13569 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.877, align 8
  call void @free_candy_value(ptr %13569)
  %13570 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.879, align 8
  call void @free_candy_value(ptr %13570)
  %13571 = load ptr, ptr @fun_Core_bool_or.881, align 8
  call void @free_candy_value(ptr %13571)
  %13572 = load ptr, ptr @fun_Core_bool_or_12.883, align 8
  call void @free_candy_value(ptr %13572)
  %13573 = load ptr, ptr @fun_Core_bool_xor.885, align 8
  call void @free_candy_value(ptr %13573)
  %13574 = load ptr, ptr @fun_Core_bool_implies.887, align 8
  call void @free_candy_value(ptr %13574)
  %13575 = load ptr, ptr @fun_Core_bool_or_12.889, align 8
  call void @free_candy_value(ptr %13575)
  %13576 = load ptr, ptr @fun_Core_check_check.891, align 8
  call void @free_candy_value(ptr %13576)
  %13577 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.893", align 8
  call void @free_candy_value(ptr %13577)
  %13578 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.895", align 8
  call void @free_candy_value(ptr %13578)
  %13579 = load ptr, ptr @fun_Core_type_is.897, align 8
  call void @free_candy_value(ptr %13579)
  %13580 = load ptr, ptr @fun_Core_function_is.899, align 8
  call void @free_candy_value(ptr %13580)
  %13581 = load ptr, ptr @fun_Core_function_is0.901, align 8
  call void @free_candy_value(ptr %13581)
  %13582 = load ptr, ptr @fun_Core_function_is0_11.903, align 8
  call void @free_candy_value(ptr %13582)
  %13583 = load ptr, ptr @fun_Core_function_is1.905, align 8
  call void @free_candy_value(ptr %13583)
  %13584 = load ptr, ptr @fun_Core_function_is1_11.907, align 8
  call void @free_candy_value(ptr %13584)
  %13585 = load ptr, ptr @fun_Core_function_is2.909, align 8
  call void @free_candy_value(ptr %13585)
  %13586 = load ptr, ptr @fun_Core_function_is2_11.911, align 8
  call void @free_candy_value(ptr %13586)
  %13587 = load ptr, ptr @fun_Core_function_is3.913, align 8
  call void @free_candy_value(ptr %13587)
  %13588 = load ptr, ptr @fun_Core_function_is3_11.915, align 8
  call void @free_candy_value(ptr %13588)
  %13589 = load ptr, ptr @fun_Core_function_is4.917, align 8
  call void @free_candy_value(ptr %13589)
  %13590 = load ptr, ptr @fun_Core_function_is4_11.919, align 8
  call void @free_candy_value(ptr %13590)
  %13591 = load ptr, ptr @fun_Core_function_is5.921, align 8
  call void @free_candy_value(ptr %13591)
  %13592 = load ptr, ptr @fun_Core_function_is5_11.923, align 8
  call void @free_candy_value(ptr %13592)
  %13593 = load ptr, ptr @fun_Core_function_run.925, align 8
  call void @free_candy_value(ptr %13593)
  %13594 = load ptr, ptr @fun_Core_function_is0_11.927, align 8
  call void @free_candy_value(ptr %13594)
  %13595 = load ptr, ptr @fun_Core_function_doNotRun.929, align 8
  call void @free_candy_value(ptr %13595)
  %13596 = load ptr, ptr @fun_Core_function_is0_11.931, align 8
  call void @free_candy_value(ptr %13596)
  %13597 = load ptr, ptr @fun_Core_controlFlow_recursive.933, align 8
  call void @free_candy_value(ptr %13597)
  %13598 = load ptr, ptr @fun_Core_controlFlow_recursive_18.935, align 8
  call void @free_candy_value(ptr %13598)
  %13599 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.937, align 8
  call void @free_candy_value(ptr %13599)
  %13600 = load ptr, ptr @fun_Core_type_is.939, align 8
  call void @free_candy_value(ptr %13600)
  %13601 = load ptr, ptr @fun_Core_int_is.941, align 8
  call void @free_candy_value(ptr %13601)
  %13602 = load ptr, ptr @fun_Core_int_negate.943, align 8
  call void @free_candy_value(ptr %13602)
  %13603 = load ptr, ptr @fun_Core_int_compareTo.945, align 8
  call void @free_candy_value(ptr %13603)
  %13604 = load ptr, ptr @fun_Core_int_isLessThan.947, align 8
  call void @free_candy_value(ptr %13604)
  %13605 = load ptr, ptr @fun_Core_int_isGreaterThan.949, align 8
  call void @free_candy_value(ptr %13605)
  %13606 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo.951, align 8
  call void @free_candy_value(ptr %13606)
  %13607 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo.953, align 8
  call void @free_candy_value(ptr %13607)
  %13608 = load ptr, ptr @fun_Core_int_isPositive.955, align 8
  call void @free_candy_value(ptr %13608)
  %13609 = load ptr, ptr @fun_Core_int_isNonPositive.957, align 8
  call void @free_candy_value(ptr %13609)
  %13610 = load ptr, ptr @fun_Core_int_isNegative.959, align 8
  call void @free_candy_value(ptr %13610)
  %13611 = load ptr, ptr @fun_Core_int_isNonNegative.961, align 8
  call void @free_candy_value(ptr %13611)
  %13612 = load ptr, ptr @fun_Core_int_absolute.963, align 8
  call void @free_candy_value(ptr %13612)
  %13613 = load ptr, ptr @fun_Core_int_absolute_9.965, align 8
  call void @free_candy_value(ptr %13613)
  %13614 = load ptr, ptr @fun_Core_int_absolute_10.967, align 8
  call void @free_candy_value(ptr %13614)
  %13615 = load ptr, ptr @fun_Core_int_fitsInRustU32.969, align 8
  call void @free_candy_value(ptr %13615)
  %13616 = load ptr, ptr @fun_Core_int_fitsInRustU128.971, align 8
  call void @free_candy_value(ptr %13616)
  %13617 = load ptr, ptr @fun_Core_int_isEven.973, align 8
  call void @free_candy_value(ptr %13617)
  %13618 = load ptr, ptr @fun_Core_int_isOdd.975, align 8
  call void @free_candy_value(ptr %13618)
  %13619 = load ptr, ptr @fun_Core_int_min.977, align 8
  call void @free_candy_value(ptr %13619)
  %13620 = load ptr, ptr @fun_Core_int_min_15.979, align 8
  call void @free_candy_value(ptr %13620)
  %13621 = load ptr, ptr @fun_Core_int_min_16.981, align 8
  call void @free_candy_value(ptr %13621)
  %13622 = load ptr, ptr @fun_Core_int_max.983, align 8
  call void @free_candy_value(ptr %13622)
  %13623 = load ptr, ptr @fun_Core_int_max_15.985, align 8
  call void @free_candy_value(ptr %13623)
  %13624 = load ptr, ptr @fun_Core_int_max_16.987, align 8
  call void @free_candy_value(ptr %13624)
  %13625 = load ptr, ptr @fun_Core_int_coerceAtLeast.989, align 8
  call void @free_candy_value(ptr %13625)
  %13626 = load ptr, ptr @fun_Core_int_coerceAtMost.991, align 8
  call void @free_candy_value(ptr %13626)
  %13627 = load ptr, ptr @fun_Core_int_coerceIn.993, align 8
  call void @free_candy_value(ptr %13627)
  %13628 = load ptr, ptr @fun_Core_int_pow.995, align 8
  call void @free_candy_value(ptr %13628)
  %13629 = load ptr, ptr @fun_Core_int_pow_21.997, align 8
  call void @free_candy_value(ptr %13629)
  %13630 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then.999, align 8
  call void @free_candy_value(ptr %13630)
  %13631 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.1001, align 8
  call void @free_candy_value(ptr %13631)
  %13632 = load ptr, ptr @128, align 8
  call void @free_candy_value(ptr %13632)
  %13633 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.1003, align 8
  call void @free_candy_value(ptr %13633)
  %13634 = load ptr, ptr @129, align 8
  call void @free_candy_value(ptr %13634)
  %13635 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.1005, align 8
  call void @free_candy_value(ptr %13635)
  %13636 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.1007, align 8
  call void @free_candy_value(ptr %13636)
  %13637 = load ptr, ptr @130, align 8
  call void @free_candy_value(ptr %13637)
  %13638 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.1009, align 8
  call void @free_candy_value(ptr %13638)
  %13639 = load ptr, ptr @131, align 8
  call void @free_candy_value(ptr %13639)
  %13640 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.1011, align 8
  call void @free_candy_value(ptr %13640)
  %13641 = load ptr, ptr @132, align 8
  call void @free_candy_value(ptr %13641)
  %13642 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1013, align 8
  call void @free_candy_value(ptr %13642)
  %13643 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1015, align 8
  call void @free_candy_value(ptr %13643)
  %13644 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else.1017, align 8
  call void @free_candy_value(ptr %13644)
  %13645 = load ptr, ptr @133, align 8
  call void @free_candy_value(ptr %13645)
  %13646 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1019, align 8
  call void @free_candy_value(ptr %13646)
  %13647 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else.1021, align 8
  call void @free_candy_value(ptr %13647)
  %13648 = load ptr, ptr @134, align 8
  call void @free_candy_value(ptr %13648)
  %13649 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.1023, align 8
  call void @free_candy_value(ptr %13649)
  %13650 = load ptr, ptr @fun_Core_int_pow_21_4_case-1_matched.1025, align 8
  call void @free_candy_value(ptr %13650)
  %13651 = load ptr, ptr @fun_Core_int_pow_21_4_5.1027, align 8
  call void @free_candy_value(ptr %13651)
  %13652 = load ptr, ptr @fun_Core_int_pow_21_4_6.1029, align 8
  call void @free_candy_value(ptr %13652)
  %13653 = load ptr, ptr @fun_Core_type_is.1031, align 8
  call void @free_candy_value(ptr %13653)
  %13654 = load ptr, ptr @fun_Core_function_is.1033, align 8
  call void @free_candy_value(ptr %13654)
  %13655 = load ptr, ptr @fun_Core_function_is0.1035, align 8
  call void @free_candy_value(ptr %13655)
  %13656 = load ptr, ptr @fun_Core_function_is0_11.1037, align 8
  call void @free_candy_value(ptr %13656)
  %13657 = load ptr, ptr @fun_Core_function_is1.1039, align 8
  call void @free_candy_value(ptr %13657)
  %13658 = load ptr, ptr @fun_Core_function_is1_11.1041, align 8
  call void @free_candy_value(ptr %13658)
  %13659 = load ptr, ptr @fun_Core_function_is2.1043, align 8
  call void @free_candy_value(ptr %13659)
  %13660 = load ptr, ptr @fun_Core_function_is2_11.1045, align 8
  call void @free_candy_value(ptr %13660)
  %13661 = load ptr, ptr @fun_Core_function_is3.1047, align 8
  call void @free_candy_value(ptr %13661)
  %13662 = load ptr, ptr @fun_Core_function_is3_11.1049, align 8
  call void @free_candy_value(ptr %13662)
  %13663 = load ptr, ptr @fun_Core_function_is4.1051, align 8
  call void @free_candy_value(ptr %13663)
  %13664 = load ptr, ptr @fun_Core_function_is4_11.1053, align 8
  call void @free_candy_value(ptr %13664)
  %13665 = load ptr, ptr @fun_Core_function_is5.1055, align 8
  call void @free_candy_value(ptr %13665)
  %13666 = load ptr, ptr @fun_Core_function_is5_11.1057, align 8
  call void @free_candy_value(ptr %13666)
  %13667 = load ptr, ptr @fun_Core_function_run.1059, align 8
  call void @free_candy_value(ptr %13667)
  %13668 = load ptr, ptr @fun_Core_function_is0_11.1061, align 8
  call void @free_candy_value(ptr %13668)
  %13669 = load ptr, ptr @fun_Core_function_doNotRun.1063, align 8
  call void @free_candy_value(ptr %13669)
  %13670 = load ptr, ptr @fun_Core_function_is0_11.1065, align 8
  call void @free_candy_value(ptr %13670)
  %13671 = load ptr, ptr @fun_Core_bool_lazyAnd.1067, align 8
  call void @free_candy_value(ptr %13671)
  %13672 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1069, align 8
  call void @free_candy_value(ptr %13672)
  %13673 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1071, align 8
  call void @free_candy_value(ptr %13673)
  %13674 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1073, align 8
  call void @free_candy_value(ptr %13674)
  %13675 = load ptr, ptr @135, align 8
  call void @free_candy_value(ptr %13675)
  %13676 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1075, align 8
  call void @free_candy_value(ptr %13676)
  %13677 = load ptr, ptr @136, align 8
  call void @free_candy_value(ptr %13677)
  %13678 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1077, align 8
  call void @free_candy_value(ptr %13678)
  %13679 = load ptr, ptr @137, align 8
  call void @free_candy_value(ptr %13679)
  %13680 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1079, align 8
  call void @free_candy_value(ptr %13680)
  %13681 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1081, align 8
  call void @free_candy_value(ptr %13681)
  %13682 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1083, align 8
  call void @free_candy_value(ptr %13682)
  %13683 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1085, align 8
  call void @free_candy_value(ptr %13683)
  %13684 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1087, align 8
  call void @free_candy_value(ptr %13684)
  %13685 = load ptr, ptr @138, align 8
  call void @free_candy_value(ptr %13685)
  %13686 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1089, align 8
  call void @free_candy_value(ptr %13686)
  %13687 = load ptr, ptr @139, align 8
  call void @free_candy_value(ptr %13687)
  %13688 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1091, align 8
  call void @free_candy_value(ptr %13688)
  %13689 = load ptr, ptr @140, align 8
  call void @free_candy_value(ptr %13689)
  %13690 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1093, align 8
  call void @free_candy_value(ptr %13690)
  %13691 = load ptr, ptr @fun_Core_bool_and.1095, align 8
  call void @free_candy_value(ptr %13691)
  %13692 = load ptr, ptr @fun_Core_bool_and_12.1097, align 8
  call void @free_candy_value(ptr %13692)
  %13693 = load ptr, ptr @fun_Core_bool_lazyOr.1099, align 8
  call void @free_candy_value(ptr %13693)
  %13694 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1101, align 8
  call void @free_candy_value(ptr %13694)
  %13695 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1103, align 8
  call void @free_candy_value(ptr %13695)
  %13696 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1105, align 8
  call void @free_candy_value(ptr %13696)
  %13697 = load ptr, ptr @141, align 8
  call void @free_candy_value(ptr %13697)
  %13698 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1107, align 8
  call void @free_candy_value(ptr %13698)
  %13699 = load ptr, ptr @142, align 8
  call void @free_candy_value(ptr %13699)
  %13700 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1109, align 8
  call void @free_candy_value(ptr %13700)
  %13701 = load ptr, ptr @143, align 8
  call void @free_candy_value(ptr %13701)
  %13702 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1111, align 8
  call void @free_candy_value(ptr %13702)
  %13703 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1113, align 8
  call void @free_candy_value(ptr %13703)
  %13704 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1115, align 8
  call void @free_candy_value(ptr %13704)
  %13705 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1117, align 8
  call void @free_candy_value(ptr %13705)
  %13706 = load ptr, ptr @144, align 8
  call void @free_candy_value(ptr %13706)
  %13707 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1119, align 8
  call void @free_candy_value(ptr %13707)
  %13708 = load ptr, ptr @145, align 8
  call void @free_candy_value(ptr %13708)
  %13709 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1121, align 8
  call void @free_candy_value(ptr %13709)
  %13710 = load ptr, ptr @146, align 8
  call void @free_candy_value(ptr %13710)
  %13711 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1123, align 8
  call void @free_candy_value(ptr %13711)
  %13712 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1125, align 8
  call void @free_candy_value(ptr %13712)
  %13713 = load ptr, ptr @fun_Core_bool_or.1127, align 8
  call void @free_candy_value(ptr %13713)
  %13714 = load ptr, ptr @fun_Core_bool_or_12.1129, align 8
  call void @free_candy_value(ptr %13714)
  %13715 = load ptr, ptr @fun_Core_bool_xor.1131, align 8
  call void @free_candy_value(ptr %13715)
  %13716 = load ptr, ptr @fun_Core_bool_implies.1133, align 8
  call void @free_candy_value(ptr %13716)
  %13717 = load ptr, ptr @fun_Core_bool_or_12.1135, align 8
  call void @free_candy_value(ptr %13717)
  %13718 = load ptr, ptr @fun_Core_type_is.1137, align 8
  call void @free_candy_value(ptr %13718)
  %13719 = load ptr, ptr @fun_Core_function_is.1139, align 8
  call void @free_candy_value(ptr %13719)
  %13720 = load ptr, ptr @fun_Core_function_is0.1141, align 8
  call void @free_candy_value(ptr %13720)
  %13721 = load ptr, ptr @fun_Core_function_is0_11.1143, align 8
  call void @free_candy_value(ptr %13721)
  %13722 = load ptr, ptr @fun_Core_function_is1.1145, align 8
  call void @free_candy_value(ptr %13722)
  %13723 = load ptr, ptr @fun_Core_function_is1_11.1147, align 8
  call void @free_candy_value(ptr %13723)
  %13724 = load ptr, ptr @fun_Core_function_is2.1149, align 8
  call void @free_candy_value(ptr %13724)
  %13725 = load ptr, ptr @fun_Core_function_is2_11.1151, align 8
  call void @free_candy_value(ptr %13725)
  %13726 = load ptr, ptr @fun_Core_function_is3.1153, align 8
  call void @free_candy_value(ptr %13726)
  %13727 = load ptr, ptr @fun_Core_function_is3_11.1155, align 8
  call void @free_candy_value(ptr %13727)
  %13728 = load ptr, ptr @fun_Core_function_is4.1157, align 8
  call void @free_candy_value(ptr %13728)
  %13729 = load ptr, ptr @fun_Core_function_is4_11.1159, align 8
  call void @free_candy_value(ptr %13729)
  %13730 = load ptr, ptr @fun_Core_function_is5.1161, align 8
  call void @free_candy_value(ptr %13730)
  %13731 = load ptr, ptr @fun_Core_function_is5_11.1163, align 8
  call void @free_candy_value(ptr %13731)
  %13732 = load ptr, ptr @fun_Core_function_run.1165, align 8
  call void @free_candy_value(ptr %13732)
  %13733 = load ptr, ptr @fun_Core_function_is0_11.1167, align 8
  call void @free_candy_value(ptr %13733)
  %13734 = load ptr, ptr @fun_Core_function_doNotRun.1169, align 8
  call void @free_candy_value(ptr %13734)
  %13735 = load ptr, ptr @fun_Core_function_is0_11.1171, align 8
  call void @free_candy_value(ptr %13735)
  %13736 = load ptr, ptr @fun_Core_controlFlow_recursive.1173, align 8
  call void @free_candy_value(ptr %13736)
  %13737 = load ptr, ptr @fun_Core_controlFlow_recursive_18.1175, align 8
  call void @free_candy_value(ptr %13737)
  %13738 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.1177, align 8
  call void @free_candy_value(ptr %13738)
  %13739 = load ptr, ptr @fun_Core_type_is.1179, align 8
  call void @free_candy_value(ptr %13739)
  %13740 = load ptr, ptr @fun_Core_function_is.1181, align 8
  call void @free_candy_value(ptr %13740)
  %13741 = load ptr, ptr @fun_Core_function_is0.1183, align 8
  call void @free_candy_value(ptr %13741)
  %13742 = load ptr, ptr @fun_Core_function_is0_11.1185, align 8
  call void @free_candy_value(ptr %13742)
  %13743 = load ptr, ptr @fun_Core_function_is1.1187, align 8
  call void @free_candy_value(ptr %13743)
  %13744 = load ptr, ptr @fun_Core_function_is1_11.1189, align 8
  call void @free_candy_value(ptr %13744)
  %13745 = load ptr, ptr @fun_Core_function_is2.1191, align 8
  call void @free_candy_value(ptr %13745)
  %13746 = load ptr, ptr @fun_Core_function_is2_11.1193, align 8
  call void @free_candy_value(ptr %13746)
  %13747 = load ptr, ptr @fun_Core_function_is3.1195, align 8
  call void @free_candy_value(ptr %13747)
  %13748 = load ptr, ptr @fun_Core_function_is3_11.1197, align 8
  call void @free_candy_value(ptr %13748)
  %13749 = load ptr, ptr @fun_Core_function_is4.1199, align 8
  call void @free_candy_value(ptr %13749)
  %13750 = load ptr, ptr @fun_Core_function_is4_11.1201, align 8
  call void @free_candy_value(ptr %13750)
  %13751 = load ptr, ptr @fun_Core_function_is5.1203, align 8
  call void @free_candy_value(ptr %13751)
  %13752 = load ptr, ptr @fun_Core_function_is5_11.1205, align 8
  call void @free_candy_value(ptr %13752)
  %13753 = load ptr, ptr @fun_Core_function_run.1207, align 8
  call void @free_candy_value(ptr %13753)
  %13754 = load ptr, ptr @fun_Core_function_is0_11.1209, align 8
  call void @free_candy_value(ptr %13754)
  %13755 = load ptr, ptr @fun_Core_function_doNotRun.1211, align 8
  call void @free_candy_value(ptr %13755)
  %13756 = load ptr, ptr @fun_Core_function_is0_11.1213, align 8
  call void @free_candy_value(ptr %13756)
  %13757 = load ptr, ptr @fun_Core_type_is.1215, align 8
  call void @free_candy_value(ptr %13757)
  %13758 = load ptr, ptr @fun_Core_function_is.1217, align 8
  call void @free_candy_value(ptr %13758)
  %13759 = load ptr, ptr @fun_Core_function_is0.1219, align 8
  call void @free_candy_value(ptr %13759)
  %13760 = load ptr, ptr @fun_Core_function_is0_11.1221, align 8
  call void @free_candy_value(ptr %13760)
  %13761 = load ptr, ptr @fun_Core_function_is1.1223, align 8
  call void @free_candy_value(ptr %13761)
  %13762 = load ptr, ptr @fun_Core_function_is1_11.1225, align 8
  call void @free_candy_value(ptr %13762)
  %13763 = load ptr, ptr @fun_Core_function_is2.1227, align 8
  call void @free_candy_value(ptr %13763)
  %13764 = load ptr, ptr @fun_Core_function_is2_11.1229, align 8
  call void @free_candy_value(ptr %13764)
  %13765 = load ptr, ptr @fun_Core_function_is3.1231, align 8
  call void @free_candy_value(ptr %13765)
  %13766 = load ptr, ptr @fun_Core_function_is3_11.1233, align 8
  call void @free_candy_value(ptr %13766)
  %13767 = load ptr, ptr @fun_Core_function_is4.1235, align 8
  call void @free_candy_value(ptr %13767)
  %13768 = load ptr, ptr @fun_Core_function_is4_11.1237, align 8
  call void @free_candy_value(ptr %13768)
  %13769 = load ptr, ptr @fun_Core_function_is5.1239, align 8
  call void @free_candy_value(ptr %13769)
  %13770 = load ptr, ptr @fun_Core_function_is5_11.1241, align 8
  call void @free_candy_value(ptr %13770)
  %13771 = load ptr, ptr @fun_Core_function_run.1243, align 8
  call void @free_candy_value(ptr %13771)
  %13772 = load ptr, ptr @fun_Core_function_is0_11.1245, align 8
  call void @free_candy_value(ptr %13772)
  %13773 = load ptr, ptr @fun_Core_function_doNotRun.1247, align 8
  call void @free_candy_value(ptr %13773)
  %13774 = load ptr, ptr @fun_Core_function_is0_11.1249, align 8
  call void @free_candy_value(ptr %13774)
  %13775 = load ptr, ptr @fun_Core_bool_lazyAnd.1251, align 8
  call void @free_candy_value(ptr %13775)
  %13776 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1253, align 8
  call void @free_candy_value(ptr %13776)
  %13777 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1255, align 8
  call void @free_candy_value(ptr %13777)
  %13778 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1257, align 8
  call void @free_candy_value(ptr %13778)
  %13779 = load ptr, ptr @147, align 8
  call void @free_candy_value(ptr %13779)
  %13780 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1259, align 8
  call void @free_candy_value(ptr %13780)
  %13781 = load ptr, ptr @148, align 8
  call void @free_candy_value(ptr %13781)
  %13782 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1261, align 8
  call void @free_candy_value(ptr %13782)
  %13783 = load ptr, ptr @149, align 8
  call void @free_candy_value(ptr %13783)
  %13784 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1263, align 8
  call void @free_candy_value(ptr %13784)
  %13785 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1265, align 8
  call void @free_candy_value(ptr %13785)
  %13786 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1267, align 8
  call void @free_candy_value(ptr %13786)
  %13787 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1269, align 8
  call void @free_candy_value(ptr %13787)
  %13788 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1271, align 8
  call void @free_candy_value(ptr %13788)
  %13789 = load ptr, ptr @150, align 8
  call void @free_candy_value(ptr %13789)
  %13790 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1273, align 8
  call void @free_candy_value(ptr %13790)
  %13791 = load ptr, ptr @151, align 8
  call void @free_candy_value(ptr %13791)
  %13792 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1275, align 8
  call void @free_candy_value(ptr %13792)
  %13793 = load ptr, ptr @152, align 8
  call void @free_candy_value(ptr %13793)
  %13794 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1277, align 8
  call void @free_candy_value(ptr %13794)
  %13795 = load ptr, ptr @fun_Core_bool_and.1279, align 8
  call void @free_candy_value(ptr %13795)
  %13796 = load ptr, ptr @fun_Core_bool_and_12.1281, align 8
  call void @free_candy_value(ptr %13796)
  %13797 = load ptr, ptr @fun_Core_bool_lazyOr.1283, align 8
  call void @free_candy_value(ptr %13797)
  %13798 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1285, align 8
  call void @free_candy_value(ptr %13798)
  %13799 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1287, align 8
  call void @free_candy_value(ptr %13799)
  %13800 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1289, align 8
  call void @free_candy_value(ptr %13800)
  %13801 = load ptr, ptr @153, align 8
  call void @free_candy_value(ptr %13801)
  %13802 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1291, align 8
  call void @free_candy_value(ptr %13802)
  %13803 = load ptr, ptr @154, align 8
  call void @free_candy_value(ptr %13803)
  %13804 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1293, align 8
  call void @free_candy_value(ptr %13804)
  %13805 = load ptr, ptr @155, align 8
  call void @free_candy_value(ptr %13805)
  %13806 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1295, align 8
  call void @free_candy_value(ptr %13806)
  %13807 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1297, align 8
  call void @free_candy_value(ptr %13807)
  %13808 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1299, align 8
  call void @free_candy_value(ptr %13808)
  %13809 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1301, align 8
  call void @free_candy_value(ptr %13809)
  %13810 = load ptr, ptr @156, align 8
  call void @free_candy_value(ptr %13810)
  %13811 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1303, align 8
  call void @free_candy_value(ptr %13811)
  %13812 = load ptr, ptr @157, align 8
  call void @free_candy_value(ptr %13812)
  %13813 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1305, align 8
  call void @free_candy_value(ptr %13813)
  %13814 = load ptr, ptr @158, align 8
  call void @free_candy_value(ptr %13814)
  %13815 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1307, align 8
  call void @free_candy_value(ptr %13815)
  %13816 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1309, align 8
  call void @free_candy_value(ptr %13816)
  %13817 = load ptr, ptr @fun_Core_bool_or.1311, align 8
  call void @free_candy_value(ptr %13817)
  %13818 = load ptr, ptr @fun_Core_bool_or_12.1313, align 8
  call void @free_candy_value(ptr %13818)
  %13819 = load ptr, ptr @fun_Core_bool_xor.1315, align 8
  call void @free_candy_value(ptr %13819)
  %13820 = load ptr, ptr @fun_Core_bool_implies.1317, align 8
  call void @free_candy_value(ptr %13820)
  %13821 = load ptr, ptr @fun_Core_bool_or_12.1319, align 8
  call void @free_candy_value(ptr %13821)
  %13822 = load ptr, ptr @fun_Core_type_is.1321, align 8
  call void @free_candy_value(ptr %13822)
  %13823 = load ptr, ptr @fun_Core_function_is.1323, align 8
  call void @free_candy_value(ptr %13823)
  %13824 = load ptr, ptr @fun_Core_function_is0.1325, align 8
  call void @free_candy_value(ptr %13824)
  %13825 = load ptr, ptr @fun_Core_function_is0_11.1327, align 8
  call void @free_candy_value(ptr %13825)
  %13826 = load ptr, ptr @fun_Core_function_is1.1329, align 8
  call void @free_candy_value(ptr %13826)
  %13827 = load ptr, ptr @fun_Core_function_is1_11.1331, align 8
  call void @free_candy_value(ptr %13827)
  %13828 = load ptr, ptr @fun_Core_function_is2.1333, align 8
  call void @free_candy_value(ptr %13828)
  %13829 = load ptr, ptr @fun_Core_function_is2_11.1335, align 8
  call void @free_candy_value(ptr %13829)
  %13830 = load ptr, ptr @fun_Core_function_is3.1337, align 8
  call void @free_candy_value(ptr %13830)
  %13831 = load ptr, ptr @fun_Core_function_is3_11.1339, align 8
  call void @free_candy_value(ptr %13831)
  %13832 = load ptr, ptr @fun_Core_function_is4.1341, align 8
  call void @free_candy_value(ptr %13832)
  %13833 = load ptr, ptr @fun_Core_function_is4_11.1343, align 8
  call void @free_candy_value(ptr %13833)
  %13834 = load ptr, ptr @fun_Core_function_is5.1345, align 8
  call void @free_candy_value(ptr %13834)
  %13835 = load ptr, ptr @fun_Core_function_is5_11.1347, align 8
  call void @free_candy_value(ptr %13835)
  %13836 = load ptr, ptr @fun_Core_function_run.1349, align 8
  call void @free_candy_value(ptr %13836)
  %13837 = load ptr, ptr @fun_Core_function_is0_11.1351, align 8
  call void @free_candy_value(ptr %13837)
  %13838 = load ptr, ptr @fun_Core_function_doNotRun.1353, align 8
  call void @free_candy_value(ptr %13838)
  %13839 = load ptr, ptr @fun_Core_function_is0_11.1355, align 8
  call void @free_candy_value(ptr %13839)
  %13840 = load ptr, ptr @fun_Core_bool_lazyAnd.1357, align 8
  call void @free_candy_value(ptr %13840)
  %13841 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1359, align 8
  call void @free_candy_value(ptr %13841)
  %13842 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1361, align 8
  call void @free_candy_value(ptr %13842)
  %13843 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1363, align 8
  call void @free_candy_value(ptr %13843)
  %13844 = load ptr, ptr @159, align 8
  call void @free_candy_value(ptr %13844)
  %13845 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1365, align 8
  call void @free_candy_value(ptr %13845)
  %13846 = load ptr, ptr @160, align 8
  call void @free_candy_value(ptr %13846)
  %13847 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1367, align 8
  call void @free_candy_value(ptr %13847)
  %13848 = load ptr, ptr @161, align 8
  call void @free_candy_value(ptr %13848)
  %13849 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1369, align 8
  call void @free_candy_value(ptr %13849)
  %13850 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1371, align 8
  call void @free_candy_value(ptr %13850)
  %13851 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1373, align 8
  call void @free_candy_value(ptr %13851)
  %13852 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1375, align 8
  call void @free_candy_value(ptr %13852)
  %13853 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1377, align 8
  call void @free_candy_value(ptr %13853)
  %13854 = load ptr, ptr @162, align 8
  call void @free_candy_value(ptr %13854)
  %13855 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1379, align 8
  call void @free_candy_value(ptr %13855)
  %13856 = load ptr, ptr @163, align 8
  call void @free_candy_value(ptr %13856)
  %13857 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1381, align 8
  call void @free_candy_value(ptr %13857)
  %13858 = load ptr, ptr @164, align 8
  call void @free_candy_value(ptr %13858)
  %13859 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1383, align 8
  call void @free_candy_value(ptr %13859)
  %13860 = load ptr, ptr @fun_Core_bool_and.1385, align 8
  call void @free_candy_value(ptr %13860)
  %13861 = load ptr, ptr @fun_Core_bool_and_12.1387, align 8
  call void @free_candy_value(ptr %13861)
  %13862 = load ptr, ptr @fun_Core_bool_lazyOr.1389, align 8
  call void @free_candy_value(ptr %13862)
  %13863 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1391, align 8
  call void @free_candy_value(ptr %13863)
  %13864 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1393, align 8
  call void @free_candy_value(ptr %13864)
  %13865 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1395, align 8
  call void @free_candy_value(ptr %13865)
  %13866 = load ptr, ptr @165, align 8
  call void @free_candy_value(ptr %13866)
  %13867 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1397, align 8
  call void @free_candy_value(ptr %13867)
  %13868 = load ptr, ptr @166, align 8
  call void @free_candy_value(ptr %13868)
  %13869 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1399, align 8
  call void @free_candy_value(ptr %13869)
  %13870 = load ptr, ptr @167, align 8
  call void @free_candy_value(ptr %13870)
  %13871 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1401, align 8
  call void @free_candy_value(ptr %13871)
  %13872 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1403, align 8
  call void @free_candy_value(ptr %13872)
  %13873 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1405, align 8
  call void @free_candy_value(ptr %13873)
  %13874 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1407, align 8
  call void @free_candy_value(ptr %13874)
  %13875 = load ptr, ptr @168, align 8
  call void @free_candy_value(ptr %13875)
  %13876 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1409, align 8
  call void @free_candy_value(ptr %13876)
  %13877 = load ptr, ptr @169, align 8
  call void @free_candy_value(ptr %13877)
  %13878 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1411, align 8
  call void @free_candy_value(ptr %13878)
  %13879 = load ptr, ptr @170, align 8
  call void @free_candy_value(ptr %13879)
  %13880 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1413, align 8
  call void @free_candy_value(ptr %13880)
  %13881 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1415, align 8
  call void @free_candy_value(ptr %13881)
  %13882 = load ptr, ptr @fun_Core_bool_or.1417, align 8
  call void @free_candy_value(ptr %13882)
  %13883 = load ptr, ptr @fun_Core_bool_or_12.1419, align 8
  call void @free_candy_value(ptr %13883)
  %13884 = load ptr, ptr @fun_Core_bool_xor.1421, align 8
  call void @free_candy_value(ptr %13884)
  %13885 = load ptr, ptr @fun_Core_bool_implies.1423, align 8
  call void @free_candy_value(ptr %13885)
  %13886 = load ptr, ptr @fun_Core_bool_or_12.1425, align 8
  call void @free_candy_value(ptr %13886)
  %13887 = load ptr, ptr @fun_Core_check_check.1427, align 8
  call void @free_candy_value(ptr %13887)
  %13888 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.1429", align 8
  call void @free_candy_value(ptr %13888)
  %13889 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.1431", align 8
  call void @free_candy_value(ptr %13889)
  %13890 = load ptr, ptr @fun_Core_type_is.1433, align 8
  call void @free_candy_value(ptr %13890)
  %13891 = load ptr, ptr @fun_Core_function_is.1435, align 8
  call void @free_candy_value(ptr %13891)
  %13892 = load ptr, ptr @fun_Core_function_is0.1437, align 8
  call void @free_candy_value(ptr %13892)
  %13893 = load ptr, ptr @fun_Core_function_is0_11.1439, align 8
  call void @free_candy_value(ptr %13893)
  %13894 = load ptr, ptr @fun_Core_function_is1.1441, align 8
  call void @free_candy_value(ptr %13894)
  %13895 = load ptr, ptr @fun_Core_function_is1_11.1443, align 8
  call void @free_candy_value(ptr %13895)
  %13896 = load ptr, ptr @fun_Core_function_is2.1445, align 8
  call void @free_candy_value(ptr %13896)
  %13897 = load ptr, ptr @fun_Core_function_is2_11.1447, align 8
  call void @free_candy_value(ptr %13897)
  %13898 = load ptr, ptr @fun_Core_function_is3.1449, align 8
  call void @free_candy_value(ptr %13898)
  %13899 = load ptr, ptr @fun_Core_function_is3_11.1451, align 8
  call void @free_candy_value(ptr %13899)
  %13900 = load ptr, ptr @fun_Core_function_is4.1453, align 8
  call void @free_candy_value(ptr %13900)
  %13901 = load ptr, ptr @fun_Core_function_is4_11.1455, align 8
  call void @free_candy_value(ptr %13901)
  %13902 = load ptr, ptr @fun_Core_function_is5.1457, align 8
  call void @free_candy_value(ptr %13902)
  %13903 = load ptr, ptr @fun_Core_function_is5_11.1459, align 8
  call void @free_candy_value(ptr %13903)
  %13904 = load ptr, ptr @fun_Core_function_run.1461, align 8
  call void @free_candy_value(ptr %13904)
  %13905 = load ptr, ptr @fun_Core_function_is0_11.1463, align 8
  call void @free_candy_value(ptr %13905)
  %13906 = load ptr, ptr @fun_Core_function_doNotRun.1465, align 8
  call void @free_candy_value(ptr %13906)
  %13907 = load ptr, ptr @fun_Core_function_is0_11.1467, align 8
  call void @free_candy_value(ptr %13907)
  %13908 = load ptr, ptr @fun_Core_controlFlow_recursive.1469, align 8
  call void @free_candy_value(ptr %13908)
  %13909 = load ptr, ptr @fun_Core_controlFlow_recursive_18.1471, align 8
  call void @free_candy_value(ptr %13909)
  %13910 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.1473, align 8
  call void @free_candy_value(ptr %13910)
  %13911 = load ptr, ptr @fun_Core_type_is.1475, align 8
  call void @free_candy_value(ptr %13911)
  %13912 = load ptr, ptr @fun_Core_int_is.1477, align 8
  call void @free_candy_value(ptr %13912)
  %13913 = load ptr, ptr @fun_Core_int_negate.1479, align 8
  call void @free_candy_value(ptr %13913)
  %13914 = load ptr, ptr @fun_Core_int_compareTo.1481, align 8
  call void @free_candy_value(ptr %13914)
  %13915 = load ptr, ptr @fun_Core_int_isLessThan.1483, align 8
  call void @free_candy_value(ptr %13915)
  %13916 = load ptr, ptr @fun_Core_int_isGreaterThan.1485, align 8
  call void @free_candy_value(ptr %13916)
  %13917 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo.1487, align 8
  call void @free_candy_value(ptr %13917)
  %13918 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo.1489, align 8
  call void @free_candy_value(ptr %13918)
  %13919 = load ptr, ptr @fun_Core_int_isPositive.1491, align 8
  call void @free_candy_value(ptr %13919)
  %13920 = load ptr, ptr @fun_Core_int_isNonPositive.1493, align 8
  call void @free_candy_value(ptr %13920)
  %13921 = load ptr, ptr @fun_Core_int_isNegative.1495, align 8
  call void @free_candy_value(ptr %13921)
  %13922 = load ptr, ptr @fun_Core_int_isNonNegative.1497, align 8
  call void @free_candy_value(ptr %13922)
  %13923 = load ptr, ptr @fun_Core_int_absolute.1499, align 8
  call void @free_candy_value(ptr %13923)
  %13924 = load ptr, ptr @fun_Core_int_absolute_9.1501, align 8
  call void @free_candy_value(ptr %13924)
  %13925 = load ptr, ptr @fun_Core_int_absolute_10.1503, align 8
  call void @free_candy_value(ptr %13925)
  %13926 = load ptr, ptr @fun_Core_int_fitsInRustU32.1505, align 8
  call void @free_candy_value(ptr %13926)
  %13927 = load ptr, ptr @fun_Core_int_fitsInRustU128.1507, align 8
  call void @free_candy_value(ptr %13927)
  %13928 = load ptr, ptr @fun_Core_int_isEven.1509, align 8
  call void @free_candy_value(ptr %13928)
  %13929 = load ptr, ptr @fun_Core_int_isOdd.1511, align 8
  call void @free_candy_value(ptr %13929)
  %13930 = load ptr, ptr @fun_Core_int_min.1513, align 8
  call void @free_candy_value(ptr %13930)
  %13931 = load ptr, ptr @fun_Core_int_min_15.1515, align 8
  call void @free_candy_value(ptr %13931)
  %13932 = load ptr, ptr @fun_Core_int_min_16.1517, align 8
  call void @free_candy_value(ptr %13932)
  %13933 = load ptr, ptr @fun_Core_int_max.1519, align 8
  call void @free_candy_value(ptr %13933)
  %13934 = load ptr, ptr @fun_Core_int_max_15.1521, align 8
  call void @free_candy_value(ptr %13934)
  %13935 = load ptr, ptr @fun_Core_int_max_16.1523, align 8
  call void @free_candy_value(ptr %13935)
  %13936 = load ptr, ptr @fun_Core_int_coerceAtLeast.1525, align 8
  call void @free_candy_value(ptr %13936)
  %13937 = load ptr, ptr @fun_Core_int_coerceAtMost.1527, align 8
  call void @free_candy_value(ptr %13937)
  %13938 = load ptr, ptr @fun_Core_int_coerceIn.1529, align 8
  call void @free_candy_value(ptr %13938)
  %13939 = load ptr, ptr @fun_Core_int_pow.1531, align 8
  call void @free_candy_value(ptr %13939)
  %13940 = load ptr, ptr @fun_Core_int_pow_21.1533, align 8
  call void @free_candy_value(ptr %13940)
  %13941 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then.1535, align 8
  call void @free_candy_value(ptr %13941)
  %13942 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.1537, align 8
  call void @free_candy_value(ptr %13942)
  %13943 = load ptr, ptr @171, align 8
  call void @free_candy_value(ptr %13943)
  %13944 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.1539, align 8
  call void @free_candy_value(ptr %13944)
  %13945 = load ptr, ptr @172, align 8
  call void @free_candy_value(ptr %13945)
  %13946 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.1541, align 8
  call void @free_candy_value(ptr %13946)
  %13947 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.1543, align 8
  call void @free_candy_value(ptr %13947)
  %13948 = load ptr, ptr @173, align 8
  call void @free_candy_value(ptr %13948)
  %13949 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.1545, align 8
  call void @free_candy_value(ptr %13949)
  %13950 = load ptr, ptr @174, align 8
  call void @free_candy_value(ptr %13950)
  %13951 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.1547, align 8
  call void @free_candy_value(ptr %13951)
  %13952 = load ptr, ptr @175, align 8
  call void @free_candy_value(ptr %13952)
  %13953 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1549, align 8
  call void @free_candy_value(ptr %13953)
  %13954 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1551, align 8
  call void @free_candy_value(ptr %13954)
  %13955 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else.1553, align 8
  call void @free_candy_value(ptr %13955)
  %13956 = load ptr, ptr @176, align 8
  call void @free_candy_value(ptr %13956)
  %13957 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1555, align 8
  call void @free_candy_value(ptr %13957)
  %13958 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else.1557, align 8
  call void @free_candy_value(ptr %13958)
  %13959 = load ptr, ptr @177, align 8
  call void @free_candy_value(ptr %13959)
  %13960 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.1559, align 8
  call void @free_candy_value(ptr %13960)
  %13961 = load ptr, ptr @fun_Core_int_pow_21_4_case-1_matched.1561, align 8
  call void @free_candy_value(ptr %13961)
  %13962 = load ptr, ptr @fun_Core_int_pow_21_4_5.1563, align 8
  call void @free_candy_value(ptr %13962)
  %13963 = load ptr, ptr @fun_Core_int_pow_21_4_6.1565, align 8
  call void @free_candy_value(ptr %13963)
  %13964 = load ptr, ptr @fun_Core_type_is.1567, align 8
  call void @free_candy_value(ptr %13964)
  %13965 = load ptr, ptr @fun_Core_function_is.1569, align 8
  call void @free_candy_value(ptr %13965)
  %13966 = load ptr, ptr @fun_Core_function_is0.1571, align 8
  call void @free_candy_value(ptr %13966)
  %13967 = load ptr, ptr @fun_Core_function_is0_11.1573, align 8
  call void @free_candy_value(ptr %13967)
  %13968 = load ptr, ptr @fun_Core_function_is1.1575, align 8
  call void @free_candy_value(ptr %13968)
  %13969 = load ptr, ptr @fun_Core_function_is1_11.1577, align 8
  call void @free_candy_value(ptr %13969)
  %13970 = load ptr, ptr @fun_Core_function_is2.1579, align 8
  call void @free_candy_value(ptr %13970)
  %13971 = load ptr, ptr @fun_Core_function_is2_11.1581, align 8
  call void @free_candy_value(ptr %13971)
  %13972 = load ptr, ptr @fun_Core_function_is3.1583, align 8
  call void @free_candy_value(ptr %13972)
  %13973 = load ptr, ptr @fun_Core_function_is3_11.1585, align 8
  call void @free_candy_value(ptr %13973)
  %13974 = load ptr, ptr @fun_Core_function_is4.1587, align 8
  call void @free_candy_value(ptr %13974)
  %13975 = load ptr, ptr @fun_Core_function_is4_11.1589, align 8
  call void @free_candy_value(ptr %13975)
  %13976 = load ptr, ptr @fun_Core_function_is5.1591, align 8
  call void @free_candy_value(ptr %13976)
  %13977 = load ptr, ptr @fun_Core_function_is5_11.1593, align 8
  call void @free_candy_value(ptr %13977)
  %13978 = load ptr, ptr @fun_Core_function_run.1595, align 8
  call void @free_candy_value(ptr %13978)
  %13979 = load ptr, ptr @fun_Core_function_is0_11.1597, align 8
  call void @free_candy_value(ptr %13979)
  %13980 = load ptr, ptr @fun_Core_function_doNotRun.1599, align 8
  call void @free_candy_value(ptr %13980)
  %13981 = load ptr, ptr @fun_Core_function_is0_11.1601, align 8
  call void @free_candy_value(ptr %13981)
  %13982 = load ptr, ptr @fun_Core_type_is.1603, align 8
  call void @free_candy_value(ptr %13982)
  %13983 = load ptr, ptr @fun_Core_function_is.1605, align 8
  call void @free_candy_value(ptr %13983)
  %13984 = load ptr, ptr @fun_Core_function_is0.1607, align 8
  call void @free_candy_value(ptr %13984)
  %13985 = load ptr, ptr @fun_Core_function_is0_11.1609, align 8
  call void @free_candy_value(ptr %13985)
  %13986 = load ptr, ptr @fun_Core_function_is1.1611, align 8
  call void @free_candy_value(ptr %13986)
  %13987 = load ptr, ptr @fun_Core_function_is1_11.1613, align 8
  call void @free_candy_value(ptr %13987)
  %13988 = load ptr, ptr @fun_Core_function_is2.1615, align 8
  call void @free_candy_value(ptr %13988)
  %13989 = load ptr, ptr @fun_Core_function_is2_11.1617, align 8
  call void @free_candy_value(ptr %13989)
  %13990 = load ptr, ptr @fun_Core_function_is3.1619, align 8
  call void @free_candy_value(ptr %13990)
  %13991 = load ptr, ptr @fun_Core_function_is3_11.1621, align 8
  call void @free_candy_value(ptr %13991)
  %13992 = load ptr, ptr @fun_Core_function_is4.1623, align 8
  call void @free_candy_value(ptr %13992)
  %13993 = load ptr, ptr @fun_Core_function_is4_11.1625, align 8
  call void @free_candy_value(ptr %13993)
  %13994 = load ptr, ptr @fun_Core_function_is5.1627, align 8
  call void @free_candy_value(ptr %13994)
  %13995 = load ptr, ptr @fun_Core_function_is5_11.1629, align 8
  call void @free_candy_value(ptr %13995)
  %13996 = load ptr, ptr @fun_Core_function_run.1631, align 8
  call void @free_candy_value(ptr %13996)
  %13997 = load ptr, ptr @fun_Core_function_is0_11.1633, align 8
  call void @free_candy_value(ptr %13997)
  %13998 = load ptr, ptr @fun_Core_function_doNotRun.1635, align 8
  call void @free_candy_value(ptr %13998)
  %13999 = load ptr, ptr @fun_Core_function_is0_11.1637, align 8
  call void @free_candy_value(ptr %13999)
  %14000 = load ptr, ptr @fun_Core_bool_lazyAnd.1639, align 8
  call void @free_candy_value(ptr %14000)
  %14001 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1641, align 8
  call void @free_candy_value(ptr %14001)
  %14002 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1643, align 8
  call void @free_candy_value(ptr %14002)
  %14003 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1645, align 8
  call void @free_candy_value(ptr %14003)
  %14004 = load ptr, ptr @178, align 8
  call void @free_candy_value(ptr %14004)
  %14005 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1647, align 8
  call void @free_candy_value(ptr %14005)
  %14006 = load ptr, ptr @179, align 8
  call void @free_candy_value(ptr %14006)
  %14007 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1649, align 8
  call void @free_candy_value(ptr %14007)
  %14008 = load ptr, ptr @180, align 8
  call void @free_candy_value(ptr %14008)
  %14009 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1651, align 8
  call void @free_candy_value(ptr %14009)
  %14010 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1653, align 8
  call void @free_candy_value(ptr %14010)
  %14011 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1655, align 8
  call void @free_candy_value(ptr %14011)
  %14012 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1657, align 8
  call void @free_candy_value(ptr %14012)
  %14013 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1659, align 8
  call void @free_candy_value(ptr %14013)
  %14014 = load ptr, ptr @181, align 8
  call void @free_candy_value(ptr %14014)
  %14015 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1661, align 8
  call void @free_candy_value(ptr %14015)
  %14016 = load ptr, ptr @182, align 8
  call void @free_candy_value(ptr %14016)
  %14017 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1663, align 8
  call void @free_candy_value(ptr %14017)
  %14018 = load ptr, ptr @183, align 8
  call void @free_candy_value(ptr %14018)
  %14019 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1665, align 8
  call void @free_candy_value(ptr %14019)
  %14020 = load ptr, ptr @fun_Core_bool_and.1667, align 8
  call void @free_candy_value(ptr %14020)
  %14021 = load ptr, ptr @fun_Core_bool_and_12.1669, align 8
  call void @free_candy_value(ptr %14021)
  %14022 = load ptr, ptr @fun_Core_bool_lazyOr.1671, align 8
  call void @free_candy_value(ptr %14022)
  %14023 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1673, align 8
  call void @free_candy_value(ptr %14023)
  %14024 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1675, align 8
  call void @free_candy_value(ptr %14024)
  %14025 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1677, align 8
  call void @free_candy_value(ptr %14025)
  %14026 = load ptr, ptr @184, align 8
  call void @free_candy_value(ptr %14026)
  %14027 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1679, align 8
  call void @free_candy_value(ptr %14027)
  %14028 = load ptr, ptr @185, align 8
  call void @free_candy_value(ptr %14028)
  %14029 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1681, align 8
  call void @free_candy_value(ptr %14029)
  %14030 = load ptr, ptr @186, align 8
  call void @free_candy_value(ptr %14030)
  %14031 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1683, align 8
  call void @free_candy_value(ptr %14031)
  %14032 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1685, align 8
  call void @free_candy_value(ptr %14032)
  %14033 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1687, align 8
  call void @free_candy_value(ptr %14033)
  %14034 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1689, align 8
  call void @free_candy_value(ptr %14034)
  %14035 = load ptr, ptr @187, align 8
  call void @free_candy_value(ptr %14035)
  %14036 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1691, align 8
  call void @free_candy_value(ptr %14036)
  %14037 = load ptr, ptr @188, align 8
  call void @free_candy_value(ptr %14037)
  %14038 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1693, align 8
  call void @free_candy_value(ptr %14038)
  %14039 = load ptr, ptr @189, align 8
  call void @free_candy_value(ptr %14039)
  %14040 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1695, align 8
  call void @free_candy_value(ptr %14040)
  %14041 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1697, align 8
  call void @free_candy_value(ptr %14041)
  %14042 = load ptr, ptr @fun_Core_bool_or.1699, align 8
  call void @free_candy_value(ptr %14042)
  %14043 = load ptr, ptr @fun_Core_bool_or_12.1701, align 8
  call void @free_candy_value(ptr %14043)
  %14044 = load ptr, ptr @fun_Core_bool_xor.1703, align 8
  call void @free_candy_value(ptr %14044)
  %14045 = load ptr, ptr @fun_Core_bool_implies.1705, align 8
  call void @free_candy_value(ptr %14045)
  %14046 = load ptr, ptr @fun_Core_bool_or_12.1707, align 8
  call void @free_candy_value(ptr %14046)
  %14047 = load ptr, ptr @fun_Core_type_is.1709, align 8
  call void @free_candy_value(ptr %14047)
  %14048 = load ptr, ptr @fun_Core_tag_is.1711, align 8
  call void @free_candy_value(ptr %14048)
  %14049 = load ptr, ptr @fun_Core_tag_withSymbol.1713, align 8
  call void @free_candy_value(ptr %14049)
  %14050 = load ptr, ptr @fun_Core_tag_withSymbol_28.1715, align 8
  call void @free_candy_value(ptr %14050)
  %14051 = load ptr, ptr @fun_Core_tag_withSymbol_29.1717, align 8
  call void @free_candy_value(ptr %14051)
  %14052 = load ptr, ptr @fun_Core_tag_withValue.1719, align 8
  call void @free_candy_value(ptr %14052)
  %14053 = load ptr, ptr @fun_Core_type_is.1721, align 8
  call void @free_candy_value(ptr %14053)
  %14054 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %14054)
  %14055 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %14055)
  %14056 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %14056)
  %14057 = load ptr, ptr @190, align 8
  call void @free_candy_value(ptr %14057)
  %14058 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %14058)
  %14059 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %14059)
  %14060 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %14060)
  %14061 = load ptr, ptr @"Core:result:is:1:_", align 8
  call void @free_candy_value(ptr %14061)
  %14062 = load ptr, ptr @fun_Core_result_is, align 8
  call void @free_candy_value(ptr %14062)
  %14063 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %14063)
  %14064 = load ptr, ptr @fun_Core_result_is_1_equals_then.1723, align 8
  call void @free_candy_value(ptr %14064)
  %14065 = load ptr, ptr @fun_Core_result_is_1_equals_then.1725, align 8
  call void @free_candy_value(ptr %14065)
  %14066 = load ptr, ptr @191, align 8
  call void @free_candy_value(ptr %14066)
  %14067 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %14067)
  %14068 = load ptr, ptr @fun_Core_result_is_1_equals_else.1727, align 8
  call void @free_candy_value(ptr %14068)
  %14069 = load ptr, ptr @192, align 8
  call void @free_candy_value(ptr %14069)
  %14070 = load ptr, ptr @fun_Core_result_is_1_equals_else.1729, align 8
  call void @free_candy_value(ptr %14070)
  %14071 = load ptr, ptr @193, align 8
  call void @free_candy_value(ptr %14071)
  %14072 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %14072)
  %14073 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %14073)
  %14074 = load ptr, ptr @fun_Core_result_is_1_equals_then.1731, align 8
  call void @free_candy_value(ptr %14074)
  %14075 = load ptr, ptr @fun_Core_result_is_1_equals_then.1733, align 8
  call void @free_candy_value(ptr %14075)
  %14076 = load ptr, ptr @fun_Core_result_is_1_equals_then.1735, align 8
  call void @free_candy_value(ptr %14076)
  %14077 = load ptr, ptr @194, align 8
  call void @free_candy_value(ptr %14077)
  %14078 = load ptr, ptr @fun_Core_result_is_1_equals_else.1737, align 8
  call void @free_candy_value(ptr %14078)
  %14079 = load ptr, ptr @fun_Core_result_is_1_equals_else.1739, align 8
  call void @free_candy_value(ptr %14079)
  %14080 = load ptr, ptr @195, align 8
  call void @free_candy_value(ptr %14080)
  %14081 = load ptr, ptr @fun_Core_result_is_1_equals_else.1741, align 8
  call void @free_candy_value(ptr %14081)
  %14082 = load ptr, ptr @196, align 8
  call void @free_candy_value(ptr %14082)
  %14083 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %14083)
  %14084 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %14084)
  %14085 = load ptr, ptr @"Core:result:getValue:2", align 8
  call void @free_candy_value(ptr %14085)
  %14086 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %14086)
  %14087 = load ptr, ptr @"Core:result:getValue:4", align 8
  call void @free_candy_value(ptr %14087)
  %14088 = load ptr, ptr @"Core:result:getValue:13", align 8
  call void @free_candy_value(ptr %14088)
  %14089 = load ptr, ptr @"Core:result:getValue:14", align 8
  call void @free_candy_value(ptr %14089)
  %14090 = load ptr, ptr @fun_Core_result_getValue, align 8
  call void @free_candy_value(ptr %14090)
  %14091 = load ptr, ptr @"Core:result:isOk:2", align 8
  call void @free_candy_value(ptr %14091)
  %14092 = load ptr, ptr @"Core:result:isOk:4", align 8
  call void @free_candy_value(ptr %14092)
  %14093 = load ptr, ptr @"Core:result:isOk:13", align 8
  call void @free_candy_value(ptr %14093)
  %14094 = load ptr, ptr @"Core:result:isOk:14", align 8
  call void @free_candy_value(ptr %14094)
  %14095 = load ptr, ptr @"Core:result:isOk:17", align 8
  call void @free_candy_value(ptr %14095)
  %14096 = load ptr, ptr @fun_Core_result_isOk, align 8
  call void @free_candy_value(ptr %14096)
  %14097 = load ptr, ptr @"Core:result:unwrap:2", align 8
  call void @free_candy_value(ptr %14097)
  %14098 = load ptr, ptr @"Core:result:unwrap:4", align 8
  call void @free_candy_value(ptr %14098)
  %14099 = load ptr, ptr @"Core:result:unwrap:7", align 8
  call void @free_candy_value(ptr %14099)
  %14100 = load ptr, ptr @"text_`isOk result` was not satisfied", align 8
  call void @free_candy_value(ptr %14100)
  %14101 = load ptr, ptr @"Core:result:unwrap:9", align 8
  call void @free_candy_value(ptr %14101)
  %14102 = load ptr, ptr @"Core:result:unwrap:12", align 8
  call void @free_candy_value(ptr %14102)
  %14103 = load ptr, ptr @fun_Core_result_unwrap, align 8
  call void @free_candy_value(ptr %14103)
  %14104 = load ptr, ptr @"Core:result:expect:2", align 8
  call void @free_candy_value(ptr %14104)
  %14105 = load ptr, ptr @"Core:result:expect:4", align 8
  call void @free_candy_value(ptr %14105)
  %14106 = load ptr, ptr @"Core:result:expect:12", align 8
  call void @free_candy_value(ptr %14106)
  %14107 = load ptr, ptr @"Core:result:expect:15", align 8
  call void @free_candy_value(ptr %14107)
  %14108 = load ptr, ptr @"text_`type.is message Text` was not satisfied", align 8
  call void @free_candy_value(ptr %14108)
  %14109 = load ptr, ptr @"Core:result:expect:17", align 8
  call void @free_candy_value(ptr %14109)
  %14110 = load ptr, ptr @"Core:result:expect:20", align 8
  call void @free_candy_value(ptr %14110)
  %14111 = load ptr, ptr @"Core:result:expect:22", align 8
  call void @free_candy_value(ptr %14111)
  %14112 = load ptr, ptr @"Core:result:expect:25", align 8
  call void @free_candy_value(ptr %14112)
  %14113 = load ptr, ptr @fun_Core_result_expect, align 8
  call void @free_candy_value(ptr %14113)
  %14114 = load ptr, ptr @"Core:result:isError:2", align 8
  call void @free_candy_value(ptr %14114)
  %14115 = load ptr, ptr @"Core:result:isError:4", align 8
  call void @free_candy_value(ptr %14115)
  %14116 = load ptr, ptr @"Core:result:isError:13", align 8
  call void @free_candy_value(ptr %14116)
  %14117 = load ptr, ptr @"Core:result:isError:14", align 8
  call void @free_candy_value(ptr %14117)
  %14118 = load ptr, ptr @"Core:result:isError:17", align 8
  call void @free_candy_value(ptr %14118)
  %14119 = load ptr, ptr @fun_Core_result_isError, align 8
  call void @free_candy_value(ptr %14119)
  %14120 = load ptr, ptr @"Core:result:unwrapError:2", align 8
  call void @free_candy_value(ptr %14120)
  %14121 = load ptr, ptr @"Core:result:unwrapError:4", align 8
  call void @free_candy_value(ptr %14121)
  %14122 = load ptr, ptr @"Core:result:unwrapError:7", align 8
  call void @free_candy_value(ptr %14122)
  %14123 = load ptr, ptr @"text_`isError result` was not satisfied", align 8
  call void @free_candy_value(ptr %14123)
  %14124 = load ptr, ptr @"Core:result:unwrapError:9", align 8
  call void @free_candy_value(ptr %14124)
  %14125 = load ptr, ptr @"Core:result:unwrapError:12", align 8
  call void @free_candy_value(ptr %14125)
  %14126 = load ptr, ptr @fun_Core_result_unwrapError, align 8
  call void @free_candy_value(ptr %14126)
  %14127 = load ptr, ptr @"Core:result:expectError:2", align 8
  call void @free_candy_value(ptr %14127)
  %14128 = load ptr, ptr @"Core:result:expectError:4", align 8
  call void @free_candy_value(ptr %14128)
  %14129 = load ptr, ptr @"Core:result:expectError:12", align 8
  call void @free_candy_value(ptr %14129)
  %14130 = load ptr, ptr @"Core:result:expectError:15", align 8
  call void @free_candy_value(ptr %14130)
  %14131 = load ptr, ptr @"Core:result:expectError:17", align 8
  call void @free_candy_value(ptr %14131)
  %14132 = load ptr, ptr @"Core:result:expectError:20", align 8
  call void @free_candy_value(ptr %14132)
  %14133 = load ptr, ptr @"Core:result:expectError:22", align 8
  call void @free_candy_value(ptr %14133)
  %14134 = load ptr, ptr @"Core:result:expectError:25", align 8
  call void @free_candy_value(ptr %14134)
  %14135 = load ptr, ptr @fun_Core_result_expectError, align 8
  call void @free_candy_value(ptr %14135)
  %14136 = load ptr, ptr @"Core:result:mapOrElse:2", align 8
  call void @free_candy_value(ptr %14136)
  %14137 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %14137)
  %14138 = load ptr, ptr @"Core:result:mapOrElse:12", align 8
  call void @free_candy_value(ptr %14138)
  %14139 = load ptr, ptr @"Core:result:mapOrElse:14", align 8
  call void @free_candy_value(ptr %14139)
  %14140 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %14140)
  %14141 = load ptr, ptr @"Core:result:mapOrElse:16", align 8
  call void @free_candy_value(ptr %14141)
  %14142 = load ptr, ptr @"Core:result:mapOrElse:24", align 8
  call void @free_candy_value(ptr %14142)
  %14143 = load ptr, ptr @"Core:result:mapOrElse:26", align 8
  call void @free_candy_value(ptr %14143)
  %14144 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %14144)
  %14145 = load ptr, ptr @"Core:result:mapOrElse:28", align 8
  call void @free_candy_value(ptr %14145)
  %14146 = load ptr, ptr @"Core:result:mapOrElse:30", align 8
  call void @free_candy_value(ptr %14146)
  %14147 = load ptr, ptr @"Core:result:mapOrElse:30:value", align 8
  call void @free_candy_value(ptr %14147)
  %14148 = load ptr, ptr @"Core:result:mapOrElse:30:2", align 8
  call void @free_candy_value(ptr %14148)
  %14149 = load ptr, ptr @"Core:result:mapOrElse:30:value#1", align 8
  call void @free_candy_value(ptr %14149)
  %14150 = load ptr, ptr @"Core:result:mapOrElse:30:5", align 8
  call void @free_candy_value(ptr %14150)
  %14151 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %14151)
  %14152 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  call void @free_candy_value(ptr %14152)
  %14153 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1743, align 8
  call void @free_candy_value(ptr %14153)
  %14154 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1745, align 8
  call void @free_candy_value(ptr %14154)
  %14155 = load ptr, ptr @197, align 8
  call void @free_candy_value(ptr %14155)
  %14156 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  call void @free_candy_value(ptr %14156)
  %14157 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1747, align 8
  call void @free_candy_value(ptr %14157)
  %14158 = load ptr, ptr @198, align 8
  call void @free_candy_value(ptr %14158)
  %14159 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1749, align 8
  call void @free_candy_value(ptr %14159)
  %14160 = load ptr, ptr @199, align 8
  call void @free_candy_value(ptr %14160)
  %14161 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  call void @free_candy_value(ptr %14161)
  %14162 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %14162)
  %14163 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1751, align 8
  call void @free_candy_value(ptr %14163)
  %14164 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1753, align 8
  call void @free_candy_value(ptr %14164)
  %14165 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1755, align 8
  call void @free_candy_value(ptr %14165)
  %14166 = load ptr, ptr @200, align 8
  call void @free_candy_value(ptr %14166)
  %14167 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1757, align 8
  call void @free_candy_value(ptr %14167)
  %14168 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1759, align 8
  call void @free_candy_value(ptr %14168)
  %14169 = load ptr, ptr @201, align 8
  call void @free_candy_value(ptr %14169)
  %14170 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1761, align 8
  call void @free_candy_value(ptr %14170)
  %14171 = load ptr, ptr @202, align 8
  call void @free_candy_value(ptr %14171)
  %14172 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  call void @free_candy_value(ptr %14172)
  %14173 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %14173)
  %14174 = load ptr, ptr @"Core:result:mapOr:2", align 8
  call void @free_candy_value(ptr %14174)
  %14175 = load ptr, ptr @"Core:result:mapOr:4", align 8
  call void @free_candy_value(ptr %14175)
  %14176 = load ptr, ptr @"Core:result:mapOr:12", align 8
  call void @free_candy_value(ptr %14176)
  %14177 = load ptr, ptr @"Core:result:mapOr:14", align 8
  call void @free_candy_value(ptr %14177)
  %14178 = load ptr, ptr @"Core:result:mapOr:16", align 8
  call void @free_candy_value(ptr %14178)
  %14179 = load ptr, ptr @"Core:result:mapOr:21", align 8
  call void @free_candy_value(ptr %14179)
  %14180 = load ptr, ptr @fun_Core_result_mapOr, align 8
  call void @free_candy_value(ptr %14180)
  %14181 = load ptr, ptr @fun_Core_result_mapOr_20, align 8
  call void @free_candy_value(ptr %14181)
  %14182 = load ptr, ptr @"Core:result:flatMap:2", align 8
  call void @free_candy_value(ptr %14182)
  %14183 = load ptr, ptr @"Core:result:flatMap:4", align 8
  call void @free_candy_value(ptr %14183)
  %14184 = load ptr, ptr @"Core:result:flatMap:12", align 8
  call void @free_candy_value(ptr %14184)
  %14185 = load ptr, ptr @"Core:result:flatMap:14", align 8
  call void @free_candy_value(ptr %14185)
  %14186 = load ptr, ptr @"Core:result:flatMap:16", align 8
  call void @free_candy_value(ptr %14186)
  %14187 = load ptr, ptr @"Core:result:flatMap:19:2", align 8
  call void @free_candy_value(ptr %14187)
  %14188 = load ptr, ptr @"Core:result:flatMap:21", align 8
  call void @free_candy_value(ptr %14188)
  %14189 = load ptr, ptr @fun_Core_result_flatMap, align 8
  call void @free_candy_value(ptr %14189)
  %14190 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  call void @free_candy_value(ptr %14190)
  %14191 = load ptr, ptr @"Core:result:map:2", align 8
  call void @free_candy_value(ptr %14191)
  %14192 = load ptr, ptr @"Core:result:map:4", align 8
  call void @free_candy_value(ptr %14192)
  %14193 = load ptr, ptr @"Core:result:map:12", align 8
  call void @free_candy_value(ptr %14193)
  %14194 = load ptr, ptr @"Core:result:map:14", align 8
  call void @free_candy_value(ptr %14194)
  %14195 = load ptr, ptr @"Core:result:map:16", align 8
  call void @free_candy_value(ptr %14195)
  %14196 = load ptr, ptr @"Core:result:map:19:3", align 8
  call void @free_candy_value(ptr %14196)
  %14197 = load ptr, ptr @"Core:result:map:20", align 8
  call void @free_candy_value(ptr %14197)
  %14198 = load ptr, ptr @fun_Core_result_map, align 8
  call void @free_candy_value(ptr %14198)
  %14199 = load ptr, ptr @fun_Core_result_map_19, align 8
  call void @free_candy_value(ptr %14199)
  %14200 = load ptr, ptr @tag_Ok.1762, align 8
  call void @free_candy_value(ptr %14200)
  %14201 = load ptr, ptr @"Core:result:and:2", align 8
  call void @free_candy_value(ptr %14201)
  %14202 = load ptr, ptr @"text_`is resultA` was not satisfied", align 8
  call void @free_candy_value(ptr %14202)
  %14203 = load ptr, ptr @"Core:result:and:4", align 8
  call void @free_candy_value(ptr %14203)
  %14204 = load ptr, ptr @"Core:result:and:7", align 8
  call void @free_candy_value(ptr %14204)
  %14205 = load ptr, ptr @"text_`is resultB` was not satisfied", align 8
  call void @free_candy_value(ptr %14205)
  %14206 = load ptr, ptr @"Core:result:and:9", align 8
  call void @free_candy_value(ptr %14206)
  %14207 = load ptr, ptr @"Core:result:and:13", align 8
  call void @free_candy_value(ptr %14207)
  %14208 = load ptr, ptr @fun_Core_result_and, align 8
  call void @free_candy_value(ptr %14208)
  %14209 = load ptr, ptr @fun_Core_result_and_12, align 8
  call void @free_candy_value(ptr %14209)
  %14210 = load ptr, ptr @"Core:result:flatMapError:2", align 8
  call void @free_candy_value(ptr %14210)
  %14211 = load ptr, ptr @"Core:result:flatMapError:4", align 8
  call void @free_candy_value(ptr %14211)
  %14212 = load ptr, ptr @"Core:result:flatMapError:12", align 8
  call void @free_candy_value(ptr %14212)
  %14213 = load ptr, ptr @"Core:result:flatMapError:14", align 8
  call void @free_candy_value(ptr %14213)
  %14214 = load ptr, ptr @"Core:result:flatMapError:16", align 8
  call void @free_candy_value(ptr %14214)
  %14215 = load ptr, ptr @"Core:result:flatMapError:20:2", align 8
  call void @free_candy_value(ptr %14215)
  %14216 = load ptr, ptr @"Core:result:flatMapError:21", align 8
  call void @free_candy_value(ptr %14216)
  %14217 = load ptr, ptr @fun_Core_result_flatMapError, align 8
  call void @free_candy_value(ptr %14217)
  %14218 = load ptr, ptr @fun_Core_result_flatMapError_19, align 8
  call void @free_candy_value(ptr %14218)
  %14219 = load ptr, ptr @fun_Core_result_flatMapError_20, align 8
  call void @free_candy_value(ptr %14219)
  %14220 = load ptr, ptr @"Core:result:mapError:2", align 8
  call void @free_candy_value(ptr %14220)
  %14221 = load ptr, ptr @"Core:result:mapError:4", align 8
  call void @free_candy_value(ptr %14221)
  %14222 = load ptr, ptr @"Core:result:mapError:12", align 8
  call void @free_candy_value(ptr %14222)
  %14223 = load ptr, ptr @"Core:result:mapError:14", align 8
  call void @free_candy_value(ptr %14223)
  %14224 = load ptr, ptr @"Core:result:mapError:16", align 8
  call void @free_candy_value(ptr %14224)
  %14225 = load ptr, ptr @"Core:result:mapError:19:3", align 8
  call void @free_candy_value(ptr %14225)
  %14226 = load ptr, ptr @"Core:result:mapError:20", align 8
  call void @free_candy_value(ptr %14226)
  %14227 = load ptr, ptr @fun_Core_result_mapError, align 8
  call void @free_candy_value(ptr %14227)
  %14228 = load ptr, ptr @fun_Core_result_mapError_19, align 8
  call void @free_candy_value(ptr %14228)
  %14229 = load ptr, ptr @tag_Error.1763, align 8
  call void @free_candy_value(ptr %14229)
  %14230 = load ptr, ptr @"Core:result:or:2", align 8
  call void @free_candy_value(ptr %14230)
  %14231 = load ptr, ptr @"Core:result:or:4", align 8
  call void @free_candy_value(ptr %14231)
  %14232 = load ptr, ptr @"Core:result:or:7", align 8
  call void @free_candy_value(ptr %14232)
  %14233 = load ptr, ptr @"Core:result:or:9", align 8
  call void @free_candy_value(ptr %14233)
  %14234 = load ptr, ptr @"Core:result:or:13", align 8
  call void @free_candy_value(ptr %14234)
  %14235 = load ptr, ptr @fun_Core_result_or, align 8
  call void @free_candy_value(ptr %14235)
  %14236 = load ptr, ptr @fun_Core_result_or_12, align 8
  call void @free_candy_value(ptr %14236)
  %14237 = load ptr, ptr @"Core:result:unwrapOrElse:2", align 8
  call void @free_candy_value(ptr %14237)
  %14238 = load ptr, ptr @"Core:result:unwrapOrElse:4", align 8
  call void @free_candy_value(ptr %14238)
  %14239 = load ptr, ptr @"Core:result:unwrapOrElse:12", align 8
  call void @free_candy_value(ptr %14239)
  %14240 = load ptr, ptr @"Core:result:unwrapOrElse:14", align 8
  call void @free_candy_value(ptr %14240)
  %14241 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %14241)
  %14242 = load ptr, ptr @"Core:result:unwrapOrElse:16", align 8
  call void @free_candy_value(ptr %14242)
  %14243 = load ptr, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_19", align 8
  call void @free_candy_value(ptr %14243)
  %14244 = load ptr, ptr @"Core:result:unwrapOrElse:20:7", align 8
  call void @free_candy_value(ptr %14244)
  %14245 = load ptr, ptr @"Core:result:unwrapOrElse:20:9", align 8
  call void @free_candy_value(ptr %14245)
  %14246 = load ptr, ptr @"Core:result:unwrapOrElse:21", align 8
  call void @free_candy_value(ptr %14246)
  %14247 = load ptr, ptr @fun_Core_result_unwrapOrElse, align 8
  call void @free_candy_value(ptr %14247)
  %14248 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  call void @free_candy_value(ptr %14248)
  %14249 = load ptr, ptr @"Core:result:unwrapOr:2", align 8
  call void @free_candy_value(ptr %14249)
  %14250 = load ptr, ptr @"Core:result:unwrapOr:4", align 8
  call void @free_candy_value(ptr %14250)
  %14251 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  call void @free_candy_value(ptr %14251)
  %14252 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  call void @free_candy_value(ptr %14252)
  %14253 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  call void @free_candy_value(ptr %14253)
  %14254 = load ptr, ptr @"Core:result:flatten:2", align 8
  call void @free_candy_value(ptr %14254)
  %14255 = load ptr, ptr @"text_`is resultOfResult` was not satisfied", align 8
  call void @free_candy_value(ptr %14255)
  %14256 = load ptr, ptr @"Core:result:flatten:4", align 8
  call void @free_candy_value(ptr %14256)
  %14257 = load ptr, ptr @"Core:result:flatten:7:2", align 8
  call void @free_candy_value(ptr %14257)
  %14258 = load ptr, ptr @"text_`is innerResult` was not satisfied", align 8
  call void @free_candy_value(ptr %14258)
  %14259 = load ptr, ptr @"Core:result:flatten:7:4", align 8
  call void @free_candy_value(ptr %14259)
  %14260 = load ptr, ptr @"Core:result:flatten:8", align 8
  call void @free_candy_value(ptr %14260)
  %14261 = load ptr, ptr @fun_Core_result_flatten, align 8
  call void @free_candy_value(ptr %14261)
  %14262 = load ptr, ptr @fun_Core_result_flatten_7, align 8
  call void @free_candy_value(ptr %14262)
  %14263 = load ptr, ptr @tag_UnwrapOr, align 8
  call void @free_candy_value(ptr %14263)
  %14264 = load ptr, ptr @tag_Expect, align 8
  call void @free_candy_value(ptr %14264)
  %14265 = load ptr, ptr @tag_Flatten, align 8
  call void @free_candy_value(ptr %14265)
  %14266 = load ptr, ptr @tag_MapOrElse, align 8
  call void @free_candy_value(ptr %14266)
  %14267 = load ptr, ptr @tag_Map, align 8
  call void @free_candy_value(ptr %14267)
  %14268 = load ptr, ptr @tag_IsError, align 8
  call void @free_candy_value(ptr %14268)
  %14269 = load ptr, ptr @tag_FlatMap, align 8
  call void @free_candy_value(ptr %14269)
  %14270 = load ptr, ptr @tag_ExpectError, align 8
  call void @free_candy_value(ptr %14270)
  %14271 = load ptr, ptr @tag_UnwrapError, align 8
  call void @free_candy_value(ptr %14271)
  %14272 = load ptr, ptr @tag_UnwrapOrElse, align 8
  call void @free_candy_value(ptr %14272)
  %14273 = load ptr, ptr @tag_Unwrap, align 8
  call void @free_candy_value(ptr %14273)
  %14274 = load ptr, ptr @tag_MapOr, align 8
  call void @free_candy_value(ptr %14274)
  %14275 = load ptr, ptr @tag_FlatMapError, align 8
  call void @free_candy_value(ptr %14275)
  %14276 = load ptr, ptr @tag_MapError, align 8
  call void @free_candy_value(ptr %14276)
  %14277 = load ptr, ptr @tag_IsOk, align 8
  call void @free_candy_value(ptr %14277)
  %14278 = load ptr, ptr @fun_Core_type_is.1765, align 8
  call void @free_candy_value(ptr %14278)
  %14279 = load ptr, ptr @"Core:list:is:7", align 8
  call void @free_candy_value(ptr %14279)
  %14280 = load ptr, ptr @"Core:list:is:10", align 8
  call void @free_candy_value(ptr %14280)
  %14281 = load ptr, ptr @fun_Core_list_is, align 8
  call void @free_candy_value(ptr %14281)
  %14282 = load ptr, ptr @"Core:list:89", align 8
  call void @free_candy_value(ptr %14282)
  %14283 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  call void @free_candy_value(ptr %14283)
  %14284 = load ptr, ptr @"Core:list:isEmpty:4", align 8
  call void @free_candy_value(ptr %14284)
  %14285 = load ptr, ptr @"Core:list:isEmpty:8", align 8
  call void @free_candy_value(ptr %14285)
  %14286 = load ptr, ptr @"Core:list:isEmpty:10", align 8
  call void @free_candy_value(ptr %14286)
  %14287 = load ptr, ptr @fun_Core_list_isEmpty, align 8
  call void @free_candy_value(ptr %14287)
  %14288 = load ptr, ptr @"Core:list:lastIndex:4", align 8
  call void @free_candy_value(ptr %14288)
  %14289 = load ptr, ptr @"Core:list:lastIndex:8", align 8
  call void @free_candy_value(ptr %14289)
  %14290 = load ptr, ptr @"text_Can't get the last index of an empty list.", align 8
  call void @free_candy_value(ptr %14290)
  %14291 = load ptr, ptr @tag_Error.1766, align 8
  call void @free_candy_value(ptr %14291)
  %14292 = load ptr, ptr @fun_Core_list_lastIndex_9, align 8
  call void @free_candy_value(ptr %14292)
  %14293 = load ptr, ptr @"Core:list:lastIndex:10:3", align 8
  call void @free_candy_value(ptr %14293)
  %14294 = load ptr, ptr @"Core:list:lastIndex:10:11", align 8
  call void @free_candy_value(ptr %14294)
  %14295 = load ptr, ptr @"Core:list:lastIndex:10:13", align 8
  call void @free_candy_value(ptr %14295)
  %14296 = load ptr, ptr @"Core:list:lastIndex:11", align 8
  call void @free_candy_value(ptr %14296)
  %14297 = load ptr, ptr @fun_Core_list_lastIndex, align 8
  call void @free_candy_value(ptr %14297)
  %14298 = load ptr, ptr @fun_Core_list_lastIndex_10, align 8
  call void @free_candy_value(ptr %14298)
  %14299 = load ptr, ptr @tag_Ok.1767, align 8
  call void @free_candy_value(ptr %14299)
  %14300 = load ptr, ptr @"Core:list:isValidIndex:4", align 8
  call void @free_candy_value(ptr %14300)
  %14301 = load ptr, ptr @"Core:list:isValidIndex:12", align 8
  call void @free_candy_value(ptr %14301)
  %14302 = load ptr, ptr @"Core:list:isValidIndex:14", align 8
  call void @free_candy_value(ptr %14302)
  %14303 = load ptr, ptr @"text_`int.is index` was not satisfied", align 8
  call void @free_candy_value(ptr %14303)
  %14304 = load ptr, ptr @"Core:list:isValidIndex:16", align 8
  call void @free_candy_value(ptr %14304)
  %14305 = load ptr, ptr @"Core:list:isValidIndex:20", align 8
  call void @free_candy_value(ptr %14305)
  %14306 = load ptr, ptr @"Core:list:isValidIndex:22:8", align 8
  call void @free_candy_value(ptr %14306)
  %14307 = load ptr, ptr @"Core:list:isValidIndex:22:9", align 8
  call void @free_candy_value(ptr %14307)
  %14308 = load ptr, ptr @"Core:list:isValidIndex:23", align 8
  call void @free_candy_value(ptr %14308)
  %14309 = load ptr, ptr @"Core:list:isValidIndex:31", align 8
  call void @free_candy_value(ptr %14309)
  %14310 = load ptr, ptr @"Core:list:isValidIndex:32:8", align 8
  call void @free_candy_value(ptr %14310)
  %14311 = load ptr, ptr @"Core:list:isValidIndex:32:11", align 8
  call void @free_candy_value(ptr %14311)
  %14312 = load ptr, ptr @"Core:list:isValidIndex:32:19", align 8
  call void @free_candy_value(ptr %14312)
  %14313 = load ptr, ptr @"Core:list:isValidIndex:32:20", align 8
  call void @free_candy_value(ptr %14313)
  %14314 = load ptr, ptr @"Core:list:isValidIndex:32:21", align 8
  call void @free_candy_value(ptr %14314)
  %14315 = load ptr, ptr @"Core:list:isValidIndex:33", align 8
  call void @free_candy_value(ptr %14315)
  %14316 = load ptr, ptr @fun_Core_list_isValidIndex, align 8
  call void @free_candy_value(ptr %14316)
  %14317 = load ptr, ptr @fun_Core_list_isValidIndex_22, align 8
  call void @free_candy_value(ptr %14317)
  %14318 = load ptr, ptr @fun_Core_list_isValidIndex_32, align 8
  call void @free_candy_value(ptr %14318)
  %14319 = load ptr, ptr @"Core:list:isValidInsertIndex:4", align 8
  call void @free_candy_value(ptr %14319)
  %14320 = load ptr, ptr @"Core:list:isValidInsertIndex:12", align 8
  call void @free_candy_value(ptr %14320)
  %14321 = load ptr, ptr @"Core:list:isValidInsertIndex:14", align 8
  call void @free_candy_value(ptr %14321)
  %14322 = load ptr, ptr @"Core:list:isValidInsertIndex:16", align 8
  call void @free_candy_value(ptr %14322)
  %14323 = load ptr, ptr @"Core:list:isValidInsertIndex:20", align 8
  call void @free_candy_value(ptr %14323)
  %14324 = load ptr, ptr @"Core:list:isValidInsertIndex:22:8", align 8
  call void @free_candy_value(ptr %14324)
  %14325 = load ptr, ptr @"Core:list:isValidInsertIndex:22:9", align 8
  call void @free_candy_value(ptr %14325)
  %14326 = load ptr, ptr @"Core:list:isValidInsertIndex:23", align 8
  call void @free_candy_value(ptr %14326)
  %14327 = load ptr, ptr @"Core:list:isValidInsertIndex:31", align 8
  call void @free_candy_value(ptr %14327)
  %14328 = load ptr, ptr @"Core:list:isValidInsertIndex:32:8", align 8
  call void @free_candy_value(ptr %14328)
  %14329 = load ptr, ptr @"Core:list:isValidInsertIndex:32:11", align 8
  call void @free_candy_value(ptr %14329)
  %14330 = load ptr, ptr @"Core:list:isValidInsertIndex:32:12", align 8
  call void @free_candy_value(ptr %14330)
  %14331 = load ptr, ptr @"Core:list:isValidInsertIndex:33", align 8
  call void @free_candy_value(ptr %14331)
  %14332 = load ptr, ptr @fun_Core_list_isValidInsertIndex, align 8
  call void @free_candy_value(ptr %14332)
  %14333 = load ptr, ptr @fun_Core_list_isValidInsertIndex_22, align 8
  call void @free_candy_value(ptr %14333)
  %14334 = load ptr, ptr @fun_Core_list_isValidInsertIndex_32, align 8
  call void @free_candy_value(ptr %14334)
  %14335 = load ptr, ptr @"Core:list:98", align 8
  call void @free_candy_value(ptr %14335)
  %14336 = load ptr, ptr @"Core:list:single:4", align 8
  call void @free_candy_value(ptr %14336)
  %14337 = load ptr, ptr @"Core:list:single:6", align 8
  call void @free_candy_value(ptr %14337)
  %14338 = load ptr, ptr @"text_Expected 0 items, got ", align 8
  call void @free_candy_value(ptr %14338)
  %14339 = load ptr, ptr @"text_Expected a List, got `", align 8
  call void @free_candy_value(ptr %14339)
  %14340 = load ptr, ptr @"text_Can't get the single item of an empty list.", align 8
  call void @free_candy_value(ptr %14340)
  %14341 = load ptr, ptr @tag_Error.1768, align 8
  call void @free_candy_value(ptr %14341)
  %14342 = load ptr, ptr @fun_Core_list_single_6_case-0_matched, align 8
  call void @free_candy_value(ptr %14342)
  %14343 = load ptr, ptr @"text_Expected 1 item, got ", align 8
  call void @free_candy_value(ptr %14343)
  %14344 = load ptr, ptr @"Core:list:single:6:item", align 8
  call void @free_candy_value(ptr %14344)
  %14345 = load ptr, ptr @"text_Can't get the single item of a list with more than one item.", align 8
  call void @free_candy_value(ptr %14345)
  %14346 = load ptr, ptr @tag_Error.1769, align 8
  call void @free_candy_value(ptr %14346)
  %14347 = load ptr, ptr @fun_Core_list_single, align 8
  call void @free_candy_value(ptr %14347)
  %14348 = load ptr, ptr @fun_Core_list_single_6_equals_then, align 8
  call void @free_candy_value(ptr %14348)
  %14349 = load ptr, ptr @fun_Core_list_single_6_equals_else, align 8
  call void @free_candy_value(ptr %14349)
  %14350 = load ptr, ptr @203, align 8
  call void @free_candy_value(ptr %14350)
  %14351 = load ptr, ptr @fun_Core_list_single_6_equals_else.1771, align 8
  call void @free_candy_value(ptr %14351)
  %14352 = load ptr, ptr @204, align 8
  call void @free_candy_value(ptr %14352)
  %14353 = load ptr, ptr @fun_Core_list_single_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %14353)
  %14354 = load ptr, ptr @fun_Core_list_single_6_equals_then.1773, align 8
  call void @free_candy_value(ptr %14354)
  %14355 = load ptr, ptr @fun_Core_list_single_6_equals_then.1775, align 8
  call void @free_candy_value(ptr %14355)
  %14356 = load ptr, ptr @205, align 8
  call void @free_candy_value(ptr %14356)
  %14357 = load ptr, ptr @fun_Core_list_single_6_equals_else.1777, align 8
  call void @free_candy_value(ptr %14357)
  %14358 = load ptr, ptr @206, align 8
  call void @free_candy_value(ptr %14358)
  %14359 = load ptr, ptr @fun_Core_list_single_6_equals_else.1779, align 8
  call void @free_candy_value(ptr %14359)
  %14360 = load ptr, ptr @207, align 8
  call void @free_candy_value(ptr %14360)
  %14361 = load ptr, ptr @fun_Core_list_single_6_case-1_matched, align 8
  call void @free_candy_value(ptr %14361)
  %14362 = load ptr, ptr @tag_Ok.1780, align 8
  call void @free_candy_value(ptr %14362)
  %14363 = load ptr, ptr @fun_Core_list_single_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %14363)
  %14364 = load ptr, ptr @"Core:list:first:4", align 8
  call void @free_candy_value(ptr %14364)
  %14365 = load ptr, ptr @"Core:list:first:6", align 8
  call void @free_candy_value(ptr %14365)
  %14366 = load ptr, ptr @"text_Can't get the first item of an empty list.", align 8
  call void @free_candy_value(ptr %14366)
  %14367 = load ptr, ptr @tag_Error.1781, align 8
  call void @free_candy_value(ptr %14367)
  %14368 = load ptr, ptr @fun_Core_list_first_6_case-0_matched, align 8
  call void @free_candy_value(ptr %14368)
  %14369 = load ptr, ptr @"Core:list:first:6:13", align 8
  call void @free_candy_value(ptr %14369)
  %14370 = load ptr, ptr @fun_Core_list_first, align 8
  call void @free_candy_value(ptr %14370)
  %14371 = load ptr, ptr @fun_Core_list_first_6_equals_then, align 8
  call void @free_candy_value(ptr %14371)
  %14372 = load ptr, ptr @fun_Core_list_first_6_equals_else, align 8
  call void @free_candy_value(ptr %14372)
  %14373 = load ptr, ptr @208, align 8
  call void @free_candy_value(ptr %14373)
  %14374 = load ptr, ptr @fun_Core_list_first_6_equals_else.1783, align 8
  call void @free_candy_value(ptr %14374)
  %14375 = load ptr, ptr @209, align 8
  call void @free_candy_value(ptr %14375)
  %14376 = load ptr, ptr @fun_Core_list_first_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %14376)
  %14377 = load ptr, ptr @tag_Ok.1784, align 8
  call void @free_candy_value(ptr %14377)
  %14378 = load ptr, ptr @"Core:list:last:4", align 8
  call void @free_candy_value(ptr %14378)
  %14379 = load ptr, ptr @"Core:list:last:7", align 8
  call void @free_candy_value(ptr %14379)
  %14380 = load ptr, ptr @"Core:list:last:15", align 8
  call void @free_candy_value(ptr %14380)
  %14381 = load ptr, ptr @"text_Can't get the last item of an empty list.", align 8
  call void @free_candy_value(ptr %14381)
  %14382 = load ptr, ptr @fun_Core_list_last_16, align 8
  call void @free_candy_value(ptr %14382)
  %14383 = load ptr, ptr @"Core:list:last:17", align 8
  call void @free_candy_value(ptr %14383)
  %14384 = load ptr, ptr @"Core:list:last:25", align 8
  call void @free_candy_value(ptr %14384)
  %14385 = load ptr, ptr @"Core:list:last:26:3", align 8
  call void @free_candy_value(ptr %14385)
  %14386 = load ptr, ptr @"Core:list:last:27", align 8
  call void @free_candy_value(ptr %14386)
  %14387 = load ptr, ptr @fun_Core_list_last, align 8
  call void @free_candy_value(ptr %14387)
  %14388 = load ptr, ptr @fun_Core_list_last_26, align 8
  call void @free_candy_value(ptr %14388)
  %14389 = load ptr, ptr @"Core:list:107", align 8
  call void @free_candy_value(ptr %14389)
  %14390 = load ptr, ptr @"Core:list:prepend:4", align 8
  call void @free_candy_value(ptr %14390)
  %14391 = load ptr, ptr @"Core:list:prepend:9", align 8
  call void @free_candy_value(ptr %14391)
  %14392 = load ptr, ptr @fun_Core_list_prepend, align 8
  call void @free_candy_value(ptr %14392)
  %14393 = load ptr, ptr @"Core:list:append:4", align 8
  call void @free_candy_value(ptr %14393)
  %14394 = load ptr, ptr @"Core:list:append:9", align 8
  call void @free_candy_value(ptr %14394)
  %14395 = load ptr, ptr @"Core:list:append:11", align 8
  call void @free_candy_value(ptr %14395)
  %14396 = load ptr, ptr @fun_Core_list_append, align 8
  call void @free_candy_value(ptr %14396)
  %14397 = load ptr, ptr @"Core:list:116", align 8
  call void @free_candy_value(ptr %14397)
  %14398 = load ptr, ptr @"Core:list:update:4", align 8
  call void @free_candy_value(ptr %14398)
  %14399 = load ptr, ptr @"Core:list:update:12", align 8
  call void @free_candy_value(ptr %14399)
  %14400 = load ptr, ptr @"Core:list:update:14", align 8
  call void @free_candy_value(ptr %14400)
  %14401 = load ptr, ptr @"Core:list:update:16", align 8
  call void @free_candy_value(ptr %14401)
  %14402 = load ptr, ptr @"Core:list:update:20", align 8
  call void @free_candy_value(ptr %14402)
  %14403 = load ptr, ptr @"text_`list | isValidIndex index` was not satisfied", align 8
  call void @free_candy_value(ptr %14403)
  %14404 = load ptr, ptr @"Core:list:update:22", align 8
  call void @free_candy_value(ptr %14404)
  %14405 = load ptr, ptr @"Core:list:update:30", align 8
  call void @free_candy_value(ptr %14405)
  %14406 = load ptr, ptr @"Core:list:update:32", align 8
  call void @free_candy_value(ptr %14406)
  %14407 = load ptr, ptr @"text_`function.is1 updater` was not satisfied", align 8
  call void @free_candy_value(ptr %14407)
  %14408 = load ptr, ptr @"Core:list:update:34", align 8
  call void @free_candy_value(ptr %14408)
  %14409 = load ptr, ptr @"Core:list:update:38", align 8
  call void @free_candy_value(ptr %14409)
  %14410 = load ptr, ptr @"Core:list:update:42", align 8
  call void @free_candy_value(ptr %14410)
  %14411 = load ptr, ptr @"Core:list:update:48", align 8
  call void @free_candy_value(ptr %14411)
  %14412 = load ptr, ptr @fun_Core_list_update, align 8
  call void @free_candy_value(ptr %14412)
  %14413 = load ptr, ptr @"Core:list:125", align 8
  call void @free_candy_value(ptr %14413)
  %14414 = load ptr, ptr @"Core:list:134", align 8
  call void @free_candy_value(ptr %14414)
  %14415 = load ptr, ptr @"Core:list:generate:7", align 8
  call void @free_candy_value(ptr %14415)
  %14416 = load ptr, ptr @"Core:list:generate:9", align 8
  call void @free_candy_value(ptr %14416)
  %14417 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  call void @free_candy_value(ptr %14417)
  %14418 = load ptr, ptr @"Core:list:generate:11", align 8
  call void @free_candy_value(ptr %14418)
  %14419 = load ptr, ptr @"Core:list:generate:19", align 8
  call void @free_candy_value(ptr %14419)
  %14420 = load ptr, ptr @"Core:list:generate:21", align 8
  call void @free_candy_value(ptr %14420)
  %14421 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  call void @free_candy_value(ptr %14421)
  %14422 = load ptr, ptr @"Core:list:generate:23", align 8
  call void @free_candy_value(ptr %14422)
  %14423 = load ptr, ptr @"Core:list:generate:31", align 8
  call void @free_candy_value(ptr %14423)
  %14424 = load ptr, ptr @"Core:list:generate:33", align 8
  call void @free_candy_value(ptr %14424)
  %14425 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  call void @free_candy_value(ptr %14425)
  %14426 = load ptr, ptr @"Core:list:generate:35", align 8
  call void @free_candy_value(ptr %14426)
  %14427 = load ptr, ptr @"Core:list:generate:43", align 8
  call void @free_candy_value(ptr %14427)
  %14428 = load ptr, ptr @"Core:list:generate:45", align 8
  call void @free_candy_value(ptr %14428)
  %14429 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %14429)
  %14430 = load ptr, ptr @"Core:list:generate:47", align 8
  call void @free_candy_value(ptr %14430)
  %14431 = load ptr, ptr @tag_Placeholder, align 8
  call void @free_candy_value(ptr %14431)
  %14432 = load ptr, ptr @"Core:list:generate:51", align 8
  call void @free_candy_value(ptr %14432)
  %14433 = load ptr, ptr @tag_Index, align 8
  call void @free_candy_value(ptr %14433)
  %14434 = load ptr, ptr @"Core:list:generate:59:1", align 8
  call void @free_candy_value(ptr %14434)
  %14435 = load ptr, ptr @"text_Struct doesn't contain key `List`: `", align 8
  call void @free_candy_value(ptr %14435)
  %14436 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  call void @free_candy_value(ptr %14436)
  %14437 = load ptr, ptr @"Core:list:generate:59:list", align 8
  call void @free_candy_value(ptr %14437)
  %14438 = load ptr, ptr @"Core:list:generate:59:index", align 8
  call void @free_candy_value(ptr %14438)
  %14439 = load ptr, ptr @"Core:list:generate:59:6", align 8
  call void @free_candy_value(ptr %14439)
  %14440 = load ptr, ptr @"Core:list:generate:59:8:2", align 8
  call void @free_candy_value(ptr %14440)
  %14441 = load ptr, ptr @"Core:list:generate:59:8:8", align 8
  call void @free_candy_value(ptr %14441)
  %14442 = load ptr, ptr @"Core:list:generate:59:8:21", align 8
  call void @free_candy_value(ptr %14442)
  %14443 = load ptr, ptr @"Core:list:generate:59:8:24", align 8
  call void @free_candy_value(ptr %14443)
  %14444 = load ptr, ptr @"Core:list:generate:59:8:26", align 8
  call void @free_candy_value(ptr %14444)
  %14445 = load ptr, ptr @"Core:list:generate:59:9", align 8
  call void @free_candy_value(ptr %14445)
  %14446 = load ptr, ptr @"Core:list:generate:60", align 8
  call void @free_candy_value(ptr %14446)
  %14447 = load ptr, ptr @fun_Core_list_generate, align 8
  call void @free_candy_value(ptr %14447)
  %14448 = load ptr, ptr @fun_Core_list_generate_59, align 8
  call void @free_candy_value(ptr %14448)
  %14449 = load ptr, ptr @fun_Core_list_generate_59_1_equals_then, align 8
  call void @free_candy_value(ptr %14449)
  %14450 = load ptr, ptr @fun_Core_list_generate_59_1_hasKey_then, align 8
  call void @free_candy_value(ptr %14450)
  %14451 = load ptr, ptr @210, align 8
  call void @free_candy_value(ptr %14451)
  %14452 = load ptr, ptr @fun_Core_list_generate_59_1_hasKey_else, align 8
  call void @free_candy_value(ptr %14452)
  %14453 = load ptr, ptr @211, align 8
  call void @free_candy_value(ptr %14453)
  %14454 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_then, align 8
  call void @free_candy_value(ptr %14454)
  %14455 = load ptr, ptr @fun_Core_list_generate_59_1_hasKey_then.1786, align 8
  call void @free_candy_value(ptr %14455)
  %14456 = load ptr, ptr @212, align 8
  call void @free_candy_value(ptr %14456)
  %14457 = load ptr, ptr @fun_Core_list_generate_59_1_hasKey_else.1788, align 8
  call void @free_candy_value(ptr %14457)
  %14458 = load ptr, ptr @213, align 8
  call void @free_candy_value(ptr %14458)
  %14459 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_then.1790, align 8
  call void @free_candy_value(ptr %14459)
  %14460 = load ptr, ptr @214, align 8
  call void @free_candy_value(ptr %14460)
  %14461 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_else, align 8
  call void @free_candy_value(ptr %14461)
  %14462 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_else.1792, align 8
  call void @free_candy_value(ptr %14462)
  %14463 = load ptr, ptr @fun_Core_list_generate_59_1_equals_else, align 8
  call void @free_candy_value(ptr %14463)
  %14464 = load ptr, ptr @215, align 8
  call void @free_candy_value(ptr %14464)
  %14465 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_else.1794, align 8
  call void @free_candy_value(ptr %14465)
  %14466 = load ptr, ptr @fun_Core_list_generate_59_7, align 8
  call void @free_candy_value(ptr %14466)
  %14467 = load ptr, ptr @fun_Core_list_generate_59_8, align 8
  call void @free_candy_value(ptr %14467)
  %14468 = load ptr, ptr @"Core:list:getRange:4", align 8
  call void @free_candy_value(ptr %14468)
  %14469 = load ptr, ptr @"Core:list:getRange:12", align 8
  call void @free_candy_value(ptr %14469)
  %14470 = load ptr, ptr @"Core:list:getRange:14", align 8
  call void @free_candy_value(ptr %14470)
  %14471 = load ptr, ptr @"text_`int.is startInclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %14471)
  %14472 = load ptr, ptr @"Core:list:getRange:16", align 8
  call void @free_candy_value(ptr %14472)
  %14473 = load ptr, ptr @"Core:list:getRange:25", align 8
  call void @free_candy_value(ptr %14473)
  %14474 = load ptr, ptr @"Core:list:getRange:26", align 8
  call void @free_candy_value(ptr %14474)
  %14475 = load ptr, ptr @"text_`startInclusive | int.isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %14475)
  %14476 = load ptr, ptr @"Core:list:getRange:28", align 8
  call void @free_candy_value(ptr %14476)
  %14477 = load ptr, ptr @"Core:list:getRange:37", align 8
  call void @free_candy_value(ptr %14477)
  %14478 = load ptr, ptr @"Core:list:getRange:40", align 8
  call void @free_candy_value(ptr %14478)
  %14479 = load ptr, ptr @"Core:list:getRange:41", align 8
  call void @free_candy_value(ptr %14479)
  %14480 = load ptr, ptr @"text_`startInclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied", align 8
  call void @free_candy_value(ptr %14480)
  %14481 = load ptr, ptr @"Core:list:getRange:43", align 8
  call void @free_candy_value(ptr %14481)
  %14482 = load ptr, ptr @"Core:list:getRange:51", align 8
  call void @free_candy_value(ptr %14482)
  %14483 = load ptr, ptr @"Core:list:getRange:53", align 8
  call void @free_candy_value(ptr %14483)
  %14484 = load ptr, ptr @"text_`int.is endExclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %14484)
  %14485 = load ptr, ptr @"Core:list:getRange:55", align 8
  call void @free_candy_value(ptr %14485)
  %14486 = load ptr, ptr @"Core:list:getRange:64", align 8
  call void @free_candy_value(ptr %14486)
  %14487 = load ptr, ptr @"Core:list:getRange:65", align 8
  call void @free_candy_value(ptr %14487)
  %14488 = load ptr, ptr @"text_`endExclusive | int.isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %14488)
  %14489 = load ptr, ptr @"Core:list:getRange:67", align 8
  call void @free_candy_value(ptr %14489)
  %14490 = load ptr, ptr @"Core:list:getRange:76", align 8
  call void @free_candy_value(ptr %14490)
  %14491 = load ptr, ptr @"Core:list:getRange:79", align 8
  call void @free_candy_value(ptr %14491)
  %14492 = load ptr, ptr @"Core:list:getRange:80", align 8
  call void @free_candy_value(ptr %14492)
  %14493 = load ptr, ptr @"text_`endExclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied", align 8
  call void @free_candy_value(ptr %14493)
  %14494 = load ptr, ptr @"Core:list:getRange:82", align 8
  call void @free_candy_value(ptr %14494)
  %14495 = load ptr, ptr @"Core:list:getRange:91", align 8
  call void @free_candy_value(ptr %14495)
  %14496 = load ptr, ptr @"Core:list:getRange:93", align 8
  call void @free_candy_value(ptr %14496)
  %14497 = load ptr, ptr @"text_`startInclusive | int.isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %14497)
  %14498 = load ptr, ptr @"Core:list:getRange:95", align 8
  call void @free_candy_value(ptr %14498)
  %14499 = load ptr, ptr @"Core:list:getRange:105", align 8
  call void @free_candy_value(ptr %14499)
  %14500 = load ptr, ptr @"Core:list:getRange:107", align 8
  call void @free_candy_value(ptr %14500)
  %14501 = load ptr, ptr @"Core:list:getRange:108:10", align 8
  call void @free_candy_value(ptr %14501)
  %14502 = load ptr, ptr @"Core:list:getRange:108:12", align 8
  call void @free_candy_value(ptr %14502)
  %14503 = load ptr, ptr @"Core:list:getRange:108:13", align 8
  call void @free_candy_value(ptr %14503)
  %14504 = load ptr, ptr @"Core:list:getRange:109", align 8
  call void @free_candy_value(ptr %14504)
  %14505 = load ptr, ptr @fun_Core_list_getRange, align 8
  call void @free_candy_value(ptr %14505)
  %14506 = load ptr, ptr @fun_Core_list_getRange_108, align 8
  call void @free_candy_value(ptr %14506)
  %14507 = load ptr, ptr @"text_`is listA` was not satisfied", align 8
  call void @free_candy_value(ptr %14507)
  %14508 = load ptr, ptr @"Core:list:concatenate:4", align 8
  call void @free_candy_value(ptr %14508)
  %14509 = load ptr, ptr @"text_`is listB` was not satisfied", align 8
  call void @free_candy_value(ptr %14509)
  %14510 = load ptr, ptr @"Core:list:concatenate:9", align 8
  call void @free_candy_value(ptr %14510)
  %14511 = load ptr, ptr @"Core:list:concatenate:13", align 8
  call void @free_candy_value(ptr %14511)
  %14512 = load ptr, ptr @"Core:list:concatenate:21", align 8
  call void @free_candy_value(ptr %14512)
  %14513 = load ptr, ptr @"Core:list:concatenate:24", align 8
  call void @free_candy_value(ptr %14513)
  %14514 = load ptr, ptr @"Core:list:concatenate:25", align 8
  call void @free_candy_value(ptr %14514)
  %14515 = load ptr, ptr @"Core:list:concatenate:26:9", align 8
  call void @free_candy_value(ptr %14515)
  %14516 = load ptr, ptr @"Core:list:concatenate:26:12", align 8
  call void @free_candy_value(ptr %14516)
  %14517 = load ptr, ptr @"Core:list:concatenate:26:13", align 8
  call void @free_candy_value(ptr %14517)
  %14518 = load ptr, ptr @"Core:list:concatenate:26:14:3", align 8
  call void @free_candy_value(ptr %14518)
  %14519 = load ptr, ptr @"Core:list:concatenate:26:15:10", align 8
  call void @free_candy_value(ptr %14519)
  %14520 = load ptr, ptr @"Core:list:concatenate:26:15:13", align 8
  call void @free_candy_value(ptr %14520)
  %14521 = load ptr, ptr @"Core:list:concatenate:26:15:14", align 8
  call void @free_candy_value(ptr %14521)
  %14522 = load ptr, ptr @"Core:list:concatenate:26:15:15", align 8
  call void @free_candy_value(ptr %14522)
  %14523 = load ptr, ptr @"Core:list:concatenate:26:16", align 8
  call void @free_candy_value(ptr %14523)
  %14524 = load ptr, ptr @"Core:list:concatenate:27", align 8
  call void @free_candy_value(ptr %14524)
  %14525 = load ptr, ptr @fun_Core_list_concatenate, align 8
  call void @free_candy_value(ptr %14525)
  %14526 = load ptr, ptr @fun_Core_list_concatenate_26, align 8
  call void @free_candy_value(ptr %14526)
  %14527 = load ptr, ptr @fun_Core_list_concatenate_26_14, align 8
  call void @free_candy_value(ptr %14527)
  %14528 = load ptr, ptr @fun_Core_list_concatenate_26_15, align 8
  call void @free_candy_value(ptr %14528)
  %14529 = load ptr, ptr @tag_Insert, align 8
  call void @free_candy_value(ptr %14529)
  %14530 = load ptr, ptr @tag_RemoveAt, align 8
  call void @free_candy_value(ptr %14530)
  %14531 = load ptr, ptr @tag_IsValidInsertIndex, align 8
  call void @free_candy_value(ptr %14531)
  %14532 = load ptr, ptr @tag_Length, align 8
  call void @free_candy_value(ptr %14532)
  %14533 = load ptr, ptr @tag_IsEmpty, align 8
  call void @free_candy_value(ptr %14533)
  %14534 = load ptr, ptr @tag_Prepend, align 8
  call void @free_candy_value(ptr %14534)
  %14535 = load ptr, ptr @tag_Filled, align 8
  call void @free_candy_value(ptr %14535)
  %14536 = load ptr, ptr @tag_LastIndex, align 8
  call void @free_candy_value(ptr %14536)
  %14537 = load ptr, ptr @tag_Append, align 8
  call void @free_candy_value(ptr %14537)
  %14538 = load ptr, ptr @tag_Single, align 8
  call void @free_candy_value(ptr %14538)
  %14539 = load ptr, ptr @tag_Last, align 8
  call void @free_candy_value(ptr %14539)
  %14540 = load ptr, ptr @tag_Concatenate, align 8
  call void @free_candy_value(ptr %14540)
  %14541 = load ptr, ptr @tag_IsValidIndex, align 8
  call void @free_candy_value(ptr %14541)
  %14542 = load ptr, ptr @tag_GetRange, align 8
  call void @free_candy_value(ptr %14542)
  %14543 = load ptr, ptr @tag_First, align 8
  call void @free_candy_value(ptr %14543)
  %14544 = load ptr, ptr @tag_Generate, align 8
  call void @free_candy_value(ptr %14544)
  %14545 = load ptr, ptr @tag_Update, align 8
  call void @free_candy_value(ptr %14545)
  %14546 = load ptr, ptr @tag_Replace, align 8
  call void @free_candy_value(ptr %14546)
  %14547 = load ptr, ptr @fun_Core_type_is.1796, align 8
  call void @free_candy_value(ptr %14547)
  %14548 = load ptr, ptr @"Core:text:is:7", align 8
  call void @free_candy_value(ptr %14548)
  %14549 = load ptr, ptr @"Core:text:is:10", align 8
  call void @free_candy_value(ptr %14549)
  %14550 = load ptr, ptr @fun_Core_text_is, align 8
  call void @free_candy_value(ptr %14550)
  %14551 = load ptr, ptr @"text_We're no strangers to love\0AYou know the rules and so do I\0AA full commitment's what I'm thinking of\0AYou wouldn't get this from any other guy\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AAnd if you ask me how I'm feeling\0ADon't tell me you're too blind to see\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give, never gonna give\0ANever gonna give, never gonna give\0A\0AWe've known each other for so long\0AYour heart's been aching, but you're too shy to say it\0AInside, we both know what's been going on\0AWe know the game and we're gonna play it\0A\0AI just wanna tell you how I'm feeling\0AGotta make you understand\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you\0A\0ANever gonna give you up\0ANever gonna let you down\0ANever gonna run around and desert you\0ANever gonna make you cry\0ANever gonna say goodbye\0ANever gonna tell a lie and hurt you", align 8
  call void @free_candy_value(ptr %14551)
  %14552 = load ptr, ptr @"Core:text:341", align 8
  call void @free_candy_value(ptr %14552)
  %14553 = load ptr, ptr @"Core:text:350", align 8
  call void @free_candy_value(ptr %14553)
  %14554 = load ptr, ptr @"Core:text:359", align 8
  call void @free_candy_value(ptr %14554)
  %14555 = load ptr, ptr @"Core:text:368", align 8
  call void @free_candy_value(ptr %14555)
  %14556 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  call void @free_candy_value(ptr %14556)
  %14557 = load ptr, ptr @"Core:text:characterAt:4", align 8
  call void @free_candy_value(ptr %14557)
  %14558 = load ptr, ptr @"Core:text:characterAt:12", align 8
  call void @free_candy_value(ptr %14558)
  %14559 = load ptr, ptr @"Core:text:characterAt:14", align 8
  call void @free_candy_value(ptr %14559)
  %14560 = load ptr, ptr @"Core:text:characterAt:16", align 8
  call void @free_candy_value(ptr %14560)
  %14561 = load ptr, ptr @"Core:text:characterAt:24", align 8
  call void @free_candy_value(ptr %14561)
  %14562 = load ptr, ptr @"Core:text:characterAt:26", align 8
  call void @free_candy_value(ptr %14562)
  %14563 = load ptr, ptr @"text_`int.isNonNegative index` was not satisfied", align 8
  call void @free_candy_value(ptr %14563)
  %14564 = load ptr, ptr @"Core:text:characterAt:28", align 8
  call void @free_candy_value(ptr %14564)
  %14565 = load ptr, ptr @"Core:text:characterAt:36", align 8
  call void @free_candy_value(ptr %14565)
  %14566 = load ptr, ptr @"Core:text:characterAt:40", align 8
  call void @free_candy_value(ptr %14566)
  %14567 = load ptr, ptr @"Core:text:characterAt:41", align 8
  call void @free_candy_value(ptr %14567)
  %14568 = load ptr, ptr @"text_`int.isLessThan index (length text)` was not satisfied", align 8
  call void @free_candy_value(ptr %14568)
  %14569 = load ptr, ptr @"Core:text:characterAt:43", align 8
  call void @free_candy_value(ptr %14569)
  %14570 = load ptr, ptr @"Core:text:characterAt:46", align 8
  call void @free_candy_value(ptr %14570)
  %14571 = load ptr, ptr @"Core:text:characterAt:54", align 8
  call void @free_candy_value(ptr %14571)
  %14572 = load ptr, ptr @"Core:text:characterAt:56", align 8
  call void @free_candy_value(ptr %14572)
  %14573 = load ptr, ptr @fun_Core_text_characterAt, align 8
  call void @free_candy_value(ptr %14573)
  %14574 = load ptr, ptr @"Core:text:377", align 8
  call void @free_candy_value(ptr %14574)
  %14575 = load ptr, ptr @"Core:text:386", align 8
  call void @free_candy_value(ptr %14575)
  %14576 = load ptr, ptr @"Core:text:395", align 8
  call void @free_candy_value(ptr %14576)
  %14577 = load ptr, ptr @"Core:text:404", align 8
  call void @free_candy_value(ptr %14577)
  %14578 = load ptr, ptr @"Core:text:413", align 8
  call void @free_candy_value(ptr %14578)
  %14579 = load ptr, ptr @"Core:text:removePrefix:4", align 8
  call void @free_candy_value(ptr %14579)
  %14580 = load ptr, ptr @"text_`is prefix` was not satisfied", align 8
  call void @free_candy_value(ptr %14580)
  %14581 = load ptr, ptr @"Core:text:removePrefix:9", align 8
  call void @free_candy_value(ptr %14581)
  %14582 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  call void @free_candy_value(ptr %14582)
  %14583 = load ptr, ptr @"Core:text:removePrefix:15:4", align 8
  call void @free_candy_value(ptr %14583)
  %14584 = load ptr, ptr @"Core:text:removePrefix:15:7", align 8
  call void @free_candy_value(ptr %14584)
  %14585 = load ptr, ptr @"Core:text:removePrefix:15:8", align 8
  call void @free_candy_value(ptr %14585)
  %14586 = load ptr, ptr @"Core:text:removePrefix:17", align 8
  call void @free_candy_value(ptr %14586)
  %14587 = load ptr, ptr @fun_Core_text_removePrefix, align 8
  call void @free_candy_value(ptr %14587)
  %14588 = load ptr, ptr @fun_Core_text_removePrefix_15, align 8
  call void @free_candy_value(ptr %14588)
  %14589 = load ptr, ptr @fun_Core_text_removePrefix_16, align 8
  call void @free_candy_value(ptr %14589)
  %14590 = load ptr, ptr @"Core:text:removeSuffix:4", align 8
  call void @free_candy_value(ptr %14590)
  %14591 = load ptr, ptr @"text_`is suffix` was not satisfied", align 8
  call void @free_candy_value(ptr %14591)
  %14592 = load ptr, ptr @"Core:text:removeSuffix:9", align 8
  call void @free_candy_value(ptr %14592)
  %14593 = load ptr, ptr @"Core:text:removeSuffix:12", align 8
  call void @free_candy_value(ptr %14593)
  %14594 = load ptr, ptr @"Core:text:removeSuffix:18", align 8
  call void @free_candy_value(ptr %14594)
  %14595 = load ptr, ptr @"Core:text:removeSuffix:19:10", align 8
  call void @free_candy_value(ptr %14595)
  %14596 = load ptr, ptr @"Core:text:removeSuffix:19:13", align 8
  call void @free_candy_value(ptr %14596)
  %14597 = load ptr, ptr @"Core:text:removeSuffix:19:14", align 8
  call void @free_candy_value(ptr %14597)
  %14598 = load ptr, ptr @"Core:text:removeSuffix:19:16", align 8
  call void @free_candy_value(ptr %14598)
  %14599 = load ptr, ptr @"Core:text:removeSuffix:21", align 8
  call void @free_candy_value(ptr %14599)
  %14600 = load ptr, ptr @fun_Core_text_removeSuffix, align 8
  call void @free_candy_value(ptr %14600)
  %14601 = load ptr, ptr @fun_Core_text_removeSuffix_19, align 8
  call void @free_candy_value(ptr %14601)
  %14602 = load ptr, ptr @fun_Core_text_removeSuffix_20, align 8
  call void @free_candy_value(ptr %14602)
  %14603 = load ptr, ptr @"Core:text:422", align 8
  call void @free_candy_value(ptr %14603)
  %14604 = load ptr, ptr @"Core:text:431", align 8
  call void @free_candy_value(ptr %14604)
  %14605 = load ptr, ptr @"Core:text:trim:4", align 8
  call void @free_candy_value(ptr %14605)
  %14606 = load ptr, ptr @"Core:text:trim:7", align 8
  call void @free_candy_value(ptr %14606)
  %14607 = load ptr, ptr @"Core:text:trim:9", align 8
  call void @free_candy_value(ptr %14607)
  %14608 = load ptr, ptr @fun_Core_text_trim, align 8
  call void @free_candy_value(ptr %14608)
  %14609 = load ptr, ptr @tag_StartsWith, align 8
  call void @free_candy_value(ptr %14609)
  %14610 = load ptr, ptr @tag_Rick, align 8
  call void @free_candy_value(ptr %14610)
  %14611 = load ptr, ptr @tag_Trim, align 8
  call void @free_candy_value(ptr %14611)
  %14612 = load ptr, ptr @tag_Contains, align 8
  call void @free_candy_value(ptr %14612)
  %14613 = load ptr, ptr @tag_Characters, align 8
  call void @free_candy_value(ptr %14613)
  %14614 = load ptr, ptr @tag_EndsWith, align 8
  call void @free_candy_value(ptr %14614)
  %14615 = load ptr, ptr @tag_RemoveSuffix, align 8
  call void @free_candy_value(ptr %14615)
  %14616 = load ptr, ptr @tag_RemovePrefix, align 8
  call void @free_candy_value(ptr %14616)
  %14617 = load ptr, ptr @tag_FromUtf8, align 8
  call void @free_candy_value(ptr %14617)
  %14618 = load ptr, ptr @tag_CharacterAt, align 8
  call void @free_candy_value(ptr %14618)
  %14619 = load ptr, ptr @tag_TrimStart, align 8
  call void @free_candy_value(ptr %14619)
  %14620 = load ptr, ptr @tag_TrimEnd, align 8
  call void @free_candy_value(ptr %14620)
  %14621 = load ptr, ptr @"Core:toDebugText:toDebugText:7", align 8
  call void @free_candy_value(ptr %14621)
  %14622 = load ptr, ptr @"Core:toDebugText:toDebugText:9", align 8
  call void @free_candy_value(ptr %14622)
  %14623 = load ptr, ptr @"Core:fixedDecimal:isScale:7", align 8
  call void @free_candy_value(ptr %14623)
  %14624 = load ptr, ptr @"Core:fixedDecimal:isScale:9", align 8
  call void @free_candy_value(ptr %14624)
  %14625 = load ptr, ptr @"Core:fixedDecimal:isScale:17", align 8
  call void @free_candy_value(ptr %14625)
  %14626 = load ptr, ptr @"Core:fixedDecimal:isScale:18:7", align 8
  call void @free_candy_value(ptr %14626)
  %14627 = load ptr, ptr @"Core:fixedDecimal:isScale:18:9", align 8
  call void @free_candy_value(ptr %14627)
  %14628 = load ptr, ptr @"Core:fixedDecimal:isScale:19", align 8
  call void @free_candy_value(ptr %14628)
  %14629 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  call void @free_candy_value(ptr %14629)
  %14630 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:4", align 8
  call void @free_candy_value(ptr %14630)
  %14631 = load ptr, ptr @num_10, align 8
  call void @free_candy_value(ptr %14631)
  %14632 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:13", align 8
  call void @free_candy_value(ptr %14632)
  %14633 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:15", align 8
  call void @free_candy_value(ptr %14633)
  %14634 = load ptr, ptr @fun_Core_fixedDecimal_scaleFactor, align 8
  call void @free_candy_value(ptr %14634)
  %14635 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  call void @free_candy_value(ptr %14635)
  %14636 = load ptr, ptr @"Core:fixedDecimal:is:1", align 8
  call void @free_candy_value(ptr %14636)
  %14637 = load ptr, ptr @tag_FixedDecimal, align 8
  call void @free_candy_value(ptr %14637)
  %14638 = load ptr, ptr @tag_MinorUnits, align 8
  call void @free_candy_value(ptr %14638)
  %14639 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  call void @free_candy_value(ptr %14639)
  %14640 = load ptr, ptr @tag_Scale, align 8
  call void @free_candy_value(ptr %14640)
  %14641 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  call void @free_candy_value(ptr %14641)
  %14642 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  call void @free_candy_value(ptr %14642)
  %14643 = load ptr, ptr @"Core:fixedDecimal:is:1:minorUnits", align 8
  call void @free_candy_value(ptr %14643)
  %14644 = load ptr, ptr @"Core:fixedDecimal:is:1:scale", align 8
  call void @free_candy_value(ptr %14644)
  %14645 = load ptr, ptr @"Core:fixedDecimal:is:1:7", align 8
  call void @free_candy_value(ptr %14645)
  %14646 = load ptr, ptr @"Core:fixedDecimal:is:1:9", align 8
  call void @free_candy_value(ptr %14646)
  %14647 = load ptr, ptr @"Core:fixedDecimal:is:1:17", align 8
  call void @free_candy_value(ptr %14647)
  %14648 = load ptr, ptr @"Core:fixedDecimal:is:1:19", align 8
  call void @free_candy_value(ptr %14648)
  %14649 = load ptr, ptr @fun_Core_fixedDecimal_is, align 8
  call void @free_candy_value(ptr %14649)
  %14650 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  call void @free_candy_value(ptr %14650)
  %14651 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.1798, align 8
  call void @free_candy_value(ptr %14651)
  %14652 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.1800, align 8
  call void @free_candy_value(ptr %14652)
  %14653 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.1802, align 8
  call void @free_candy_value(ptr %14653)
  %14654 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  call void @free_candy_value(ptr %14654)
  %14655 = load ptr, ptr @216, align 8
  call void @free_candy_value(ptr %14655)
  %14656 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  call void @free_candy_value(ptr %14656)
  %14657 = load ptr, ptr @217, align 8
  call void @free_candy_value(ptr %14657)
  %14658 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %14658)
  %14659 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.1804, align 8
  call void @free_candy_value(ptr %14659)
  %14660 = load ptr, ptr @218, align 8
  call void @free_candy_value(ptr %14660)
  %14661 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.1806, align 8
  call void @free_candy_value(ptr %14661)
  %14662 = load ptr, ptr @219, align 8
  call void @free_candy_value(ptr %14662)
  %14663 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.1808, align 8
  call void @free_candy_value(ptr %14663)
  %14664 = load ptr, ptr @220, align 8
  call void @free_candy_value(ptr %14664)
  %14665 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %14665)
  %14666 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.1810, align 8
  call void @free_candy_value(ptr %14666)
  %14667 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  call void @free_candy_value(ptr %14667)
  %14668 = load ptr, ptr @221, align 8
  call void @free_candy_value(ptr %14668)
  %14669 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.1812, align 8
  call void @free_candy_value(ptr %14669)
  %14670 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.1814, align 8
  call void @free_candy_value(ptr %14670)
  %14671 = load ptr, ptr @222, align 8
  call void @free_candy_value(ptr %14671)
  %14672 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.1816, align 8
  call void @free_candy_value(ptr %14672)
  %14673 = load ptr, ptr @223, align 8
  call void @free_candy_value(ptr %14673)
  %14674 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %14674)
  %14675 = load ptr, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  call void @free_candy_value(ptr %14675)
  %14676 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1818, align 8
  call void @free_candy_value(ptr %14676)
  %14677 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %14677)
  %14678 = load ptr, ptr @"Core:fixedDecimal:minorUnits:2", align 8
  call void @free_candy_value(ptr %14678)
  %14679 = load ptr, ptr @"Core:fixedDecimal:minorUnits:4", align 8
  call void @free_candy_value(ptr %14679)
  %14680 = load ptr, ptr @"Core:fixedDecimal:minorUnits:18", align 8
  call void @free_candy_value(ptr %14680)
  %14681 = load ptr, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  call void @free_candy_value(ptr %14681)
  %14682 = load ptr, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  call void @free_candy_value(ptr %14682)
  %14683 = load ptr, ptr @fun_Core_fixedDecimal_minorUnits, align 8
  call void @free_candy_value(ptr %14683)
  %14684 = load ptr, ptr @"Core:fixedDecimal:scale:2", align 8
  call void @free_candy_value(ptr %14684)
  %14685 = load ptr, ptr @"Core:fixedDecimal:scale:4", align 8
  call void @free_candy_value(ptr %14685)
  %14686 = load ptr, ptr @"Core:fixedDecimal:scale:18", align 8
  call void @free_candy_value(ptr %14686)
  %14687 = load ptr, ptr @"Core:fixedDecimal:scale:19", align 8
  call void @free_candy_value(ptr %14687)
  %14688 = load ptr, ptr @"Core:fixedDecimal:scale:21", align 8
  call void @free_candy_value(ptr %14688)
  %14689 = load ptr, ptr @fun_Core_fixedDecimal_scale, align 8
  call void @free_candy_value(ptr %14689)
  %14690 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:7", align 8
  call void @free_candy_value(ptr %14690)
  %14691 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:9", align 8
  call void @free_candy_value(ptr %14691)
  %14692 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  call void @free_candy_value(ptr %14692)
  %14693 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:11", align 8
  call void @free_candy_value(ptr %14693)
  %14694 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:16", align 8
  call void @free_candy_value(ptr %14694)
  %14695 = load ptr, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  call void @free_candy_value(ptr %14695)
  %14696 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1820, align 8
  call void @free_candy_value(ptr %14696)
  %14697 = load ptr, ptr @tag_FixedDecimal.1821, align 8
  call void @free_candy_value(ptr %14697)
  %14698 = load ptr, ptr @"Core:fixedDecimal:fromInt:7", align 8
  call void @free_candy_value(ptr %14698)
  %14699 = load ptr, ptr @"Core:fixedDecimal:fromInt:9", align 8
  call void @free_candy_value(ptr %14699)
  %14700 = load ptr, ptr @"text_`int.is a` was not satisfied", align 8
  call void @free_candy_value(ptr %14700)
  %14701 = load ptr, ptr @"Core:fixedDecimal:fromInt:11", align 8
  call void @free_candy_value(ptr %14701)
  %14702 = load ptr, ptr @"Core:fixedDecimal:fromInt:15", align 8
  call void @free_candy_value(ptr %14702)
  %14703 = load ptr, ptr @fun_Core_fixedDecimal_fromInt, align 8
  call void @free_candy_value(ptr %14703)
  %14704 = load ptr, ptr @"Core:fixedDecimal:floorToInt:2", align 8
  call void @free_candy_value(ptr %14704)
  %14705 = load ptr, ptr @"Core:fixedDecimal:floorToInt:4", align 8
  call void @free_candy_value(ptr %14705)
  %14706 = load ptr, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  call void @free_candy_value(ptr %14706)
  %14707 = load ptr, ptr @"Core:fixedDecimal:floorToInt:15", align 8
  call void @free_candy_value(ptr %14707)
  %14708 = load ptr, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  call void @free_candy_value(ptr %14708)
  %14709 = load ptr, ptr @"Core:fixedDecimal:floorToInt:20", align 8
  call void @free_candy_value(ptr %14709)
  %14710 = load ptr, ptr @"Core:fixedDecimal:floorToInt:21", align 8
  call void @free_candy_value(ptr %14710)
  %14711 = load ptr, ptr @fun_Core_fixedDecimal_floorToInt, align 8
  call void @free_candy_value(ptr %14711)
  %14712 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:2", align 8
  call void @free_candy_value(ptr %14712)
  %14713 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:4", align 8
  call void @free_candy_value(ptr %14713)
  %14714 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  call void @free_candy_value(ptr %14714)
  %14715 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:9", align 8
  call void @free_candy_value(ptr %14715)
  %14716 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  call void @free_candy_value(ptr %14716)
  %14717 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:21", align 8
  call void @free_candy_value(ptr %14717)
  %14718 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23", align 8
  call void @free_candy_value(ptr %14718)
  %14719 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:2", align 8
  call void @free_candy_value(ptr %14719)
  %14720 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:10", align 8
  call void @free_candy_value(ptr %14720)
  %14721 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:14", align 8
  call void @free_candy_value(ptr %14721)
  %14722 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:22", align 8
  call void @free_candy_value(ptr %14722)
  %14723 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  call void @free_candy_value(ptr %14723)
  %14724 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:25", align 8
  call void @free_candy_value(ptr %14724)
  %14725 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:26", align 8
  call void @free_candy_value(ptr %14725)
  %14726 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:2", align 8
  call void @free_candy_value(ptr %14726)
  %14727 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:10", align 8
  call void @free_candy_value(ptr %14727)
  %14728 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:20", align 8
  call void @free_candy_value(ptr %14728)
  %14729 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:23", align 8
  call void @free_candy_value(ptr %14729)
  %14730 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  call void @free_candy_value(ptr %14730)
  %14731 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:25", align 8
  call void @free_candy_value(ptr %14731)
  %14732 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  call void @free_candy_value(ptr %14732)
  %14733 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:26", align 8
  call void @free_candy_value(ptr %14733)
  %14734 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits, align 8
  call void @free_candy_value(ptr %14734)
  %14735 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1823, align 8
  call void @free_candy_value(ptr %14735)
  %14736 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  call void @free_candy_value(ptr %14736)
  %14737 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  call void @free_candy_value(ptr %14737)
  %14738 = load ptr, ptr @"Core:fixedDecimal:rescale:2", align 8
  call void @free_candy_value(ptr %14738)
  %14739 = load ptr, ptr @"Core:fixedDecimal:rescale:4", align 8
  call void @free_candy_value(ptr %14739)
  %14740 = load ptr, ptr @"Core:fixedDecimal:rescale:9", align 8
  call void @free_candy_value(ptr %14740)
  %14741 = load ptr, ptr @"Core:fixedDecimal:rescale:14", align 8
  call void @free_candy_value(ptr %14741)
  %14742 = load ptr, ptr @"Core:fixedDecimal:rescale:16", align 8
  call void @free_candy_value(ptr %14742)
  %14743 = load ptr, ptr @fun_Core_fixedDecimal_rescale, align 8
  call void @free_candy_value(ptr %14743)
  %14744 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1825, align 8
  call void @free_candy_value(ptr %14744)
  %14745 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:2", align 8
  call void @free_candy_value(ptr %14745)
  %14746 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:4", align 8
  call void @free_candy_value(ptr %14746)
  %14747 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:7", align 8
  call void @free_candy_value(ptr %14747)
  %14748 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:9", align 8
  call void @free_candy_value(ptr %14748)
  %14749 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:17", align 8
  call void @free_candy_value(ptr %14749)
  %14750 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:20", align 8
  call void @free_candy_value(ptr %14750)
  %14751 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:23", align 8
  call void @free_candy_value(ptr %14751)
  %14752 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:24", align 8
  call void @free_candy_value(ptr %14752)
  %14753 = load ptr, ptr @tag_ValueA, align 8
  call void @free_candy_value(ptr %14753)
  %14754 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:30", align 8
  call void @free_candy_value(ptr %14754)
  %14755 = load ptr, ptr @tag_ValueB, align 8
  call void @free_candy_value(ptr %14755)
  %14756 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:35", align 8
  call void @free_candy_value(ptr %14756)
  %14757 = load ptr, ptr @tag_TargetScale, align 8
  call void @free_candy_value(ptr %14757)
  %14758 = load ptr, ptr @fun_Core_fixedDecimal_comparableMinorUnits, align 8
  call void @free_candy_value(ptr %14758)
  %14759 = load ptr, ptr @"Core:fixedDecimal:add:2", align 8
  call void @free_candy_value(ptr %14759)
  %14760 = load ptr, ptr @"text_`is summandA` was not satisfied", align 8
  call void @free_candy_value(ptr %14760)
  %14761 = load ptr, ptr @"Core:fixedDecimal:add:4", align 8
  call void @free_candy_value(ptr %14761)
  %14762 = load ptr, ptr @"Core:fixedDecimal:add:7", align 8
  call void @free_candy_value(ptr %14762)
  %14763 = load ptr, ptr @"text_`is summandB` was not satisfied", align 8
  call void @free_candy_value(ptr %14763)
  %14764 = load ptr, ptr @"Core:fixedDecimal:add:9", align 8
  call void @free_candy_value(ptr %14764)
  %14765 = load ptr, ptr @"Core:fixedDecimal:add:13", align 8
  call void @free_candy_value(ptr %14765)
  %14766 = load ptr, ptr @"Core:fixedDecimal:add:14", align 8
  call void @free_candy_value(ptr %14766)
  %14767 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  call void @free_candy_value(ptr %14767)
  %14768 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  call void @free_candy_value(ptr %14768)
  %14769 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  call void @free_candy_value(ptr %14769)
  %14770 = load ptr, ptr @"Core:fixedDecimal:add:valueA", align 8
  call void @free_candy_value(ptr %14770)
  %14771 = load ptr, ptr @"Core:fixedDecimal:add:valueB", align 8
  call void @free_candy_value(ptr %14771)
  %14772 = load ptr, ptr @"Core:fixedDecimal:add:targetScale", align 8
  call void @free_candy_value(ptr %14772)
  %14773 = load ptr, ptr @"Core:fixedDecimal:add:25", align 8
  call void @free_candy_value(ptr %14773)
  %14774 = load ptr, ptr @"Core:fixedDecimal:add:27", align 8
  call void @free_candy_value(ptr %14774)
  %14775 = load ptr, ptr @"Core:fixedDecimal:add:29", align 8
  call void @free_candy_value(ptr %14775)
  %14776 = load ptr, ptr @fun_Core_fixedDecimal_add, align 8
  call void @free_candy_value(ptr %14776)
  %14777 = load ptr, ptr @fun_Core_fixedDecimal_add_14_equals_then, align 8
  call void @free_candy_value(ptr %14777)
  %14778 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then, align 8
  call void @free_candy_value(ptr %14778)
  %14779 = load ptr, ptr @224, align 8
  call void @free_candy_value(ptr %14779)
  %14780 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else, align 8
  call void @free_candy_value(ptr %14780)
  %14781 = load ptr, ptr @225, align 8
  call void @free_candy_value(ptr %14781)
  %14782 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then, align 8
  call void @free_candy_value(ptr %14782)
  %14783 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.1827, align 8
  call void @free_candy_value(ptr %14783)
  %14784 = load ptr, ptr @226, align 8
  call void @free_candy_value(ptr %14784)
  %14785 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.1829, align 8
  call void @free_candy_value(ptr %14785)
  %14786 = load ptr, ptr @227, align 8
  call void @free_candy_value(ptr %14786)
  %14787 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.1831, align 8
  call void @free_candy_value(ptr %14787)
  %14788 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.1833, align 8
  call void @free_candy_value(ptr %14788)
  %14789 = load ptr, ptr @228, align 8
  call void @free_candy_value(ptr %14789)
  %14790 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.1835, align 8
  call void @free_candy_value(ptr %14790)
  %14791 = load ptr, ptr @229, align 8
  call void @free_candy_value(ptr %14791)
  %14792 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.1837, align 8
  call void @free_candy_value(ptr %14792)
  %14793 = load ptr, ptr @230, align 8
  call void @free_candy_value(ptr %14793)
  %14794 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else, align 8
  call void @free_candy_value(ptr %14794)
  %14795 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1839, align 8
  call void @free_candy_value(ptr %14795)
  %14796 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1841, align 8
  call void @free_candy_value(ptr %14796)
  %14797 = load ptr, ptr @fun_Core_fixedDecimal_add_14_equals_else, align 8
  call void @free_candy_value(ptr %14797)
  %14798 = load ptr, ptr @231, align 8
  call void @free_candy_value(ptr %14798)
  %14799 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1843, align 8
  call void @free_candy_value(ptr %14799)
  %14800 = load ptr, ptr @"Core:fixedDecimal:subtract:2", align 8
  call void @free_candy_value(ptr %14800)
  %14801 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  call void @free_candy_value(ptr %14801)
  %14802 = load ptr, ptr @"Core:fixedDecimal:subtract:4", align 8
  call void @free_candy_value(ptr %14802)
  %14803 = load ptr, ptr @"Core:fixedDecimal:subtract:7", align 8
  call void @free_candy_value(ptr %14803)
  %14804 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  call void @free_candy_value(ptr %14804)
  %14805 = load ptr, ptr @"Core:fixedDecimal:subtract:9", align 8
  call void @free_candy_value(ptr %14805)
  %14806 = load ptr, ptr @"Core:fixedDecimal:subtract:13", align 8
  call void @free_candy_value(ptr %14806)
  %14807 = load ptr, ptr @"Core:fixedDecimal:subtract:14", align 8
  call void @free_candy_value(ptr %14807)
  %14808 = load ptr, ptr @"Core:fixedDecimal:subtract:valueA", align 8
  call void @free_candy_value(ptr %14808)
  %14809 = load ptr, ptr @"Core:fixedDecimal:subtract:valueB", align 8
  call void @free_candy_value(ptr %14809)
  %14810 = load ptr, ptr @"Core:fixedDecimal:subtract:targetScale", align 8
  call void @free_candy_value(ptr %14810)
  %14811 = load ptr, ptr @"Core:fixedDecimal:subtract:25", align 8
  call void @free_candy_value(ptr %14811)
  %14812 = load ptr, ptr @"Core:fixedDecimal:subtract:27", align 8
  call void @free_candy_value(ptr %14812)
  %14813 = load ptr, ptr @"Core:fixedDecimal:subtract:29", align 8
  call void @free_candy_value(ptr %14813)
  %14814 = load ptr, ptr @fun_Core_fixedDecimal_subtract, align 8
  call void @free_candy_value(ptr %14814)
  %14815 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  call void @free_candy_value(ptr %14815)
  %14816 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  call void @free_candy_value(ptr %14816)
  %14817 = load ptr, ptr @232, align 8
  call void @free_candy_value(ptr %14817)
  %14818 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  call void @free_candy_value(ptr %14818)
  %14819 = load ptr, ptr @233, align 8
  call void @free_candy_value(ptr %14819)
  %14820 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  call void @free_candy_value(ptr %14820)
  %14821 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.1845, align 8
  call void @free_candy_value(ptr %14821)
  %14822 = load ptr, ptr @234, align 8
  call void @free_candy_value(ptr %14822)
  %14823 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.1847, align 8
  call void @free_candy_value(ptr %14823)
  %14824 = load ptr, ptr @235, align 8
  call void @free_candy_value(ptr %14824)
  %14825 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.1849, align 8
  call void @free_candy_value(ptr %14825)
  %14826 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.1851, align 8
  call void @free_candy_value(ptr %14826)
  %14827 = load ptr, ptr @236, align 8
  call void @free_candy_value(ptr %14827)
  %14828 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.1853, align 8
  call void @free_candy_value(ptr %14828)
  %14829 = load ptr, ptr @237, align 8
  call void @free_candy_value(ptr %14829)
  %14830 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.1855, align 8
  call void @free_candy_value(ptr %14830)
  %14831 = load ptr, ptr @238, align 8
  call void @free_candy_value(ptr %14831)
  %14832 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  call void @free_candy_value(ptr %14832)
  %14833 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1857, align 8
  call void @free_candy_value(ptr %14833)
  %14834 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1859, align 8
  call void @free_candy_value(ptr %14834)
  %14835 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  call void @free_candy_value(ptr %14835)
  %14836 = load ptr, ptr @239, align 8
  call void @free_candy_value(ptr %14836)
  %14837 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1861, align 8
  call void @free_candy_value(ptr %14837)
  %14838 = load ptr, ptr @"Core:fixedDecimal:negate:2", align 8
  call void @free_candy_value(ptr %14838)
  %14839 = load ptr, ptr @"Core:fixedDecimal:negate:4", align 8
  call void @free_candy_value(ptr %14839)
  %14840 = load ptr, ptr @"Core:fixedDecimal:negate:8", align 8
  call void @free_candy_value(ptr %14840)
  %14841 = load ptr, ptr @"Core:fixedDecimal:negate:16", align 8
  call void @free_candy_value(ptr %14841)
  %14842 = load ptr, ptr @"Core:fixedDecimal:negate:17", align 8
  call void @free_candy_value(ptr %14842)
  %14843 = load ptr, ptr @"Core:fixedDecimal:negate:20", align 8
  call void @free_candy_value(ptr %14843)
  %14844 = load ptr, ptr @"Core:fixedDecimal:negate:21", align 8
  call void @free_candy_value(ptr %14844)
  %14845 = load ptr, ptr @fun_Core_fixedDecimal_negate, align 8
  call void @free_candy_value(ptr %14845)
  %14846 = load ptr, ptr @"Core:fixedDecimal:multiply:2", align 8
  call void @free_candy_value(ptr %14846)
  %14847 = load ptr, ptr @"text_`is factorA` was not satisfied", align 8
  call void @free_candy_value(ptr %14847)
  %14848 = load ptr, ptr @"Core:fixedDecimal:multiply:4", align 8
  call void @free_candy_value(ptr %14848)
  %14849 = load ptr, ptr @"Core:fixedDecimal:multiply:7", align 8
  call void @free_candy_value(ptr %14849)
  %14850 = load ptr, ptr @"text_`is factorB` was not satisfied", align 8
  call void @free_candy_value(ptr %14850)
  %14851 = load ptr, ptr @"Core:fixedDecimal:multiply:9", align 8
  call void @free_candy_value(ptr %14851)
  %14852 = load ptr, ptr @"Core:fixedDecimal:multiply:13", align 8
  call void @free_candy_value(ptr %14852)
  %14853 = load ptr, ptr @"Core:fixedDecimal:multiply:21", align 8
  call void @free_candy_value(ptr %14853)
  %14854 = load ptr, ptr @"Core:fixedDecimal:multiply:24", align 8
  call void @free_candy_value(ptr %14854)
  %14855 = load ptr, ptr @"Core:fixedDecimal:multiply:25", align 8
  call void @free_candy_value(ptr %14855)
  %14856 = load ptr, ptr @"Core:fixedDecimal:multiply:28", align 8
  call void @free_candy_value(ptr %14856)
  %14857 = load ptr, ptr @"Core:fixedDecimal:multiply:36", align 8
  call void @free_candy_value(ptr %14857)
  %14858 = load ptr, ptr @"Core:fixedDecimal:multiply:39", align 8
  call void @free_candy_value(ptr %14858)
  %14859 = load ptr, ptr @"Core:fixedDecimal:multiply:40", align 8
  call void @free_candy_value(ptr %14859)
  %14860 = load ptr, ptr @"Core:fixedDecimal:multiply:41", align 8
  call void @free_candy_value(ptr %14860)
  %14861 = load ptr, ptr @fun_Core_fixedDecimal_multiply, align 8
  call void @free_candy_value(ptr %14861)
  %14862 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:2", align 8
  call void @free_candy_value(ptr %14862)
  %14863 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  call void @free_candy_value(ptr %14863)
  %14864 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:4", align 8
  call void @free_candy_value(ptr %14864)
  %14865 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:7", align 8
  call void @free_candy_value(ptr %14865)
  %14866 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  call void @free_candy_value(ptr %14866)
  %14867 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:9", align 8
  call void @free_candy_value(ptr %14867)
  %14868 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:12", align 8
  call void @free_candy_value(ptr %14868)
  %14869 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:15", align 8
  call void @free_candy_value(ptr %14869)
  %14870 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:23", align 8
  call void @free_candy_value(ptr %14870)
  %14871 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:24", align 8
  call void @free_candy_value(ptr %14871)
  %14872 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:32", align 8
  call void @free_candy_value(ptr %14872)
  %14873 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:36", align 8
  call void @free_candy_value(ptr %14873)
  %14874 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:37", align 8
  call void @free_candy_value(ptr %14874)
  %14875 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:valueA", align 8
  call void @free_candy_value(ptr %14875)
  %14876 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:valueB", align 8
  call void @free_candy_value(ptr %14876)
  %14877 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:targetScale", align 8
  call void @free_candy_value(ptr %14877)
  %14878 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:48", align 8
  call void @free_candy_value(ptr %14878)
  %14879 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:51", align 8
  call void @free_candy_value(ptr %14879)
  %14880 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:52", align 8
  call void @free_candy_value(ptr %14880)
  %14881 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:60", align 8
  call void @free_candy_value(ptr %14881)
  %14882 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:62", align 8
  call void @free_candy_value(ptr %14882)
  %14883 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:64", align 8
  call void @free_candy_value(ptr %14883)
  %14884 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating, align 8
  call void @free_candy_value(ptr %14884)
  %14885 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_then, align 8
  call void @free_candy_value(ptr %14885)
  %14886 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then, align 8
  call void @free_candy_value(ptr %14886)
  %14887 = load ptr, ptr @240, align 8
  call void @free_candy_value(ptr %14887)
  %14888 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else, align 8
  call void @free_candy_value(ptr %14888)
  %14889 = load ptr, ptr @241, align 8
  call void @free_candy_value(ptr %14889)
  %14890 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then, align 8
  call void @free_candy_value(ptr %14890)
  %14891 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.1863, align 8
  call void @free_candy_value(ptr %14891)
  %14892 = load ptr, ptr @242, align 8
  call void @free_candy_value(ptr %14892)
  %14893 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.1865, align 8
  call void @free_candy_value(ptr %14893)
  %14894 = load ptr, ptr @243, align 8
  call void @free_candy_value(ptr %14894)
  %14895 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.1867, align 8
  call void @free_candy_value(ptr %14895)
  %14896 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.1869, align 8
  call void @free_candy_value(ptr %14896)
  %14897 = load ptr, ptr @244, align 8
  call void @free_candy_value(ptr %14897)
  %14898 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.1871, align 8
  call void @free_candy_value(ptr %14898)
  %14899 = load ptr, ptr @245, align 8
  call void @free_candy_value(ptr %14899)
  %14900 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.1873, align 8
  call void @free_candy_value(ptr %14900)
  %14901 = load ptr, ptr @246, align 8
  call void @free_candy_value(ptr %14901)
  %14902 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else, align 8
  call void @free_candy_value(ptr %14902)
  %14903 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1875, align 8
  call void @free_candy_value(ptr %14903)
  %14904 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1877, align 8
  call void @free_candy_value(ptr %14904)
  %14905 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_else, align 8
  call void @free_candy_value(ptr %14905)
  %14906 = load ptr, ptr @247, align 8
  call void @free_candy_value(ptr %14906)
  %14907 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1879, align 8
  call void @free_candy_value(ptr %14907)
  %14908 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:2", align 8
  call void @free_candy_value(ptr %14908)
  %14909 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:4", align 8
  call void @free_candy_value(ptr %14909)
  %14910 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:7", align 8
  call void @free_candy_value(ptr %14910)
  %14911 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:9", align 8
  call void @free_candy_value(ptr %14911)
  %14912 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:14", align 8
  call void @free_candy_value(ptr %14912)
  %14913 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  call void @free_candy_value(ptr %14913)
  %14914 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:20", align 8
  call void @free_candy_value(ptr %14914)
  %14915 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:28", align 8
  call void @free_candy_value(ptr %14915)
  %14916 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:29", align 8
  call void @free_candy_value(ptr %14916)
  %14917 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:37", align 8
  call void @free_candy_value(ptr %14917)
  %14918 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:41", align 8
  call void @free_candy_value(ptr %14918)
  %14919 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:42", align 8
  call void @free_candy_value(ptr %14919)
  %14920 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:valueA", align 8
  call void @free_candy_value(ptr %14920)
  %14921 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:valueB", align 8
  call void @free_candy_value(ptr %14921)
  %14922 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  call void @free_candy_value(ptr %14922)
  %14923 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:56", align 8
  call void @free_candy_value(ptr %14923)
  %14924 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:57", align 8
  call void @free_candy_value(ptr %14924)
  %14925 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:65", align 8
  call void @free_candy_value(ptr %14925)
  %14926 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:67", align 8
  call void @free_candy_value(ptr %14926)
  %14927 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:69", align 8
  call void @free_candy_value(ptr %14927)
  %14928 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale, align 8
  call void @free_candy_value(ptr %14928)
  %14929 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1881, align 8
  call void @free_candy_value(ptr %14929)
  %14930 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_then, align 8
  call void @free_candy_value(ptr %14930)
  %14931 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then, align 8
  call void @free_candy_value(ptr %14931)
  %14932 = load ptr, ptr @248, align 8
  call void @free_candy_value(ptr %14932)
  %14933 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else, align 8
  call void @free_candy_value(ptr %14933)
  %14934 = load ptr, ptr @249, align 8
  call void @free_candy_value(ptr %14934)
  %14935 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, align 8
  call void @free_candy_value(ptr %14935)
  %14936 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.1883, align 8
  call void @free_candy_value(ptr %14936)
  %14937 = load ptr, ptr @250, align 8
  call void @free_candy_value(ptr %14937)
  %14938 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.1885, align 8
  call void @free_candy_value(ptr %14938)
  %14939 = load ptr, ptr @251, align 8
  call void @free_candy_value(ptr %14939)
  %14940 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.1887, align 8
  call void @free_candy_value(ptr %14940)
  %14941 = load ptr, ptr @252, align 8
  call void @free_candy_value(ptr %14941)
  %14942 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else, align 8
  call void @free_candy_value(ptr %14942)
  %14943 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1889, align 8
  call void @free_candy_value(ptr %14943)
  %14944 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_else, align 8
  call void @free_candy_value(ptr %14944)
  %14945 = load ptr, ptr @253, align 8
  call void @free_candy_value(ptr %14945)
  %14946 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1891, align 8
  call void @free_candy_value(ptr %14946)
  %14947 = load ptr, ptr @"Core:fixedDecimal:compareTo:2", align 8
  call void @free_candy_value(ptr %14947)
  %14948 = load ptr, ptr @"Core:fixedDecimal:compareTo:4", align 8
  call void @free_candy_value(ptr %14948)
  %14949 = load ptr, ptr @"Core:fixedDecimal:compareTo:7", align 8
  call void @free_candy_value(ptr %14949)
  %14950 = load ptr, ptr @"Core:fixedDecimal:compareTo:9", align 8
  call void @free_candy_value(ptr %14950)
  %14951 = load ptr, ptr @"Core:fixedDecimal:compareTo:13", align 8
  call void @free_candy_value(ptr %14951)
  %14952 = load ptr, ptr @"Core:fixedDecimal:compareTo:14", align 8
  call void @free_candy_value(ptr %14952)
  %14953 = load ptr, ptr @"Core:fixedDecimal:compareTo:valueA#1", align 8
  call void @free_candy_value(ptr %14953)
  %14954 = load ptr, ptr @"Core:fixedDecimal:compareTo:valueB#1", align 8
  call void @free_candy_value(ptr %14954)
  %14955 = load ptr, ptr @"Core:fixedDecimal:compareTo:24", align 8
  call void @free_candy_value(ptr %14955)
  %14956 = load ptr, ptr @"Core:fixedDecimal:compareTo:26", align 8
  call void @free_candy_value(ptr %14956)
  %14957 = load ptr, ptr @"Core:fixedDecimal:compareTo:32", align 8
  call void @free_candy_value(ptr %14957)
  %14958 = load ptr, ptr @"Core:fixedDecimal:compareTo:40", align 8
  call void @free_candy_value(ptr %14958)
  %14959 = load ptr, ptr @"Core:fixedDecimal:compareTo:44", align 8
  call void @free_candy_value(ptr %14959)
  %14960 = load ptr, ptr @"Core:fixedDecimal:compareTo:45", align 8
  call void @free_candy_value(ptr %14960)
  %14961 = load ptr, ptr @"Core:fixedDecimal:compareTo:46", align 8
  call void @free_candy_value(ptr %14961)
  %14962 = load ptr, ptr @fun_Core_fixedDecimal_compareTo, align 8
  call void @free_candy_value(ptr %14962)
  %14963 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_equals_then, align 8
  call void @free_candy_value(ptr %14963)
  %14964 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then, align 8
  call void @free_candy_value(ptr %14964)
  %14965 = load ptr, ptr @254, align 8
  call void @free_candy_value(ptr %14965)
  %14966 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else, align 8
  call void @free_candy_value(ptr %14966)
  %14967 = load ptr, ptr @255, align 8
  call void @free_candy_value(ptr %14967)
  %14968 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then, align 8
  call void @free_candy_value(ptr %14968)
  %14969 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then.1893, align 8
  call void @free_candy_value(ptr %14969)
  %14970 = load ptr, ptr @256, align 8
  call void @free_candy_value(ptr %14970)
  %14971 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else.1895, align 8
  call void @free_candy_value(ptr %14971)
  %14972 = load ptr, ptr @257, align 8
  call void @free_candy_value(ptr %14972)
  %14973 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then.1897, align 8
  call void @free_candy_value(ptr %14973)
  %14974 = load ptr, ptr @258, align 8
  call void @free_candy_value(ptr %14974)
  %14975 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else, align 8
  call void @free_candy_value(ptr %14975)
  %14976 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.1899, align 8
  call void @free_candy_value(ptr %14976)
  %14977 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_equals_else, align 8
  call void @free_candy_value(ptr %14977)
  %14978 = load ptr, ptr @259, align 8
  call void @free_candy_value(ptr %14978)
  %14979 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.1901, align 8
  call void @free_candy_value(ptr %14979)
  %14980 = load ptr, ptr @"Core:fixedDecimal:isLessThan:2", align 8
  call void @free_candy_value(ptr %14980)
  %14981 = load ptr, ptr @"Core:fixedDecimal:isLessThan:4", align 8
  call void @free_candy_value(ptr %14981)
  %14982 = load ptr, ptr @"Core:fixedDecimal:isLessThan:7", align 8
  call void @free_candy_value(ptr %14982)
  %14983 = load ptr, ptr @"Core:fixedDecimal:isLessThan:9", align 8
  call void @free_candy_value(ptr %14983)
  %14984 = load ptr, ptr @"Core:fixedDecimal:isLessThan:14", align 8
  call void @free_candy_value(ptr %14984)
  %14985 = load ptr, ptr @"Core:fixedDecimal:isLessThan:16", align 8
  call void @free_candy_value(ptr %14985)
  %14986 = load ptr, ptr @fun_Core_fixedDecimal_isLessThan, align 8
  call void @free_candy_value(ptr %14986)
  %14987 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:2", align 8
  call void @free_candy_value(ptr %14987)
  %14988 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %14988)
  %14989 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:7", align 8
  call void @free_candy_value(ptr %14989)
  %14990 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %14990)
  %14991 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:14", align 8
  call void @free_candy_value(ptr %14991)
  %14992 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:16", align 8
  call void @free_candy_value(ptr %14992)
  %14993 = load ptr, ptr @fun_Core_fixedDecimal_isGreaterThan, align 8
  call void @free_candy_value(ptr %14993)
  %14994 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:2", align 8
  call void @free_candy_value(ptr %14994)
  %14995 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %14995)
  %14996 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:7", align 8
  call void @free_candy_value(ptr %14996)
  %14997 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %14997)
  %14998 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %14998)
  %14999 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:21", align 8
  call void @free_candy_value(ptr %14999)
  %15000 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %15000)
  %15001 = load ptr, ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %15001)
  %15002 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:2", align 8
  call void @free_candy_value(ptr %15002)
  %15003 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %15003)
  %15004 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:7", align 8
  call void @free_candy_value(ptr %15004)
  %15005 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %15005)
  %15006 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %15006)
  %15007 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:21", align 8
  call void @free_candy_value(ptr %15007)
  %15008 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %15008)
  %15009 = load ptr, ptr @fun_Core_fixedDecimal_isGreaterThanOrEqualTo, align 8
  call void @free_candy_value(ptr %15009)
  %15010 = load ptr, ptr @"Core:fixedDecimal:isPositive:2", align 8
  call void @free_candy_value(ptr %15010)
  %15011 = load ptr, ptr @"Core:fixedDecimal:isPositive:4", align 8
  call void @free_candy_value(ptr %15011)
  %15012 = load ptr, ptr @"Core:fixedDecimal:isPositive:7", align 8
  call void @free_candy_value(ptr %15012)
  %15013 = load ptr, ptr @"Core:fixedDecimal:isPositive:15", align 8
  call void @free_candy_value(ptr %15013)
  %15014 = load ptr, ptr @"Core:fixedDecimal:isPositive:17", align 8
  call void @free_candy_value(ptr %15014)
  %15015 = load ptr, ptr @fun_Core_fixedDecimal_isPositive, align 8
  call void @free_candy_value(ptr %15015)
  %15016 = load ptr, ptr @"Core:fixedDecimal:isNonPositive:2", align 8
  call void @free_candy_value(ptr %15016)
  %15017 = load ptr, ptr @"Core:fixedDecimal:isNonPositive:4", align 8
  call void @free_candy_value(ptr %15017)
  %15018 = load ptr, ptr @"Core:fixedDecimal:isNonPositive:7", align 8
  call void @free_candy_value(ptr %15018)
  %15019 = load ptr, ptr @"Core:fixedDecimal:isNonPositive:15", align 8
  call void @free_candy_value(ptr %15019)
  %15020 = load ptr, ptr @"Core:fixedDecimal:isNonPositive:16", align 8
  call void @free_candy_value(ptr %15020)
  %15021 = load ptr, ptr @fun_Core_fixedDecimal_isNonPositive, align 8
  call void @free_candy_value(ptr %15021)
  %15022 = load ptr, ptr @"Core:fixedDecimal:isNegative:2", align 8
  call void @free_candy_value(ptr %15022)
  %15023 = load ptr, ptr @"Core:fixedDecimal:isNegative:4", align 8
  call void @free_candy_value(ptr %15023)
  %15024 = load ptr, ptr @"Core:fixedDecimal:isNegative:7", align 8
  call void @free_candy_value(ptr %15024)
  %15025 = load ptr, ptr @"Core:fixedDecimal:isNegative:15", align 8
  call void @free_candy_value(ptr %15025)
  %15026 = load ptr, ptr @"Core:fixedDecimal:isNegative:17", align 8
  call void @free_candy_value(ptr %15026)
  %15027 = load ptr, ptr @fun_Core_fixedDecimal_isNegative, align 8
  call void @free_candy_value(ptr %15027)
  %15028 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:2", align 8
  call void @free_candy_value(ptr %15028)
  %15029 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:4", align 8
  call void @free_candy_value(ptr %15029)
  %15030 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  call void @free_candy_value(ptr %15030)
  %15031 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:15", align 8
  call void @free_candy_value(ptr %15031)
  %15032 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:16", align 8
  call void @free_candy_value(ptr %15032)
  %15033 = load ptr, ptr @fun_Core_fixedDecimal_isNonNegative, align 8
  call void @free_candy_value(ptr %15033)
  %15034 = load ptr, ptr @"Core:fixedDecimal:absolute:2", align 8
  call void @free_candy_value(ptr %15034)
  %15035 = load ptr, ptr @"Core:fixedDecimal:absolute:4", align 8
  call void @free_candy_value(ptr %15035)
  %15036 = load ptr, ptr @"Core:fixedDecimal:absolute:8", align 8
  call void @free_candy_value(ptr %15036)
  %15037 = load ptr, ptr @"Core:fixedDecimal:absolute:9:2", align 8
  call void @free_candy_value(ptr %15037)
  %15038 = load ptr, ptr @"Core:fixedDecimal:absolute:11", align 8
  call void @free_candy_value(ptr %15038)
  %15039 = load ptr, ptr @fun_Core_fixedDecimal_absolute, align 8
  call void @free_candy_value(ptr %15039)
  %15040 = load ptr, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  call void @free_candy_value(ptr %15040)
  %15041 = load ptr, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  call void @free_candy_value(ptr %15041)
  %15042 = load ptr, ptr @"Core:fixedDecimal:approxEquals:2", align 8
  call void @free_candy_value(ptr %15042)
  %15043 = load ptr, ptr @"Core:fixedDecimal:approxEquals:4", align 8
  call void @free_candy_value(ptr %15043)
  %15044 = load ptr, ptr @"Core:fixedDecimal:approxEquals:7", align 8
  call void @free_candy_value(ptr %15044)
  %15045 = load ptr, ptr @"Core:fixedDecimal:approxEquals:9", align 8
  call void @free_candy_value(ptr %15045)
  %15046 = load ptr, ptr @"Core:fixedDecimal:approxEquals:12", align 8
  call void @free_candy_value(ptr %15046)
  %15047 = load ptr, ptr @"text_`is delta` was not satisfied", align 8
  call void @free_candy_value(ptr %15047)
  %15048 = load ptr, ptr @"Core:fixedDecimal:approxEquals:14", align 8
  call void @free_candy_value(ptr %15048)
  %15049 = load ptr, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  call void @free_candy_value(ptr %15049)
  %15050 = load ptr, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  call void @free_candy_value(ptr %15050)
  %15051 = load ptr, ptr @"Core:fixedDecimal:approxEquals:19", align 8
  call void @free_candy_value(ptr %15051)
  %15052 = load ptr, ptr @"Core:fixedDecimal:approxEquals:23", align 8
  call void @free_candy_value(ptr %15052)
  %15053 = load ptr, ptr @"Core:fixedDecimal:approxEquals:25", align 8
  call void @free_candy_value(ptr %15053)
  %15054 = load ptr, ptr @"Core:fixedDecimal:approxEquals:28", align 8
  call void @free_candy_value(ptr %15054)
  %15055 = load ptr, ptr @fun_Core_fixedDecimal_approxEquals, align 8
  call void @free_candy_value(ptr %15055)
  %15056 = load ptr, ptr @"Core:fixedDecimal:min:2", align 8
  call void @free_candy_value(ptr %15056)
  %15057 = load ptr, ptr @"Core:fixedDecimal:min:4", align 8
  call void @free_candy_value(ptr %15057)
  %15058 = load ptr, ptr @"Core:fixedDecimal:min:7", align 8
  call void @free_candy_value(ptr %15058)
  %15059 = load ptr, ptr @"Core:fixedDecimal:min:9", align 8
  call void @free_candy_value(ptr %15059)
  %15060 = load ptr, ptr @"Core:fixedDecimal:min:14", align 8
  call void @free_candy_value(ptr %15060)
  %15061 = load ptr, ptr @"Core:fixedDecimal:min:17", align 8
  call void @free_candy_value(ptr %15061)
  %15062 = load ptr, ptr @fun_Core_fixedDecimal_min, align 8
  call void @free_candy_value(ptr %15062)
  %15063 = load ptr, ptr @fun_Core_fixedDecimal_min_15, align 8
  call void @free_candy_value(ptr %15063)
  %15064 = load ptr, ptr @fun_Core_fixedDecimal_min_16, align 8
  call void @free_candy_value(ptr %15064)
  %15065 = load ptr, ptr @"Core:fixedDecimal:max:2", align 8
  call void @free_candy_value(ptr %15065)
  %15066 = load ptr, ptr @"Core:fixedDecimal:max:4", align 8
  call void @free_candy_value(ptr %15066)
  %15067 = load ptr, ptr @"Core:fixedDecimal:max:7", align 8
  call void @free_candy_value(ptr %15067)
  %15068 = load ptr, ptr @"Core:fixedDecimal:max:9", align 8
  call void @free_candy_value(ptr %15068)
  %15069 = load ptr, ptr @"Core:fixedDecimal:max:14", align 8
  call void @free_candy_value(ptr %15069)
  %15070 = load ptr, ptr @"Core:fixedDecimal:max:17", align 8
  call void @free_candy_value(ptr %15070)
  %15071 = load ptr, ptr @fun_Core_fixedDecimal_max, align 8
  call void @free_candy_value(ptr %15071)
  %15072 = load ptr, ptr @fun_Core_fixedDecimal_max_15, align 8
  call void @free_candy_value(ptr %15072)
  %15073 = load ptr, ptr @fun_Core_fixedDecimal_max_16, align 8
  call void @free_candy_value(ptr %15073)
  %15074 = load ptr, ptr @"Core:fixedDecimal:coerceAtLeast:2", align 8
  call void @free_candy_value(ptr %15074)
  %15075 = load ptr, ptr @"Core:fixedDecimal:coerceAtLeast:4", align 8
  call void @free_candy_value(ptr %15075)
  %15076 = load ptr, ptr @"Core:fixedDecimal:coerceAtLeast:7", align 8
  call void @free_candy_value(ptr %15076)
  %15077 = load ptr, ptr @"Core:fixedDecimal:coerceAtLeast:9", align 8
  call void @free_candy_value(ptr %15077)
  %15078 = load ptr, ptr @"Core:fixedDecimal:coerceAtLeast:13", align 8
  call void @free_candy_value(ptr %15078)
  %15079 = load ptr, ptr @fun_Core_fixedDecimal_coerceAtLeast, align 8
  call void @free_candy_value(ptr %15079)
  %15080 = load ptr, ptr @"Core:fixedDecimal:coerceAtMost:2", align 8
  call void @free_candy_value(ptr %15080)
  %15081 = load ptr, ptr @"Core:fixedDecimal:coerceAtMost:4", align 8
  call void @free_candy_value(ptr %15081)
  %15082 = load ptr, ptr @"Core:fixedDecimal:coerceAtMost:7", align 8
  call void @free_candy_value(ptr %15082)
  %15083 = load ptr, ptr @"Core:fixedDecimal:coerceAtMost:9", align 8
  call void @free_candy_value(ptr %15083)
  %15084 = load ptr, ptr @"Core:fixedDecimal:coerceAtMost:13", align 8
  call void @free_candy_value(ptr %15084)
  %15085 = load ptr, ptr @fun_Core_fixedDecimal_coerceAtMost, align 8
  call void @free_candy_value(ptr %15085)
  %15086 = load ptr, ptr @"Core:fixedDecimal:coerceIn:2", align 8
  call void @free_candy_value(ptr %15086)
  %15087 = load ptr, ptr @"Core:fixedDecimal:coerceIn:4", align 8
  call void @free_candy_value(ptr %15087)
  %15088 = load ptr, ptr @"Core:fixedDecimal:coerceIn:7", align 8
  call void @free_candy_value(ptr %15088)
  %15089 = load ptr, ptr @"Core:fixedDecimal:coerceIn:9", align 8
  call void @free_candy_value(ptr %15089)
  %15090 = load ptr, ptr @"Core:fixedDecimal:coerceIn:12", align 8
  call void @free_candy_value(ptr %15090)
  %15091 = load ptr, ptr @"Core:fixedDecimal:coerceIn:14", align 8
  call void @free_candy_value(ptr %15091)
  %15092 = load ptr, ptr @"Core:fixedDecimal:coerceIn:18", align 8
  call void @free_candy_value(ptr %15092)
  %15093 = load ptr, ptr @"Core:fixedDecimal:coerceIn:20", align 8
  call void @free_candy_value(ptr %15093)
  %15094 = load ptr, ptr @"Core:fixedDecimal:coerceIn:24", align 8
  call void @free_candy_value(ptr %15094)
  %15095 = load ptr, ptr @"Core:fixedDecimal:coerceIn:27", align 8
  call void @free_candy_value(ptr %15095)
  %15096 = load ptr, ptr @fun_Core_fixedDecimal_coerceIn, align 8
  call void @free_candy_value(ptr %15096)
  %15097 = load ptr, ptr @"Core:fixedDecimal:toText:2", align 8
  call void @free_candy_value(ptr %15097)
  %15098 = load ptr, ptr @"Core:fixedDecimal:toText:4", align 8
  call void @free_candy_value(ptr %15098)
  %15099 = load ptr, ptr @"Core:fixedDecimal:toText:7", align 8
  call void @free_candy_value(ptr %15099)
  %15100 = load ptr, ptr @"Core:fixedDecimal:toText:10:2", align 8
  call void @free_candy_value(ptr %15100)
  %15101 = load ptr, ptr @"Core:fixedDecimal:toText:10:4", align 8
  call void @free_candy_value(ptr %15101)
  %15102 = load ptr, ptr @"Core:fixedDecimal:toText:10:8", align 8
  call void @free_candy_value(ptr %15102)
  %15103 = load ptr, ptr @"Core:fixedDecimal:toText:10:16", align 8
  call void @free_candy_value(ptr %15103)
  %15104 = load ptr, ptr @"Core:fixedDecimal:toText:10:18", align 8
  call void @free_candy_value(ptr %15104)
  %15105 = load ptr, ptr @"Core:fixedDecimal:toText:10:28", align 8
  call void @free_candy_value(ptr %15105)
  %15106 = load ptr, ptr @"Core:fixedDecimal:toText:10:30", align 8
  call void @free_candy_value(ptr %15106)
  %15107 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:8", align 8
  call void @free_candy_value(ptr %15107)
  %15108 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  call void @free_candy_value(ptr %15108)
  %15109 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:20", align 8
  call void @free_candy_value(ptr %15109)
  %15110 = load ptr, ptr @text_1, align 8
  call void @free_candy_value(ptr %15110)
  %15111 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:28", align 8
  call void @free_candy_value(ptr %15111)
  %15112 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:8", align 8
  call void @free_candy_value(ptr %15112)
  %15113 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  call void @free_candy_value(ptr %15113)
  %15114 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:20", align 8
  call void @free_candy_value(ptr %15114)
  %15115 = load ptr, ptr @text_-1, align 8
  call void @free_candy_value(ptr %15115)
  %15116 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:28", align 8
  call void @free_candy_value(ptr %15116)
  %15117 = load ptr, ptr @"Core:fixedDecimal:toText:10:33", align 8
  call void @free_candy_value(ptr %15117)
  %15118 = load ptr, ptr @"Core:fixedDecimal:toText:11", align 8
  call void @free_candy_value(ptr %15118)
  %15119 = load ptr, ptr @"Core:fixedDecimal:toText:20", align 8
  call void @free_candy_value(ptr %15119)
  %15120 = load ptr, ptr @"Core:fixedDecimal:toText:21", align 8
  call void @free_candy_value(ptr %15120)
  %15121 = load ptr, ptr @"Core:fixedDecimal:toText:23:0", align 8
  call void @free_candy_value(ptr %15121)
  %15122 = load ptr, ptr @"Core:fixedDecimal:toText:24", align 8
  call void @free_candy_value(ptr %15122)
  %15123 = load ptr, ptr @"Core:fixedDecimal:toText:27", align 8
  call void @free_candy_value(ptr %15123)
  %15124 = load ptr, ptr @"Core:fixedDecimal:toText:28", align 8
  call void @free_candy_value(ptr %15124)
  %15125 = load ptr, ptr @"Core:fixedDecimal:toText:30:0", align 8
  call void @free_candy_value(ptr %15125)
  %15126 = load ptr, ptr @"Core:fixedDecimal:toText:31", align 8
  call void @free_candy_value(ptr %15126)
  %15127 = load ptr, ptr @"Core:fixedDecimal:toText:32", align 8
  call void @free_candy_value(ptr %15127)
  %15128 = load ptr, ptr @"Core:fixedDecimal:toText:33", align 8
  call void @free_candy_value(ptr %15128)
  %15129 = load ptr, ptr @fun_Core_fixedDecimal_toText, align 8
  call void @free_candy_value(ptr %15129)
  %15130 = load ptr, ptr @fun_Core_fixedDecimal_toText_10, align 8
  call void @free_candy_value(ptr %15130)
  %15131 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  call void @free_candy_value(ptr %15131)
  %15132 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  call void @free_candy_value(ptr %15132)
  %15133 = load ptr, ptr @fun_Core_fixedDecimal_toText_22, align 8
  call void @free_candy_value(ptr %15133)
  %15134 = load ptr, ptr @fun_Core_fixedDecimal_toText_23, align 8
  call void @free_candy_value(ptr %15134)
  %15135 = load ptr, ptr @fun_Core_fixedDecimal_toText_29, align 8
  call void @free_candy_value(ptr %15135)
  %15136 = load ptr, ptr @fun_Core_fixedDecimal_toText_30, align 8
  call void @free_candy_value(ptr %15136)
  %15137 = load ptr, ptr @tag_FromIntScaled, align 8
  call void @free_candy_value(ptr %15137)
  %15138 = load ptr, ptr @tag_ToText, align 8
  call void @free_candy_value(ptr %15138)
  %15139 = load ptr, ptr @tag_Rescale, align 8
  call void @free_candy_value(ptr %15139)
  %15140 = load ptr, ptr @tag_DivideTruncatingAtScale, align 8
  call void @free_candy_value(ptr %15140)
  %15141 = load ptr, ptr @tag_FloorToInt, align 8
  call void @free_candy_value(ptr %15141)
  %15142 = load ptr, ptr @tag_ApproxEquals, align 8
  call void @free_candy_value(ptr %15142)
  %15143 = load ptr, ptr @tag_FromInt, align 8
  call void @free_candy_value(ptr %15143)
  %15144 = load ptr, ptr @fun_Core_type_is.1903, align 8
  call void @free_candy_value(ptr %15144)
  %15145 = load ptr, ptr @fun_Core_function_is.1905, align 8
  call void @free_candy_value(ptr %15145)
  %15146 = load ptr, ptr @fun_Core_function_is0.1907, align 8
  call void @free_candy_value(ptr %15146)
  %15147 = load ptr, ptr @fun_Core_function_is0_11.1909, align 8
  call void @free_candy_value(ptr %15147)
  %15148 = load ptr, ptr @fun_Core_function_is1.1911, align 8
  call void @free_candy_value(ptr %15148)
  %15149 = load ptr, ptr @fun_Core_function_is1_11.1913, align 8
  call void @free_candy_value(ptr %15149)
  %15150 = load ptr, ptr @fun_Core_function_is2.1915, align 8
  call void @free_candy_value(ptr %15150)
  %15151 = load ptr, ptr @fun_Core_function_is2_11.1917, align 8
  call void @free_candy_value(ptr %15151)
  %15152 = load ptr, ptr @fun_Core_function_is3.1919, align 8
  call void @free_candy_value(ptr %15152)
  %15153 = load ptr, ptr @fun_Core_function_is3_11.1921, align 8
  call void @free_candy_value(ptr %15153)
  %15154 = load ptr, ptr @fun_Core_function_is4.1923, align 8
  call void @free_candy_value(ptr %15154)
  %15155 = load ptr, ptr @fun_Core_function_is4_11.1925, align 8
  call void @free_candy_value(ptr %15155)
  %15156 = load ptr, ptr @fun_Core_function_is5.1927, align 8
  call void @free_candy_value(ptr %15156)
  %15157 = load ptr, ptr @fun_Core_function_is5_11.1929, align 8
  call void @free_candy_value(ptr %15157)
  %15158 = load ptr, ptr @fun_Core_function_run.1931, align 8
  call void @free_candy_value(ptr %15158)
  %15159 = load ptr, ptr @fun_Core_function_is0_11.1933, align 8
  call void @free_candy_value(ptr %15159)
  %15160 = load ptr, ptr @fun_Core_function_doNotRun.1935, align 8
  call void @free_candy_value(ptr %15160)
  %15161 = load ptr, ptr @fun_Core_function_is0_11.1937, align 8
  call void @free_candy_value(ptr %15161)
  %15162 = load ptr, ptr @fun_Core_bool_lazyAnd.1939, align 8
  call void @free_candy_value(ptr %15162)
  %15163 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1941, align 8
  call void @free_candy_value(ptr %15163)
  %15164 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1943, align 8
  call void @free_candy_value(ptr %15164)
  %15165 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1945, align 8
  call void @free_candy_value(ptr %15165)
  %15166 = load ptr, ptr @260, align 8
  call void @free_candy_value(ptr %15166)
  %15167 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1947, align 8
  call void @free_candy_value(ptr %15167)
  %15168 = load ptr, ptr @261, align 8
  call void @free_candy_value(ptr %15168)
  %15169 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1949, align 8
  call void @free_candy_value(ptr %15169)
  %15170 = load ptr, ptr @262, align 8
  call void @free_candy_value(ptr %15170)
  %15171 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1951, align 8
  call void @free_candy_value(ptr %15171)
  %15172 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1953, align 8
  call void @free_candy_value(ptr %15172)
  %15173 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1955, align 8
  call void @free_candy_value(ptr %15173)
  %15174 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1957, align 8
  call void @free_candy_value(ptr %15174)
  %15175 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1959, align 8
  call void @free_candy_value(ptr %15175)
  %15176 = load ptr, ptr @263, align 8
  call void @free_candy_value(ptr %15176)
  %15177 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1961, align 8
  call void @free_candy_value(ptr %15177)
  %15178 = load ptr, ptr @264, align 8
  call void @free_candy_value(ptr %15178)
  %15179 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1963, align 8
  call void @free_candy_value(ptr %15179)
  %15180 = load ptr, ptr @265, align 8
  call void @free_candy_value(ptr %15180)
  %15181 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1965, align 8
  call void @free_candy_value(ptr %15181)
  %15182 = load ptr, ptr @fun_Core_bool_and.1967, align 8
  call void @free_candy_value(ptr %15182)
  %15183 = load ptr, ptr @fun_Core_bool_and_12.1969, align 8
  call void @free_candy_value(ptr %15183)
  %15184 = load ptr, ptr @fun_Core_bool_lazyOr.1971, align 8
  call void @free_candy_value(ptr %15184)
  %15185 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1973, align 8
  call void @free_candy_value(ptr %15185)
  %15186 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1975, align 8
  call void @free_candy_value(ptr %15186)
  %15187 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1977, align 8
  call void @free_candy_value(ptr %15187)
  %15188 = load ptr, ptr @266, align 8
  call void @free_candy_value(ptr %15188)
  %15189 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1979, align 8
  call void @free_candy_value(ptr %15189)
  %15190 = load ptr, ptr @267, align 8
  call void @free_candy_value(ptr %15190)
  %15191 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1981, align 8
  call void @free_candy_value(ptr %15191)
  %15192 = load ptr, ptr @268, align 8
  call void @free_candy_value(ptr %15192)
  %15193 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1983, align 8
  call void @free_candy_value(ptr %15193)
  %15194 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1985, align 8
  call void @free_candy_value(ptr %15194)
  %15195 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1987, align 8
  call void @free_candy_value(ptr %15195)
  %15196 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1989, align 8
  call void @free_candy_value(ptr %15196)
  %15197 = load ptr, ptr @269, align 8
  call void @free_candy_value(ptr %15197)
  %15198 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1991, align 8
  call void @free_candy_value(ptr %15198)
  %15199 = load ptr, ptr @270, align 8
  call void @free_candy_value(ptr %15199)
  %15200 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1993, align 8
  call void @free_candy_value(ptr %15200)
  %15201 = load ptr, ptr @271, align 8
  call void @free_candy_value(ptr %15201)
  %15202 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1995, align 8
  call void @free_candy_value(ptr %15202)
  %15203 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1997, align 8
  call void @free_candy_value(ptr %15203)
  %15204 = load ptr, ptr @fun_Core_bool_or.1999, align 8
  call void @free_candy_value(ptr %15204)
  %15205 = load ptr, ptr @fun_Core_bool_or_12.2001, align 8
  call void @free_candy_value(ptr %15205)
  %15206 = load ptr, ptr @fun_Core_bool_xor.2003, align 8
  call void @free_candy_value(ptr %15206)
  %15207 = load ptr, ptr @fun_Core_bool_implies.2005, align 8
  call void @free_candy_value(ptr %15207)
  %15208 = load ptr, ptr @fun_Core_bool_or_12.2007, align 8
  call void @free_candy_value(ptr %15208)
  %15209 = load ptr, ptr @fun_Core_type_is.2009, align 8
  call void @free_candy_value(ptr %15209)
  %15210 = load ptr, ptr @fun_Core_function_is.2011, align 8
  call void @free_candy_value(ptr %15210)
  %15211 = load ptr, ptr @fun_Core_function_is0.2013, align 8
  call void @free_candy_value(ptr %15211)
  %15212 = load ptr, ptr @fun_Core_function_is0_11.2015, align 8
  call void @free_candy_value(ptr %15212)
  %15213 = load ptr, ptr @fun_Core_function_is1.2017, align 8
  call void @free_candy_value(ptr %15213)
  %15214 = load ptr, ptr @fun_Core_function_is1_11.2019, align 8
  call void @free_candy_value(ptr %15214)
  %15215 = load ptr, ptr @fun_Core_function_is2.2021, align 8
  call void @free_candy_value(ptr %15215)
  %15216 = load ptr, ptr @fun_Core_function_is2_11.2023, align 8
  call void @free_candy_value(ptr %15216)
  %15217 = load ptr, ptr @fun_Core_function_is3.2025, align 8
  call void @free_candy_value(ptr %15217)
  %15218 = load ptr, ptr @fun_Core_function_is3_11.2027, align 8
  call void @free_candy_value(ptr %15218)
  %15219 = load ptr, ptr @fun_Core_function_is4.2029, align 8
  call void @free_candy_value(ptr %15219)
  %15220 = load ptr, ptr @fun_Core_function_is4_11.2031, align 8
  call void @free_candy_value(ptr %15220)
  %15221 = load ptr, ptr @fun_Core_function_is5.2033, align 8
  call void @free_candy_value(ptr %15221)
  %15222 = load ptr, ptr @fun_Core_function_is5_11.2035, align 8
  call void @free_candy_value(ptr %15222)
  %15223 = load ptr, ptr @fun_Core_function_run.2037, align 8
  call void @free_candy_value(ptr %15223)
  %15224 = load ptr, ptr @fun_Core_function_is0_11.2039, align 8
  call void @free_candy_value(ptr %15224)
  %15225 = load ptr, ptr @fun_Core_function_doNotRun.2041, align 8
  call void @free_candy_value(ptr %15225)
  %15226 = load ptr, ptr @fun_Core_function_is0_11.2043, align 8
  call void @free_candy_value(ptr %15226)
  %15227 = load ptr, ptr @fun_Core_bool_lazyAnd.2045, align 8
  call void @free_candy_value(ptr %15227)
  %15228 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.2047, align 8
  call void @free_candy_value(ptr %15228)
  %15229 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.2049, align 8
  call void @free_candy_value(ptr %15229)
  %15230 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2051, align 8
  call void @free_candy_value(ptr %15230)
  %15231 = load ptr, ptr @272, align 8
  call void @free_candy_value(ptr %15231)
  %15232 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2053, align 8
  call void @free_candy_value(ptr %15232)
  %15233 = load ptr, ptr @273, align 8
  call void @free_candy_value(ptr %15233)
  %15234 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2055, align 8
  call void @free_candy_value(ptr %15234)
  %15235 = load ptr, ptr @274, align 8
  call void @free_candy_value(ptr %15235)
  %15236 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.2057, align 8
  call void @free_candy_value(ptr %15236)
  %15237 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.2059, align 8
  call void @free_candy_value(ptr %15237)
  %15238 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.2061, align 8
  call void @free_candy_value(ptr %15238)
  %15239 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.2063, align 8
  call void @free_candy_value(ptr %15239)
  %15240 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2065, align 8
  call void @free_candy_value(ptr %15240)
  %15241 = load ptr, ptr @275, align 8
  call void @free_candy_value(ptr %15241)
  %15242 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2067, align 8
  call void @free_candy_value(ptr %15242)
  %15243 = load ptr, ptr @276, align 8
  call void @free_candy_value(ptr %15243)
  %15244 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2069, align 8
  call void @free_candy_value(ptr %15244)
  %15245 = load ptr, ptr @277, align 8
  call void @free_candy_value(ptr %15245)
  %15246 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.2071, align 8
  call void @free_candy_value(ptr %15246)
  %15247 = load ptr, ptr @fun_Core_bool_and.2073, align 8
  call void @free_candy_value(ptr %15247)
  %15248 = load ptr, ptr @fun_Core_bool_and_12.2075, align 8
  call void @free_candy_value(ptr %15248)
  %15249 = load ptr, ptr @fun_Core_bool_lazyOr.2077, align 8
  call void @free_candy_value(ptr %15249)
  %15250 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.2079, align 8
  call void @free_candy_value(ptr %15250)
  %15251 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.2081, align 8
  call void @free_candy_value(ptr %15251)
  %15252 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2083, align 8
  call void @free_candy_value(ptr %15252)
  %15253 = load ptr, ptr @278, align 8
  call void @free_candy_value(ptr %15253)
  %15254 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2085, align 8
  call void @free_candy_value(ptr %15254)
  %15255 = load ptr, ptr @279, align 8
  call void @free_candy_value(ptr %15255)
  %15256 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2087, align 8
  call void @free_candy_value(ptr %15256)
  %15257 = load ptr, ptr @280, align 8
  call void @free_candy_value(ptr %15257)
  %15258 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.2089, align 8
  call void @free_candy_value(ptr %15258)
  %15259 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.2091, align 8
  call void @free_candy_value(ptr %15259)
  %15260 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.2093, align 8
  call void @free_candy_value(ptr %15260)
  %15261 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2095, align 8
  call void @free_candy_value(ptr %15261)
  %15262 = load ptr, ptr @281, align 8
  call void @free_candy_value(ptr %15262)
  %15263 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2097, align 8
  call void @free_candy_value(ptr %15263)
  %15264 = load ptr, ptr @282, align 8
  call void @free_candy_value(ptr %15264)
  %15265 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2099, align 8
  call void @free_candy_value(ptr %15265)
  %15266 = load ptr, ptr @283, align 8
  call void @free_candy_value(ptr %15266)
  %15267 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.2101, align 8
  call void @free_candy_value(ptr %15267)
  %15268 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.2103, align 8
  call void @free_candy_value(ptr %15268)
  %15269 = load ptr, ptr @fun_Core_bool_or.2105, align 8
  call void @free_candy_value(ptr %15269)
  %15270 = load ptr, ptr @fun_Core_bool_or_12.2107, align 8
  call void @free_candy_value(ptr %15270)
  %15271 = load ptr, ptr @fun_Core_bool_xor.2109, align 8
  call void @free_candy_value(ptr %15271)
  %15272 = load ptr, ptr @fun_Core_bool_implies.2111, align 8
  call void @free_candy_value(ptr %15272)
  %15273 = load ptr, ptr @fun_Core_bool_or_12.2113, align 8
  call void @free_candy_value(ptr %15273)
  %15274 = load ptr, ptr @fun_Core_check_check.2115, align 8
  call void @free_candy_value(ptr %15274)
  %15275 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.2117", align 8
  call void @free_candy_value(ptr %15275)
  %15276 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.2119", align 8
  call void @free_candy_value(ptr %15276)
  %15277 = load ptr, ptr @fun_Core_type_is.2121, align 8
  call void @free_candy_value(ptr %15277)
  %15278 = load ptr, ptr @fun_Core_function_is.2123, align 8
  call void @free_candy_value(ptr %15278)
  %15279 = load ptr, ptr @fun_Core_function_is0.2125, align 8
  call void @free_candy_value(ptr %15279)
  %15280 = load ptr, ptr @fun_Core_function_is0_11.2127, align 8
  call void @free_candy_value(ptr %15280)
  %15281 = load ptr, ptr @fun_Core_function_is1.2129, align 8
  call void @free_candy_value(ptr %15281)
  %15282 = load ptr, ptr @fun_Core_function_is1_11.2131, align 8
  call void @free_candy_value(ptr %15282)
  %15283 = load ptr, ptr @fun_Core_function_is2.2133, align 8
  call void @free_candy_value(ptr %15283)
  %15284 = load ptr, ptr @fun_Core_function_is2_11.2135, align 8
  call void @free_candy_value(ptr %15284)
  %15285 = load ptr, ptr @fun_Core_function_is3.2137, align 8
  call void @free_candy_value(ptr %15285)
  %15286 = load ptr, ptr @fun_Core_function_is3_11.2139, align 8
  call void @free_candy_value(ptr %15286)
  %15287 = load ptr, ptr @fun_Core_function_is4.2141, align 8
  call void @free_candy_value(ptr %15287)
  %15288 = load ptr, ptr @fun_Core_function_is4_11.2143, align 8
  call void @free_candy_value(ptr %15288)
  %15289 = load ptr, ptr @fun_Core_function_is5.2145, align 8
  call void @free_candy_value(ptr %15289)
  %15290 = load ptr, ptr @fun_Core_function_is5_11.2147, align 8
  call void @free_candy_value(ptr %15290)
  %15291 = load ptr, ptr @fun_Core_function_run.2149, align 8
  call void @free_candy_value(ptr %15291)
  %15292 = load ptr, ptr @fun_Core_function_is0_11.2151, align 8
  call void @free_candy_value(ptr %15292)
  %15293 = load ptr, ptr @fun_Core_function_doNotRun.2153, align 8
  call void @free_candy_value(ptr %15293)
  %15294 = load ptr, ptr @fun_Core_function_is0_11.2155, align 8
  call void @free_candy_value(ptr %15294)
  %15295 = load ptr, ptr @fun_Core_controlFlow_recursive.2157, align 8
  call void @free_candy_value(ptr %15295)
  %15296 = load ptr, ptr @fun_Core_controlFlow_recursive_18.2159, align 8
  call void @free_candy_value(ptr %15296)
  %15297 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.2161, align 8
  call void @free_candy_value(ptr %15297)
  %15298 = load ptr, ptr @fun_Core_type_is.2163, align 8
  call void @free_candy_value(ptr %15298)
  %15299 = load ptr, ptr @fun_Core_int_is.2165, align 8
  call void @free_candy_value(ptr %15299)
  %15300 = load ptr, ptr @fun_Core_int_negate.2167, align 8
  call void @free_candy_value(ptr %15300)
  %15301 = load ptr, ptr @fun_Core_int_compareTo.2169, align 8
  call void @free_candy_value(ptr %15301)
  %15302 = load ptr, ptr @fun_Core_int_isLessThan.2171, align 8
  call void @free_candy_value(ptr %15302)
  %15303 = load ptr, ptr @fun_Core_int_isGreaterThan.2173, align 8
  call void @free_candy_value(ptr %15303)
  %15304 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo.2175, align 8
  call void @free_candy_value(ptr %15304)
  %15305 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo.2177, align 8
  call void @free_candy_value(ptr %15305)
  %15306 = load ptr, ptr @fun_Core_int_isPositive.2179, align 8
  call void @free_candy_value(ptr %15306)
  %15307 = load ptr, ptr @fun_Core_int_isNonPositive.2181, align 8
  call void @free_candy_value(ptr %15307)
  %15308 = load ptr, ptr @fun_Core_int_isNegative.2183, align 8
  call void @free_candy_value(ptr %15308)
  %15309 = load ptr, ptr @fun_Core_int_isNonNegative.2185, align 8
  call void @free_candy_value(ptr %15309)
  %15310 = load ptr, ptr @fun_Core_int_absolute.2187, align 8
  call void @free_candy_value(ptr %15310)
  %15311 = load ptr, ptr @fun_Core_int_absolute_9.2189, align 8
  call void @free_candy_value(ptr %15311)
  %15312 = load ptr, ptr @fun_Core_int_absolute_10.2191, align 8
  call void @free_candy_value(ptr %15312)
  %15313 = load ptr, ptr @fun_Core_int_fitsInRustU32.2193, align 8
  call void @free_candy_value(ptr %15313)
  %15314 = load ptr, ptr @fun_Core_int_fitsInRustU128.2195, align 8
  call void @free_candy_value(ptr %15314)
  %15315 = load ptr, ptr @fun_Core_int_isEven.2197, align 8
  call void @free_candy_value(ptr %15315)
  %15316 = load ptr, ptr @fun_Core_int_isOdd.2199, align 8
  call void @free_candy_value(ptr %15316)
  %15317 = load ptr, ptr @fun_Core_int_min.2201, align 8
  call void @free_candy_value(ptr %15317)
  %15318 = load ptr, ptr @fun_Core_int_min_15.2203, align 8
  call void @free_candy_value(ptr %15318)
  %15319 = load ptr, ptr @fun_Core_int_min_16.2205, align 8
  call void @free_candy_value(ptr %15319)
  %15320 = load ptr, ptr @fun_Core_int_max.2207, align 8
  call void @free_candy_value(ptr %15320)
  %15321 = load ptr, ptr @fun_Core_int_max_15.2209, align 8
  call void @free_candy_value(ptr %15321)
  %15322 = load ptr, ptr @fun_Core_int_max_16.2211, align 8
  call void @free_candy_value(ptr %15322)
  %15323 = load ptr, ptr @fun_Core_int_coerceAtLeast.2213, align 8
  call void @free_candy_value(ptr %15323)
  %15324 = load ptr, ptr @fun_Core_int_coerceAtMost.2215, align 8
  call void @free_candy_value(ptr %15324)
  %15325 = load ptr, ptr @fun_Core_int_coerceIn.2217, align 8
  call void @free_candy_value(ptr %15325)
  %15326 = load ptr, ptr @fun_Core_int_pow.2219, align 8
  call void @free_candy_value(ptr %15326)
  %15327 = load ptr, ptr @fun_Core_int_pow_21.2221, align 8
  call void @free_candy_value(ptr %15327)
  %15328 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then.2223, align 8
  call void @free_candy_value(ptr %15328)
  %15329 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.2225, align 8
  call void @free_candy_value(ptr %15329)
  %15330 = load ptr, ptr @284, align 8
  call void @free_candy_value(ptr %15330)
  %15331 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.2227, align 8
  call void @free_candy_value(ptr %15331)
  %15332 = load ptr, ptr @285, align 8
  call void @free_candy_value(ptr %15332)
  %15333 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.2229, align 8
  call void @free_candy_value(ptr %15333)
  %15334 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.2231, align 8
  call void @free_candy_value(ptr %15334)
  %15335 = load ptr, ptr @286, align 8
  call void @free_candy_value(ptr %15335)
  %15336 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.2233, align 8
  call void @free_candy_value(ptr %15336)
  %15337 = load ptr, ptr @287, align 8
  call void @free_candy_value(ptr %15337)
  %15338 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.2235, align 8
  call void @free_candy_value(ptr %15338)
  %15339 = load ptr, ptr @288, align 8
  call void @free_candy_value(ptr %15339)
  %15340 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.2237, align 8
  call void @free_candy_value(ptr %15340)
  %15341 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.2239, align 8
  call void @free_candy_value(ptr %15341)
  %15342 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else.2241, align 8
  call void @free_candy_value(ptr %15342)
  %15343 = load ptr, ptr @289, align 8
  call void @free_candy_value(ptr %15343)
  %15344 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.2243, align 8
  call void @free_candy_value(ptr %15344)
  %15345 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else.2245, align 8
  call void @free_candy_value(ptr %15345)
  %15346 = load ptr, ptr @290, align 8
  call void @free_candy_value(ptr %15346)
  %15347 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.2247, align 8
  call void @free_candy_value(ptr %15347)
  %15348 = load ptr, ptr @fun_Core_int_pow_21_4_case-1_matched.2249, align 8
  call void @free_candy_value(ptr %15348)
  %15349 = load ptr, ptr @fun_Core_int_pow_21_4_5.2251, align 8
  call void @free_candy_value(ptr %15349)
  %15350 = load ptr, ptr @fun_Core_int_pow_21_4_6.2253, align 8
  call void @free_candy_value(ptr %15350)
  %15351 = load ptr, ptr @"Examples:sqrt:sqrt:7", align 8
  call void @free_candy_value(ptr %15351)
  %15352 = load ptr, ptr @"Examples:sqrt:sqrt:9", align 8
  call void @free_candy_value(ptr %15352)
  %15353 = load ptr, ptr @"text_`fixedDecimal.is x` was not satisfied", align 8
  call void @free_candy_value(ptr %15353)
  %15354 = load ptr, ptr @"Examples:sqrt:sqrt:11", align 8
  call void @free_candy_value(ptr %15354)
  %15355 = load ptr, ptr @"Examples:sqrt:sqrt:19", align 8
  call void @free_candy_value(ptr %15355)
  %15356 = load ptr, ptr @"Examples:sqrt:sqrt:21", align 8
  call void @free_candy_value(ptr %15356)
  %15357 = load ptr, ptr @"text_`fixedDecimal.isNonNegative x` was not satisfied", align 8
  call void @free_candy_value(ptr %15357)
  %15358 = load ptr, ptr @"Examples:sqrt:sqrt:23", align 8
  call void @free_candy_value(ptr %15358)
  %15359 = load ptr, ptr @"Examples:sqrt:sqrt:31", align 8
  call void @free_candy_value(ptr %15359)
  %15360 = load ptr, ptr @"Examples:sqrt:sqrt:33", align 8
  call void @free_candy_value(ptr %15360)
  %15361 = load ptr, ptr @"text_`int.is precision` was not satisfied", align 8
  call void @free_candy_value(ptr %15361)
  %15362 = load ptr, ptr @"Examples:sqrt:sqrt:35", align 8
  call void @free_candy_value(ptr %15362)
  %15363 = load ptr, ptr @"Examples:sqrt:sqrt:43", align 8
  call void @free_candy_value(ptr %15363)
  %15364 = load ptr, ptr @"Examples:sqrt:sqrt:45", align 8
  call void @free_candy_value(ptr %15364)
  %15365 = load ptr, ptr @"text_`int.isNonNegative precision` was not satisfied", align 8
  call void @free_candy_value(ptr %15365)
  %15366 = load ptr, ptr @"Examples:sqrt:sqrt:47", align 8
  call void @free_candy_value(ptr %15366)
  %15367 = load ptr, ptr @"Examples:sqrt:sqrt:56", align 8
  call void @free_candy_value(ptr %15367)
  %15368 = load ptr, ptr @"Examples:sqrt:sqrt:58", align 8
  call void @free_candy_value(ptr %15368)
  %15369 = load ptr, ptr @"Examples:sqrt:sqrt:69", align 8
  call void @free_candy_value(ptr %15369)
  %15370 = load ptr, ptr @"Examples:sqrt:sqrt:78", align 8
  call void @free_candy_value(ptr %15370)
  %15371 = load ptr, ptr @"Examples:sqrt:sqrt:79", align 8
  call void @free_candy_value(ptr %15371)
  %15372 = load ptr, ptr @"Examples:sqrt:sqrt:81", align 8
  call void @free_candy_value(ptr %15372)
  %15373 = load ptr, ptr @"Examples:sqrt:sqrt:82:7", align 8
  call void @free_candy_value(ptr %15373)
  %15374 = load ptr, ptr @"Examples:sqrt:sqrt:82:16", align 8
  call void @free_candy_value(ptr %15374)
  %15375 = load ptr, ptr @"Examples:sqrt:sqrt:82:25", align 8
  call void @free_candy_value(ptr %15375)
  %15376 = load ptr, ptr @"Examples:sqrt:sqrt:82:28", align 8
  call void @free_candy_value(ptr %15376)
  %15377 = load ptr, ptr @"Examples:sqrt:sqrt:82:29", align 8
  call void @free_candy_value(ptr %15377)
  %15378 = load ptr, ptr @"Examples:sqrt:sqrt:82:38", align 8
  call void @free_candy_value(ptr %15378)
  %15379 = load ptr, ptr @"Examples:sqrt:sqrt:82:39", align 8
  call void @free_candy_value(ptr %15379)
  %15380 = load ptr, ptr @"Examples:sqrt:sqrt:82:41", align 8
  call void @free_candy_value(ptr %15380)
  %15381 = load ptr, ptr @"Examples:sqrt:sqrt:82:51", align 8
  call void @free_candy_value(ptr %15381)
  %15382 = load ptr, ptr @"Examples:sqrt:sqrt:82:55", align 8
  call void @free_candy_value(ptr %15382)
  %15383 = load ptr, ptr @"Examples:sqrt:sqrt:82:57:2", align 8
  call void @free_candy_value(ptr %15383)
  %15384 = load ptr, ptr @"Examples:sqrt:sqrt:82:58", align 8
  call void @free_candy_value(ptr %15384)
  %15385 = load ptr, ptr @"Examples:sqrt:sqrt:83", align 8
  call void @free_candy_value(ptr %15385)
  %15386 = load ptr, ptr @fun_Examples_sqrt_sqrt, align 8
  call void @free_candy_value(ptr %15386)
  %15387 = load ptr, ptr @fun_Examples_sqrt_sqrt_82, align 8
  call void @free_candy_value(ptr %15387)
  %15388 = load ptr, ptr @fun_Examples_sqrt_sqrt_82_56, align 8
  call void @free_candy_value(ptr %15388)
  %15389 = load ptr, ptr @fun_Examples_sqrt_sqrt_82_57, align 8
  call void @free_candy_value(ptr %15389)
  %15390 = load ptr, ptr @"Examples:sqrt:main:10", align 8
  call void @free_candy_value(ptr %15390)
  %15391 = load ptr, ptr @"Examples:sqrt:main:11", align 8
  call void @free_candy_value(ptr %15391)
  %15392 = load ptr, ptr @num_65, align 8
  call void @free_candy_value(ptr %15392)
  %15393 = load ptr, ptr @"Examples:sqrt:main:14", align 8
  call void @free_candy_value(ptr %15393)
  %15394 = load ptr, ptr @"Examples:sqrt:main:23", align 8
  call void @free_candy_value(ptr %15394)
  %15395 = load ptr, ptr @"Examples:sqrt:main:46", align 8
  call void @free_candy_value(ptr %15395)
  %15396 = load ptr, ptr @"Examples:sqrt:main:47", align 8
  call void @free_candy_value(ptr %15396)
  %15397 = load ptr, ptr @"Examples:sqrt:main:48", align 8
  call void @free_candy_value(ptr %15397)
  %15398 = load ptr, ptr @"Examples:sqrt:main:49", align 8
  call void @free_candy_value(ptr %15398)
  %15399 = load ptr, ptr @"Examples:sqrt:main:51:0", align 8
  call void @free_candy_value(ptr %15399)
  %15400 = load ptr, ptr @"Examples:sqrt:main:52", align 8
  call void @free_candy_value(ptr %15400)
  %15401 = load ptr, ptr @"text_The root of 2 is ", align 8
  call void @free_candy_value(ptr %15401)
  %15402 = load ptr, ptr @"Examples:sqrt:main:55", align 8
  call void @free_candy_value(ptr %15402)
  %15403 = load ptr, ptr @"Examples:sqrt:main:56", align 8
  call void @free_candy_value(ptr %15403)
  %15404 = load ptr, ptr @fun_Examples_sqrt_main, align 8
  call void @free_candy_value(ptr %15404)
  %15405 = load ptr, ptr @fun_Examples_sqrt_main_50, align 8
  call void @free_candy_value(ptr %15405)
  %15406 = load ptr, ptr @fun_Examples_sqrt_main_51, align 8
  call void @free_candy_value(ptr %15406)
  %15407 = load ptr, ptr @tag_Main, align 8
  call void @free_candy_value(ptr %15407)
  %15408 = load ptr, ptr @tag_Sqrt, align 8
  call void @free_candy_value(ptr %15408)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_bit_length(ptr)

declare ptr @candy_builtin_int_bitwise_and(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_or(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_xor(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_divide_truncating(ptr, ptr)

declare ptr @candy_builtin_int_modulo(ptr, ptr)

declare ptr @candy_builtin_int_multiply(ptr, ptr)

declare ptr @candy_builtin_int_parse(ptr)

declare ptr @candy_builtin_int_remainder(ptr, ptr)

declare ptr @candy_builtin_int_shift_left(ptr, ptr)

declare ptr @candy_builtin_int_shift_right(ptr, ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_filled(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_insert(ptr, ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_list_remove_at(ptr, ptr)

declare ptr @candy_builtin_list_replace(ptr, ptr, ptr)

declare ptr @candy_builtin_print(ptr)

declare ptr @candy_builtin_struct_get.1(ptr, ptr)

declare ptr @candy_builtin_struct_get_keys(ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_characters(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_text_contains(ptr, ptr)

declare ptr @candy_builtin_text_ends_with(ptr, ptr)

declare ptr @candy_builtin_text_from_utf8(ptr)

declare ptr @candy_builtin_text_get_range(ptr, ptr, ptr)

declare ptr @candy_builtin_text_is_empty(ptr)

declare ptr @candy_builtin_text_length(ptr)

declare ptr @candy_builtin_text_starts_with(ptr, ptr)

declare ptr @candy_builtin_text_trim_end(ptr)

declare ptr @candy_builtin_text_trim_start(ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Cor":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__not(ptr %0) {
Builtins__not:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Builtins__not_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.6, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__not_1_equals_else.7, align 8
  %10 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Builtins__not_1_equals_else.7, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__not_1_case-0_didNotMatch, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %21 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %22 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %16, ptr %21, ptr %22)
  ret ptr %23
}

define ptr @Builtins__not_1_equals_then(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.2, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.3, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.4, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.5, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.3, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.5, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.2(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__not_1_equals_else.4(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__not_1_equals_else.6(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__not_1_case-0_didNotMatch(ptr %0) {
Builtins__not_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.8, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Builtins__not_1_equals_then.9, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.16, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__not_1_equals_else.17, align 8
  %18 = load ptr, ptr @fun_Builtins__not_1_equals_then.9, align 8
  %19 = load ptr, ptr @fun_Builtins__not_1_equals_else.17, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__not_1_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Builtins__not_1_equals_then.8(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.10, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.11, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.14, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.15, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.11, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.15, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.10(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.12, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else.13, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else.13, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else.12(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__not_1_equals_else.14(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__not_1_equals_else.16(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__not_1_case-1_didNotMatch(ptr %0) {
Builtins__not_1_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isNonNegative(ptr %0) {
Builtins__isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @num_0, align 8
  %7 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %7, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  %11 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then)
  %12 = call ptr @Builtins__isNonNegative_13_equals_then(ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %7, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %25, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %29, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Builtins__isNonNegative_13_equals_then(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.18, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.20, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.18(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @7, align 8
  ret ptr @7
}

define ptr @Builtins__isNonNegative_13_equals_else.20(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.22, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isNonNegative_13_equals_then.23, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.23)
  %7 = call ptr @Builtins__isNonNegative_13_equals_then.22(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isNonNegative_13_equals_then.22(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.24, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.28, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.24(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.26, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.26(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @9, align 8
  ret ptr @9
}

define ptr @Builtins__isNonNegative_13_equals_else.28(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @10, align 8
  ret ptr @10
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.30, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_then.31, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.31)
  %11 = call ptr @Builtins__isNonNegative_13_equals_then.30(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isNonNegative_13_equals_then.30(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.32, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.36, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.32(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.34, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.34(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @11, align 8
  ret ptr @11
}

define ptr @Builtins__isNonNegative_13_equals_else.36(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo(ptr %0, ptr %1) {
Builtins__isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %12, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then)
  %17 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %12, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_0, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %30, ptr %31)
  %33 = load ptr, ptr @tag_Match, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr %30, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %34, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.38, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.40, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.38(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @13, align 8
  ret ptr @13
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.40(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43)
  %7 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.44, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.48, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.44(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.46, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.46(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @15, align 8
  ret ptr @15
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.48(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @16, align 8
  ret ptr @16
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51)
  %11 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.52, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.56, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.52(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.54, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.54(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @17, align 8
  ret ptr @17
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.56(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__equals(ptr %0, ptr %1) {
Builtins__equals:
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Builtins__functionRun(ptr %0) {
Builtins__functionRun:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %7 = load ptr, ptr @num_0, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_pointer(ptr %0)
  %12 = call ptr @get_candy_function_environment(ptr %0)
  %13 = call ptr (...) %11(ptr %12)
  ret ptr %13
}

define ptr @Builtins__getArgumentCount(ptr %0) {
Builtins__getArgumentCount:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_get_argument_count(ptr %0)
  ret ptr %6
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.62, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %35 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %36 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_type_of(ptr %1)
  %41 = load ptr, ptr @tag_Function, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %42, ptr %43, ptr null)
  %45 = call ptr @candy_builtin_type_of(ptr %1)
  %46 = load ptr, ptr @tag_Function, align 8
  %47 = call ptr @candy_builtin_equals(ptr %45, ptr %46)
  %48 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %49 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr %49)
  %51 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %52 = load ptr, ptr @num_0, align 8
  %53 = call ptr @candy_builtin_equals(ptr %51, ptr %52)
  %54 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %55 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %54, ptr null)
  %56 = call ptr @candy_builtin_type_of(ptr %2)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %60 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr null)
  %61 = call ptr @candy_builtin_type_of(ptr %2)
  %62 = load ptr, ptr @tag_Function, align 8
  %63 = call ptr @candy_builtin_equals(ptr %61, ptr %62)
  %64 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %65 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %68 = load ptr, ptr @num_0, align 8
  %69 = call ptr @candy_builtin_equals(ptr %67, ptr %68)
  %70 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %71 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr null)
  %72 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %72
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.58, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.60, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.58(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @19, align 8
  ret ptr @19
}

define ptr @Builtins__ifElse_1_equals_else.60(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Builtins__ifElse_1_equals_else.62(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.64, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.72, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.64(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.66, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.70, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.66(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.68, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else.68(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @22, align 8
  ret ptr @22
}

define ptr @Builtins__ifElse_1_equals_else.70(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Builtins__ifElse_1_equals_else.72(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Builtins__ifElse_1_case-0_didNotMatch(ptr %0) {
Builtins__ifElse_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Builtins__intAdd(ptr %0, ptr %1) {
Builtins__intAdd:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_add(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitLength(ptr %0) {
Builtins__intBitLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_int_bit_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__intBitwiseAnd(ptr %0, ptr %1) {
Builtins__intBitwiseAnd:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitwiseOr(ptr %0, ptr %1) {
Builtins__intBitwiseOr:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_or(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitwiseXor(ptr %0, ptr %1) {
Builtins__intBitwiseXor:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_xor(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intCompareTo(ptr %0, ptr %1) {
Builtins__intCompareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intDivideTruncating(ptr %0, ptr %1) {
Builtins__intDivideTruncating:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_divide_truncating(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intModulo(ptr %0, ptr %1) {
Builtins__intModulo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_modulo(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intMultiply(ptr %0, ptr %1) {
Builtins__intMultiply:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_multiply(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intParse(ptr %0) {
Builtins__intParse:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_int_parse(ptr %0)
  ret ptr %6
}

define ptr @Builtins__intRemainder(ptr %0, ptr %1) {
Builtins__intRemainder:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_remainder(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intShiftLeft(ptr %0, ptr %1) {
Builtins__intShiftLeft:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft_25, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__intShiftLeft_25, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft_26, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__intShiftLeft_26, align 8
  %22 = load ptr, ptr @fun_Builtins__intShiftLeft_25, align 8
  %23 = load ptr, ptr @fun_Builtins__intShiftLeft_26, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %26 = call ptr @candy_builtin_text_concatenate(ptr %25, ptr %24)
  %27 = load ptr, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %26, ptr %27)
  %29 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %28, ptr null)
  %30 = call ptr @candy_builtin_type_of(ptr %1)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @Builtins__isNonNegative(ptr %1)
  %37 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %38 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %41 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %40)
  %42 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr null)
  %44 = call ptr @candy_builtin_int_shift_left(ptr %0, ptr %1)
  ret ptr %44
}

define ptr @Builtins__intShiftLeft_25(ptr %0) {
Builtins__intShiftLeft_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftLeft_26(ptr %0) {
Builtins__intShiftLeft_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__intShiftRight(ptr %0, ptr %1) {
Builtins__intShiftRight:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_25, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__intShiftRight_25, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_26, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__intShiftRight_26, align 8
  %22 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  %23 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %26 = call ptr @candy_builtin_text_concatenate(ptr %25, ptr %24)
  %27 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %26, ptr %27)
  %29 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %28, ptr null)
  %30 = call ptr @candy_builtin_type_of(ptr %1)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @Builtins__isNonNegative(ptr %1)
  %37 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %38 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %41 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %40)
  %42 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr null)
  %44 = call ptr @candy_builtin_int_shift_right(ptr %0, ptr %1)
  ret ptr %44
}

define ptr @Builtins__intShiftRight_25(ptr %0) {
Builtins__intShiftRight_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftRight_26(ptr %0) {
Builtins__intShiftRight_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__intSubtract(ptr %0, ptr %1) {
Builtins__intSubtract:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_subtract(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__listFilled(ptr %0, ptr %1) {
Builtins__listFilled:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Builtins__isNonNegative(ptr %0)
  %8 = load ptr, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @candy_builtin_list_filled(ptr %0, ptr %1)
  ret ptr %10
}

define ptr @Builtins__listGet(ptr %0, ptr %1) {
Builtins__listGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_list_length(ptr %0)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listGet:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %15)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_list_get(ptr %0, ptr %1)
  ret ptr %27
}

define ptr @Builtins__listInsert(ptr %0, ptr %1, ptr %2) {
Builtins__listInsert:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_list_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_list_insert(ptr %0, ptr %1, ptr %2)
  ret ptr %20
}

define ptr @Builtins__listLength(ptr %0) {
Builtins__listLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_list_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__listRemoveAt(ptr %0, ptr %1) {
Builtins__listRemoveAt:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_List, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %19 = load ptr, ptr @"Builtins::listRemoveAt:21", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = call ptr @candy_builtin_list_length(ptr %0)
  %22 = call ptr @candy_builtin_type_of(ptr %1)
  %23 = load ptr, ptr @tag_Int, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %26 = load ptr, ptr @"Builtins::listRemoveAt:22", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %21)
  %29 = load ptr, ptr @tag_Less, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr null)
  %33 = call ptr @candy_builtin_list_remove_at(ptr %0, ptr %1)
  ret ptr %33
}

define ptr @Builtins__listReplace(ptr %0, ptr %1, ptr %2) {
Builtins__listReplace:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_type_of(ptr %0)
  %17 = load ptr, ptr @tag_List, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listReplace:21", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_list_length(ptr %0)
  %23 = call ptr @candy_builtin_type_of(ptr %1)
  %24 = load ptr, ptr @tag_Int, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %27 = load ptr, ptr @"Builtins::listReplace:22", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %22)
  %30 = load ptr, ptr @tag_Less, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @candy_builtin_list_replace(ptr %0, ptr %1, ptr %2)
  ret ptr %34
}

define ptr @Builtins__print(ptr %0) {
Builtins__print:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_print(ptr %0)
  ret ptr %6
}

define ptr @Builtins__structGet(ptr %0, ptr %1) {
Builtins__structGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %1)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Text, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__structGet_23, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__structGet_23, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Builtins__structGet_24, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Builtins__structGet_24, align 8
  %17 = load ptr, ptr @fun_Builtins__structGet_23, align 8
  %18 = load ptr, ptr @fun_Builtins__structGet_24, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = call ptr @candy_builtin_type_of(ptr %1)
  %21 = load ptr, ptr @tag_Text, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr }, ptr %23, i32 0, i32 0
  store ptr %1, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Builtins__structGet_30, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Builtins__structGet_30, align 8
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr }, ptr %26, i32 0, i32 0
  store ptr %1, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Builtins__structGet_31, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Builtins__structGet_31, align 8
  %29 = load ptr, ptr @fun_Builtins__structGet_30, align 8
  %30 = load ptr, ptr @fun_Builtins__structGet_31, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %22, ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_Struct `", align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %32, ptr %19)
  %34 = load ptr, ptr @"text_` is missing the key `", align 8
  %35 = call ptr @candy_builtin_text_concatenate(ptr %33, ptr %34)
  %36 = call ptr @candy_builtin_text_concatenate(ptr %35, ptr %31)
  %37 = load ptr, ptr @"text_`.", align 8
  %38 = call ptr @candy_builtin_text_concatenate(ptr %36, ptr %37)
  %39 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_struct_get.1(ptr %0, ptr %1)
  ret ptr %40
}

define ptr @Builtins__structGet_23(ptr %0) {
Builtins__structGet_23:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__structGet_24(ptr %0) {
Builtins__structGet_24:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__structGet_30(ptr %0) {
Builtins__structGet_30:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__structGet_31(ptr %0) {
Builtins__structGet_31:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__structGetKeys(ptr %0) {
Builtins__structGetKeys:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_struct_get_keys(ptr %0)
  ret ptr %6
}

define ptr @Builtins__structHasKey(ptr %0, ptr %1) {
Builtins__structHasKey:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %1)
  ret ptr %7
}

define ptr @Builtins__tagGetValue(ptr %0) {
Builtins__tagGetValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %7 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @candy_builtin_tag_get_value(ptr %0)
  ret ptr %9
}

define ptr @Builtins__tagHasValue(ptr %0) {
Builtins__tagHasValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_has_value(ptr %0)
  ret ptr %6
}

define ptr @Builtins__tagWithoutValue(ptr %0) {
Builtins__tagWithoutValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_without_value(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textCharacters(ptr %0) {
Builtins__textCharacters:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_characters(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textConcatenate(ptr %0, ptr %1) {
Builtins__textConcatenate:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_concatenate(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textContains(ptr %0, ptr %1) {
Builtins__textContains:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_contains(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textEndsWith(ptr %0, ptr %1) {
Builtins__textEndsWith:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_ends_with(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textFromUtf8(ptr %0) {
Builtins__textFromUtf8:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_from_utf8(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textGetRange(ptr %0, ptr %1, ptr %2) {
Builtins__textGetRange:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_text_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_type_of(ptr %2)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = call ptr @Builtins__isNonNegative(ptr %2)
  %26 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_text_length(ptr %0)
  %29 = call ptr @Builtins__isLessThanOrEqualTo(ptr %2, ptr %28)
  %30 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %2)
  %33 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr null)
  %35 = call ptr @candy_builtin_text_get_range(ptr %0, ptr %1, ptr %2)
  ret ptr %35
}

define ptr @Builtins__textIsEmpty(ptr %0) {
Builtins__textIsEmpty:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_is_empty(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textLength(ptr %0) {
Builtins__textLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textStartsWith(ptr %0, ptr %1) {
Builtins__textStartsWith:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_starts_with(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textTrimEnd(ptr %0) {
Builtins__textTrimEnd:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_trim_end(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textTrimStart(ptr %0) {
Builtins__textTrimStart:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_trim_start(ptr %0)
  ret ptr %6
}

define ptr @Builtins__toDebugText(ptr %0) {
Builtins__toDebugText:
  %1 = call ptr @candy_builtin_to_debug_text(ptr %0)
  ret ptr %1
}

define ptr @Builtins__typeOf(ptr %0) {
Builtins__typeOf:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  ret ptr %1
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.78, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.79, align 8
  %10 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.79, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_is_1_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %34 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_bool_is_1_equals_then(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.74, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.75, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.76, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.77, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.75, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.77, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.74(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_bool_is_1_equals_else.76(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_bool_is_1_equals_else.78(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.80, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.81, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.88, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.89, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.81, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.89, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.80(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.82, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.83, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.86, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.87, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.83, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.87, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.82(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.84, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else.85, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else.85, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else.84(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_bool_is_1_equals_else.86(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_bool_is_1_equals_else.88(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_bool_is_1_case-0_didNotMatch(ptr %0) {
Core_bool_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_bool_not(ptr %0) {
Core_bool_not:
  %1 = call ptr @Core_bool_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %0, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_not_6_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.94, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_bool_not_6_equals_else.95, align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_else.95, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %19, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_bool_not_6_equals_then(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.90, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.91, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.92, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.93, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.91, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.93, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.90(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_bool_not_6_equals_else.92(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_bool_not_6_equals_else.94(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_bool_not_6_case-0_didNotMatch(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.96, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_not_6_equals_then.97, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.104, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_not_6_equals_else.105, align 8
  %18 = load ptr, ptr @fun_Core_bool_not_6_equals_then.97, align 8
  %19 = load ptr, ptr @fun_Core_bool_not_6_equals_else.105, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_not_6_equals_then.96(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.98, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.99, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.102, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.103, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.99, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.103, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.98(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.100, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else.101, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else.101, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else.100(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_bool_not_6_equals_else.102(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_bool_not_6_equals_else.104(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_bool_not_6_case-1_didNotMatch(ptr %0) {
Core_bool_not_6_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @"anonymous_$generated__needs_isConditionBool_else.106"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_type_is(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.108, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.109, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.109, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.108(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.110, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.111, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.111, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.110(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is2, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %1, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_18)
  %17 = call ptr @Core_controlFlow_recursive_18(ptr %15, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_controlFlow_recursive_18(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_18:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_18_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_type_is.112(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.114(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.116(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.118, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.119, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.119, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.118(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.120(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.122, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.123, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.123, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.122(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.124(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.126, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.127, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.127, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.126(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.128(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.130, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.131, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.131, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.130(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.132(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.134, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.135, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.135, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.134(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.136(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.138, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.139, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.139, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.138(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.140(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.142, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.143, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.143, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.142(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.144(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.146, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.147, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.147, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.146(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.152, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.153, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.153, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.148, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.149, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.150, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.151, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.149, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.151, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.148(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @37, align 8
  ret ptr @37
}

define ptr @Core_bool_lazyAnd_18_equals_else.150(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_bool_lazyAnd_18_equals_else.152(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_bool_lazyAnd_18_case-0_matched(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.154, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.155, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.162, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.163, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.155, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.163, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.154(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.156, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.157, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.160, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.161, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.157, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.161, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.156(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.158, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.159, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.159, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.158(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_bool_lazyAnd_18_equals_else.160(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_bool_lazyAnd_18_equals_else.162(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd)
  %13 = call ptr @Core_bool_lazyAnd(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.168, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.169, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.169, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.164, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.165, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.166, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.167, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.165, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.167, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.164(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @43, align 8
  ret ptr @43
}

define ptr @Core_bool_lazyOr_18_equals_else.166(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @44, align 8
  ret ptr @44
}

define ptr @Core_bool_lazyOr_18_equals_else.168(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @45, align 8
  ret ptr @45
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.170, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.171, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.178, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.179, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.171, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.179, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.170(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.172, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.173, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.176, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.177, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.173, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.177, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.172(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.174, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.175, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.175, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.174(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @46, align 8
  ret ptr @46
}

define ptr @Core_bool_lazyOr_18_equals_else.176(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @47, align 8
  ret ptr @47
}

define ptr @Core_bool_lazyOr_18_equals_else.178(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Core_bool_lazyOr_18_case-1_matched(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr)
  %13 = call ptr @Core_bool_lazyOr(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.180, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.181, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.181, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr)
  %22 = call ptr @Core_bool_lazyOr(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.180(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.182(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.184(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.186(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.188, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.189, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.189, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.188(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.190(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.192, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.193, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.193, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.192(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.194(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.196, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.197, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.197, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.196(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.198(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.200, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.201, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.201, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.200(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.202(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.204, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.205, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.205, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.204(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.206(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.208, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.209, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.209, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.208(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.210(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.212, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.213, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.213, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.212(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.214(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.216, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.217, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.217, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.216(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.218(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.220, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.221, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.228, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.229, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.221, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.229, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.230, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.231, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.232, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.233, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.231, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.233, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.220(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.222, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.223, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.226, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.227, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.223, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.227, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.222(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.224, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.225, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.225, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.224(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @49, align 8
  ret ptr @49
}

define ptr @Core_bool_lazyAnd_18_equals_else.226(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_bool_lazyAnd_18_equals_else.228(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.230(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.232(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.234, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.235, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.242, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.243, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.235, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.243, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.244, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.245, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.245, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.234(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.236, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.237, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.240, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.241, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.237, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.241, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.236(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.238, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.239, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.239, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.238(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_bool_lazyAnd_18_equals_else.240(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @53, align 8
  ret ptr @53
}

define ptr @Core_bool_lazyAnd_18_equals_else.242(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.244(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.246(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.248, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.249, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.249, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.219)
  %13 = call ptr @Core_bool_lazyAnd.218(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.248(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.250(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.252, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.253, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.260, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.261, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.253, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.261, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.262, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.263, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.263, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.252(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.254, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.255, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.258, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.259, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.255, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.259, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.254(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.256, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.257, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.257, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.256(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @55, align 8
  ret ptr @55
}

define ptr @Core_bool_lazyOr_18_equals_else.258(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @56, align 8
  ret ptr @56
}

define ptr @Core_bool_lazyOr_18_equals_else.260(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.262(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.264, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.265, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.272, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.273, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.265, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.273, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.274, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.275, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.276, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.277, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.275, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.277, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.264(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.266, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.267, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.270, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.271, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.267, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.271, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.266(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.268, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.269, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.269, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.268(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @58, align 8
  ret ptr @58
}

define ptr @Core_bool_lazyOr_18_equals_else.270(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_bool_lazyOr_18_equals_else.272(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_bool_lazyOr_18_case-1_matched.274(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.276(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.278(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.280, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.281, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.281, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.251)
  %13 = call ptr @Core_bool_lazyOr.250(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.280(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.282(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.284(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.286, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.287, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.287, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.251)
  %22 = call ptr @Core_bool_lazyOr.250(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.286(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_check(ptr %0, ptr %1) {
Core_check_check:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = load ptr, ptr @tag_True, align 8
  %12 = call ptr @candy_builtin_equals(ptr %0, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.288", ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.289", align 8
  %16 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %17 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.289", align 8
  %18 = call ptr @candy_builtin_if_else(ptr %12, ptr %16, ptr %17)
  %19 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %20 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  %21 = call ptr @candy_builtin_if_else(ptr %18, ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %23 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.290", ptr %22, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %23, ptr @"fun_anonymous_$generated__needs_condition_else.291", align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.291", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %0, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.288"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.290"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_type_is.292(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_run.294(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.296, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.297, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.297, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.296(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_type_is.298(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.300(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.302(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.304, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.305, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.305, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.304(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.306(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.308, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.309, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.309, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.308(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.310(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.312, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.313, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.313, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.312(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.314(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.316, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.317, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.317, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.316(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.318(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.320, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.321, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.321, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.320(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.322(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.324, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.325, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.325, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.324(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.326(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.328, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.329, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.329, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.328(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.330(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.332, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.333, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.333, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.332(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.334(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.336, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.337, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.344, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.345, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.337, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.345, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %1, ptr %32, align 8
  %33 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.346, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.347, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.348, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.349, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.347, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.349, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.336(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.338, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.339, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.342, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.343, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.339, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.343, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.338(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.340, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.341, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.341, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.340(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_bool_lazyAnd_18_equals_else.342(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @62, align 8
  ret ptr @62
}

define ptr @Core_bool_lazyAnd_18_equals_else.344(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @63, align 8
  ret ptr @63
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.346(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.348(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.350, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.351, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.358, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.359, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.351, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.359, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.360, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.361, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.361, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.350(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.352, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.353, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.356, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.357, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.353, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.357, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.352(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.354, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.355, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.355, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.354(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @64, align 8
  ret ptr @64
}

define ptr @Core_bool_lazyAnd_18_equals_else.356(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @65, align 8
  ret ptr @65
}

define ptr @Core_bool_lazyAnd_18_equals_else.358(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @66, align 8
  ret ptr @66
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.360(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.362(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.364, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.365, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.365, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.335)
  %13 = call ptr @Core_bool_lazyAnd.334(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.364(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.366(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.368, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.369, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.376, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.377, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.369, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.377, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.378, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.379, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.379, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.368(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.370, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.371, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.374, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.375, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.371, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.375, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.370(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.372, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.373, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.373, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.372(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @67, align 8
  ret ptr @67
}

define ptr @Core_bool_lazyOr_18_equals_else.374(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @68, align 8
  ret ptr @68
}

define ptr @Core_bool_lazyOr_18_equals_else.376(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @69, align 8
  ret ptr @69
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.378(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.380, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.381, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.388, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.389, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.381, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.389, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.390, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.391, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.392, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.393, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.391, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.393, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.380(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.382, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.383, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.386, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.387, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.383, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.387, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.382(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.384, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.385, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.385, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.384(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @70, align 8
  ret ptr @70
}

define ptr @Core_bool_lazyOr_18_equals_else.386(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @71, align 8
  ret ptr @71
}

define ptr @Core_bool_lazyOr_18_equals_else.388(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @72, align 8
  ret ptr @72
}

define ptr @Core_bool_lazyOr_18_case-1_matched.390(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.392(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.394(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.396, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.397, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.397, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.367)
  %13 = call ptr @Core_bool_lazyOr.366(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.396(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.398(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.400(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.402, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.403, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.403, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.367)
  %22 = call ptr @Core_bool_lazyOr.366(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.402(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.404(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.406(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.408(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.410, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.411, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.411, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.410(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.412(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.414, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.415, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.415, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.414(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.416(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.418, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.419, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.419, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.418(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.420(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.422, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.423, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.423, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.422(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.424(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.426, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.427, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.427, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.426(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.428(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.430, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.431, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.431, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.430(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.432(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.434, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.435, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.435, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.434(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.436(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.438, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.439, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.439, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.438(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.440(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.442, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.443, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.450, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.451, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.443, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.451, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.452, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.453, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.454, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.455, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.453, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.455, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.442(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.444, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.445, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.448, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.449, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.445, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.449, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.444(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.446, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.447, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.447, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.446(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @73, align 8
  ret ptr @73
}

define ptr @Core_bool_lazyAnd_18_equals_else.448(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @74, align 8
  ret ptr @74
}

define ptr @Core_bool_lazyAnd_18_equals_else.450(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @75, align 8
  ret ptr @75
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.452(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.454(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.456, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.457, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.464, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.465, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.457, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.465, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.466, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.467, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.467, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.456(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.458, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.459, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.462, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.463, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.459, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.463, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.458(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.460, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.461, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.461, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.460(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @76, align 8
  ret ptr @76
}

define ptr @Core_bool_lazyAnd_18_equals_else.462(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @77, align 8
  ret ptr @77
}

define ptr @Core_bool_lazyAnd_18_equals_else.464(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @78, align 8
  ret ptr @78
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.466(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.468(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.470, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.471, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.471, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.441)
  %13 = call ptr @Core_bool_lazyAnd.440(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.470(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.472(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.474, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.475, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.482, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.483, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.475, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.483, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.484, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.485, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.485, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.474(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.476, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.477, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.480, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.481, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.477, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.481, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.476(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.478, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.479, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.479, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.478(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @79, align 8
  ret ptr @79
}

define ptr @Core_bool_lazyOr_18_equals_else.480(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @80, align 8
  ret ptr @80
}

define ptr @Core_bool_lazyOr_18_equals_else.482(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @81, align 8
  ret ptr @81
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.484(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.486, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.487, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.494, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.495, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.487, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.495, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.496, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.497, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.498, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.499, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.497, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.499, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.486(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.488, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.489, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.492, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.493, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.489, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.493, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.488(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.490, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.491, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.491, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.490(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @82, align 8
  ret ptr @82
}

define ptr @Core_bool_lazyOr_18_equals_else.492(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @83, align 8
  ret ptr @83
}

define ptr @Core_bool_lazyOr_18_equals_else.494(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @84, align 8
  ret ptr @84
}

define ptr @Core_bool_lazyOr_18_case-1_matched.496(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.498(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.500(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.502, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.503, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.503, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.473)
  %13 = call ptr @Core_bool_lazyOr.472(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.502(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.504(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.506(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.508, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.509, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.509, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.473)
  %22 = call ptr @Core_bool_lazyOr.472(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.508(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_check.510(ptr %0, ptr %1) {
Core_check_check:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = load ptr, ptr @tag_True, align 8
  %12 = call ptr @candy_builtin_equals(ptr %0, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.512", ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.513", align 8
  %16 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %17 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.513", align 8
  %18 = call ptr @candy_builtin_if_else(ptr %12, ptr %16, ptr %17)
  %19 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %20 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  %21 = call ptr @candy_builtin_if_else(ptr %18, ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %23 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.514", ptr %22, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %23, ptr @"fun_anonymous_$generated__needs_condition_else.515", align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.515", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %0, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.512"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.514"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_type_is.516(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.518(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.520(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.522, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.523, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.523, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.522(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.524(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.526, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.527, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.527, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.526(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.528(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.530, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.531, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.531, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.530(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.532(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.534, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.535, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.535, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.534(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.536(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.538, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.539, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.539, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.538(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.540(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.542, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.543, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.543, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.542(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.544(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.546, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.547, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.547, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.546(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.548(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.550, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.551, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.551, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.550(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive.552(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is2, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %1, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.554, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18.555, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18.555, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_18.555)
  %17 = call ptr @Core_controlFlow_recursive_18.554(ptr %15, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_controlFlow_recursive_18.554(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_18:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.556, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_18_0.557, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.557, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_18_0.556(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_type_is.558(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_int_is(ptr %0, ptr %1) {
Core_int_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_int_negate(ptr %0, ptr %1) {
Core_int_negate:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %12, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_int_compareTo(ptr %0, ptr %1, ptr %2) {
Core_int_compareTo:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr @tag_IntCompareTo, align 8
  %26 = call ptr @Builtins__structGet(ptr %24, ptr %25)
  %27 = call ptr @get_candy_function_pointer(ptr %26)
  %28 = call ptr @get_candy_function_environment(ptr %26)
  %29 = call ptr (...) %27(ptr %0, ptr %1, ptr %28)
  %30 = load ptr, ptr @tag_Equal, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %32 = load ptr, ptr %31, align 8
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %29, ptr %30, ptr %34)
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr @tag_Implies, align 8
  %39 = call ptr @Builtins__structGet(ptr %37, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %1, ptr %43)
  %45 = call ptr @get_candy_function_pointer(ptr %39)
  %46 = call ptr @get_candy_function_environment(ptr %39)
  %47 = call ptr (...) %45(ptr %35, ptr %44, ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check.511)
  %49 = call ptr @Core_check_check.510(ptr %47, ptr %48)
  ret ptr %29
}

define ptr @Core_int_isLessThan(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo)
  %24 = call ptr @Core_int_compareTo(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Less, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isGreaterThan(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo)
  %24 = call ptr @Core_int_compareTo(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Greater, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isLessThanOrEqualTo(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan)
  %24 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isGreaterThanOrEqualTo(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %24 = call ptr @Core_int_isLessThan(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isPositive(ptr %0, ptr %1) {
Core_int_isPositive:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan)
  %14 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonPositive(ptr %0, ptr %1) {
Core_int_isNonPositive:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonPositive:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan)
  %25 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_isNegative(ptr %0, ptr %1) {
Core_int_isNegative:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %14 = call ptr @Core_int_isLessThan(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonNegative(ptr %0, ptr %1) {
Core_int_isNonNegative:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %25 = call ptr @Core_int_isLessThan(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_absolute(ptr %0, ptr %1) {
Core_int_absolute:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:absolute:8", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %25 = call ptr @Core_int_isLessThan(ptr %0, ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %0, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_int_absolute_9, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_int_absolute_9, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_int_absolute_10, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_int_absolute_10, align 8
  %38 = load ptr, ptr @fun_Core_int_absolute_9, align 8
  %39 = load ptr, ptr @fun_Core_int_absolute_10, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %25, ptr %38, ptr %39, ptr %43)
  ret ptr %44
}

define ptr @Core_int_absolute_9(ptr %0) {
Core_int_absolute_9:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:absolute:9:2", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %14, ptr %16, ptr %20)
  ret ptr %21
}

define ptr @Core_int_absolute_10(ptr %0) {
Core_int_absolute_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_fitsInRustU32(ptr %0, ptr %1) {
Core_int_fitsInRustU32:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative)
  %13 = call ptr @Core_int_isNonNegative(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_4294967295, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %18 = call ptr @Core_int_isLessThan(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_fitsInRustU128(ptr %0, ptr %1) {
Core_int_fitsInRustU128:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative)
  %13 = call ptr @Core_int_isNonNegative(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %18 = call ptr @Core_int_isLessThan(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_isEven(ptr %0, ptr %1) {
Core_int_isEven:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  ret ptr %23
}

define ptr @Core_int_isOdd(ptr %0, ptr %1) {
Core_int_isOdd:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %0, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:int:isOdd:16", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @num_1, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %0, ptr %35, ptr %39)
  %41 = load ptr, ptr @num_0, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %40, ptr %41, ptr %45)
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr @tag_Not, align 8
  %50 = call ptr @Builtins__structGet(ptr %48, ptr %49)
  %51 = call ptr @get_candy_function_pointer(ptr %50)
  %52 = call ptr @get_candy_function_environment(ptr %50)
  %53 = call ptr (...) %51(ptr %23, ptr %52)
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %55 = load ptr, ptr %54, align 8
  %56 = call ptr @get_candy_function_pointer(ptr %55)
  %57 = call ptr @get_candy_function_environment(ptr %55)
  %58 = call ptr (...) %56(ptr %46, ptr %53, ptr %57)
  %59 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check.511)
  %60 = call ptr @Core_check_check.510(ptr %58, ptr %59)
  ret ptr %23
}

define ptr @Core_int_min(ptr %0, ptr %1, ptr %2) {
Core_int_min:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo)
  %24 = call ptr @Core_int_isLessThanOrEqualTo(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_min_15, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_min_15, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_min_16, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_min_16, align 8
  %31 = load ptr, ptr @fun_Core_int_min_15, align 8
  %32 = load ptr, ptr @fun_Core_int_min_16, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_min_15(ptr %0) {
Core_int_min_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_min_16(ptr %0) {
Core_int_min_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max(ptr %0, ptr %1, ptr %2) {
Core_int_max:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThanOrEqualTo)
  %24 = call ptr @Core_int_isGreaterThanOrEqualTo(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_max_15, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_max_15, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_max_16, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_max_16, align 8
  %31 = load ptr, ptr @fun_Core_int_max_15, align 8
  %32 = load ptr, ptr @fun_Core_int_max_16, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_max_15(ptr %0) {
Core_int_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max_16(ptr %0) {
Core_int_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_coerceAtLeast(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtLeast:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max)
  %24 = call ptr @Core_int_max(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceAtMost(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtMost:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min)
  %24 = call ptr @Core_int_min(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceIn(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_int_coerceIn:
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr @tag_Is, align 8
  %7 = call ptr @Builtins__structGet(ptr %5, ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %7)
  %10 = call ptr @get_candy_function_environment(ptr %7)
  %11 = call ptr (...) %9(ptr %0, ptr %8, ptr %10)
  %12 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_Is, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Int, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %17)
  %20 = call ptr @get_candy_function_environment(ptr %17)
  %21 = call ptr (...) %19(ptr %1, ptr %18, ptr %20)
  %22 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %2, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo)
  %35 = call ptr @Core_int_isLessThanOrEqualTo(ptr %1, ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_Is, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Int, align 8
  %43 = call ptr @get_candy_function_pointer(ptr %41)
  %44 = call ptr @get_candy_function_environment(ptr %41)
  %45 = call ptr (...) %43(ptr %0, ptr %42, ptr %44)
  %46 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %47 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %48 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr %47)
  %49 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr @tag_Is, align 8
  %52 = call ptr @Builtins__structGet(ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Int, align 8
  %54 = call ptr @get_candy_function_pointer(ptr %52)
  %55 = call ptr @get_candy_function_environment(ptr %52)
  %56 = call ptr (...) %54(ptr %1, ptr %53, ptr %55)
  %57 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max)
  %61 = call ptr @Core_int_max(ptr %0, ptr %1, ptr %60)
  %62 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr @tag_Is, align 8
  %65 = call ptr @Builtins__structGet(ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_Int, align 8
  %67 = call ptr @get_candy_function_pointer(ptr %65)
  %68 = call ptr @get_candy_function_environment(ptr %65)
  %69 = call ptr (...) %67(ptr %61, ptr %66, ptr %68)
  %70 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %71 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %72 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr %71)
  %73 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %74 = load ptr, ptr %73, align 8
  %75 = load ptr, ptr @tag_Is, align 8
  %76 = call ptr @Builtins__structGet(ptr %74, ptr %75)
  %77 = load ptr, ptr @tag_Int, align 8
  %78 = call ptr @get_candy_function_pointer(ptr %76)
  %79 = call ptr @get_candy_function_environment(ptr %76)
  %80 = call ptr (...) %78(ptr %2, ptr %77, ptr %79)
  %81 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %82 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %83 = call ptr @"anonymous_$generated__needs"(ptr %80, ptr %81, ptr %82)
  %84 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min)
  %85 = call ptr @Core_int_min(ptr %61, ptr %2, ptr %84)
  ret ptr %85
}

define ptr @Core_int_pow_21_4_case-0_matched() {
Core_int_pow_21_4_case-0_matched:
  %0 = load ptr, ptr @num_1, align 8
  ret ptr %0
}

define ptr @Core_int_pow(ptr %0, ptr %1, ptr %2) {
Core_int_pow:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative)
  %24 = call ptr @Core_int_isNonNegative(ptr %1, ptr %23)
  %25 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = alloca ptr, i64 3, align 8
  %28 = alloca ptr, i64 3, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %27, i64 0
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %28, i64 0
  store ptr %1, ptr %31, align 8
  %32 = load ptr, ptr @tag_Base, align 8
  %33 = getelementptr ptr, ptr %27, i64 1
  store ptr %32, ptr %33, align 8
  %34 = getelementptr ptr, ptr %28, i64 1
  store ptr %0, ptr %34, align 8
  %35 = getelementptr ptr, ptr %27, i64 2
  store ptr null, ptr %35, align 8
  %36 = getelementptr ptr, ptr %28, i64 2
  store ptr null, ptr %36, align 8
  %37 = call ptr @make_candy_struct(ptr %27, ptr %28)
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 0
  store ptr %40, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 1
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 2
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 3
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 4
  store ptr %52, ptr %53, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 5
  store ptr %55, ptr %56, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 6
  store ptr %58, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Core_int_pow_21, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Core_int_pow_21, align 8
  %61 = load ptr, ptr @fun_Core_int_pow_21, align 8
  %62 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive.553)
  %63 = call ptr @Core_controlFlow_recursive.552(ptr %37, ptr %61, ptr %62)
  ret ptr %63
}

define ptr @Core_int_pow_21(ptr %0, ptr %1, ptr %2) {
Core_int_pow_21:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.568, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_int_pow_21_1_isMatch_else.569, align 8
  %22 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.569, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = load ptr, ptr @num_0, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %28, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_equals_else, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %35 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %28, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 3
  store ptr %50, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 4
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 5
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 6
  store ptr %36, ptr %58, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %60 = load ptr, ptr %59, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 7
  store ptr %60, ptr %61, align 8
  %62 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 8
  store ptr %26, ptr %62, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 9
  store ptr %64, ptr %65, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 10
  store ptr %0, ptr %66, align 8
  %67 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_didNotMatch, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %67, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %68 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %69 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %70 = call ptr @candy_builtin_if_else(ptr %40, ptr %68, ptr %69)
  ret ptr %70
}

define ptr @Core_int_pow_21_1_equals_then(ptr %0) {
Core_int_pow_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.566, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_pow_21_1_isMatch_else.567, align 8
  %31 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.567, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_1_hasKey_then(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @85, align 8
  ret ptr @85
}

define ptr @Core_int_pow_21_1_hasKey_else(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @86, align 8
  ret ptr @86
}

define ptr @Core_int_pow_21_1_isMatch_then(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Exponent, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.560, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_int_pow_21_1_hasKey_then.561, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.562, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_pow_21_1_hasKey_else.563, align 8
  %19 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.561, align 8
  %20 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.563, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.564, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_int_pow_21_1_isMatch_then.565, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.565, align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_int_pow_21_1_hasKey_then.560(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Exponent, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @87, align 8
  ret ptr @87
}

define ptr @Core_int_pow_21_1_hasKey_else.562(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @88, align 8
  ret ptr @88
}

define ptr @Core_int_pow_21_1_isMatch_then.564(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @89, align 8
  ret ptr @89
}

define ptr @Core_int_pow_21_1_isMatch_else(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_isMatch_else.566(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_equals_else(ptr %0) {
Core_int_pow_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @90, align 8
  ret ptr @90
}

define ptr @Core_int_pow_21_1_isMatch_else.568(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_int_pow_21_4_equals_else(ptr %0) {
Core_int_pow_21_4_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `0`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @91, align 8
  ret ptr @91
}

define ptr @Core_int_pow_21_4_case-0_didNotMatch(ptr %0) {
Core_int_pow_21_4_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 2
  store ptr %13, ptr %14, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 3
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 4
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 5
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 6
  store ptr %25, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 7
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 8
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 10
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 9
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-1_matched, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_int_pow_21_4_case-1_matched, align 8
  %37 = call ptr @get_candy_function_environment(ptr @fun_Core_int_pow_21_4_case-1_matched)
  %38 = call ptr @Core_int_pow_21_4_case-1_matched(ptr %37)
  ret ptr %38
}

define ptr @Core_int_pow_21_4_case-1_matched(ptr %0) {
Core_int_pow_21_4_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @num_1, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %21, ptr %22, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 2
  store ptr %36, ptr %37, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 3
  store ptr %39, ptr %40, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 4
  store ptr %42, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_5, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_int_pow_21_4_5, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 3
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 4
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 5
  store ptr %62, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_6, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_int_pow_21_4_6, align 8
  %65 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  %66 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  %67 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %68 = load ptr, ptr %67, align 8
  %69 = call ptr @get_candy_function_pointer(ptr %68)
  %70 = call ptr @get_candy_function_environment(ptr %68)
  %71 = call ptr (...) %69(ptr %27, ptr %65, ptr %66, ptr %70)
  ret ptr %71
}

define ptr @Core_int_pow_21_4_5(ptr %0) {
Core_int_pow_21_4_5:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = alloca ptr, i64 3, align 8
  %19 = alloca ptr, i64 3, align 8
  %20 = load ptr, ptr @tag_Exponent, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %19, i64 0
  store ptr %17, ptr %22, align 8
  %23 = load ptr, ptr @tag_Base, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr ptr, ptr %19, i64 1
  store ptr %9, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = getelementptr ptr, ptr %19, i64 2
  store ptr null, ptr %27, align 8
  %28 = call ptr @make_candy_struct(ptr %18, ptr %19)
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = call ptr @get_candy_function_pointer(ptr %30)
  %32 = call ptr @get_candy_function_environment(ptr %30)
  %33 = call ptr (...) %31(ptr %28, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_4_6(ptr %0) {
Core_int_pow_21_4_6:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = alloca ptr, i64 3, align 8
  %25 = alloca ptr, i64 3, align 8
  %26 = load ptr, ptr @tag_Base, align 8
  %27 = getelementptr ptr, ptr %24, i64 0
  store ptr %26, ptr %27, align 8
  %28 = getelementptr ptr, ptr %25, i64 0
  store ptr %9, ptr %28, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %24, i64 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %25, i64 1
  store ptr %23, ptr %31, align 8
  %32 = getelementptr ptr, ptr %24, i64 2
  store ptr null, ptr %32, align 8
  %33 = getelementptr ptr, ptr %25, i64 2
  store ptr null, ptr %33, align 8
  %34 = call ptr @make_candy_struct(ptr %24, ptr %25)
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %36 = load ptr, ptr %35, align 8
  %37 = call ptr @get_candy_function_pointer(ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr %36)
  %39 = call ptr (...) %37(ptr %34, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %41, ptr %39, ptr %45)
  ret ptr %46
}

define ptr @Core_type_is.570(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.572(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.574(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.576, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.577, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.577, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.576(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.578(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.580, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.581, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.581, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.580(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.582(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.584, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.585, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.585, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.584(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.586(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.588, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.589, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.589, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.588(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.590(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.592, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.593, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.593, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.592(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.594(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.596, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.597, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.597, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.596(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.598(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.600, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.601, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.601, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.600(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.602(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.604, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.605, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.605, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.604(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.606(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.608, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.609, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.616, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.617, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.609, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.617, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %1, ptr %32, align 8
  %33 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.618, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.619, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.620, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.621, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.619, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.621, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.608(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.610, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.611, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.614, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.615, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.611, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.615, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.610(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.612, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.613, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.613, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.612(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @92, align 8
  ret ptr @92
}

define ptr @Core_bool_lazyAnd_18_equals_else.614(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @93, align 8
  ret ptr @93
}

define ptr @Core_bool_lazyAnd_18_equals_else.616(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @94, align 8
  ret ptr @94
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.618(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.620(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.622, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.623, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.630, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.631, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.623, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.631, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.632, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.633, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.633, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.622(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.624, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.625, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.628, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.629, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.625, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.629, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.624(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.626, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.627, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.627, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.626(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @95, align 8
  ret ptr @95
}

define ptr @Core_bool_lazyAnd_18_equals_else.628(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @96, align 8
  ret ptr @96
}

define ptr @Core_bool_lazyAnd_18_equals_else.630(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @97, align 8
  ret ptr @97
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.632(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.634(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.636, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.637, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.637, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.607)
  %13 = call ptr @Core_bool_lazyAnd.606(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.636(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.638(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.640, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.641, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.648, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.649, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.641, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.649, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.650, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.651, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.651, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.640(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.642, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.643, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.646, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.647, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.643, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.647, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.642(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.644, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.645, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.645, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.644(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @98, align 8
  ret ptr @98
}

define ptr @Core_bool_lazyOr_18_equals_else.646(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @99, align 8
  ret ptr @99
}

define ptr @Core_bool_lazyOr_18_equals_else.648(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @100, align 8
  ret ptr @100
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.650(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.652, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.653, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.660, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.661, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.653, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.661, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.662, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.663, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.664, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.665, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.663, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.665, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.652(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.654, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.655, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.658, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.659, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.655, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.659, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.654(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.656, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.657, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.657, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.656(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @101, align 8
  ret ptr @101
}

define ptr @Core_bool_lazyOr_18_equals_else.658(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @102, align 8
  ret ptr @102
}

define ptr @Core_bool_lazyOr_18_equals_else.660(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @103, align 8
  ret ptr @103
}

define ptr @Core_bool_lazyOr_18_case-1_matched.662(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.664(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.666(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.668, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.669, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.669, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.639)
  %13 = call ptr @Core_bool_lazyOr.638(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.668(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.670(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.672(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.674, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.675, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.675, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.639)
  %22 = call ptr @Core_bool_lazyOr.638(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.674(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.676(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_tag_is(ptr %0, ptr %1) {
Core_tag_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Tag, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_tag_withSymbol(ptr %0, ptr %1, ptr %2) {
Core_tag_withSymbol:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Tag, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is tag` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Tag, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is symbolTag` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %1, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_Not, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %27, ptr %33)
  %35 = load ptr, ptr @"text_`symbolTag | hasValue | bool.not` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %38 = load ptr, ptr %37, align 8
  %39 = call ptr @get_candy_function_pointer(ptr %38)
  %40 = call ptr @get_candy_function_environment(ptr %38)
  %41 = call ptr (...) %39(ptr %0, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 0
  store ptr %1, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 1
  store ptr %45, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 2
  store ptr %0, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_tag_withSymbol_28, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_tag_withSymbol_28, align 8
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %50 = getelementptr inbounds { ptr, ptr }, ptr %49, i32 0, i32 0
  store ptr %1, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds { ptr, ptr }, ptr %49, i32 0, i32 1
  store ptr %52, ptr %53, align 8
  %54 = call ptr @make_candy_function(ptr @Core_tag_withSymbol_29, ptr %49, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %54, ptr @fun_Core_tag_withSymbol_29, align 8
  %55 = load ptr, ptr @fun_Core_tag_withSymbol_28, align 8
  %56 = load ptr, ptr @fun_Core_tag_withSymbol_29, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %58 = load ptr, ptr %57, align 8
  %59 = call ptr @get_candy_function_pointer(ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr %58)
  %61 = call ptr (...) %59(ptr %41, ptr %55, ptr %56, ptr %60)
  ret ptr %61
}

define ptr @Core_tag_withSymbol_28(ptr %0) {
Core_tag_withSymbol_28:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %7, ptr %11)
  ret ptr %12
}

define ptr @Core_tag_withSymbol_29(ptr %0) {
Core_tag_withSymbol_29:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  ret ptr %7
}

define ptr @Core_tag_withValue(ptr %0, ptr %1, ptr %2) {
Core_tag_withValue:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Tag, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is tag` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %16)
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %1, ptr %19)
  ret ptr %20
}

define ptr @Core_type_is.678(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.680(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.682(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.684, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.685, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.685, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.684(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.686(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.688, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.689, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.689, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.688(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.690(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.692, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.693, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.693, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.692(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.694(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.696, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.697, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.697, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.696(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.698(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.700, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.701, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.701, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.700(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.702(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.704, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.705, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.705, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.704(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.706(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.708, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.709, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.709, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.708(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.710(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.712, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.713, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.713, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.712(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.714(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.716, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.717, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.724, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.725, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.717, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.725, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %1, ptr %32, align 8
  %33 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.726, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.727, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.728, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.729, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.727, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.729, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.716(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.718, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.719, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.722, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.723, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.719, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.723, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.718(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.720, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.721, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.721, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.720(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @104, align 8
  ret ptr @104
}

define ptr @Core_bool_lazyAnd_18_equals_else.722(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @105, align 8
  ret ptr @105
}

define ptr @Core_bool_lazyAnd_18_equals_else.724(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @106, align 8
  ret ptr @106
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.726(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.728(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.730, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.731, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.738, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.739, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.731, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.739, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.740, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.741, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.741, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.730(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.732, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.733, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.736, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.737, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.733, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.737, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.732(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.734, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.735, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.735, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.734(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @107, align 8
  ret ptr @107
}

define ptr @Core_bool_lazyAnd_18_equals_else.736(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @108, align 8
  ret ptr @108
}

define ptr @Core_bool_lazyAnd_18_equals_else.738(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @109, align 8
  ret ptr @109
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.740(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.742(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.744, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.745, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.745, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.715)
  %13 = call ptr @Core_bool_lazyAnd.714(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.744(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.746(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.748, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.749, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.756, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.757, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.749, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.757, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.758, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.759, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.759, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.748(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.750, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.751, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.754, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.755, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.751, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.755, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.750(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.752, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.753, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.753, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.752(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @110, align 8
  ret ptr @110
}

define ptr @Core_bool_lazyOr_18_equals_else.754(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @111, align 8
  ret ptr @111
}

define ptr @Core_bool_lazyOr_18_equals_else.756(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @112, align 8
  ret ptr @112
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.758(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.760, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.761, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.768, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.769, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.761, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.769, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.770, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.771, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.772, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.773, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.771, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.773, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.760(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.762, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.763, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.766, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.767, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.763, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.767, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.762(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.764, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.765, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.765, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.764(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @113, align 8
  ret ptr @113
}

define ptr @Core_bool_lazyOr_18_equals_else.766(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @114, align 8
  ret ptr @114
}

define ptr @Core_bool_lazyOr_18_equals_else.768(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @115, align 8
  ret ptr @115
}

define ptr @Core_bool_lazyOr_18_case-1_matched.770(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.772(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.774(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.776, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.777, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.777, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.747)
  %13 = call ptr @Core_bool_lazyOr.746(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.776(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.778(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.780(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.782, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.783, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.783, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.747)
  %22 = call ptr @Core_bool_lazyOr.746(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.782(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.784(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.786(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.788(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.790, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.791, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.791, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.790(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.792(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.794, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.795, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.795, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.794(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.796(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.798, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.799, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.799, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.798(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.800(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.802, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.803, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.803, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.802(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.804(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.806, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.807, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.807, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.806(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.808(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.810, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.811, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.811, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.810(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.812(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.814, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.815, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.815, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.814(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.816(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.818, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.819, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.819, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.818(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.820(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.822, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.823, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.830, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.831, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.823, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.831, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.832, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.833, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.834, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.835, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.833, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.835, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.822(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.824, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.825, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.828, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.829, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.825, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.829, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.824(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.826, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.827, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.827, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.826(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @116, align 8
  ret ptr @116
}

define ptr @Core_bool_lazyAnd_18_equals_else.828(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @117, align 8
  ret ptr @117
}

define ptr @Core_bool_lazyAnd_18_equals_else.830(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @118, align 8
  ret ptr @118
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.832(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.834(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.836, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.837, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.844, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.845, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.837, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.845, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.846, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.847, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.847, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.836(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.838, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.839, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.842, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.843, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.839, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.843, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.838(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.840, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.841, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.841, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.840(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @119, align 8
  ret ptr @119
}

define ptr @Core_bool_lazyAnd_18_equals_else.842(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @120, align 8
  ret ptr @120
}

define ptr @Core_bool_lazyAnd_18_equals_else.844(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @121, align 8
  ret ptr @121
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.846(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.848(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.850, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.851, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.851, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.821)
  %13 = call ptr @Core_bool_lazyAnd.820(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.850(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.852(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.854, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.855, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.862, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.863, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.855, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.863, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.864, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.865, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.865, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.854(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.856, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.857, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.860, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.861, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.857, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.861, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.856(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.858, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.859, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.859, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.858(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @122, align 8
  ret ptr @122
}

define ptr @Core_bool_lazyOr_18_equals_else.860(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @123, align 8
  ret ptr @123
}

define ptr @Core_bool_lazyOr_18_equals_else.862(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @124, align 8
  ret ptr @124
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.864(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.866, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.867, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.874, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.875, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.867, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.875, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.876, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.877, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.878, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.879, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.877, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.879, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.866(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.868, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.869, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.872, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.873, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.869, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.873, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.868(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.870, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.871, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.871, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.870(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @125, align 8
  ret ptr @125
}

define ptr @Core_bool_lazyOr_18_equals_else.872(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @126, align 8
  ret ptr @126
}

define ptr @Core_bool_lazyOr_18_equals_else.874(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @127, align 8
  ret ptr @127
}

define ptr @Core_bool_lazyOr_18_case-1_matched.876(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.878(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.880(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.882, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.883, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.883, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.853)
  %13 = call ptr @Core_bool_lazyOr.852(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.882(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.884(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.886(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.888, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.889, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.889, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.853)
  %22 = call ptr @Core_bool_lazyOr.852(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.888(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_check.890(ptr %0, ptr %1) {
Core_check_check:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = load ptr, ptr @tag_True, align 8
  %12 = call ptr @candy_builtin_equals(ptr %0, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.892", ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.893", align 8
  %16 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %17 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.893", align 8
  %18 = call ptr @candy_builtin_if_else(ptr %12, ptr %16, ptr %17)
  %19 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %20 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  %21 = call ptr @candy_builtin_if_else(ptr %18, ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %23 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.894", ptr %22, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %23, ptr @"fun_anonymous_$generated__needs_condition_else.895", align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.895", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %0, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.892"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.894"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_type_is.896(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.898(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.900(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.902, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.903, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.903, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.902(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.904(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.906, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.907, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.907, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.906(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.908(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.910, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.911, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.911, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.910(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.912(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.914, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.915, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.915, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.914(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.916(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.918, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.919, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.919, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.918(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.920(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.922, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.923, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.923, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.922(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.924(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.926, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.927, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.927, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.926(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.928(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.930, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.931, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.931, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.930(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive.932(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is2, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %1, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.934, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18.935, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18.935, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_18.935)
  %17 = call ptr @Core_controlFlow_recursive_18.934(ptr %15, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_controlFlow_recursive_18.934(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_18:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.936, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_18_0.937, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.937, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_18_0.936(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_type_is.938(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_int_is.940(ptr %0, ptr %1) {
Core_int_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_int_negate.942(ptr %0, ptr %1) {
Core_int_negate:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %12, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_int_compareTo.944(ptr %0, ptr %1, ptr %2) {
Core_int_compareTo:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr @tag_IntCompareTo, align 8
  %26 = call ptr @Builtins__structGet(ptr %24, ptr %25)
  %27 = call ptr @get_candy_function_pointer(ptr %26)
  %28 = call ptr @get_candy_function_environment(ptr %26)
  %29 = call ptr (...) %27(ptr %0, ptr %1, ptr %28)
  %30 = load ptr, ptr @tag_Equal, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %32 = load ptr, ptr %31, align 8
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %29, ptr %30, ptr %34)
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr @tag_Implies, align 8
  %39 = call ptr @Builtins__structGet(ptr %37, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %1, ptr %43)
  %45 = call ptr @get_candy_function_pointer(ptr %39)
  %46 = call ptr @get_candy_function_environment(ptr %39)
  %47 = call ptr (...) %45(ptr %35, ptr %44, ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check.891)
  %49 = call ptr @Core_check_check.890(ptr %47, ptr %48)
  ret ptr %29
}

define ptr @Core_int_isLessThan.946(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo.945)
  %24 = call ptr @Core_int_compareTo.944(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Less, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isGreaterThan.948(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo.945)
  %24 = call ptr @Core_int_compareTo.944(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Greater, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isLessThanOrEqualTo.950(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.949)
  %24 = call ptr @Core_int_isGreaterThan.948(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isGreaterThanOrEqualTo.952(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.947)
  %24 = call ptr @Core_int_isLessThan.946(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isPositive.954(ptr %0, ptr %1) {
Core_int_isPositive:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.949)
  %14 = call ptr @Core_int_isGreaterThan.948(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonPositive.956(ptr %0, ptr %1) {
Core_int_isNonPositive:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonPositive:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.949)
  %25 = call ptr @Core_int_isGreaterThan.948(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_isNegative.958(ptr %0, ptr %1) {
Core_int_isNegative:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.947)
  %14 = call ptr @Core_int_isLessThan.946(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonNegative.960(ptr %0, ptr %1) {
Core_int_isNonNegative:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.947)
  %25 = call ptr @Core_int_isLessThan.946(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_absolute.962(ptr %0, ptr %1) {
Core_int_absolute:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:absolute:8", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.947)
  %25 = call ptr @Core_int_isLessThan.946(ptr %0, ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %0, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %32, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_int_absolute_9.964, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_int_absolute_9.965, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_int_absolute_10.966, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_int_absolute_10.967, align 8
  %38 = load ptr, ptr @fun_Core_int_absolute_9.965, align 8
  %39 = load ptr, ptr @fun_Core_int_absolute_10.967, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %25, ptr %38, ptr %39, ptr %43)
  ret ptr %44
}

define ptr @Core_int_absolute_9.964(ptr %0) {
Core_int_absolute_9:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:absolute:9:2", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %14, ptr %16, ptr %20)
  ret ptr %21
}

define ptr @Core_int_absolute_10.966(ptr %0) {
Core_int_absolute_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_fitsInRustU32.968(ptr %0, ptr %1) {
Core_int_fitsInRustU32:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.961)
  %13 = call ptr @Core_int_isNonNegative.960(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_4294967295, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.947)
  %18 = call ptr @Core_int_isLessThan.946(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_fitsInRustU128.970(ptr %0, ptr %1) {
Core_int_fitsInRustU128:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.961)
  %13 = call ptr @Core_int_isNonNegative.960(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.947)
  %18 = call ptr @Core_int_isLessThan.946(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_isEven.972(ptr %0, ptr %1) {
Core_int_isEven:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  ret ptr %23
}

define ptr @Core_int_isOdd.974(ptr %0, ptr %1) {
Core_int_isOdd:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %0, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:int:isOdd:16", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @num_1, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %0, ptr %35, ptr %39)
  %41 = load ptr, ptr @num_0, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %40, ptr %41, ptr %45)
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr @tag_Not, align 8
  %50 = call ptr @Builtins__structGet(ptr %48, ptr %49)
  %51 = call ptr @get_candy_function_pointer(ptr %50)
  %52 = call ptr @get_candy_function_environment(ptr %50)
  %53 = call ptr (...) %51(ptr %23, ptr %52)
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %55 = load ptr, ptr %54, align 8
  %56 = call ptr @get_candy_function_pointer(ptr %55)
  %57 = call ptr @get_candy_function_environment(ptr %55)
  %58 = call ptr (...) %56(ptr %46, ptr %53, ptr %57)
  %59 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check.891)
  %60 = call ptr @Core_check_check.890(ptr %58, ptr %59)
  ret ptr %23
}

define ptr @Core_int_min.976(ptr %0, ptr %1, ptr %2) {
Core_int_min:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo.951)
  %24 = call ptr @Core_int_isLessThanOrEqualTo.950(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_min_15.978, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_min_15.979, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_min_16.980, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_min_16.981, align 8
  %31 = load ptr, ptr @fun_Core_int_min_15.979, align 8
  %32 = load ptr, ptr @fun_Core_int_min_16.981, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_min_15.978(ptr %0) {
Core_int_min_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_min_16.980(ptr %0) {
Core_int_min_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max.982(ptr %0, ptr %1, ptr %2) {
Core_int_max:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThanOrEqualTo.953)
  %24 = call ptr @Core_int_isGreaterThanOrEqualTo.952(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_max_15.984, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_max_15.985, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_max_16.986, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_max_16.987, align 8
  %31 = load ptr, ptr @fun_Core_int_max_15.985, align 8
  %32 = load ptr, ptr @fun_Core_int_max_16.987, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_max_15.984(ptr %0) {
Core_int_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max_16.986(ptr %0) {
Core_int_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_coerceAtLeast.988(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtLeast:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max.983)
  %24 = call ptr @Core_int_max.982(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceAtMost.990(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtMost:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min.977)
  %24 = call ptr @Core_int_min.976(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceIn.992(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_int_coerceIn:
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr @tag_Is, align 8
  %7 = call ptr @Builtins__structGet(ptr %5, ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %7)
  %10 = call ptr @get_candy_function_environment(ptr %7)
  %11 = call ptr (...) %9(ptr %0, ptr %8, ptr %10)
  %12 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_Is, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Int, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %17)
  %20 = call ptr @get_candy_function_environment(ptr %17)
  %21 = call ptr (...) %19(ptr %1, ptr %18, ptr %20)
  %22 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %2, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo.951)
  %35 = call ptr @Core_int_isLessThanOrEqualTo.950(ptr %1, ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_Is, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Int, align 8
  %43 = call ptr @get_candy_function_pointer(ptr %41)
  %44 = call ptr @get_candy_function_environment(ptr %41)
  %45 = call ptr (...) %43(ptr %0, ptr %42, ptr %44)
  %46 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %47 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %48 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr %47)
  %49 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr @tag_Is, align 8
  %52 = call ptr @Builtins__structGet(ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Int, align 8
  %54 = call ptr @get_candy_function_pointer(ptr %52)
  %55 = call ptr @get_candy_function_environment(ptr %52)
  %56 = call ptr (...) %54(ptr %1, ptr %53, ptr %55)
  %57 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max.983)
  %61 = call ptr @Core_int_max.982(ptr %0, ptr %1, ptr %60)
  %62 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr @tag_Is, align 8
  %65 = call ptr @Builtins__structGet(ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_Int, align 8
  %67 = call ptr @get_candy_function_pointer(ptr %65)
  %68 = call ptr @get_candy_function_environment(ptr %65)
  %69 = call ptr (...) %67(ptr %61, ptr %66, ptr %68)
  %70 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %71 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %72 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr %71)
  %73 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %74 = load ptr, ptr %73, align 8
  %75 = load ptr, ptr @tag_Is, align 8
  %76 = call ptr @Builtins__structGet(ptr %74, ptr %75)
  %77 = load ptr, ptr @tag_Int, align 8
  %78 = call ptr @get_candy_function_pointer(ptr %76)
  %79 = call ptr @get_candy_function_environment(ptr %76)
  %80 = call ptr (...) %78(ptr %2, ptr %77, ptr %79)
  %81 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %82 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %83 = call ptr @"anonymous_$generated__needs"(ptr %80, ptr %81, ptr %82)
  %84 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min.977)
  %85 = call ptr @Core_int_min.976(ptr %61, ptr %2, ptr %84)
  ret ptr %85
}

define ptr @Core_int_pow.994(ptr %0, ptr %1, ptr %2) {
Core_int_pow:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.961)
  %24 = call ptr @Core_int_isNonNegative.960(ptr %1, ptr %23)
  %25 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = alloca ptr, i64 3, align 8
  %28 = alloca ptr, i64 3, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %27, i64 0
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %28, i64 0
  store ptr %1, ptr %31, align 8
  %32 = load ptr, ptr @tag_Base, align 8
  %33 = getelementptr ptr, ptr %27, i64 1
  store ptr %32, ptr %33, align 8
  %34 = getelementptr ptr, ptr %28, i64 1
  store ptr %0, ptr %34, align 8
  %35 = getelementptr ptr, ptr %27, i64 2
  store ptr null, ptr %35, align 8
  %36 = getelementptr ptr, ptr %28, i64 2
  store ptr null, ptr %36, align 8
  %37 = call ptr @make_candy_struct(ptr %27, ptr %28)
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 0
  store ptr %40, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 1
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 2
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 3
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 4
  store ptr %52, ptr %53, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 5
  store ptr %55, ptr %56, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 6
  store ptr %58, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Core_int_pow_21.996, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Core_int_pow_21.997, align 8
  %61 = load ptr, ptr @fun_Core_int_pow_21.997, align 8
  %62 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive.933)
  %63 = call ptr @Core_controlFlow_recursive.932(ptr %37, ptr %61, ptr %62)
  ret ptr %63
}

define ptr @Core_int_pow_21.996(ptr %0, ptr %1, ptr %2) {
Core_int_pow_21:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_then.998, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_int_pow_21_1_equals_then.999, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_else.1016, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_int_pow_21_1_equals_else.1017, align 8
  %12 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then.999, align 8
  %13 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else.1017, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.1018, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_int_pow_21_1_isMatch_else.1019, align 8
  %22 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1019, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = load ptr, ptr @num_0, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %28, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_equals_else.1020, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_int_pow_21_4_equals_else.1021, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %35 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else.1021, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 3
  store ptr %36, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 4
  store ptr %26, ptr %52, align 8
  %53 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 5
  store ptr %0, ptr %53, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 6
  store ptr %28, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 7
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 8
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 9
  store ptr %62, ptr %63, align 8
  %64 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 10
  store ptr %65, ptr %66, align 8
  %67 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_didNotMatch.1022, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %67, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.1023, align 8
  %68 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %69 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.1023, align 8
  %70 = call ptr @candy_builtin_if_else(ptr %40, ptr %68, ptr %69)
  ret ptr %70
}

define ptr @Core_int_pow_21_1_equals_then.998(ptr %0) {
Core_int_pow_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.1000, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_int_pow_21_1_hasKey_then.1001, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.1002, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_1_hasKey_else.1003, align 8
  %15 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.1001, align 8
  %16 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.1003, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.1004, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_pow_21_1_isMatch_then.1005, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.1014, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_pow_21_1_isMatch_else.1015, align 8
  %31 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.1005, align 8
  %32 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1015, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_1_hasKey_then.1000(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @128, align 8
  ret ptr @128
}

define ptr @Core_int_pow_21_1_hasKey_else.1002(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @129, align 8
  ret ptr @129
}

define ptr @Core_int_pow_21_1_isMatch_then.1004(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Exponent, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.1006, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_int_pow_21_1_hasKey_then.1007, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.1008, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_pow_21_1_hasKey_else.1009, align 8
  %19 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.1007, align 8
  %20 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.1009, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.1010, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_int_pow_21_1_isMatch_then.1011, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.1012, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_1_isMatch_else.1013, align 8
  %33 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.1011, align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1013, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_int_pow_21_1_hasKey_then.1006(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Exponent, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @130, align 8
  ret ptr @130
}

define ptr @Core_int_pow_21_1_hasKey_else.1008(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @131, align 8
  ret ptr @131
}

define ptr @Core_int_pow_21_1_isMatch_then.1010(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @132, align 8
  ret ptr @132
}

define ptr @Core_int_pow_21_1_isMatch_else.1012(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_isMatch_else.1014(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_equals_else.1016(ptr %0) {
Core_int_pow_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @133, align 8
  ret ptr @133
}

define ptr @Core_int_pow_21_1_isMatch_else.1018(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_int_pow_21_4_equals_else.1020(ptr %0) {
Core_int_pow_21_4_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `0`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @134, align 8
  ret ptr @134
}

define ptr @Core_int_pow_21_4_case-0_didNotMatch.1022(ptr %0) {
Core_int_pow_21_4_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 2
  store ptr %13, ptr %14, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 3
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 4
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 5
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 6
  store ptr %25, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 7
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 8
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 10
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 9
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-1_matched.1024, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_int_pow_21_4_case-1_matched.1025, align 8
  %37 = call ptr @get_candy_function_environment(ptr @fun_Core_int_pow_21_4_case-1_matched.1025)
  %38 = call ptr @Core_int_pow_21_4_case-1_matched.1024(ptr %37)
  ret ptr %38
}

define ptr @Core_int_pow_21_4_case-1_matched.1024(ptr %0) {
Core_int_pow_21_4_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @num_1, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %21, ptr %22, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 2
  store ptr %36, ptr %37, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 3
  store ptr %39, ptr %40, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 4
  store ptr %42, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_5.1026, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_int_pow_21_4_5.1027, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 3
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 4
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 5
  store ptr %62, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_6.1028, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_int_pow_21_4_6.1029, align 8
  %65 = load ptr, ptr @fun_Core_int_pow_21_4_5.1027, align 8
  %66 = load ptr, ptr @fun_Core_int_pow_21_4_6.1029, align 8
  %67 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %68 = load ptr, ptr %67, align 8
  %69 = call ptr @get_candy_function_pointer(ptr %68)
  %70 = call ptr @get_candy_function_environment(ptr %68)
  %71 = call ptr (...) %69(ptr %27, ptr %65, ptr %66, ptr %70)
  ret ptr %71
}

define ptr @Core_int_pow_21_4_5.1026(ptr %0) {
Core_int_pow_21_4_5:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = alloca ptr, i64 3, align 8
  %19 = alloca ptr, i64 3, align 8
  %20 = load ptr, ptr @tag_Exponent, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %19, i64 0
  store ptr %17, ptr %22, align 8
  %23 = load ptr, ptr @tag_Base, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr ptr, ptr %19, i64 1
  store ptr %9, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = getelementptr ptr, ptr %19, i64 2
  store ptr null, ptr %27, align 8
  %28 = call ptr @make_candy_struct(ptr %18, ptr %19)
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = call ptr @get_candy_function_pointer(ptr %30)
  %32 = call ptr @get_candy_function_environment(ptr %30)
  %33 = call ptr (...) %31(ptr %28, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_4_6.1028(ptr %0) {
Core_int_pow_21_4_6:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = alloca ptr, i64 3, align 8
  %25 = alloca ptr, i64 3, align 8
  %26 = load ptr, ptr @tag_Base, align 8
  %27 = getelementptr ptr, ptr %24, i64 0
  store ptr %26, ptr %27, align 8
  %28 = getelementptr ptr, ptr %25, i64 0
  store ptr %9, ptr %28, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %24, i64 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %25, i64 1
  store ptr %23, ptr %31, align 8
  %32 = getelementptr ptr, ptr %24, i64 2
  store ptr null, ptr %32, align 8
  %33 = getelementptr ptr, ptr %25, i64 2
  store ptr null, ptr %33, align 8
  %34 = call ptr @make_candy_struct(ptr %24, ptr %25)
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %36 = load ptr, ptr %35, align 8
  %37 = call ptr @get_candy_function_pointer(ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr %36)
  %39 = call ptr (...) %37(ptr %34, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %41, ptr %39, ptr %45)
  ret ptr %46
}

define ptr @Core_type_is.1030(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1032(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1034(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1036, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1037, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1037, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1036(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1038(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1040, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1041, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1041, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1040(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1042(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1044, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1045, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1045, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1044(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1046(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1048, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1049, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1049, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1048(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1050(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1052, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1053, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1053, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1052(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1054(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1056, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1057, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1057, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1056(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1058(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1060, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1061, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1061, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1060(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1062(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1064, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1065, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1065, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1064(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.1066(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1068, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.1069, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1076, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.1077, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1069, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1077, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.1078, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1079, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1080, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1081, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1079, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1081, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.1068(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1070, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1071, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1074, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1075, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1071, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1075, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1070(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1072, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1073, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1073, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1072(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @135, align 8
  ret ptr @135
}

define ptr @Core_bool_lazyAnd_18_equals_else.1074(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @136, align 8
  ret ptr @136
}

define ptr @Core_bool_lazyAnd_18_equals_else.1076(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @137, align 8
  ret ptr @137
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.1078(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1080(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1082, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.1083, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1090, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.1091, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1083, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1091, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1092, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1093, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1093, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.1082(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1084, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1085, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1088, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1089, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1085, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1089, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1084(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1086, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1087, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1087, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1086(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @138, align 8
  ret ptr @138
}

define ptr @Core_bool_lazyAnd_18_equals_else.1088(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @139, align 8
  ret ptr @139
}

define ptr @Core_bool_lazyAnd_18_equals_else.1090(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @140, align 8
  ret ptr @140
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1092(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.1094(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.1096, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.1097, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.1097, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.1067)
  %13 = call ptr @Core_bool_lazyAnd.1066(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.1096(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.1098(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1100, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.1101, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1108, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.1109, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1101, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1109, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %26, ptr %32, align 8
  %33 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %34, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %0, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %1, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1110, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1111, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1111, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.1100(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1102, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1103, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1106, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1107, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1103, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1107, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1102(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1104, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1105, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1105, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1104(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @141, align 8
  ret ptr @141
}

define ptr @Core_bool_lazyOr_18_equals_else.1106(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @142, align 8
  ret ptr @142
}

define ptr @Core_bool_lazyOr_18_equals_else.1108(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @143, align 8
  ret ptr @143
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1110(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1112, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.1113, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1120, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.1121, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1113, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1121, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.1122, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1123, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1124, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1125, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1123, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1125, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.1112(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1114, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1115, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1118, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1119, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1115, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1119, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1114(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1116, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1117, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1117, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1116(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @144, align 8
  ret ptr @144
}

define ptr @Core_bool_lazyOr_18_equals_else.1118(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @145, align 8
  ret ptr @145
}

define ptr @Core_bool_lazyOr_18_equals_else.1120(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @146, align 8
  ret ptr @146
}

define ptr @Core_bool_lazyOr_18_case-1_matched.1122(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1124(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.1126(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.1128, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.1129, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.1129, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1099)
  %13 = call ptr @Core_bool_lazyOr.1098(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.1128(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.1130(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.1132(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.1134, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.1135, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.1135, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1099)
  %22 = call ptr @Core_bool_lazyOr.1098(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.1134(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.1136(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1138(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1140(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1142, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1143, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1143, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1142(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1144(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1146, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1147, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1147, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1146(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1148(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1150, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1151, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1151, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1150(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1152(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1154, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1155, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1155, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1154(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1156(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1158, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1159, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1159, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1158(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1160(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1162, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1163, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1163, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1162(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1164(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1166, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1167, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1167, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1166(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1168(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1170, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1171, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1171, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1170(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive.1172(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is2, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %1, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.1174, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18.1175, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18.1175, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_18.1175)
  %17 = call ptr @Core_controlFlow_recursive_18.1174(ptr %15, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_controlFlow_recursive_18.1174(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_18:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.1176, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_18_0.1177, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.1177, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_18_0.1176(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_type_is.1178(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1180(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1182(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1184, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1185, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1185, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1184(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1186(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1188, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1189, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1189, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1188(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1190(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1192, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1193, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1193, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1192(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1194(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1196, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1197, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1197, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1196(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1198(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1200, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1201, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1201, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1200(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1202(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1204, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1205, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1205, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1204(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1206(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1208, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1209, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1209, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1208(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1210(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1212, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1213, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1213, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1212(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_type_is.1214(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1216(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1218(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1220, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1221, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1221, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1220(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1222(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1224, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1225, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1225, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1224(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1226(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1228, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1229, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1229, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1228(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1230(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1232, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1233, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1233, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1232(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1234(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1236, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1237, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1237, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1236(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1238(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1240, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1241, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1241, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1240(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1242(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1244, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1245, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1245, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1244(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1246(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1248, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1249, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1249, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1248(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.1250(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1252, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.1253, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1260, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.1261, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1253, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1261, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.1262, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1263, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1264, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1265, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1263, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1265, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.1252(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1254, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1255, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1258, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1259, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1255, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1259, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1254(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1256, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1257, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1257, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1256(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @147, align 8
  ret ptr @147
}

define ptr @Core_bool_lazyAnd_18_equals_else.1258(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @148, align 8
  ret ptr @148
}

define ptr @Core_bool_lazyAnd_18_equals_else.1260(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @149, align 8
  ret ptr @149
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.1262(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1264(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1266, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.1267, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1274, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.1275, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1267, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1275, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1276, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1277, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1277, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.1266(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1268, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1269, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1272, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1273, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1269, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1273, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1268(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1270, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1271, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1271, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1270(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @150, align 8
  ret ptr @150
}

define ptr @Core_bool_lazyAnd_18_equals_else.1272(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @151, align 8
  ret ptr @151
}

define ptr @Core_bool_lazyAnd_18_equals_else.1274(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @152, align 8
  ret ptr @152
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1276(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.1278(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.1280, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.1281, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.1281, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.1251)
  %13 = call ptr @Core_bool_lazyAnd.1250(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.1280(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.1282(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1284, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.1285, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1292, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.1293, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1285, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1293, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1294, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1295, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1295, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.1284(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1286, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1287, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1290, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1291, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1287, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1291, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1286(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1288, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1289, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1289, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1288(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @153, align 8
  ret ptr @153
}

define ptr @Core_bool_lazyOr_18_equals_else.1290(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @154, align 8
  ret ptr @154
}

define ptr @Core_bool_lazyOr_18_equals_else.1292(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @155, align 8
  ret ptr @155
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1294(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1296, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.1297, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1304, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.1305, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1297, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1305, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.1306, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1307, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1308, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1309, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1307, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1309, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.1296(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1298, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1299, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1302, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1303, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1299, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1303, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1298(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1300, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1301, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1301, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1300(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @156, align 8
  ret ptr @156
}

define ptr @Core_bool_lazyOr_18_equals_else.1302(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @157, align 8
  ret ptr @157
}

define ptr @Core_bool_lazyOr_18_equals_else.1304(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @158, align 8
  ret ptr @158
}

define ptr @Core_bool_lazyOr_18_case-1_matched.1306(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1308(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.1310(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.1312, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.1313, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.1313, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1283)
  %13 = call ptr @Core_bool_lazyOr.1282(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.1312(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.1314(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.1316(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.1318, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.1319, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.1319, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1283)
  %22 = call ptr @Core_bool_lazyOr.1282(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.1318(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.1320(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1322(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1324(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1326, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1327, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1327, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1326(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1328(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1330, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1331, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1331, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1330(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1332(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1334, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1335, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1335, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1334(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1336(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1338, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1339, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1339, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1338(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1340(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1342, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1343, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1343, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1342(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1344(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1346, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1347, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1347, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1346(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1348(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1350, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1351, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1351, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1350(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1352(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1354, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1355, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1355, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1354(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.1356(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1358, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.1359, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1366, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.1367, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1359, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1367, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.1368, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1369, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1370, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1371, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1369, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1371, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.1358(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1360, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1361, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1364, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1365, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1361, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1365, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1360(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1362, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1363, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1363, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1362(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @159, align 8
  ret ptr @159
}

define ptr @Core_bool_lazyAnd_18_equals_else.1364(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @160, align 8
  ret ptr @160
}

define ptr @Core_bool_lazyAnd_18_equals_else.1366(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @161, align 8
  ret ptr @161
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.1368(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1370(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1372, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.1373, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1380, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.1381, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1373, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1381, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1382, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1383, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1383, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.1372(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1374, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1375, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1378, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1379, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1375, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1379, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1374(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1376, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1377, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1377, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1376(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @162, align 8
  ret ptr @162
}

define ptr @Core_bool_lazyAnd_18_equals_else.1378(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @163, align 8
  ret ptr @163
}

define ptr @Core_bool_lazyAnd_18_equals_else.1380(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @164, align 8
  ret ptr @164
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1382(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.1384(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.1386, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.1387, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.1387, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.1357)
  %13 = call ptr @Core_bool_lazyAnd.1356(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.1386(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.1388(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1390, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.1391, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1398, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.1399, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1391, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1399, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %1, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %26, ptr %33, align 8
  %34 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %35, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %0, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1400, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1401, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1401, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.1390(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1392, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1393, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1396, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1397, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1393, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1397, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1392(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1394, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1395, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1395, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1394(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @165, align 8
  ret ptr @165
}

define ptr @Core_bool_lazyOr_18_equals_else.1396(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @166, align 8
  ret ptr @166
}

define ptr @Core_bool_lazyOr_18_equals_else.1398(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @167, align 8
  ret ptr @167
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1400(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1402, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.1403, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1410, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.1411, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1403, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1411, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.1412, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1413, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1414, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1415, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1413, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1415, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.1402(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1404, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1405, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1408, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1409, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1405, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1409, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1404(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1406, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1407, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1407, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1406(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @168, align 8
  ret ptr @168
}

define ptr @Core_bool_lazyOr_18_equals_else.1408(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @169, align 8
  ret ptr @169
}

define ptr @Core_bool_lazyOr_18_equals_else.1410(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @170, align 8
  ret ptr @170
}

define ptr @Core_bool_lazyOr_18_case-1_matched.1412(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1414(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.1416(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.1418, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.1419, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.1419, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1389)
  %13 = call ptr @Core_bool_lazyOr.1388(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.1418(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.1420(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.1422(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.1424, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.1425, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.1425, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1389)
  %22 = call ptr @Core_bool_lazyOr.1388(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.1424(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_check.1426(ptr %0, ptr %1) {
Core_check_check:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = load ptr, ptr @tag_True, align 8
  %12 = call ptr @candy_builtin_equals(ptr %0, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.1428", ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.1429", align 8
  %16 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %17 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.1429", align 8
  %18 = call ptr @candy_builtin_if_else(ptr %12, ptr %16, ptr %17)
  %19 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %20 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  %21 = call ptr @candy_builtin_if_else(ptr %18, ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %23 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.1430", ptr %22, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %23, ptr @"fun_anonymous_$generated__needs_condition_else.1431", align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.1431", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %0, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.1428"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.1430"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_type_is.1432(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1434(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1436(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1438, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1439, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1439, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1438(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1440(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1442, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1443, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1443, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1442(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1444(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1446, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1447, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1447, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1446(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1448(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1450, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1451, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1451, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1450(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1452(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1454, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1455, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1455, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1454(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1456(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1458, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1459, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1459, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1458(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1460(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1462, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1463, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1463, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1462(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1464(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1466, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1467, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1467, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1466(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive.1468(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is2, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %1, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.1470, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18.1471, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18.1471, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_18.1471)
  %17 = call ptr @Core_controlFlow_recursive_18.1470(ptr %15, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_controlFlow_recursive_18.1470(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_18:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.1472, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_18_0.1473, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.1473, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_18_0.1472(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_type_is.1474(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_int_is.1476(ptr %0, ptr %1) {
Core_int_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_int_negate.1478(ptr %0, ptr %1) {
Core_int_negate:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %12, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_int_compareTo.1480(ptr %0, ptr %1, ptr %2) {
Core_int_compareTo:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr @tag_IntCompareTo, align 8
  %26 = call ptr @Builtins__structGet(ptr %24, ptr %25)
  %27 = call ptr @get_candy_function_pointer(ptr %26)
  %28 = call ptr @get_candy_function_environment(ptr %26)
  %29 = call ptr (...) %27(ptr %0, ptr %1, ptr %28)
  %30 = load ptr, ptr @tag_Equal, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %32 = load ptr, ptr %31, align 8
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %29, ptr %30, ptr %34)
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr @tag_Implies, align 8
  %39 = call ptr @Builtins__structGet(ptr %37, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %1, ptr %43)
  %45 = call ptr @get_candy_function_pointer(ptr %39)
  %46 = call ptr @get_candy_function_environment(ptr %39)
  %47 = call ptr (...) %45(ptr %35, ptr %44, ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check.1427)
  %49 = call ptr @Core_check_check.1426(ptr %47, ptr %48)
  ret ptr %29
}

define ptr @Core_int_isLessThan.1482(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo.1481)
  %24 = call ptr @Core_int_compareTo.1480(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Less, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isGreaterThan.1484(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo.1481)
  %24 = call ptr @Core_int_compareTo.1480(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Greater, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isLessThanOrEqualTo.1486(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.1485)
  %24 = call ptr @Core_int_isGreaterThan.1484(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isGreaterThanOrEqualTo.1488(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.1483)
  %24 = call ptr @Core_int_isLessThan.1482(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isPositive.1490(ptr %0, ptr %1) {
Core_int_isPositive:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.1485)
  %14 = call ptr @Core_int_isGreaterThan.1484(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonPositive.1492(ptr %0, ptr %1) {
Core_int_isNonPositive:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonPositive:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.1485)
  %25 = call ptr @Core_int_isGreaterThan.1484(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_isNegative.1494(ptr %0, ptr %1) {
Core_int_isNegative:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.1483)
  %14 = call ptr @Core_int_isLessThan.1482(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonNegative.1496(ptr %0, ptr %1) {
Core_int_isNonNegative:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.1483)
  %25 = call ptr @Core_int_isLessThan.1482(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_absolute.1498(ptr %0, ptr %1) {
Core_int_absolute:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:absolute:8", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.1483)
  %25 = call ptr @Core_int_isLessThan.1482(ptr %0, ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %0, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_int_absolute_9.1500, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_int_absolute_9.1501, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_int_absolute_10.1502, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_int_absolute_10.1503, align 8
  %38 = load ptr, ptr @fun_Core_int_absolute_9.1501, align 8
  %39 = load ptr, ptr @fun_Core_int_absolute_10.1503, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %25, ptr %38, ptr %39, ptr %43)
  ret ptr %44
}

define ptr @Core_int_absolute_9.1500(ptr %0) {
Core_int_absolute_9:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:absolute:9:2", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %14, ptr %16, ptr %20)
  ret ptr %21
}

define ptr @Core_int_absolute_10.1502(ptr %0) {
Core_int_absolute_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_fitsInRustU32.1504(ptr %0, ptr %1) {
Core_int_fitsInRustU32:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.1497)
  %13 = call ptr @Core_int_isNonNegative.1496(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_4294967295, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.1483)
  %18 = call ptr @Core_int_isLessThan.1482(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_fitsInRustU128.1506(ptr %0, ptr %1) {
Core_int_fitsInRustU128:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.1497)
  %13 = call ptr @Core_int_isNonNegative.1496(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.1483)
  %18 = call ptr @Core_int_isLessThan.1482(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_isEven.1508(ptr %0, ptr %1) {
Core_int_isEven:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  ret ptr %23
}

define ptr @Core_int_isOdd.1510(ptr %0, ptr %1) {
Core_int_isOdd:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %0, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:int:isOdd:16", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @num_1, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %0, ptr %35, ptr %39)
  %41 = load ptr, ptr @num_0, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %40, ptr %41, ptr %45)
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr @tag_Not, align 8
  %50 = call ptr @Builtins__structGet(ptr %48, ptr %49)
  %51 = call ptr @get_candy_function_pointer(ptr %50)
  %52 = call ptr @get_candy_function_environment(ptr %50)
  %53 = call ptr (...) %51(ptr %23, ptr %52)
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %55 = load ptr, ptr %54, align 8
  %56 = call ptr @get_candy_function_pointer(ptr %55)
  %57 = call ptr @get_candy_function_environment(ptr %55)
  %58 = call ptr (...) %56(ptr %46, ptr %53, ptr %57)
  %59 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check.1427)
  %60 = call ptr @Core_check_check.1426(ptr %58, ptr %59)
  ret ptr %23
}

define ptr @Core_int_min.1512(ptr %0, ptr %1, ptr %2) {
Core_int_min:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo.1487)
  %24 = call ptr @Core_int_isLessThanOrEqualTo.1486(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_min_15.1514, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_min_15.1515, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_min_16.1516, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_min_16.1517, align 8
  %31 = load ptr, ptr @fun_Core_int_min_15.1515, align 8
  %32 = load ptr, ptr @fun_Core_int_min_16.1517, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_min_15.1514(ptr %0) {
Core_int_min_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_min_16.1516(ptr %0) {
Core_int_min_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max.1518(ptr %0, ptr %1, ptr %2) {
Core_int_max:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThanOrEqualTo.1489)
  %24 = call ptr @Core_int_isGreaterThanOrEqualTo.1488(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_max_15.1520, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_max_15.1521, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_max_16.1522, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_max_16.1523, align 8
  %31 = load ptr, ptr @fun_Core_int_max_15.1521, align 8
  %32 = load ptr, ptr @fun_Core_int_max_16.1523, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_max_15.1520(ptr %0) {
Core_int_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max_16.1522(ptr %0) {
Core_int_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_coerceAtLeast.1524(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtLeast:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max.1519)
  %24 = call ptr @Core_int_max.1518(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceAtMost.1526(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtMost:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min.1513)
  %24 = call ptr @Core_int_min.1512(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceIn.1528(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_int_coerceIn:
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr @tag_Is, align 8
  %7 = call ptr @Builtins__structGet(ptr %5, ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %7)
  %10 = call ptr @get_candy_function_environment(ptr %7)
  %11 = call ptr (...) %9(ptr %0, ptr %8, ptr %10)
  %12 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_Is, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Int, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %17)
  %20 = call ptr @get_candy_function_environment(ptr %17)
  %21 = call ptr (...) %19(ptr %1, ptr %18, ptr %20)
  %22 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %2, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo.1487)
  %35 = call ptr @Core_int_isLessThanOrEqualTo.1486(ptr %1, ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_Is, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Int, align 8
  %43 = call ptr @get_candy_function_pointer(ptr %41)
  %44 = call ptr @get_candy_function_environment(ptr %41)
  %45 = call ptr (...) %43(ptr %0, ptr %42, ptr %44)
  %46 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %47 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %48 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr %47)
  %49 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr @tag_Is, align 8
  %52 = call ptr @Builtins__structGet(ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Int, align 8
  %54 = call ptr @get_candy_function_pointer(ptr %52)
  %55 = call ptr @get_candy_function_environment(ptr %52)
  %56 = call ptr (...) %54(ptr %1, ptr %53, ptr %55)
  %57 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max.1519)
  %61 = call ptr @Core_int_max.1518(ptr %0, ptr %1, ptr %60)
  %62 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr @tag_Is, align 8
  %65 = call ptr @Builtins__structGet(ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_Int, align 8
  %67 = call ptr @get_candy_function_pointer(ptr %65)
  %68 = call ptr @get_candy_function_environment(ptr %65)
  %69 = call ptr (...) %67(ptr %61, ptr %66, ptr %68)
  %70 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %71 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %72 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr %71)
  %73 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %74 = load ptr, ptr %73, align 8
  %75 = load ptr, ptr @tag_Is, align 8
  %76 = call ptr @Builtins__structGet(ptr %74, ptr %75)
  %77 = load ptr, ptr @tag_Int, align 8
  %78 = call ptr @get_candy_function_pointer(ptr %76)
  %79 = call ptr @get_candy_function_environment(ptr %76)
  %80 = call ptr (...) %78(ptr %2, ptr %77, ptr %79)
  %81 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %82 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %83 = call ptr @"anonymous_$generated__needs"(ptr %80, ptr %81, ptr %82)
  %84 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min.1513)
  %85 = call ptr @Core_int_min.1512(ptr %61, ptr %2, ptr %84)
  ret ptr %85
}

define ptr @Core_int_pow.1530(ptr %0, ptr %1, ptr %2) {
Core_int_pow:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.1497)
  %24 = call ptr @Core_int_isNonNegative.1496(ptr %1, ptr %23)
  %25 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = alloca ptr, i64 3, align 8
  %28 = alloca ptr, i64 3, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %27, i64 0
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %28, i64 0
  store ptr %1, ptr %31, align 8
  %32 = load ptr, ptr @tag_Base, align 8
  %33 = getelementptr ptr, ptr %27, i64 1
  store ptr %32, ptr %33, align 8
  %34 = getelementptr ptr, ptr %28, i64 1
  store ptr %0, ptr %34, align 8
  %35 = getelementptr ptr, ptr %27, i64 2
  store ptr null, ptr %35, align 8
  %36 = getelementptr ptr, ptr %28, i64 2
  store ptr null, ptr %36, align 8
  %37 = call ptr @make_candy_struct(ptr %27, ptr %28)
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 0
  store ptr %40, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 1
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 2
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 3
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 4
  store ptr %52, ptr %53, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 5
  store ptr %55, ptr %56, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 6
  store ptr %58, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Core_int_pow_21.1532, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Core_int_pow_21.1533, align 8
  %61 = load ptr, ptr @fun_Core_int_pow_21.1533, align 8
  %62 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive.1469)
  %63 = call ptr @Core_controlFlow_recursive.1468(ptr %37, ptr %61, ptr %62)
  ret ptr %63
}

define ptr @Core_int_pow_21.1532(ptr %0, ptr %1, ptr %2) {
Core_int_pow_21:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_then.1534, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_int_pow_21_1_equals_then.1535, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_else.1552, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_int_pow_21_1_equals_else.1553, align 8
  %12 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then.1535, align 8
  %13 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else.1553, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.1554, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_int_pow_21_1_isMatch_else.1555, align 8
  %22 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1555, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = load ptr, ptr @num_0, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %28, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_equals_else.1556, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_int_pow_21_4_equals_else.1557, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %35 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else.1557, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %28, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 3
  store ptr %50, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 4
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 5
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 6
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 7
  store ptr %62, ptr %63, align 8
  %64 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 8
  store ptr %36, ptr %64, align 8
  %65 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 9
  store ptr %26, ptr %65, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 10
  store ptr %0, ptr %66, align 8
  %67 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_didNotMatch.1558, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %67, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.1559, align 8
  %68 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %69 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.1559, align 8
  %70 = call ptr @candy_builtin_if_else(ptr %40, ptr %68, ptr %69)
  ret ptr %70
}

define ptr @Core_int_pow_21_1_equals_then.1534(ptr %0) {
Core_int_pow_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.1536, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_int_pow_21_1_hasKey_then.1537, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.1538, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_1_hasKey_else.1539, align 8
  %15 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.1537, align 8
  %16 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.1539, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.1540, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_pow_21_1_isMatch_then.1541, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.1550, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_pow_21_1_isMatch_else.1551, align 8
  %31 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.1541, align 8
  %32 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1551, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_1_hasKey_then.1536(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @171, align 8
  ret ptr @171
}

define ptr @Core_int_pow_21_1_hasKey_else.1538(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @172, align 8
  ret ptr @172
}

define ptr @Core_int_pow_21_1_isMatch_then.1540(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Exponent, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.1542, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_int_pow_21_1_hasKey_then.1543, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.1544, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_pow_21_1_hasKey_else.1545, align 8
  %19 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.1543, align 8
  %20 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.1545, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.1546, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_int_pow_21_1_isMatch_then.1547, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.1548, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_1_isMatch_else.1549, align 8
  %33 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.1547, align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.1549, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_int_pow_21_1_hasKey_then.1542(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Exponent, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @173, align 8
  ret ptr @173
}

define ptr @Core_int_pow_21_1_hasKey_else.1544(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @174, align 8
  ret ptr @174
}

define ptr @Core_int_pow_21_1_isMatch_then.1546(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @175, align 8
  ret ptr @175
}

define ptr @Core_int_pow_21_1_isMatch_else.1548(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_isMatch_else.1550(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_equals_else.1552(ptr %0) {
Core_int_pow_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @176, align 8
  ret ptr @176
}

define ptr @Core_int_pow_21_1_isMatch_else.1554(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_int_pow_21_4_equals_else.1556(ptr %0) {
Core_int_pow_21_4_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `0`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @177, align 8
  ret ptr @177
}

define ptr @Core_int_pow_21_4_case-0_didNotMatch.1558(ptr %0) {
Core_int_pow_21_4_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 2
  store ptr %13, ptr %14, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 3
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 4
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 5
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 6
  store ptr %25, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 7
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 8
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 10
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 9
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-1_matched.1560, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_int_pow_21_4_case-1_matched.1561, align 8
  %37 = call ptr @get_candy_function_environment(ptr @fun_Core_int_pow_21_4_case-1_matched.1561)
  %38 = call ptr @Core_int_pow_21_4_case-1_matched.1560(ptr %37)
  ret ptr %38
}

define ptr @Core_int_pow_21_4_case-1_matched.1560(ptr %0) {
Core_int_pow_21_4_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @num_1, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %21, ptr %22, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 2
  store ptr %36, ptr %37, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 3
  store ptr %39, ptr %40, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 4
  store ptr %42, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_5.1562, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_int_pow_21_4_5.1563, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 3
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 4
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 5
  store ptr %62, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_6.1564, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_int_pow_21_4_6.1565, align 8
  %65 = load ptr, ptr @fun_Core_int_pow_21_4_5.1563, align 8
  %66 = load ptr, ptr @fun_Core_int_pow_21_4_6.1565, align 8
  %67 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %68 = load ptr, ptr %67, align 8
  %69 = call ptr @get_candy_function_pointer(ptr %68)
  %70 = call ptr @get_candy_function_environment(ptr %68)
  %71 = call ptr (...) %69(ptr %27, ptr %65, ptr %66, ptr %70)
  ret ptr %71
}

define ptr @Core_int_pow_21_4_5.1562(ptr %0) {
Core_int_pow_21_4_5:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = alloca ptr, i64 3, align 8
  %19 = alloca ptr, i64 3, align 8
  %20 = load ptr, ptr @tag_Exponent, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %19, i64 0
  store ptr %17, ptr %22, align 8
  %23 = load ptr, ptr @tag_Base, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr ptr, ptr %19, i64 1
  store ptr %9, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = getelementptr ptr, ptr %19, i64 2
  store ptr null, ptr %27, align 8
  %28 = call ptr @make_candy_struct(ptr %18, ptr %19)
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = call ptr @get_candy_function_pointer(ptr %30)
  %32 = call ptr @get_candy_function_environment(ptr %30)
  %33 = call ptr (...) %31(ptr %28, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_4_6.1564(ptr %0) {
Core_int_pow_21_4_6:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = alloca ptr, i64 3, align 8
  %25 = alloca ptr, i64 3, align 8
  %26 = load ptr, ptr @tag_Base, align 8
  %27 = getelementptr ptr, ptr %24, i64 0
  store ptr %26, ptr %27, align 8
  %28 = getelementptr ptr, ptr %25, i64 0
  store ptr %9, ptr %28, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %24, i64 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %25, i64 1
  store ptr %23, ptr %31, align 8
  %32 = getelementptr ptr, ptr %24, i64 2
  store ptr null, ptr %32, align 8
  %33 = getelementptr ptr, ptr %25, i64 2
  store ptr null, ptr %33, align 8
  %34 = call ptr @make_candy_struct(ptr %24, ptr %25)
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %36 = load ptr, ptr %35, align 8
  %37 = call ptr @get_candy_function_pointer(ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr %36)
  %39 = call ptr (...) %37(ptr %34, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %41, ptr %39, ptr %45)
  ret ptr %46
}

define ptr @Core_type_is.1566(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1568(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1570(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1572, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1573, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1573, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1572(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1574(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1576, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1577, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1577, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1576(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1578(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1580, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1581, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1581, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1580(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1582(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1584, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1585, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1585, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1584(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1586(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1588, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1589, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1589, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1588(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1590(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1592, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1593, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1593, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1592(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1594(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1596, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1597, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1597, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1596(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1598(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1600, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1601, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1601, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1600(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_type_is.1602(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1604(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1606(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1608, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1609, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1609, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1608(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1610(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1612, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1613, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1613, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1612(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1614(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1616, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1617, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1617, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1616(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1618(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1620, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1621, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1621, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1620(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1622(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1624, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1625, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1625, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1624(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1626(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1628, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1629, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1629, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1628(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1630(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1632, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1633, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1633, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1632(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1634(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1636, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1637, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1637, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1636(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.1638(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1640, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.1641, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1648, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.1649, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1641, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1649, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.1650, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1651, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1652, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1653, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1651, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1653, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.1640(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1642, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1643, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1646, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1647, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1643, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1647, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1642(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1644, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1645, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1645, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1644(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @178, align 8
  ret ptr @178
}

define ptr @Core_bool_lazyAnd_18_equals_else.1646(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @179, align 8
  ret ptr @179
}

define ptr @Core_bool_lazyAnd_18_equals_else.1648(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @180, align 8
  ret ptr @180
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.1650(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1652(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1654, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.1655, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1662, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.1663, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1655, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1663, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1664, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1665, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1665, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.1654(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1656, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1657, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1660, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1661, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1657, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1661, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1656(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1658, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1659, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1659, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1658(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @181, align 8
  ret ptr @181
}

define ptr @Core_bool_lazyAnd_18_equals_else.1660(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @182, align 8
  ret ptr @182
}

define ptr @Core_bool_lazyAnd_18_equals_else.1662(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @183, align 8
  ret ptr @183
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1664(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.1666(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.1668, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.1669, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.1669, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.1639)
  %13 = call ptr @Core_bool_lazyAnd.1638(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.1668(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.1670(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1672, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.1673, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1680, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.1681, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1673, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1681, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1682, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1683, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1683, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.1672(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1674, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1675, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1678, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1679, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1675, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1679, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1674(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1676, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1677, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1677, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1676(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @184, align 8
  ret ptr @184
}

define ptr @Core_bool_lazyOr_18_equals_else.1678(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @185, align 8
  ret ptr @185
}

define ptr @Core_bool_lazyOr_18_equals_else.1680(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @186, align 8
  ret ptr @186
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1682(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1684, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.1685, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1692, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.1693, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1685, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1693, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.1694, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1695, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1696, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1697, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1695, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1697, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.1684(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1686, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1687, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1690, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1691, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1687, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1691, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1686(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1688, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1689, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1689, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1688(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @187, align 8
  ret ptr @187
}

define ptr @Core_bool_lazyOr_18_equals_else.1690(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @188, align 8
  ret ptr @188
}

define ptr @Core_bool_lazyOr_18_equals_else.1692(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @189, align 8
  ret ptr @189
}

define ptr @Core_bool_lazyOr_18_case-1_matched.1694(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1696(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.1698(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.1700, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.1701, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.1701, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1671)
  %13 = call ptr @Core_bool_lazyOr.1670(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.1700(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.1702(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.1704(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.1706, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.1707, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.1707, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1671)
  %22 = call ptr @Core_bool_lazyOr.1670(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.1706(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.1708(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_tag_is.1710(ptr %0, ptr %1) {
Core_tag_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Tag, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_tag_withSymbol.1712(ptr %0, ptr %1, ptr %2) {
Core_tag_withSymbol:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Tag, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is tag` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Tag, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is symbolTag` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %1, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_Not, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %27, ptr %33)
  %35 = load ptr, ptr @"text_`symbolTag | hasValue | bool.not` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8
  %39 = call ptr @get_candy_function_pointer(ptr %38)
  %40 = call ptr @get_candy_function_environment(ptr %38)
  %41 = call ptr (...) %39(ptr %0, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 0
  store ptr %44, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 1
  store ptr %1, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 2
  store ptr %0, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_tag_withSymbol_28.1714, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_tag_withSymbol_28.1715, align 8
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %50 = getelementptr inbounds { ptr, ptr }, ptr %49, i32 0, i32 0
  store ptr %1, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds { ptr, ptr }, ptr %49, i32 0, i32 1
  store ptr %52, ptr %53, align 8
  %54 = call ptr @make_candy_function(ptr @Core_tag_withSymbol_29.1716, ptr %49, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %54, ptr @fun_Core_tag_withSymbol_29.1717, align 8
  %55 = load ptr, ptr @fun_Core_tag_withSymbol_28.1715, align 8
  %56 = load ptr, ptr @fun_Core_tag_withSymbol_29.1717, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %58 = load ptr, ptr %57, align 8
  %59 = call ptr @get_candy_function_pointer(ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr %58)
  %61 = call ptr (...) %59(ptr %41, ptr %55, ptr %56, ptr %60)
  ret ptr %61
}

define ptr @Core_tag_withSymbol_28.1714(ptr %0) {
Core_tag_withSymbol_28:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %7, ptr %11)
  ret ptr %12
}

define ptr @Core_tag_withSymbol_29.1716(ptr %0) {
Core_tag_withSymbol_29:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  ret ptr %7
}

define ptr @Core_tag_withValue.1718(ptr %0, ptr %1, ptr %2) {
Core_tag_withValue:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Tag, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is tag` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %16)
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %1, ptr %19)
  ret ptr %20
}

define ptr @Core_type_is.1720(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_result_is(ptr %0) {
Core_result_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_result_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.1728, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_result_is_1_equals_else.1729, align 8
  %10 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_else.1729, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_matched, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %37 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.1722, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.1723, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.1726, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.1727, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.1723, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.1727, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.1722(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.1724, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.1725, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.1725, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.1724(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @191, align 8
  ret ptr @191
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @190, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.1726(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @192, align 8
  ret ptr @192
}

define ptr @Core_result_is_1_equals_else.1728(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @193, align 8
  ret ptr @193
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.1730, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.1731, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.1740, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.1741, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.1731, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.1741, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.1730(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.1732, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.1733, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.1738, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.1739, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.1733, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.1739, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.1732(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.1734, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.1735, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.1736, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.1737, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.1735, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.1737, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.1734(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @194, align 8
  ret ptr @194
}

define ptr @Core_result_is_1_equals_else.1736(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @190, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.1738(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @195, align 8
  ret ptr @195
}

define ptr @Core_result_is_1_equals_else.1740(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @196, align 8
  ret ptr @196
}

define ptr @Core_result_is_1_case-0_matched(ptr %0) {
Core_result_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_True, align 8
  ret ptr %5
}

define ptr @Core_result_is_1_case-0_didNotMatch(ptr %0) {
Core_result_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_result_getValue(ptr %0, ptr %1) {
Core_result_getValue:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_GetValue, align 8
  %8 = call ptr @Builtins__structGet(ptr %6, ptr %7)
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %0, ptr %10)
  ret ptr %11
}

define ptr @Core_result_isOk(ptr %0, ptr %1) {
Core_result_isOk:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_WithoutValue, align 8
  %8 = call ptr @Builtins__structGet(ptr %6, ptr %7)
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %0, ptr %10)
  %12 = load ptr, ptr @tag_Ok, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  ret ptr %17
}

define ptr @Core_result_unwrap(ptr %0, ptr %1) {
Core_result_unwrap:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_result_is(ptr %0)
  %6 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:result:unwrap:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_WithoutValue, align 8
  %12 = call ptr @Builtins__structGet(ptr %10, ptr %11)
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %0, ptr %14)
  %16 = load ptr, ptr @tag_Ok, align 8
  %17 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @"text_`isOk result` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_result_is(ptr %0)
  %25 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %26 = load ptr, ptr @"Core:result:unwrap:12", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_GetValue, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %0, ptr %33)
  ret ptr %34
}

define ptr @Core_result_expect(ptr %0, ptr %1, ptr %2) {
Core_result_expect:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Text, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %1, ptr %10, ptr %12)
  %14 = load ptr, ptr @"text_`type.is message Text` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @Core_result_is(ptr %0)
  %17 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:result:expect:20", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_WithoutValue, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %23)
  %25 = call ptr @get_candy_function_environment(ptr %23)
  %26 = call ptr (...) %24(ptr %0, ptr %25)
  %27 = load ptr, ptr @tag_Ok, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %26, ptr %27, ptr %31)
  %33 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %1, ptr null)
  %34 = call ptr @Core_result_is(ptr %0)
  %35 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:result:expect:25", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_GetValue, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %43)
  ret ptr %44
}

define ptr @Core_result_isError(ptr %0, ptr %1) {
Core_result_isError:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_WithoutValue, align 8
  %8 = call ptr @Builtins__structGet(ptr %6, ptr %7)
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %0, ptr %10)
  %12 = load ptr, ptr @tag_Error, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  ret ptr %17
}

define ptr @Core_result_unwrapError(ptr %0, ptr %1) {
Core_result_unwrapError:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_result_is(ptr %0)
  %6 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:result:unwrapError:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_WithoutValue, align 8
  %12 = call ptr @Builtins__structGet(ptr %10, ptr %11)
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %0, ptr %14)
  %16 = load ptr, ptr @tag_Error, align 8
  %17 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @"text_`isError result` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_result_is(ptr %0)
  %25 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %26 = load ptr, ptr @"Core:result:unwrapError:12", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_GetValue, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %0, ptr %33)
  ret ptr %34
}

define ptr @Core_result_expectError(ptr %0, ptr %1, ptr %2) {
Core_result_expectError:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Text, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %1, ptr %10, ptr %12)
  %14 = load ptr, ptr @"text_`type.is message Text` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @Core_result_is(ptr %0)
  %17 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:result:expectError:20", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_WithoutValue, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %23)
  %25 = call ptr @get_candy_function_environment(ptr %23)
  %26 = call ptr (...) %24(ptr %0, ptr %25)
  %27 = load ptr, ptr @tag_Error, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %26, ptr %27, ptr %31)
  %33 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %1, ptr null)
  %34 = call ptr @Core_result_is(ptr %0)
  %35 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:result:expectError:25", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_GetValue, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %43)
  ret ptr %44
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_result_mapOrElse:
  %4 = call ptr @Core_result_is(ptr %0)
  %5 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr @tag_Is1, align 8
  %10 = call ptr @Builtins__structGet(ptr %8, ptr %9)
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %1, ptr %12)
  %14 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_Is1, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = call ptr @get_candy_function_pointer(ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr %19)
  %22 = call ptr (...) %20(ptr %2, ptr %21)
  %23 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = call ptr @candy_builtin_type_of(ptr %0)
  %26 = load ptr, ptr @tag_Tag, align 8
  %27 = call ptr @candy_builtin_equals(ptr %26, ptr %25)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %25, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.1748, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_result_mapOrElse_30_equals_else.1749, align 8
  %34 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %35 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1749, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %27, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %36, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %1, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_matched, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %0, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %36, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %2, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_didNotMatch, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %50 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %51 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %52 = call ptr @candy_builtin_if_else(ptr %40, ptr %50, ptr %51)
  ret ptr %52
}

define ptr @Core_result_mapOrElse_30_equals_then(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.1742, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.1743, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.1746, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.1747, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1743, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1747, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.1742(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.1744, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.1745, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1745, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.1744(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @197, align 8
  ret ptr @197
}

define ptr @Core_result_mapOrElse_30_equals_else(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @190, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.1746(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @198, align 8
  ret ptr @198
}

define ptr @Core_result_mapOrElse_30_equals_else.1748(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @199, align 8
  ret ptr @199
}

define ptr @Core_result_mapOrElse_30_case-0_matched(ptr %0) {
Core_result_mapOrElse_30_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.1750, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_result_mapOrElse_30_equals_then.1751, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.1760, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_else.1761, align 8
  %18 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1751, align 8
  %19 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1761, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_result_mapOrElse_30_equals_then.1750(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.1752, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.1753, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.1758, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.1759, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1753, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1759, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.1752(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.1754, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.1755, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.1756, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.1757, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.1755, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.1757, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.1754(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @200, align 8
  ret ptr @200
}

define ptr @Core_result_mapOrElse_30_equals_else.1756(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @190, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.1758(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @201, align 8
  ret ptr @201
}

define ptr @Core_result_mapOrElse_30_equals_else.1760(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @202, align 8
  ret ptr @202
}

define ptr @Core_result_mapOrElse_30_case-1_matched(ptr %0) {
Core_result_mapOrElse_30_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-1_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_result_mapOr(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_result_mapOr:
  %4 = call ptr @Core_result_is(ptr %0)
  %5 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr @tag_Is1, align 8
  %10 = call ptr @Builtins__structGet(ptr %8, ptr %9)
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %1, ptr %12)
  %14 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %2, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_result_mapOr_20, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_result_mapOr_20, align 8
  %19 = load ptr, ptr @fun_Core_result_mapOr_20, align 8
  %20 = call ptr @get_candy_function_environment(ptr @fun_Core_result_mapOrElse)
  %21 = call ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_result_mapOr_20(ptr %0, ptr %1) {
Core_result_mapOr_20:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_flatMap(ptr %0, ptr %1, ptr %2) {
Core_result_flatMap:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is1, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_flatMap_19, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_flatMap_19, align 8
  %18 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  %19 = call ptr @get_candy_function_environment(ptr @fun_Core_result_mapOr)
  %20 = call ptr @Core_result_mapOr(ptr %0, ptr %18, ptr %0, ptr %19)
  ret ptr %20
}

define ptr @Core_result_flatMap_19(ptr %0, ptr %1) {
Core_result_flatMap_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %6
}

define ptr @Core_result_map(ptr %0, ptr %1, ptr %2) {
Core_result_map:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is1, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_map_19, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_map_19, align 8
  %18 = load ptr, ptr @fun_Core_result_map_19, align 8
  %19 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMap)
  %20 = call ptr @Core_result_flatMap(ptr %0, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_result_map_19(ptr %0, ptr %1) {
Core_result_map_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  %7 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Ok.1762, align 8
  ret ptr @tag_Ok.1762
}

define ptr @Core_result_and(ptr %0, ptr %1) {
Core_result_and:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is resultA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_result_is(ptr %1)
  %6 = load ptr, ptr @"text_`is resultB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_and_12, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_and_12, align 8
  %11 = load ptr, ptr @fun_Core_result_and_12, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMap)
  %13 = call ptr @Core_result_flatMap(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_and_12(ptr %0, ptr %1) {
Core_result_and_12:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_flatMapError(ptr %0, ptr %1, ptr %2) {
Core_result_flatMapError:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is1, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_flatMapError_19, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_flatMapError_19, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_flatMapError_20, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_flatMapError_20, align 8
  %21 = load ptr, ptr @fun_Core_result_flatMapError_19, align 8
  %22 = load ptr, ptr @fun_Core_result_flatMapError_20, align 8
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_result_mapOrElse)
  %24 = call ptr @Core_result_mapOrElse(ptr %0, ptr %21, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_result_flatMapError_19(ptr %0, ptr %1) {
Core_result_flatMapError_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_flatMapError_20(ptr %0, ptr %1) {
Core_result_flatMapError_20:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %6
}

define ptr @Core_result_mapError(ptr %0, ptr %1, ptr %2) {
Core_result_mapError:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is1, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapError_19, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapError_19, align 8
  %18 = load ptr, ptr @fun_Core_result_mapError_19, align 8
  %19 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMapError)
  %20 = call ptr @Core_result_flatMapError(ptr %0, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_result_mapError_19(ptr %0, ptr %1) {
Core_result_mapError_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  %7 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Error.1763, align 8
  ret ptr @tag_Error.1763
}

define ptr @Core_result_or(ptr %0, ptr %1) {
Core_result_or:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is resultA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_result_is(ptr %1)
  %6 = load ptr, ptr @"text_`is resultB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_or_12, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_or_12, align 8
  %11 = load ptr, ptr @fun_Core_result_or_12, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMapError)
  %13 = call ptr @Core_result_flatMapError(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_or_12(ptr %0, ptr %1) {
Core_result_or_12:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @"Core_iterable_range_38, Core_result_unwrapOrElse_19"(ptr %0) {
"Core_iterable_range_38, Core_result_unwrapOrElse_19":
  ret ptr %0
}

define ptr @Core_result_unwrapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_unwrapOrElse:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %18, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_20, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %21 = load ptr, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_19", align 8
  %22 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_result_mapOrElse)
  %24 = call ptr @Core_result_mapOrElse(ptr %0, ptr %21, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_result_unwrapOrElse_20(ptr %0, ptr %1) {
Core_result_unwrapOrElse_20:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Run, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %5)
  %9 = call ptr @get_candy_function_environment(ptr %5)
  %10 = call ptr (...) %8(ptr %7, ptr %9)
  ret ptr %10
}

define ptr @Core_result_unwrapOr(ptr %0, ptr %1) {
Core_result_unwrapOr:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_unwrapOr_7, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_unwrapOr_7, align 8
  %8 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %9 = call ptr @get_candy_function_environment(ptr @fun_Core_result_unwrapOrElse)
  %10 = call ptr @Core_result_unwrapOrElse(ptr %0, ptr %8, ptr %9)
  ret ptr %10
}

define ptr @Core_result_unwrapOr_7(ptr %0) {
Core_result_unwrapOr_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_flatten(ptr %0) {
Core_result_flatten:
  %1 = call ptr @Core_result_is(ptr %0)
  %2 = load ptr, ptr @"text_`is resultOfResult` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5 = call ptr @make_candy_function(ptr @Core_result_flatten_7, ptr %4, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_result_flatten_7, align 8
  %6 = load ptr, ptr @fun_Core_result_flatten_7, align 8
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMap)
  %8 = call ptr @Core_result_flatMap(ptr %0, ptr %6, ptr %7)
  ret ptr %8
}

define ptr @Core_result_flatten_7(ptr %0) {
Core_result_flatten_7:
  %1 = call ptr @Core_result_is(ptr %0)
  %2 = load ptr, ptr @"text_`is innerResult` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  ret ptr %0
}

define ptr @Core_type_is.1764(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_list_is(ptr %0, ptr %1) {
Core_list_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_List, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_list_isEmpty(ptr %0, ptr %1) {
Core_list_isEmpty:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_List, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %13)
  %15 = call ptr @get_candy_function_environment(ptr %13)
  %16 = call ptr (...) %14(ptr %0, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @get_candy_function_pointer(ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr %19)
  %22 = call ptr (...) %20(ptr %16, ptr %17, ptr %21)
  ret ptr %22
}

define ptr @Core_list_lastIndex_9() {
Core_list_lastIndex_9:
  %0 = load ptr, ptr @tag_Error.1766, align 8
  ret ptr %0
}

define ptr @Core_list_lastIndex(ptr %0, ptr %1) {
Core_list_lastIndex:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_List, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_List, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:list:lastIndex:8", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %0, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = call ptr @get_candy_function_pointer(ptr %30)
  %32 = call ptr @get_candy_function_environment(ptr %30)
  %33 = call ptr (...) %31(ptr %27, ptr %28, ptr %32)
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr }, ptr %34, i32 0, i32 0
  store ptr %36, ptr %37, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 4
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr }, ptr %34, i32 0, i32 1
  store ptr %39, ptr %40, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr }, ptr %34, i32 0, i32 2
  store ptr %0, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_list_lastIndex_10, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_list_lastIndex_10, align 8
  %43 = load ptr, ptr @fun_Core_list_lastIndex_9, align 8
  %44 = load ptr, ptr @fun_Core_list_lastIndex_10, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %46 = load ptr, ptr %45, align 8
  %47 = call ptr @get_candy_function_pointer(ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr %46)
  %49 = call ptr (...) %47(ptr %33, ptr %43, ptr %44, ptr %48)
  ret ptr %49
}

define ptr @Core_list_lastIndex_10(ptr %0) {
Core_list_lastIndex_10:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr @tag_Subtract, align 8
  %11 = call ptr @Builtins__structGet(ptr %9, ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @get_candy_function_pointer(ptr %11)
  %14 = call ptr @get_candy_function_environment(ptr %11)
  %15 = call ptr (...) %13(ptr %7, ptr %12, ptr %14)
  %16 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_Ok.1767, align 8
  ret ptr @tag_Ok.1767
}

define ptr @Core_list_isValidIndex(ptr %0, ptr %1, ptr %2) {
Core_list_isValidIndex:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = call ptr @get_candy_function_pointer(ptr %16)
  %18 = call ptr @get_candy_function_environment(ptr %16)
  %19 = call ptr (...) %17(ptr %1, ptr %18)
  %20 = load ptr, ptr @"text_`int.is index` was not satisfied", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr null)
  %22 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = load ptr, ptr @tag_Is, align 8
  %25 = call ptr @Builtins__structGet(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_List, align 8
  %27 = call ptr @get_candy_function_pointer(ptr %25)
  %28 = call ptr @get_candy_function_environment(ptr %25)
  %29 = call ptr (...) %27(ptr %0, ptr %26, ptr %28)
  %30 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:list:isValidIndex:20", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %0, ptr %36)
  %38 = load ptr, ptr @num_0, align 8
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %40 = load ptr, ptr %39, align 8
  %41 = call ptr @get_candy_function_pointer(ptr %40)
  %42 = call ptr @get_candy_function_environment(ptr %40)
  %43 = call ptr (...) %41(ptr %37, ptr %38, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr }, ptr %44, i32 0, i32 0
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr }, ptr %44, i32 0, i32 1
  store ptr %1, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_list_isValidIndex_22, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_list_isValidIndex_22, align 8
  %50 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %51 = load ptr, ptr @fun_Core_list_isValidIndex_22, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %53 = load ptr, ptr %52, align 8
  %54 = call ptr @get_candy_function_pointer(ptr %53)
  %55 = call ptr @get_candy_function_environment(ptr %53)
  %56 = call ptr (...) %54(ptr %43, ptr %50, ptr %51, ptr %55)
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %58 = load ptr, ptr %57, align 8
  %59 = load ptr, ptr @tag_LazyAnd, align 8
  %60 = call ptr @Builtins__structGet(ptr %58, ptr %59)
  %61 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %62 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 0
  store ptr %0, ptr %62, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 1
  store ptr %64, ptr %65, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 2
  store ptr %67, ptr %68, align 8
  %69 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 3
  store ptr %1, ptr %69, align 8
  %70 = call ptr @make_candy_function(ptr @Core_list_isValidIndex_32, ptr %61, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %70, ptr @fun_Core_list_isValidIndex_32, align 8
  %71 = load ptr, ptr @fun_Core_list_isValidIndex_32, align 8
  %72 = call ptr @get_candy_function_pointer(ptr %60)
  %73 = call ptr @get_candy_function_environment(ptr %60)
  %74 = call ptr (...) %72(ptr %56, ptr %71, ptr %73)
  ret ptr %74
}

define ptr @Core_list_isValidIndex_22(ptr %0) {
Core_list_isValidIndex_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsNonNegative, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_list_isValidIndex_32(ptr %0) {
Core_list_isValidIndex_32:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_list_lastIndex)
  %8 = call ptr @Core_list_lastIndex(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_Unwrap, align 8
  %12 = call ptr @Builtins__structGet(ptr %10, ptr %11)
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %8, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %4)
  %19 = call ptr @get_candy_function_environment(ptr %4)
  %20 = call ptr (...) %18(ptr %17, ptr %15, ptr %19)
  ret ptr %20
}

define ptr @Core_list_isValidInsertIndex(ptr %0, ptr %1, ptr %2) {
Core_list_isValidInsertIndex:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = call ptr @get_candy_function_pointer(ptr %16)
  %18 = call ptr @get_candy_function_environment(ptr %16)
  %19 = call ptr (...) %17(ptr %1, ptr %18)
  %20 = load ptr, ptr @"text_`int.is index` was not satisfied", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr null)
  %22 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = load ptr, ptr @tag_Is, align 8
  %25 = call ptr @Builtins__structGet(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_List, align 8
  %27 = call ptr @get_candy_function_pointer(ptr %25)
  %28 = call ptr @get_candy_function_environment(ptr %25)
  %29 = call ptr (...) %27(ptr %0, ptr %26, ptr %28)
  %30 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:list:isValidInsertIndex:20", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %0, ptr %36)
  %38 = load ptr, ptr @num_0, align 8
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %40 = load ptr, ptr %39, align 8
  %41 = call ptr @get_candy_function_pointer(ptr %40)
  %42 = call ptr @get_candy_function_environment(ptr %40)
  %43 = call ptr (...) %41(ptr %37, ptr %38, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr, ptr }, ptr %44, i32 0, i32 0
  store ptr %1, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr }, ptr %44, i32 0, i32 1
  store ptr %47, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_list_isValidInsertIndex_22, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_list_isValidInsertIndex_22, align 8
  %50 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %51 = load ptr, ptr @fun_Core_list_isValidInsertIndex_22, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %53 = load ptr, ptr %52, align 8
  %54 = call ptr @get_candy_function_pointer(ptr %53)
  %55 = call ptr @get_candy_function_environment(ptr %53)
  %56 = call ptr (...) %54(ptr %43, ptr %50, ptr %51, ptr %55)
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %58 = load ptr, ptr %57, align 8
  %59 = load ptr, ptr @tag_LazyAnd, align 8
  %60 = call ptr @Builtins__structGet(ptr %58, ptr %59)
  %61 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %62 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 0
  store ptr %1, ptr %62, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 1
  store ptr %64, ptr %65, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 2
  store ptr %67, ptr %68, align 8
  %69 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 3
  store ptr %0, ptr %69, align 8
  %70 = call ptr @make_candy_function(ptr @Core_list_isValidInsertIndex_32, ptr %61, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %70, ptr @fun_Core_list_isValidInsertIndex_32, align 8
  %71 = load ptr, ptr @fun_Core_list_isValidInsertIndex_32, align 8
  %72 = call ptr @get_candy_function_pointer(ptr %60)
  %73 = call ptr @get_candy_function_environment(ptr %60)
  %74 = call ptr (...) %72(ptr %56, ptr %71, ptr %73)
  ret ptr %74
}

define ptr @Core_list_isValidInsertIndex_22(ptr %0) {
Core_list_isValidInsertIndex_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsNonNegative, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_list_isValidInsertIndex_32(ptr %0) {
Core_list_isValidInsertIndex_32:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %4)
  %15 = call ptr @get_candy_function_environment(ptr %4)
  %16 = call ptr (...) %14(ptr %13, ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_list_single_6_case-0_matched() {
Core_list_single_6_case-0_matched:
  %0 = load ptr, ptr @tag_Error.1768, align 8
  ret ptr %0
}

define ptr @Core_list_single(ptr %0, ptr %1) {
Core_list_single:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_List, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_List, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_list_single_6_equals_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_list_single_6_equals_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_list_single_6_equals_else.1770, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_list_single_6_equals_else.1771, align 8
  %21 = load ptr, ptr @fun_Core_list_single_6_equals_then, align 8
  %22 = load ptr, ptr @fun_Core_list_single_6_equals_else.1771, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_list_single_6_case-0_didNotMatch, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_list_single_6_case-0_didNotMatch, align 8
  %32 = load ptr, ptr @fun_Core_list_single_6_case-0_matched, align 8
  %33 = load ptr, ptr @fun_Core_list_single_6_case-0_didNotMatch, align 8
  %34 = call ptr @candy_builtin_if_else(ptr %27, ptr %32, ptr %33)
  ret ptr %34
}

define ptr @Core_list_single_6_equals_then(ptr %0) {
Core_list_single_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_list_length(ptr %2)
  %4 = load ptr, ptr @num_0, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_list_single_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_list_single_6_equals_else, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_list_single_6_equals_else, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  ret ptr %11
}

define ptr @Core_list_single_6_equals_else(ptr %0) {
Core_list_single_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected 0 items, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @203, align 8
  ret ptr @203
}

define ptr @Core_list_single_6_equals_else.1770(ptr %0) {
Core_list_single_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a List, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @204, align 8
  ret ptr @204
}

define ptr @Core_list_single_6_case-0_didNotMatch(ptr %0) {
Core_list_single_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_List, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_list_single_6_equals_then.1772, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_list_single_6_equals_then.1773, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_list_single_6_equals_else.1778, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_list_single_6_equals_else.1779, align 8
  %18 = load ptr, ptr @fun_Core_list_single_6_equals_then.1773, align 8
  %19 = load ptr, ptr @fun_Core_list_single_6_equals_else.1779, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_list_single_6_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_list_single_6_case-1_matched, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_list_single_6_case-1_didNotMatch, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_list_single_6_case-1_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_list_single_6_case-1_matched, align 8
  %32 = load ptr, ptr @fun_Core_list_single_6_case-1_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_list_single_6_equals_then.1772(ptr %0) {
Core_list_single_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_list_length(ptr %2)
  %4 = load ptr, ptr @num_1, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_list_single_6_equals_then.1774, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_list_single_6_equals_then.1775, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_list_single_6_equals_else.1776, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_list_single_6_equals_else.1777, align 8
  %14 = load ptr, ptr @fun_Core_list_single_6_equals_then.1775, align 8
  %15 = load ptr, ptr @fun_Core_list_single_6_equals_else.1777, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_list_single_6_equals_then.1774(ptr %0) {
Core_list_single_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @205, align 8
  ret ptr @205
}

define ptr @Core_list_single_6_equals_else.1776(ptr %0) {
Core_list_single_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected 1 item, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @206, align 8
  ret ptr @206
}

define ptr @Core_list_single_6_equals_else.1778(ptr %0) {
Core_list_single_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a List, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @207, align 8
  ret ptr @207
}

define ptr @Core_list_single_6_case-1_matched(ptr %0) {
Core_list_single_6_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %5, align 1
  %6 = call ptr @make_candy_tag(ptr %5, ptr %4)
  store ptr %6, ptr @tag_Ok.1780, align 8
  ret ptr @tag_Ok.1780
}

define ptr @Core_list_single_6_case-1_didNotMatch(ptr %0) {
Core_list_single_6_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_Error.1769, align 8
  ret ptr %5
}

define ptr @Core_list_first_6_case-0_matched() {
Core_list_first_6_case-0_matched:
  %0 = load ptr, ptr @tag_Error.1781, align 8
  ret ptr %0
}

define ptr @Core_list_first(ptr %0, ptr %1) {
Core_list_first:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_List, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_List, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_list_first_6_equals_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_list_first_6_equals_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_list_first_6_equals_else.1782, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_list_first_6_equals_else.1783, align 8
  %21 = load ptr, ptr @fun_Core_list_first_6_equals_then, align 8
  %22 = load ptr, ptr @fun_Core_list_first_6_equals_else.1783, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %28, i32 0, i32 2
  store ptr %23, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_list_first_6_case-0_didNotMatch, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_list_first_6_case-0_didNotMatch, align 8
  %35 = load ptr, ptr @fun_Core_list_first_6_case-0_matched, align 8
  %36 = load ptr, ptr @fun_Core_list_first_6_case-0_didNotMatch, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %27, ptr %35, ptr %36)
  ret ptr %37
}

define ptr @Core_list_first_6_equals_then(ptr %0) {
Core_list_first_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_list_length(ptr %2)
  %4 = load ptr, ptr @num_0, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_list_first_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_list_first_6_equals_else, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_list_first_6_equals_else, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  ret ptr %11
}

define ptr @Core_list_first_6_equals_else(ptr %0) {
Core_list_first_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected 0 items, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @208, align 8
  ret ptr @208
}

define ptr @Core_list_first_6_equals_else.1782(ptr %0) {
Core_list_first_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a List, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @209, align 8
  ret ptr @209
}

define ptr @Core_list_first_6_case-0_didNotMatch(ptr %0) {
Core_list_first_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_0, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %6, ptr %7, ptr %11)
  %13 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %13, align 1
  %14 = call ptr @make_candy_tag(ptr %13, ptr %12)
  store ptr %14, ptr @tag_Ok.1784, align 8
  ret ptr @tag_Ok.1784
}

define ptr @Core_list_last_16(ptr %0) {
Core_list_last_16:
  %1 = load ptr, ptr @"text_Can't get the last item of an empty list.", align 8
  ret ptr %1
}

define ptr @Core_list_last(ptr %0, ptr %1) {
Core_list_last:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_List, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_list_lastIndex)
  %13 = call ptr @Core_list_lastIndex(ptr %0, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_MapError, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = load ptr, ptr @fun_Core_list_last_16, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %17)
  %20 = call ptr @get_candy_function_environment(ptr %17)
  %21 = call ptr (...) %19(ptr %13, ptr %18, ptr %20)
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = load ptr, ptr @tag_Map, align 8
  %25 = call ptr @Builtins__structGet(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_list_last_26, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_list_last_26, align 8
  %32 = load ptr, ptr @fun_Core_list_last_26, align 8
  %33 = call ptr @get_candy_function_pointer(ptr %25)
  %34 = call ptr @get_candy_function_environment(ptr %25)
  %35 = call ptr (...) %33(ptr %21, ptr %32, ptr %34)
  ret ptr %35
}

define ptr @Core_list_last_26(ptr %0, ptr %1) {
Core_list_last_26:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_list_prepend(ptr %0, ptr %1, ptr %2) {
Core_list_prepend:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = load ptr, ptr @num_0, align 8
  %14 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %0, ptr %13, ptr %1, ptr %17)
  ret ptr %18
}

define ptr @Core_list_append(ptr %0, ptr %1, ptr %2) {
Core_list_append:
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %16)
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @get_candy_function_pointer(ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr %19)
  %22 = call ptr (...) %20(ptr %0, ptr %17, ptr %1, ptr %21)
  ret ptr %22
}

define ptr @Core_list_update(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_list_update:
  %4 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr @tag_Is, align 8
  %7 = call ptr @Builtins__structGet(ptr %5, ptr %6)
  %8 = load ptr, ptr @tag_List, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %7)
  %10 = call ptr @get_candy_function_environment(ptr %7)
  %11 = call ptr (...) %9(ptr %0, ptr %8, ptr %10)
  %12 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 4
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_Is, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %1, ptr %19)
  %21 = load ptr, ptr @"text_`int.is index` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_list_isValidIndex)
  %24 = call ptr @Core_list_isValidIndex(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @"text_`list | isValidIndex index` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = load ptr, ptr @tag_Is1, align 8
  %30 = call ptr @Builtins__structGet(ptr %28, ptr %29)
  %31 = call ptr @get_candy_function_pointer(ptr %30)
  %32 = call ptr @get_candy_function_environment(ptr %30)
  %33 = call ptr (...) %31(ptr %2, ptr %32)
  %34 = load ptr, ptr @"text_`function.is1 updater` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  %37 = load ptr, ptr %36, align 8
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %0, ptr %1, ptr %39)
  %41 = call ptr @get_candy_function_pointer(ptr %2)
  %42 = call ptr @get_candy_function_environment(ptr %2)
  %43 = call ptr (...) %41(ptr %40, ptr %42)
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 3
  %45 = load ptr, ptr %44, align 8
  %46 = call ptr @get_candy_function_pointer(ptr %45)
  %47 = call ptr @get_candy_function_environment(ptr %45)
  %48 = call ptr (...) %46(ptr %0, ptr %1, ptr %43, ptr %47)
  ret ptr %48
}

define ptr @Core_list_generate(ptr %0, ptr %1, ptr %2) {
Core_list_generate:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %0, ptr %8)
  %10 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_IsNonNegative, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %0, ptr %17)
  %19 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr null)
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr @tag_FitsInRustU32, align 8
  %24 = call ptr @Builtins__structGet(ptr %22, ptr %23)
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %0, ptr %26)
  %28 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_Is1, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %1, ptr %35)
  %37 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %38 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr null)
  %39 = load ptr, ptr @tag_Placeholder, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %39, ptr %43)
  %45 = alloca ptr, i64 3, align 8
  %46 = alloca ptr, i64 3, align 8
  %47 = load ptr, ptr @tag_List, align 8
  %48 = getelementptr ptr, ptr %45, i64 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr ptr, ptr %46, i64 0
  store ptr %44, ptr %49, align 8
  %50 = load ptr, ptr @tag_Index, align 8
  %51 = load ptr, ptr @num_0, align 8
  %52 = getelementptr ptr, ptr %45, i64 1
  store ptr %50, ptr %52, align 8
  %53 = getelementptr ptr, ptr %46, i64 1
  store ptr %51, ptr %53, align 8
  %54 = getelementptr ptr, ptr %45, i64 2
  store ptr null, ptr %54, align 8
  %55 = getelementptr ptr, ptr %46, i64 2
  store ptr null, ptr %55, align 8
  %56 = call ptr @make_candy_struct(ptr %45, ptr %46)
  %57 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %57, i32 0, i32 0
  store ptr %0, ptr %58, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %57, i32 0, i32 1
  store ptr %1, ptr %59, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %61 = load ptr, ptr %60, align 8
  %62 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %57, i32 0, i32 2
  store ptr %61, ptr %62, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %57, i32 0, i32 3
  store ptr %64, ptr %65, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %57, i32 0, i32 4
  store ptr %67, ptr %68, align 8
  %69 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %70 = load ptr, ptr %69, align 8
  %71 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %57, i32 0, i32 5
  store ptr %70, ptr %71, align 8
  %72 = call ptr @make_candy_function(ptr @Core_list_generate_59, ptr %57, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %72, ptr @fun_Core_list_generate_59, align 8
  %73 = load ptr, ptr @fun_Core_list_generate_59, align 8
  %74 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive.1173)
  %75 = call ptr @Core_controlFlow_recursive.1172(ptr %56, ptr %73, ptr %74)
  ret ptr %75
}

define ptr @Core_list_generate_59(ptr %0, ptr %1, ptr %2) {
Core_list_generate_59:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_list_generate_59_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_list_generate_59_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_list_generate_59_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_list_generate_59_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_isMatch_else.1793, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_list_generate_59_1_isMatch_else.1794, align 8
  %22 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_else.1794, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %32 = load ptr, ptr %31, align 8
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %28, ptr %30, ptr %34)
  %36 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %37 = getelementptr inbounds { ptr }, ptr %36, i32 0, i32 0
  store ptr %26, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_list_generate_59_7, ptr %36, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_list_generate_59_7, align 8
  %39 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i32 0, i32 0
  store ptr %41, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i32 0, i32 1
  store ptr %28, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i32 0, i32 2
  store ptr %45, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i32 0, i32 3
  store ptr %48, ptr %49, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i32 0, i32 4
  store ptr %26, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i32 0, i32 5
  store ptr %0, ptr %51, align 8
  %52 = call ptr @make_candy_function(ptr @Core_list_generate_59_8, ptr %39, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %52, ptr @fun_Core_list_generate_59_8, align 8
  %53 = load ptr, ptr @fun_Core_list_generate_59_7, align 8
  %54 = load ptr, ptr @fun_Core_list_generate_59_8, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %56 = load ptr, ptr %55, align 8
  %57 = call ptr @get_candy_function_pointer(ptr %56)
  %58 = call ptr @get_candy_function_environment(ptr %56)
  %59 = call ptr (...) %57(ptr %35, ptr %53, ptr %54, ptr %58)
  ret ptr %59
}

define ptr @Core_list_generate_59_1_equals_then(ptr %0) {
Core_list_generate_59_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_list_generate_59_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_list_generate_59_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_list_generate_59_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_list_generate_59_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_list_generate_59_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_isMatch_else.1791, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_list_generate_59_1_isMatch_else.1792, align 8
  %31 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_else.1792, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_list_generate_59_1_hasKey_then(ptr %0) {
Core_list_generate_59_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @210, align 8
  ret ptr @210
}

define ptr @Core_list_generate_59_1_hasKey_else(ptr %0) {
Core_list_generate_59_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `List`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @211, align 8
  ret ptr @211
}

define ptr @Core_list_generate_59_1_isMatch_then(ptr %0) {
Core_list_generate_59_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_hasKey_then.1785, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_list_generate_59_1_hasKey_then.1786, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_hasKey_else.1787, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_list_generate_59_1_hasKey_else.1788, align 8
  %19 = load ptr, ptr @fun_Core_list_generate_59_1_hasKey_then.1786, align 8
  %20 = load ptr, ptr @fun_Core_list_generate_59_1_hasKey_else.1788, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_isMatch_then.1789, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_list_generate_59_1_isMatch_then.1790, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_list_generate_59_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_list_generate_59_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_then.1790, align 8
  %34 = load ptr, ptr @fun_Core_list_generate_59_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_list_generate_59_1_hasKey_then.1785(ptr %0) {
Core_list_generate_59_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @212, align 8
  ret ptr @212
}

define ptr @Core_list_generate_59_1_hasKey_else.1787(ptr %0) {
Core_list_generate_59_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @213, align 8
  ret ptr @213
}

define ptr @Core_list_generate_59_1_isMatch_then.1789(ptr %0) {
Core_list_generate_59_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @214, align 8
  ret ptr @214
}

define ptr @Core_list_generate_59_1_isMatch_else(ptr %0) {
Core_list_generate_59_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_list_generate_59_1_isMatch_else.1791(ptr %0) {
Core_list_generate_59_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_list_generate_59_1_equals_else(ptr %0) {
Core_list_generate_59_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @215, align 8
  ret ptr @215
}

define ptr @Core_list_generate_59_1_isMatch_else.1793(ptr %0) {
Core_list_generate_59_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_list_generate_59_7(ptr %0) {
Core_list_generate_59_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_list_generate_59_8(ptr %0) {
Core_list_generate_59_8:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %13)
  %15 = call ptr @get_candy_function_environment(ptr %13)
  %16 = call ptr (...) %14(ptr %9, ptr %11, ptr %7, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr @tag_Add, align 8
  %20 = call ptr @Builtins__structGet(ptr %18, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr @num_1, align 8
  %24 = call ptr @get_candy_function_pointer(ptr %20)
  %25 = call ptr @get_candy_function_environment(ptr %20)
  %26 = call ptr (...) %24(ptr %22, ptr %23, ptr %25)
  %27 = alloca ptr, i64 3, align 8
  %28 = alloca ptr, i64 3, align 8
  %29 = load ptr, ptr @tag_List, align 8
  %30 = getelementptr ptr, ptr %27, i64 0
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %28, i64 0
  store ptr %16, ptr %31, align 8
  %32 = load ptr, ptr @tag_Index, align 8
  %33 = getelementptr ptr, ptr %27, i64 1
  store ptr %32, ptr %33, align 8
  %34 = getelementptr ptr, ptr %28, i64 1
  store ptr %26, ptr %34, align 8
  %35 = getelementptr ptr, ptr %27, i64 2
  store ptr null, ptr %35, align 8
  %36 = getelementptr ptr, ptr %28, i64 2
  store ptr null, ptr %36, align 8
  %37 = call ptr @make_candy_struct(ptr %27, ptr %28)
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %39 = load ptr, ptr %38, align 8
  %40 = call ptr @get_candy_function_pointer(ptr %39)
  %41 = call ptr @get_candy_function_environment(ptr %39)
  %42 = call ptr (...) %40(ptr %37, ptr %41)
  ret ptr %42
}

define ptr @Core_list_getRange(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_list_getRange:
  %4 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr @tag_Is, align 8
  %7 = call ptr @Builtins__structGet(ptr %5, ptr %6)
  %8 = load ptr, ptr @tag_List, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %7)
  %10 = call ptr @get_candy_function_environment(ptr %7)
  %11 = call ptr (...) %9(ptr %0, ptr %8, ptr %10)
  %12 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_Is, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %1, ptr %19)
  %21 = load ptr, ptr @"text_`int.is startInclusive` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr @tag_IsNonNegative, align 8
  %26 = call ptr @Builtins__structGet(ptr %24, ptr %25)
  %27 = call ptr @get_candy_function_pointer(ptr %26)
  %28 = call ptr @get_candy_function_environment(ptr %26)
  %29 = call ptr (...) %27(ptr %1, ptr %28)
  %30 = load ptr, ptr @"text_`startInclusive | int.isNonNegative` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %35 = call ptr @Builtins__structGet(ptr %33, ptr %34)
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  %37 = load ptr, ptr %36, align 8
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %0, ptr %39)
  %41 = call ptr @get_candy_function_pointer(ptr %35)
  %42 = call ptr @get_candy_function_environment(ptr %35)
  %43 = call ptr (...) %41(ptr %1, ptr %40, ptr %42)
  %44 = load ptr, ptr @"text_`startInclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied", align 8
  %45 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr null)
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = load ptr, ptr @tag_Is, align 8
  %49 = call ptr @Builtins__structGet(ptr %47, ptr %48)
  %50 = call ptr @get_candy_function_pointer(ptr %49)
  %51 = call ptr @get_candy_function_environment(ptr %49)
  %52 = call ptr (...) %50(ptr %2, ptr %51)
  %53 = load ptr, ptr @"text_`int.is endExclusive` was not satisfied", align 8
  %54 = call ptr @"anonymous_$generated__needs"(ptr %52, ptr %53, ptr null)
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8
  %57 = load ptr, ptr @tag_IsNonNegative, align 8
  %58 = call ptr @Builtins__structGet(ptr %56, ptr %57)
  %59 = call ptr @get_candy_function_pointer(ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr %58)
  %61 = call ptr (...) %59(ptr %2, ptr %60)
  %62 = load ptr, ptr @"text_`endExclusive | int.isNonNegative` was not satisfied", align 8
  %63 = call ptr @"anonymous_$generated__needs"(ptr %61, ptr %62, ptr null)
  %64 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %65 = load ptr, ptr %64, align 8
  %66 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %67 = call ptr @Builtins__structGet(ptr %65, ptr %66)
  %68 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  %69 = load ptr, ptr %68, align 8
  %70 = call ptr @get_candy_function_pointer(ptr %69)
  %71 = call ptr @get_candy_function_environment(ptr %69)
  %72 = call ptr (...) %70(ptr %0, ptr %71)
  %73 = call ptr @get_candy_function_pointer(ptr %67)
  %74 = call ptr @get_candy_function_environment(ptr %67)
  %75 = call ptr (...) %73(ptr %2, ptr %72, ptr %74)
  %76 = load ptr, ptr @"text_`endExclusive | int.isLessThanOrEqualTo (list | length)` was not satisfied", align 8
  %77 = call ptr @"anonymous_$generated__needs"(ptr %75, ptr %76, ptr null)
  %78 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %81 = call ptr @Builtins__structGet(ptr %79, ptr %80)
  %82 = call ptr @get_candy_function_pointer(ptr %81)
  %83 = call ptr @get_candy_function_environment(ptr %81)
  %84 = call ptr (...) %82(ptr %1, ptr %2, ptr %83)
  %85 = load ptr, ptr @"text_`startInclusive | int.isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %86 = call ptr @"anonymous_$generated__needs"(ptr %84, ptr %85, ptr null)
  %87 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %88 = load ptr, ptr %87, align 8
  %89 = load ptr, ptr @tag_Subtract, align 8
  %90 = call ptr @Builtins__structGet(ptr %88, ptr %89)
  %91 = call ptr @get_candy_function_pointer(ptr %90)
  %92 = call ptr @get_candy_function_environment(ptr %90)
  %93 = call ptr (...) %91(ptr %2, ptr %1, ptr %92)
  %94 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %95 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %96 = load ptr, ptr %95, align 8
  %97 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %94, i32 0, i32 0
  store ptr %96, ptr %97, align 8
  %98 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 3
  %99 = load ptr, ptr %98, align 8
  %100 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %94, i32 0, i32 1
  store ptr %99, ptr %100, align 8
  %101 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %94, i32 0, i32 2
  store ptr %0, ptr %101, align 8
  %102 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %94, i32 0, i32 3
  store ptr %1, ptr %102, align 8
  %103 = call ptr @make_candy_function(ptr @Core_list_getRange_108, ptr %94, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %103, ptr @fun_Core_list_getRange_108, align 8
  %104 = load ptr, ptr @fun_Core_list_getRange_108, align 8
  %105 = call ptr @get_candy_function_environment(ptr @fun_Core_list_generate)
  %106 = call ptr @Core_list_generate(ptr %93, ptr %104, ptr %105)
  ret ptr %106
}

define ptr @Core_list_getRange_108(ptr %0, ptr %1) {
Core_list_getRange_108:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Add, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %5)
  %9 = call ptr @get_candy_function_environment(ptr %5)
  %10 = call ptr (...) %8(ptr %7, ptr %0, ptr %9)
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %12, ptr %10, ptr %16)
  ret ptr %17
}

define ptr @Core_list_concatenate(ptr %0, ptr %1, ptr %2) {
Core_list_concatenate:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is listA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_List, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is listB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %0, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_Add, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %1, ptr %35)
  %37 = call ptr @get_candy_function_pointer(ptr %31)
  %38 = call ptr @get_candy_function_environment(ptr %31)
  %39 = call ptr (...) %37(ptr %27, ptr %36, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %42, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %0, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 2
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 3
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 4
  store ptr %52, ptr %53, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 5
  store ptr %1, ptr %54, align 8
  %55 = call ptr @make_candy_function(ptr @Core_list_concatenate_26, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %55, ptr @fun_Core_list_concatenate_26, align 8
  %56 = load ptr, ptr @fun_Core_list_concatenate_26, align 8
  %57 = call ptr @get_candy_function_environment(ptr @fun_Core_list_generate)
  %58 = call ptr @Core_list_generate(ptr %39, ptr %56, ptr %57)
  ret ptr %58
}

define ptr @Core_list_concatenate_26(ptr %0, ptr %1) {
Core_list_concatenate_26:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IsLessThan, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %7, ptr %11)
  %13 = call ptr @get_candy_function_pointer(ptr %5)
  %14 = call ptr @get_candy_function_environment(ptr %5)
  %15 = call ptr (...) %13(ptr %0, ptr %12, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %0, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 4
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 2
  store ptr %22, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_list_concatenate_26_14, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_list_concatenate_26_14, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 3
  store ptr %34, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 4
  %37 = load ptr, ptr %36, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 4
  store ptr %37, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 5
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 5
  store ptr %40, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_list_concatenate_26_15, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_list_concatenate_26_15, align 8
  %43 = load ptr, ptr @fun_Core_list_concatenate_26_14, align 8
  %44 = load ptr, ptr @fun_Core_list_concatenate_26_15, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %46 = load ptr, ptr %45, align 8
  %47 = call ptr @get_candy_function_pointer(ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr %46)
  %49 = call ptr (...) %47(ptr %15, ptr %43, ptr %44, ptr %48)
  ret ptr %49
}

define ptr @Core_list_concatenate_26_14(ptr %0) {
Core_list_concatenate_26_14:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_list_concatenate_26_15(ptr %0) {
Core_list_concatenate_26_15:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Subtract, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %4)
  %15 = call ptr @get_candy_function_environment(ptr %4)
  %16 = call ptr (...) %14(ptr %13, ptr %11, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %18, ptr %16, ptr %22)
  ret ptr %23
}

define ptr @Core_type_is.1795(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_text_is(ptr %0, ptr %1) {
Core_text_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Text, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_text_characterAt(ptr %0, ptr %1, ptr %2) {
Core_text_characterAt:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Text, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = call ptr @get_candy_function_pointer(ptr %16)
  %18 = call ptr @get_candy_function_environment(ptr %16)
  %19 = call ptr (...) %17(ptr %1, ptr %18)
  %20 = load ptr, ptr @"text_`int.is index` was not satisfied", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr null)
  %22 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = load ptr, ptr @tag_IsNonNegative, align 8
  %25 = call ptr @Builtins__structGet(ptr %23, ptr %24)
  %26 = call ptr @get_candy_function_pointer(ptr %25)
  %27 = call ptr @get_candy_function_environment(ptr %25)
  %28 = call ptr (...) %26(ptr %1, ptr %27)
  %29 = load ptr, ptr @"text_`int.isNonNegative index` was not satisfied", align 8
  %30 = call ptr @"anonymous_$generated__needs"(ptr %28, ptr %29, ptr null)
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr @tag_IsLessThan, align 8
  %34 = call ptr @Builtins__structGet(ptr %32, ptr %33)
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %36 = load ptr, ptr %35, align 8
  %37 = call ptr @get_candy_function_pointer(ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr %36)
  %39 = call ptr (...) %37(ptr %0, ptr %38)
  %40 = call ptr @get_candy_function_pointer(ptr %34)
  %41 = call ptr @get_candy_function_environment(ptr %34)
  %42 = call ptr (...) %40(ptr %1, ptr %39, ptr %41)
  %43 = load ptr, ptr @"text_`int.isLessThan index (length text)` was not satisfied", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %42, ptr %43, ptr null)
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %46 = load ptr, ptr %45, align 8
  %47 = call ptr @get_candy_function_pointer(ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr %46)
  %49 = call ptr (...) %47(ptr %0, ptr %48)
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %51 = load ptr, ptr %50, align 8
  %52 = load ptr, ptr @tag_Get, align 8
  %53 = call ptr @Builtins__structGet(ptr %51, ptr %52)
  %54 = call ptr @get_candy_function_pointer(ptr %53)
  %55 = call ptr @get_candy_function_environment(ptr %53)
  %56 = call ptr (...) %54(ptr %49, ptr %1, ptr %55)
  ret ptr %56
}

define ptr @Core_text_removePrefix(ptr %0, ptr %1, ptr %2) {
Core_text_removePrefix:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Text, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is prefix` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %0, ptr %1, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 2
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 3
  store ptr %35, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_text_removePrefix_15, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_text_removePrefix_15, align 8
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr }, ptr %38, i32 0, i32 0
  store ptr %0, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_text_removePrefix_16, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_text_removePrefix_16, align 8
  %41 = load ptr, ptr @fun_Core_text_removePrefix_15, align 8
  %42 = load ptr, ptr @fun_Core_text_removePrefix_16, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %44 = load ptr, ptr %43, align 8
  %45 = call ptr @get_candy_function_pointer(ptr %44)
  %46 = call ptr @get_candy_function_environment(ptr %44)
  %47 = call ptr (...) %45(ptr %27, ptr %41, ptr %42, ptr %46)
  ret ptr %47
}

define ptr @Core_text_removePrefix_15(ptr %0) {
Core_text_removePrefix_15:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %9, ptr %13)
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %16, ptr %7, ptr %14, ptr %20)
  ret ptr %21
}

define ptr @Core_text_removePrefix_16(ptr %0) {
Core_text_removePrefix_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_text_removeSuffix(ptr %0, ptr %1, ptr %2) {
Core_text_removeSuffix:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Text, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is suffix` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %0, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %0, ptr %1, ptr %31)
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %33, i32 0, i32 0
  store ptr %35, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %33, i32 0, i32 1
  store ptr %1, ptr %37, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %33, i32 0, i32 2
  store ptr %27, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %33, i32 0, i32 3
  store ptr %0, ptr %39, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %33, i32 0, i32 4
  store ptr %41, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %33, i32 0, i32 5
  store ptr %44, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Core_text_removeSuffix_19, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Core_text_removeSuffix_19, align 8
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %0, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_text_removeSuffix_20, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_text_removeSuffix_20, align 8
  %50 = load ptr, ptr @fun_Core_text_removeSuffix_19, align 8
  %51 = load ptr, ptr @fun_Core_text_removeSuffix_20, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %53 = load ptr, ptr %52, align 8
  %54 = call ptr @get_candy_function_pointer(ptr %53)
  %55 = call ptr @get_candy_function_environment(ptr %53)
  %56 = call ptr (...) %54(ptr %32, ptr %50, ptr %51, ptr %55)
  ret ptr %56
}

define ptr @Core_text_removeSuffix_19(ptr %0) {
Core_text_removeSuffix_19:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Subtract, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %4)
  %15 = call ptr @get_candy_function_environment(ptr %4)
  %16 = call ptr (...) %14(ptr %13, ptr %11, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %18, ptr %16, ptr %20, ptr %24)
  ret ptr %25
}

define ptr @Core_text_removeSuffix_20(ptr %0) {
Core_text_removeSuffix_20:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_text_trim(ptr %0, ptr %1) {
Core_text_trim:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Text, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %13)
  %15 = call ptr @get_candy_function_environment(ptr %13)
  %16 = call ptr (...) %14(ptr %0, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %16, ptr %20)
  ret ptr %21
}

define ptr @Core_fixedDecimal_scaleFactor(ptr %0, ptr %1) {
Core_fixedDecimal_scaleFactor:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %0, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_LazyAnd, align 8
  %12 = call ptr @Builtins__structGet(ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr, ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr }, ptr %13, i32 0, i32 1
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  %20 = call ptr @get_candy_function_pointer(ptr %12)
  %21 = call ptr @get_candy_function_environment(ptr %12)
  %22 = call ptr (...) %20(ptr %8, ptr %19, ptr %21)
  %23 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Pow, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = load ptr, ptr @num_10, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %28)
  %31 = call ptr @get_candy_function_environment(ptr %28)
  %32 = call ptr (...) %30(ptr %29, ptr %0, ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_isScale_18(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsNonNegative, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_fixedDecimal_is(ptr %0, ptr %1) {
Core_fixedDecimal_is:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.1815, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_else.1816, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.1816, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %18, i32 0, i32 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %18, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %18, i32 0, i32 2
  store ptr %13, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr }, ptr %27, i32 0, i32 0
  store ptr %13, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_didNotMatch, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  %30 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %17, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_is_1_equals_then(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.1797, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.1798, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.1813, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.1814, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.1798, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.1814, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.1797(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.1799, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.1800, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.1811, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.1812, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.1800, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.1812, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.1799(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.1801, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.1802, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.1802, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.1801(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.1809, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.1810, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.1810, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @216, align 8
  ret ptr @216
}

define ptr @Core_fixedDecimal_is_1_hasKey_else(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @217, align 8
  ret ptr @217
}

define ptr @Core_fixedDecimal_is_1_isMatch_then(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.1803, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.1804, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.1805, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.1806, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.1804, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.1806, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.1807, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.1808, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.1808, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.1803(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @218, align 8
  ret ptr @218
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.1805(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @219, align 8
  ret ptr @219
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.1807(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @220, align 8
  ret ptr @220
}

define ptr @Core_fixedDecimal_is_1_isMatch_else(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.1809(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @221, align 8
  ret ptr @221
}

define ptr @Core_fixedDecimal_is_1_equals_else.1811(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @190, align 8
  ret ptr %4
}

define ptr @Core_fixedDecimal_is_1_equals_else.1813(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @222, align 8
  ret ptr @222
}

define ptr @Core_fixedDecimal_is_1_equals_else.1815(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @223, align 8
  ret ptr @223
}

define ptr @Core_fixedDecimal_is_1_case-0_matched(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_Is, align 8
  %12 = call ptr @Builtins__structGet(ptr %10, ptr %11)
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %4, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_LazyAnd, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %8, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 2
  store ptr %26, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_18, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  %29 = load ptr, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %19)
  %31 = call ptr @get_candy_function_environment(ptr %19)
  %32 = call ptr (...) %30(ptr %15, ptr %29, ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_is_1_18(ptr %0) {
Core_fixedDecimal_is_1_18:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @tag_LazyAnd, align 8
  %13 = call ptr @Builtins__structGet(ptr %11, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.1817, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_fixedDecimal_isScale_18.1818, align 8
  %22 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1818, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %13)
  %24 = call ptr @get_candy_function_environment(ptr %13)
  %25 = call ptr (...) %23(ptr %9, ptr %22, ptr %24)
  ret ptr %25
}

define ptr @Core_fixedDecimal_isScale_18.1817(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsNonNegative, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_fixedDecimal_is_1_case-0_didNotMatch(ptr %0) {
Core_fixedDecimal_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_fixedDecimal_minorUnits(ptr %0, ptr %1) {
Core_fixedDecimal_minorUnits:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_GetValue, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %0, ptr %11)
  %13 = load ptr, ptr @tag_MinorUnits, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_fixedDecimal_scale(ptr %0, ptr %1) {
Core_fixedDecimal_scale:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_GetValue, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %0, ptr %11)
  %13 = load ptr, ptr @tag_Scale, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_fixedDecimal_fromIntScaled(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_fromIntScaled:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %0, ptr %8)
  %10 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %1, ptr %17)
  %19 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr @tag_LazyAnd, align 8
  %22 = call ptr @Builtins__structGet(ptr %20, ptr %21)
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 0
  store ptr %1, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 1
  store ptr %26, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.1819, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_fixedDecimal_isScale_18.1820, align 8
  %29 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1820, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %22)
  %31 = call ptr @get_candy_function_environment(ptr %22)
  %32 = call ptr (...) %30(ptr %18, ptr %29, ptr %31)
  %33 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr null)
  %35 = alloca ptr, i64 3, align 8
  %36 = alloca ptr, i64 3, align 8
  %37 = load ptr, ptr @tag_Scale, align 8
  %38 = getelementptr ptr, ptr %35, i64 0
  store ptr %37, ptr %38, align 8
  %39 = getelementptr ptr, ptr %36, i64 0
  store ptr %1, ptr %39, align 8
  %40 = load ptr, ptr @tag_MinorUnits, align 8
  %41 = getelementptr ptr, ptr %35, i64 1
  store ptr %40, ptr %41, align 8
  %42 = getelementptr ptr, ptr %36, i64 1
  store ptr %0, ptr %42, align 8
  %43 = getelementptr ptr, ptr %35, i64 2
  store ptr null, ptr %43, align 8
  %44 = getelementptr ptr, ptr %36, i64 2
  store ptr null, ptr %44, align 8
  %45 = call ptr @make_candy_struct(ptr %35, ptr %36)
  %46 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %46, align 1
  %47 = call ptr @make_candy_tag(ptr %46, ptr %45)
  store ptr %47, ptr @tag_FixedDecimal.1821, align 8
  ret ptr @tag_FixedDecimal.1821
}

define ptr @Core_fixedDecimal_isScale_18.1819(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsNonNegative, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_fixedDecimal_fromInt(ptr %0, ptr %1) {
Core_fixedDecimal_fromInt:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`int.is a` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_fromIntScaled)
  %13 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_floorToInt(ptr %0, ptr %1) {
Core_fixedDecimal_floorToInt:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %7 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %6)
  %8 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %9 = load ptr, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr %9)
  %11 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = load ptr, ptr @tag_GetValue, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %16)
  %18 = load ptr, ptr @tag_MinorUnits, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_DivideTruncating, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %25 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %24)
  %26 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %27 = load ptr, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr @tag_GetValue, align 8
  %32 = call ptr @Builtins__structGet(ptr %30, ptr %31)
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %0, ptr %34)
  %36 = load ptr, ptr @tag_Scale, align 8
  %37 = call ptr @Builtins__structGet(ptr %35, ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_scaleFactor)
  %39 = call ptr @Core_fixedDecimal_scaleFactor(ptr %37, ptr %38)
  %40 = call ptr @get_candy_function_pointer(ptr %23)
  %41 = call ptr @get_candy_function_environment(ptr %23)
  %42 = call ptr (...) %40(ptr %19, ptr %39, ptr %41)
  ret ptr %42
}

define ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_rescaledMinorUnits:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr @tag_Is, align 8
  %10 = call ptr @Builtins__structGet(ptr %8, ptr %9)
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %1, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_LazyAnd, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 1
  store ptr %21, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.1822, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_fixedDecimal_isScale_18.1823, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1823, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %17)
  %26 = call ptr @get_candy_function_environment(ptr %17)
  %27 = call ptr (...) %25(ptr %13, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %31 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %30)
  %32 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %36 = load ptr, ptr %35, align 8
  %37 = load ptr, ptr @tag_GetValue, align 8
  %38 = call ptr @Builtins__structGet(ptr %36, ptr %37)
  %39 = call ptr @get_candy_function_pointer(ptr %38)
  %40 = call ptr @get_candy_function_environment(ptr %38)
  %41 = call ptr (...) %39(ptr %0, ptr %40)
  %42 = load ptr, ptr @tag_Scale, align 8
  %43 = call ptr @Builtins__structGet(ptr %41, ptr %42)
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = load ptr, ptr @tag_IsGreaterThan, align 8
  %47 = call ptr @Builtins__structGet(ptr %45, ptr %46)
  %48 = call ptr @get_candy_function_pointer(ptr %47)
  %49 = call ptr @get_candy_function_environment(ptr %47)
  %50 = call ptr (...) %48(ptr %43, ptr %1, ptr %49)
  %51 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %51, i32 0, i32 0
  store ptr %0, ptr %52, align 8
  %53 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %51, i32 0, i32 1
  store ptr %54, ptr %55, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %51, i32 0, i32 2
  store ptr %1, ptr %56, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %51, i32 0, i32 3
  store ptr %58, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits_24, ptr %51, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  %61 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %62 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 0
  store ptr %0, ptr %62, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 1
  store ptr %64, ptr %65, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 2
  store ptr %1, ptr %66, align 8
  %67 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %68 = load ptr, ptr %67, align 8
  %69 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %61, i32 0, i32 3
  store ptr %68, ptr %69, align 8
  %70 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits_25, ptr %61, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %70, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  %71 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  %72 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  %73 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %74 = load ptr, ptr %73, align 8
  %75 = call ptr @get_candy_function_pointer(ptr %74)
  %76 = call ptr @get_candy_function_environment(ptr %74)
  %77 = call ptr (...) %75(ptr %50, ptr %71, ptr %72, ptr %76)
  ret ptr %77
}

define ptr @Core_fixedDecimal_isScale_18.1822(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsNonNegative, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_fixedDecimal_rescaledMinorUnits_24(ptr %0) {
Core_fixedDecimal_rescaledMinorUnits_24:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:2", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr @tag_GetValue, align 8
  %11 = call ptr @Builtins__structGet(ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %11)
  %15 = call ptr @get_candy_function_environment(ptr %11)
  %16 = call ptr (...) %14(ptr %13, ptr %15)
  %17 = load ptr, ptr @tag_MinorUnits, align 8
  %18 = call ptr @Builtins__structGet(ptr %16, ptr %17)
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr @tag_DivideTruncating, align 8
  %22 = call ptr @Builtins__structGet(ptr %20, ptr %21)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %26 = call ptr @Core_fixedDecimal_is(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:14", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_GetValue, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %35 = load ptr, ptr %34, align 8
  %36 = call ptr @get_candy_function_pointer(ptr %33)
  %37 = call ptr @get_candy_function_environment(ptr %33)
  %38 = call ptr (...) %36(ptr %35, ptr %37)
  %39 = load ptr, ptr @tag_Scale, align 8
  %40 = call ptr @Builtins__structGet(ptr %38, ptr %39)
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr @tag_Subtract, align 8
  %44 = call ptr @Builtins__structGet(ptr %42, ptr %43)
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = call ptr @get_candy_function_pointer(ptr %44)
  %48 = call ptr @get_candy_function_environment(ptr %44)
  %49 = call ptr (...) %47(ptr %40, ptr %46, ptr %48)
  %50 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_scaleFactor)
  %51 = call ptr @Core_fixedDecimal_scaleFactor(ptr %49, ptr %50)
  %52 = call ptr @get_candy_function_pointer(ptr %22)
  %53 = call ptr @get_candy_function_environment(ptr %22)
  %54 = call ptr (...) %52(ptr %18, ptr %51, ptr %53)
  ret ptr %54
}

define ptr @Core_fixedDecimal_rescaledMinorUnits_25(ptr %0) {
Core_fixedDecimal_rescaledMinorUnits_25:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:2", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr @tag_GetValue, align 8
  %11 = call ptr @Builtins__structGet(ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %11)
  %15 = call ptr @get_candy_function_environment(ptr %11)
  %16 = call ptr (...) %14(ptr %13, ptr %15)
  %17 = load ptr, ptr @tag_MinorUnits, align 8
  %18 = call ptr @Builtins__structGet(ptr %16, ptr %17)
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr @tag_Multiply, align 8
  %22 = call ptr @Builtins__structGet(ptr %20, ptr %21)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr @tag_Subtract, align 8
  %26 = call ptr @Builtins__structGet(ptr %24, ptr %25)
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %30 = call ptr @Core_fixedDecimal_is(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:23", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr @tag_GetValue, align 8
  %37 = call ptr @Builtins__structGet(ptr %35, ptr %36)
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = call ptr @get_candy_function_pointer(ptr %37)
  %41 = call ptr @get_candy_function_environment(ptr %37)
  %42 = call ptr (...) %40(ptr %39, ptr %41)
  %43 = load ptr, ptr @tag_Scale, align 8
  %44 = call ptr @Builtins__structGet(ptr %42, ptr %43)
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = call ptr @get_candy_function_pointer(ptr %26)
  %48 = call ptr @get_candy_function_environment(ptr %26)
  %49 = call ptr (...) %47(ptr %46, ptr %44, ptr %48)
  %50 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_scaleFactor)
  %51 = call ptr @Core_fixedDecimal_scaleFactor(ptr %49, ptr %50)
  %52 = call ptr @get_candy_function_pointer(ptr %22)
  %53 = call ptr @get_candy_function_environment(ptr %22)
  %54 = call ptr (...) %52(ptr %18, ptr %51, ptr %53)
  ret ptr %54
}

define ptr @Core_fixedDecimal_rescale(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_rescale:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr @tag_Is, align 8
  %10 = call ptr @Builtins__structGet(ptr %8, ptr %9)
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %1, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_LazyAnd, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 1
  store ptr %21, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.1824, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_fixedDecimal_isScale_18.1825, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1825, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %17)
  %26 = call ptr @get_candy_function_environment(ptr %17)
  %27 = call ptr (...) %25(ptr %13, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_rescaledMinorUnits)
  %31 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %1, ptr %30)
  %32 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_fromIntScaled)
  %33 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %31, ptr %1, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_isScale_18.1824(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsNonNegative, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_comparableMinorUnits:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = load ptr, ptr @tag_Max, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  %15 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %16 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %15)
  %17 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:20", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_GetValue, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %23)
  %25 = call ptr @get_candy_function_environment(ptr %23)
  %26 = call ptr (...) %24(ptr %0, ptr %25)
  %27 = load ptr, ptr @tag_Scale, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %30 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %29)
  %31 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:23", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr @tag_GetValue, align 8
  %37 = call ptr @Builtins__structGet(ptr %35, ptr %36)
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %1, ptr %39)
  %41 = load ptr, ptr @tag_Scale, align 8
  %42 = call ptr @Builtins__structGet(ptr %40, ptr %41)
  %43 = call ptr @get_candy_function_pointer(ptr %14)
  %44 = call ptr @get_candy_function_environment(ptr %14)
  %45 = call ptr (...) %43(ptr %28, ptr %42, ptr %44)
  %46 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_rescaledMinorUnits)
  %47 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %45, ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_rescaledMinorUnits)
  %49 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %1, ptr %45, ptr %48)
  %50 = alloca ptr, i64 4, align 8
  %51 = alloca ptr, i64 4, align 8
  %52 = load ptr, ptr @tag_ValueA, align 8
  %53 = getelementptr ptr, ptr %50, i64 0
  store ptr %52, ptr %53, align 8
  %54 = getelementptr ptr, ptr %51, i64 0
  store ptr %47, ptr %54, align 8
  %55 = load ptr, ptr @tag_ValueB, align 8
  %56 = getelementptr ptr, ptr %50, i64 1
  store ptr %55, ptr %56, align 8
  %57 = getelementptr ptr, ptr %51, i64 1
  store ptr %49, ptr %57, align 8
  %58 = load ptr, ptr @tag_TargetScale, align 8
  %59 = getelementptr ptr, ptr %50, i64 2
  store ptr %58, ptr %59, align 8
  %60 = getelementptr ptr, ptr %51, i64 2
  store ptr %45, ptr %60, align 8
  %61 = getelementptr ptr, ptr %50, i64 3
  store ptr null, ptr %61, align 8
  %62 = getelementptr ptr, ptr %51, i64 3
  store ptr null, ptr %62, align 8
  %63 = call ptr @make_candy_struct(ptr %50, ptr %51)
  ret ptr %63
}

define ptr @Core_fixedDecimal_add(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_add:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is summandA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is summandB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_comparableMinorUnits)
  %12 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %12)
  %14 = load ptr, ptr @tag_Struct, align 8
  %15 = call ptr @candy_builtin_equals(ptr %14, ptr %13)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %12, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_equals_then, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_add_14_equals_then, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %13, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_equals_else, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_fixedDecimal_add_14_equals_else, align 8
  %22 = load ptr, ptr @fun_Core_fixedDecimal_add_14_equals_then, align 8
  %23 = load ptr, ptr @fun_Core_fixedDecimal_add_14_equals_else, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_0, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %24, ptr %25)
  %27 = load ptr, ptr @tag_Match, align 8
  %28 = call ptr @candy_builtin_equals(ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %24, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_else.1842, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1843, align 8
  %32 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1843, align 8
  %34 = call ptr @candy_builtin_if_else(ptr %28, ptr %32, ptr %33)
  %35 = load ptr, ptr @num_1, align 8
  %36 = call ptr @candy_builtin_list_get(ptr %24, ptr %35)
  %37 = load ptr, ptr @num_2, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %24, ptr %37)
  %39 = load ptr, ptr @num_3, align 8
  %40 = call ptr @candy_builtin_list_get(ptr %24, ptr %39)
  %41 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr @tag_Add, align 8
  %44 = call ptr @Builtins__structGet(ptr %42, ptr %43)
  %45 = call ptr @get_candy_function_pointer(ptr %44)
  %46 = call ptr @get_candy_function_environment(ptr %44)
  %47 = call ptr (...) %45(ptr %36, ptr %38, ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_fromIntScaled)
  %49 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %47, ptr %40, ptr %48)
  ret ptr %49
}

define ptr @Core_fixedDecimal_add_14_equals_then(ptr %0) {
Core_fixedDecimal_add_14_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_add_14_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_add_14_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_add_14_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_else.1840, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1841, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1841, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_add_14_hasKey_then(ptr %0) {
Core_fixedDecimal_add_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @224, align 8
  ret ptr @224
}

define ptr @Core_fixedDecimal_add_14_hasKey_else(ptr %0) {
Core_fixedDecimal_add_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @225, align 8
  ret ptr @225
}

define ptr @Core_fixedDecimal_add_14_isMatch_then(ptr %0) {
Core_fixedDecimal_add_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_then.1826, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.1827, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_else.1828, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.1829, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.1827, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.1829, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_then.1830, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.1831, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_else.1838, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1839, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.1831, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.1839, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_add_14_hasKey_then.1826(ptr %0) {
Core_fixedDecimal_add_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @226, align 8
  ret ptr @226
}

define ptr @Core_fixedDecimal_add_14_hasKey_else.1828(ptr %0) {
Core_fixedDecimal_add_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @227, align 8
  ret ptr @227
}

define ptr @Core_fixedDecimal_add_14_isMatch_then.1830(ptr %0) {
Core_fixedDecimal_add_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_TargetScale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_then.1832, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.1833, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_else.1834, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.1835, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.1833, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.1835, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %4, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_then.1836, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.1837, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_else, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_add_14_isMatch_else, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.1837, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_add_14_hasKey_then.1832(ptr %0) {
Core_fixedDecimal_add_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_TargetScale, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @228, align 8
  ret ptr @228
}

define ptr @Core_fixedDecimal_add_14_hasKey_else.1834(ptr %0) {
Core_fixedDecimal_add_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @229, align 8
  ret ptr @229
}

define ptr @Core_fixedDecimal_add_14_isMatch_then.1836(ptr %0) {
Core_fixedDecimal_add_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 5, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr ptr, ptr %5, i64 2
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %5, i64 3
  store ptr %4, ptr %14, align 8
  %15 = getelementptr ptr, ptr %5, i64 4
  store ptr null, ptr %15, align 8
  %16 = call ptr @make_candy_list(ptr %5)
  store ptr %16, ptr @230, align 8
  ret ptr @230
}

define ptr @Core_fixedDecimal_add_14_isMatch_else(ptr %0) {
Core_fixedDecimal_add_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_add_14_isMatch_else.1838(ptr %0) {
Core_fixedDecimal_add_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_add_14_isMatch_else.1840(ptr %0) {
Core_fixedDecimal_add_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_add_14_equals_else(ptr %0) {
Core_fixedDecimal_add_14_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @231, align 8
  ret ptr @231
}

define ptr @Core_fixedDecimal_add_14_isMatch_else.1842(ptr %0) {
Core_fixedDecimal_add_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_subtract(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_subtract:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_comparableMinorUnits)
  %12 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %12)
  %14 = load ptr, ptr @tag_Struct, align 8
  %15 = call ptr @candy_builtin_equals(ptr %14, ptr %13)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %12, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_equals_then, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %13, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_equals_else, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  %22 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  %23 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_0, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %24, ptr %25)
  %27 = load ptr, ptr @tag_Match, align 8
  %28 = call ptr @candy_builtin_equals(ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %24, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.1860, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1861, align 8
  %32 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1861, align 8
  %34 = call ptr @candy_builtin_if_else(ptr %28, ptr %32, ptr %33)
  %35 = load ptr, ptr @num_1, align 8
  %36 = call ptr @candy_builtin_list_get(ptr %24, ptr %35)
  %37 = load ptr, ptr @num_2, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %24, ptr %37)
  %39 = load ptr, ptr @num_3, align 8
  %40 = call ptr @candy_builtin_list_get(ptr %24, ptr %39)
  %41 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr @tag_Subtract, align 8
  %44 = call ptr @Builtins__structGet(ptr %42, ptr %43)
  %45 = call ptr @get_candy_function_pointer(ptr %44)
  %46 = call ptr @get_candy_function_environment(ptr %44)
  %47 = call ptr (...) %45(ptr %36, ptr %38, ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_fromIntScaled)
  %49 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %47, ptr %40, ptr %48)
  ret ptr %49
}

define ptr @Core_fixedDecimal_subtract_14_equals_then(ptr %0) {
Core_fixedDecimal_subtract_14_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.1858, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1859, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1859, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @232, align 8
  ret ptr @232
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @233, align 8
  ret ptr @233
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then.1844, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.1845, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else.1846, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.1847, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.1845, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.1847, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then.1848, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.1849, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.1856, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1857, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.1849, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.1857, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then.1844(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @234, align 8
  ret ptr @234
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else.1846(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @235, align 8
  ret ptr @235
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then.1848(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_TargetScale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then.1850, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.1851, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else.1852, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.1853, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.1851, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.1853, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %4, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then.1854, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.1855, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.1855, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then.1850(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_TargetScale, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @236, align 8
  ret ptr @236
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else.1852(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @237, align 8
  ret ptr @237
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then.1854(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 5, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr ptr, ptr %5, i64 2
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %5, i64 3
  store ptr %4, ptr %14, align 8
  %15 = getelementptr ptr, ptr %5, i64 4
  store ptr null, ptr %15, align 8
  %16 = call ptr @make_candy_list(ptr %5)
  store ptr %16, ptr @238, align 8
  ret ptr @238
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.1856(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.1858(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_equals_else(ptr %0) {
Core_fixedDecimal_subtract_14_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @239, align 8
  ret ptr @239
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.1860(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_negate(ptr %0, ptr %1) {
Core_fixedDecimal_negate:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %7 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %6)
  %8 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %9 = load ptr, ptr @"Core:fixedDecimal:negate:8", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr %9)
  %11 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = load ptr, ptr @tag_GetValue, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %16)
  %18 = load ptr, ptr @tag_MinorUnits, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_Negate, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %23)
  %25 = call ptr @get_candy_function_environment(ptr %23)
  %26 = call ptr (...) %24(ptr %19, ptr %25)
  %27 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %28 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %27)
  %29 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %30 = load ptr, ptr @"Core:fixedDecimal:negate:20", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %28, ptr %29, ptr %30)
  %32 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr @tag_GetValue, align 8
  %35 = call ptr @Builtins__structGet(ptr %33, ptr %34)
  %36 = call ptr @get_candy_function_pointer(ptr %35)
  %37 = call ptr @get_candy_function_environment(ptr %35)
  %38 = call ptr (...) %36(ptr %0, ptr %37)
  %39 = load ptr, ptr @tag_Scale, align 8
  %40 = call ptr @Builtins__structGet(ptr %38, ptr %39)
  %41 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_fromIntScaled)
  %42 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %26, ptr %40, ptr %41)
  ret ptr %42
}

define ptr @Core_fixedDecimal_multiply(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_multiply:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is factorA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is factorB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %12 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %11)
  %13 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:fixedDecimal:multiply:13", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_GetValue, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = call ptr @get_candy_function_pointer(ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr %19)
  %22 = call ptr (...) %20(ptr %0, ptr %21)
  %23 = load ptr, ptr @tag_MinorUnits, align 8
  %24 = call ptr @Builtins__structGet(ptr %22, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Multiply, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %30 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %29)
  %31 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:fixedDecimal:multiply:24", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr @tag_GetValue, align 8
  %37 = call ptr @Builtins__structGet(ptr %35, ptr %36)
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %1, ptr %39)
  %41 = load ptr, ptr @tag_MinorUnits, align 8
  %42 = call ptr @Builtins__structGet(ptr %40, ptr %41)
  %43 = call ptr @get_candy_function_pointer(ptr %28)
  %44 = call ptr @get_candy_function_environment(ptr %28)
  %45 = call ptr (...) %43(ptr %24, ptr %42, ptr %44)
  %46 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %47 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %46)
  %48 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %49 = load ptr, ptr @"Core:fixedDecimal:multiply:28", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr %49)
  %51 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %52 = load ptr, ptr %51, align 8
  %53 = load ptr, ptr @tag_GetValue, align 8
  %54 = call ptr @Builtins__structGet(ptr %52, ptr %53)
  %55 = call ptr @get_candy_function_pointer(ptr %54)
  %56 = call ptr @get_candy_function_environment(ptr %54)
  %57 = call ptr (...) %55(ptr %0, ptr %56)
  %58 = load ptr, ptr @tag_Scale, align 8
  %59 = call ptr @Builtins__structGet(ptr %57, ptr %58)
  %60 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %61 = load ptr, ptr %60, align 8
  %62 = load ptr, ptr @tag_Add, align 8
  %63 = call ptr @Builtins__structGet(ptr %61, ptr %62)
  %64 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %65 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %64)
  %66 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %67 = load ptr, ptr @"Core:fixedDecimal:multiply:39", align 8
  %68 = call ptr @"anonymous_$generated__needs"(ptr %65, ptr %66, ptr %67)
  %69 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr @tag_GetValue, align 8
  %72 = call ptr @Builtins__structGet(ptr %70, ptr %71)
  %73 = call ptr @get_candy_function_pointer(ptr %72)
  %74 = call ptr @get_candy_function_environment(ptr %72)
  %75 = call ptr (...) %73(ptr %1, ptr %74)
  %76 = load ptr, ptr @tag_Scale, align 8
  %77 = call ptr @Builtins__structGet(ptr %75, ptr %76)
  %78 = call ptr @get_candy_function_pointer(ptr %63)
  %79 = call ptr @get_candy_function_environment(ptr %63)
  %80 = call ptr (...) %78(ptr %59, ptr %77, ptr %79)
  %81 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_fromIntScaled)
  %82 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %45, ptr %80, ptr %81)
  ret ptr %82
}

define ptr @Core_fixedDecimal_divideTruncating(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_divideTruncating:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %12 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:12", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_GetValue, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = call ptr @get_candy_function_pointer(ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr %19)
  %22 = call ptr (...) %20(ptr %1, ptr %21)
  %23 = load ptr, ptr @tag_MinorUnits, align 8
  %24 = call ptr @Builtins__structGet(ptr %22, ptr %23)
  %25 = load ptr, ptr @num_0, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr @tag_Not, align 8
  %34 = call ptr @Builtins__structGet(ptr %32, ptr %33)
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %30, ptr %36)
  %38 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr null)
  %40 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_comparableMinorUnits)
  %41 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1, ptr %40)
  %42 = call ptr @candy_builtin_type_of(ptr %41)
  %43 = load ptr, ptr @tag_Struct, align 8
  %44 = call ptr @candy_builtin_equals(ptr %43, ptr %42)
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr }, ptr %45, i32 0, i32 0
  store ptr %41, ptr %46, align 8
  %47 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_equals_then, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %47, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_then, align 8
  %48 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %49 = getelementptr inbounds { ptr }, ptr %48, i32 0, i32 0
  store ptr %42, ptr %49, align 8
  %50 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_equals_else, ptr %48, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %50, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_else, align 8
  %51 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_then, align 8
  %52 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_else, align 8
  %53 = call ptr @candy_builtin_if_else(ptr %44, ptr %51, ptr %52)
  %54 = load ptr, ptr @num_0, align 8
  %55 = call ptr @candy_builtin_list_get(ptr %53, ptr %54)
  %56 = load ptr, ptr @tag_Match, align 8
  %57 = call ptr @candy_builtin_equals(ptr %55, ptr %56)
  %58 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %59 = getelementptr inbounds { ptr }, ptr %58, i32 0, i32 0
  store ptr %53, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.1878, ptr %58, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1879, align 8
  %61 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %62 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1879, align 8
  %63 = call ptr @candy_builtin_if_else(ptr %57, ptr %61, ptr %62)
  %64 = load ptr, ptr @num_1, align 8
  %65 = call ptr @candy_builtin_list_get(ptr %53, ptr %64)
  %66 = load ptr, ptr @num_2, align 8
  %67 = call ptr @candy_builtin_list_get(ptr %53, ptr %66)
  %68 = load ptr, ptr @num_3, align 8
  %69 = call ptr @candy_builtin_list_get(ptr %53, ptr %68)
  %70 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = load ptr, ptr @tag_Multiply, align 8
  %73 = call ptr @Builtins__structGet(ptr %71, ptr %72)
  %74 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_scaleFactor)
  %75 = call ptr @Core_fixedDecimal_scaleFactor(ptr %69, ptr %74)
  %76 = call ptr @get_candy_function_pointer(ptr %73)
  %77 = call ptr @get_candy_function_environment(ptr %73)
  %78 = call ptr (...) %76(ptr %65, ptr %75, ptr %77)
  %79 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %80 = load ptr, ptr %79, align 8
  %81 = load ptr, ptr @tag_DivideTruncating, align 8
  %82 = call ptr @Builtins__structGet(ptr %80, ptr %81)
  %83 = call ptr @get_candy_function_pointer(ptr %82)
  %84 = call ptr @get_candy_function_environment(ptr %82)
  %85 = call ptr (...) %83(ptr %78, ptr %67, ptr %84)
  %86 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_fromIntScaled)
  %87 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %85, ptr %69, ptr %86)
  ret ptr %87
}

define ptr @Core_fixedDecimal_divideTruncating_37_equals_then(ptr %0) {
Core_fixedDecimal_divideTruncating_37_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.1876, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1877, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1877, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @240, align 8
  ret ptr @240
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @241, align 8
  ret ptr @241
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then.1862, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.1863, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else.1864, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.1865, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.1863, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.1865, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %4, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then.1866, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.1867, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.1874, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1875, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.1867, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.1875, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then.1862(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @242, align 8
  ret ptr @242
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else.1864(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @243, align 8
  ret ptr @243
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then.1866(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_TargetScale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then.1868, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.1869, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else.1870, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.1871, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.1869, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.1871, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then.1872, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.1873, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.1873, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then.1868(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_TargetScale, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @244, align 8
  ret ptr @244
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else.1870(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @245, align 8
  ret ptr @245
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then.1872(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 5, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr ptr, ptr %5, i64 2
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %5, i64 3
  store ptr %4, ptr %14, align 8
  %15 = getelementptr ptr, ptr %5, i64 4
  store ptr null, ptr %15, align 8
  %16 = call ptr @make_candy_list(ptr %5)
  store ptr %16, ptr @246, align 8
  ret ptr @246
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.1874(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.1876(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncating_37_equals_else(ptr %0) {
Core_fixedDecimal_divideTruncating_37_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @247, align 8
  ret ptr @247
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.1878(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_fixedDecimal_divideTruncatingAtScale:
  %4 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %5 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %4)
  %6 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %9 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %2, ptr %17)
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr @tag_LazyAnd, align 8
  %22 = call ptr @Builtins__structGet(ptr %20, ptr %21)
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 0
  store ptr %2, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 1
  store ptr %26, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.1880, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_fixedDecimal_isScale_18.1881, align 8
  %29 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1881, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %22)
  %31 = call ptr @get_candy_function_environment(ptr %22)
  %32 = call ptr (...) %30(ptr %18, ptr %29, ptr %31)
  %33 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr null)
  %35 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %36 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %35)
  %37 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %38 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8
  %42 = load ptr, ptr @tag_GetValue, align 8
  %43 = call ptr @Builtins__structGet(ptr %41, ptr %42)
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %1, ptr %45)
  %47 = load ptr, ptr @tag_MinorUnits, align 8
  %48 = call ptr @Builtins__structGet(ptr %46, ptr %47)
  %49 = load ptr, ptr @num_0, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  %51 = load ptr, ptr %50, align 8
  %52 = call ptr @get_candy_function_pointer(ptr %51)
  %53 = call ptr @get_candy_function_environment(ptr %51)
  %54 = call ptr (...) %52(ptr %48, ptr %49, ptr %53)
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  %56 = load ptr, ptr %55, align 8
  %57 = load ptr, ptr @tag_Not, align 8
  %58 = call ptr @Builtins__structGet(ptr %56, ptr %57)
  %59 = call ptr @get_candy_function_pointer(ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr %58)
  %61 = call ptr (...) %59(ptr %54, ptr %60)
  %62 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %63 = call ptr @"anonymous_$generated__needs"(ptr %61, ptr %62, ptr null)
  %64 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_comparableMinorUnits)
  %65 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1, ptr %64)
  %66 = call ptr @candy_builtin_type_of(ptr %65)
  %67 = load ptr, ptr @tag_Struct, align 8
  %68 = call ptr @candy_builtin_equals(ptr %67, ptr %66)
  %69 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %70 = getelementptr inbounds { ptr }, ptr %69, i32 0, i32 0
  store ptr %65, ptr %70, align 8
  %71 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_equals_then, ptr %69, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %71, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_then, align 8
  %72 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %73 = getelementptr inbounds { ptr }, ptr %72, i32 0, i32 0
  store ptr %66, ptr %73, align 8
  %74 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_equals_else, ptr %72, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %74, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_else, align 8
  %75 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_then, align 8
  %76 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_else, align 8
  %77 = call ptr @candy_builtin_if_else(ptr %68, ptr %75, ptr %76)
  %78 = load ptr, ptr @num_0, align 8
  %79 = call ptr @candy_builtin_list_get(ptr %77, ptr %78)
  %80 = load ptr, ptr @tag_Match, align 8
  %81 = call ptr @candy_builtin_equals(ptr %79, ptr %80)
  %82 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %83 = getelementptr inbounds { ptr }, ptr %82, i32 0, i32 0
  store ptr %77, ptr %83, align 8
  %84 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1890, ptr %82, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %84, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1891, align 8
  %85 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %86 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1891, align 8
  %87 = call ptr @candy_builtin_if_else(ptr %81, ptr %85, ptr %86)
  %88 = load ptr, ptr @num_1, align 8
  %89 = call ptr @candy_builtin_list_get(ptr %77, ptr %88)
  %90 = load ptr, ptr @num_2, align 8
  %91 = call ptr @candy_builtin_list_get(ptr %77, ptr %90)
  %92 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %93 = load ptr, ptr %92, align 8
  %94 = load ptr, ptr @tag_Multiply, align 8
  %95 = call ptr @Builtins__structGet(ptr %93, ptr %94)
  %96 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_scaleFactor)
  %97 = call ptr @Core_fixedDecimal_scaleFactor(ptr %2, ptr %96)
  %98 = call ptr @get_candy_function_pointer(ptr %95)
  %99 = call ptr @get_candy_function_environment(ptr %95)
  %100 = call ptr (...) %98(ptr %89, ptr %97, ptr %99)
  %101 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  %102 = load ptr, ptr %101, align 8
  %103 = load ptr, ptr @tag_DivideTruncating, align 8
  %104 = call ptr @Builtins__structGet(ptr %102, ptr %103)
  %105 = call ptr @get_candy_function_pointer(ptr %104)
  %106 = call ptr @get_candy_function_environment(ptr %104)
  %107 = call ptr (...) %105(ptr %100, ptr %91, ptr %106)
  %108 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_fromIntScaled)
  %109 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %107, ptr %2, ptr %108)
  ret ptr %109
}

define ptr @Core_fixedDecimal_isScale_18.1880(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IsNonNegative, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_equals_then(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1888, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1889, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1889, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @248, align 8
  ret ptr @248
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @249, align 8
  ret ptr @249
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.1882, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.1883, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.1884, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.1885, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.1883, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.1885, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.1886, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.1887, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.1887, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.1882(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @250, align 8
  ret ptr @250
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.1884(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @251, align 8
  ret ptr @251
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.1886(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @252, align 8
  ret ptr @252
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1888(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_equals_else(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @253, align 8
  ret ptr @253
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.1890(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_compareTo(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_compareTo:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_comparableMinorUnits)
  %12 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %12)
  %14 = load ptr, ptr @tag_Struct, align 8
  %15 = call ptr @candy_builtin_equals(ptr %14, ptr %13)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %12, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_equals_then, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_compareTo_14_equals_then, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %13, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_equals_else, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_fixedDecimal_compareTo_14_equals_else, align 8
  %22 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_equals_then, align 8
  %23 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_equals_else, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_0, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %24, ptr %25)
  %27 = load ptr, ptr @tag_Match, align 8
  %28 = call ptr @candy_builtin_equals(ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %24, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_else.1900, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.1901, align 8
  %32 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.1901, align 8
  %34 = call ptr @candy_builtin_if_else(ptr %28, ptr %32, ptr %33)
  %35 = load ptr, ptr @num_1, align 8
  %36 = call ptr @candy_builtin_list_get(ptr %24, ptr %35)
  %37 = load ptr, ptr @num_2, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %24, ptr %37)
  %39 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr @tag_CompareTo, align 8
  %42 = call ptr @Builtins__structGet(ptr %40, ptr %41)
  %43 = call ptr @get_candy_function_pointer(ptr %42)
  %44 = call ptr @get_candy_function_environment(ptr %42)
  %45 = call ptr (...) %43(ptr %36, ptr %38, ptr %44)
  %46 = load ptr, ptr @tag_Equal, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %48 = load ptr, ptr %47, align 8
  %49 = call ptr @get_candy_function_pointer(ptr %48)
  %50 = call ptr @get_candy_function_environment(ptr %48)
  %51 = call ptr (...) %49(ptr %45, ptr %46, ptr %50)
  %52 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %53 = load ptr, ptr %52, align 8
  %54 = load ptr, ptr @tag_Implies, align 8
  %55 = call ptr @Builtins__structGet(ptr %53, ptr %54)
  %56 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %57 = load ptr, ptr %56, align 8
  %58 = call ptr @get_candy_function_pointer(ptr %57)
  %59 = call ptr @get_candy_function_environment(ptr %57)
  %60 = call ptr (...) %58(ptr %36, ptr %38, ptr %59)
  %61 = call ptr @get_candy_function_pointer(ptr %55)
  %62 = call ptr @get_candy_function_environment(ptr %55)
  %63 = call ptr (...) %61(ptr %51, ptr %60, ptr %62)
  %64 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check)
  %65 = call ptr @Core_check_check(ptr %63, ptr %64)
  ret ptr %45
}

define ptr @Core_fixedDecimal_compareTo_14_equals_then(ptr %0) {
Core_fixedDecimal_compareTo_14_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_else.1898, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.1899, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.1899, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_compareTo_14_hasKey_then(ptr %0) {
Core_fixedDecimal_compareTo_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @254, align 8
  ret ptr @254
}

define ptr @Core_fixedDecimal_compareTo_14_hasKey_else(ptr %0) {
Core_fixedDecimal_compareTo_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @255, align 8
  ret ptr @255
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_then(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_hasKey_then.1892, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then.1893, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_hasKey_else.1894, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else.1895, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then.1893, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else.1895, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_then.1896, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then.1897, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then.1897, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_compareTo_14_hasKey_then.1892(ptr %0) {
Core_fixedDecimal_compareTo_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @256, align 8
  ret ptr @256
}

define ptr @Core_fixedDecimal_compareTo_14_hasKey_else.1894(ptr %0) {
Core_fixedDecimal_compareTo_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @257, align 8
  ret ptr @257
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_then.1896(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @258, align 8
  ret ptr @258
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_else(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_else.1898(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_compareTo_14_equals_else(ptr %0) {
Core_fixedDecimal_compareTo_14_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @259, align 8
  ret ptr @259
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_else.1900(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_isLessThan(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_isLessThan:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_compareTo)
  %12 = call ptr @Core_fixedDecimal_compareTo(ptr %0, ptr %1, ptr %11)
  %13 = load ptr, ptr @tag_Less, align 8
  %14 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %12, ptr %13, ptr %17)
  ret ptr %18
}

define ptr @Core_fixedDecimal_isGreaterThan(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_isGreaterThan:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_compareTo)
  %12 = call ptr @Core_fixedDecimal_compareTo(ptr %0, ptr %1, ptr %11)
  %13 = load ptr, ptr @tag_Greater, align 8
  %14 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %12, ptr %13, ptr %17)
  ret ptr %18
}

define ptr @Core_fixedDecimal_isLessThanOrEqualTo(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_isLessThanOrEqualTo:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %12 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %11)
  %13 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %17 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_compareTo)
  %22 = call ptr @Core_fixedDecimal_compareTo(ptr %0, ptr %1, ptr %21)
  %23 = load ptr, ptr @tag_Greater, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8
  %26 = call ptr @get_candy_function_pointer(ptr %25)
  %27 = call ptr @get_candy_function_environment(ptr %25)
  %28 = call ptr (...) %26(ptr %22, ptr %23, ptr %27)
  %29 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr @tag_Not, align 8
  %32 = call ptr @Builtins__structGet(ptr %30, ptr %31)
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %28, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_isGreaterThanOrEqualTo(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_isGreaterThanOrEqualTo:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %12 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %11)
  %13 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:13", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %17 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:isGreaterThanOrEqualTo:13", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_compareTo)
  %22 = call ptr @Core_fixedDecimal_compareTo(ptr %0, ptr %1, ptr %21)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8
  %26 = call ptr @get_candy_function_pointer(ptr %25)
  %27 = call ptr @get_candy_function_environment(ptr %25)
  %28 = call ptr (...) %26(ptr %22, ptr %23, ptr %27)
  %29 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr @tag_Not, align 8
  %32 = call ptr @Builtins__structGet(ptr %30, ptr %31)
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %28, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_isPositive(ptr %0, ptr %1) {
Core_fixedDecimal_isPositive:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %7 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %6)
  %8 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %9 = load ptr, ptr @"Core:fixedDecimal:isPositive:7", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr %9)
  %11 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = load ptr, ptr @tag_GetValue, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %16)
  %18 = load ptr, ptr @tag_MinorUnits, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_IsGreaterThan, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %23)
  %26 = call ptr @get_candy_function_environment(ptr %23)
  %27 = call ptr (...) %25(ptr %19, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_fixedDecimal_isNonPositive(ptr %0, ptr %1) {
Core_fixedDecimal_isNonPositive:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_isPositive)
  %7 = call ptr @Core_fixedDecimal_isPositive(ptr %0, ptr %6)
  %8 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr @tag_Not, align 8
  %11 = call ptr @Builtins__structGet(ptr %9, ptr %10)
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %7, ptr %13)
  ret ptr %14
}

define ptr @Core_fixedDecimal_isNegative(ptr %0, ptr %1) {
Core_fixedDecimal_isNegative:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %7 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %6)
  %8 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %9 = load ptr, ptr @"Core:fixedDecimal:isNegative:7", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr %9)
  %11 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = load ptr, ptr @tag_GetValue, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %16)
  %18 = load ptr, ptr @tag_MinorUnits, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_IsLessThan, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %23)
  %26 = call ptr @get_candy_function_environment(ptr %23)
  %27 = call ptr (...) %25(ptr %19, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_fixedDecimal_isNonNegative(ptr %0, ptr %1) {
Core_fixedDecimal_isNonNegative:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_isNegative)
  %7 = call ptr @Core_fixedDecimal_isNegative(ptr %0, ptr %6)
  %8 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr @tag_Not, align 8
  %11 = call ptr @Builtins__structGet(ptr %9, ptr %10)
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %7, ptr %13)
  ret ptr %14
}

define ptr @Core_fixedDecimal_absolute(ptr %0, ptr %1) {
Core_fixedDecimal_absolute:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_isNegative)
  %7 = call ptr @Core_fixedDecimal_isNegative(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %0, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute_9, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute_10, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  %16 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %7, ptr %14, ptr %15, ptr %19)
  ret ptr %20
}

define ptr @Core_fixedDecimal_absolute_9(ptr %0) {
Core_fixedDecimal_absolute_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_negate)
  %4 = call ptr @Core_fixedDecimal_negate(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_fixedDecimal_absolute_10(ptr %0) {
Core_fixedDecimal_absolute_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_approxEquals(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_fixedDecimal_approxEquals:
  %4 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %5 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %4)
  %6 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %9 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %13 = call ptr @Core_fixedDecimal_is(ptr %2, ptr %12)
  %14 = load ptr, ptr @"text_`is delta` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %17 = call ptr @Core_fixedDecimal_is(ptr %2, ptr %16)
  %18 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_isNegative)
  %22 = call ptr @Core_fixedDecimal_isNegative(ptr %2, ptr %21)
  %23 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr @tag_Not, align 8
  %26 = call ptr @Builtins__structGet(ptr %24, ptr %25)
  %27 = call ptr @get_candy_function_pointer(ptr %26)
  %28 = call ptr @get_candy_function_environment(ptr %26)
  %29 = call ptr (...) %27(ptr %22, ptr %28)
  %30 = load ptr, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_subtract)
  %33 = call ptr @Core_fixedDecimal_subtract(ptr %0, ptr %1, ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_absolute)
  %35 = call ptr @Core_fixedDecimal_absolute(ptr %33, ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo)
  %37 = call ptr @Core_fixedDecimal_isLessThanOrEqualTo(ptr %35, ptr %2, ptr %36)
  ret ptr %37
}

define ptr @Core_fixedDecimal_min(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_min:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo)
  %12 = call ptr @Core_fixedDecimal_isLessThanOrEqualTo(ptr %0, ptr %1, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_fixedDecimal_min_15, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_fixedDecimal_min_15, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_min_16, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_min_16, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_min_15, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_min_16, align 8
  %21 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %12, ptr %19, ptr %20, ptr %24)
  ret ptr %25
}

define ptr @Core_fixedDecimal_min_15(ptr %0) {
Core_fixedDecimal_min_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_min_16(ptr %0) {
Core_fixedDecimal_min_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_max(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_max:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_isGreaterThanOrEqualTo)
  %12 = call ptr @Core_fixedDecimal_isGreaterThanOrEqualTo(ptr %0, ptr %1, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_fixedDecimal_max_15, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_fixedDecimal_max_15, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_max_16, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_max_16, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_max_15, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_max_16, align 8
  %21 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %12, ptr %19, ptr %20, ptr %24)
  ret ptr %25
}

define ptr @Core_fixedDecimal_max_15(ptr %0) {
Core_fixedDecimal_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_max_16(ptr %0) {
Core_fixedDecimal_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_coerceAtLeast(ptr %0, ptr %1) {
Core_fixedDecimal_coerceAtLeast:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %7 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %6)
  %8 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_max)
  %11 = call ptr @Core_fixedDecimal_max(ptr %0, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_fixedDecimal_coerceAtMost(ptr %0, ptr %1) {
Core_fixedDecimal_coerceAtMost:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %7 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %6)
  %8 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_min)
  %11 = call ptr @Core_fixedDecimal_min(ptr %0, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_fixedDecimal_coerceIn(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_coerceIn:
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %3)
  %5 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %8 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %7)
  %9 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %12 = call ptr @Core_fixedDecimal_is(ptr %2, ptr %11)
  %13 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo)
  %16 = call ptr @Core_fixedDecimal_isLessThanOrEqualTo(ptr %1, ptr %2, ptr %15)
  %17 = load ptr, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr null)
  %19 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %20 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %19)
  %21 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:fixedDecimal:coerceIn:24", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %25 = call ptr @Core_fixedDecimal_is(ptr %1, ptr %24)
  %26 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %27 = load ptr, ptr @"Core:fixedDecimal:coerceIn:24", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_max)
  %30 = call ptr @Core_fixedDecimal_max(ptr %0, ptr %1, ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %32 = call ptr @Core_fixedDecimal_is(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %34 = load ptr, ptr @"Core:fixedDecimal:coerceIn:27", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %37 = call ptr @Core_fixedDecimal_is(ptr %2, ptr %36)
  %38 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %39 = load ptr, ptr @"Core:fixedDecimal:coerceIn:27", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr %39)
  %41 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_min)
  %42 = call ptr @Core_fixedDecimal_min(ptr %30, ptr %2, ptr %41)
  ret ptr %42
}

define ptr @Core_fixedDecimal_toText(ptr %0, ptr %1) {
Core_fixedDecimal_toText:
  %2 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %3 = call ptr @Core_fixedDecimal_is(ptr %0, ptr %2)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_floorToInt)
  %7 = call ptr @Core_fixedDecimal_floorToInt(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8, i32 0, i32 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8, i32 0, i32 1
  store ptr %0, ptr %12, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8, i32 0, i32 2
  store ptr %14, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8, i32 0, i32 3
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8, i32 0, i32 4
  store ptr %20, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 4
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8, i32 0, i32 5
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_fixedDecimal_toText_10, align 8
  %26 = load ptr, ptr @fun_Core_fixedDecimal_toText_10, align 8
  %27 = call ptr @get_candy_function_environment(ptr @fun_Core_function_run.295)
  %28 = call ptr @Core_function_run.294(ptr %26, ptr %27)
  %29 = call ptr @candy_builtin_type_of(ptr %7)
  %30 = load ptr, ptr @tag_Text, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %7, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_22, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_fixedDecimal_toText_22, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %7, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_23, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_fixedDecimal_toText_23, align 8
  %38 = load ptr, ptr @fun_Core_fixedDecimal_toText_22, align 8
  %39 = load ptr, ptr @fun_Core_fixedDecimal_toText_23, align 8
  %40 = call ptr @candy_builtin_if_else(ptr %31, ptr %38, ptr %39)
  %41 = call ptr @candy_builtin_type_of(ptr %28)
  %42 = load ptr, ptr @tag_Text, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr }, ptr %44, i32 0, i32 0
  store ptr %28, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_29, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Core_fixedDecimal_toText_29, align 8
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %28, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_30, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_fixedDecimal_toText_30, align 8
  %50 = load ptr, ptr @fun_Core_fixedDecimal_toText_29, align 8
  %51 = load ptr, ptr @fun_Core_fixedDecimal_toText_30, align 8
  %52 = call ptr @candy_builtin_if_else(ptr %43, ptr %50, ptr %51)
  %53 = load ptr, ptr @text_., align 8
  %54 = call ptr @candy_builtin_text_concatenate(ptr %40, ptr %53)
  %55 = call ptr @candy_builtin_text_concatenate(ptr %54, ptr %52)
  ret ptr %55
}

define ptr @Core_fixedDecimal_toText_10(ptr %0) {
Core_fixedDecimal_toText_10:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %4 = call ptr @Core_fixedDecimal_is(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:fixedDecimal:toText:10:2", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr @tag_GetValue, align 8
  %11 = call ptr @Builtins__structGet(ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @get_candy_function_pointer(ptr %11)
  %15 = call ptr @get_candy_function_environment(ptr %11)
  %16 = call ptr (...) %14(ptr %13, ptr %15)
  %17 = load ptr, ptr @tag_Scale, align 8
  %18 = call ptr @Builtins__structGet(ptr %16, ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_scaleFactor)
  %20 = call ptr @Core_fixedDecimal_scaleFactor(ptr %18, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_fixedDecimal_is)
  %24 = call ptr @Core_fixedDecimal_is(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %26 = load ptr, ptr @"Core:fixedDecimal:toText:10:8", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_GetValue, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = call ptr @get_candy_function_pointer(ptr %31)
  %35 = call ptr @get_candy_function_environment(ptr %31)
  %36 = call ptr (...) %34(ptr %33, ptr %35)
  %37 = load ptr, ptr @tag_MinorUnits, align 8
  %38 = call ptr @Builtins__structGet(ptr %36, ptr %37)
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr @tag_Remainder, align 8
  %42 = call ptr @Builtins__structGet(ptr %40, ptr %41)
  %43 = call ptr @get_candy_function_pointer(ptr %42)
  %44 = call ptr @get_candy_function_environment(ptr %42)
  %45 = call ptr (...) %43(ptr %38, ptr %20, ptr %44)
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %47 = load ptr, ptr %46, align 8
  %48 = load ptr, ptr @tag_IsNonNegative, align 8
  %49 = call ptr @Builtins__structGet(ptr %47, ptr %48)
  %50 = call ptr @get_candy_function_pointer(ptr %49)
  %51 = call ptr @get_candy_function_environment(ptr %49)
  %52 = call ptr (...) %50(ptr %45, ptr %51)
  %53 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %53, i32 0, i32 0
  store ptr %55, ptr %56, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %53, i32 0, i32 1
  store ptr %58, ptr %59, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %53, i32 0, i32 2
  store ptr %45, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %53, i32 0, i32 3
  store ptr %20, ptr %61, align 8
  %62 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %53, i32 0, i32 4
  store ptr %63, ptr %64, align 8
  %65 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10_31, ptr %53, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %65, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  %66 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %67 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %68 = load ptr, ptr %67, align 8
  %69 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %66, i32 0, i32 0
  store ptr %68, ptr %69, align 8
  %70 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %66, i32 0, i32 1
  store ptr %45, ptr %70, align 8
  %71 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %66, i32 0, i32 2
  store ptr %20, ptr %71, align 8
  %72 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %73 = load ptr, ptr %72, align 8
  %74 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %66, i32 0, i32 3
  store ptr %73, ptr %74, align 8
  %75 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %66, i32 0, i32 4
  store ptr %76, ptr %77, align 8
  %78 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10_32, ptr %66, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %78, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  %79 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  %80 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  %81 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %82 = load ptr, ptr %81, align 8
  %83 = call ptr @get_candy_function_pointer(ptr %82)
  %84 = call ptr @get_candy_function_environment(ptr %82)
  %85 = call ptr (...) %83(ptr %52, ptr %79, ptr %80, ptr %84)
  ret ptr %85
}

define ptr @Core_fixedDecimal_toText_10_31(ptr %0) {
Core_fixedDecimal_toText_10_31:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Add, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %4)
  %10 = call ptr @get_candy_function_environment(ptr %4)
  %11 = call ptr (...) %9(ptr %6, ptr %8, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_ToDebugText, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %11, ptr %17)
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr @tag_RemovePrefix, align 8
  %22 = call ptr @Builtins__structGet(ptr %20, ptr %21)
  %23 = load ptr, ptr @text_1, align 8
  %24 = call ptr @get_candy_function_pointer(ptr %22)
  %25 = call ptr @get_candy_function_environment(ptr %22)
  %26 = call ptr (...) %24(ptr %18, ptr %23, ptr %25)
  ret ptr %26
}

define ptr @Core_fixedDecimal_toText_10_32(ptr %0) {
Core_fixedDecimal_toText_10_32:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Subtract, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %4)
  %10 = call ptr @get_candy_function_environment(ptr %4)
  %11 = call ptr (...) %9(ptr %6, ptr %8, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_ToDebugText, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %11, ptr %17)
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr @tag_RemovePrefix, align 8
  %22 = call ptr @Builtins__structGet(ptr %20, ptr %21)
  %23 = load ptr, ptr @text_-1, align 8
  %24 = call ptr @get_candy_function_pointer(ptr %22)
  %25 = call ptr @get_candy_function_environment(ptr %22)
  %26 = call ptr (...) %24(ptr %18, ptr %23, ptr %25)
  ret ptr %26
}

define ptr @Core_fixedDecimal_toText_22(ptr %0) {
Core_fixedDecimal_toText_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_toText_23(ptr %0) {
Core_fixedDecimal_toText_23:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText_29(ptr %0) {
Core_fixedDecimal_toText_29:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_toText_30(ptr %0) {
Core_fixedDecimal_toText_30:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_type_is.1902(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.1904(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.1906(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1908, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1909, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1909, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.1908(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.1910(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.1912, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.1913, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.1913, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.1912(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.1914(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.1916, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.1917, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.1917, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.1916(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.1918(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.1920, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.1921, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.1921, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.1920(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.1922(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.1924, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.1925, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.1925, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.1924(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.1926(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.1928, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.1929, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.1929, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.1928(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.1930(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1932, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1933, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1933, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.1932(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.1934(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.1936, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.1937, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.1937, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.1936(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.1938(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1940, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.1941, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1948, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.1949, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1941, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1949, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.1950, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1951, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1952, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1953, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.1951, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.1953, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.1940(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1942, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1943, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1946, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1947, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1943, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1947, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1942(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1944, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1945, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1945, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1944(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @260, align 8
  ret ptr @260
}

define ptr @Core_bool_lazyAnd_18_equals_else.1946(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @261, align 8
  ret ptr @261
}

define ptr @Core_bool_lazyAnd_18_equals_else.1948(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @262, align 8
  ret ptr @262
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.1950(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.1952(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1954, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.1955, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1962, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.1963, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1955, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1963, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1964, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1965, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.1965, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.1954(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.1956, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.1957, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1960, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.1961, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.1957, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1961, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.1956(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.1958, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.1959, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.1959, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.1958(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @263, align 8
  ret ptr @263
}

define ptr @Core_bool_lazyAnd_18_equals_else.1960(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @264, align 8
  ret ptr @264
}

define ptr @Core_bool_lazyAnd_18_equals_else.1962(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @265, align 8
  ret ptr @265
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.1964(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.1966(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.1968, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.1969, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.1969, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.1939)
  %13 = call ptr @Core_bool_lazyAnd.1938(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.1968(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.1970(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1972, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.1973, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1980, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.1981, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1973, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1981, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %26, ptr %32, align 8
  %33 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %34, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %0, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %1, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1982, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1983, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.1983, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.1972(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1974, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1975, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1978, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1979, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1975, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1979, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1974(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1976, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1977, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1977, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1976(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @266, align 8
  ret ptr @266
}

define ptr @Core_bool_lazyOr_18_equals_else.1978(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @267, align 8
  ret ptr @267
}

define ptr @Core_bool_lazyOr_18_equals_else.1980(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @268, align 8
  ret ptr @268
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.1982(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1984, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.1985, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1992, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.1993, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1985, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1993, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.1994, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1995, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1996, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1997, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.1995, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.1997, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.1984(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.1986, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.1987, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1990, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.1991, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.1987, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1991, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.1986(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.1988, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.1989, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.1989, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.1988(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @269, align 8
  ret ptr @269
}

define ptr @Core_bool_lazyOr_18_equals_else.1990(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @270, align 8
  ret ptr @270
}

define ptr @Core_bool_lazyOr_18_equals_else.1992(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @271, align 8
  ret ptr @271
}

define ptr @Core_bool_lazyOr_18_case-1_matched.1994(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.1996(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.1998(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.2000, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.2001, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.2001, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1971)
  %13 = call ptr @Core_bool_lazyOr.1970(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.2000(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.2002(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.2004(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.2006, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.2007, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.2007, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.1971)
  %22 = call ptr @Core_bool_lazyOr.1970(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.2006(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.2008(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.2010(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.2012(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.2014, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.2015, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.2015, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.2014(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.2016(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.2018, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.2019, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.2019, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.2018(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.2020(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.2022, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.2023, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.2023, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.2022(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.2024(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.2026, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.2027, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.2027, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.2026(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.2028(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.2030, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.2031, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.2031, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.2030(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.2032(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.2034, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.2035, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.2035, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.2034(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.2036(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.2038, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.2039, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.2039, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.2038(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.2040(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.2042, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.2043, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.2043, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.2042(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.2044(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.2046, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.2047, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.2054, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.2055, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.2047, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2055, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.2056, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.2057, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %26, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %0, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.2058, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.2059, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.2057, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.2059, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.2046(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.2048, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.2049, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.2052, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.2053, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.2049, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2053, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.2048(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.2050, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.2051, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2051, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.2050(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @272, align 8
  ret ptr @272
}

define ptr @Core_bool_lazyAnd_18_equals_else.2052(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @273, align 8
  ret ptr @273
}

define ptr @Core_bool_lazyAnd_18_equals_else.2054(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @274, align 8
  ret ptr @274
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.2056(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.2058(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.2060, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.2061, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.2068, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.2069, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.2061, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2069, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.2070, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.2071, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.2071, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.2060(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.2062, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.2063, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.2066, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.2067, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.2063, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2067, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.2062(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.2064, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.2065, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.2065, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.2064(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @275, align 8
  ret ptr @275
}

define ptr @Core_bool_lazyAnd_18_equals_else.2066(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @276, align 8
  ret ptr @276
}

define ptr @Core_bool_lazyAnd_18_equals_else.2068(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @277, align 8
  ret ptr @277
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.2070(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.2072(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.2074, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.2075, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.2075, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.2045)
  %13 = call ptr @Core_bool_lazyAnd.2044(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.2074(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.2076(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.2078, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.2079, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.2086, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.2087, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.2079, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2087, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %26, ptr %32, align 8
  %33 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %34, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %0, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %1, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.2088, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.2089, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.2089, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.2078(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.2080, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.2081, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.2084, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.2085, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.2081, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2085, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.2080(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.2082, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.2083, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2083, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.2082(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @278, align 8
  ret ptr @278
}

define ptr @Core_bool_lazyOr_18_equals_else.2084(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @279, align 8
  ret ptr @279
}

define ptr @Core_bool_lazyOr_18_equals_else.2086(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @280, align 8
  ret ptr @280
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.2088(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.2090, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.2091, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.2098, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.2099, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.2091, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2099, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.2100, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.2101, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.2102, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.2103, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.2101, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.2103, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.2090(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.2092, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.2093, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.2096, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.2097, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.2093, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2097, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.2092(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.2094, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.2095, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.2095, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.2094(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @281, align 8
  ret ptr @281
}

define ptr @Core_bool_lazyOr_18_equals_else.2096(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @282, align 8
  ret ptr @282
}

define ptr @Core_bool_lazyOr_18_equals_else.2098(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @283, align 8
  ret ptr @283
}

define ptr @Core_bool_lazyOr_18_case-1_matched.2100(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.2102(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.2104(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.2106, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.2107, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.2107, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.2077)
  %13 = call ptr @Core_bool_lazyOr.2076(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.2106(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.2108(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.2110(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.2112, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.2113, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.2113, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.2077)
  %22 = call ptr @Core_bool_lazyOr.2076(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.2112(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_check.2114(ptr %0, ptr %1) {
Core_check_check:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = load ptr, ptr @tag_True, align 8
  %12 = call ptr @candy_builtin_equals(ptr %0, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.2116", ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.2117", align 8
  %16 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %17 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.2117", align 8
  %18 = call ptr @candy_builtin_if_else(ptr %12, ptr %16, ptr %17)
  %19 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %20 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  %21 = call ptr @candy_builtin_if_else(ptr %18, ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %23 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.2118", ptr %22, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %23, ptr @"fun_anonymous_$generated__needs_condition_else.2119", align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.2119", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %0, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.2116"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.2118"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_type_is.2120(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.2122(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.2124(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.2126, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.2127, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.2127, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.2126(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.2128(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.2130, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.2131, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.2131, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.2130(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.2132(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.2134, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.2135, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.2135, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.2134(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.2136(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.2138, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.2139, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.2139, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.2138(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.2140(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.2142, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.2143, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.2143, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.2142(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.2144(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.2146, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.2147, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.2147, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.2146(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.2148(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.2150, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.2151, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.2151, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.2150(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.2152(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.2154, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.2155, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.2155, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.2154(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive.2156(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is2, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %1, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.2158, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18.2159, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18.2159, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_18.2159)
  %17 = call ptr @Core_controlFlow_recursive_18.2158(ptr %15, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_controlFlow_recursive_18.2158(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_18:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.2160, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_18_0.2161, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.2161, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_18_0.2160(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_type_is.2162(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_int_is.2164(ptr %0, ptr %1) {
Core_int_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_int_negate.2166(ptr %0, ptr %1) {
Core_int_negate:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %12, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_int_compareTo.2168(ptr %0, ptr %1, ptr %2) {
Core_int_compareTo:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr @tag_IntCompareTo, align 8
  %26 = call ptr @Builtins__structGet(ptr %24, ptr %25)
  %27 = call ptr @get_candy_function_pointer(ptr %26)
  %28 = call ptr @get_candy_function_environment(ptr %26)
  %29 = call ptr (...) %27(ptr %0, ptr %1, ptr %28)
  %30 = load ptr, ptr @tag_Equal, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %32 = load ptr, ptr %31, align 8
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %29, ptr %30, ptr %34)
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr @tag_Implies, align 8
  %39 = call ptr @Builtins__structGet(ptr %37, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %1, ptr %43)
  %45 = call ptr @get_candy_function_pointer(ptr %39)
  %46 = call ptr @get_candy_function_environment(ptr %39)
  %47 = call ptr (...) %45(ptr %35, ptr %44, ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check.2115)
  %49 = call ptr @Core_check_check.2114(ptr %47, ptr %48)
  ret ptr %29
}

define ptr @Core_int_isLessThan.2170(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo.2169)
  %24 = call ptr @Core_int_compareTo.2168(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Less, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isGreaterThan.2172(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo.2169)
  %24 = call ptr @Core_int_compareTo.2168(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Greater, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isLessThanOrEqualTo.2174(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.2173)
  %24 = call ptr @Core_int_isGreaterThan.2172(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isGreaterThanOrEqualTo.2176(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.2171)
  %24 = call ptr @Core_int_isLessThan.2170(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isPositive.2178(ptr %0, ptr %1) {
Core_int_isPositive:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.2173)
  %14 = call ptr @Core_int_isGreaterThan.2172(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonPositive.2180(ptr %0, ptr %1) {
Core_int_isNonPositive:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonPositive:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan.2173)
  %25 = call ptr @Core_int_isGreaterThan.2172(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_isNegative.2182(ptr %0, ptr %1) {
Core_int_isNegative:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.2171)
  %14 = call ptr @Core_int_isLessThan.2170(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonNegative.2184(ptr %0, ptr %1) {
Core_int_isNonNegative:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.2171)
  %25 = call ptr @Core_int_isLessThan.2170(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_absolute.2186(ptr %0, ptr %1) {
Core_int_absolute:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:absolute:8", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.2171)
  %25 = call ptr @Core_int_isLessThan.2170(ptr %0, ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %0, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_int_absolute_9.2188, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_int_absolute_9.2189, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_int_absolute_10.2190, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_int_absolute_10.2191, align 8
  %38 = load ptr, ptr @fun_Core_int_absolute_9.2189, align 8
  %39 = load ptr, ptr @fun_Core_int_absolute_10.2191, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %25, ptr %38, ptr %39, ptr %43)
  ret ptr %44
}

define ptr @Core_int_absolute_9.2188(ptr %0) {
Core_int_absolute_9:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:absolute:9:2", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %14, ptr %16, ptr %20)
  ret ptr %21
}

define ptr @Core_int_absolute_10.2190(ptr %0) {
Core_int_absolute_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_fitsInRustU32.2192(ptr %0, ptr %1) {
Core_int_fitsInRustU32:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.2185)
  %13 = call ptr @Core_int_isNonNegative.2184(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_4294967295, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.2171)
  %18 = call ptr @Core_int_isLessThan.2170(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_fitsInRustU128.2194(ptr %0, ptr %1) {
Core_int_fitsInRustU128:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.2185)
  %13 = call ptr @Core_int_isNonNegative.2184(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan.2171)
  %18 = call ptr @Core_int_isLessThan.2170(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_isEven.2196(ptr %0, ptr %1) {
Core_int_isEven:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  ret ptr %23
}

define ptr @Core_int_isOdd.2198(ptr %0, ptr %1) {
Core_int_isOdd:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %0, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:int:isOdd:16", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @num_1, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %0, ptr %35, ptr %39)
  %41 = load ptr, ptr @num_0, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %40, ptr %41, ptr %45)
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr @tag_Not, align 8
  %50 = call ptr @Builtins__structGet(ptr %48, ptr %49)
  %51 = call ptr @get_candy_function_pointer(ptr %50)
  %52 = call ptr @get_candy_function_environment(ptr %50)
  %53 = call ptr (...) %51(ptr %23, ptr %52)
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %55 = load ptr, ptr %54, align 8
  %56 = call ptr @get_candy_function_pointer(ptr %55)
  %57 = call ptr @get_candy_function_environment(ptr %55)
  %58 = call ptr (...) %56(ptr %46, ptr %53, ptr %57)
  %59 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check.2115)
  %60 = call ptr @Core_check_check.2114(ptr %58, ptr %59)
  ret ptr %23
}

define ptr @Core_int_min.2200(ptr %0, ptr %1, ptr %2) {
Core_int_min:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo.2175)
  %24 = call ptr @Core_int_isLessThanOrEqualTo.2174(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_min_15.2202, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_min_15.2203, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_min_16.2204, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_min_16.2205, align 8
  %31 = load ptr, ptr @fun_Core_int_min_15.2203, align 8
  %32 = load ptr, ptr @fun_Core_int_min_16.2205, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_min_15.2202(ptr %0) {
Core_int_min_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_min_16.2204(ptr %0) {
Core_int_min_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max.2206(ptr %0, ptr %1, ptr %2) {
Core_int_max:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThanOrEqualTo.2177)
  %24 = call ptr @Core_int_isGreaterThanOrEqualTo.2176(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_max_15.2208, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_max_15.2209, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_max_16.2210, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_max_16.2211, align 8
  %31 = load ptr, ptr @fun_Core_int_max_15.2209, align 8
  %32 = load ptr, ptr @fun_Core_int_max_16.2211, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_max_15.2208(ptr %0) {
Core_int_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max_16.2210(ptr %0) {
Core_int_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_coerceAtLeast.2212(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtLeast:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max.2207)
  %24 = call ptr @Core_int_max.2206(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceAtMost.2214(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtMost:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min.2201)
  %24 = call ptr @Core_int_min.2200(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceIn.2216(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_int_coerceIn:
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr @tag_Is, align 8
  %7 = call ptr @Builtins__structGet(ptr %5, ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %7)
  %10 = call ptr @get_candy_function_environment(ptr %7)
  %11 = call ptr (...) %9(ptr %0, ptr %8, ptr %10)
  %12 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_Is, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Int, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %17)
  %20 = call ptr @get_candy_function_environment(ptr %17)
  %21 = call ptr (...) %19(ptr %1, ptr %18, ptr %20)
  %22 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %2, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo.2175)
  %35 = call ptr @Core_int_isLessThanOrEqualTo.2174(ptr %1, ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_Is, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Int, align 8
  %43 = call ptr @get_candy_function_pointer(ptr %41)
  %44 = call ptr @get_candy_function_environment(ptr %41)
  %45 = call ptr (...) %43(ptr %0, ptr %42, ptr %44)
  %46 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %47 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %48 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr %47)
  %49 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr @tag_Is, align 8
  %52 = call ptr @Builtins__structGet(ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Int, align 8
  %54 = call ptr @get_candy_function_pointer(ptr %52)
  %55 = call ptr @get_candy_function_environment(ptr %52)
  %56 = call ptr (...) %54(ptr %1, ptr %53, ptr %55)
  %57 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max.2207)
  %61 = call ptr @Core_int_max.2206(ptr %0, ptr %1, ptr %60)
  %62 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr @tag_Is, align 8
  %65 = call ptr @Builtins__structGet(ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_Int, align 8
  %67 = call ptr @get_candy_function_pointer(ptr %65)
  %68 = call ptr @get_candy_function_environment(ptr %65)
  %69 = call ptr (...) %67(ptr %61, ptr %66, ptr %68)
  %70 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %71 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %72 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr %71)
  %73 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %74 = load ptr, ptr %73, align 8
  %75 = load ptr, ptr @tag_Is, align 8
  %76 = call ptr @Builtins__structGet(ptr %74, ptr %75)
  %77 = load ptr, ptr @tag_Int, align 8
  %78 = call ptr @get_candy_function_pointer(ptr %76)
  %79 = call ptr @get_candy_function_environment(ptr %76)
  %80 = call ptr (...) %78(ptr %2, ptr %77, ptr %79)
  %81 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %82 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %83 = call ptr @"anonymous_$generated__needs"(ptr %80, ptr %81, ptr %82)
  %84 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min.2201)
  %85 = call ptr @Core_int_min.2200(ptr %61, ptr %2, ptr %84)
  ret ptr %85
}

define ptr @Core_int_pow.2218(ptr %0, ptr %1, ptr %2) {
Core_int_pow:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative.2185)
  %24 = call ptr @Core_int_isNonNegative.2184(ptr %1, ptr %23)
  %25 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = alloca ptr, i64 3, align 8
  %28 = alloca ptr, i64 3, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %27, i64 0
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %28, i64 0
  store ptr %1, ptr %31, align 8
  %32 = load ptr, ptr @tag_Base, align 8
  %33 = getelementptr ptr, ptr %27, i64 1
  store ptr %32, ptr %33, align 8
  %34 = getelementptr ptr, ptr %28, i64 1
  store ptr %0, ptr %34, align 8
  %35 = getelementptr ptr, ptr %27, i64 2
  store ptr null, ptr %35, align 8
  %36 = getelementptr ptr, ptr %28, i64 2
  store ptr null, ptr %36, align 8
  %37 = call ptr @make_candy_struct(ptr %27, ptr %28)
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 0
  store ptr %40, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 1
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 2
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 3
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 4
  store ptr %52, ptr %53, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 5
  store ptr %55, ptr %56, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 6
  store ptr %58, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Core_int_pow_21.2220, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Core_int_pow_21.2221, align 8
  %61 = load ptr, ptr @fun_Core_int_pow_21.2221, align 8
  %62 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive.2157)
  %63 = call ptr @Core_controlFlow_recursive.2156(ptr %37, ptr %61, ptr %62)
  ret ptr %63
}

define ptr @Core_int_pow_21.2220(ptr %0, ptr %1, ptr %2) {
Core_int_pow_21:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_then.2222, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_int_pow_21_1_equals_then.2223, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_else.2240, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_int_pow_21_1_equals_else.2241, align 8
  %12 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then.2223, align 8
  %13 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else.2241, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.2242, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_int_pow_21_1_isMatch_else.2243, align 8
  %22 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.2243, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = load ptr, ptr @num_0, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %28, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_equals_else.2244, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_int_pow_21_4_equals_else.2245, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %35 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else.2245, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %36, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %44, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %26, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 3
  store ptr %0, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 4
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 5
  store ptr %28, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 6
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 7
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 8
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 9
  store ptr %62, ptr %63, align 8
  %64 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 10
  store ptr %65, ptr %66, align 8
  %67 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_didNotMatch.2246, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %67, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.2247, align 8
  %68 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %69 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch.2247, align 8
  %70 = call ptr @candy_builtin_if_else(ptr %40, ptr %68, ptr %69)
  ret ptr %70
}

define ptr @Core_int_pow_21_1_equals_then.2222(ptr %0) {
Core_int_pow_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.2224, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_int_pow_21_1_hasKey_then.2225, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.2226, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_1_hasKey_else.2227, align 8
  %15 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.2225, align 8
  %16 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.2227, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.2228, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_pow_21_1_isMatch_then.2229, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.2238, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_pow_21_1_isMatch_else.2239, align 8
  %31 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.2229, align 8
  %32 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.2239, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_1_hasKey_then.2224(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @284, align 8
  ret ptr @284
}

define ptr @Core_int_pow_21_1_hasKey_else.2226(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @285, align 8
  ret ptr @285
}

define ptr @Core_int_pow_21_1_isMatch_then.2228(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Exponent, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.2230, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_int_pow_21_1_hasKey_then.2231, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.2232, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_pow_21_1_hasKey_else.2233, align 8
  %19 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.2231, align 8
  %20 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.2233, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.2234, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_int_pow_21_1_isMatch_then.2235, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.2236, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_1_isMatch_else.2237, align 8
  %33 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.2235, align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.2237, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_int_pow_21_1_hasKey_then.2230(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Exponent, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @286, align 8
  ret ptr @286
}

define ptr @Core_int_pow_21_1_hasKey_else.2232(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @287, align 8
  ret ptr @287
}

define ptr @Core_int_pow_21_1_isMatch_then.2234(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @288, align 8
  ret ptr @288
}

define ptr @Core_int_pow_21_1_isMatch_else.2236(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_isMatch_else.2238(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_equals_else.2240(ptr %0) {
Core_int_pow_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @289, align 8
  ret ptr @289
}

define ptr @Core_int_pow_21_1_isMatch_else.2242(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_int_pow_21_4_equals_else.2244(ptr %0) {
Core_int_pow_21_4_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `0`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @290, align 8
  ret ptr @290
}

define ptr @Core_int_pow_21_4_case-0_didNotMatch.2246(ptr %0) {
Core_int_pow_21_4_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 2
  store ptr %13, ptr %14, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 3
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 4
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 5
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 6
  store ptr %25, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 7
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 8
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 10
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 9
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-1_matched.2248, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_int_pow_21_4_case-1_matched.2249, align 8
  %37 = call ptr @get_candy_function_environment(ptr @fun_Core_int_pow_21_4_case-1_matched.2249)
  %38 = call ptr @Core_int_pow_21_4_case-1_matched.2248(ptr %37)
  ret ptr %38
}

define ptr @Core_int_pow_21_4_case-1_matched.2248(ptr %0) {
Core_int_pow_21_4_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @num_1, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %21, ptr %22, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 2
  store ptr %36, ptr %37, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 3
  store ptr %39, ptr %40, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 4
  store ptr %42, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_5.2250, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_int_pow_21_4_5.2251, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 3
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 4
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 5
  store ptr %62, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_6.2252, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_int_pow_21_4_6.2253, align 8
  %65 = load ptr, ptr @fun_Core_int_pow_21_4_5.2251, align 8
  %66 = load ptr, ptr @fun_Core_int_pow_21_4_6.2253, align 8
  %67 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %68 = load ptr, ptr %67, align 8
  %69 = call ptr @get_candy_function_pointer(ptr %68)
  %70 = call ptr @get_candy_function_environment(ptr %68)
  %71 = call ptr (...) %69(ptr %27, ptr %65, ptr %66, ptr %70)
  ret ptr %71
}

define ptr @Core_int_pow_21_4_5.2250(ptr %0) {
Core_int_pow_21_4_5:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = alloca ptr, i64 3, align 8
  %19 = alloca ptr, i64 3, align 8
  %20 = load ptr, ptr @tag_Exponent, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %19, i64 0
  store ptr %17, ptr %22, align 8
  %23 = load ptr, ptr @tag_Base, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr ptr, ptr %19, i64 1
  store ptr %9, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = getelementptr ptr, ptr %19, i64 2
  store ptr null, ptr %27, align 8
  %28 = call ptr @make_candy_struct(ptr %18, ptr %19)
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = call ptr @get_candy_function_pointer(ptr %30)
  %32 = call ptr @get_candy_function_environment(ptr %30)
  %33 = call ptr (...) %31(ptr %28, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_4_6.2252(ptr %0) {
Core_int_pow_21_4_6:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = alloca ptr, i64 3, align 8
  %25 = alloca ptr, i64 3, align 8
  %26 = load ptr, ptr @tag_Base, align 8
  %27 = getelementptr ptr, ptr %24, i64 0
  store ptr %26, ptr %27, align 8
  %28 = getelementptr ptr, ptr %25, i64 0
  store ptr %9, ptr %28, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %24, i64 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %25, i64 1
  store ptr %23, ptr %31, align 8
  %32 = getelementptr ptr, ptr %24, i64 2
  store ptr null, ptr %32, align 8
  %33 = getelementptr ptr, ptr %25, i64 2
  store ptr null, ptr %33, align 8
  %34 = call ptr @make_candy_struct(ptr %24, ptr %25)
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %36 = load ptr, ptr %35, align 8
  %37 = call ptr @get_candy_function_pointer(ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr %36)
  %39 = call ptr (...) %37(ptr %34, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %41, ptr %39, ptr %45)
  ret ptr %46
}

define ptr @Examples_sqrt_sqrt(ptr %0, ptr %1, ptr %2) {
Examples_sqrt_sqrt:
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %0, ptr %8)
  %10 = load ptr, ptr @"text_`fixedDecimal.is x` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_IsNonNegative, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %15)
  %17 = call ptr @get_candy_function_environment(ptr %15)
  %18 = call ptr (...) %16(ptr %0, ptr %17)
  %19 = load ptr, ptr @"text_`fixedDecimal.isNonNegative x` was not satisfied", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr null)
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr @tag_Is, align 8
  %24 = call ptr @Builtins__structGet(ptr %22, ptr %23)
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %1, ptr %26)
  %28 = load ptr, ptr @"text_`int.is precision` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_IsNonNegative, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %1, ptr %35)
  %37 = load ptr, ptr @"text_`int.isNonNegative precision` was not satisfied", align 8
  %38 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr null)
  %39 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr @tag_FromIntScaled, align 8
  %42 = call ptr @Builtins__structGet(ptr %40, ptr %41)
  %43 = load ptr, ptr @num_10, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %42)
  %45 = call ptr @get_candy_function_environment(ptr %42)
  %46 = call ptr (...) %44(ptr %43, ptr %1, ptr %45)
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr @tag_DivideTruncatingAtScale, align 8
  %50 = call ptr @Builtins__structGet(ptr %48, ptr %49)
  %51 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %52 = load ptr, ptr %51, align 8
  %53 = load ptr, ptr @tag_FromInt, align 8
  %54 = call ptr @Builtins__structGet(ptr %52, ptr %53)
  %55 = load ptr, ptr @num_2, align 8
  %56 = call ptr @get_candy_function_pointer(ptr %54)
  %57 = call ptr @get_candy_function_environment(ptr %54)
  %58 = call ptr (...) %56(ptr %55, ptr %57)
  %59 = call ptr @get_candy_function_pointer(ptr %50)
  %60 = call ptr @get_candy_function_environment(ptr %50)
  %61 = call ptr (...) %59(ptr %0, ptr %58, ptr %1, ptr %60)
  %62 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %63 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %62, i32 0, i32 0
  store ptr %64, ptr %65, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %62, i32 0, i32 1
  store ptr %67, ptr %68, align 8
  %69 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %62, i32 0, i32 2
  store ptr %0, ptr %69, align 8
  %70 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %62, i32 0, i32 3
  store ptr %46, ptr %70, align 8
  %71 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %62, i32 0, i32 4
  store ptr %1, ptr %71, align 8
  %72 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_82, ptr %62, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %72, ptr @fun_Examples_sqrt_sqrt_82, align 8
  %73 = load ptr, ptr @fun_Examples_sqrt_sqrt_82, align 8
  %74 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive)
  %75 = call ptr @Core_controlFlow_recursive(ptr %61, ptr %73, ptr %74)
  ret ptr %75
}

define ptr @Examples_sqrt_sqrt_82(ptr %0, ptr %1, ptr %2) {
Examples_sqrt_sqrt_82:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_DivideTruncatingAtScale, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr @tag_Add, align 8
  %10 = call ptr @Builtins__structGet(ptr %8, ptr %9)
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = load ptr, ptr @tag_DivideTruncatingAtScale, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %14)
  %20 = call ptr @get_candy_function_environment(ptr %14)
  %21 = call ptr (...) %19(ptr %16, ptr %1, ptr %18, ptr %20)
  %22 = call ptr @get_candy_function_pointer(ptr %10)
  %23 = call ptr @get_candy_function_environment(ptr %10)
  %24 = call ptr (...) %22(ptr %1, ptr %21, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_FromInt, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = load ptr, ptr @num_2, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %28)
  %31 = call ptr @get_candy_function_environment(ptr %28)
  %32 = call ptr (...) %30(ptr %29, ptr %31)
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %6)
  %36 = call ptr @get_candy_function_environment(ptr %6)
  %37 = call ptr (...) %35(ptr %24, ptr %32, ptr %34, ptr %36)
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_ApproxEquals, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %41)
  %45 = call ptr @get_candy_function_environment(ptr %41)
  %46 = call ptr (...) %44(ptr %1, ptr %37, ptr %43, ptr %45)
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %1, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_82_56, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Examples_sqrt_sqrt_82_56, align 8
  %50 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %51 = getelementptr inbounds { ptr, ptr }, ptr %50, i32 0, i32 0
  store ptr %0, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr }, ptr %50, i32 0, i32 1
  store ptr %37, ptr %52, align 8
  %53 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_82_57, ptr %50, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %53, ptr @fun_Examples_sqrt_sqrt_82_57, align 8
  %54 = load ptr, ptr @fun_Examples_sqrt_sqrt_82_56, align 8
  %55 = load ptr, ptr @fun_Examples_sqrt_sqrt_82_57, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %57 = load ptr, ptr %56, align 8
  %58 = call ptr @get_candy_function_pointer(ptr %57)
  %59 = call ptr @get_candy_function_environment(ptr %57)
  %60 = call ptr (...) %58(ptr %46, ptr %54, ptr %55, ptr %59)
  ret ptr %60
}

define ptr @Examples_sqrt_sqrt_82_56(ptr %0) {
Examples_sqrt_sqrt_82_56:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_sqrt_sqrt_82_57(ptr %0) {
Examples_sqrt_sqrt_82_57:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  ret ptr %7
}

define ptr @Examples_sqrt_main(ptr %0, ptr %1) {
Examples_sqrt_main:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_FromInt, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @num_2, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = load ptr, ptr @num_65, align 8
  %11 = call ptr @get_candy_function_environment(ptr @fun_Examples_sqrt_sqrt)
  %12 = call ptr @Examples_sqrt_sqrt(ptr %9, ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Print, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr @tag_ToText, align 8
  %20 = call ptr @Builtins__structGet(ptr %18, ptr %19)
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %12, ptr %22)
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Text, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr }, ptr %27, i32 0, i32 0
  store ptr %23, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Examples_sqrt_main_50, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Examples_sqrt_main_50, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %23, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Examples_sqrt_main_51, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Examples_sqrt_main_51, align 8
  %33 = load ptr, ptr @fun_Examples_sqrt_main_50, align 8
  %34 = load ptr, ptr @fun_Examples_sqrt_main_51, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %26, ptr %33, ptr %34)
  %36 = load ptr, ptr @"text_The root of 2 is ", align 8
  %37 = call ptr @candy_builtin_text_concatenate(ptr %36, ptr %35)
  %38 = call ptr @get_candy_function_pointer(ptr %16)
  %39 = call ptr @get_candy_function_environment(ptr %16)
  %40 = call ptr (...) %38(ptr %37, ptr %39)
  ret ptr %40
}

define ptr @Examples_sqrt_main_50(ptr %0) {
Examples_sqrt_main_50:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_sqrt_main_51(ptr %0) {
Examples_sqrt_main_51:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}
