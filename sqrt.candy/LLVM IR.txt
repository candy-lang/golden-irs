; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::fitsInRustU128:10" = global ptr null
@"Builtins::fitsInRustU128:16" = global ptr null
@"Builtins::fitsInRustU128:5" = global ptr null
@"Builtins::fitsInRustU128:8" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intBitwiseAnd:18" = global ptr null
@"Builtins::intBitwiseAnd:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intDivideTruncating:11" = global ptr null
@"Builtins::intDivideTruncating:17" = global ptr null
@"Builtins::intDivideTruncating:25" = global ptr null
@"Builtins::intDivideTruncating:32" = global ptr null
@"Builtins::intDivideTruncating:5" = global ptr null
@"Builtins::intMultiply:11" = global ptr null
@"Builtins::intMultiply:18" = global ptr null
@"Builtins::intMultiply:5" = global ptr null
@"Builtins::intRemainder:11" = global ptr null
@"Builtins::intRemainder:17" = global ptr null
@"Builtins::intRemainder:25" = global ptr null
@"Builtins::intRemainder:32" = global ptr null
@"Builtins::intRemainder:5" = global ptr null
@"Builtins::intShiftRight:11" = global ptr null
@"Builtins::intShiftRight:14" = global ptr null
@"Builtins::intShiftRight:23" = global ptr null
@"Builtins::intShiftRight:24" = global ptr null
@"Builtins::intShiftRight:26:0" = global ptr null
@"Builtins::intShiftRight:27" = global ptr null
@"Builtins::intShiftRight:29" = global ptr null
@"Builtins::intShiftRight:30" = global ptr null
@"Builtins::intShiftRight:31" = global ptr null
@"Builtins::intShiftRight:34" = global ptr null
@"Builtins::intShiftRight:42" = global ptr null
@"Builtins::intShiftRight:49" = global ptr null
@"Builtins::intShiftRight:5" = global ptr null
@"Builtins::intSubtract:11" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::isLessThanOrEqualTo:11" = global ptr null
@"Builtins::isLessThanOrEqualTo:18" = global ptr null
@"Builtins::isLessThanOrEqualTo:19" = global ptr null
@"Builtins::isLessThanOrEqualTo:5" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listInsert:11" = global ptr null
@"Builtins::listInsert:14" = global ptr null
@"Builtins::listInsert:16" = global ptr null
@"Builtins::listInsert:24" = global ptr null
@"Builtins::listInsert:25" = global ptr null
@"Builtins::listInsert:27" = global ptr null
@"Builtins::listInsert:35" = global ptr null
@"Builtins::listInsert:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::not:1" = global ptr null
@"Builtins::print:11" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::tagGetValue:11" = global ptr null
@"Builtins::tagGetValue:13" = global ptr null
@"Builtins::tagGetValue:19" = global ptr null
@"Builtins::tagGetValue:5" = global ptr null
@"Builtins::textConcatenate:11" = global ptr null
@"Builtins::textConcatenate:18" = global ptr null
@"Builtins::textConcatenate:5" = global ptr null
@"Builtins::textGetRange:11" = global ptr null
@"Builtins::textGetRange:14" = global ptr null
@"Builtins::textGetRange:16" = global ptr null
@"Builtins::textGetRange:24" = global ptr null
@"Builtins::textGetRange:25" = global ptr null
@"Builtins::textGetRange:27" = global ptr null
@"Builtins::textGetRange:33" = global ptr null
@"Builtins::textGetRange:36" = global ptr null
@"Builtins::textGetRange:38" = global ptr null
@"Builtins::textGetRange:46" = global ptr null
@"Builtins::textGetRange:47" = global ptr null
@"Builtins::textGetRange:49" = global ptr null
@"Builtins::textGetRange:5" = global ptr null
@"Builtins::textGetRange:53" = global ptr null
@"Builtins::textGetRange:55" = global ptr null
@"Builtins::textGetRange:63" = global ptr null
@"Builtins::textLength:11" = global ptr null
@"Builtins::textLength:5" = global ptr null
@"Builtins::textStartsWith:11" = global ptr null
@"Builtins::textStartsWith:18" = global ptr null
@"Builtins::textStartsWith:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:bool:and:13" = global ptr null
@"Core:bool:and:4" = global ptr null
@"Core:bool:and:9" = global ptr null
@"Core:bool:implies:12" = global ptr null
@"Core:bool:implies:15" = global ptr null
@"Core:bool:implies:4" = global ptr null
@"Core:bool:implies:9" = global ptr null
@"Core:bool:is:1" = global ptr null
@"Core:bool:lazyAnd:14" = global ptr null
@"Core:bool:lazyAnd:16" = global ptr null
@"Core:bool:lazyAnd:16:11" = global ptr null
@"Core:bool:lazyAnd:16:19" = global ptr null
@"Core:bool:lazyAnd:16:7" = global ptr null
@"Core:bool:lazyAnd:4" = global ptr null
@"Core:bool:lazyOr:14" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:16:12" = global ptr null
@"Core:bool:lazyOr:16:20" = global ptr null
@"Core:bool:lazyOr:16:8" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:not:4" = global ptr null
@"Core:bool:not:6" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:check:check:1" = global ptr null
@"Core:check:check:14" = global ptr null
@"Core:check:check:5" = global ptr null
@"Core:check:checkEquals:12" = global ptr null
@"Core:check:checkEquals:13" = global ptr null
@"Core:check:checkEquals:15:0" = global ptr null
@"Core:check:checkEquals:16" = global ptr null
@"Core:check:checkEquals:19" = global ptr null
@"Core:check:checkEquals:20" = global ptr null
@"Core:check:checkEquals:22:0" = global ptr null
@"Core:check:checkEquals:23" = global ptr null
@"Core:check:checkEquals:25" = global ptr null
@"Core:check:checkEquals:26" = global ptr null
@"Core:check:checkEquals:27" = global ptr null
@"Core:check:checkEquals:28" = global ptr null
@"Core:check:checkEquals:29" = global ptr null
@"Core:controlFlow:if:19" = global ptr null
@"Core:controlFlow:if:24" = global ptr null
@"Core:controlFlow:if:9" = global ptr null
@"Core:controlFlow:recursive:15" = global ptr null
@"Core:controlFlow:recursive:16:0:3" = global ptr null
@"Core:controlFlow:recursive:16:5" = global ptr null
@"Core:controlFlow:recursive:21" = global ptr null
@"Core:fixedDecimal:absolute:11" = global ptr null
@"Core:fixedDecimal:absolute:4" = global ptr null
@"Core:fixedDecimal:absolute:8" = global ptr null
@"Core:fixedDecimal:absolute:9:2" = global ptr null
@"Core:fixedDecimal:add:13" = global ptr null
@"Core:fixedDecimal:add:25" = global ptr null
@"Core:fixedDecimal:add:27" = global ptr null
@"Core:fixedDecimal:add:4" = global ptr null
@"Core:fixedDecimal:add:9" = global ptr null
@"Core:fixedDecimal:approxEquals:14" = global ptr null
@"Core:fixedDecimal:approxEquals:17" = global ptr null
@"Core:fixedDecimal:approxEquals:19" = global ptr null
@"Core:fixedDecimal:approxEquals:23" = global ptr null
@"Core:fixedDecimal:approxEquals:25" = global ptr null
@"Core:fixedDecimal:approxEquals:28" = global ptr null
@"Core:fixedDecimal:approxEquals:4" = global ptr null
@"Core:fixedDecimal:approxEquals:9" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:18" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:21" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:22" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:28" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:33" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:4" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:9" = global ptr null
@"Core:fixedDecimal:compareTo:13" = global ptr null
@"Core:fixedDecimal:compareTo:24" = global ptr null
@"Core:fixedDecimal:compareTo:4" = global ptr null
@"Core:fixedDecimal:compareTo:41" = global ptr null
@"Core:fixedDecimal:compareTo:42" = global ptr null
@"Core:fixedDecimal:compareTo:9" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:14" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:17" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:27" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:35" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:39" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:4" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:52" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:53" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:61" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:63" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:9" = global ptr null
@"Core:fixedDecimal:floorToInt:16" = global ptr null
@"Core:fixedDecimal:floorToInt:18" = global ptr null
@"Core:fixedDecimal:floorToInt:19" = global ptr null
@"Core:fixedDecimal:floorToInt:4" = global ptr null
@"Core:fixedDecimal:floorToInt:7" = global ptr null
@"Core:fixedDecimal:fromIntScaled:14" = global ptr null
@"Core:fixedDecimal:fromIntScaled:9" = global ptr null
@"Core:fixedDecimal:is:1" = global ptr null
@"Core:fixedDecimal:is:1:14:2" = global ptr null
@"Core:fixedDecimal:is:1:15" = global ptr null
@"Core:fixedDecimal:is:1:minorUnits" = global ptr null
@"Core:fixedDecimal:is:1:scale" = global ptr null
@"Core:fixedDecimal:isGreaterThan:14" = global ptr null
@"Core:fixedDecimal:isGreaterThan:4" = global ptr null
@"Core:fixedDecimal:isGreaterThan:9" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:13" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:20" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:4" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:9" = global ptr null
@"Core:fixedDecimal:isNegative:15" = global ptr null
@"Core:fixedDecimal:isNegative:4" = global ptr null
@"Core:fixedDecimal:isNegative:7" = global ptr null
@"Core:fixedDecimal:isNonNegative:14" = global ptr null
@"Core:fixedDecimal:isNonNegative:4" = global ptr null
@"Core:fixedDecimal:isNonNegative:7" = global ptr null
@"Core:fixedDecimal:isScale:14:7" = global ptr null
@"Core:fixedDecimal:isScale:15" = global ptr null
@"Core:fixedDecimal:minorUnits:15" = global ptr null
@"Core:fixedDecimal:minorUnits:17" = global ptr null
@"Core:fixedDecimal:minorUnits:4" = global ptr null
@"Core:fixedDecimal:negate:15" = global ptr null
@"Core:fixedDecimal:negate:18" = global ptr null
@"Core:fixedDecimal:negate:19" = global ptr null
@"Core:fixedDecimal:negate:4" = global ptr null
@"Core:fixedDecimal:negate:8" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:13" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:21" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:22:12" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:22:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:22:20" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:22:21" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:22:22" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:23:19" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:23:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:23:20" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:23:21" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:23:22" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:4" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:9" = global ptr null
@"Core:fixedDecimal:scale:15" = global ptr null
@"Core:fixedDecimal:scale:17" = global ptr null
@"Core:fixedDecimal:scale:4" = global ptr null
@"Core:fixedDecimal:scaleFactor:13" = global ptr null
@"Core:fixedDecimal:scaleFactor:4" = global ptr null
@"Core:fixedDecimal:subtract:13" = global ptr null
@"Core:fixedDecimal:subtract:25" = global ptr null
@"Core:fixedDecimal:subtract:27" = global ptr null
@"Core:fixedDecimal:subtract:4" = global ptr null
@"Core:fixedDecimal:subtract:9" = global ptr null
@"Core:fixedDecimal:toText:10:16" = global ptr null
@"Core:fixedDecimal:toText:10:2" = global ptr null
@"Core:fixedDecimal:toText:10:26" = global ptr null
@"Core:fixedDecimal:toText:10:27:24" = global ptr null
@"Core:fixedDecimal:toText:10:27:8" = global ptr null
@"Core:fixedDecimal:toText:10:28:24" = global ptr null
@"Core:fixedDecimal:toText:10:28:8" = global ptr null
@"Core:fixedDecimal:toText:10:29" = global ptr null
@"Core:fixedDecimal:toText:10:4" = global ptr null
@"Core:fixedDecimal:toText:10:8" = global ptr null
@"Core:fixedDecimal:toText:11" = global ptr null
@"Core:fixedDecimal:toText:20" = global ptr null
@"Core:fixedDecimal:toText:21" = global ptr null
@"Core:fixedDecimal:toText:23:0" = global ptr null
@"Core:fixedDecimal:toText:24" = global ptr null
@"Core:fixedDecimal:toText:27" = global ptr null
@"Core:fixedDecimal:toText:28" = global ptr null
@"Core:fixedDecimal:toText:30:0" = global ptr null
@"Core:fixedDecimal:toText:31" = global ptr null
@"Core:fixedDecimal:toText:32" = global ptr null
@"Core:fixedDecimal:toText:33" = global ptr null
@"Core:fixedDecimal:toText:4" = global ptr null
@"Core:fixedDecimal:toText:7" = global ptr null
@"Core:function:is0:11" = global ptr null
@"Core:function:is0:9:3" = global ptr null
@"Core:function:is1:11" = global ptr null
@"Core:function:is1:9:3" = global ptr null
@"Core:function:is2:11" = global ptr null
@"Core:function:is2:9:3" = global ptr null
@"Core:function:run:12" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:int:compareTo:18" = global ptr null
@"Core:int:compareTo:4" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:isEven:4" = global ptr null
@"Core:int:isEven:8" = global ptr null
@"Core:int:isGreaterThan:13" = global ptr null
@"Core:int:isGreaterThan:4" = global ptr null
@"Core:int:isGreaterThan:9" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:13" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:20" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:4" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:4" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:int:isNegative:4" = global ptr null
@"Core:int:isNegative:8" = global ptr null
@"Core:int:isNonNegative:14" = global ptr null
@"Core:int:isNonNegative:4" = global ptr null
@"Core:int:isNonNegative:7" = global ptr null
@"Core:int:isOdd:4" = global ptr null
@"Core:int:isOdd:8" = global ptr null
@"Core:int:isPositive:4" = global ptr null
@"Core:int:isPositive:8" = global ptr null
@"Core:int:max:14" = global ptr null
@"Core:int:max:17" = global ptr null
@"Core:int:max:4" = global ptr null
@"Core:int:max:9" = global ptr null
@"Core:int:negate:4" = global ptr null
@"Core:int:negate:8" = global ptr null
@"Core:int:pow:12" = global ptr null
@"Core:int:pow:14" = global ptr null
@"Core:int:pow:21:1" = global ptr null
@"Core:int:pow:21:4" = global ptr null
@"Core:int:pow:21:4:4" = global ptr null
@"Core:int:pow:21:4:5:10" = global ptr null
@"Core:int:pow:21:4:5:12" = global ptr null
@"Core:int:pow:21:4:5:5" = global ptr null
@"Core:int:pow:21:4:6:12" = global ptr null
@"Core:int:pow:21:4:6:15" = global ptr null
@"Core:int:pow:21:4:6:17" = global ptr null
@"Core:int:pow:21:4:6:18" = global ptr null
@"Core:int:pow:21:4:6:7" = global ptr null
@"Core:int:pow:21:4:7" = global ptr null
@"Core:int:pow:21:base" = global ptr null
@"Core:int:pow:21:exponent" = global ptr null
@"Core:int:pow:22" = global ptr null
@"Core:int:pow:9" = global ptr null
@"Core:iterator:129" = global ptr null
@"Core:iterator:all:16:11" = global ptr null
@"Core:iterator:all:16:13" = global ptr null
@"Core:iterator:all:16:22" = global ptr null
@"Core:iterator:all:17" = global ptr null
@"Core:iterator:any:16:11" = global ptr null
@"Core:iterator:any:16:13" = global ptr null
@"Core:iterator:any:16:22" = global ptr null
@"Core:iterator:any:17" = global ptr null
@"Core:iterator:chunked:28" = global ptr null
@"Core:iterator:ensure:13" = global ptr null
@"Core:iterator:ensure:17:2" = global ptr null
@"Core:iterator:ensure:18" = global ptr null
@"Core:iterator:ensure:9" = global ptr null
@"Core:iterator:foldLeft:14" = global ptr null
@"Core:iterator:foldLeft:21:1" = global ptr null
@"Core:iterator:foldLeft:21:4" = global ptr null
@"Core:iterator:foldLeft:21:5" = global ptr null
@"Core:iterator:foldLeft:21:5:10" = global ptr null
@"Core:iterator:foldLeft:21:5:8" = global ptr null
@"Core:iterator:foldLeft:21:5:item" = global ptr null
@"Core:iterator:foldLeft:21:5:rest" = global ptr null
@"Core:iterator:foldLeft:21:iterator" = global ptr null
@"Core:iterator:foldLeft:21:value" = global ptr null
@"Core:iterator:foldLeft:22" = global ptr null
@"Core:iterator:foldLeft:3" = global ptr null
@"Core:iterator:fromList:19:8" = global ptr null
@"Core:iterator:generate:42:6:14" = global ptr null
@"Core:iterator:generate:42:7" = global ptr null
@"Core:iterator:generate:43" = global ptr null
@"Core:iterator:generateWithState:12:1:2" = global ptr null
@"Core:iterator:generateWithState:12:1:3" = global ptr null
@"Core:iterator:generateWithState:12:1:3:19" = global ptr null
@"Core:iterator:generateWithState:12:1:3:20" = global ptr null
@"Core:iterator:generateWithState:12:1:3:22:0" = global ptr null
@"Core:iterator:generateWithState:12:1:3:23" = global ptr null
@"Core:iterator:generateWithState:12:1:3:25" = global ptr null
@"Core:iterator:generateWithState:12:1:3:26" = global ptr null
@"Core:iterator:generateWithState:12:1:3:27" = global ptr null
@"Core:iterator:generateWithState:12:1:3:6" = global ptr null
@"Core:iterator:generateWithState:12:1:3:item" = global ptr null
@"Core:iterator:generateWithState:12:1:3:state" = global ptr null
@"Core:iterator:generateWithState:13" = global ptr null
@"Core:iterator:generateWithState:9" = global ptr null
@"Core:iterator:isEmpty:7" = global ptr null
@"Core:iterator:joinToText:12:18" = global ptr null
@"Core:iterator:joinToText:12:9" = global ptr null
@"Core:iterator:joinToText:13" = global ptr null
@"Core:iterator:joinToText:3" = global ptr null
@"Core:iterator:length:6" = global ptr null
@"Core:iterator:length:8" = global ptr null
@"Core:iterator:map:14" = global ptr null
@"Core:iterator:map:17:2" = global ptr null
@"Core:iterator:map:17:3" = global ptr null
@"Core:iterator:map:17:3:5" = global ptr null
@"Core:iterator:map:17:3:item" = global ptr null
@"Core:iterator:map:17:3:rest" = global ptr null
@"Core:iterator:map:18" = global ptr null
@"Core:iterator:map:3" = global ptr null
@"Core:iterator:next:15" = global ptr null
@"Core:iterator:next:3" = global ptr null
@"Core:iterator:next:6" = global ptr null
@"Core:iterator:next:nextFunction" = global ptr null
@"Core:iterator:reduceLeft:13" = global ptr null
@"Core:iterator:reduceLeft:15" = global ptr null
@"Core:iterator:reduceLeft:16" = global ptr null
@"Core:iterator:reduceLeft:16:14" = global ptr null
@"Core:iterator:reduceLeft:16:item" = global ptr null
@"Core:iterator:reduceLeft:16:rest" = global ptr null
@"Core:iterator:reduceLeft:9" = global ptr null
@"Core:iterator:skip:14" = global ptr null
@"Core:iterator:skip:22" = global ptr null
@"Core:iterator:skip:24" = global ptr null
@"Core:iterator:skip:26:6:1" = global ptr null
@"Core:iterator:skip:26:6:7:2" = global ptr null
@"Core:iterator:skip:26:6:8:2" = global ptr null
@"Core:iterator:skip:26:6:8:3" = global ptr null
@"Core:iterator:skip:26:6:8:3:13" = global ptr null
@"Core:iterator:skip:26:6:8:3:15" = global ptr null
@"Core:iterator:skip:26:6:8:3:rest" = global ptr null
@"Core:iterator:skip:26:6:9" = global ptr null
@"Core:iterator:skip:26:6:iterator" = global ptr null
@"Core:iterator:skip:26:6:n" = global ptr null
@"Core:iterator:skip:26:7" = global ptr null
@"Core:iterator:sum:17" = global ptr null
@"Core:iterator:sum:3" = global ptr null
@"Core:iterator:sum:5:15" = global ptr null
@"Core:iterator:sum:6" = global ptr null
@"Core:iterator:sum:8:8" = global ptr null
@"Core:iterator:sum:9" = global ptr null
@"Core:iterator:take:17" = global ptr null
@"Core:iterator:take:19" = global ptr null
@"Core:iterator:take:25" = global ptr null
@"Core:iterator:take:27:1" = global ptr null
@"Core:iterator:take:27:10" = global ptr null
@"Core:iterator:take:27:index" = global ptr null
@"Core:iterator:take:28" = global ptr null
@"Core:iterator:take:30:5" = global ptr null
@"Core:iterator:take:31" = global ptr null
@"Core:iterator:take:9" = global ptr null
@"Core:iterator:takeWhile:3" = global ptr null
@"Core:iterator:takeWhile:7:2" = global ptr null
@"Core:iterator:takeWhile:7:3" = global ptr null
@"Core:iterator:takeWhile:7:3:4" = global ptr null
@"Core:iterator:takeWhile:7:3:7" = global ptr null
@"Core:iterator:takeWhile:7:3:item" = global ptr null
@"Core:iterator:takeWhile:7:3:rest" = global ptr null
@"Core:iterator:takeWhile:8" = global ptr null
@"Core:iterator:toList:3" = global ptr null
@"Core:iterator:toList:6:8" = global ptr null
@"Core:iterator:toList:7" = global ptr null
@"Core:iterator:where:17:2:2" = global ptr null
@"Core:iterator:where:17:2:3" = global ptr null
@"Core:iterator:where:17:2:3:4" = global ptr null
@"Core:iterator:where:17:2:3:6:2" = global ptr null
@"Core:iterator:where:17:2:3:6:4" = global ptr null
@"Core:iterator:where:17:2:3:6:5" = global ptr null
@"Core:iterator:where:17:2:3:6:5:item" = global ptr null
@"Core:iterator:where:17:2:3:6:5:rest" = global ptr null
@"Core:iterator:where:17:2:3:7" = global ptr null
@"Core:iterator:where:17:2:3:item" = global ptr null
@"Core:iterator:where:17:2:3:rest" = global ptr null
@"Core:iterator:where:17:3" = global ptr null
@"Core:iterator:where:18" = global ptr null
@"Core:iterator:windowed:14" = global ptr null
@"Core:iterator:windowed:22" = global ptr null
@"Core:iterator:windowed:24" = global ptr null
@"Core:iterator:windowed:3" = global ptr null
@"Core:iterator:windowed:34" = global ptr null
@"Core:iterator:windowed:42" = global ptr null
@"Core:iterator:windowed:44" = global ptr null
@"Core:iterator:windowed:54" = global ptr null
@"Core:iterator:windowed:57:14" = global ptr null
@"Core:iterator:windowed:57:18:7" = global ptr null
@"Core:iterator:windowed:57:20" = global ptr null
@"Core:iterator:windowed:57:24:7" = global ptr null
@"Core:iterator:windowed:57:26" = global ptr null
@"Core:iterator:windowed:57:3" = global ptr null
@"Core:iterator:windowed:57:5" = global ptr null
@"Core:iterator:windowed:58" = global ptr null
@"Core:iterator:withIndex:11:1" = global ptr null
@"Core:iterator:withIndex:11:4" = global ptr null
@"Core:iterator:withIndex:11:5" = global ptr null
@"Core:iterator:withIndex:11:5:20" = global ptr null
@"Core:iterator:withIndex:11:5:item" = global ptr null
@"Core:iterator:withIndex:11:5:rest" = global ptr null
@"Core:iterator:withIndex:11:index" = global ptr null
@"Core:iterator:withIndex:11:iterator" = global ptr null
@"Core:iterator:withIndex:12" = global ptr null
@"Core:iterator:withIndex:3" = global ptr null
@"Core:iterator:wrapSafe:10:7" = global ptr null
@"Core:iterator:wrapSafe:14:1" = global ptr null
@"Core:iterator:wrapSafe:14:11" = global ptr null
@"Core:iterator:wrapSafe:14:18" = global ptr null
@"Core:iterator:wrapSafe:14:1:8" = global ptr null
@"Core:iterator:wrapSafe:14:1:function" = global ptr null
@"Core:iterator:wrapSafe:14:20" = global ptr null
@"Core:iterator:wrapSafe:14:22:7" = global ptr null
@"Core:iterator:wrapSafe:14:22:8" = global ptr null
@"Core:iterator:wrapSafe:14:22:8:17" = global ptr null
@"Core:iterator:wrapSafe:14:22:8:7" = global ptr null
@"Core:iterator:wrapSafe:14:22:8:item" = global ptr null
@"Core:iterator:wrapSafe:14:22:8:rest" = global ptr null
@"Core:iterator:wrapSafe:15" = global ptr null
@"Core:iterator:wrapSafe:9" = global ptr null
@"Core:list:append:11" = global ptr null
@"Core:list:append:4" = global ptr null
@"Core:list:append:9" = global ptr null
@"Core:result:is:1" = global ptr null
@"Core:result:mapOrElse:14" = global ptr null
@"Core:result:mapOrElse:24" = global ptr null
@"Core:result:mapOrElse:26" = global ptr null
@"Core:result:mapOrElse:26:2" = global ptr null
@"Core:result:mapOrElse:26:5" = global ptr null
@"Core:result:mapOrElse:26:value" = global ptr null
@"Core:result:mapOrElse:26:value#1" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:result:unwrapOr:4" = global ptr null
@"Core:result:unwrapOr:8" = global ptr null
@"Core:result:unwrapOrElse:14" = global ptr null
@"Core:result:unwrapOrElse:18:7" = global ptr null
@"Core:result:unwrapOrElse:19" = global ptr null
@"Core:result:unwrapOrElse:4" = global ptr null
@"Core:text:removePrefix:14" = global ptr null
@"Core:text:removePrefix:15:4" = global ptr null
@"Core:text:removePrefix:15:7" = global ptr null
@"Core:text:removePrefix:15:8" = global ptr null
@"Core:text:removePrefix:17" = global ptr null
@"Core:text:removePrefix:4" = global ptr null
@"Core:text:removePrefix:9" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_bitwise_and = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_divide_truncating = global ptr null
@fun_candy_builtin_int_multiply = global ptr null
@fun_candy_builtin_int_remainder = global ptr null
@fun_candy_builtin_int_shift_right = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_insert = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_print = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_text_get_range = global ptr null
@fun_candy_builtin_text_length = global ptr null
@fun_candy_builtin_text_starts_with = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Base = global ptr null
@tag_Empty = global ptr null
@tag_Equal = global ptr null
@tag_Error = global ptr null
@tag_Exponent = global ptr null
@tag_False = global ptr null
@tag_FixedDecimal = global ptr null
@tag_Function = global ptr null
@tag_Greater = global ptr null
@tag_Index = global ptr null
@tag_Int = global ptr null
@tag_Item = global ptr null
@tag_Iterator = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_Match = global ptr null
@tag_MinorUnits = global ptr null
@tag_More = global ptr null
@tag_N = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Ok = global ptr null
@tag_Rest = global ptr null
@tag_Scale = global ptr null
@tag_State = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@tag_Value = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_2 = global ptr null
@num_3 = global ptr null
@num_4 = global ptr null
@num_5 = global ptr null
@num_6 = global ptr null
@num_7 = global ptr null
@num_8 = global ptr null
@num_9 = global ptr null
@num_10 = global ptr null
@num_340282366920938463463374607431768211455 = global ptr null
@text_ = global ptr null
@"text_ to be " = global ptr null
@text_-1 = global ptr null
@text_. = global ptr null
@"text_. You might want to call `shiftLeft` instead." = global ptr null
@text_1 = global ptr null
@"text_A check failed." = global ptr null
@"text_A check failed: Expected " = global ptr null
@"text_Can't `reduceLeft` an empty iterator" = global ptr null
@"text_Expected Error, got " = global ptr null
@"text_Expected FixedDecimal, got " = global ptr null
@"text_Expected Iterator, got " = global ptr null
@"text_Expected More, got " = global ptr null
@"text_Expected Ok, got " = global ptr null
@"text_Expected `0`, got `" = global ptr null
@"text_Expected `Empty`, got `" = global ptr null
@"text_Expected `Equal`, got `" = global ptr null
@"text_Expected `False`, got `" = global ptr null
@"text_Expected `Greater`, got `" = global ptr null
@"text_Expected `Less`, got `" = global ptr null
@"text_Expected `True`, got `" = global ptr null
@"text_Expected a Struct, got `" = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@"text_Iterator items need to be ints." = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_Shifts by that much are not yet supported." = global ptr null
@"text_Struct doesn't contain key `Base`: `" = global ptr null
@"text_Struct doesn't contain key `Exponent`: `" = global ptr null
@"text_Struct doesn't contain key `Index`: `" = global ptr null
@"text_Struct doesn't contain key `Item`: `" = global ptr null
@"text_Struct doesn't contain key `Iterator`: `" = global ptr null
@"text_Struct doesn't contain key `MinorUnits`: `" = global ptr null
@"text_Struct doesn't contain key `N`: `" = global ptr null
@"text_Struct doesn't contain key `Rest`: `" = global ptr null
@"text_Struct doesn't contain key `Scale`: `" = global ptr null
@"text_Struct doesn't contain key `State`: `" = global ptr null
@"text_Struct doesn't contain key `Value`: `" = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `" = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_The guard needs to panic." = global ptr null
@"text_The shift `amount` is negative: " = global ptr null
@"text_You can't divide by zero." = global ptr null
@"text_`" = global ptr null
@"text_`." = global ptr null
@"text_`False` was not satisfied" = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`a | typeIs Text` was not satisfied" = global ptr null
@"text_`all` needs an iterator." = global ptr null
@"text_`amount | typeIs Int` was not satisfied" = global ptr null
@"text_`any` needs an iterator." = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Text` was not satisfied" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"text_`bool.is allowPartialWindows` was not satisfied" = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"text_`bool.is itemResult` was not satisfied" = global ptr null
@"text_`chunked` needs an iterator." = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`dividend | typeIs Int` was not satisfied" = global ptr null
@"text_`divisor | typeIs Int` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`endExclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`endExclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`ensure` needs an iterator." = global ptr null
@"text_`factorA | typeIs Int` was not satisfied" = global ptr null
@"text_`factorB | typeIs Int` was not satisfied" = global ptr null
@"text_`foldLeft` needs an iterator." = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"text_`function.is0 defaultGetter` was not satisfied" = global ptr null
@"text_`function.is0 notIteratorGuard` was not satisfied" = global ptr null
@"text_`function.is0 then` was not satisfied" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"text_`function.is1 guard` was not satisfied" = global ptr null
@"text_`function.is1 mapper` was not satisfied" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"text_`function.is2 combine` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`int.is minorUnits` was not satisfied" = global ptr null
@"text_`int.is n` was not satisfied" = global ptr null
@"text_`int.is size` was not satisfied" = global ptr null
@"text_`int.is step` was not satisfied" = global ptr null
@"text_`int.isNonNegative n` was not satisfied" = global ptr null
@"text_`int.isPositive size` was not satisfied" = global ptr null
@"text_`int.isPositive step` was not satisfied" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"text_`is delta` was not satisfied" = global ptr null
@"text_`is dividend` was not satisfied" = global ptr null
@"text_`is divisor` was not satisfied" = global ptr null
@"text_`is exponent` was not satisfied" = global ptr null
@"text_`is list` was not satisfied" = global ptr null
@"text_`is minuend` was not satisfied" = global ptr null
@"text_`is prefix` was not satisfied" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"text_`is subtrahend` was not satisfied" = global ptr null
@"text_`is summandA` was not satisfied" = global ptr null
@"text_`is summandB` was not satisfied" = global ptr null
@"text_`is text` was not satisfied" = global ptr null
@"text_`is valueA` was not satisfied" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"text_`is value` was not satisfied" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"text_`isConditionBool` was not satisfied" = global ptr null
@"text_`isEmpty` needs an iterator." = global ptr null
@"text_`isNonNegative delta` was not satisfied" = global ptr null
@"text_`isNonNegative exponent` was not satisfied" = global ptr null
@"text_`isScale scale` was not satisfied" = global ptr null
@"text_`isScale targetScale` was not satisfied" = global ptr null
@"text_`joinToText` needs an iterator." = global ptr null
@"text_`length` needs an iterator." = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`map` needs an iterator." = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`next` needs an iterator." = global ptr null
@"text_`prefix | typeIs Text` was not satisfied" = global ptr null
@"text_`reduceLeft` needs an iterator." = global ptr null
@"text_`skip` needs an iterator." = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied" = global ptr null
@"text_`startInclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`startInclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`subtrahend | typeIs Int` was not satisfied" = global ptr null
@"text_`sum` needs an iterator." = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied" = global ptr null
@"text_`takeWhile` needs an iterator." = global ptr null
@"text_`take` needs an iterator." = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@"text_`text.is item` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"text_`toList` needs an iterator." = global ptr null
@"text_`value | isNonNegative` was not satisfied" = global ptr null
@"text_`value | typeIs Int` was not satisfied" = global ptr null
@"text_`where` needs an iterator." = global ptr null
@"text_`windowed` needs an iterator." = global ptr null
@"text_`withIndex` needs an iterator." = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then" = global ptr null
@"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__not = global ptr null
@fun_Builtins__not_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__not_1_case-0_didNotMatch = global ptr null
@fun_Builtins__not_1_equals_else.2 = global ptr null
@2 = global ptr null
@fun_Builtins__not_1_case-1_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else = global ptr null
@3 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.4 = global ptr null
@4 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.6 = global ptr null
@5 = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@6 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_else.8 = global ptr null
@7 = global ptr null
@fun_Builtins__intDivideTruncating = global ptr null
@fun_Builtins__intRemainder = global ptr null
@fun_Builtins__intShiftRight = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@8 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.10 = global ptr null
@9 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.12 = global ptr null
@10 = global ptr null
@fun_Builtins__intShiftRight_25 = global ptr null
@fun_Builtins__intShiftRight_26 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then.14 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.16 = global ptr null
@11 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then.18 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else.20 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.22 = global ptr null
@12 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.24 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.26 = global ptr null
@13 = global ptr null
@fun_Builtins__listInsert = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.28 = global ptr null
@14 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then.30 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else.32 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.34 = global ptr null
@15 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch.36 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.38 = global ptr null
@16 = global ptr null
@fun_Builtins__textGetRange = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.40 = global ptr null
@17 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then.42 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else.44 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.46 = global ptr null
@18 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch.48 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.50 = global ptr null
@19 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.52 = global ptr null
@20 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then.54 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else.56 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.58 = global ptr null
@21 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch.60 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.62 = global ptr null
@22 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.64 = global ptr null
@23 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then.66 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else.68 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.70 = global ptr null
@24 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.72 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.74 = global ptr null
@25 = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@26 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_else.76 = global ptr null
@27 = global ptr null
@fun_Core_bool_not_6_case-1_didNotMatch = global ptr null
@fun_Core_bool_not = global ptr null
@fun_Core_bool_is_1_equals_else.78 = global ptr null
@28 = global ptr null
@fun_Core_bool_is_1_isMatch_then.80 = global ptr null
@fun_Core_bool_is_1_isMatch_else.82 = global ptr null
@fun_Core_bool_is_1_equals_else.84 = global ptr null
@29 = global ptr null
@fun_Core_bool_not_6_equals_else = global ptr null
@30 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch = global ptr null
@fun_Core_bool_not_6_equals_else.86 = global ptr null
@31 = global ptr null
@fun_Core_bool_lazyAnd_16_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd = global ptr null
@fun_Core_bool_is_1_equals_else.88 = global ptr null
@32 = global ptr null
@fun_Core_bool_is_1_isMatch_then.90 = global ptr null
@fun_Core_bool_is_1_isMatch_else.92 = global ptr null
@fun_Core_bool_is_1_equals_else.94 = global ptr null
@33 = global ptr null
@fun_Core_function_is0_9 = global ptr null
@fun_Core_bool_lazyAnd_16_equals_else = global ptr null
@34 = global ptr null
@fun_Core_bool_lazyAnd_16_case-0_matched = global ptr null
@fun_Core_function_is0_9.96 = global ptr null
@fun_Core_bool_lazyAnd_16_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd_16_equals_else.98 = global ptr null
@35 = global ptr null
@fun_Core_bool_and = global ptr null
@fun_Core_bool_is_1_equals_else.100 = global ptr null
@36 = global ptr null
@fun_Core_bool_is_1_isMatch_then.102 = global ptr null
@fun_Core_bool_is_1_isMatch_else.104 = global ptr null
@fun_Core_bool_is_1_equals_else.106 = global ptr null
@37 = global ptr null
@fun_Core_bool_is_1_equals_else.108 = global ptr null
@38 = global ptr null
@fun_Core_bool_is_1_isMatch_then.110 = global ptr null
@fun_Core_bool_is_1_isMatch_else.112 = global ptr null
@fun_Core_bool_is_1_equals_else.114 = global ptr null
@39 = global ptr null
@fun_Core_bool_and_12 = global ptr null
@fun_Core_bool_lazyOr_16_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_is_1_equals_else.116 = global ptr null
@40 = global ptr null
@fun_Core_bool_is_1_isMatch_then.118 = global ptr null
@fun_Core_bool_is_1_isMatch_else.120 = global ptr null
@fun_Core_bool_is_1_equals_else.122 = global ptr null
@41 = global ptr null
@fun_Core_function_is0_9.124 = global ptr null
@fun_Core_bool_lazyOr_16_equals_else = global ptr null
@42 = global ptr null
@fun_Core_bool_lazyOr_16_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_16_equals_else.126 = global ptr null
@43 = global ptr null
@fun_Core_bool_lazyOr_16_case-1_matched = global ptr null
@fun_Core_function_is0_9.128 = global ptr null
@fun_Core_bool_or = global ptr null
@fun_Core_bool_is_1_equals_else.130 = global ptr null
@44 = global ptr null
@fun_Core_bool_is_1_isMatch_then.132 = global ptr null
@fun_Core_bool_is_1_isMatch_else.134 = global ptr null
@fun_Core_bool_is_1_equals_else.136 = global ptr null
@45 = global ptr null
@fun_Core_bool_is_1_equals_else.138 = global ptr null
@46 = global ptr null
@fun_Core_bool_is_1_isMatch_then.140 = global ptr null
@fun_Core_bool_is_1_isMatch_else.142 = global ptr null
@fun_Core_bool_is_1_equals_else.144 = global ptr null
@47 = global ptr null
@fun_Core_bool_or_12 = global ptr null
@fun_Core_bool_implies = global ptr null
@fun_Core_bool_is_1_equals_else.146 = global ptr null
@48 = global ptr null
@fun_Core_bool_is_1_isMatch_then.148 = global ptr null
@fun_Core_bool_is_1_isMatch_else.150 = global ptr null
@fun_Core_bool_is_1_equals_else.152 = global ptr null
@49 = global ptr null
@fun_Core_bool_is_1_equals_else.154 = global ptr null
@50 = global ptr null
@fun_Core_bool_is_1_isMatch_then.156 = global ptr null
@fun_Core_bool_is_1_isMatch_else.158 = global ptr null
@fun_Core_bool_is_1_equals_else.160 = global ptr null
@51 = global ptr null
@fun_Core_bool_is_1_isMatch_then.162 = global ptr null
@fun_Core_bool_not_6_equals_else.164 = global ptr null
@52 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch.166 = global ptr null
@fun_Core_bool_not_6_equals_else.168 = global ptr null
@53 = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else.170" = global ptr null
@fun_Core_check_check = global ptr null
@fun_Core_check_check_1_equals_else = global ptr null
@54 = global ptr null
@fun_Core_check_check_1_isMatch_then = global ptr null
@fun_Core_check_check_1_isMatch_else = global ptr null
@fun_Core_check_check_1_equals_else.172 = global ptr null
@55 = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.174" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.176" = global ptr null
@fun_Core_check_checkEquals = global ptr null
@fun_Core_check_checkEquals_14 = global ptr null
@fun_Core_check_checkEquals_15 = global ptr null
@fun_Core_check_checkEquals_21 = global ptr null
@fun_Core_check_checkEquals_22 = global ptr null
@fun_Core_controlFlow_if = global ptr null
@fun_Core_bool_is_1_equals_else.178 = global ptr null
@56 = global ptr null
@fun_Core_bool_is_1_isMatch_then.180 = global ptr null
@fun_Core_bool_is_1_isMatch_else.182 = global ptr null
@fun_Core_bool_is_1_equals_else.184 = global ptr null
@57 = global ptr null
@fun_Core_function_is0_9.186 = global ptr null
@fun_Builtins__ifElse_1_equals_else.188 = global ptr null
@58 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then.190 = global ptr null
@fun_Builtins__ifElse_1_isMatch_else.192 = global ptr null
@fun_Builtins__ifElse_1_equals_else.194 = global ptr null
@59 = global ptr null
@fun_Core_controlFlow_recursive = global ptr null
@fun_Core_function_is2_9 = global ptr null
@fun_Core_controlFlow_recursive_16 = global ptr null
@fun_Core_controlFlow_recursive_16_0 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_function_is0_9.196 = global ptr null
@fun_Core_int_compareTo = global ptr null
@fun_Core_int_isLessThan = global ptr null
@fun_Core_int_isGreaterThan = global ptr null
@fun_Core_int_isNonNegative = global ptr null
@fun_Core_int_isEven = global ptr null
@fun_Core_int_max = global ptr null
@fun_Core_int_max_15 = global ptr null
@fun_Core_int_max_16 = global ptr null
@fun_Core_int_pow_21_4_case-0_matched = global ptr null
@fun_Core_int_pow_21 = global ptr null
@fun_Core_int_pow_21_1_equals_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then = global ptr null
@60 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else = global ptr null
@61 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.198 = global ptr null
@62 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.200 = global ptr null
@63 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.202 = global ptr null
@64 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.204 = global ptr null
@fun_Core_int_pow_21_1_equals_else = global ptr null
@65 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.206 = global ptr null
@fun_Core_int_pow_21_4_equals_else = global ptr null
@66 = global ptr null
@fun_Core_int_pow_21_4_case-0_didNotMatch = global ptr null
@fun_Core_int_pow_21_4_5 = global ptr null
@fun_Core_int_pow_21_4_6 = global ptr null
@67 = global ptr null
@"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else" = global ptr null
@fun_Core_text_removePrefix = global ptr null
@fun_Core_text_removePrefix_15 = global ptr null
@fun_Core_text_removePrefix_16 = global ptr null
@fun_Core_fixedDecimal_isScale = global ptr null
@fun_Core_fixedDecimal_isScale_14 = global ptr null
@fun_Core_fixedDecimal_scaleFactor = global ptr null
@fun_Core_fixedDecimal_isScale_14.208 = global ptr null
@fun_Core_fixedDecimal_fromIntScaled = global ptr null
@fun_Core_fixedDecimal_isScale_14.210 = global ptr null
@tag_FixedDecimal.211 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.213 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.215 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.217 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then = global ptr null
@68 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else = global ptr null
@69 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.219 = global ptr null
@70 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.221 = global ptr null
@71 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.223 = global ptr null
@72 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.225 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else = global ptr null
@73 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.227 = global ptr null
@74 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.229 = global ptr null
@75 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched = global ptr null
@fun_Core_fixedDecimal_is_1_14 = global ptr null
@fun_Core_fixedDecimal_isScale_14.231 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.233 = global ptr null
@fun_Core_fixedDecimal_is_1_14.235 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits_22 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.237 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.239 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.241 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.243 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.245 = global ptr null
@76 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.247 = global ptr null
@77 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.249 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.251 = global ptr null
@78 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.253 = global ptr null
@79 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.255 = global ptr null
@80 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.257 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.259 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.261 = global ptr null
@81 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.263 = global ptr null
@82 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.265 = global ptr null
@83 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.267 = global ptr null
@fun_Core_fixedDecimal_is_1_14.269 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.271 = global ptr null
@fun_Core_fixedDecimal_is_1_14.273 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits_23 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.275 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.277 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.279 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.281 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.283 = global ptr null
@84 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.285 = global ptr null
@85 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.287 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.289 = global ptr null
@86 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.291 = global ptr null
@87 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.293 = global ptr null
@88 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.295 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.297 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.299 = global ptr null
@89 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.301 = global ptr null
@90 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.303 = global ptr null
@91 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.305 = global ptr null
@fun_Core_fixedDecimal_is_1_14.307 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.309 = global ptr null
@fun_Core_fixedDecimal_is_1_14.311 = global ptr null
@fun_Core_fixedDecimal_add = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.313 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.315 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.317 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.319 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.321 = global ptr null
@92 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.323 = global ptr null
@93 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.325 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.327 = global ptr null
@94 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.329 = global ptr null
@95 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.331 = global ptr null
@96 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.333 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.335 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.337 = global ptr null
@97 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.339 = global ptr null
@98 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.341 = global ptr null
@99 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.343 = global ptr null
@fun_Core_fixedDecimal_is_1_14.345 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.347 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.349 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.351 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.353 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.355 = global ptr null
@100 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.357 = global ptr null
@101 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.359 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.361 = global ptr null
@102 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.363 = global ptr null
@103 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.365 = global ptr null
@104 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.367 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.369 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.371 = global ptr null
@105 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.373 = global ptr null
@106 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.375 = global ptr null
@107 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.377 = global ptr null
@fun_Core_fixedDecimal_is_1_14.379 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.381 = global ptr null
@fun_Core_fixedDecimal_is_1_14.383 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.385 = global ptr null
@fun_Core_fixedDecimal_is_1_14.387 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.389 = global ptr null
@fun_Core_fixedDecimal_is_1_14.391 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.393 = global ptr null
@fun_Core_fixedDecimal_is_1_14.395 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.397 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.399 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.401 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.403 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.405 = global ptr null
@108 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.407 = global ptr null
@109 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.409 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.411 = global ptr null
@110 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.413 = global ptr null
@111 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.415 = global ptr null
@112 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.417 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.419 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.421 = global ptr null
@113 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.423 = global ptr null
@114 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.425 = global ptr null
@115 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.427 = global ptr null
@fun_Core_fixedDecimal_is_1_14.429 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.431 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.433 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.435 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.437 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.439 = global ptr null
@116 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.441 = global ptr null
@117 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.443 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.445 = global ptr null
@118 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.447 = global ptr null
@119 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.449 = global ptr null
@120 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.451 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.453 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.455 = global ptr null
@121 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.457 = global ptr null
@122 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.459 = global ptr null
@123 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.461 = global ptr null
@fun_Core_fixedDecimal_is_1_14.463 = global ptr null
@fun_Core_fixedDecimal_isScale_14.465 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.467 = global ptr null
@fun_Core_fixedDecimal_is_1_14.469 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.471 = global ptr null
@fun_Core_fixedDecimal_is_1_14.473 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.475 = global ptr null
@fun_Core_fixedDecimal_is_1_14.477 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.479 = global ptr null
@fun_Core_fixedDecimal_is_1_14.481 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.483 = global ptr null
@fun_Core_fixedDecimal_is_1_14.485 = global ptr null
@fun_Core_fixedDecimal_isLessThanOrEqualTo = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.487 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.489 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.491 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.493 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.495 = global ptr null
@124 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.497 = global ptr null
@125 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.499 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.501 = global ptr null
@126 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.503 = global ptr null
@127 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.505 = global ptr null
@128 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.507 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.509 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.511 = global ptr null
@129 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.513 = global ptr null
@130 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.515 = global ptr null
@131 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.517 = global ptr null
@fun_Core_fixedDecimal_is_1_14.519 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.521 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.523 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.525 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.527 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.529 = global ptr null
@132 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.531 = global ptr null
@133 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.533 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.535 = global ptr null
@134 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.537 = global ptr null
@135 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.539 = global ptr null
@136 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.541 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.543 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.545 = global ptr null
@137 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.547 = global ptr null
@138 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.549 = global ptr null
@139 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.551 = global ptr null
@fun_Core_fixedDecimal_is_1_14.553 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.555 = global ptr null
@fun_Core_fixedDecimal_is_1_14.557 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.559 = global ptr null
@fun_Core_fixedDecimal_is_1_14.561 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.563 = global ptr null
@fun_Core_fixedDecimal_is_1_14.565 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.567 = global ptr null
@fun_Core_fixedDecimal_is_1_14.569 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.571 = global ptr null
@fun_Core_fixedDecimal_is_1_14.573 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.575 = global ptr null
@fun_Core_fixedDecimal_is_1_14.577 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.579 = global ptr null
@fun_Core_fixedDecimal_is_1_14.581 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.583 = global ptr null
@fun_Core_fixedDecimal_is_1_14.585 = global ptr null
@fun_Core_fixedDecimal_absolute = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.587 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.589 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.591 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.593 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.595 = global ptr null
@140 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.597 = global ptr null
@141 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.599 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.601 = global ptr null
@142 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.603 = global ptr null
@143 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.605 = global ptr null
@144 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.607 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.609 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.611 = global ptr null
@145 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.613 = global ptr null
@146 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.615 = global ptr null
@147 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.617 = global ptr null
@fun_Core_fixedDecimal_is_1_14.619 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.621 = global ptr null
@fun_Core_fixedDecimal_is_1_14.623 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.625 = global ptr null
@fun_Core_fixedDecimal_is_1_14.627 = global ptr null
@fun_Core_fixedDecimal_absolute_9 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.629 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.631 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.633 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.635 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.637 = global ptr null
@148 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.639 = global ptr null
@149 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.641 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.643 = global ptr null
@150 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.645 = global ptr null
@151 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.647 = global ptr null
@152 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.649 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.651 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.653 = global ptr null
@153 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.655 = global ptr null
@154 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.657 = global ptr null
@155 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.659 = global ptr null
@fun_Core_fixedDecimal_is_1_14.661 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.663 = global ptr null
@fun_Core_fixedDecimal_is_1_14.665 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.667 = global ptr null
@fun_Core_fixedDecimal_is_1_14.669 = global ptr null
@fun_Core_fixedDecimal_absolute_10 = global ptr null
@fun_Core_fixedDecimal_approxEquals = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.671 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.673 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.675 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.677 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.679 = global ptr null
@156 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.681 = global ptr null
@157 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.683 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.685 = global ptr null
@158 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.687 = global ptr null
@159 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.689 = global ptr null
@160 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.691 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.693 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.695 = global ptr null
@161 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.697 = global ptr null
@162 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.699 = global ptr null
@163 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.701 = global ptr null
@fun_Core_fixedDecimal_is_1_14.703 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.705 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.707 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.709 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.711 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.713 = global ptr null
@164 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.715 = global ptr null
@165 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.717 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.719 = global ptr null
@166 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.721 = global ptr null
@167 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.723 = global ptr null
@168 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.725 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.727 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.729 = global ptr null
@169 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.731 = global ptr null
@170 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.733 = global ptr null
@171 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.735 = global ptr null
@fun_Core_fixedDecimal_is_1_14.737 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.739 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.741 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.743 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.745 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.747 = global ptr null
@172 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.749 = global ptr null
@173 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.751 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.753 = global ptr null
@174 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.755 = global ptr null
@175 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.757 = global ptr null
@176 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.759 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.761 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.763 = global ptr null
@177 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.765 = global ptr null
@178 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.767 = global ptr null
@179 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.769 = global ptr null
@fun_Core_fixedDecimal_is_1_14.771 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.773 = global ptr null
@fun_Core_fixedDecimal_is_1_14.775 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.777 = global ptr null
@fun_Core_fixedDecimal_is_1_14.779 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.781 = global ptr null
@fun_Core_fixedDecimal_is_1_14.783 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.785 = global ptr null
@fun_Core_fixedDecimal_is_1_14.787 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.789 = global ptr null
@fun_Core_fixedDecimal_is_1_14.791 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.793 = global ptr null
@fun_Core_fixedDecimal_is_1_14.795 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.797 = global ptr null
@fun_Core_fixedDecimal_is_1_14.799 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.801 = global ptr null
@fun_Core_fixedDecimal_is_1_14.803 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.805 = global ptr null
@fun_Core_fixedDecimal_is_1_14.807 = global ptr null
@fun_Core_fixedDecimal_toText = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.809 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.811 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.813 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.815 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.817 = global ptr null
@180 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.819 = global ptr null
@181 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.821 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.823 = global ptr null
@182 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.825 = global ptr null
@183 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.827 = global ptr null
@184 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.829 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.831 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.833 = global ptr null
@185 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.835 = global ptr null
@186 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.837 = global ptr null
@187 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.839 = global ptr null
@fun_Core_fixedDecimal_is_1_14.841 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.843 = global ptr null
@fun_Core_fixedDecimal_is_1_14.845 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.847 = global ptr null
@fun_Core_fixedDecimal_is_1_14.849 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.851 = global ptr null
@fun_Core_fixedDecimal_is_1_14.853 = global ptr null
@fun_Core_fixedDecimal_toText_10 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.855 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.857 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.859 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.861 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.863 = global ptr null
@188 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.865 = global ptr null
@189 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.867 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.869 = global ptr null
@190 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.871 = global ptr null
@191 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.873 = global ptr null
@192 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.875 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.877 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.879 = global ptr null
@193 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.881 = global ptr null
@194 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.883 = global ptr null
@195 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.885 = global ptr null
@fun_Core_fixedDecimal_is_1_14.887 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.889 = global ptr null
@fun_Core_fixedDecimal_is_1_14.891 = global ptr null
@fun_Core_fixedDecimal_toText_10_27 = global ptr null
@fun_Core_fixedDecimal_toText_10_28 = global ptr null
@fun_Core_fixedDecimal_toText_22 = global ptr null
@fun_Core_fixedDecimal_toText_23 = global ptr null
@fun_Core_fixedDecimal_toText_29 = global ptr null
@fun_Core_fixedDecimal_toText_30 = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_9.893 = global ptr null
@fun_Core_int_isPositive = global ptr null
@fun_Core_result_mapOrElse_26_case-1_didNotMatch = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.895 = global ptr null
@fun_Core_result_is_1_equals_then.897 = global ptr null
@196 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@197 = global ptr null
@fun_Core_result_is_1_equals_else.899 = global ptr null
@198 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.901 = global ptr null
@fun_Core_result_is_1_equals_then.903 = global ptr null
@fun_Core_result_is_1_equals_then.905 = global ptr null
@199 = global ptr null
@fun_Core_result_is_1_equals_else.907 = global ptr null
@200 = global ptr null
@fun_Core_result_is_1_equals_else.909 = global ptr null
@201 = global ptr null
@fun_Core_function_is1_9 = global ptr null
@fun_Core_function_is1_9.911 = global ptr null
@fun_Core_result_mapOrElse_26_equals_then = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.913 = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.915 = global ptr null
@202 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else = global ptr null
@203 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else.917 = global ptr null
@204 = global ptr null
@fun_Core_result_mapOrElse_26_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_26_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.919 = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.921 = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.923 = global ptr null
@205 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else.925 = global ptr null
@206 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else.927 = global ptr null
@207 = global ptr null
@fun_Core_result_mapOrElse_26_case-1_matched = global ptr null
@fun_Core_result_unwrapOrElse_17 = global ptr null
@fun_Core_result_unwrapOrElse = global ptr null
@fun_Core_result_is_1_equals_then.929 = global ptr null
@fun_Core_result_is_1_equals_then.931 = global ptr null
@fun_Core_result_is_1_equals_then.933 = global ptr null
@208 = global ptr null
@fun_Core_result_is_1_equals_else.935 = global ptr null
@209 = global ptr null
@fun_Core_result_is_1_equals_else.937 = global ptr null
@210 = global ptr null
@fun_Core_result_is_1_isMatch_then.939 = global ptr null
@fun_Core_result_is_1_isMatch_else.941 = global ptr null
@fun_Core_result_is_1_equals_then.943 = global ptr null
@fun_Core_result_is_1_equals_then.945 = global ptr null
@fun_Core_result_is_1_equals_then.947 = global ptr null
@211 = global ptr null
@fun_Core_result_is_1_equals_else.949 = global ptr null
@212 = global ptr null
@fun_Core_result_is_1_equals_else.951 = global ptr null
@213 = global ptr null
@fun_Core_function_is0_9.953 = global ptr null
@fun_Core_result_unwrapOrElse_18 = global ptr null
@fun_Core_function_is0_9.955 = global ptr null
@fun_Core_result_unwrapOr = global ptr null
@fun_Core_result_is_1_equals_then.957 = global ptr null
@fun_Core_result_is_1_equals_then.959 = global ptr null
@fun_Core_result_is_1_equals_then.961 = global ptr null
@214 = global ptr null
@fun_Core_result_is_1_equals_else.963 = global ptr null
@215 = global ptr null
@fun_Core_result_is_1_equals_else.965 = global ptr null
@216 = global ptr null
@fun_Core_result_is_1_isMatch_then.967 = global ptr null
@fun_Core_result_is_1_isMatch_else.969 = global ptr null
@fun_Core_result_is_1_equals_then.971 = global ptr null
@fun_Core_result_is_1_equals_then.973 = global ptr null
@fun_Core_result_is_1_equals_then.975 = global ptr null
@217 = global ptr null
@fun_Core_result_is_1_equals_else.977 = global ptr null
@218 = global ptr null
@fun_Core_result_is_1_equals_else.979 = global ptr null
@219 = global ptr null
@fun_Core_result_unwrapOr_7 = global ptr null
@"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched" = global ptr null
@fun_Core_iterator_wrapSafe = global ptr null
@fun_Core_function_is0_9.981 = global ptr null
@fun_Core_iterator_wrapSafe_10 = global ptr null
@fun_Core_function_is0_9.983 = global ptr null
@fun_Core_iterator_wrapSafe_14 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.985 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.987 = global ptr null
@220 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else = global ptr null
@221 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.989 = global ptr null
@222 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_14_22 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else = global ptr null
@223 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.991 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.993 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.995 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then = global ptr null
@224 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else = global ptr null
@225 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.997 = global ptr null
@226 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.999 = global ptr null
@227 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1001 = global ptr null
@228 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1003 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1005 = global ptr null
@229 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1007 = global ptr null
@230 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1009 = global ptr null
@231 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched = global ptr null
@tag_More.1010 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch = global ptr null
@tag_Iterator.1011 = global ptr null
@fun_Core_iterator_next = global ptr null
@fun_Core_iterator_next_2 = global ptr null
@fun_Core_iterator_next_6_equals_then = global ptr null
@fun_Core_iterator_next_6_equals_then.1013 = global ptr null
@fun_Core_iterator_next_6_equals_then.1015 = global ptr null
@232 = global ptr null
@fun_Core_iterator_next_6_equals_else = global ptr null
@233 = global ptr null
@fun_Core_iterator_next_6_equals_else.1017 = global ptr null
@234 = global ptr null
@fun_Core_iterator_next_6_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState = global ptr null
@fun_Core_function_is1_9.1019 = global ptr null
@fun_Core_iterator_generateWithState_12 = global ptr null
@fun_Core_iterator_generateWithState_12_1 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1021 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1023 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1025 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then = global ptr null
@235 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else = global ptr null
@236 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1027 = global ptr null
@237 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1029 = global ptr null
@238 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1031 = global ptr null
@239 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1033 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else = global ptr null
@240 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1035 = global ptr null
@241 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1037 = global ptr null
@242 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_matched = global ptr null
@tag_More.1038 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1040 = global ptr null
@243 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_21 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_22 = global ptr null
@tag_Iterator.1041 = global ptr null
@"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.1043 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1045 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1047 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1049 = global ptr null
@244 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1051 = global ptr null
@245 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1053 = global ptr null
@246 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1055 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1057 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1059 = global ptr null
@247 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1061 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1063 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1065 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1067 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1069 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1071 = global ptr null
@248 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1073 = global ptr null
@249 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1075 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1077 = global ptr null
@250 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1079 = global ptr null
@251 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1081 = global ptr null
@252 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1083 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1085 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1087 = global ptr null
@253 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1089 = global ptr null
@254 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1091 = global ptr null
@255 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1093 = global ptr null
@tag_More.1094 = global ptr null
@tag_Iterator.1095 = global ptr null
@fun_Core_controlFlow_recursive_16.1097 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1099 = global ptr null
@fun_Core_iterator_map_17_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_map = global ptr null
@fun_Core_iterator_map_2 = global ptr null
@fun_Core_function_is1_9.1101 = global ptr null
@fun_Core_iterator_map_17 = global ptr null
@fun_Core_iterator_next_6_equals_then.1103 = global ptr null
@fun_Core_iterator_next_6_equals_then.1105 = global ptr null
@fun_Core_iterator_next_6_equals_then.1107 = global ptr null
@256 = global ptr null
@fun_Core_iterator_next_6_equals_else.1109 = global ptr null
@257 = global ptr null
@fun_Core_iterator_next_6_equals_else.1111 = global ptr null
@258 = global ptr null
@fun_Core_iterator_next_6_isMatch_else.1113 = global ptr null
@fun_Core_iterator_map_17_3_equals_else = global ptr null
@259 = global ptr null
@fun_Core_iterator_map_17_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_map_17_3_equals_then = global ptr null
@fun_Core_iterator_map_17_3_equals_then.1115 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.1117 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.1119 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_then = global ptr null
@260 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_else = global ptr null
@261 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_then = global ptr null
@fun_Core_iterator_map_17_3_hasKey_then.1121 = global ptr null
@262 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_else.1123 = global ptr null
@263 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_then.1125 = global ptr null
@264 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_else = global ptr null
@fun_Core_iterator_map_17_3_isMatch_else.1127 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.1129 = global ptr null
@265 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.1131 = global ptr null
@266 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.1133 = global ptr null
@267 = global ptr null
@fun_Core_iterator_map_17_3_case-1_matched = global ptr null
@tag_More.1134 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then = global ptr null
@268 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else = global ptr null
@269 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then.1136 = global ptr null
@270 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else.1138 = global ptr null
@271 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then.1140 = global ptr null
@272 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.1142 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_else = global ptr null
@273 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.1144 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else = global ptr null
@274 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.1146 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.1148 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.1150 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then = global ptr null
@275 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else = global ptr null
@276 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then.1152 = global ptr null
@277 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else.1154 = global ptr null
@278 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then.1156 = global ptr null
@279 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else.1158 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.1160 = global ptr null
@280 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.1162 = global ptr null
@281 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.1164 = global ptr null
@282 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_matched = global ptr null
@tag_More.1165 = global ptr null
@fun_Core_iterator_ensure = global ptr null
@fun_Core_function_is1_9.1167 = global ptr null
@fun_Core_iterator_ensure_12 = global ptr null
@fun_Core_iterator_ensure_17 = global ptr null
@fun_Core_iterator_foldLeft_21_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_foldLeft = global ptr null
@fun_Core_iterator_foldLeft_2 = global ptr null
@fun_Core_function_is2_9.1169 = global ptr null
@fun_Core_iterator_foldLeft_21 = global ptr null
@fun_Core_iterator_foldLeft_21_1_equals_then = global ptr null
@fun_Core_iterator_foldLeft_21_1_hasKey_then = global ptr null
@283 = global ptr null
@fun_Core_iterator_foldLeft_21_1_hasKey_else = global ptr null
@284 = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_21_1_hasKey_then.1171 = global ptr null
@285 = global ptr null
@fun_Core_iterator_foldLeft_21_1_hasKey_else.1173 = global ptr null
@286 = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_then.1175 = global ptr null
@287 = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_else.1177 = global ptr null
@fun_Core_iterator_foldLeft_21_1_equals_else = global ptr null
@288 = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_else.1179 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else = global ptr null
@289 = global ptr null
@fun_Core_iterator_foldLeft_21_5_case-0_matched = global ptr null
@fun_Core_iterator_foldLeft_21_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_then = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_then.1181 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_then.1183 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_then.1185 = global ptr null
@fun_Core_iterator_foldLeft_21_5_hasKey_then = global ptr null
@290 = global ptr null
@fun_Core_iterator_foldLeft_21_5_hasKey_else = global ptr null
@291 = global ptr null
@fun_Core_iterator_foldLeft_21_5_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_21_5_hasKey_then.1187 = global ptr null
@292 = global ptr null
@fun_Core_iterator_foldLeft_21_5_hasKey_else.1189 = global ptr null
@293 = global ptr null
@fun_Core_iterator_foldLeft_21_5_isMatch_then.1191 = global ptr null
@294 = global ptr null
@fun_Core_iterator_foldLeft_21_5_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_21_5_isMatch_else.1193 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else.1195 = global ptr null
@295 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else.1197 = global ptr null
@296 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else.1199 = global ptr null
@297 = global ptr null
@fun_Core_iterator_foldLeft_21_5_case-1_matched = global ptr null
@tag_Error.1200 = global ptr null
@fun_Core_iterator_reduceLeft_16_case-0_matched = global ptr null
@fun_Core_iterator_reduceLeft_16_case-1_didNotMatch = global ptr null
@fun_Core_iterator_reduceLeft = global ptr null
@fun_Core_function_is2_9.1202 = global ptr null
@fun_Core_iterator_reduceLeft_12 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else = global ptr null
@298 = global ptr null
@fun_Core_iterator_reduceLeft_16_case-0_didNotMatch = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_then = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_then.1204 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_then.1206 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_then.1208 = global ptr null
@fun_Core_iterator_reduceLeft_16_hasKey_then = global ptr null
@299 = global ptr null
@fun_Core_iterator_reduceLeft_16_hasKey_else = global ptr null
@300 = global ptr null
@fun_Core_iterator_reduceLeft_16_isMatch_then = global ptr null
@fun_Core_iterator_reduceLeft_16_hasKey_then.1210 = global ptr null
@301 = global ptr null
@fun_Core_iterator_reduceLeft_16_hasKey_else.1212 = global ptr null
@302 = global ptr null
@fun_Core_iterator_reduceLeft_16_isMatch_then.1214 = global ptr null
@303 = global ptr null
@fun_Core_iterator_reduceLeft_16_isMatch_else = global ptr null
@fun_Core_iterator_reduceLeft_16_isMatch_else.1216 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else.1218 = global ptr null
@304 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else.1220 = global ptr null
@305 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else.1222 = global ptr null
@306 = global ptr null
@fun_Core_iterator_reduceLeft_16_case-1_matched = global ptr null
@tag_Ok.1223 = global ptr null
@fun_Core_iterator_sum_8 = global ptr null
@fun_Core_iterator_sum = global ptr null
@fun_Core_iterator_sum_2 = global ptr null
@fun_Core_iterator_sum_5 = global ptr null
@fun_Core_iterator_length_5 = global ptr null
@fun_Core_iterator_joinToText = global ptr null
@fun_Core_iterator_joinToText_2 = global ptr null
@fun_Core_iterator_joinToText_12 = global ptr null
@"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1225" = global ptr null
@fun_Core_iterator_wrapSafe_14.1227 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1229 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1231 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1233 = global ptr null
@307 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1235 = global ptr null
@308 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1237 = global ptr null
@309 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1239 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1241 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1243 = global ptr null
@310 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1245 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1247 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1249 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1251 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1253 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1255 = global ptr null
@311 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1257 = global ptr null
@312 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1259 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1261 = global ptr null
@313 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1263 = global ptr null
@314 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1265 = global ptr null
@315 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1267 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1269 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1271 = global ptr null
@316 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1273 = global ptr null
@317 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1275 = global ptr null
@318 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1277 = global ptr null
@tag_More.1278 = global ptr null
@tag_Iterator.1279 = global ptr null
@fun_Core_controlFlow_recursive_16.1281 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1283 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_where_17_2_3_case-1_didNotMatch = global ptr null
@"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1285" = global ptr null
@fun_Core_iterator_wrapSafe_14.1287 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1289 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1291 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1293 = global ptr null
@319 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1295 = global ptr null
@320 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1297 = global ptr null
@321 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1299 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1301 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1303 = global ptr null
@322 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1305 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1307 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1309 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1311 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1313 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1315 = global ptr null
@323 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1317 = global ptr null
@324 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1319 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1321 = global ptr null
@325 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1323 = global ptr null
@326 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1325 = global ptr null
@327 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1327 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1329 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1331 = global ptr null
@328 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1333 = global ptr null
@329 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1335 = global ptr null
@330 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1337 = global ptr null
@tag_More.1338 = global ptr null
@tag_Iterator.1339 = global ptr null
@fun_Core_controlFlow_recursive_16.1341 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1343 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_takeWhile = global ptr null
@fun_Core_iterator_takeWhile_2 = global ptr null
@fun_Core_iterator_takeWhile_7 = global ptr null
@fun_Core_iterator_next_6_equals_then.1345 = global ptr null
@fun_Core_iterator_next_6_equals_then.1347 = global ptr null
@fun_Core_iterator_next_6_equals_then.1349 = global ptr null
@331 = global ptr null
@fun_Core_iterator_next_6_equals_else.1351 = global ptr null
@332 = global ptr null
@fun_Core_iterator_next_6_equals_else.1353 = global ptr null
@333 = global ptr null
@fun_Core_iterator_next_6_isMatch_else.1355 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else = global ptr null
@334 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.1357 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.1359 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.1361 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then = global ptr null
@335 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else = global ptr null
@336 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then.1363 = global ptr null
@337 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else.1365 = global ptr null
@338 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then.1367 = global ptr null
@339 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else.1369 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.1371 = global ptr null
@340 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.1373 = global ptr null
@341 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.1375 = global ptr null
@342 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_matched = global ptr null
@fun_Core_iterator_takeWhile_7_3_5 = global ptr null
@tag_More.1376 = global ptr null
@fun_Core_iterator_withIndex_2 = global ptr null
@fun_Core_iterator_take_30 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_skip_26_6 = global ptr null
@fun_Core_iterator_skip_26_6_1_equals_then = global ptr null
@fun_Core_iterator_skip_26_6_1_hasKey_then = global ptr null
@343 = global ptr null
@fun_Core_iterator_skip_26_6_1_hasKey_else = global ptr null
@344 = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_then = global ptr null
@fun_Core_iterator_skip_26_6_1_hasKey_then.1378 = global ptr null
@345 = global ptr null
@fun_Core_iterator_skip_26_6_1_hasKey_else.1380 = global ptr null
@346 = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_then.1382 = global ptr null
@347 = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_else = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_else.1384 = global ptr null
@fun_Core_iterator_skip_26_6_1_equals_else = global ptr null
@348 = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_else.1386 = global ptr null
@fun_Core_iterator_skip_26_6_7 = global ptr null
@fun_Core_iterator_skip_26_6_8 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else = global ptr null
@349 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_then = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_then.1388 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_then.1390 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_then.1392 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_hasKey_then = global ptr null
@350 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_hasKey_else = global ptr null
@351 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_isMatch_then = global ptr null
@352 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_isMatch_else = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else.1394 = global ptr null
@353 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else.1396 = global ptr null
@354 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else.1398 = global ptr null
@355 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_case-1_matched = global ptr null
@356 = global ptr null
@fun_Core_iterator_toList_6 = global ptr null
@"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.1400 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1402 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1404 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1406 = global ptr null
@357 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1408 = global ptr null
@358 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1410 = global ptr null
@359 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1412 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1414 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1416 = global ptr null
@360 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1418 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1420 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1422 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1424 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1426 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1428 = global ptr null
@361 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1430 = global ptr null
@362 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1432 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1434 = global ptr null
@363 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1436 = global ptr null
@364 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1438 = global ptr null
@365 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1440 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1442 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1444 = global ptr null
@366 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1446 = global ptr null
@367 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1448 = global ptr null
@368 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1450 = global ptr null
@tag_More.1451 = global ptr null
@tag_Iterator.1452 = global ptr null
@fun_Core_controlFlow_recursive_16.1454 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1456 = global ptr null
@fun_Core_iterator_toList_2 = global ptr null
@"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.1458 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1460 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1462 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1464 = global ptr null
@369 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1466 = global ptr null
@370 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1468 = global ptr null
@371 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1470 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1472 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1474 = global ptr null
@372 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1476 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1478 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1480 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1482 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1484 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1486 = global ptr null
@373 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1488 = global ptr null
@374 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1490 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1492 = global ptr null
@375 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1494 = global ptr null
@376 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1496 = global ptr null
@377 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1498 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1500 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1502 = global ptr null
@378 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1504 = global ptr null
@379 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1506 = global ptr null
@380 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1508 = global ptr null
@tag_More.1509 = global ptr null
@tag_Iterator.1510 = global ptr null
@fun_Core_controlFlow_recursive_16.1512 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1514 = global ptr null
@fun_Core_iterator_windowed = global ptr null
@fun_Core_iterator_windowed_2 = global ptr null
@fun_Core_bool_is_1_equals_else.1516 = global ptr null
@381 = global ptr null
@fun_Core_bool_is_1_isMatch_then.1518 = global ptr null
@fun_Core_bool_is_1_isMatch_else.1520 = global ptr null
@fun_Core_bool_is_1_equals_else.1522 = global ptr null
@382 = global ptr null
@fun_Core_iterator_windowed_57 = global ptr null
@fun_Core_iterator_take_27 = global ptr null
@fun_Core_iterator_take_27_1_equals_then = global ptr null
@fun_Core_iterator_take_27_1_hasKey_then = global ptr null
@383 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_else = global ptr null
@384 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_then = global ptr null
@fun_Core_iterator_take_27_1_hasKey_then.1524 = global ptr null
@385 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_else.1526 = global ptr null
@386 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_then.1528 = global ptr null
@387 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.1530 = global ptr null
@fun_Core_iterator_take_27_1_equals_else = global ptr null
@388 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.1532 = global ptr null
@fun_Core_iterator_windowed_57_18 = global ptr null
@fun_Core_iterator_windowed_57_19 = global ptr null
@fun_Core_iterator_windowed_57_24 = global ptr null
@fun_Core_iterator_skip_26 = global ptr null
@tag_Iterator.1533 = global ptr null
@tag_More.1534 = global ptr null
@389 = global ptr null
@fun_Core_iterator_generateWithState_12.1536 = global ptr null
@fun_Core_iterator_generateWithState_12_1.1538 = global ptr null
@fun_Core_iterator_generate_42_6 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1540 = global ptr null
@390 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then.1542 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else.1544 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1546 = global ptr null
@391 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch.1548 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1550 = global ptr null
@392 = global ptr null
@tag_More.1551 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1553 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1555 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1557 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1559 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1561 = global ptr null
@393 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1563 = global ptr null
@394 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1565 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1567 = global ptr null
@395 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1569 = global ptr null
@396 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1571 = global ptr null
@397 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1573 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1575 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1577 = global ptr null
@398 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1579 = global ptr null
@399 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1581 = global ptr null
@400 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1583 = global ptr null
@tag_More.1584 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1586 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1588 = global ptr null
@401 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1590 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_21.1592 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_22.1594 = global ptr null
@tag_Iterator.1595 = global ptr null
@fun_Core_controlFlow_recursive_16.1597 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1599 = global ptr null
@402 = global ptr null
@fun_Core_iterator_generateWithState_12.1601 = global ptr null
@fun_Core_iterator_generateWithState_12_1.1603 = global ptr null
@fun_Core_iterator_generate_42_6.1605 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1607 = global ptr null
@403 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then.1609 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else.1611 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1613 = global ptr null
@404 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch.1615 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1617 = global ptr null
@405 = global ptr null
@tag_More.1618 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1620 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1622 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1624 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1626 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1628 = global ptr null
@406 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1630 = global ptr null
@407 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1632 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1634 = global ptr null
@408 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1636 = global ptr null
@409 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1638 = global ptr null
@410 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1640 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1642 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1644 = global ptr null
@411 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1646 = global ptr null
@412 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1648 = global ptr null
@413 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1650 = global ptr null
@tag_More.1651 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1653 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1655 = global ptr null
@414 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1657 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_21.1659 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_22.1661 = global ptr null
@tag_Iterator.1662 = global ptr null
@fun_Core_controlFlow_recursive_16.1664 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1666 = global ptr null
@"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1668" = global ptr null
@fun_Core_iterator_wrapSafe_14.1670 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1672 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1674 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1676 = global ptr null
@415 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1678 = global ptr null
@416 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1680 = global ptr null
@417 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1682 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1684 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1686 = global ptr null
@418 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1688 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1690 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1692 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1694 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1696 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1698 = global ptr null
@419 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1700 = global ptr null
@420 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1702 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1704 = global ptr null
@421 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1706 = global ptr null
@422 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1708 = global ptr null
@423 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1710 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1712 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1714 = global ptr null
@424 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1716 = global ptr null
@425 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1718 = global ptr null
@426 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1720 = global ptr null
@tag_More.1721 = global ptr null
@tag_Iterator.1722 = global ptr null
@fun_Core_controlFlow_recursive_16.1724 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1726 = global ptr null
@fun_Core_iterator_next_6_equals_then.1728 = global ptr null
@fun_Core_iterator_next_6_equals_then.1730 = global ptr null
@fun_Core_iterator_next_6_equals_then.1732 = global ptr null
@427 = global ptr null
@fun_Core_iterator_next_6_equals_else.1734 = global ptr null
@428 = global ptr null
@fun_Core_iterator_next_6_equals_else.1736 = global ptr null
@429 = global ptr null
@fun_Core_iterator_next_6_isMatch_else.1738 = global ptr null
@"Core:iterator:130" = global ptr null
@fun_Core_iterator_130_equals_then = global ptr null
@fun_Core_iterator_130_equals_then.1740 = global ptr null
@fun_Core_iterator_130_equals_then.1742 = global ptr null
@fun_Core_iterator_130_equals_then.1744 = global ptr null
@fun_Core_iterator_130_hasKey_then = global ptr null
@430 = global ptr null
@fun_Core_iterator_130_hasKey_else = global ptr null
@431 = global ptr null
@fun_Core_iterator_130_isMatch_then = global ptr null
@fun_Core_iterator_130_hasKey_then.1746 = global ptr null
@432 = global ptr null
@fun_Core_iterator_130_hasKey_else.1748 = global ptr null
@433 = global ptr null
@fun_Core_iterator_130_isMatch_then.1750 = global ptr null
@434 = global ptr null
@fun_Core_iterator_130_isMatch_else = global ptr null
@fun_Core_iterator_130_isMatch_else.1752 = global ptr null
@fun_Core_iterator_130_equals_else = global ptr null
@435 = global ptr null
@fun_Core_iterator_130_equals_else.1754 = global ptr null
@436 = global ptr null
@fun_Core_iterator_130_equals_else.1756 = global ptr null
@437 = global ptr null
@fun_Core_iterator_130_isMatch_else.1758 = global ptr null
@"Core:iterator:item" = global ptr null
@"Core:iterator:rest" = global ptr null
@"Core:iterator:135" = global ptr null
@"Core:iterator:138" = global ptr null
@"Core:iterator:139" = global ptr null
@fun_Core_iterator_139_equals_then = global ptr null
@fun_Core_iterator_139_equals_then.1760 = global ptr null
@fun_Core_iterator_139_equals_then.1762 = global ptr null
@fun_Core_iterator_139_equals_then.1764 = global ptr null
@fun_Core_iterator_139_hasKey_then = global ptr null
@438 = global ptr null
@fun_Core_iterator_139_hasKey_else = global ptr null
@439 = global ptr null
@fun_Core_iterator_139_isMatch_then = global ptr null
@fun_Core_iterator_139_hasKey_then.1766 = global ptr null
@440 = global ptr null
@fun_Core_iterator_139_hasKey_else.1768 = global ptr null
@441 = global ptr null
@fun_Core_iterator_139_isMatch_then.1770 = global ptr null
@442 = global ptr null
@fun_Core_iterator_139_isMatch_else = global ptr null
@fun_Core_iterator_139_isMatch_else.1772 = global ptr null
@fun_Core_iterator_139_equals_else = global ptr null
@443 = global ptr null
@fun_Core_iterator_139_equals_else.1774 = global ptr null
@444 = global ptr null
@fun_Core_iterator_139_equals_else.1776 = global ptr null
@445 = global ptr null
@fun_Core_iterator_139_isMatch_else.1778 = global ptr null
@"Core:iterator:item#1" = global ptr null
@"Core:iterator:144" = global ptr null
@"Core:iterator:149" = global ptr null
@"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.1780 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1782 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1784 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1786 = global ptr null
@446 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1788 = global ptr null
@447 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1790 = global ptr null
@448 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1792 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1794 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1796 = global ptr null
@449 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1798 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1800 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1802 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1804 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1806 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1808 = global ptr null
@450 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1810 = global ptr null
@451 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1812 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1814 = global ptr null
@452 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1816 = global ptr null
@453 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1818 = global ptr null
@454 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1820 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1822 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1824 = global ptr null
@455 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1826 = global ptr null
@456 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1828 = global ptr null
@457 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1830 = global ptr null
@tag_More.1831 = global ptr null
@tag_Iterator.1832 = global ptr null
@fun_Core_controlFlow_recursive_16.1834 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1836 = global ptr null
@"Core:iterator:151" = global ptr null
@fun_Core_iterator_generateWithState_12.1838 = global ptr null
@fun_Core_iterator_generateWithState_12_1.1840 = global ptr null
@fun_Core_iterator_generate_42_6.1842 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1844 = global ptr null
@458 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then.1846 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else.1848 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1850 = global ptr null
@459 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch.1852 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.1854 = global ptr null
@460 = global ptr null
@tag_More.1855 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1857 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1859 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1861 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.1863 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1865 = global ptr null
@461 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1867 = global ptr null
@462 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1869 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1871 = global ptr null
@463 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1873 = global ptr null
@464 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1875 = global ptr null
@465 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1877 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1879 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1881 = global ptr null
@466 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1883 = global ptr null
@467 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1885 = global ptr null
@468 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1887 = global ptr null
@tag_More.1888 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1890 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.1892 = global ptr null
@469 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1894 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_21.1896 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_22.1898 = global ptr null
@tag_Iterator.1899 = global ptr null
@fun_Core_controlFlow_recursive_16.1901 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1903 = global ptr null
@"Core:iterator:157" = global ptr null
@"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1905" = global ptr null
@fun_Core_iterator_wrapSafe_14.1907 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1909 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1911 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1913 = global ptr null
@470 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1915 = global ptr null
@471 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1917 = global ptr null
@472 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1919 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1921 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1923 = global ptr null
@473 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1925 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1927 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1929 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1931 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1933 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1935 = global ptr null
@474 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1937 = global ptr null
@475 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1939 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1941 = global ptr null
@476 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1943 = global ptr null
@477 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1945 = global ptr null
@478 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1947 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1949 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1951 = global ptr null
@479 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1953 = global ptr null
@480 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1955 = global ptr null
@481 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1957 = global ptr null
@tag_More.1958 = global ptr null
@tag_Iterator.1959 = global ptr null
@fun_Core_controlFlow_recursive_16.1961 = global ptr null
@fun_Core_controlFlow_recursive_16_0.1963 = global ptr null
@"Core:iterator:159" = global ptr null
@"Core:iterator:163:8" = global ptr null
@"Core:iterator:164" = global ptr null
@"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.1965 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1967 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1969 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.1971 = global ptr null
@482 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1973 = global ptr null
@483 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.1975 = global ptr null
@484 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.1977 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.1979 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.1981 = global ptr null
@485 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1983 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1985 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1987 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1989 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.1991 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1993 = global ptr null
@486 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1995 = global ptr null
@487 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1997 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1999 = global ptr null
@488 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2001 = global ptr null
@489 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2003 = global ptr null
@490 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2005 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2007 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2009 = global ptr null
@491 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2011 = global ptr null
@492 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2013 = global ptr null
@493 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2015 = global ptr null
@tag_More.2016 = global ptr null
@tag_Iterator.2017 = global ptr null
@fun_Core_controlFlow_recursive_16.2019 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2021 = global ptr null
@fun_Core_iterator_map_17.2023 = global ptr null
@fun_Core_iterator_next_6_equals_then.2025 = global ptr null
@fun_Core_iterator_next_6_equals_then.2027 = global ptr null
@fun_Core_iterator_next_6_equals_then.2029 = global ptr null
@494 = global ptr null
@fun_Core_iterator_next_6_equals_else.2031 = global ptr null
@495 = global ptr null
@fun_Core_iterator_next_6_equals_else.2033 = global ptr null
@496 = global ptr null
@fun_Core_iterator_next_6_isMatch_else.2035 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.2037 = global ptr null
@497 = global ptr null
@fun_Core_iterator_map_17_3_case-0_didNotMatch.2039 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.2041 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.2043 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.2045 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.2047 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_then.2049 = global ptr null
@498 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_else.2051 = global ptr null
@499 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_then.2053 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_then.2055 = global ptr null
@500 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_else.2057 = global ptr null
@501 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_then.2059 = global ptr null
@502 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_else.2061 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_else.2063 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.2065 = global ptr null
@503 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.2067 = global ptr null
@504 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.2069 = global ptr null
@505 = global ptr null
@fun_Core_iterator_map_17_3_case-1_matched.2071 = global ptr null
@tag_More.2072 = global ptr null
@"Core:iterator:166" = global ptr null
@fun_Core_iterator_toList_2.2074 = global ptr null
@506 = global ptr null
@"Core:iterator:171" = global ptr null
@"Core:iterator:175" = global ptr null
@"fun_Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.2076 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2078 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2080 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2082 = global ptr null
@507 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2084 = global ptr null
@508 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2086 = global ptr null
@509 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2088 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2090 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2092 = global ptr null
@510 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2094 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2096 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2098 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2100 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2102 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2104 = global ptr null
@511 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2106 = global ptr null
@512 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2108 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2110 = global ptr null
@513 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2112 = global ptr null
@514 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2114 = global ptr null
@515 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2116 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2118 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2120 = global ptr null
@516 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2122 = global ptr null
@517 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2124 = global ptr null
@518 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2126 = global ptr null
@tag_More.2127 = global ptr null
@tag_Iterator.2128 = global ptr null
@fun_Core_controlFlow_recursive_16.2130 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2132 = global ptr null
@fun_Core_iterator_sum_5.2134 = global ptr null
@"Core:iterator:177" = global ptr null
@"Core:iterator:181" = global ptr null
@"fun_Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.2136 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2138 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2140 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2142 = global ptr null
@519 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2144 = global ptr null
@520 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2146 = global ptr null
@521 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2148 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2150 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2152 = global ptr null
@522 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2154 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2156 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2158 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2160 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2162 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2164 = global ptr null
@523 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2166 = global ptr null
@524 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2168 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2170 = global ptr null
@525 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2172 = global ptr null
@526 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2174 = global ptr null
@527 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2176 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2178 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2180 = global ptr null
@528 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2182 = global ptr null
@529 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2184 = global ptr null
@530 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2186 = global ptr null
@tag_More.2187 = global ptr null
@tag_Iterator.2188 = global ptr null
@fun_Core_controlFlow_recursive_16.2190 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2192 = global ptr null
@"Core:iterator:183" = global ptr null
@"Core:iterator:187:7" = global ptr null
@"Core:iterator:188" = global ptr null
@"fun_Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.2194 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2196 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2198 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2200 = global ptr null
@531 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2202 = global ptr null
@532 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2204 = global ptr null
@533 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2206 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2208 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2210 = global ptr null
@534 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2212 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2214 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2216 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2218 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2220 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2222 = global ptr null
@535 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2224 = global ptr null
@536 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2226 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2228 = global ptr null
@537 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2230 = global ptr null
@538 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2232 = global ptr null
@539 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2234 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2236 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2238 = global ptr null
@540 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2240 = global ptr null
@541 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2242 = global ptr null
@542 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2244 = global ptr null
@tag_More.2245 = global ptr null
@tag_Iterator.2246 = global ptr null
@fun_Core_controlFlow_recursive_16.2248 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2250 = global ptr null
@fun_Core_iterator_all_16 = global ptr null
@"Core:iterator:190" = global ptr null
@"Core:iterator:195" = global ptr null
@"fun_Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.2252 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2254 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2256 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2258 = global ptr null
@543 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2260 = global ptr null
@544 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2262 = global ptr null
@545 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2264 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2266 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2268 = global ptr null
@546 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2270 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2272 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2274 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2276 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2278 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2280 = global ptr null
@547 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2282 = global ptr null
@548 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2284 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2286 = global ptr null
@549 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2288 = global ptr null
@550 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2290 = global ptr null
@551 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2292 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2294 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2296 = global ptr null
@552 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2298 = global ptr null
@553 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2300 = global ptr null
@554 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2302 = global ptr null
@tag_More.2303 = global ptr null
@tag_Iterator.2304 = global ptr null
@fun_Core_controlFlow_recursive_16.2306 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2308 = global ptr null
@fun_Core_iterator_any_16 = global ptr null
@"Core:iterator:197" = global ptr null
@"Core:iterator:202" = global ptr null
@"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2310" = global ptr null
@fun_Core_iterator_wrapSafe_14.2312 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2314 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2316 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2318 = global ptr null
@555 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2320 = global ptr null
@556 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2322 = global ptr null
@557 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2324 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2326 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2328 = global ptr null
@558 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2330 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2332 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2334 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2336 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2338 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2340 = global ptr null
@559 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2342 = global ptr null
@560 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2344 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2346 = global ptr null
@561 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2348 = global ptr null
@562 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2350 = global ptr null
@563 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2352 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2354 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2356 = global ptr null
@564 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2358 = global ptr null
@565 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2360 = global ptr null
@566 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2362 = global ptr null
@tag_More.2363 = global ptr null
@tag_Iterator.2364 = global ptr null
@fun_Core_controlFlow_recursive_16.2366 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2368 = global ptr null
@fun_Core_iterator_map_17.2370 = global ptr null
@fun_Core_iterator_next_6_equals_then.2372 = global ptr null
@fun_Core_iterator_next_6_equals_then.2374 = global ptr null
@fun_Core_iterator_next_6_equals_then.2376 = global ptr null
@567 = global ptr null
@fun_Core_iterator_next_6_equals_else.2378 = global ptr null
@568 = global ptr null
@fun_Core_iterator_next_6_equals_else.2380 = global ptr null
@569 = global ptr null
@fun_Core_iterator_next_6_isMatch_else.2382 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.2384 = global ptr null
@570 = global ptr null
@fun_Core_iterator_map_17_3_case-0_didNotMatch.2386 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.2388 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.2390 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.2392 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.2394 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_then.2396 = global ptr null
@571 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_else.2398 = global ptr null
@572 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_then.2400 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_then.2402 = global ptr null
@573 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_else.2404 = global ptr null
@574 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_then.2406 = global ptr null
@575 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_else.2408 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_else.2410 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.2412 = global ptr null
@576 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.2414 = global ptr null
@577 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.2416 = global ptr null
@578 = global ptr null
@fun_Core_iterator_map_17_3_case-1_matched.2418 = global ptr null
@tag_More.2419 = global ptr null
@"Core:iterator:204" = global ptr null
@text_123 = global ptr null
@"Core:iterator:212" = global ptr null
@"Core:iterator:216:7" = global ptr null
@fun_Core_iterator_216 = global ptr null
@"Core:iterator:217" = global ptr null
@"fun_Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.2421 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2423 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2425 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2427 = global ptr null
@579 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2429 = global ptr null
@580 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2431 = global ptr null
@581 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2433 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2435 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2437 = global ptr null
@582 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2439 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2441 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2443 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2445 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2447 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2449 = global ptr null
@583 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2451 = global ptr null
@584 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2453 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2455 = global ptr null
@585 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2457 = global ptr null
@586 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2459 = global ptr null
@587 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2461 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2463 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2465 = global ptr null
@588 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2467 = global ptr null
@589 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2469 = global ptr null
@590 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2471 = global ptr null
@tag_More.2472 = global ptr null
@tag_Iterator.2473 = global ptr null
@fun_Core_controlFlow_recursive_16.2475 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2477 = global ptr null
@fun_Core_iterator_where_17 = global ptr null
@fun_Core_iterator_where_17_2 = global ptr null
@fun_Core_iterator_next_6_equals_then.2479 = global ptr null
@fun_Core_iterator_next_6_equals_then.2481 = global ptr null
@fun_Core_iterator_next_6_equals_then.2483 = global ptr null
@591 = global ptr null
@fun_Core_iterator_next_6_equals_else.2485 = global ptr null
@592 = global ptr null
@fun_Core_iterator_next_6_equals_else.2487 = global ptr null
@593 = global ptr null
@fun_Core_iterator_next_6_isMatch_else.2489 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else = global ptr null
@594 = global ptr null
@fun_Core_iterator_where_17_2_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_17_2_3_equals_then = global ptr null
@fun_Core_iterator_where_17_2_3_equals_then.2491 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_then.2493 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_then.2495 = global ptr null
@fun_Core_iterator_where_17_2_3_hasKey_then = global ptr null
@595 = global ptr null
@fun_Core_iterator_where_17_2_3_hasKey_else = global ptr null
@596 = global ptr null
@fun_Core_iterator_where_17_2_3_isMatch_then = global ptr null
@fun_Core_iterator_where_17_2_3_hasKey_then.2497 = global ptr null
@597 = global ptr null
@fun_Core_iterator_where_17_2_3_hasKey_else.2499 = global ptr null
@598 = global ptr null
@fun_Core_iterator_where_17_2_3_isMatch_then.2501 = global ptr null
@599 = global ptr null
@fun_Core_iterator_where_17_2_3_isMatch_else = global ptr null
@fun_Core_iterator_where_17_2_3_isMatch_else.2503 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else.2505 = global ptr null
@600 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else.2507 = global ptr null
@601 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else.2509 = global ptr null
@602 = global ptr null
@fun_Core_iterator_where_17_2_3_case-1_matched = global ptr null
@fun_Core_iterator_where_17_2_3_5 = global ptr null
@tag_More.2510 = global ptr null
@fun_Core_iterator_where_17_2_3_6 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else = global ptr null
@603 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_then = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_then.2512 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_then.2514 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_then.2516 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_hasKey_then = global ptr null
@604 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_hasKey_else = global ptr null
@605 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_isMatch_then = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_hasKey_then.2518 = global ptr null
@606 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_hasKey_else.2520 = global ptr null
@607 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_isMatch_then.2522 = global ptr null
@608 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_isMatch_else = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_isMatch_else.2524 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else.2526 = global ptr null
@609 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else.2528 = global ptr null
@610 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else.2530 = global ptr null
@611 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_case-1_matched = global ptr null
@tag_More.2531 = global ptr null
@"Core:iterator:219" = global ptr null
@fun_Core_iterator_toList_2.2533 = global ptr null
@612 = global ptr null
@"Core:iterator:226" = global ptr null
@"Core:iterator:230:8" = global ptr null
@fun_Core_iterator_230 = global ptr null
@"Core:iterator:231" = global ptr null
@"fun_Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.2535 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2537 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2539 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2541 = global ptr null
@613 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2543 = global ptr null
@614 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2545 = global ptr null
@615 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2547 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2549 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2551 = global ptr null
@616 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2553 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2555 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2557 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2559 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2561 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2563 = global ptr null
@617 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2565 = global ptr null
@618 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2567 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2569 = global ptr null
@619 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2571 = global ptr null
@620 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2573 = global ptr null
@621 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2575 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2577 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2579 = global ptr null
@622 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2581 = global ptr null
@623 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2583 = global ptr null
@624 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2585 = global ptr null
@tag_More.2586 = global ptr null
@tag_Iterator.2587 = global ptr null
@fun_Core_controlFlow_recursive_16.2589 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2591 = global ptr null
@fun_Core_iterator_takeWhile_7.2593 = global ptr null
@fun_Core_iterator_next_6_equals_then.2595 = global ptr null
@fun_Core_iterator_next_6_equals_then.2597 = global ptr null
@fun_Core_iterator_next_6_equals_then.2599 = global ptr null
@625 = global ptr null
@fun_Core_iterator_next_6_equals_else.2601 = global ptr null
@626 = global ptr null
@fun_Core_iterator_next_6_equals_else.2603 = global ptr null
@627 = global ptr null
@fun_Core_iterator_next_6_isMatch_else.2605 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.2607 = global ptr null
@628 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch.2609 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.2611 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.2613 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.2615 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.2617 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then.2619 = global ptr null
@629 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else.2621 = global ptr null
@630 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then.2623 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then.2625 = global ptr null
@631 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else.2627 = global ptr null
@632 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then.2629 = global ptr null
@633 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else.2631 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else.2633 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.2635 = global ptr null
@634 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.2637 = global ptr null
@635 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.2639 = global ptr null
@636 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_matched.2641 = global ptr null
@fun_Core_iterator_takeWhile_7_3_5.2643 = global ptr null
@tag_More.2644 = global ptr null
@"Core:iterator:233" = global ptr null
@fun_Core_iterator_toList_2.2646 = global ptr null
@"Core:iterator:238" = global ptr null
@"Core:iterator:243" = global ptr null
@"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2648" = global ptr null
@fun_Core_iterator_wrapSafe_14.2650 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2652 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2654 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2656 = global ptr null
@637 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2658 = global ptr null
@638 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2660 = global ptr null
@639 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2662 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2664 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2666 = global ptr null
@640 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2668 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2670 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2672 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2674 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2676 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2678 = global ptr null
@641 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2680 = global ptr null
@642 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2682 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2684 = global ptr null
@643 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2686 = global ptr null
@644 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2688 = global ptr null
@645 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2690 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2692 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2694 = global ptr null
@646 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2696 = global ptr null
@647 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2698 = global ptr null
@648 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2700 = global ptr null
@tag_More.2701 = global ptr null
@tag_Iterator.2702 = global ptr null
@fun_Core_controlFlow_recursive_16.2704 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2706 = global ptr null
@fun_Core_iterator_take_27.2708 = global ptr null
@fun_Core_iterator_take_27_1_equals_then.2710 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_then.2712 = global ptr null
@649 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_else.2714 = global ptr null
@650 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_then.2716 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_then.2718 = global ptr null
@651 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_else.2720 = global ptr null
@652 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_then.2722 = global ptr null
@653 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.2724 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.2726 = global ptr null
@fun_Core_iterator_take_27_1_equals_else.2728 = global ptr null
@654 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.2730 = global ptr null
@"Core:iterator:245" = global ptr null
@fun_Core_iterator_toList_2.2732 = global ptr null
@655 = global ptr null
@"Core:iterator:251" = global ptr null
@num_12 = global ptr null
@"Core:iterator:256" = global ptr null
@"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2734" = global ptr null
@fun_Core_iterator_wrapSafe_14.2736 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2738 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2740 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2742 = global ptr null
@656 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2744 = global ptr null
@657 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2746 = global ptr null
@658 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2748 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2750 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2752 = global ptr null
@659 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2754 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2756 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2758 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2760 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2762 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2764 = global ptr null
@660 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2766 = global ptr null
@661 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2768 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2770 = global ptr null
@662 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2772 = global ptr null
@663 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2774 = global ptr null
@664 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2776 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2778 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2780 = global ptr null
@665 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2782 = global ptr null
@666 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2784 = global ptr null
@667 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2786 = global ptr null
@tag_More.2787 = global ptr null
@tag_Iterator.2788 = global ptr null
@fun_Core_controlFlow_recursive_16.2790 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2792 = global ptr null
@fun_Core_iterator_take_27.2794 = global ptr null
@fun_Core_iterator_take_27_1_equals_then.2796 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_then.2798 = global ptr null
@668 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_else.2800 = global ptr null
@669 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_then.2802 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_then.2804 = global ptr null
@670 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_else.2806 = global ptr null
@671 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_then.2808 = global ptr null
@672 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.2810 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.2812 = global ptr null
@fun_Core_iterator_take_27_1_equals_else.2814 = global ptr null
@673 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.2816 = global ptr null
@"Core:iterator:258" = global ptr null
@fun_Core_iterator_toList_2.2818 = global ptr null
@"Core:iterator:270" = global ptr null
@"Core:iterator:275" = global ptr null
@"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2820" = global ptr null
@fun_Core_iterator_wrapSafe_14.2822 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2824 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2826 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2828 = global ptr null
@674 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2830 = global ptr null
@675 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2832 = global ptr null
@676 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2834 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2836 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2838 = global ptr null
@677 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2840 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2842 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2844 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2846 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2848 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2850 = global ptr null
@678 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2852 = global ptr null
@679 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2854 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2856 = global ptr null
@680 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2858 = global ptr null
@681 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2860 = global ptr null
@682 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2862 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2864 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2866 = global ptr null
@683 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2868 = global ptr null
@684 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2870 = global ptr null
@685 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2872 = global ptr null
@tag_More.2873 = global ptr null
@tag_Iterator.2874 = global ptr null
@fun_Core_controlFlow_recursive_16.2876 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2878 = global ptr null
@fun_Core_iterator_skip_26.2880 = global ptr null
@tag_Iterator.2881 = global ptr null
@"Core:iterator:277" = global ptr null
@fun_Core_iterator_toList_2.2883 = global ptr null
@686 = global ptr null
@"Core:iterator:285" = global ptr null
@num_40 = global ptr null
@"Core:iterator:290" = global ptr null
@"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2885" = global ptr null
@fun_Core_iterator_wrapSafe_14.2887 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2889 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2891 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2893 = global ptr null
@687 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2895 = global ptr null
@688 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2897 = global ptr null
@689 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2899 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2901 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2903 = global ptr null
@690 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2905 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2907 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2909 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2911 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2913 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2915 = global ptr null
@691 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2917 = global ptr null
@692 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2919 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2921 = global ptr null
@693 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2923 = global ptr null
@694 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2925 = global ptr null
@695 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2927 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2929 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2931 = global ptr null
@696 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2933 = global ptr null
@697 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2935 = global ptr null
@698 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2937 = global ptr null
@tag_More.2938 = global ptr null
@tag_Iterator.2939 = global ptr null
@fun_Core_controlFlow_recursive_16.2941 = global ptr null
@fun_Core_controlFlow_recursive_16_0.2943 = global ptr null
@fun_Core_iterator_skip_26.2945 = global ptr null
@tag_Iterator.2946 = global ptr null
@"Core:iterator:292" = global ptr null
@fun_Core_iterator_toList_2.2948 = global ptr null
@"Core:iterator:294" = global ptr null
@"Core:iterator:301" = global ptr null
@"fun_Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.2950 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2952 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2954 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.2956 = global ptr null
@699 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2958 = global ptr null
@700 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.2960 = global ptr null
@701 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.2962 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.2964 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2966 = global ptr null
@702 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2968 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2970 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2972 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2974 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.2976 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2978 = global ptr null
@703 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2980 = global ptr null
@704 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2982 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2984 = global ptr null
@705 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2986 = global ptr null
@706 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2988 = global ptr null
@707 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2990 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2992 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2994 = global ptr null
@708 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2996 = global ptr null
@709 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.2998 = global ptr null
@710 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.3000 = global ptr null
@tag_More.3001 = global ptr null
@tag_Iterator.3002 = global ptr null
@fun_Core_controlFlow_recursive_16.3004 = global ptr null
@fun_Core_controlFlow_recursive_16_0.3006 = global ptr null
@fun_Core_iterator_windowed_57.3008 = global ptr null
@fun_Core_iterator_windowed_57_18.3010 = global ptr null
@fun_Core_iterator_windowed_57_19.3012 = global ptr null
@fun_Core_iterator_windowed_57_24.3014 = global ptr null
@fun_Core_iterator_skip_26.3016 = global ptr null
@tag_Iterator.3017 = global ptr null
@tag_More.3018 = global ptr null
@"Core:iterator:303" = global ptr null
@fun_Core_iterator_toList_2.3020 = global ptr null
@711 = global ptr null
@712 = global ptr null
@713 = global ptr null
@"Core:iterator:320" = global ptr null
@"Core:iterator:325" = global ptr null
@"fun_Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch" = global ptr null
@fun_Core_iterator_wrapSafe_14.3022 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.3024 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.3026 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.3028 = global ptr null
@714 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.3030 = global ptr null
@715 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.3032 = global ptr null
@716 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched.3034 = global ptr null
@fun_Core_iterator_wrapSafe_14_22.3036 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.3038 = global ptr null
@717 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.3040 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.3042 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.3044 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.3046 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.3048 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.3050 = global ptr null
@718 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.3052 = global ptr null
@719 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.3054 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.3056 = global ptr null
@720 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.3058 = global ptr null
@721 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.3060 = global ptr null
@722 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.3062 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.3064 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.3066 = global ptr null
@723 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.3068 = global ptr null
@724 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.3070 = global ptr null
@725 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.3072 = global ptr null
@tag_More.3073 = global ptr null
@tag_Iterator.3074 = global ptr null
@fun_Core_controlFlow_recursive_16.3076 = global ptr null
@fun_Core_controlFlow_recursive_16_0.3078 = global ptr null
@"Core:iterator:327" = global ptr null
@fun_Core_iterator_toList_2.3080 = global ptr null
@726 = global ptr null
@727 = global ptr null
@728 = global ptr null
@729 = global ptr null
@"Core:iterator:343" = global ptr null
@tag_FixedDecimal.3081 = global ptr null
@"Examples:sqrt:sqrt:68:22" = global ptr null
@"Examples:sqrt:sqrt:68:23" = global ptr null
@"Examples:sqrt:sqrt:68:33" = global ptr null
@"Examples:sqrt:sqrt:68:45" = global ptr null
@"Examples:sqrt:sqrt:68:47:2" = global ptr null
@"Examples:sqrt:sqrt:68:48" = global ptr null
@"Examples:sqrt:sqrt:69" = global ptr null
@num_65 = global ptr null
@tag_FixedDecimal.3082 = global ptr null
@fun_Core_controlFlow_recursive_16.3084 = global ptr null
@fun_Core_controlFlow_recursive_16_0.3086 = global ptr null
@fun_Examples_sqrt_sqrt_68 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.3088 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.3090 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.3092 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.3094 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.3096 = global ptr null
@730 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.3098 = global ptr null
@731 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.3100 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.3102 = global ptr null
@732 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.3104 = global ptr null
@733 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.3106 = global ptr null
@734 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.3108 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.3110 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.3112 = global ptr null
@735 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.3114 = global ptr null
@736 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.3116 = global ptr null
@737 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.3118 = global ptr null
@fun_Core_fixedDecimal_is_1_14.3120 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.3122 = global ptr null
@fun_Core_fixedDecimal_is_1_14.3124 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.3126 = global ptr null
@fun_Core_fixedDecimal_is_1_14.3128 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched.3130 = global ptr null
@fun_Core_fixedDecimal_is_1_14.3132 = global ptr null
@fun_Examples_sqrt_sqrt_68_46 = global ptr null
@fun_Examples_sqrt_sqrt_68_47 = global ptr null
@"Examples:sqrt:main:41" = global ptr null
@"Examples:sqrt:main:42" = global ptr null
@"Examples:sqrt:main:43" = global ptr null
@"Examples:sqrt:main:45:0" = global ptr null
@"Examples:sqrt:main:46" = global ptr null
@"text_The root of 2 is " = global ptr null
@"Examples:sqrt:main:49" = global ptr null
@fun_Examples_sqrt_main = global ptr null
@fun_Examples_sqrt_main_44 = global ptr null
@fun_Examples_sqrt_main_45 = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:10\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::fitsInRustU128:10", align 8
  %4 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::fitsInRustU128:16", align 8
  %6 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:5\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::fitsInRustU128:5", align 8
  %8 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:8\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::fitsInRustU128:8", align 8
  %10 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::functionRun:11", align 8
  %12 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::functionRun:16", align 8
  %14 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::functionRun:22", align 8
  %16 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::functionRun:5", align 8
  %18 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::getArgumentCount:11", align 8
  %20 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::getArgumentCount:5", align 8
  %22 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:1", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:11", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:14", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:19", align 8
  %30 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:25", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::ifElse:28", align 8
  %34 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::ifElse:33", align 8
  %36 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::ifElse:41", align 8
  %38 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::ifElse:5", align 8
  %40 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intAdd:11", align 8
  %42 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intAdd:18", align 8
  %44 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::intAdd:5", align 8
  %46 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:18\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::intBitwiseAnd:18", align 8
  %48 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseAnd:5\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::intBitwiseAnd:5", align 8
  %50 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::intCompareTo:11", align 8
  %52 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::intCompareTo:18", align 8
  %54 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::intCompareTo:5", align 8
  %56 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:11\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::intDivideTruncating:11", align 8
  %58 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:17\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::intDivideTruncating:17", align 8
  %60 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:25\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::intDivideTruncating:25", align 8
  %62 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:32\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::intDivideTruncating:32", align 8
  %64 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::intDivideTruncating:5\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::intDivideTruncating:5", align 8
  %66 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:11\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::intMultiply:11", align 8
  %68 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:18\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::intMultiply:18", align 8
  %70 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intMultiply:5\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::intMultiply:5", align 8
  %72 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:11\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::intRemainder:11", align 8
  %74 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:17\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::intRemainder:17", align 8
  %76 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:25\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::intRemainder:25", align 8
  %78 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:32\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::intRemainder:32", align 8
  %80 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intRemainder:5\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::intRemainder:5", align 8
  %82 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:11\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::intShiftRight:11", align 8
  %84 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:14\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::intShiftRight:14", align 8
  %86 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:23\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::intShiftRight:23", align 8
  %88 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:24\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Builtins::intShiftRight:24", align 8
  %90 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::intShiftRight:26:0\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Builtins::intShiftRight:26:0", align 8
  %92 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:27\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Builtins::intShiftRight:27", align 8
  %94 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:29\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Builtins::intShiftRight:29", align 8
  %96 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:30\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Builtins::intShiftRight:30", align 8
  %98 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:31\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Builtins::intShiftRight:31", align 8
  %100 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:34\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Builtins::intShiftRight:34", align 8
  %102 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:42\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Builtins::intShiftRight:42", align 8
  %104 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:49\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Builtins::intShiftRight:49", align 8
  %106 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftRight:5\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Builtins::intShiftRight:5", align 8
  %108 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:11\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Builtins::intSubtract:11", align 8
  %110 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Builtins::intSubtract:18", align 8
  %112 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Builtins::intSubtract:5", align 8
  %114 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:11\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  %116 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:18\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  %118 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:19\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  %120 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::isLessThanOrEqualTo:5\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  %122 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Builtins::isNonNegative:12", align 8
  %124 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Builtins::isNonNegative:13", align 8
  %126 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Builtins::isNonNegative:5", align 8
  %128 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Builtins::listGet:11", align 8
  %130 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Builtins::listGet:14", align 8
  %132 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Builtins::listGet:16", align 8
  %134 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Builtins::listGet:25", align 8
  %136 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Builtins::listGet:30", align 8
  %138 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Builtins::listGet:37", align 8
  %140 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:11\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Builtins::listInsert:11", align 8
  %142 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:14\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Builtins::listInsert:14", align 8
  %144 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:16\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Builtins::listInsert:16", align 8
  %146 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:24\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Builtins::listInsert:24", align 8
  %148 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:25\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Builtins::listInsert:25", align 8
  %150 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:27\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Builtins::listInsert:27", align 8
  %152 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:35\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Builtins::listInsert:35", align 8
  %154 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listInsert:5\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Builtins::listInsert:5", align 8
  %156 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Builtins::listLength:11", align 8
  %158 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Builtins::listLength:5", align 8
  %160 = alloca i8, i64 16, align 1
  store [16 x i8] c"Builtins::not:1\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Builtins::not:1", align 8
  %162 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::print:11\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Builtins::print:11", align 8
  %164 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Builtins::structGet:12", align 8
  %166 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Builtins::structGet:14", align 8
  %168 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Builtins::structGet:21", align 8
  %170 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Builtins::structGet:5", align 8
  %172 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:11\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Builtins::tagGetValue:11", align 8
  %174 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:13\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Builtins::tagGetValue:13", align 8
  %176 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:19\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Builtins::tagGetValue:19", align 8
  %178 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagGetValue:5\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Builtins::tagGetValue:5", align 8
  %180 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:11\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Builtins::textConcatenate:11", align 8
  %182 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:18\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Builtins::textConcatenate:18", align 8
  %184 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textConcatenate:5\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Builtins::textConcatenate:5", align 8
  %186 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:11\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Builtins::textGetRange:11", align 8
  %188 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:14\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Builtins::textGetRange:14", align 8
  %190 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:16\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Builtins::textGetRange:16", align 8
  %192 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:24\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Builtins::textGetRange:24", align 8
  %194 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:25\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Builtins::textGetRange:25", align 8
  %196 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:27\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Builtins::textGetRange:27", align 8
  %198 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:33\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Builtins::textGetRange:33", align 8
  %200 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:36\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Builtins::textGetRange:36", align 8
  %202 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:38\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Builtins::textGetRange:38", align 8
  %204 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:46\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Builtins::textGetRange:46", align 8
  %206 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:47\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Builtins::textGetRange:47", align 8
  %208 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:49\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Builtins::textGetRange:49", align 8
  %210 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textGetRange:5\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Builtins::textGetRange:5", align 8
  %212 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:53\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Builtins::textGetRange:53", align 8
  %214 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:55\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Builtins::textGetRange:55", align 8
  %216 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:63\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Builtins::textGetRange:63", align 8
  %218 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textLength:11\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Builtins::textLength:11", align 8
  %220 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::textLength:5\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Builtins::textLength:5", align 8
  %222 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:11\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Builtins::textStartsWith:11", align 8
  %224 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:18\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Builtins::textStartsWith:18", align 8
  %226 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textStartsWith:5\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Builtins::textStartsWith:5", align 8
  %228 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Builtins::toDebugText:5", align 8
  %230 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Builtins::typeIs:19", align 8
  %232 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Builtins::typeIs:25", align 8
  %234 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Builtins::typeOf:5", align 8
  %236 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:and:13\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Core:bool:and:13", align 8
  %238 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:4\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Core:bool:and:4", align 8
  %240 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:9\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Core:bool:and:9", align 8
  %242 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:12\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Core:bool:implies:12", align 8
  %244 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:15\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Core:bool:implies:15", align 8
  %246 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:4\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Core:bool:implies:4", align 8
  %248 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:9\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Core:bool:implies:9", align 8
  %250 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Core:bool:is:1", align 8
  %252 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:14\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Core:bool:lazyAnd:14", align 8
  %254 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:16\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Core:bool:lazyAnd:16", align 8
  %256 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:16:11\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Core:bool:lazyAnd:16:11", align 8
  %258 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:16:19\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Core:bool:lazyAnd:16:19", align 8
  %260 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:16:7\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Core:bool:lazyAnd:16:7", align 8
  %262 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:4\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Core:bool:lazyAnd:4", align 8
  %264 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:14\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Core:bool:lazyOr:14", align 8
  %266 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Core:bool:lazyOr:16", align 8
  %268 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:16:12\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Core:bool:lazyOr:16:12", align 8
  %270 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:16:20\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Core:bool:lazyOr:16:20", align 8
  %272 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:bool:lazyOr:16:8\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Core:bool:lazyOr:16:8", align 8
  %274 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Core:bool:lazyOr:4", align 8
  %276 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:4\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Core:bool:not:4", align 8
  %278 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:6\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Core:bool:not:6", align 8
  %280 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Core:bool:or:13", align 8
  %282 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Core:bool:or:4", align 8
  %284 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Core:bool:or:9", align 8
  %286 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:1\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"Core:check:check:1", align 8
  %288 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:check:check:14\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"Core:check:check:14", align 8
  %290 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:5\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"Core:check:check:5", align 8
  %292 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:12\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"Core:check:checkEquals:12", align 8
  %294 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:13\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"Core:check:checkEquals:13", align 8
  %296 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:15:0\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"Core:check:checkEquals:15:0", align 8
  %298 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:16\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"Core:check:checkEquals:16", align 8
  %300 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:19\00", ptr %300, align 1
  %301 = call ptr @make_candy_text(ptr %300)
  store ptr %301, ptr @"Core:check:checkEquals:19", align 8
  %302 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:20\00", ptr %302, align 1
  %303 = call ptr @make_candy_text(ptr %302)
  store ptr %303, ptr @"Core:check:checkEquals:20", align 8
  %304 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:22:0\00", ptr %304, align 1
  %305 = call ptr @make_candy_text(ptr %304)
  store ptr %305, ptr @"Core:check:checkEquals:22:0", align 8
  %306 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:23\00", ptr %306, align 1
  %307 = call ptr @make_candy_text(ptr %306)
  store ptr %307, ptr @"Core:check:checkEquals:23", align 8
  %308 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:25\00", ptr %308, align 1
  %309 = call ptr @make_candy_text(ptr %308)
  store ptr %309, ptr @"Core:check:checkEquals:25", align 8
  %310 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:26\00", ptr %310, align 1
  %311 = call ptr @make_candy_text(ptr %310)
  store ptr %311, ptr @"Core:check:checkEquals:26", align 8
  %312 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:27\00", ptr %312, align 1
  %313 = call ptr @make_candy_text(ptr %312)
  store ptr %313, ptr @"Core:check:checkEquals:27", align 8
  %314 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:28\00", ptr %314, align 1
  %315 = call ptr @make_candy_text(ptr %314)
  store ptr %315, ptr @"Core:check:checkEquals:28", align 8
  %316 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:29\00", ptr %316, align 1
  %317 = call ptr @make_candy_text(ptr %316)
  store ptr %317, ptr @"Core:check:checkEquals:29", align 8
  %318 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:19\00", ptr %318, align 1
  %319 = call ptr @make_candy_text(ptr %318)
  store ptr %319, ptr @"Core:controlFlow:if:19", align 8
  %320 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:24\00", ptr %320, align 1
  %321 = call ptr @make_candy_text(ptr %320)
  store ptr %321, ptr @"Core:controlFlow:if:24", align 8
  %322 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:controlFlow:if:9\00", ptr %322, align 1
  %323 = call ptr @make_candy_text(ptr %322)
  store ptr %323, ptr @"Core:controlFlow:if:9", align 8
  %324 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:15\00", ptr %324, align 1
  %325 = call ptr @make_candy_text(ptr %324)
  store ptr %325, ptr @"Core:controlFlow:recursive:15", align 8
  %326 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:16:0:3\00", ptr %326, align 1
  %327 = call ptr @make_candy_text(ptr %326)
  store ptr %327, ptr @"Core:controlFlow:recursive:16:0:3", align 8
  %328 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:16:5\00", ptr %328, align 1
  %329 = call ptr @make_candy_text(ptr %328)
  store ptr %329, ptr @"Core:controlFlow:recursive:16:5", align 8
  %330 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:21\00", ptr %330, align 1
  %331 = call ptr @make_candy_text(ptr %330)
  store ptr %331, ptr @"Core:controlFlow:recursive:21", align 8
  %332 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:absolute:11\00", ptr %332, align 1
  %333 = call ptr @make_candy_text(ptr %332)
  store ptr %333, ptr @"Core:fixedDecimal:absolute:11", align 8
  %334 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:absolute:4\00", ptr %334, align 1
  %335 = call ptr @make_candy_text(ptr %334)
  store ptr %335, ptr @"Core:fixedDecimal:absolute:4", align 8
  %336 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:absolute:8\00", ptr %336, align 1
  %337 = call ptr @make_candy_text(ptr %336)
  store ptr %337, ptr @"Core:fixedDecimal:absolute:8", align 8
  %338 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:absolute:9:2\00", ptr %338, align 1
  %339 = call ptr @make_candy_text(ptr %338)
  store ptr %339, ptr @"Core:fixedDecimal:absolute:9:2", align 8
  %340 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:13\00", ptr %340, align 1
  %341 = call ptr @make_candy_text(ptr %340)
  store ptr %341, ptr @"Core:fixedDecimal:add:13", align 8
  %342 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:25\00", ptr %342, align 1
  %343 = call ptr @make_candy_text(ptr %342)
  store ptr %343, ptr @"Core:fixedDecimal:add:25", align 8
  %344 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:27\00", ptr %344, align 1
  %345 = call ptr @make_candy_text(ptr %344)
  store ptr %345, ptr @"Core:fixedDecimal:add:27", align 8
  %346 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:4\00", ptr %346, align 1
  %347 = call ptr @make_candy_text(ptr %346)
  store ptr %347, ptr @"Core:fixedDecimal:add:4", align 8
  %348 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:9\00", ptr %348, align 1
  %349 = call ptr @make_candy_text(ptr %348)
  store ptr %349, ptr @"Core:fixedDecimal:add:9", align 8
  %350 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:14\00", ptr %350, align 1
  %351 = call ptr @make_candy_text(ptr %350)
  store ptr %351, ptr @"Core:fixedDecimal:approxEquals:14", align 8
  %352 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:17\00", ptr %352, align 1
  %353 = call ptr @make_candy_text(ptr %352)
  store ptr %353, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  %354 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:19\00", ptr %354, align 1
  %355 = call ptr @make_candy_text(ptr %354)
  store ptr %355, ptr @"Core:fixedDecimal:approxEquals:19", align 8
  %356 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:23\00", ptr %356, align 1
  %357 = call ptr @make_candy_text(ptr %356)
  store ptr %357, ptr @"Core:fixedDecimal:approxEquals:23", align 8
  %358 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:25\00", ptr %358, align 1
  %359 = call ptr @make_candy_text(ptr %358)
  store ptr %359, ptr @"Core:fixedDecimal:approxEquals:25", align 8
  %360 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:28\00", ptr %360, align 1
  %361 = call ptr @make_candy_text(ptr %360)
  store ptr %361, ptr @"Core:fixedDecimal:approxEquals:28", align 8
  %362 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:4\00", ptr %362, align 1
  %363 = call ptr @make_candy_text(ptr %362)
  store ptr %363, ptr @"Core:fixedDecimal:approxEquals:4", align 8
  %364 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:9\00", ptr %364, align 1
  %365 = call ptr @make_candy_text(ptr %364)
  store ptr %365, ptr @"Core:fixedDecimal:approxEquals:9", align 8
  %366 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:18\00", ptr %366, align 1
  %367 = call ptr @make_candy_text(ptr %366)
  store ptr %367, ptr @"Core:fixedDecimal:comparableMinorUnits:18", align 8
  %368 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:21\00", ptr %368, align 1
  %369 = call ptr @make_candy_text(ptr %368)
  store ptr %369, ptr @"Core:fixedDecimal:comparableMinorUnits:21", align 8
  %370 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:22\00", ptr %370, align 1
  %371 = call ptr @make_candy_text(ptr %370)
  store ptr %371, ptr @"Core:fixedDecimal:comparableMinorUnits:22", align 8
  %372 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:28\00", ptr %372, align 1
  %373 = call ptr @make_candy_text(ptr %372)
  store ptr %373, ptr @"Core:fixedDecimal:comparableMinorUnits:28", align 8
  %374 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:33\00", ptr %374, align 1
  %375 = call ptr @make_candy_text(ptr %374)
  store ptr %375, ptr @"Core:fixedDecimal:comparableMinorUnits:33", align 8
  %376 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:4\00", ptr %376, align 1
  %377 = call ptr @make_candy_text(ptr %376)
  store ptr %377, ptr @"Core:fixedDecimal:comparableMinorUnits:4", align 8
  %378 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:9\00", ptr %378, align 1
  %379 = call ptr @make_candy_text(ptr %378)
  store ptr %379, ptr @"Core:fixedDecimal:comparableMinorUnits:9", align 8
  %380 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:13\00", ptr %380, align 1
  %381 = call ptr @make_candy_text(ptr %380)
  store ptr %381, ptr @"Core:fixedDecimal:compareTo:13", align 8
  %382 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:24\00", ptr %382, align 1
  %383 = call ptr @make_candy_text(ptr %382)
  store ptr %383, ptr @"Core:fixedDecimal:compareTo:24", align 8
  %384 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:4\00", ptr %384, align 1
  %385 = call ptr @make_candy_text(ptr %384)
  store ptr %385, ptr @"Core:fixedDecimal:compareTo:4", align 8
  %386 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:41\00", ptr %386, align 1
  %387 = call ptr @make_candy_text(ptr %386)
  store ptr %387, ptr @"Core:fixedDecimal:compareTo:41", align 8
  %388 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:42\00", ptr %388, align 1
  %389 = call ptr @make_candy_text(ptr %388)
  store ptr %389, ptr @"Core:fixedDecimal:compareTo:42", align 8
  %390 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:9\00", ptr %390, align 1
  %391 = call ptr @make_candy_text(ptr %390)
  store ptr %391, ptr @"Core:fixedDecimal:compareTo:9", align 8
  %392 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:14\00", ptr %392, align 1
  %393 = call ptr @make_candy_text(ptr %392)
  store ptr %393, ptr @"Core:fixedDecimal:divideTruncatingAtScale:14", align 8
  %394 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:17\00", ptr %394, align 1
  %395 = call ptr @make_candy_text(ptr %394)
  store ptr %395, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  %396 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:27\00", ptr %396, align 1
  %397 = call ptr @make_candy_text(ptr %396)
  store ptr %397, ptr @"Core:fixedDecimal:divideTruncatingAtScale:27", align 8
  %398 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:35\00", ptr %398, align 1
  %399 = call ptr @make_candy_text(ptr %398)
  store ptr %399, ptr @"Core:fixedDecimal:divideTruncatingAtScale:35", align 8
  %400 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:39\00", ptr %400, align 1
  %401 = call ptr @make_candy_text(ptr %400)
  store ptr %401, ptr @"Core:fixedDecimal:divideTruncatingAtScale:39", align 8
  %402 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:4\00", ptr %402, align 1
  %403 = call ptr @make_candy_text(ptr %402)
  store ptr %403, ptr @"Core:fixedDecimal:divideTruncatingAtScale:4", align 8
  %404 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:52\00", ptr %404, align 1
  %405 = call ptr @make_candy_text(ptr %404)
  store ptr %405, ptr @"Core:fixedDecimal:divideTruncatingAtScale:52", align 8
  %406 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:53\00", ptr %406, align 1
  %407 = call ptr @make_candy_text(ptr %406)
  store ptr %407, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  %408 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:61\00", ptr %408, align 1
  %409 = call ptr @make_candy_text(ptr %408)
  store ptr %409, ptr @"Core:fixedDecimal:divideTruncatingAtScale:61", align 8
  %410 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:63\00", ptr %410, align 1
  %411 = call ptr @make_candy_text(ptr %410)
  store ptr %411, ptr @"Core:fixedDecimal:divideTruncatingAtScale:63", align 8
  %412 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:9\00", ptr %412, align 1
  %413 = call ptr @make_candy_text(ptr %412)
  store ptr %413, ptr @"Core:fixedDecimal:divideTruncatingAtScale:9", align 8
  %414 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:16\00", ptr %414, align 1
  %415 = call ptr @make_candy_text(ptr %414)
  store ptr %415, ptr @"Core:fixedDecimal:floorToInt:16", align 8
  %416 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:18\00", ptr %416, align 1
  %417 = call ptr @make_candy_text(ptr %416)
  store ptr %417, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  %418 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:19\00", ptr %418, align 1
  %419 = call ptr @make_candy_text(ptr %418)
  store ptr %419, ptr @"Core:fixedDecimal:floorToInt:19", align 8
  %420 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:4\00", ptr %420, align 1
  %421 = call ptr @make_candy_text(ptr %420)
  store ptr %421, ptr @"Core:fixedDecimal:floorToInt:4", align 8
  %422 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:7\00", ptr %422, align 1
  %423 = call ptr @make_candy_text(ptr %422)
  store ptr %423, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  %424 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:14\00", ptr %424, align 1
  %425 = call ptr @make_candy_text(ptr %424)
  store ptr %425, ptr @"Core:fixedDecimal:fromIntScaled:14", align 8
  %426 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:fromIntScaled:9\00", ptr %426, align 1
  %427 = call ptr @make_candy_text(ptr %426)
  store ptr %427, ptr @"Core:fixedDecimal:fromIntScaled:9", align 8
  %428 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:fixedDecimal:is:1\00", ptr %428, align 1
  %429 = call ptr @make_candy_text(ptr %428)
  store ptr %429, ptr @"Core:fixedDecimal:is:1", align 8
  %430 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:is:1:14:2\00", ptr %430, align 1
  %431 = call ptr @make_candy_text(ptr %430)
  store ptr %431, ptr @"Core:fixedDecimal:is:1:14:2", align 8
  %432 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:is:1:15\00", ptr %432, align 1
  %433 = call ptr @make_candy_text(ptr %432)
  store ptr %433, ptr @"Core:fixedDecimal:is:1:15", align 8
  %434 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:is:1:minorUnits\00", ptr %434, align 1
  %435 = call ptr @make_candy_text(ptr %434)
  store ptr %435, ptr @"Core:fixedDecimal:is:1:minorUnits", align 8
  %436 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:is:1:scale\00", ptr %436, align 1
  %437 = call ptr @make_candy_text(ptr %436)
  store ptr %437, ptr @"Core:fixedDecimal:is:1:scale", align 8
  %438 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isGreaterThan:14\00", ptr %438, align 1
  %439 = call ptr @make_candy_text(ptr %438)
  store ptr %439, ptr @"Core:fixedDecimal:isGreaterThan:14", align 8
  %440 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:4\00", ptr %440, align 1
  %441 = call ptr @make_candy_text(ptr %440)
  store ptr %441, ptr @"Core:fixedDecimal:isGreaterThan:4", align 8
  %442 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:9\00", ptr %442, align 1
  %443 = call ptr @make_candy_text(ptr %442)
  store ptr %443, ptr @"Core:fixedDecimal:isGreaterThan:9", align 8
  %444 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:13\00", ptr %444, align 1
  %445 = call ptr @make_candy_text(ptr %444)
  store ptr %445, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %446 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:20\00", ptr %446, align 1
  %447 = call ptr @make_candy_text(ptr %446)
  store ptr %447, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:20", align 8
  %448 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:4\00", ptr %448, align 1
  %449 = call ptr @make_candy_text(ptr %448)
  store ptr %449, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:4", align 8
  %450 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:9\00", ptr %450, align 1
  %451 = call ptr @make_candy_text(ptr %450)
  store ptr %451, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:9", align 8
  %452 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isNegative:15\00", ptr %452, align 1
  %453 = call ptr @make_candy_text(ptr %452)
  store ptr %453, ptr @"Core:fixedDecimal:isNegative:15", align 8
  %454 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:4\00", ptr %454, align 1
  %455 = call ptr @make_candy_text(ptr %454)
  store ptr %455, ptr @"Core:fixedDecimal:isNegative:4", align 8
  %456 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:7\00", ptr %456, align 1
  %457 = call ptr @make_candy_text(ptr %456)
  store ptr %457, ptr @"Core:fixedDecimal:isNegative:7", align 8
  %458 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isNonNegative:14\00", ptr %458, align 1
  %459 = call ptr @make_candy_text(ptr %458)
  store ptr %459, ptr @"Core:fixedDecimal:isNonNegative:14", align 8
  %460 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonNegative:4\00", ptr %460, align 1
  %461 = call ptr @make_candy_text(ptr %460)
  store ptr %461, ptr @"Core:fixedDecimal:isNonNegative:4", align 8
  %462 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonNegative:7\00", ptr %462, align 1
  %463 = call ptr @make_candy_text(ptr %462)
  store ptr %463, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  %464 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isScale:14:7\00", ptr %464, align 1
  %465 = call ptr @make_candy_text(ptr %464)
  store ptr %465, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  %466 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:isScale:15\00", ptr %466, align 1
  %467 = call ptr @make_candy_text(ptr %466)
  store ptr %467, ptr @"Core:fixedDecimal:isScale:15", align 8
  %468 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:15\00", ptr %468, align 1
  %469 = call ptr @make_candy_text(ptr %468)
  store ptr %469, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %470 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:17\00", ptr %470, align 1
  %471 = call ptr @make_candy_text(ptr %470)
  store ptr %471, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %472 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:minorUnits:4\00", ptr %472, align 1
  %473 = call ptr @make_candy_text(ptr %472)
  store ptr %473, ptr @"Core:fixedDecimal:minorUnits:4", align 8
  %474 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:15\00", ptr %474, align 1
  %475 = call ptr @make_candy_text(ptr %474)
  store ptr %475, ptr @"Core:fixedDecimal:negate:15", align 8
  %476 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:18\00", ptr %476, align 1
  %477 = call ptr @make_candy_text(ptr %476)
  store ptr %477, ptr @"Core:fixedDecimal:negate:18", align 8
  %478 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:19\00", ptr %478, align 1
  %479 = call ptr @make_candy_text(ptr %478)
  store ptr %479, ptr @"Core:fixedDecimal:negate:19", align 8
  %480 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:negate:4\00", ptr %480, align 1
  %481 = call ptr @make_candy_text(ptr %480)
  store ptr %481, ptr @"Core:fixedDecimal:negate:4", align 8
  %482 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:negate:8\00", ptr %482, align 1
  %483 = call ptr @make_candy_text(ptr %482)
  store ptr %483, ptr @"Core:fixedDecimal:negate:8", align 8
  %484 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:13\00", ptr %484, align 1
  %485 = call ptr @make_candy_text(ptr %484)
  store ptr %485, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  %486 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:21\00", ptr %486, align 1
  %487 = call ptr @make_candy_text(ptr %486)
  store ptr %487, ptr @"Core:fixedDecimal:rescaledMinorUnits:21", align 8
  %488 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:22:12\00", ptr %488, align 1
  %489 = call ptr @make_candy_text(ptr %488)
  store ptr %489, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:12", align 8
  %490 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:rescaledMinorUnits:22:2\00", ptr %490, align 1
  %491 = call ptr @make_candy_text(ptr %490)
  store ptr %491, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:2", align 8
  %492 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:22:20\00", ptr %492, align 1
  %493 = call ptr @make_candy_text(ptr %492)
  store ptr %493, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:20", align 8
  %494 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:22:21\00", ptr %494, align 1
  %495 = call ptr @make_candy_text(ptr %494)
  store ptr %495, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:21", align 8
  %496 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:22:22\00", ptr %496, align 1
  %497 = call ptr @make_candy_text(ptr %496)
  store ptr %497, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:22", align 8
  %498 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:23:19\00", ptr %498, align 1
  %499 = call ptr @make_candy_text(ptr %498)
  store ptr %499, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:19", align 8
  %500 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:rescaledMinorUnits:23:2\00", ptr %500, align 1
  %501 = call ptr @make_candy_text(ptr %500)
  store ptr %501, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:2", align 8
  %502 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:23:20\00", ptr %502, align 1
  %503 = call ptr @make_candy_text(ptr %502)
  store ptr %503, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:20", align 8
  %504 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:23:21\00", ptr %504, align 1
  %505 = call ptr @make_candy_text(ptr %504)
  store ptr %505, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:21", align 8
  %506 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:23:22\00", ptr %506, align 1
  %507 = call ptr @make_candy_text(ptr %506)
  store ptr %507, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:22", align 8
  %508 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24\00", ptr %508, align 1
  %509 = call ptr @make_candy_text(ptr %508)
  store ptr %509, ptr @"Core:fixedDecimal:rescaledMinorUnits:24", align 8
  %510 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:4\00", ptr %510, align 1
  %511 = call ptr @make_candy_text(ptr %510)
  store ptr %511, ptr @"Core:fixedDecimal:rescaledMinorUnits:4", align 8
  %512 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:9\00", ptr %512, align 1
  %513 = call ptr @make_candy_text(ptr %512)
  store ptr %513, ptr @"Core:fixedDecimal:rescaledMinorUnits:9", align 8
  %514 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:15\00", ptr %514, align 1
  %515 = call ptr @make_candy_text(ptr %514)
  store ptr %515, ptr @"Core:fixedDecimal:scale:15", align 8
  %516 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:17\00", ptr %516, align 1
  %517 = call ptr @make_candy_text(ptr %516)
  store ptr %517, ptr @"Core:fixedDecimal:scale:17", align 8
  %518 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:scale:4\00", ptr %518, align 1
  %519 = call ptr @make_candy_text(ptr %518)
  store ptr %519, ptr @"Core:fixedDecimal:scale:4", align 8
  %520 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:scaleFactor:13\00", ptr %520, align 1
  %521 = call ptr @make_candy_text(ptr %520)
  store ptr %521, ptr @"Core:fixedDecimal:scaleFactor:13", align 8
  %522 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:scaleFactor:4\00", ptr %522, align 1
  %523 = call ptr @make_candy_text(ptr %522)
  store ptr %523, ptr @"Core:fixedDecimal:scaleFactor:4", align 8
  %524 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:13\00", ptr %524, align 1
  %525 = call ptr @make_candy_text(ptr %524)
  store ptr %525, ptr @"Core:fixedDecimal:subtract:13", align 8
  %526 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:25\00", ptr %526, align 1
  %527 = call ptr @make_candy_text(ptr %526)
  store ptr %527, ptr @"Core:fixedDecimal:subtract:25", align 8
  %528 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:27\00", ptr %528, align 1
  %529 = call ptr @make_candy_text(ptr %528)
  store ptr %529, ptr @"Core:fixedDecimal:subtract:27", align 8
  %530 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:4\00", ptr %530, align 1
  %531 = call ptr @make_candy_text(ptr %530)
  store ptr %531, ptr @"Core:fixedDecimal:subtract:4", align 8
  %532 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:9\00", ptr %532, align 1
  %533 = call ptr @make_candy_text(ptr %532)
  store ptr %533, ptr @"Core:fixedDecimal:subtract:9", align 8
  %534 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:16\00", ptr %534, align 1
  %535 = call ptr @make_candy_text(ptr %534)
  store ptr %535, ptr @"Core:fixedDecimal:toText:10:16", align 8
  %536 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:2\00", ptr %536, align 1
  %537 = call ptr @make_candy_text(ptr %536)
  store ptr %537, ptr @"Core:fixedDecimal:toText:10:2", align 8
  %538 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:26\00", ptr %538, align 1
  %539 = call ptr @make_candy_text(ptr %538)
  store ptr %539, ptr @"Core:fixedDecimal:toText:10:26", align 8
  %540 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:27:24\00", ptr %540, align 1
  %541 = call ptr @make_candy_text(ptr %540)
  store ptr %541, ptr @"Core:fixedDecimal:toText:10:27:24", align 8
  %542 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:toText:10:27:8\00", ptr %542, align 1
  %543 = call ptr @make_candy_text(ptr %542)
  store ptr %543, ptr @"Core:fixedDecimal:toText:10:27:8", align 8
  %544 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:28:24\00", ptr %544, align 1
  %545 = call ptr @make_candy_text(ptr %544)
  store ptr %545, ptr @"Core:fixedDecimal:toText:10:28:24", align 8
  %546 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:toText:10:28:8\00", ptr %546, align 1
  %547 = call ptr @make_candy_text(ptr %546)
  store ptr %547, ptr @"Core:fixedDecimal:toText:10:28:8", align 8
  %548 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:29\00", ptr %548, align 1
  %549 = call ptr @make_candy_text(ptr %548)
  store ptr %549, ptr @"Core:fixedDecimal:toText:10:29", align 8
  %550 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:4\00", ptr %550, align 1
  %551 = call ptr @make_candy_text(ptr %550)
  store ptr %551, ptr @"Core:fixedDecimal:toText:10:4", align 8
  %552 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:8\00", ptr %552, align 1
  %553 = call ptr @make_candy_text(ptr %552)
  store ptr %553, ptr @"Core:fixedDecimal:toText:10:8", align 8
  %554 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:11\00", ptr %554, align 1
  %555 = call ptr @make_candy_text(ptr %554)
  store ptr %555, ptr @"Core:fixedDecimal:toText:11", align 8
  %556 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:20\00", ptr %556, align 1
  %557 = call ptr @make_candy_text(ptr %556)
  store ptr %557, ptr @"Core:fixedDecimal:toText:20", align 8
  %558 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:21\00", ptr %558, align 1
  %559 = call ptr @make_candy_text(ptr %558)
  store ptr %559, ptr @"Core:fixedDecimal:toText:21", align 8
  %560 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:23:0\00", ptr %560, align 1
  %561 = call ptr @make_candy_text(ptr %560)
  store ptr %561, ptr @"Core:fixedDecimal:toText:23:0", align 8
  %562 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:24\00", ptr %562, align 1
  %563 = call ptr @make_candy_text(ptr %562)
  store ptr %563, ptr @"Core:fixedDecimal:toText:24", align 8
  %564 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:27\00", ptr %564, align 1
  %565 = call ptr @make_candy_text(ptr %564)
  store ptr %565, ptr @"Core:fixedDecimal:toText:27", align 8
  %566 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:28\00", ptr %566, align 1
  %567 = call ptr @make_candy_text(ptr %566)
  store ptr %567, ptr @"Core:fixedDecimal:toText:28", align 8
  %568 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:30:0\00", ptr %568, align 1
  %569 = call ptr @make_candy_text(ptr %568)
  store ptr %569, ptr @"Core:fixedDecimal:toText:30:0", align 8
  %570 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:31\00", ptr %570, align 1
  %571 = call ptr @make_candy_text(ptr %570)
  store ptr %571, ptr @"Core:fixedDecimal:toText:31", align 8
  %572 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:32\00", ptr %572, align 1
  %573 = call ptr @make_candy_text(ptr %572)
  store ptr %573, ptr @"Core:fixedDecimal:toText:32", align 8
  %574 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:33\00", ptr %574, align 1
  %575 = call ptr @make_candy_text(ptr %574)
  store ptr %575, ptr @"Core:fixedDecimal:toText:33", align 8
  %576 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:4\00", ptr %576, align 1
  %577 = call ptr @make_candy_text(ptr %576)
  store ptr %577, ptr @"Core:fixedDecimal:toText:4", align 8
  %578 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:7\00", ptr %578, align 1
  %579 = call ptr @make_candy_text(ptr %578)
  store ptr %579, ptr @"Core:fixedDecimal:toText:7", align 8
  %580 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:11\00", ptr %580, align 1
  %581 = call ptr @make_candy_text(ptr %580)
  store ptr %581, ptr @"Core:function:is0:11", align 8
  %582 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:function:is0:9:3\00", ptr %582, align 1
  %583 = call ptr @make_candy_text(ptr %582)
  store ptr %583, ptr @"Core:function:is0:9:3", align 8
  %584 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:11\00", ptr %584, align 1
  %585 = call ptr @make_candy_text(ptr %584)
  store ptr %585, ptr @"Core:function:is1:11", align 8
  %586 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:function:is1:9:3\00", ptr %586, align 1
  %587 = call ptr @make_candy_text(ptr %586)
  store ptr %587, ptr @"Core:function:is1:9:3", align 8
  %588 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:11\00", ptr %588, align 1
  %589 = call ptr @make_candy_text(ptr %588)
  store ptr %589, ptr @"Core:function:is2:11", align 8
  %590 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:function:is2:9:3\00", ptr %590, align 1
  %591 = call ptr @make_candy_text(ptr %590)
  store ptr %591, ptr @"Core:function:is2:9:3", align 8
  %592 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:12\00", ptr %592, align 1
  %593 = call ptr @make_candy_text(ptr %592)
  store ptr %593, ptr @"Core:function:run:12", align 8
  %594 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %594, align 1
  %595 = call ptr @make_candy_text(ptr %594)
  store ptr %595, ptr @"Core:function:run:4", align 8
  %596 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:18\00", ptr %596, align 1
  %597 = call ptr @make_candy_text(ptr %596)
  store ptr %597, ptr @"Core:int:compareTo:18", align 8
  %598 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:4\00", ptr %598, align 1
  %599 = call ptr @make_candy_text(ptr %598)
  store ptr %599, ptr @"Core:int:compareTo:4", align 8
  %600 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %600, align 1
  %601 = call ptr @make_candy_text(ptr %600)
  store ptr %601, ptr @"Core:int:compareTo:9", align 8
  %602 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:4\00", ptr %602, align 1
  %603 = call ptr @make_candy_text(ptr %602)
  store ptr %603, ptr @"Core:int:isEven:4", align 8
  %604 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:8\00", ptr %604, align 1
  %605 = call ptr @make_candy_text(ptr %604)
  store ptr %605, ptr @"Core:int:isEven:8", align 8
  %606 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:13\00", ptr %606, align 1
  %607 = call ptr @make_candy_text(ptr %606)
  store ptr %607, ptr @"Core:int:isGreaterThan:13", align 8
  %608 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:4\00", ptr %608, align 1
  %609 = call ptr @make_candy_text(ptr %608)
  store ptr %609, ptr @"Core:int:isGreaterThan:4", align 8
  %610 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:9\00", ptr %610, align 1
  %611 = call ptr @make_candy_text(ptr %610)
  store ptr %611, ptr @"Core:int:isGreaterThan:9", align 8
  %612 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:13\00", ptr %612, align 1
  %613 = call ptr @make_candy_text(ptr %612)
  store ptr %613, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  %614 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:20\00", ptr %614, align 1
  %615 = call ptr @make_candy_text(ptr %614)
  store ptr %615, ptr @"Core:int:isGreaterThanOrEqualTo:20", align 8
  %616 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:4\00", ptr %616, align 1
  %617 = call ptr @make_candy_text(ptr %616)
  store ptr %617, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  %618 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:9\00", ptr %618, align 1
  %619 = call ptr @make_candy_text(ptr %618)
  store ptr %619, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  %620 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %620, align 1
  %621 = call ptr @make_candy_text(ptr %620)
  store ptr %621, ptr @"Core:int:isLessThan:13", align 8
  %622 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:4\00", ptr %622, align 1
  %623 = call ptr @make_candy_text(ptr %622)
  store ptr %623, ptr @"Core:int:isLessThan:4", align 8
  %624 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %624, align 1
  %625 = call ptr @make_candy_text(ptr %624)
  store ptr %625, ptr @"Core:int:isLessThan:9", align 8
  %626 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:4\00", ptr %626, align 1
  %627 = call ptr @make_candy_text(ptr %626)
  store ptr %627, ptr @"Core:int:isNegative:4", align 8
  %628 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:8\00", ptr %628, align 1
  %629 = call ptr @make_candy_text(ptr %628)
  store ptr %629, ptr @"Core:int:isNegative:8", align 8
  %630 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:14\00", ptr %630, align 1
  %631 = call ptr @make_candy_text(ptr %630)
  store ptr %631, ptr @"Core:int:isNonNegative:14", align 8
  %632 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:4\00", ptr %632, align 1
  %633 = call ptr @make_candy_text(ptr %632)
  store ptr %633, ptr @"Core:int:isNonNegative:4", align 8
  %634 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:7\00", ptr %634, align 1
  %635 = call ptr @make_candy_text(ptr %634)
  store ptr %635, ptr @"Core:int:isNonNegative:7", align 8
  %636 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:4\00", ptr %636, align 1
  %637 = call ptr @make_candy_text(ptr %636)
  store ptr %637, ptr @"Core:int:isOdd:4", align 8
  %638 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:8\00", ptr %638, align 1
  %639 = call ptr @make_candy_text(ptr %638)
  store ptr %639, ptr @"Core:int:isOdd:8", align 8
  %640 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:4\00", ptr %640, align 1
  %641 = call ptr @make_candy_text(ptr %640)
  store ptr %641, ptr @"Core:int:isPositive:4", align 8
  %642 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:8\00", ptr %642, align 1
  %643 = call ptr @make_candy_text(ptr %642)
  store ptr %643, ptr @"Core:int:isPositive:8", align 8
  %644 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:14\00", ptr %644, align 1
  %645 = call ptr @make_candy_text(ptr %644)
  store ptr %645, ptr @"Core:int:max:14", align 8
  %646 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:17\00", ptr %646, align 1
  %647 = call ptr @make_candy_text(ptr %646)
  store ptr %647, ptr @"Core:int:max:17", align 8
  %648 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:4\00", ptr %648, align 1
  %649 = call ptr @make_candy_text(ptr %648)
  store ptr %649, ptr @"Core:int:max:4", align 8
  %650 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:9\00", ptr %650, align 1
  %651 = call ptr @make_candy_text(ptr %650)
  store ptr %651, ptr @"Core:int:max:9", align 8
  %652 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:negate:4\00", ptr %652, align 1
  %653 = call ptr @make_candy_text(ptr %652)
  store ptr %653, ptr @"Core:int:negate:4", align 8
  %654 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:negate:8\00", ptr %654, align 1
  %655 = call ptr @make_candy_text(ptr %654)
  store ptr %655, ptr @"Core:int:negate:8", align 8
  %656 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:12\00", ptr %656, align 1
  %657 = call ptr @make_candy_text(ptr %656)
  store ptr %657, ptr @"Core:int:pow:12", align 8
  %658 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:14\00", ptr %658, align 1
  %659 = call ptr @make_candy_text(ptr %658)
  store ptr %659, ptr @"Core:int:pow:14", align 8
  %660 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:1\00", ptr %660, align 1
  %661 = call ptr @make_candy_text(ptr %660)
  store ptr %661, ptr @"Core:int:pow:21:1", align 8
  %662 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:4\00", ptr %662, align 1
  %663 = call ptr @make_candy_text(ptr %662)
  store ptr %663, ptr @"Core:int:pow:21:4", align 8
  %664 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:4\00", ptr %664, align 1
  %665 = call ptr @make_candy_text(ptr %664)
  store ptr %665, ptr @"Core:int:pow:21:4:4", align 8
  %666 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:10\00", ptr %666, align 1
  %667 = call ptr @make_candy_text(ptr %666)
  store ptr %667, ptr @"Core:int:pow:21:4:5:10", align 8
  %668 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:12\00", ptr %668, align 1
  %669 = call ptr @make_candy_text(ptr %668)
  store ptr %669, ptr @"Core:int:pow:21:4:5:12", align 8
  %670 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:5:5\00", ptr %670, align 1
  %671 = call ptr @make_candy_text(ptr %670)
  store ptr %671, ptr @"Core:int:pow:21:4:5:5", align 8
  %672 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:12\00", ptr %672, align 1
  %673 = call ptr @make_candy_text(ptr %672)
  store ptr %673, ptr @"Core:int:pow:21:4:6:12", align 8
  %674 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:15\00", ptr %674, align 1
  %675 = call ptr @make_candy_text(ptr %674)
  store ptr %675, ptr @"Core:int:pow:21:4:6:15", align 8
  %676 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:17\00", ptr %676, align 1
  %677 = call ptr @make_candy_text(ptr %676)
  store ptr %677, ptr @"Core:int:pow:21:4:6:17", align 8
  %678 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:18\00", ptr %678, align 1
  %679 = call ptr @make_candy_text(ptr %678)
  store ptr %679, ptr @"Core:int:pow:21:4:6:18", align 8
  %680 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:6:7\00", ptr %680, align 1
  %681 = call ptr @make_candy_text(ptr %680)
  store ptr %681, ptr @"Core:int:pow:21:4:6:7", align 8
  %682 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:7\00", ptr %682, align 1
  %683 = call ptr @make_candy_text(ptr %682)
  store ptr %683, ptr @"Core:int:pow:21:4:7", align 8
  %684 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:pow:21:base\00", ptr %684, align 1
  %685 = call ptr @make_candy_text(ptr %684)
  store ptr %685, ptr @"Core:int:pow:21:base", align 8
  %686 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:pow:21:exponent\00", ptr %686, align 1
  %687 = call ptr @make_candy_text(ptr %686)
  store ptr %687, ptr @"Core:int:pow:21:exponent", align 8
  %688 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:22\00", ptr %688, align 1
  %689 = call ptr @make_candy_text(ptr %688)
  store ptr %689, ptr @"Core:int:pow:22", align 8
  %690 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:9\00", ptr %690, align 1
  %691 = call ptr @make_candy_text(ptr %690)
  store ptr %691, ptr @"Core:int:pow:9", align 8
  %692 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:129\00", ptr %692, align 1
  %693 = call ptr @make_candy_text(ptr %692)
  store ptr %693, ptr @"Core:iterator:129", align 8
  %694 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:16:11\00", ptr %694, align 1
  %695 = call ptr @make_candy_text(ptr %694)
  store ptr %695, ptr @"Core:iterator:all:16:11", align 8
  %696 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:16:13\00", ptr %696, align 1
  %697 = call ptr @make_candy_text(ptr %696)
  store ptr %697, ptr @"Core:iterator:all:16:13", align 8
  %698 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:16:22\00", ptr %698, align 1
  %699 = call ptr @make_candy_text(ptr %698)
  store ptr %699, ptr @"Core:iterator:all:16:22", align 8
  %700 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:17\00", ptr %700, align 1
  %701 = call ptr @make_candy_text(ptr %700)
  store ptr %701, ptr @"Core:iterator:all:17", align 8
  %702 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:16:11\00", ptr %702, align 1
  %703 = call ptr @make_candy_text(ptr %702)
  store ptr %703, ptr @"Core:iterator:any:16:11", align 8
  %704 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:16:13\00", ptr %704, align 1
  %705 = call ptr @make_candy_text(ptr %704)
  store ptr %705, ptr @"Core:iterator:any:16:13", align 8
  %706 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:16:22\00", ptr %706, align 1
  %707 = call ptr @make_candy_text(ptr %706)
  store ptr %707, ptr @"Core:iterator:any:16:22", align 8
  %708 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:17\00", ptr %708, align 1
  %709 = call ptr @make_candy_text(ptr %708)
  store ptr %709, ptr @"Core:iterator:any:17", align 8
  %710 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:28\00", ptr %710, align 1
  %711 = call ptr @make_candy_text(ptr %710)
  store ptr %711, ptr @"Core:iterator:chunked:28", align 8
  %712 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:13\00", ptr %712, align 1
  %713 = call ptr @make_candy_text(ptr %712)
  store ptr %713, ptr @"Core:iterator:ensure:13", align 8
  %714 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:ensure:17:2\00", ptr %714, align 1
  %715 = call ptr @make_candy_text(ptr %714)
  store ptr %715, ptr @"Core:iterator:ensure:17:2", align 8
  %716 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:18\00", ptr %716, align 1
  %717 = call ptr @make_candy_text(ptr %716)
  store ptr %717, ptr @"Core:iterator:ensure:18", align 8
  %718 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:ensure:9\00", ptr %718, align 1
  %719 = call ptr @make_candy_text(ptr %718)
  store ptr %719, ptr @"Core:iterator:ensure:9", align 8
  %720 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:14\00", ptr %720, align 1
  %721 = call ptr @make_candy_text(ptr %720)
  store ptr %721, ptr @"Core:iterator:foldLeft:14", align 8
  %722 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:21:1\00", ptr %722, align 1
  %723 = call ptr @make_candy_text(ptr %722)
  store ptr %723, ptr @"Core:iterator:foldLeft:21:1", align 8
  %724 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:21:4\00", ptr %724, align 1
  %725 = call ptr @make_candy_text(ptr %724)
  store ptr %725, ptr @"Core:iterator:foldLeft:21:4", align 8
  %726 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:21:5\00", ptr %726, align 1
  %727 = call ptr @make_candy_text(ptr %726)
  store ptr %727, ptr @"Core:iterator:foldLeft:21:5", align 8
  %728 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:foldLeft:21:5:10\00", ptr %728, align 1
  %729 = call ptr @make_candy_text(ptr %728)
  store ptr %729, ptr @"Core:iterator:foldLeft:21:5:10", align 8
  %730 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:foldLeft:21:5:8\00", ptr %730, align 1
  %731 = call ptr @make_candy_text(ptr %730)
  store ptr %731, ptr @"Core:iterator:foldLeft:21:5:8", align 8
  %732 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:21:5:item\00", ptr %732, align 1
  %733 = call ptr @make_candy_text(ptr %732)
  store ptr %733, ptr @"Core:iterator:foldLeft:21:5:item", align 8
  %734 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:21:5:rest\00", ptr %734, align 1
  %735 = call ptr @make_candy_text(ptr %734)
  store ptr %735, ptr @"Core:iterator:foldLeft:21:5:rest", align 8
  %736 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:foldLeft:21:iterator\00", ptr %736, align 1
  %737 = call ptr @make_candy_text(ptr %736)
  store ptr %737, ptr @"Core:iterator:foldLeft:21:iterator", align 8
  %738 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:foldLeft:21:value\00", ptr %738, align 1
  %739 = call ptr @make_candy_text(ptr %738)
  store ptr %739, ptr @"Core:iterator:foldLeft:21:value", align 8
  %740 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:22\00", ptr %740, align 1
  %741 = call ptr @make_candy_text(ptr %740)
  store ptr %741, ptr @"Core:iterator:foldLeft:22", align 8
  %742 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:foldLeft:3\00", ptr %742, align 1
  %743 = call ptr @make_candy_text(ptr %742)
  store ptr %743, ptr @"Core:iterator:foldLeft:3", align 8
  %744 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:fromList:19:8\00", ptr %744, align 1
  %745 = call ptr @make_candy_text(ptr %744)
  store ptr %745, ptr @"Core:iterator:fromList:19:8", align 8
  %746 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:generate:42:6:14\00", ptr %746, align 1
  %747 = call ptr @make_candy_text(ptr %746)
  store ptr %747, ptr @"Core:iterator:generate:42:6:14", align 8
  %748 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:generate:42:7\00", ptr %748, align 1
  %749 = call ptr @make_candy_text(ptr %748)
  store ptr %749, ptr @"Core:iterator:generate:42:7", align 8
  %750 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:43\00", ptr %750, align 1
  %751 = call ptr @make_candy_text(ptr %750)
  store ptr %751, ptr @"Core:iterator:generate:43", align 8
  %752 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:12:1:2\00", ptr %752, align 1
  %753 = call ptr @make_candy_text(ptr %752)
  store ptr %753, ptr @"Core:iterator:generateWithState:12:1:2", align 8
  %754 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:12:1:3\00", ptr %754, align 1
  %755 = call ptr @make_candy_text(ptr %754)
  store ptr %755, ptr @"Core:iterator:generateWithState:12:1:3", align 8
  %756 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:19\00", ptr %756, align 1
  %757 = call ptr @make_candy_text(ptr %756)
  store ptr %757, ptr @"Core:iterator:generateWithState:12:1:3:19", align 8
  %758 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:20\00", ptr %758, align 1
  %759 = call ptr @make_candy_text(ptr %758)
  store ptr %759, ptr @"Core:iterator:generateWithState:12:1:3:20", align 8
  %760 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:12:1:3:22:0\00", ptr %760, align 1
  %761 = call ptr @make_candy_text(ptr %760)
  store ptr %761, ptr @"Core:iterator:generateWithState:12:1:3:22:0", align 8
  %762 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:23\00", ptr %762, align 1
  %763 = call ptr @make_candy_text(ptr %762)
  store ptr %763, ptr @"Core:iterator:generateWithState:12:1:3:23", align 8
  %764 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:25\00", ptr %764, align 1
  %765 = call ptr @make_candy_text(ptr %764)
  store ptr %765, ptr @"Core:iterator:generateWithState:12:1:3:25", align 8
  %766 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:26\00", ptr %766, align 1
  %767 = call ptr @make_candy_text(ptr %766)
  store ptr %767, ptr @"Core:iterator:generateWithState:12:1:3:26", align 8
  %768 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:27\00", ptr %768, align 1
  %769 = call ptr @make_candy_text(ptr %768)
  store ptr %769, ptr @"Core:iterator:generateWithState:12:1:3:27", align 8
  %770 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:iterator:generateWithState:12:1:3:6\00", ptr %770, align 1
  %771 = call ptr @make_candy_text(ptr %770)
  store ptr %771, ptr @"Core:iterator:generateWithState:12:1:3:6", align 8
  %772 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:12:1:3:item\00", ptr %772, align 1
  %773 = call ptr @make_candy_text(ptr %772)
  store ptr %773, ptr @"Core:iterator:generateWithState:12:1:3:item", align 8
  %774 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:iterator:generateWithState:12:1:3:state\00", ptr %774, align 1
  %775 = call ptr @make_candy_text(ptr %774)
  store ptr %775, ptr @"Core:iterator:generateWithState:12:1:3:state", align 8
  %776 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:generateWithState:13\00", ptr %776, align 1
  %777 = call ptr @make_candy_text(ptr %776)
  store ptr %777, ptr @"Core:iterator:generateWithState:13", align 8
  %778 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:generateWithState:9\00", ptr %778, align 1
  %779 = call ptr @make_candy_text(ptr %778)
  store ptr %779, ptr @"Core:iterator:generateWithState:9", align 8
  %780 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:7\00", ptr %780, align 1
  %781 = call ptr @make_candy_text(ptr %780)
  store ptr %781, ptr @"Core:iterator:isEmpty:7", align 8
  %782 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:joinToText:12:18\00", ptr %782, align 1
  %783 = call ptr @make_candy_text(ptr %782)
  store ptr %783, ptr @"Core:iterator:joinToText:12:18", align 8
  %784 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:joinToText:12:9\00", ptr %784, align 1
  %785 = call ptr @make_candy_text(ptr %784)
  store ptr %785, ptr @"Core:iterator:joinToText:12:9", align 8
  %786 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:joinToText:13\00", ptr %786, align 1
  %787 = call ptr @make_candy_text(ptr %786)
  store ptr %787, ptr @"Core:iterator:joinToText:13", align 8
  %788 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:joinToText:3\00", ptr %788, align 1
  %789 = call ptr @make_candy_text(ptr %788)
  store ptr %789, ptr @"Core:iterator:joinToText:3", align 8
  %790 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:6\00", ptr %790, align 1
  %791 = call ptr @make_candy_text(ptr %790)
  store ptr %791, ptr @"Core:iterator:length:6", align 8
  %792 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:8\00", ptr %792, align 1
  %793 = call ptr @make_candy_text(ptr %792)
  store ptr %793, ptr @"Core:iterator:length:8", align 8
  %794 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:14\00", ptr %794, align 1
  %795 = call ptr @make_candy_text(ptr %794)
  store ptr %795, ptr @"Core:iterator:map:14", align 8
  %796 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:17:2\00", ptr %796, align 1
  %797 = call ptr @make_candy_text(ptr %796)
  store ptr %797, ptr @"Core:iterator:map:17:2", align 8
  %798 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:17:3\00", ptr %798, align 1
  %799 = call ptr @make_candy_text(ptr %798)
  store ptr %799, ptr @"Core:iterator:map:17:3", align 8
  %800 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:map:17:3:5\00", ptr %800, align 1
  %801 = call ptr @make_candy_text(ptr %800)
  store ptr %801, ptr @"Core:iterator:map:17:3:5", align 8
  %802 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:17:3:item\00", ptr %802, align 1
  %803 = call ptr @make_candy_text(ptr %802)
  store ptr %803, ptr @"Core:iterator:map:17:3:item", align 8
  %804 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:17:3:rest\00", ptr %804, align 1
  %805 = call ptr @make_candy_text(ptr %804)
  store ptr %805, ptr @"Core:iterator:map:17:3:rest", align 8
  %806 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:18\00", ptr %806, align 1
  %807 = call ptr @make_candy_text(ptr %806)
  store ptr %807, ptr @"Core:iterator:map:18", align 8
  %808 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:map:3\00", ptr %808, align 1
  %809 = call ptr @make_candy_text(ptr %808)
  store ptr %809, ptr @"Core:iterator:map:3", align 8
  %810 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:next:15\00", ptr %810, align 1
  %811 = call ptr @make_candy_text(ptr %810)
  store ptr %811, ptr @"Core:iterator:next:15", align 8
  %812 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:3\00", ptr %812, align 1
  %813 = call ptr @make_candy_text(ptr %812)
  store ptr %813, ptr @"Core:iterator:next:3", align 8
  %814 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:6\00", ptr %814, align 1
  %815 = call ptr @make_candy_text(ptr %814)
  store ptr %815, ptr @"Core:iterator:next:6", align 8
  %816 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:next:nextFunction\00", ptr %816, align 1
  %817 = call ptr @make_candy_text(ptr %816)
  store ptr %817, ptr @"Core:iterator:next:nextFunction", align 8
  %818 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:13\00", ptr %818, align 1
  %819 = call ptr @make_candy_text(ptr %818)
  store ptr %819, ptr @"Core:iterator:reduceLeft:13", align 8
  %820 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:15\00", ptr %820, align 1
  %821 = call ptr @make_candy_text(ptr %820)
  store ptr %821, ptr @"Core:iterator:reduceLeft:15", align 8
  %822 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:16\00", ptr %822, align 1
  %823 = call ptr @make_candy_text(ptr %822)
  store ptr %823, ptr @"Core:iterator:reduceLeft:16", align 8
  %824 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:reduceLeft:16:14\00", ptr %824, align 1
  %825 = call ptr @make_candy_text(ptr %824)
  store ptr %825, ptr @"Core:iterator:reduceLeft:16:14", align 8
  %826 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:16:item\00", ptr %826, align 1
  %827 = call ptr @make_candy_text(ptr %826)
  store ptr %827, ptr @"Core:iterator:reduceLeft:16:item", align 8
  %828 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:16:rest\00", ptr %828, align 1
  %829 = call ptr @make_candy_text(ptr %828)
  store ptr %829, ptr @"Core:iterator:reduceLeft:16:rest", align 8
  %830 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:reduceLeft:9\00", ptr %830, align 1
  %831 = call ptr @make_candy_text(ptr %830)
  store ptr %831, ptr @"Core:iterator:reduceLeft:9", align 8
  %832 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:14\00", ptr %832, align 1
  %833 = call ptr @make_candy_text(ptr %832)
  store ptr %833, ptr @"Core:iterator:skip:14", align 8
  %834 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:22\00", ptr %834, align 1
  %835 = call ptr @make_candy_text(ptr %834)
  store ptr %835, ptr @"Core:iterator:skip:22", align 8
  %836 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:24\00", ptr %836, align 1
  %837 = call ptr @make_candy_text(ptr %836)
  store ptr %837, ptr @"Core:iterator:skip:24", align 8
  %838 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:26:6:1\00", ptr %838, align 1
  %839 = call ptr @make_candy_text(ptr %838)
  store ptr %839, ptr @"Core:iterator:skip:26:6:1", align 8
  %840 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:26:6:7:2\00", ptr %840, align 1
  %841 = call ptr @make_candy_text(ptr %840)
  store ptr %841, ptr @"Core:iterator:skip:26:6:7:2", align 8
  %842 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:26:6:8:2\00", ptr %842, align 1
  %843 = call ptr @make_candy_text(ptr %842)
  store ptr %843, ptr @"Core:iterator:skip:26:6:8:2", align 8
  %844 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:26:6:8:3\00", ptr %844, align 1
  %845 = call ptr @make_candy_text(ptr %844)
  store ptr %845, ptr @"Core:iterator:skip:26:6:8:3", align 8
  %846 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:26:6:8:3:13\00", ptr %846, align 1
  %847 = call ptr @make_candy_text(ptr %846)
  store ptr %847, ptr @"Core:iterator:skip:26:6:8:3:13", align 8
  %848 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:26:6:8:3:15\00", ptr %848, align 1
  %849 = call ptr @make_candy_text(ptr %848)
  store ptr %849, ptr @"Core:iterator:skip:26:6:8:3:15", align 8
  %850 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:26:6:8:3:rest\00", ptr %850, align 1
  %851 = call ptr @make_candy_text(ptr %850)
  store ptr %851, ptr @"Core:iterator:skip:26:6:8:3:rest", align 8
  %852 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:26:6:9\00", ptr %852, align 1
  %853 = call ptr @make_candy_text(ptr %852)
  store ptr %853, ptr @"Core:iterator:skip:26:6:9", align 8
  %854 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:26:6:iterator\00", ptr %854, align 1
  %855 = call ptr @make_candy_text(ptr %854)
  store ptr %855, ptr @"Core:iterator:skip:26:6:iterator", align 8
  %856 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:26:6:n\00", ptr %856, align 1
  %857 = call ptr @make_candy_text(ptr %856)
  store ptr %857, ptr @"Core:iterator:skip:26:6:n", align 8
  %858 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:skip:26:7\00", ptr %858, align 1
  %859 = call ptr @make_candy_text(ptr %858)
  store ptr %859, ptr @"Core:iterator:skip:26:7", align 8
  %860 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:sum:17\00", ptr %860, align 1
  %861 = call ptr @make_candy_text(ptr %860)
  store ptr %861, ptr @"Core:iterator:sum:17", align 8
  %862 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:3\00", ptr %862, align 1
  %863 = call ptr @make_candy_text(ptr %862)
  store ptr %863, ptr @"Core:iterator:sum:3", align 8
  %864 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:sum:5:15\00", ptr %864, align 1
  %865 = call ptr @make_candy_text(ptr %864)
  store ptr %865, ptr @"Core:iterator:sum:5:15", align 8
  %866 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:6\00", ptr %866, align 1
  %867 = call ptr @make_candy_text(ptr %866)
  store ptr %867, ptr @"Core:iterator:sum:6", align 8
  %868 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:sum:8:8\00", ptr %868, align 1
  %869 = call ptr @make_candy_text(ptr %868)
  store ptr %869, ptr @"Core:iterator:sum:8:8", align 8
  %870 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:9\00", ptr %870, align 1
  %871 = call ptr @make_candy_text(ptr %870)
  store ptr %871, ptr @"Core:iterator:sum:9", align 8
  %872 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:17\00", ptr %872, align 1
  %873 = call ptr @make_candy_text(ptr %872)
  store ptr %873, ptr @"Core:iterator:take:17", align 8
  %874 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:19\00", ptr %874, align 1
  %875 = call ptr @make_candy_text(ptr %874)
  store ptr %875, ptr @"Core:iterator:take:19", align 8
  %876 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:25\00", ptr %876, align 1
  %877 = call ptr @make_candy_text(ptr %876)
  store ptr %877, ptr @"Core:iterator:take:25", align 8
  %878 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:27:1\00", ptr %878, align 1
  %879 = call ptr @make_candy_text(ptr %878)
  store ptr %879, ptr @"Core:iterator:take:27:1", align 8
  %880 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:take:27:10\00", ptr %880, align 1
  %881 = call ptr @make_candy_text(ptr %880)
  store ptr %881, ptr @"Core:iterator:take:27:10", align 8
  %882 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:take:27:index\00", ptr %882, align 1
  %883 = call ptr @make_candy_text(ptr %882)
  store ptr %883, ptr @"Core:iterator:take:27:index", align 8
  %884 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:28\00", ptr %884, align 1
  %885 = call ptr @make_candy_text(ptr %884)
  store ptr %885, ptr @"Core:iterator:take:28", align 8
  %886 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:30:5\00", ptr %886, align 1
  %887 = call ptr @make_candy_text(ptr %886)
  store ptr %887, ptr @"Core:iterator:take:30:5", align 8
  %888 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:31\00", ptr %888, align 1
  %889 = call ptr @make_candy_text(ptr %888)
  store ptr %889, ptr @"Core:iterator:take:31", align 8
  %890 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:take:9\00", ptr %890, align 1
  %891 = call ptr @make_candy_text(ptr %890)
  store ptr %891, ptr @"Core:iterator:take:9", align 8
  %892 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:3\00", ptr %892, align 1
  %893 = call ptr @make_candy_text(ptr %892)
  store ptr %893, ptr @"Core:iterator:takeWhile:3", align 8
  %894 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:2\00", ptr %894, align 1
  %895 = call ptr @make_candy_text(ptr %894)
  store ptr %895, ptr @"Core:iterator:takeWhile:7:2", align 8
  %896 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:3\00", ptr %896, align 1
  %897 = call ptr @make_candy_text(ptr %896)
  store ptr %897, ptr @"Core:iterator:takeWhile:7:3", align 8
  %898 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:4\00", ptr %898, align 1
  %899 = call ptr @make_candy_text(ptr %898)
  store ptr %899, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  %900 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:7\00", ptr %900, align 1
  %901 = call ptr @make_candy_text(ptr %900)
  store ptr %901, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  %902 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:item\00", ptr %902, align 1
  %903 = call ptr @make_candy_text(ptr %902)
  store ptr %903, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  %904 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:rest\00", ptr %904, align 1
  %905 = call ptr @make_candy_text(ptr %904)
  store ptr %905, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  %906 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:8\00", ptr %906, align 1
  %907 = call ptr @make_candy_text(ptr %906)
  store ptr %907, ptr @"Core:iterator:takeWhile:8", align 8
  %908 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:3\00", ptr %908, align 1
  %909 = call ptr @make_candy_text(ptr %908)
  store ptr %909, ptr @"Core:iterator:toList:3", align 8
  %910 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:toList:6:8\00", ptr %910, align 1
  %911 = call ptr @make_candy_text(ptr %910)
  store ptr %911, ptr @"Core:iterator:toList:6:8", align 8
  %912 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:7\00", ptr %912, align 1
  %913 = call ptr @make_candy_text(ptr %912)
  store ptr %913, ptr @"Core:iterator:toList:7", align 8
  %914 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:17:2:2\00", ptr %914, align 1
  %915 = call ptr @make_candy_text(ptr %914)
  store ptr %915, ptr @"Core:iterator:where:17:2:2", align 8
  %916 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:17:2:3\00", ptr %916, align 1
  %917 = call ptr @make_candy_text(ptr %916)
  store ptr %917, ptr @"Core:iterator:where:17:2:3", align 8
  %918 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:17:2:3:4\00", ptr %918, align 1
  %919 = call ptr @make_candy_text(ptr %918)
  store ptr %919, ptr @"Core:iterator:where:17:2:3:4", align 8
  %920 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:17:2:3:6:2\00", ptr %920, align 1
  %921 = call ptr @make_candy_text(ptr %920)
  store ptr %921, ptr @"Core:iterator:where:17:2:3:6:2", align 8
  %922 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:17:2:3:6:4\00", ptr %922, align 1
  %923 = call ptr @make_candy_text(ptr %922)
  store ptr %923, ptr @"Core:iterator:where:17:2:3:6:4", align 8
  %924 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:17:2:3:6:5\00", ptr %924, align 1
  %925 = call ptr @make_candy_text(ptr %924)
  store ptr %925, ptr @"Core:iterator:where:17:2:3:6:5", align 8
  %926 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:17:2:3:6:5:item\00", ptr %926, align 1
  %927 = call ptr @make_candy_text(ptr %926)
  store ptr %927, ptr @"Core:iterator:where:17:2:3:6:5:item", align 8
  %928 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:17:2:3:6:5:rest\00", ptr %928, align 1
  %929 = call ptr @make_candy_text(ptr %928)
  store ptr %929, ptr @"Core:iterator:where:17:2:3:6:5:rest", align 8
  %930 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:17:2:3:7\00", ptr %930, align 1
  %931 = call ptr @make_candy_text(ptr %930)
  store ptr %931, ptr @"Core:iterator:where:17:2:3:7", align 8
  %932 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:17:2:3:item\00", ptr %932, align 1
  %933 = call ptr @make_candy_text(ptr %932)
  store ptr %933, ptr @"Core:iterator:where:17:2:3:item", align 8
  %934 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:17:2:3:rest\00", ptr %934, align 1
  %935 = call ptr @make_candy_text(ptr %934)
  store ptr %935, ptr @"Core:iterator:where:17:2:3:rest", align 8
  %936 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:where:17:3\00", ptr %936, align 1
  %937 = call ptr @make_candy_text(ptr %936)
  store ptr %937, ptr @"Core:iterator:where:17:3", align 8
  %938 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:18\00", ptr %938, align 1
  %939 = call ptr @make_candy_text(ptr %938)
  store ptr %939, ptr @"Core:iterator:where:18", align 8
  %940 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:14\00", ptr %940, align 1
  %941 = call ptr @make_candy_text(ptr %940)
  store ptr %941, ptr @"Core:iterator:windowed:14", align 8
  %942 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:22\00", ptr %942, align 1
  %943 = call ptr @make_candy_text(ptr %942)
  store ptr %943, ptr @"Core:iterator:windowed:22", align 8
  %944 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:24\00", ptr %944, align 1
  %945 = call ptr @make_candy_text(ptr %944)
  store ptr %945, ptr @"Core:iterator:windowed:24", align 8
  %946 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:windowed:3\00", ptr %946, align 1
  %947 = call ptr @make_candy_text(ptr %946)
  store ptr %947, ptr @"Core:iterator:windowed:3", align 8
  %948 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:34\00", ptr %948, align 1
  %949 = call ptr @make_candy_text(ptr %948)
  store ptr %949, ptr @"Core:iterator:windowed:34", align 8
  %950 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:42\00", ptr %950, align 1
  %951 = call ptr @make_candy_text(ptr %950)
  store ptr %951, ptr @"Core:iterator:windowed:42", align 8
  %952 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:44\00", ptr %952, align 1
  %953 = call ptr @make_candy_text(ptr %952)
  store ptr %953, ptr @"Core:iterator:windowed:44", align 8
  %954 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:54\00", ptr %954, align 1
  %955 = call ptr @make_candy_text(ptr %954)
  store ptr %955, ptr @"Core:iterator:windowed:54", align 8
  %956 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:57:14\00", ptr %956, align 1
  %957 = call ptr @make_candy_text(ptr %956)
  store ptr %957, ptr @"Core:iterator:windowed:57:14", align 8
  %958 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:windowed:57:18:7\00", ptr %958, align 1
  %959 = call ptr @make_candy_text(ptr %958)
  store ptr %959, ptr @"Core:iterator:windowed:57:18:7", align 8
  %960 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:57:20\00", ptr %960, align 1
  %961 = call ptr @make_candy_text(ptr %960)
  store ptr %961, ptr @"Core:iterator:windowed:57:20", align 8
  %962 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:windowed:57:24:7\00", ptr %962, align 1
  %963 = call ptr @make_candy_text(ptr %962)
  store ptr %963, ptr @"Core:iterator:windowed:57:24:7", align 8
  %964 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:57:26\00", ptr %964, align 1
  %965 = call ptr @make_candy_text(ptr %964)
  store ptr %965, ptr @"Core:iterator:windowed:57:26", align 8
  %966 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:57:3\00", ptr %966, align 1
  %967 = call ptr @make_candy_text(ptr %966)
  store ptr %967, ptr @"Core:iterator:windowed:57:3", align 8
  %968 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:57:5\00", ptr %968, align 1
  %969 = call ptr @make_candy_text(ptr %968)
  store ptr %969, ptr @"Core:iterator:windowed:57:5", align 8
  %970 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:58\00", ptr %970, align 1
  %971 = call ptr @make_candy_text(ptr %970)
  store ptr %971, ptr @"Core:iterator:windowed:58", align 8
  %972 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:1\00", ptr %972, align 1
  %973 = call ptr @make_candy_text(ptr %972)
  store ptr %973, ptr @"Core:iterator:withIndex:11:1", align 8
  %974 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:4\00", ptr %974, align 1
  %975 = call ptr @make_candy_text(ptr %974)
  store ptr %975, ptr @"Core:iterator:withIndex:11:4", align 8
  %976 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:5\00", ptr %976, align 1
  %977 = call ptr @make_candy_text(ptr %976)
  store ptr %977, ptr @"Core:iterator:withIndex:11:5", align 8
  %978 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:withIndex:11:5:20\00", ptr %978, align 1
  %979 = call ptr @make_candy_text(ptr %978)
  store ptr %979, ptr @"Core:iterator:withIndex:11:5:20", align 8
  %980 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:item\00", ptr %980, align 1
  %981 = call ptr @make_candy_text(ptr %980)
  store ptr %981, ptr @"Core:iterator:withIndex:11:5:item", align 8
  %982 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:rest\00", ptr %982, align 1
  %983 = call ptr @make_candy_text(ptr %982)
  store ptr %983, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  %984 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:withIndex:11:index\00", ptr %984, align 1
  %985 = call ptr @make_candy_text(ptr %984)
  store ptr %985, ptr @"Core:iterator:withIndex:11:index", align 8
  %986 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:withIndex:11:iterator\00", ptr %986, align 1
  %987 = call ptr @make_candy_text(ptr %986)
  store ptr %987, ptr @"Core:iterator:withIndex:11:iterator", align 8
  %988 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:withIndex:12\00", ptr %988, align 1
  %989 = call ptr @make_candy_text(ptr %988)
  store ptr %989, ptr @"Core:iterator:withIndex:12", align 8
  %990 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:withIndex:3\00", ptr %990, align 1
  %991 = call ptr @make_candy_text(ptr %990)
  store ptr %991, ptr @"Core:iterator:withIndex:3", align 8
  %992 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:10:7\00", ptr %992, align 1
  %993 = call ptr @make_candy_text(ptr %992)
  store ptr %993, ptr @"Core:iterator:wrapSafe:10:7", align 8
  %994 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:14:1\00", ptr %994, align 1
  %995 = call ptr @make_candy_text(ptr %994)
  store ptr %995, ptr @"Core:iterator:wrapSafe:14:1", align 8
  %996 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:14:11\00", ptr %996, align 1
  %997 = call ptr @make_candy_text(ptr %996)
  store ptr %997, ptr @"Core:iterator:wrapSafe:14:11", align 8
  %998 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:14:18\00", ptr %998, align 1
  %999 = call ptr @make_candy_text(ptr %998)
  store ptr %999, ptr @"Core:iterator:wrapSafe:14:18", align 8
  %1000 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:wrapSafe:14:1:8\00", ptr %1000, align 1
  %1001 = call ptr @make_candy_text(ptr %1000)
  store ptr %1001, ptr @"Core:iterator:wrapSafe:14:1:8", align 8
  %1002 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:14:1:function\00", ptr %1002, align 1
  %1003 = call ptr @make_candy_text(ptr %1002)
  store ptr %1003, ptr @"Core:iterator:wrapSafe:14:1:function", align 8
  %1004 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:14:20\00", ptr %1004, align 1
  %1005 = call ptr @make_candy_text(ptr %1004)
  store ptr %1005, ptr @"Core:iterator:wrapSafe:14:20", align 8
  %1006 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:14:22:7\00", ptr %1006, align 1
  %1007 = call ptr @make_candy_text(ptr %1006)
  store ptr %1007, ptr @"Core:iterator:wrapSafe:14:22:7", align 8
  %1008 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:14:22:8\00", ptr %1008, align 1
  %1009 = call ptr @make_candy_text(ptr %1008)
  store ptr %1009, ptr @"Core:iterator:wrapSafe:14:22:8", align 8
  %1010 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:wrapSafe:14:22:8:17\00", ptr %1010, align 1
  %1011 = call ptr @make_candy_text(ptr %1010)
  store ptr %1011, ptr @"Core:iterator:wrapSafe:14:22:8:17", align 8
  %1012 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:wrapSafe:14:22:8:7\00", ptr %1012, align 1
  %1013 = call ptr @make_candy_text(ptr %1012)
  store ptr %1013, ptr @"Core:iterator:wrapSafe:14:22:8:7", align 8
  %1014 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:wrapSafe:14:22:8:item\00", ptr %1014, align 1
  %1015 = call ptr @make_candy_text(ptr %1014)
  store ptr %1015, ptr @"Core:iterator:wrapSafe:14:22:8:item", align 8
  %1016 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:wrapSafe:14:22:8:rest\00", ptr %1016, align 1
  %1017 = call ptr @make_candy_text(ptr %1016)
  store ptr %1017, ptr @"Core:iterator:wrapSafe:14:22:8:rest", align 8
  %1018 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:wrapSafe:15\00", ptr %1018, align 1
  %1019 = call ptr @make_candy_text(ptr %1018)
  store ptr %1019, ptr @"Core:iterator:wrapSafe:15", align 8
  %1020 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:wrapSafe:9\00", ptr %1020, align 1
  %1021 = call ptr @make_candy_text(ptr %1020)
  store ptr %1021, ptr @"Core:iterator:wrapSafe:9", align 8
  %1022 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:append:11\00", ptr %1022, align 1
  %1023 = call ptr @make_candy_text(ptr %1022)
  store ptr %1023, ptr @"Core:list:append:11", align 8
  %1024 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:4\00", ptr %1024, align 1
  %1025 = call ptr @make_candy_text(ptr %1024)
  store ptr %1025, ptr @"Core:list:append:4", align 8
  %1026 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:9\00", ptr %1026, align 1
  %1027 = call ptr @make_candy_text(ptr %1026)
  store ptr %1027, ptr @"Core:list:append:9", align 8
  %1028 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %1028, align 1
  %1029 = call ptr @make_candy_text(ptr %1028)
  store ptr %1029, ptr @"Core:result:is:1", align 8
  %1030 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:14\00", ptr %1030, align 1
  %1031 = call ptr @make_candy_text(ptr %1030)
  store ptr %1031, ptr @"Core:result:mapOrElse:14", align 8
  %1032 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:24\00", ptr %1032, align 1
  %1033 = call ptr @make_candy_text(ptr %1032)
  store ptr %1033, ptr @"Core:result:mapOrElse:24", align 8
  %1034 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:26\00", ptr %1034, align 1
  %1035 = call ptr @make_candy_text(ptr %1034)
  store ptr %1035, ptr @"Core:result:mapOrElse:26", align 8
  %1036 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:26:2\00", ptr %1036, align 1
  %1037 = call ptr @make_candy_text(ptr %1036)
  store ptr %1037, ptr @"Core:result:mapOrElse:26:2", align 8
  %1038 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:26:5\00", ptr %1038, align 1
  %1039 = call ptr @make_candy_text(ptr %1038)
  store ptr %1039, ptr @"Core:result:mapOrElse:26:5", align 8
  %1040 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:26:value\00", ptr %1040, align 1
  %1041 = call ptr @make_candy_text(ptr %1040)
  store ptr %1041, ptr @"Core:result:mapOrElse:26:value", align 8
  %1042 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:26:value#1\00", ptr %1042, align 1
  %1043 = call ptr @make_candy_text(ptr %1042)
  store ptr %1043, ptr @"Core:result:mapOrElse:26:value#1", align 8
  %1044 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %1044, align 1
  %1045 = call ptr @make_candy_text(ptr %1044)
  store ptr %1045, ptr @"Core:result:mapOrElse:4", align 8
  %1046 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:4\00", ptr %1046, align 1
  %1047 = call ptr @make_candy_text(ptr %1046)
  store ptr %1047, ptr @"Core:result:unwrapOr:4", align 8
  %1048 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:8\00", ptr %1048, align 1
  %1049 = call ptr @make_candy_text(ptr %1048)
  store ptr %1049, ptr @"Core:result:unwrapOr:8", align 8
  %1050 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:14\00", ptr %1050, align 1
  %1051 = call ptr @make_candy_text(ptr %1050)
  store ptr %1051, ptr @"Core:result:unwrapOrElse:14", align 8
  %1052 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:18:7\00", ptr %1052, align 1
  %1053 = call ptr @make_candy_text(ptr %1052)
  store ptr %1053, ptr @"Core:result:unwrapOrElse:18:7", align 8
  %1054 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:19\00", ptr %1054, align 1
  %1055 = call ptr @make_candy_text(ptr %1054)
  store ptr %1055, ptr @"Core:result:unwrapOrElse:19", align 8
  %1056 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:4\00", ptr %1056, align 1
  %1057 = call ptr @make_candy_text(ptr %1056)
  store ptr %1057, ptr @"Core:result:unwrapOrElse:4", align 8
  %1058 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removePrefix:14\00", ptr %1058, align 1
  %1059 = call ptr @make_candy_text(ptr %1058)
  store ptr %1059, ptr @"Core:text:removePrefix:14", align 8
  %1060 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:4\00", ptr %1060, align 1
  %1061 = call ptr @make_candy_text(ptr %1060)
  store ptr %1061, ptr @"Core:text:removePrefix:15:4", align 8
  %1062 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:7\00", ptr %1062, align 1
  %1063 = call ptr @make_candy_text(ptr %1062)
  store ptr %1063, ptr @"Core:text:removePrefix:15:7", align 8
  %1064 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:8\00", ptr %1064, align 1
  %1065 = call ptr @make_candy_text(ptr %1064)
  store ptr %1065, ptr @"Core:text:removePrefix:15:8", align 8
  %1066 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removePrefix:17\00", ptr %1066, align 1
  %1067 = call ptr @make_candy_text(ptr %1066)
  store ptr %1067, ptr @"Core:text:removePrefix:17", align 8
  %1068 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removePrefix:4\00", ptr %1068, align 1
  %1069 = call ptr @make_candy_text(ptr %1068)
  store ptr %1069, ptr @"Core:text:removePrefix:4", align 8
  %1070 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removePrefix:9\00", ptr %1070, align 1
  %1071 = call ptr @make_candy_text(ptr %1070)
  store ptr %1071, ptr @"Core:text:removePrefix:9", align 8
  %1072 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %1072, align 1
  %1073 = call ptr @make_candy_text(ptr %1072)
  store ptr %1073, ptr @"anonymous:$generated::needs", align 8
  %1074 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %1074, ptr @fun_candy_builtin_equals, align 8
  %1075 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %1075, ptr @fun_candy_builtin_get_argument_count, align 8
  %1076 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %1076, ptr @fun_candy_builtin_if_else, align 8
  %1077 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %1077, ptr @fun_candy_builtin_int_add, align 8
  %1078 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_and, ptr null, i64 0)
  store ptr %1078, ptr @fun_candy_builtin_int_bitwise_and, align 8
  %1079 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %1079, ptr @fun_candy_builtin_int_compare_to, align 8
  %1080 = call ptr @make_candy_function(ptr @candy_builtin_int_divide_truncating, ptr null, i64 0)
  store ptr %1080, ptr @fun_candy_builtin_int_divide_truncating, align 8
  %1081 = call ptr @make_candy_function(ptr @candy_builtin_int_multiply, ptr null, i64 0)
  store ptr %1081, ptr @fun_candy_builtin_int_multiply, align 8
  %1082 = call ptr @make_candy_function(ptr @candy_builtin_int_remainder, ptr null, i64 0)
  store ptr %1082, ptr @fun_candy_builtin_int_remainder, align 8
  %1083 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_right, ptr null, i64 0)
  store ptr %1083, ptr @fun_candy_builtin_int_shift_right, align 8
  %1084 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %1084, ptr @fun_candy_builtin_int_subtract, align 8
  %1085 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %1085, ptr @fun_candy_builtin_list_get, align 8
  %1086 = call ptr @make_candy_function(ptr @candy_builtin_list_insert, ptr null, i64 0)
  store ptr %1086, ptr @fun_candy_builtin_list_insert, align 8
  %1087 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %1087, ptr @fun_candy_builtin_list_length, align 8
  %1088 = call ptr @make_candy_function(ptr @candy_builtin_print, ptr null, i64 0)
  store ptr %1088, ptr @fun_candy_builtin_print, align 8
  %1089 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %1089, ptr @fun_candy_builtin_struct_get, align 8
  %1090 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %1090, ptr @fun_candy_builtin_struct_has_key, align 8
  %1091 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %1091, ptr @fun_candy_builtin_tag_get_value, align 8
  %1092 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %1092, ptr @fun_candy_builtin_tag_has_value, align 8
  %1093 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %1093, ptr @fun_candy_builtin_tag_without_value, align 8
  %1094 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %1094, ptr @fun_candy_builtin_text_concatenate, align 8
  %1095 = call ptr @make_candy_function(ptr @candy_builtin_text_get_range, ptr null, i64 0)
  store ptr %1095, ptr @fun_candy_builtin_text_get_range, align 8
  %1096 = call ptr @make_candy_function(ptr @candy_builtin_text_length, ptr null, i64 0)
  store ptr %1096, ptr @fun_candy_builtin_text_length, align 8
  %1097 = call ptr @make_candy_function(ptr @candy_builtin_text_starts_with, ptr null, i64 0)
  store ptr %1097, ptr @fun_candy_builtin_text_starts_with, align 8
  %1098 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %1098, ptr @fun_candy_builtin_to_debug_text, align 8
  %1099 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %1099, ptr @fun_candy_builtin_type_of, align 8
  %1100 = alloca i8, i64 5, align 1
  store [5 x i8] c"Base\00", ptr %1100, align 1
  %1101 = call ptr @make_candy_tag(ptr %1100, ptr null)
  store ptr %1101, ptr @tag_Base, align 8
  %1102 = alloca i8, i64 6, align 1
  store [6 x i8] c"Empty\00", ptr %1102, align 1
  %1103 = call ptr @make_candy_tag(ptr %1102, ptr null)
  store ptr %1103, ptr @tag_Empty, align 8
  %1104 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %1104, align 1
  %1105 = call ptr @make_candy_tag(ptr %1104, ptr null)
  store ptr %1105, ptr @tag_Equal, align 8
  %1106 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1106, align 1
  %1107 = call ptr @make_candy_tag(ptr %1106, ptr null)
  store ptr %1107, ptr @tag_Error, align 8
  %1108 = alloca i8, i64 9, align 1
  store [9 x i8] c"Exponent\00", ptr %1108, align 1
  %1109 = call ptr @make_candy_tag(ptr %1108, ptr null)
  store ptr %1109, ptr @tag_Exponent, align 8
  %1110 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %1110, align 1
  %1111 = call ptr @make_candy_tag(ptr %1110, ptr null)
  store ptr %1111, ptr @tag_False, align 8
  %1112 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %1112, align 1
  %1113 = call ptr @make_candy_tag(ptr %1112, ptr null)
  store ptr %1113, ptr @tag_FixedDecimal, align 8
  %1114 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %1114, align 1
  %1115 = call ptr @make_candy_tag(ptr %1114, ptr null)
  store ptr %1115, ptr @tag_Function, align 8
  %1116 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %1116, align 1
  %1117 = call ptr @make_candy_tag(ptr %1116, ptr null)
  store ptr %1117, ptr @tag_Greater, align 8
  %1118 = alloca i8, i64 6, align 1
  store [6 x i8] c"Index\00", ptr %1118, align 1
  %1119 = call ptr @make_candy_tag(ptr %1118, ptr null)
  store ptr %1119, ptr @tag_Index, align 8
  %1120 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %1120, align 1
  %1121 = call ptr @make_candy_tag(ptr %1120, ptr null)
  store ptr %1121, ptr @tag_Int, align 8
  %1122 = alloca i8, i64 5, align 1
  store [5 x i8] c"Item\00", ptr %1122, align 1
  %1123 = call ptr @make_candy_tag(ptr %1122, ptr null)
  store ptr %1123, ptr @tag_Item, align 8
  %1124 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %1124, align 1
  %1125 = call ptr @make_candy_tag(ptr %1124, ptr null)
  store ptr %1125, ptr @tag_Iterator, align 8
  %1126 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %1126, align 1
  %1127 = call ptr @make_candy_tag(ptr %1126, ptr null)
  store ptr %1127, ptr @tag_Less, align 8
  %1128 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %1128, align 1
  %1129 = call ptr @make_candy_tag(ptr %1128, ptr null)
  store ptr %1129, ptr @tag_List, align 8
  %1130 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %1130, align 1
  %1131 = call ptr @make_candy_tag(ptr %1130, ptr null)
  store ptr %1131, ptr @tag_Match, align 8
  %1132 = alloca i8, i64 11, align 1
  store [11 x i8] c"MinorUnits\00", ptr %1132, align 1
  %1133 = call ptr @make_candy_tag(ptr %1132, ptr null)
  store ptr %1133, ptr @tag_MinorUnits, align 8
  %1134 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %1134, align 1
  %1135 = call ptr @make_candy_tag(ptr %1134, ptr null)
  store ptr %1135, ptr @tag_More, align 8
  %1136 = alloca i8, i64 2, align 1
  store [2 x i8] c"N\00", ptr %1136, align 1
  %1137 = call ptr @make_candy_tag(ptr %1136, ptr null)
  store ptr %1137, ptr @tag_N, align 8
  %1138 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %1138, align 1
  %1139 = call ptr @make_candy_tag(ptr %1138, ptr null)
  store ptr %1139, ptr @tag_NoMatch, align 8
  %1140 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %1140, align 1
  %1141 = call ptr @make_candy_tag(ptr %1140, ptr null)
  store ptr %1141, ptr @tag_Nothing, align 8
  %1142 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %1142, align 1
  %1143 = call ptr @make_candy_tag(ptr %1142, ptr null)
  store ptr %1143, ptr @tag_Ok, align 8
  %1144 = alloca i8, i64 5, align 1
  store [5 x i8] c"Rest\00", ptr %1144, align 1
  %1145 = call ptr @make_candy_tag(ptr %1144, ptr null)
  store ptr %1145, ptr @tag_Rest, align 8
  %1146 = alloca i8, i64 6, align 1
  store [6 x i8] c"Scale\00", ptr %1146, align 1
  %1147 = call ptr @make_candy_tag(ptr %1146, ptr null)
  store ptr %1147, ptr @tag_Scale, align 8
  %1148 = alloca i8, i64 6, align 1
  store [6 x i8] c"State\00", ptr %1148, align 1
  %1149 = call ptr @make_candy_tag(ptr %1148, ptr null)
  store ptr %1149, ptr @tag_State, align 8
  %1150 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %1150, align 1
  %1151 = call ptr @make_candy_tag(ptr %1150, ptr null)
  store ptr %1151, ptr @tag_Struct, align 8
  %1152 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %1152, align 1
  %1153 = call ptr @make_candy_tag(ptr %1152, ptr null)
  store ptr %1153, ptr @tag_Tag, align 8
  %1154 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %1154, align 1
  %1155 = call ptr @make_candy_tag(ptr %1154, ptr null)
  store ptr %1155, ptr @tag_Text, align 8
  %1156 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %1156, align 1
  %1157 = call ptr @make_candy_tag(ptr %1156, ptr null)
  store ptr %1157, ptr @tag_True, align 8
  %1158 = alloca i8, i64 6, align 1
  store [6 x i8] c"Value\00", ptr %1158, align 1
  %1159 = call ptr @make_candy_tag(ptr %1158, ptr null)
  store ptr %1159, ptr @tag_Value, align 8
  %1160 = call ptr @make_candy_int(i64 0)
  store ptr %1160, ptr @num_0, align 8
  %1161 = call ptr @make_candy_int(i64 1)
  store ptr %1161, ptr @num_1, align 8
  %1162 = call ptr @make_candy_int(i64 2)
  store ptr %1162, ptr @num_2, align 8
  %1163 = call ptr @make_candy_int(i64 3)
  store ptr %1163, ptr @num_3, align 8
  %1164 = call ptr @make_candy_int(i64 4)
  store ptr %1164, ptr @num_4, align 8
  %1165 = call ptr @make_candy_int(i64 5)
  store ptr %1165, ptr @num_5, align 8
  %1166 = call ptr @make_candy_int(i64 6)
  store ptr %1166, ptr @num_6, align 8
  %1167 = call ptr @make_candy_int(i64 7)
  store ptr %1167, ptr @num_7, align 8
  %1168 = call ptr @make_candy_int(i64 8)
  store ptr %1168, ptr @num_8, align 8
  %1169 = call ptr @make_candy_int(i64 9)
  store ptr %1169, ptr @num_9, align 8
  %1170 = call ptr @make_candy_int(i64 10)
  store ptr %1170, ptr @num_10, align 8
  %1171 = call ptr @make_candy_int(i64 -1)
  store ptr %1171, ptr @num_340282366920938463463374607431768211455, align 8
  %1172 = alloca i8, i64 1, align 1
  store [1 x i8] zeroinitializer, ptr %1172, align 1
  %1173 = call ptr @make_candy_text(ptr %1172)
  store ptr %1173, ptr @text_, align 8
  %1174 = alloca i8, i64 8, align 1
  store [8 x i8] c" to be \00", ptr %1174, align 1
  %1175 = call ptr @make_candy_text(ptr %1174)
  store ptr %1175, ptr @"text_ to be ", align 8
  %1176 = alloca i8, i64 3, align 1
  store [3 x i8] c"-1\00", ptr %1176, align 1
  %1177 = call ptr @make_candy_text(ptr %1176)
  store ptr %1177, ptr @text_-1, align 8
  %1178 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %1178, align 1
  %1179 = call ptr @make_candy_text(ptr %1178)
  store ptr %1179, ptr @text_., align 8
  %1180 = alloca i8, i64 46, align 1
  store [46 x i8] c". You might want to call `shiftLeft` instead.\00", ptr %1180, align 1
  %1181 = call ptr @make_candy_text(ptr %1180)
  store ptr %1181, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %1182 = alloca i8, i64 2, align 1
  store [2 x i8] c"1\00", ptr %1182, align 1
  %1183 = call ptr @make_candy_text(ptr %1182)
  store ptr %1183, ptr @text_1, align 8
  %1184 = alloca i8, i64 16, align 1
  store [16 x i8] c"A check failed.\00", ptr %1184, align 1
  %1185 = call ptr @make_candy_text(ptr %1184)
  store ptr %1185, ptr @"text_A check failed.", align 8
  %1186 = alloca i8, i64 26, align 1
  store [26 x i8] c"A check failed: Expected \00", ptr %1186, align 1
  %1187 = call ptr @make_candy_text(ptr %1186)
  store ptr %1187, ptr @"text_A check failed: Expected ", align 8
  %1188 = alloca i8, i64 37, align 1
  store [37 x i8] c"Can't `reduceLeft` an empty iterator\00", ptr %1188, align 1
  %1189 = call ptr @make_candy_text(ptr %1188)
  store ptr %1189, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1190 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %1190, align 1
  %1191 = call ptr @make_candy_text(ptr %1190)
  store ptr %1191, ptr @"text_Expected Error, got ", align 8
  %1192 = alloca i8, i64 28, align 1
  store [28 x i8] c"Expected FixedDecimal, got \00", ptr %1192, align 1
  %1193 = call ptr @make_candy_text(ptr %1192)
  store ptr %1193, ptr @"text_Expected FixedDecimal, got ", align 8
  %1194 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected Iterator, got \00", ptr %1194, align 1
  %1195 = call ptr @make_candy_text(ptr %1194)
  store ptr %1195, ptr @"text_Expected Iterator, got ", align 8
  %1196 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected More, got \00", ptr %1196, align 1
  %1197 = call ptr @make_candy_text(ptr %1196)
  store ptr %1197, ptr @"text_Expected More, got ", align 8
  %1198 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %1198, align 1
  %1199 = call ptr @make_candy_text(ptr %1198)
  store ptr %1199, ptr @"text_Expected Ok, got ", align 8
  %1200 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected `0`, got `\00", ptr %1200, align 1
  %1201 = call ptr @make_candy_text(ptr %1200)
  store ptr %1201, ptr @"text_Expected `0`, got `", align 8
  %1202 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected `Empty`, got `\00", ptr %1202, align 1
  %1203 = call ptr @make_candy_text(ptr %1202)
  store ptr %1203, ptr @"text_Expected `Empty`, got `", align 8
  %1204 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected `Equal`, got `\00", ptr %1204, align 1
  %1205 = call ptr @make_candy_text(ptr %1204)
  store ptr %1205, ptr @"text_Expected `Equal`, got `", align 8
  %1206 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected `False`, got `\00", ptr %1206, align 1
  %1207 = call ptr @make_candy_text(ptr %1206)
  store ptr %1207, ptr @"text_Expected `False`, got `", align 8
  %1208 = alloca i8, i64 26, align 1
  store [26 x i8] c"Expected `Greater`, got `\00", ptr %1208, align 1
  %1209 = call ptr @make_candy_text(ptr %1208)
  store ptr %1209, ptr @"text_Expected `Greater`, got `", align 8
  %1210 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected `Less`, got `\00", ptr %1210, align 1
  %1211 = call ptr @make_candy_text(ptr %1210)
  store ptr %1211, ptr @"text_Expected `Less`, got `", align 8
  %1212 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected `True`, got `\00", ptr %1212, align 1
  %1213 = call ptr @make_candy_text(ptr %1212)
  store ptr %1213, ptr @"text_Expected `True`, got `", align 8
  %1214 = alloca i8, i64 25, align 1
  store [25 x i8] c"Expected a Struct, got `\00", ptr %1214, align 1
  %1215 = call ptr @make_candy_text(ptr %1214)
  store ptr %1215, ptr @"text_Expected a Struct, got `", align 8
  %1216 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %1216, align 1
  %1217 = call ptr @make_candy_text(ptr %1216)
  store ptr %1217, ptr @"text_Expected a Tag, got `", align 8
  %1218 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %1218, align 1
  %1219 = call ptr @make_candy_text(ptr %1218)
  store ptr %1219, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %1220 = alloca i8, i64 32, align 1
  store [32 x i8] c"Iterator items need to be ints.\00", ptr %1220, align 1
  %1221 = call ptr @make_candy_text(ptr %1220)
  store ptr %1221, ptr @"text_Iterator items need to be ints.", align 8
  %1222 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %1222, align 1
  %1223 = call ptr @make_candy_text(ptr %1222)
  store ptr %1223, ptr @"text_No case matched the given expression.", align 8
  %1224 = alloca i8, i64 43, align 1
  store [43 x i8] c"Shifts by that much are not yet supported.\00", ptr %1224, align 1
  %1225 = call ptr @make_candy_text(ptr %1224)
  store ptr %1225, ptr @"text_Shifts by that much are not yet supported.", align 8
  %1226 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Base`: `\00", ptr %1226, align 1
  %1227 = call ptr @make_candy_text(ptr %1226)
  store ptr %1227, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %1228 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Exponent`: `\00", ptr %1228, align 1
  %1229 = call ptr @make_candy_text(ptr %1228)
  store ptr %1229, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %1230 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Index`: `\00", ptr %1230, align 1
  %1231 = call ptr @make_candy_text(ptr %1230)
  store ptr %1231, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %1232 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Item`: `\00", ptr %1232, align 1
  %1233 = call ptr @make_candy_text(ptr %1232)
  store ptr %1233, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %1234 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Iterator`: `\00", ptr %1234, align 1
  %1235 = call ptr @make_candy_text(ptr %1234)
  store ptr %1235, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %1236 = alloca i8, i64 43, align 1
  store [43 x i8] c"Struct doesn't contain key `MinorUnits`: `\00", ptr %1236, align 1
  %1237 = call ptr @make_candy_text(ptr %1236)
  store ptr %1237, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %1238 = alloca i8, i64 34, align 1
  store [34 x i8] c"Struct doesn't contain key `N`: `\00", ptr %1238, align 1
  %1239 = call ptr @make_candy_text(ptr %1238)
  store ptr %1239, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %1240 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Rest`: `\00", ptr %1240, align 1
  %1241 = call ptr @make_candy_text(ptr %1240)
  store ptr %1241, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %1242 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Scale`: `\00", ptr %1242, align 1
  %1243 = call ptr @make_candy_text(ptr %1242)
  store ptr %1243, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %1244 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `State`: `\00", ptr %1244, align 1
  %1245 = call ptr @make_candy_text(ptr %1244)
  store ptr %1245, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %1246 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Value`: `\00", ptr %1246, align 1
  %1247 = call ptr @make_candy_text(ptr %1246)
  store ptr %1247, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %1248 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %1248, align 1
  %1249 = call ptr @make_candy_text(ptr %1248)
  store ptr %1249, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %1250 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %1250, align 1
  %1251 = call ptr @make_candy_text(ptr %1250)
  store ptr %1251, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %1252 = alloca i8, i64 95, align 1
  store [95 x i8] c"The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `\00", ptr %1252, align 1
  %1253 = call ptr @make_candy_text(ptr %1252)
  store ptr %1253, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %1254 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %1254, align 1
  %1255 = call ptr @make_candy_text(ptr %1254)
  store ptr %1255, ptr @"text_The `reason` must be a text.", align 8
  %1256 = alloca i8, i64 26, align 1
  store [26 x i8] c"The guard needs to panic.\00", ptr %1256, align 1
  %1257 = call ptr @make_candy_text(ptr %1256)
  store ptr %1257, ptr @"text_The guard needs to panic.", align 8
  %1258 = alloca i8, i64 33, align 1
  store [33 x i8] c"The shift `amount` is negative: \00", ptr %1258, align 1
  %1259 = call ptr @make_candy_text(ptr %1258)
  store ptr %1259, ptr @"text_The shift `amount` is negative: ", align 8
  %1260 = alloca i8, i64 26, align 1
  store [26 x i8] c"You can't divide by zero.\00", ptr %1260, align 1
  %1261 = call ptr @make_candy_text(ptr %1260)
  store ptr %1261, ptr @"text_You can't divide by zero.", align 8
  %1262 = alloca i8, i64 2, align 1
  store [2 x i8] c"`\00", ptr %1262, align 1
  %1263 = call ptr @make_candy_text(ptr %1262)
  store ptr %1263, ptr @"text_`", align 8
  %1264 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %1264, align 1
  %1265 = call ptr @make_candy_text(ptr %1264)
  store ptr %1265, ptr @"text_`.", align 8
  %1266 = alloca i8, i64 26, align 1
  store [26 x i8] c"`False` was not satisfied\00", ptr %1266, align 1
  %1267 = call ptr @make_candy_text(ptr %1266)
  store ptr %1267, ptr @"text_`False` was not satisfied", align 8
  %1268 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %1268, align 1
  %1269 = call ptr @make_candy_text(ptr %1268)
  store ptr %1269, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %1270 = alloca i8, i64 36, align 1
  store [36 x i8] c"`a | typeIs Text` was not satisfied\00", ptr %1270, align 1
  %1271 = call ptr @make_candy_text(ptr %1270)
  store ptr %1271, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %1272 = alloca i8, i64 25, align 1
  store [25 x i8] c"`all` needs an iterator.\00", ptr %1272, align 1
  %1273 = call ptr @make_candy_text(ptr %1272)
  store ptr %1273, ptr @"text_`all` needs an iterator.", align 8
  %1274 = alloca i8, i64 40, align 1
  store [40 x i8] c"`amount | typeIs Int` was not satisfied\00", ptr %1274, align 1
  %1275 = call ptr @make_candy_text(ptr %1274)
  store ptr %1275, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %1276 = alloca i8, i64 25, align 1
  store [25 x i8] c"`any` needs an iterator.\00", ptr %1276, align 1
  %1277 = call ptr @make_candy_text(ptr %1276)
  store ptr %1277, ptr @"text_`any` needs an iterator.", align 8
  %1278 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %1278, align 1
  %1279 = call ptr @make_candy_text(ptr %1278)
  store ptr %1279, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %1280 = alloca i8, i64 36, align 1
  store [36 x i8] c"`b | typeIs Text` was not satisfied\00", ptr %1280, align 1
  %1281 = call ptr @make_candy_text(ptr %1280)
  store ptr %1281, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %1282 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %1282, align 1
  %1283 = call ptr @make_candy_text(ptr %1282)
  store ptr %1283, ptr @"text_`b` didn't return a bool.", align 8
  %1284 = alloca i8, i64 48, align 1
  store [48 x i8] c"`bool.is allowPartialWindows` was not satisfied\00", ptr %1284, align 1
  %1285 = call ptr @make_candy_text(ptr %1284)
  store ptr %1285, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %1286 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %1286, align 1
  %1287 = call ptr @make_candy_text(ptr %1286)
  store ptr %1287, ptr @"text_`bool.is condition` was not satisfied", align 8
  %1288 = alloca i8, i64 39, align 1
  store [39 x i8] c"`bool.is itemResult` was not satisfied\00", ptr %1288, align 1
  %1289 = call ptr @make_candy_text(ptr %1288)
  store ptr %1289, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %1290 = alloca i8, i64 29, align 1
  store [29 x i8] c"`chunked` needs an iterator.\00", ptr %1290, align 1
  %1291 = call ptr @make_candy_text(ptr %1290)
  store ptr %1291, ptr @"text_`chunked` needs an iterator.", align 8
  %1292 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %1292, align 1
  %1293 = call ptr @make_candy_text(ptr %1292)
  store ptr %1293, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %1294 = alloca i8, i64 42, align 1
  store [42 x i8] c"`dividend | typeIs Int` was not satisfied\00", ptr %1294, align 1
  %1295 = call ptr @make_candy_text(ptr %1294)
  store ptr %1295, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %1296 = alloca i8, i64 41, align 1
  store [41 x i8] c"`divisor | typeIs Int` was not satisfied\00", ptr %1296, align 1
  %1297 = call ptr @make_candy_text(ptr %1296)
  store ptr %1297, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %1298 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %1298, align 1
  %1299 = call ptr @make_candy_text(ptr %1298)
  store ptr %1299, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %1300 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %1300, align 1
  %1301 = call ptr @make_candy_text(ptr %1300)
  store ptr %1301, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %1302 = alloca i8, i64 79, align 1
  store [77 x i8] c"`endExclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %1302, align 1
  %1303 = call ptr @make_candy_text(ptr %1302)
  store ptr %1303, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %1304 = alloca i8, i64 49, align 1
  store [49 x i8] c"`endExclusive | isNonNegative` was not satisfied\00", ptr %1304, align 1
  %1305 = call ptr @make_candy_text(ptr %1304)
  store ptr %1305, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %1306 = alloca i8, i64 46, align 1
  store [46 x i8] c"`endExclusive | typeIs Int` was not satisfied\00", ptr %1306, align 1
  %1307 = call ptr @make_candy_text(ptr %1306)
  store ptr %1307, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %1308 = alloca i8, i64 28, align 1
  store [28 x i8] c"`ensure` needs an iterator.\00", ptr %1308, align 1
  %1309 = call ptr @make_candy_text(ptr %1308)
  store ptr %1309, ptr @"text_`ensure` needs an iterator.", align 8
  %1310 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorA | typeIs Int` was not satisfied\00", ptr %1310, align 1
  %1311 = call ptr @make_candy_text(ptr %1310)
  store ptr %1311, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %1312 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorB | typeIs Int` was not satisfied\00", ptr %1312, align 1
  %1313 = call ptr @make_candy_text(ptr %1312)
  store ptr %1313, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %1314 = alloca i8, i64 30, align 1
  store [30 x i8] c"`foldLeft` needs an iterator.\00", ptr %1314, align 1
  %1315 = call ptr @make_candy_text(ptr %1314)
  store ptr %1315, ptr @"text_`foldLeft` needs an iterator.", align 8
  %1316 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %1316, align 1
  %1317 = call ptr @make_candy_text(ptr %1316)
  store ptr %1317, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %1318 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %1318, align 1
  %1319 = call ptr @make_candy_text(ptr %1318)
  store ptr %1319, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %1320 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %1320, align 1
  %1321 = call ptr @make_candy_text(ptr %1320)
  store ptr %1321, ptr @"text_`function.is0 b` was not satisfied", align 8
  %1322 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function.is0 defaultGetter` was not satisfied\00", ptr %1322, align 1
  %1323 = call ptr @make_candy_text(ptr %1322)
  store ptr %1323, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %1324 = alloca i8, i64 50, align 1
  store [50 x i8] c"`function.is0 notIteratorGuard` was not satisfied\00", ptr %1324, align 1
  %1325 = call ptr @make_candy_text(ptr %1324)
  store ptr %1325, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %1326 = alloca i8, i64 38, align 1
  store [38 x i8] c"`function.is0 then` was not satisfied\00", ptr %1326, align 1
  %1327 = call ptr @make_candy_text(ptr %1326)
  store ptr %1327, ptr @"text_`function.is0 then` was not satisfied", align 8
  %1328 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %1328, align 1
  %1329 = call ptr @make_candy_text(ptr %1328)
  store ptr %1329, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %1330 = alloca i8, i64 39, align 1
  store [39 x i8] c"`function.is1 guard` was not satisfied\00", ptr %1330, align 1
  %1331 = call ptr @make_candy_text(ptr %1330)
  store ptr %1331, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %1332 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 mapper` was not satisfied\00", ptr %1332, align 1
  %1333 = call ptr @make_candy_text(ptr %1332)
  store ptr %1333, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %1334 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %1334, align 1
  %1335 = call ptr @make_candy_text(ptr %1334)
  store ptr %1335, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %1336 = alloca i8, i64 41, align 1
  store [41 x i8] c"`function.is2 combine` was not satisfied\00", ptr %1336, align 1
  %1337 = call ptr @make_candy_text(ptr %1336)
  store ptr %1337, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %1338 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %1338, align 1
  %1339 = call ptr @make_candy_text(ptr %1338)
  store ptr %1339, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %1340 = alloca i8, i64 72, align 1
  store [70 x i8] c"`index | isLessThanOrEqualTo (list | (.listLength)` was not satisfied\00", ptr %1340, align 1
  %1341 = call ptr @make_candy_text(ptr %1340)
  store ptr %1341, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %1342 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %1342, align 1
  %1343 = call ptr @make_candy_text(ptr %1342)
  store ptr %1343, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %1344 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %1344, align 1
  %1345 = call ptr @make_candy_text(ptr %1344)
  store ptr %1345, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %1346 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %1346, align 1
  %1347 = call ptr @make_candy_text(ptr %1346)
  store ptr %1347, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %1348 = alloca i8, i64 38, align 1
  store [38 x i8] c"`int.is minorUnits` was not satisfied\00", ptr %1348, align 1
  %1349 = call ptr @make_candy_text(ptr %1348)
  store ptr %1349, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %1350 = alloca i8, i64 29, align 1
  store [29 x i8] c"`int.is n` was not satisfied\00", ptr %1350, align 1
  %1351 = call ptr @make_candy_text(ptr %1350)
  store ptr %1351, ptr @"text_`int.is n` was not satisfied", align 8
  %1352 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is size` was not satisfied\00", ptr %1352, align 1
  %1353 = call ptr @make_candy_text(ptr %1352)
  store ptr %1353, ptr @"text_`int.is size` was not satisfied", align 8
  %1354 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is step` was not satisfied\00", ptr %1354, align 1
  %1355 = call ptr @make_candy_text(ptr %1354)
  store ptr %1355, ptr @"text_`int.is step` was not satisfied", align 8
  %1356 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isNonNegative n` was not satisfied\00", ptr %1356, align 1
  %1357 = call ptr @make_candy_text(ptr %1356)
  store ptr %1357, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %1358 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive size` was not satisfied\00", ptr %1358, align 1
  %1359 = call ptr @make_candy_text(ptr %1358)
  store ptr %1359, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %1360 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive step` was not satisfied\00", ptr %1360, align 1
  %1361 = call ptr @make_candy_text(ptr %1360)
  store ptr %1361, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %1362 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %1362, align 1
  %1363 = call ptr @make_candy_text(ptr %1362)
  store ptr %1363, ptr @"text_`is a` was not satisfied", align 8
  %1364 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %1364, align 1
  %1365 = call ptr @make_candy_text(ptr %1364)
  store ptr %1365, ptr @"text_`is b` was not satisfied", align 8
  %1366 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is delta` was not satisfied\00", ptr %1366, align 1
  %1367 = call ptr @make_candy_text(ptr %1366)
  store ptr %1367, ptr @"text_`is delta` was not satisfied", align 8
  %1368 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is dividend` was not satisfied\00", ptr %1368, align 1
  %1369 = call ptr @make_candy_text(ptr %1368)
  store ptr %1369, ptr @"text_`is dividend` was not satisfied", align 8
  %1370 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is divisor` was not satisfied\00", ptr %1370, align 1
  %1371 = call ptr @make_candy_text(ptr %1370)
  store ptr %1371, ptr @"text_`is divisor` was not satisfied", align 8
  %1372 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is exponent` was not satisfied\00", ptr %1372, align 1
  %1373 = call ptr @make_candy_text(ptr %1372)
  store ptr %1373, ptr @"text_`is exponent` was not satisfied", align 8
  %1374 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is list` was not satisfied\00", ptr %1374, align 1
  %1375 = call ptr @make_candy_text(ptr %1374)
  store ptr %1375, ptr @"text_`is list` was not satisfied", align 8
  %1376 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is minuend` was not satisfied\00", ptr %1376, align 1
  %1377 = call ptr @make_candy_text(ptr %1376)
  store ptr %1377, ptr @"text_`is minuend` was not satisfied", align 8
  %1378 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is prefix` was not satisfied\00", ptr %1378, align 1
  %1379 = call ptr @make_candy_text(ptr %1378)
  store ptr %1379, ptr @"text_`is prefix` was not satisfied", align 8
  %1380 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %1380, align 1
  %1381 = call ptr @make_candy_text(ptr %1380)
  store ptr %1381, ptr @"text_`is result` was not satisfied", align 8
  %1382 = alloca i8, i64 34, align 1
  store [34 x i8] c"`is subtrahend` was not satisfied\00", ptr %1382, align 1
  %1383 = call ptr @make_candy_text(ptr %1382)
  store ptr %1383, ptr @"text_`is subtrahend` was not satisfied", align 8
  %1384 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is summandA` was not satisfied\00", ptr %1384, align 1
  %1385 = call ptr @make_candy_text(ptr %1384)
  store ptr %1385, ptr @"text_`is summandA` was not satisfied", align 8
  %1386 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is summandB` was not satisfied\00", ptr %1386, align 1
  %1387 = call ptr @make_candy_text(ptr %1386)
  store ptr %1387, ptr @"text_`is summandB` was not satisfied", align 8
  %1388 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is text` was not satisfied\00", ptr %1388, align 1
  %1389 = call ptr @make_candy_text(ptr %1388)
  store ptr %1389, ptr @"text_`is text` was not satisfied", align 8
  %1390 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueA` was not satisfied\00", ptr %1390, align 1
  %1391 = call ptr @make_candy_text(ptr %1390)
  store ptr %1391, ptr @"text_`is valueA` was not satisfied", align 8
  %1392 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %1392, align 1
  %1393 = call ptr @make_candy_text(ptr %1392)
  store ptr %1393, ptr @"text_`is valueB` was not satisfied", align 8
  %1394 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is value` was not satisfied\00", ptr %1394, align 1
  %1395 = call ptr @make_candy_text(ptr %1394)
  store ptr %1395, ptr @"text_`is value` was not satisfied", align 8
  %1396 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %1396, align 1
  %1397 = call ptr @make_candy_text(ptr %1396)
  store ptr %1397, ptr @"text_`is0 body` was not satisfied", align 8
  %1398 = alloca i8, i64 36, align 1
  store [36 x i8] c"`isConditionBool` was not satisfied\00", ptr %1398, align 1
  %1399 = call ptr @make_candy_text(ptr %1398)
  store ptr %1399, ptr @"text_`isConditionBool` was not satisfied", align 8
  %1400 = alloca i8, i64 29, align 1
  store [29 x i8] c"`isEmpty` needs an iterator.\00", ptr %1400, align 1
  %1401 = call ptr @make_candy_text(ptr %1400)
  store ptr %1401, ptr @"text_`isEmpty` needs an iterator.", align 8
  %1402 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative delta` was not satisfied\00", ptr %1402, align 1
  %1403 = call ptr @make_candy_text(ptr %1402)
  store ptr %1403, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  %1404 = alloca i8, i64 43, align 1
  store [43 x i8] c"`isNonNegative exponent` was not satisfied\00", ptr %1404, align 1
  %1405 = call ptr @make_candy_text(ptr %1404)
  store ptr %1405, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %1406 = alloca i8, i64 34, align 1
  store [34 x i8] c"`isScale scale` was not satisfied\00", ptr %1406, align 1
  %1407 = call ptr @make_candy_text(ptr %1406)
  store ptr %1407, ptr @"text_`isScale scale` was not satisfied", align 8
  %1408 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isScale targetScale` was not satisfied\00", ptr %1408, align 1
  %1409 = call ptr @make_candy_text(ptr %1408)
  store ptr %1409, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %1410 = alloca i8, i64 32, align 1
  store [32 x i8] c"`joinToText` needs an iterator.\00", ptr %1410, align 1
  %1411 = call ptr @make_candy_text(ptr %1410)
  store ptr %1411, ptr @"text_`joinToText` needs an iterator.", align 8
  %1412 = alloca i8, i64 28, align 1
  store [28 x i8] c"`length` needs an iterator.\00", ptr %1412, align 1
  %1413 = call ptr @make_candy_text(ptr %1412)
  store ptr %1413, ptr @"text_`length` needs an iterator.", align 8
  %1414 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %1414, align 1
  %1415 = call ptr @make_candy_text(ptr %1414)
  store ptr %1415, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %1416 = alloca i8, i64 25, align 1
  store [25 x i8] c"`map` needs an iterator.\00", ptr %1416, align 1
  %1417 = call ptr @make_candy_text(ptr %1416)
  store ptr %1417, ptr @"text_`map` needs an iterator.", align 8
  %1418 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %1418, align 1
  %1419 = call ptr @make_candy_text(ptr %1418)
  store ptr %1419, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %1420 = alloca i8, i64 26, align 1
  store [26 x i8] c"`next` needs an iterator.\00", ptr %1420, align 1
  %1421 = call ptr @make_candy_text(ptr %1420)
  store ptr %1421, ptr @"text_`next` needs an iterator.", align 8
  %1422 = alloca i8, i64 41, align 1
  store [41 x i8] c"`prefix | typeIs Text` was not satisfied\00", ptr %1422, align 1
  %1423 = call ptr @make_candy_text(ptr %1422)
  store ptr %1423, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %1424 = alloca i8, i64 32, align 1
  store [32 x i8] c"`reduceLeft` needs an iterator.\00", ptr %1424, align 1
  %1425 = call ptr @make_candy_text(ptr %1424)
  store ptr %1425, ptr @"text_`reduceLeft` needs an iterator.", align 8
  %1426 = alloca i8, i64 26, align 1
  store [26 x i8] c"`skip` needs an iterator.\00", ptr %1426, align 1
  %1427 = call ptr @make_candy_text(ptr %1426)
  store ptr %1427, ptr @"text_`skip` needs an iterator.", align 8
  %1428 = alloca i8, i64 81, align 1
  store [79 x i8] c"`startInclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %1428, align 1
  %1429 = call ptr @make_candy_text(ptr %1428)
  store ptr %1429, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %1430 = alloca i8, i64 70, align 1
  store [70 x i8] c"`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied\00", ptr %1430, align 1
  %1431 = call ptr @make_candy_text(ptr %1430)
  store ptr %1431, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %1432 = alloca i8, i64 51, align 1
  store [51 x i8] c"`startInclusive | isNonNegative` was not satisfied\00", ptr %1432, align 1
  %1433 = call ptr @make_candy_text(ptr %1432)
  store ptr %1433, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %1434 = alloca i8, i64 48, align 1
  store [48 x i8] c"`startInclusive | typeIs Int` was not satisfied\00", ptr %1434, align 1
  %1435 = call ptr @make_candy_text(ptr %1434)
  store ptr %1435, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %1436 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %1436, align 1
  %1437 = call ptr @make_candy_text(ptr %1436)
  store ptr %1437, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %1438 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %1438, align 1
  %1439 = call ptr @make_candy_text(ptr %1438)
  store ptr %1439, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %1440 = alloca i8, i64 44, align 1
  store [44 x i8] c"`subtrahend | typeIs Int` was not satisfied\00", ptr %1440, align 1
  %1441 = call ptr @make_candy_text(ptr %1440)
  store ptr %1441, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %1442 = alloca i8, i64 25, align 1
  store [25 x i8] c"`sum` needs an iterator.\00", ptr %1442, align 1
  %1443 = call ptr @make_candy_text(ptr %1442)
  store ptr %1443, ptr @"text_`sum` needs an iterator.", align 8
  %1444 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %1444, align 1
  %1445 = call ptr @make_candy_text(ptr %1444)
  store ptr %1445, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %1446 = alloca i8, i64 42, align 1
  store [40 x i8] c"`tag | (.tagHasValue` was not satisfied\00", ptr %1446, align 1
  %1447 = call ptr @make_candy_text(ptr %1446)
  store ptr %1447, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %1448 = alloca i8, i64 31, align 1
  store [31 x i8] c"`takeWhile` needs an iterator.\00", ptr %1448, align 1
  %1449 = call ptr @make_candy_text(ptr %1448)
  store ptr %1449, ptr @"text_`takeWhile` needs an iterator.", align 8
  %1450 = alloca i8, i64 26, align 1
  store [26 x i8] c"`take` needs an iterator.\00", ptr %1450, align 1
  %1451 = call ptr @make_candy_text(ptr %1450)
  store ptr %1451, ptr @"text_`take` needs an iterator.", align 8
  %1452 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %1452, align 1
  %1453 = call ptr @make_candy_text(ptr %1452)
  store ptr %1453, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %1454 = alloca i8, i64 33, align 1
  store [33 x i8] c"`text.is item` was not satisfied\00", ptr %1454, align 1
  %1455 = call ptr @make_candy_text(ptr %1454)
  store ptr %1455, ptr @"text_`text.is item` was not satisfied", align 8
  %1456 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %1456, align 1
  %1457 = call ptr @make_candy_text(ptr %1456)
  store ptr %1457, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %1458 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %1458, align 1
  %1459 = call ptr @make_candy_text(ptr %1458)
  store ptr %1459, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %1460 = alloca i8, i64 28, align 1
  store [28 x i8] c"`toList` needs an iterator.\00", ptr %1460, align 1
  %1461 = call ptr @make_candy_text(ptr %1460)
  store ptr %1461, ptr @"text_`toList` needs an iterator.", align 8
  %1462 = alloca i8, i64 42, align 1
  store [42 x i8] c"`value | isNonNegative` was not satisfied\00", ptr %1462, align 1
  %1463 = call ptr @make_candy_text(ptr %1462)
  store ptr %1463, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %1464 = alloca i8, i64 39, align 1
  store [39 x i8] c"`value | typeIs Int` was not satisfied\00", ptr %1464, align 1
  %1465 = call ptr @make_candy_text(ptr %1464)
  store ptr %1465, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %1466 = alloca i8, i64 27, align 1
  store [27 x i8] c"`where` needs an iterator.\00", ptr %1466, align 1
  %1467 = call ptr @make_candy_text(ptr %1466)
  store ptr %1467, ptr @"text_`where` needs an iterator.", align 8
  %1468 = alloca i8, i64 30, align 1
  store [30 x i8] c"`windowed` needs an iterator.\00", ptr %1468, align 1
  %1469 = call ptr @make_candy_text(ptr %1468)
  store ptr %1469, ptr @"text_`windowed` needs an iterator.", align 8
  %1470 = alloca i8, i64 31, align 1
  store [31 x i8] c"`withIndex` needs an iterator.\00", ptr %1470, align 1
  %1471 = call ptr @make_candy_text(ptr %1470)
  store ptr %1471, ptr @"text_`withIndex` needs an iterator.", align 8
  %1472 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1473 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %1472, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1473, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %1474 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1475 = call ptr @make_candy_function(ptr @"Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %1474, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1475, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1476 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1477 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %1476, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1477, ptr @"fun_anonymous_$generated__needs", align 8
  %1478 = alloca ptr, i64 2, align 8
  %1479 = load ptr, ptr @tag_Match, align 8
  %1480 = getelementptr ptr, ptr %1478, i64 0
  store ptr %1479, ptr %1480, align 8
  %1481 = getelementptr ptr, ptr %1478, i64 1
  store ptr null, ptr %1481, align 8
  %1482 = call ptr @make_candy_list(ptr %1478)
  store ptr %1482, ptr @0, align 8
  %1483 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1484 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", ptr %1483, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1484, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %1485 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1486 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", ptr %1485, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1486, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %1487 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1488 = call ptr @make_candy_function(ptr @Builtins__not, ptr %1487, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1488, ptr @fun_Builtins__not, align 8
  %1489 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1490 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %1489, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1490, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %1491 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1492 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, ptr %1491, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1492, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %1493 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1494 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo, ptr %1493, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1494, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  %1495 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1496 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %1495, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1496, ptr @fun_Builtins__ifElse, align 8
  %1497 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1498 = call ptr @make_candy_function(ptr @Builtins__intDivideTruncating, ptr %1497, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1498, ptr @fun_Builtins__intDivideTruncating, align 8
  %1499 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1500 = call ptr @make_candy_function(ptr @Builtins__intRemainder, ptr %1499, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1500, ptr @fun_Builtins__intRemainder, align 8
  %1501 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1502 = call ptr @make_candy_function(ptr @Builtins__intShiftRight, ptr %1501, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1502, ptr @fun_Builtins__intShiftRight, align 8
  %1503 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1504 = call ptr @make_candy_function(ptr @Builtins__listInsert, ptr %1503, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1504, ptr @fun_Builtins__listInsert, align 8
  %1505 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1506 = call ptr @make_candy_function(ptr @Builtins__textGetRange, ptr %1505, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1506, ptr @fun_Builtins__textGetRange, align 8
  %1507 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1508 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %1507, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1508, ptr @fun_Core_bool_is, align 8
  %1509 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1510 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-1_didNotMatch, ptr %1509, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1510, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %1511 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1512 = call ptr @make_candy_function(ptr @Core_bool_not, ptr %1511, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1512, ptr @fun_Core_bool_not, align 8
  %1513 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1514 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_case-1_didNotMatch, ptr %1513, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1514, ptr @fun_Core_bool_lazyAnd_16_case-1_didNotMatch, align 8
  %1515 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1516 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd, ptr %1515, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1516, ptr @fun_Core_bool_lazyAnd, align 8
  %1517 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1518 = call ptr @make_candy_function(ptr @Core_bool_and, ptr %1517, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1518, ptr @fun_Core_bool_and, align 8
  %1519 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1520 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_case-1_didNotMatch, ptr %1519, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1520, ptr @fun_Core_bool_lazyOr_16_case-1_didNotMatch, align 8
  %1521 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1522 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %1521, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1522, ptr @fun_Core_bool_lazyOr, align 8
  %1523 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1524 = call ptr @make_candy_function(ptr @Core_bool_or, ptr %1523, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1524, ptr @fun_Core_bool_or, align 8
  %1525 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1526 = call ptr @make_candy_function(ptr @Core_bool_implies, ptr %1525, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1526, ptr @fun_Core_bool_implies, align 8
  %1527 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1528 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else.169", ptr %1527, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1528, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.170", align 8
  %1529 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1530 = call ptr @make_candy_function(ptr @Core_check_check, ptr %1529, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1530, ptr @fun_Core_check_check, align 8
  %1531 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1532 = call ptr @make_candy_function(ptr @Core_check_checkEquals, ptr %1531, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1532, ptr @fun_Core_check_checkEquals, align 8
  %1533 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1534 = call ptr @make_candy_function(ptr @Core_controlFlow_if, ptr %1533, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1534, ptr @fun_Core_controlFlow_if, align 8
  %1535 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1536 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive, ptr %1535, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1536, ptr @fun_Core_controlFlow_recursive, align 8
  %1537 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1538 = call ptr @make_candy_function(ptr @Core_function_run, ptr %1537, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1538, ptr @fun_Core_function_run, align 8
  %1539 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1540 = call ptr @make_candy_function(ptr @Core_int_compareTo, ptr %1539, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1540, ptr @fun_Core_int_compareTo, align 8
  %1541 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1542 = call ptr @make_candy_function(ptr @Core_int_isLessThan, ptr %1541, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1542, ptr @fun_Core_int_isLessThan, align 8
  %1543 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1544 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan, ptr %1543, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1544, ptr @fun_Core_int_isGreaterThan, align 8
  %1545 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1546 = call ptr @make_candy_function(ptr @Core_int_isNonNegative, ptr %1545, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1546, ptr @fun_Core_int_isNonNegative, align 8
  %1547 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1548 = call ptr @make_candy_function(ptr @Core_int_isEven, ptr %1547, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1548, ptr @fun_Core_int_isEven, align 8
  %1549 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1550 = call ptr @make_candy_function(ptr @Core_int_max, ptr %1549, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1550, ptr @fun_Core_int_max, align 8
  %1551 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1552 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_matched, ptr %1551, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1552, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %1553 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1554 = call ptr @make_candy_function(ptr @Core_int_pow_21, ptr %1553, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1554, ptr @fun_Core_int_pow_21, align 8
  %1555 = alloca ptr, i64 3, align 8
  %1556 = load ptr, ptr @tag_NoMatch, align 8
  %1557 = getelementptr ptr, ptr %1555, i64 0
  store ptr %1556, ptr %1557, align 8
  %1558 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %1559 = getelementptr ptr, ptr %1555, i64 1
  store ptr %1558, ptr %1559, align 8
  %1560 = getelementptr ptr, ptr %1555, i64 2
  store ptr null, ptr %1560, align 8
  %1561 = call ptr @make_candy_list(ptr %1555)
  store ptr %1561, ptr @67, align 8
  %1562 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1563 = call ptr @make_candy_function(ptr @"Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", ptr %1562, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1563, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %1564 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1565 = call ptr @make_candy_function(ptr @Core_text_removePrefix, ptr %1564, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1565, ptr @fun_Core_text_removePrefix, align 8
  %1566 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1567 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale, ptr %1566, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1567, ptr @fun_Core_fixedDecimal_isScale, align 8
  %1568 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1569 = call ptr @make_candy_function(ptr @Core_fixedDecimal_scaleFactor, ptr %1568, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1569, ptr @fun_Core_fixedDecimal_scaleFactor, align 8
  %1570 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1571 = call ptr @make_candy_function(ptr @Core_fixedDecimal_fromIntScaled, ptr %1570, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1571, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  %1572 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1573 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits, ptr %1572, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1573, ptr @fun_Core_fixedDecimal_rescaledMinorUnits, align 8
  %1574 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1575 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add, ptr %1574, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1575, ptr @fun_Core_fixedDecimal_add, align 8
  %1576 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1577 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale, ptr %1576, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1577, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale, align 8
  %1578 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1579 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isLessThanOrEqualTo, ptr %1578, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1579, ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo, align 8
  %1580 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1581 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute, ptr %1580, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1581, ptr @fun_Core_fixedDecimal_absolute, align 8
  %1582 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1583 = call ptr @make_candy_function(ptr @Core_fixedDecimal_approxEquals, ptr %1582, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1583, ptr @fun_Core_fixedDecimal_approxEquals, align 8
  %1584 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1585 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText, ptr %1584, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1585, ptr @fun_Core_fixedDecimal_toText, align 8
  %1586 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1587 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %1586, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1587, ptr @fun_Core_function_is0, align 8
  %1588 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1589 = call ptr @make_candy_function(ptr @Core_int_isPositive, ptr %1588, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1589, ptr @fun_Core_int_isPositive, align 8
  %1590 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1591 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_case-1_didNotMatch, ptr %1590, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1591, ptr @fun_Core_result_mapOrElse_26_case-1_didNotMatch, align 8
  %1592 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1593 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %1592, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1593, ptr @fun_Core_result_mapOrElse, align 8
  %1594 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1595 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_17, ptr %1594, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1595, ptr @fun_Core_result_unwrapOrElse_17, align 8
  %1596 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1597 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse, ptr %1596, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1597, ptr @fun_Core_result_unwrapOrElse, align 8
  %1598 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1599 = call ptr @make_candy_function(ptr @Core_result_unwrapOr, ptr %1598, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1599, ptr @fun_Core_result_unwrapOr, align 8
  %1600 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1601 = call ptr @make_candy_function(ptr @"Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", ptr %1600, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1601, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %1602 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1603 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe, ptr %1602, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1603, ptr @fun_Core_iterator_wrapSafe, align 8
  %1604 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1605 = call ptr @make_candy_function(ptr @Core_iterator_next, ptr %1604, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1605, ptr @fun_Core_iterator_next, align 8
  %1606 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1607 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState, ptr %1606, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1607, ptr @fun_Core_iterator_generateWithState, align 8
  %1608 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1609 = call ptr @make_candy_function(ptr @"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1608, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1609, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1610 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1611 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1042, ptr %1610, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1611, ptr @fun_Core_iterator_wrapSafe_14.1043, align 8
  %1612 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1613 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1096, ptr %1612, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1613, ptr @fun_Core_controlFlow_recursive_16.1097, align 8
  %1614 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1615 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-1_didNotMatch, ptr %1614, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1615, ptr @fun_Core_iterator_map_17_3_case-1_didNotMatch, align 8
  %1616 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1617 = call ptr @make_candy_function(ptr @Core_iterator_map, ptr %1616, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1617, ptr @fun_Core_iterator_map, align 8
  %1618 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1619 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch, ptr %1618, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1619, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %1620 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1621 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11, ptr %1620, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1621, ptr @fun_Core_iterator_withIndex_11, align 8
  %1622 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1623 = call ptr @make_candy_function(ptr @Core_iterator_ensure, ptr %1622, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1623, ptr @fun_Core_iterator_ensure, align 8
  %1624 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1625 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_case-1_didNotMatch, ptr %1624, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1625, ptr @fun_Core_iterator_foldLeft_21_5_case-1_didNotMatch, align 8
  %1626 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1627 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft, ptr %1626, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1627, ptr @fun_Core_iterator_foldLeft, align 8
  %1628 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1629 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1629, align 1
  %1630 = call ptr @make_candy_tag(ptr %1629, ptr %1628)
  store ptr %1630, ptr @tag_Error.1200, align 8
  %1631 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1632 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_case-0_matched, ptr %1631, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1632, ptr @fun_Core_iterator_reduceLeft_16_case-0_matched, align 8
  %1633 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1634 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_case-1_didNotMatch, ptr %1633, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1634, ptr @fun_Core_iterator_reduceLeft_16_case-1_didNotMatch, align 8
  %1635 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1636 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft, ptr %1635, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1636, ptr @fun_Core_iterator_reduceLeft, align 8
  %1637 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1638 = call ptr @make_candy_function(ptr @Core_iterator_sum_8, ptr %1637, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1638, ptr @fun_Core_iterator_sum_8, align 8
  %1639 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1640 = call ptr @make_candy_function(ptr @Core_iterator_sum, ptr %1639, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1640, ptr @fun_Core_iterator_sum, align 8
  %1641 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1642 = call ptr @make_candy_function(ptr @Core_iterator_length_5, ptr %1641, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1642, ptr @fun_Core_iterator_length_5, align 8
  %1643 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1644 = call ptr @make_candy_function(ptr @Core_iterator_joinToText, ptr %1643, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1644, ptr @fun_Core_iterator_joinToText, align 8
  %1645 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1646 = call ptr @make_candy_function(ptr @"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1224", ptr %1645, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1646, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1225", align 8
  %1647 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1648 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1226, ptr %1647, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1648, ptr @fun_Core_iterator_wrapSafe_14.1227, align 8
  %1649 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1650 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1280, ptr %1649, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1650, ptr @fun_Core_controlFlow_recursive_16.1281, align 8
  %1651 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1652 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_case-1_didNotMatch, ptr %1651, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1652, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_didNotMatch, align 8
  %1653 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1654 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_case-1_didNotMatch, ptr %1653, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1654, ptr @fun_Core_iterator_where_17_2_3_case-1_didNotMatch, align 8
  %1655 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1656 = call ptr @make_candy_function(ptr @"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1284", ptr %1655, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1656, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1285", align 8
  %1657 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1658 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1286, ptr %1657, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1658, ptr @fun_Core_iterator_wrapSafe_14.1287, align 8
  %1659 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1660 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1340, ptr %1659, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1660, ptr @fun_Core_controlFlow_recursive_16.1341, align 8
  %1661 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1662 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch, ptr %1661, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1662, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %1663 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1664 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile, ptr %1663, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1664, ptr @fun_Core_iterator_takeWhile, align 8
  %1665 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1666 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_2, ptr %1665, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1666, ptr @fun_Core_iterator_withIndex_2, align 8
  %1667 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1668 = call ptr @make_candy_function(ptr @Core_iterator_take_30, ptr %1667, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1668, ptr @fun_Core_iterator_take_30, align 8
  %1669 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1670 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_case-1_didNotMatch, ptr %1669, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1670, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_didNotMatch, align 8
  %1671 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1672 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6, ptr %1671, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1672, ptr @fun_Core_iterator_skip_26_6, align 8
  %1673 = alloca ptr, i64 1, align 8
  %1674 = getelementptr ptr, ptr %1673, i64 0
  store ptr null, ptr %1674, align 8
  %1675 = call ptr @make_candy_list(ptr %1673)
  store ptr %1675, ptr @356, align 8
  %1676 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1677 = call ptr @make_candy_function(ptr @Core_iterator_toList_6, ptr %1676, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1677, ptr @fun_Core_iterator_toList_6, align 8
  %1678 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1679 = call ptr @make_candy_function(ptr @"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1678, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1679, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1680 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1681 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1399, ptr %1680, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1681, ptr @fun_Core_iterator_wrapSafe_14.1400, align 8
  %1682 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1683 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1453, ptr %1682, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1683, ptr @fun_Core_controlFlow_recursive_16.1454, align 8
  %1684 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1685 = call ptr @make_candy_function(ptr @Core_iterator_toList_2, ptr %1684, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1685, ptr @fun_Core_iterator_toList_2, align 8
  %1686 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1687 = call ptr @make_candy_function(ptr @"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1686, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1687, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1688 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1689 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1457, ptr %1688, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1689, ptr @fun_Core_iterator_wrapSafe_14.1458, align 8
  %1690 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1691 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1511, ptr %1690, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1691, ptr @fun_Core_controlFlow_recursive_16.1512, align 8
  %1692 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1693 = call ptr @make_candy_function(ptr @Core_iterator_windowed, ptr %1692, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1693, ptr @fun_Core_iterator_windowed, align 8
  %1694 = alloca ptr, i64 4, align 8
  %1695 = load ptr, ptr @num_1, align 8
  %1696 = getelementptr ptr, ptr %1694, i64 0
  store ptr %1695, ptr %1696, align 8
  %1697 = load ptr, ptr @num_2, align 8
  %1698 = getelementptr ptr, ptr %1694, i64 1
  store ptr %1697, ptr %1698, align 8
  %1699 = load ptr, ptr @num_3, align 8
  %1700 = getelementptr ptr, ptr %1694, i64 2
  store ptr %1699, ptr %1700, align 8
  %1701 = getelementptr ptr, ptr %1694, i64 3
  store ptr null, ptr %1701, align 8
  %1702 = call ptr @make_candy_list(ptr %1694)
  store ptr %1702, ptr @389, align 8
  %1703 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1704 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12.1535, ptr %1703, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1704, ptr @fun_Core_iterator_generateWithState_12.1536, align 8
  %1705 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1706 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1596, ptr %1705, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1706, ptr @fun_Core_controlFlow_recursive_16.1597, align 8
  %1707 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1597, align 8
  %1708 = load ptr, ptr @num_0, align 8
  %1709 = call ptr @Core_controlFlow_recursive_16.1596(ptr %1707, ptr %1708)
  %1710 = alloca ptr, i64 11, align 8
  %1711 = load ptr, ptr @num_1, align 8
  %1712 = getelementptr ptr, ptr %1710, i64 0
  store ptr %1711, ptr %1712, align 8
  %1713 = load ptr, ptr @num_2, align 8
  %1714 = getelementptr ptr, ptr %1710, i64 1
  store ptr %1713, ptr %1714, align 8
  %1715 = load ptr, ptr @num_3, align 8
  %1716 = getelementptr ptr, ptr %1710, i64 2
  store ptr %1715, ptr %1716, align 8
  %1717 = load ptr, ptr @num_4, align 8
  %1718 = getelementptr ptr, ptr %1710, i64 3
  store ptr %1717, ptr %1718, align 8
  %1719 = load ptr, ptr @num_5, align 8
  %1720 = getelementptr ptr, ptr %1710, i64 4
  store ptr %1719, ptr %1720, align 8
  %1721 = load ptr, ptr @num_6, align 8
  %1722 = getelementptr ptr, ptr %1710, i64 5
  store ptr %1721, ptr %1722, align 8
  %1723 = load ptr, ptr @num_7, align 8
  %1724 = getelementptr ptr, ptr %1710, i64 6
  store ptr %1723, ptr %1724, align 8
  %1725 = load ptr, ptr @num_8, align 8
  %1726 = getelementptr ptr, ptr %1710, i64 7
  store ptr %1725, ptr %1726, align 8
  %1727 = load ptr, ptr @num_9, align 8
  %1728 = getelementptr ptr, ptr %1710, i64 8
  store ptr %1727, ptr %1728, align 8
  %1729 = load ptr, ptr @num_10, align 8
  %1730 = getelementptr ptr, ptr %1710, i64 9
  store ptr %1729, ptr %1730, align 8
  %1731 = getelementptr ptr, ptr %1710, i64 10
  store ptr null, ptr %1731, align 8
  %1732 = call ptr @make_candy_list(ptr %1710)
  store ptr %1732, ptr @402, align 8
  %1733 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1734 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12.1600, ptr %1733, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1734, ptr @fun_Core_iterator_generateWithState_12.1601, align 8
  %1735 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1736 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1663, ptr %1735, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1736, ptr @fun_Core_controlFlow_recursive_16.1664, align 8
  %1737 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1664, align 8
  %1738 = load ptr, ptr @num_0, align 8
  %1739 = call ptr @Core_controlFlow_recursive_16.1663(ptr %1737, ptr %1738)
  %1740 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1741 = call ptr @make_candy_function(ptr @"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1667", ptr %1740, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1741, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1668", align 8
  %1742 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1743 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1669, ptr %1742, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1743, ptr @fun_Core_iterator_wrapSafe_14.1670, align 8
  %1744 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1745 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1723, ptr %1744, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1745, ptr @fun_Core_controlFlow_recursive_16.1724, align 8
  %1746 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1724, align 8
  %1747 = call ptr @Core_controlFlow_recursive_16.1723(ptr %1746, ptr %1709)
  %1748 = call ptr @candy_builtin_type_of(ptr %1747)
  %1749 = load ptr, ptr @tag_Tag, align 8
  %1750 = call ptr @candy_builtin_equals(ptr %1749, ptr %1748)
  %1751 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1752 = getelementptr inbounds { ptr }, ptr %1751, i32 0, i32 0
  store ptr %1747, ptr %1752, align 8
  %1753 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1727, ptr %1751, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1753, ptr @fun_Core_iterator_next_6_equals_then.1728, align 8
  %1754 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1755 = getelementptr inbounds { ptr }, ptr %1754, i32 0, i32 0
  store ptr %1748, ptr %1755, align 8
  %1756 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.1735, ptr %1754, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1756, ptr @fun_Core_iterator_next_6_equals_else.1736, align 8
  %1757 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1728, align 8
  %1758 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1736, align 8
  %1759 = call ptr @candy_builtin_if_else(ptr %1750, ptr %1757, ptr %1758)
  %1760 = load ptr, ptr @num_0, align 8
  %1761 = call ptr @candy_builtin_list_get(ptr %1759, ptr %1760)
  %1762 = load ptr, ptr @tag_Match, align 8
  %1763 = call ptr @candy_builtin_equals(ptr %1761, ptr %1762)
  %1764 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1765 = getelementptr inbounds { ptr }, ptr %1764, i32 0, i32 0
  store ptr %1759, ptr %1765, align 8
  %1766 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else.1737, ptr %1764, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1766, ptr @fun_Core_iterator_next_6_isMatch_else.1738, align 8
  %1767 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1768 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.1738, align 8
  %1769 = call ptr @candy_builtin_if_else(ptr %1763, ptr %1767, ptr %1768)
  %1770 = load ptr, ptr @num_1, align 8
  %1771 = call ptr @candy_builtin_list_get(ptr %1759, ptr %1770)
  %1772 = call ptr @Core_function_run(ptr %1771)
  %1773 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:130\00", ptr %1773, align 1
  %1774 = call ptr @make_candy_text(ptr %1773)
  store ptr %1774, ptr @"Core:iterator:130", align 8
  %1775 = call ptr @candy_builtin_type_of(ptr %1772)
  %1776 = load ptr, ptr @tag_Tag, align 8
  %1777 = call ptr @candy_builtin_equals(ptr %1776, ptr %1775)
  %1778 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1779 = getelementptr inbounds { ptr }, ptr %1778, i32 0, i32 0
  store ptr %1772, ptr %1779, align 8
  %1780 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_then, ptr %1778, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1780, ptr @fun_Core_iterator_130_equals_then, align 8
  %1781 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1782 = getelementptr inbounds { ptr }, ptr %1781, i32 0, i32 0
  store ptr %1775, ptr %1782, align 8
  %1783 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_else.1755, ptr %1781, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1783, ptr @fun_Core_iterator_130_equals_else.1756, align 8
  %1784 = load ptr, ptr @fun_Core_iterator_130_equals_then, align 8
  %1785 = load ptr, ptr @fun_Core_iterator_130_equals_else.1756, align 8
  %1786 = call ptr @candy_builtin_if_else(ptr %1777, ptr %1784, ptr %1785)
  %1787 = load ptr, ptr @num_0, align 8
  %1788 = call ptr @candy_builtin_list_get(ptr %1786, ptr %1787)
  %1789 = load ptr, ptr @tag_Match, align 8
  %1790 = call ptr @candy_builtin_equals(ptr %1788, ptr %1789)
  %1791 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1792 = getelementptr inbounds { ptr }, ptr %1791, i32 0, i32 0
  store ptr %1786, ptr %1792, align 8
  %1793 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_else.1757, ptr %1791, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1793, ptr @fun_Core_iterator_130_isMatch_else.1758, align 8
  %1794 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1795 = load ptr, ptr @fun_Core_iterator_130_isMatch_else.1758, align 8
  %1796 = call ptr @candy_builtin_if_else(ptr %1790, ptr %1794, ptr %1795)
  %1797 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:item\00", ptr %1797, align 1
  %1798 = call ptr @make_candy_text(ptr %1797)
  store ptr %1798, ptr @"Core:iterator:item", align 8
  %1799 = load ptr, ptr @num_1, align 8
  %1800 = call ptr @candy_builtin_list_get(ptr %1786, ptr %1799)
  %1801 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:rest\00", ptr %1801, align 1
  %1802 = call ptr @make_candy_text(ptr %1801)
  store ptr %1802, ptr @"Core:iterator:rest", align 8
  %1803 = load ptr, ptr @num_2, align 8
  %1804 = call ptr @candy_builtin_list_get(ptr %1786, ptr %1803)
  %1805 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:135\00", ptr %1805, align 1
  %1806 = call ptr @make_candy_text(ptr %1805)
  store ptr %1806, ptr @"Core:iterator:135", align 8
  %1807 = load ptr, ptr @num_1, align 8
  %1808 = call ptr @Core_check_checkEquals(ptr %1800, ptr %1807)
  %1809 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:138\00", ptr %1809, align 1
  %1810 = call ptr @make_candy_text(ptr %1809)
  store ptr %1810, ptr @"Core:iterator:138", align 8
  %1811 = call ptr @Core_iterator_next(ptr %1804)
  %1812 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:139\00", ptr %1812, align 1
  %1813 = call ptr @make_candy_text(ptr %1812)
  store ptr %1813, ptr @"Core:iterator:139", align 8
  %1814 = call ptr @candy_builtin_type_of(ptr %1811)
  %1815 = load ptr, ptr @tag_Tag, align 8
  %1816 = call ptr @candy_builtin_equals(ptr %1815, ptr %1814)
  %1817 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1818 = getelementptr inbounds { ptr }, ptr %1817, i32 0, i32 0
  store ptr %1811, ptr %1818, align 8
  %1819 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_then, ptr %1817, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1819, ptr @fun_Core_iterator_139_equals_then, align 8
  %1820 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1821 = getelementptr inbounds { ptr }, ptr %1820, i32 0, i32 0
  store ptr %1814, ptr %1821, align 8
  %1822 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_else.1775, ptr %1820, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1822, ptr @fun_Core_iterator_139_equals_else.1776, align 8
  %1823 = load ptr, ptr @fun_Core_iterator_139_equals_then, align 8
  %1824 = load ptr, ptr @fun_Core_iterator_139_equals_else.1776, align 8
  %1825 = call ptr @candy_builtin_if_else(ptr %1816, ptr %1823, ptr %1824)
  %1826 = load ptr, ptr @num_0, align 8
  %1827 = call ptr @candy_builtin_list_get(ptr %1825, ptr %1826)
  %1828 = load ptr, ptr @tag_Match, align 8
  %1829 = call ptr @candy_builtin_equals(ptr %1827, ptr %1828)
  %1830 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1831 = getelementptr inbounds { ptr }, ptr %1830, i32 0, i32 0
  store ptr %1825, ptr %1831, align 8
  %1832 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_else.1777, ptr %1830, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1832, ptr @fun_Core_iterator_139_isMatch_else.1778, align 8
  %1833 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1834 = load ptr, ptr @fun_Core_iterator_139_isMatch_else.1778, align 8
  %1835 = call ptr @candy_builtin_if_else(ptr %1829, ptr %1833, ptr %1834)
  %1836 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:item#1\00", ptr %1836, align 1
  %1837 = call ptr @make_candy_text(ptr %1836)
  store ptr %1837, ptr @"Core:iterator:item#1", align 8
  %1838 = load ptr, ptr @num_1, align 8
  %1839 = call ptr @candy_builtin_list_get(ptr %1825, ptr %1838)
  %1840 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:144\00", ptr %1840, align 1
  %1841 = call ptr @make_candy_text(ptr %1840)
  store ptr %1841, ptr @"Core:iterator:144", align 8
  %1842 = load ptr, ptr @num_2, align 8
  %1843 = call ptr @Core_check_checkEquals(ptr %1839, ptr %1842)
  %1844 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:149\00", ptr %1844, align 1
  %1845 = call ptr @make_candy_text(ptr %1844)
  store ptr %1845, ptr @"Core:iterator:149", align 8
  %1846 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1847 = call ptr @make_candy_function(ptr @"Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1846, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1847, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1848 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1849 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1779, ptr %1848, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1849, ptr @fun_Core_iterator_wrapSafe_14.1780, align 8
  %1850 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1851 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1833, ptr %1850, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1851, ptr @fun_Core_controlFlow_recursive_16.1834, align 8
  %1852 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1834, align 8
  %1853 = call ptr @Core_controlFlow_recursive_16.1833(ptr %1852, ptr %1709)
  %1854 = call ptr @Core_iterator_next(ptr %1853)
  %1855 = load ptr, ptr @tag_Empty, align 8
  %1856 = call ptr @candy_builtin_equals(ptr %1854, ptr %1855)
  %1857 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:151\00", ptr %1857, align 1
  %1858 = call ptr @make_candy_text(ptr %1857)
  store ptr %1858, ptr @"Core:iterator:151", align 8
  %1859 = load ptr, ptr @tag_False, align 8
  %1860 = call ptr @Core_check_checkEquals(ptr %1856, ptr %1859)
  %1861 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1862 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12.1837, ptr %1861, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1862, ptr @fun_Core_iterator_generateWithState_12.1838, align 8
  %1863 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1864 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1900, ptr %1863, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1864, ptr @fun_Core_controlFlow_recursive_16.1901, align 8
  %1865 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1901, align 8
  %1866 = load ptr, ptr @num_0, align 8
  %1867 = call ptr @Core_controlFlow_recursive_16.1900(ptr %1865, ptr %1866)
  %1868 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:157\00", ptr %1868, align 1
  %1869 = call ptr @make_candy_text(ptr %1868)
  store ptr %1869, ptr @"Core:iterator:157", align 8
  %1870 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1871 = call ptr @make_candy_function(ptr @"Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1904", ptr %1870, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1871, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1905", align 8
  %1872 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1873 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1906, ptr %1872, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1873, ptr @fun_Core_iterator_wrapSafe_14.1907, align 8
  %1874 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1875 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.1960, ptr %1874, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1875, ptr @fun_Core_controlFlow_recursive_16.1961, align 8
  %1876 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1961, align 8
  %1877 = call ptr @Core_controlFlow_recursive_16.1960(ptr %1876, ptr %1867)
  %1878 = call ptr @Core_iterator_next(ptr %1877)
  %1879 = load ptr, ptr @tag_Empty, align 8
  %1880 = call ptr @candy_builtin_equals(ptr %1878, ptr %1879)
  %1881 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:159\00", ptr %1881, align 1
  %1882 = call ptr @make_candy_text(ptr %1881)
  store ptr %1882, ptr @"Core:iterator:159", align 8
  %1883 = load ptr, ptr @tag_True, align 8
  %1884 = call ptr @Core_check_checkEquals(ptr %1880, ptr %1883)
  %1885 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:163:8\00", ptr %1885, align 1
  %1886 = call ptr @make_candy_text(ptr %1885)
  store ptr %1886, ptr @"Core:iterator:163:8", align 8
  %1887 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:164\00", ptr %1887, align 1
  %1888 = call ptr @make_candy_text(ptr %1887)
  store ptr %1888, ptr @"Core:iterator:164", align 8
  %1889 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1890 = call ptr @make_candy_function(ptr @"Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1889, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1890, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1891 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1892 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.1964, ptr %1891, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1892, ptr @fun_Core_iterator_wrapSafe_14.1965, align 8
  %1893 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1894 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2018, ptr %1893, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1894, ptr @fun_Core_controlFlow_recursive_16.2019, align 8
  %1895 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2019, align 8
  %1896 = call ptr @Core_controlFlow_recursive_16.2018(ptr %1895, ptr %1709)
  %1897 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1898 = call ptr @make_candy_function(ptr @Core_iterator_map_17.2022, ptr %1897, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1898, ptr @fun_Core_iterator_map_17.2023, align 8
  %1899 = load ptr, ptr @fun_Core_iterator_map_17.2023, align 8
  %1900 = call ptr @Core_iterator_generateWithState(ptr %1896, ptr %1899)
  %1901 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:166\00", ptr %1901, align 1
  %1902 = call ptr @make_candy_text(ptr %1901)
  store ptr %1902, ptr @"Core:iterator:166", align 8
  %1903 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1904 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.2073, ptr %1903, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1904, ptr @fun_Core_iterator_toList_2.2074, align 8
  %1905 = load ptr, ptr @fun_Core_iterator_toList_2.2074, align 8
  %1906 = call ptr @Core_iterator_wrapSafe(ptr %1900, ptr %1905)
  %1907 = load ptr, ptr @356, align 8
  %1908 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1909 = call ptr @Core_iterator_foldLeft(ptr %1906, ptr %1907, ptr %1908)
  %1910 = alloca ptr, i64 4, align 8
  %1911 = load ptr, ptr @num_2, align 8
  %1912 = getelementptr ptr, ptr %1910, i64 0
  store ptr %1911, ptr %1912, align 8
  %1913 = load ptr, ptr @num_4, align 8
  %1914 = getelementptr ptr, ptr %1910, i64 1
  store ptr %1913, ptr %1914, align 8
  %1915 = load ptr, ptr @num_6, align 8
  %1916 = getelementptr ptr, ptr %1910, i64 2
  store ptr %1915, ptr %1916, align 8
  %1917 = getelementptr ptr, ptr %1910, i64 3
  store ptr null, ptr %1917, align 8
  %1918 = call ptr @make_candy_list(ptr %1910)
  store ptr %1918, ptr @506, align 8
  %1919 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:171\00", ptr %1919, align 1
  %1920 = call ptr @make_candy_text(ptr %1919)
  store ptr %1920, ptr @"Core:iterator:171", align 8
  %1921 = load ptr, ptr @506, align 8
  %1922 = call ptr @Core_check_checkEquals(ptr %1909, ptr %1921)
  %1923 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:175\00", ptr %1923, align 1
  %1924 = call ptr @make_candy_text(ptr %1923)
  store ptr %1924, ptr @"Core:iterator:175", align 8
  %1925 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1926 = call ptr @make_candy_function(ptr @"Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1925, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1926, ptr @"fun_Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1927 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1928 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2075, ptr %1927, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1928, ptr @fun_Core_iterator_wrapSafe_14.2076, align 8
  %1929 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1930 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2129, ptr %1929, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1930, ptr @fun_Core_controlFlow_recursive_16.2130, align 8
  %1931 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2130, align 8
  %1932 = call ptr @Core_controlFlow_recursive_16.2129(ptr %1931, ptr %1709)
  %1933 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1934 = call ptr @make_candy_function(ptr @Core_iterator_sum_5.2133, ptr %1933, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1934, ptr @fun_Core_iterator_sum_5.2134, align 8
  %1935 = load ptr, ptr @fun_Core_iterator_sum_5.2134, align 8
  %1936 = call ptr @Core_iterator_ensure(ptr %1932, ptr %1935)
  %1937 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  %1938 = call ptr @Core_iterator_reduceLeft(ptr %1936, ptr %1937)
  %1939 = load ptr, ptr @num_0, align 8
  %1940 = call ptr @Core_result_unwrapOr(ptr %1938, ptr %1939)
  %1941 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:177\00", ptr %1941, align 1
  %1942 = call ptr @make_candy_text(ptr %1941)
  store ptr %1942, ptr @"Core:iterator:177", align 8
  %1943 = load ptr, ptr @num_6, align 8
  %1944 = call ptr @Core_check_checkEquals(ptr %1940, ptr %1943)
  %1945 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:181\00", ptr %1945, align 1
  %1946 = call ptr @make_candy_text(ptr %1945)
  store ptr %1946, ptr @"Core:iterator:181", align 8
  %1947 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1948 = call ptr @make_candy_function(ptr @"Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1947, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1948, ptr @"fun_Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1949 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1950 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2135, ptr %1949, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1950, ptr @fun_Core_iterator_wrapSafe_14.2136, align 8
  %1951 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1952 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2189, ptr %1951, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1952, ptr @fun_Core_controlFlow_recursive_16.2190, align 8
  %1953 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2190, align 8
  %1954 = call ptr @Core_controlFlow_recursive_16.2189(ptr %1953, ptr %1709)
  %1955 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %1956 = call ptr @Core_iterator_map(ptr %1954, ptr %1955)
  %1957 = call ptr @Core_iterator_sum(ptr %1956)
  %1958 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:183\00", ptr %1958, align 1
  %1959 = call ptr @make_candy_text(ptr %1958)
  store ptr %1959, ptr @"Core:iterator:183", align 8
  %1960 = load ptr, ptr @num_3, align 8
  %1961 = call ptr @Core_check_checkEquals(ptr %1957, ptr %1960)
  %1962 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:187:7\00", ptr %1962, align 1
  %1963 = call ptr @make_candy_text(ptr %1962)
  store ptr %1963, ptr @"Core:iterator:187:7", align 8
  %1964 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:188\00", ptr %1964, align 1
  %1965 = call ptr @make_candy_text(ptr %1964)
  store ptr %1965, ptr @"Core:iterator:188", align 8
  %1966 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1967 = call ptr @make_candy_function(ptr @"Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1966, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1967, ptr @"fun_Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1968 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1969 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2193, ptr %1968, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1969, ptr @fun_Core_iterator_wrapSafe_14.2194, align 8
  %1970 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1971 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2247, ptr %1970, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1971, ptr @fun_Core_controlFlow_recursive_16.2248, align 8
  %1972 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2248, align 8
  %1973 = call ptr @Core_controlFlow_recursive_16.2247(ptr %1972, ptr %1709)
  %1974 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1975 = call ptr @make_candy_function(ptr @Core_iterator_all_16, ptr %1974, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1975, ptr @fun_Core_iterator_all_16, align 8
  %1976 = load ptr, ptr @tag_True, align 8
  %1977 = load ptr, ptr @fun_Core_iterator_all_16, align 8
  %1978 = call ptr @Core_iterator_foldLeft(ptr %1973, ptr %1976, ptr %1977)
  %1979 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:190\00", ptr %1979, align 1
  %1980 = call ptr @make_candy_text(ptr %1979)
  store ptr %1980, ptr @"Core:iterator:190", align 8
  %1981 = load ptr, ptr @tag_True, align 8
  %1982 = call ptr @Core_check_checkEquals(ptr %1978, ptr %1981)
  %1983 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:195\00", ptr %1983, align 1
  %1984 = call ptr @make_candy_text(ptr %1983)
  store ptr %1984, ptr @"Core:iterator:195", align 8
  %1985 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1986 = call ptr @make_candy_function(ptr @"Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %1985, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1986, ptr @"fun_Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %1987 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1988 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2251, ptr %1987, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1988, ptr @fun_Core_iterator_wrapSafe_14.2252, align 8
  %1989 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1990 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2305, ptr %1989, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1990, ptr @fun_Core_controlFlow_recursive_16.2306, align 8
  %1991 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2306, align 8
  %1992 = call ptr @Core_controlFlow_recursive_16.2305(ptr %1991, ptr %1709)
  %1993 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1994 = call ptr @make_candy_function(ptr @Core_iterator_any_16, ptr %1993, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1994, ptr @fun_Core_iterator_any_16, align 8
  %1995 = load ptr, ptr @tag_False, align 8
  %1996 = load ptr, ptr @fun_Core_iterator_any_16, align 8
  %1997 = call ptr @Core_iterator_foldLeft(ptr %1992, ptr %1995, ptr %1996)
  %1998 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:197\00", ptr %1998, align 1
  %1999 = call ptr @make_candy_text(ptr %1998)
  store ptr %1999, ptr @"Core:iterator:197", align 8
  %2000 = load ptr, ptr @tag_True, align 8
  %2001 = call ptr @Core_check_checkEquals(ptr %1997, ptr %2000)
  %2002 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:202\00", ptr %2002, align 1
  %2003 = call ptr @make_candy_text(ptr %2002)
  store ptr %2003, ptr @"Core:iterator:202", align 8
  %2004 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2005 = call ptr @make_candy_function(ptr @"Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2309", ptr %2004, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2005, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2310", align 8
  %2006 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2007 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2311, ptr %2006, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2007, ptr @fun_Core_iterator_wrapSafe_14.2312, align 8
  %2008 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2009 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2365, ptr %2008, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2009, ptr @fun_Core_controlFlow_recursive_16.2366, align 8
  %2010 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2366, align 8
  %2011 = call ptr @Core_controlFlow_recursive_16.2365(ptr %2010, ptr %1709)
  %2012 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2013 = call ptr @make_candy_function(ptr @Core_iterator_map_17.2369, ptr %2012, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2013, ptr @fun_Core_iterator_map_17.2370, align 8
  %2014 = load ptr, ptr @fun_Core_iterator_map_17.2370, align 8
  %2015 = call ptr @Core_iterator_generateWithState(ptr %2011, ptr %2014)
  %2016 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:204\00", ptr %2016, align 1
  %2017 = call ptr @make_candy_text(ptr %2016)
  store ptr %2017, ptr @"Core:iterator:204", align 8
  %2018 = call ptr @Core_iterator_joinToText(ptr %2015)
  %2019 = alloca i8, i64 4, align 1
  store [4 x i8] c"123\00", ptr %2019, align 1
  %2020 = call ptr @make_candy_text(ptr %2019)
  store ptr %2020, ptr @text_123, align 8
  %2021 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:212\00", ptr %2021, align 1
  %2022 = call ptr @make_candy_text(ptr %2021)
  store ptr %2022, ptr @"Core:iterator:212", align 8
  %2023 = load ptr, ptr @text_123, align 8
  %2024 = call ptr @Core_check_checkEquals(ptr %2018, ptr %2023)
  %2025 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:216:7\00", ptr %2025, align 1
  %2026 = call ptr @make_candy_text(ptr %2025)
  store ptr %2026, ptr @"Core:iterator:216:7", align 8
  %2027 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2028 = call ptr @make_candy_function(ptr @Core_iterator_216, ptr %2027, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2028, ptr @fun_Core_iterator_216, align 8
  %2029 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:217\00", ptr %2029, align 1
  %2030 = call ptr @make_candy_text(ptr %2029)
  store ptr %2030, ptr @"Core:iterator:217", align 8
  %2031 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2032 = call ptr @make_candy_function(ptr @"Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %2031, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2032, ptr @"fun_Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %2033 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2034 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2420, ptr %2033, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2034, ptr @fun_Core_iterator_wrapSafe_14.2421, align 8
  %2035 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2036 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2474, ptr %2035, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2036, ptr @fun_Core_controlFlow_recursive_16.2475, align 8
  %2037 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2475, align 8
  %2038 = call ptr @Core_controlFlow_recursive_16.2474(ptr %2037, ptr %1739)
  %2039 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2040 = call ptr @make_candy_function(ptr @Core_iterator_where_17, ptr %2039, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2040, ptr @fun_Core_iterator_where_17, align 8
  %2041 = load ptr, ptr @fun_Core_iterator_where_17, align 8
  %2042 = call ptr @Core_controlFlow_recursive(ptr %2038, ptr %2041)
  %2043 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:219\00", ptr %2043, align 1
  %2044 = call ptr @make_candy_text(ptr %2043)
  store ptr %2044, ptr @"Core:iterator:219", align 8
  %2045 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2046 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.2532, ptr %2045, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2046, ptr @fun_Core_iterator_toList_2.2533, align 8
  %2047 = load ptr, ptr @fun_Core_iterator_toList_2.2533, align 8
  %2048 = call ptr @Core_iterator_wrapSafe(ptr %2042, ptr %2047)
  %2049 = load ptr, ptr @356, align 8
  %2050 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2051 = call ptr @Core_iterator_foldLeft(ptr %2048, ptr %2049, ptr %2050)
  %2052 = alloca ptr, i64 6, align 8
  %2053 = load ptr, ptr @num_1, align 8
  %2054 = getelementptr ptr, ptr %2052, i64 0
  store ptr %2053, ptr %2054, align 8
  %2055 = load ptr, ptr @num_3, align 8
  %2056 = getelementptr ptr, ptr %2052, i64 1
  store ptr %2055, ptr %2056, align 8
  %2057 = load ptr, ptr @num_5, align 8
  %2058 = getelementptr ptr, ptr %2052, i64 2
  store ptr %2057, ptr %2058, align 8
  %2059 = load ptr, ptr @num_7, align 8
  %2060 = getelementptr ptr, ptr %2052, i64 3
  store ptr %2059, ptr %2060, align 8
  %2061 = load ptr, ptr @num_9, align 8
  %2062 = getelementptr ptr, ptr %2052, i64 4
  store ptr %2061, ptr %2062, align 8
  %2063 = getelementptr ptr, ptr %2052, i64 5
  store ptr null, ptr %2063, align 8
  %2064 = call ptr @make_candy_list(ptr %2052)
  store ptr %2064, ptr @612, align 8
  %2065 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:226\00", ptr %2065, align 1
  %2066 = call ptr @make_candy_text(ptr %2065)
  store ptr %2066, ptr @"Core:iterator:226", align 8
  %2067 = load ptr, ptr @612, align 8
  %2068 = call ptr @Core_check_checkEquals(ptr %2051, ptr %2067)
  %2069 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:230:8\00", ptr %2069, align 1
  %2070 = call ptr @make_candy_text(ptr %2069)
  store ptr %2070, ptr @"Core:iterator:230:8", align 8
  %2071 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2072 = call ptr @make_candy_function(ptr @Core_iterator_230, ptr %2071, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2072, ptr @fun_Core_iterator_230, align 8
  %2073 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:231\00", ptr %2073, align 1
  %2074 = call ptr @make_candy_text(ptr %2073)
  store ptr %2074, ptr @"Core:iterator:231", align 8
  %2075 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2076 = call ptr @make_candy_function(ptr @"Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %2075, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2076, ptr @"fun_Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %2077 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2078 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2534, ptr %2077, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2078, ptr @fun_Core_iterator_wrapSafe_14.2535, align 8
  %2079 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2080 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2588, ptr %2079, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2080, ptr @fun_Core_controlFlow_recursive_16.2589, align 8
  %2081 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2589, align 8
  %2082 = call ptr @Core_controlFlow_recursive_16.2588(ptr %2081, ptr %1739)
  %2083 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2084 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7.2592, ptr %2083, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2084, ptr @fun_Core_iterator_takeWhile_7.2593, align 8
  %2085 = load ptr, ptr @fun_Core_iterator_takeWhile_7.2593, align 8
  %2086 = call ptr @Core_iterator_generateWithState(ptr %2082, ptr %2085)
  %2087 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:233\00", ptr %2087, align 1
  %2088 = call ptr @make_candy_text(ptr %2087)
  store ptr %2088, ptr @"Core:iterator:233", align 8
  %2089 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2090 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.2645, ptr %2089, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2090, ptr @fun_Core_iterator_toList_2.2646, align 8
  %2091 = load ptr, ptr @fun_Core_iterator_toList_2.2646, align 8
  %2092 = call ptr @Core_iterator_wrapSafe(ptr %2086, ptr %2091)
  %2093 = load ptr, ptr @356, align 8
  %2094 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2095 = call ptr @Core_iterator_foldLeft(ptr %2092, ptr %2093, ptr %2094)
  %2096 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:238\00", ptr %2096, align 1
  %2097 = call ptr @make_candy_text(ptr %2096)
  store ptr %2097, ptr @"Core:iterator:238", align 8
  %2098 = load ptr, ptr @389, align 8
  %2099 = call ptr @Core_check_checkEquals(ptr %2095, ptr %2098)
  %2100 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:243\00", ptr %2100, align 1
  %2101 = call ptr @make_candy_text(ptr %2100)
  store ptr %2101, ptr @"Core:iterator:243", align 8
  %2102 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2103 = call ptr @make_candy_function(ptr @"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2647", ptr %2102, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2103, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2648", align 8
  %2104 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2105 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2649, ptr %2104, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2105, ptr @fun_Core_iterator_wrapSafe_14.2650, align 8
  %2106 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2107 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2703, ptr %2106, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2107, ptr @fun_Core_controlFlow_recursive_16.2704, align 8
  %2108 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2704, align 8
  %2109 = call ptr @Core_controlFlow_recursive_16.2703(ptr %2108, ptr %1739)
  %2110 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  %2111 = call ptr @Core_iterator_wrapSafe(ptr %2109, ptr %2110)
  %2112 = alloca ptr, i64 3, align 8
  %2113 = alloca ptr, i64 3, align 8
  %2114 = load ptr, ptr @tag_Iterator, align 8
  %2115 = getelementptr ptr, ptr %2112, i64 0
  store ptr %2114, ptr %2115, align 8
  %2116 = getelementptr ptr, ptr %2113, i64 0
  store ptr %2111, ptr %2116, align 8
  %2117 = load ptr, ptr @tag_Index, align 8
  %2118 = load ptr, ptr @num_0, align 8
  %2119 = getelementptr ptr, ptr %2112, i64 1
  store ptr %2117, ptr %2119, align 8
  %2120 = getelementptr ptr, ptr %2113, i64 1
  store ptr %2118, ptr %2120, align 8
  %2121 = getelementptr ptr, ptr %2112, i64 2
  store ptr null, ptr %2121, align 8
  %2122 = getelementptr ptr, ptr %2113, i64 2
  store ptr null, ptr %2122, align 8
  %2123 = call ptr @make_candy_struct(ptr %2112, ptr %2113)
  %2124 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  %2125 = call ptr @Core_iterator_generateWithState(ptr %2123, ptr %2124)
  %2126 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2127 = call ptr @make_candy_function(ptr @Core_iterator_take_27.2707, ptr %2126, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2127, ptr @fun_Core_iterator_take_27.2708, align 8
  %2128 = load ptr, ptr @fun_Core_iterator_take_27.2708, align 8
  %2129 = call ptr @Core_iterator_takeWhile(ptr %2125, ptr %2128)
  %2130 = load ptr, ptr @fun_Core_iterator_take_30, align 8
  %2131 = call ptr @Core_iterator_map(ptr %2129, ptr %2130)
  %2132 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:245\00", ptr %2132, align 1
  %2133 = call ptr @make_candy_text(ptr %2132)
  store ptr %2133, ptr @"Core:iterator:245", align 8
  %2134 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2135 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.2731, ptr %2134, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2135, ptr @fun_Core_iterator_toList_2.2732, align 8
  %2136 = load ptr, ptr @fun_Core_iterator_toList_2.2732, align 8
  %2137 = call ptr @Core_iterator_wrapSafe(ptr %2131, ptr %2136)
  %2138 = load ptr, ptr @356, align 8
  %2139 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2140 = call ptr @Core_iterator_foldLeft(ptr %2137, ptr %2138, ptr %2139)
  %2141 = alloca ptr, i64 5, align 8
  %2142 = load ptr, ptr @num_1, align 8
  %2143 = getelementptr ptr, ptr %2141, i64 0
  store ptr %2142, ptr %2143, align 8
  %2144 = load ptr, ptr @num_2, align 8
  %2145 = getelementptr ptr, ptr %2141, i64 1
  store ptr %2144, ptr %2145, align 8
  %2146 = load ptr, ptr @num_3, align 8
  %2147 = getelementptr ptr, ptr %2141, i64 2
  store ptr %2146, ptr %2147, align 8
  %2148 = load ptr, ptr @num_4, align 8
  %2149 = getelementptr ptr, ptr %2141, i64 3
  store ptr %2148, ptr %2149, align 8
  %2150 = getelementptr ptr, ptr %2141, i64 4
  store ptr null, ptr %2150, align 8
  %2151 = call ptr @make_candy_list(ptr %2141)
  store ptr %2151, ptr @655, align 8
  %2152 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:251\00", ptr %2152, align 1
  %2153 = call ptr @make_candy_text(ptr %2152)
  store ptr %2153, ptr @"Core:iterator:251", align 8
  %2154 = load ptr, ptr @655, align 8
  %2155 = call ptr @Core_check_checkEquals(ptr %2140, ptr %2154)
  %2156 = call ptr @make_candy_int(i64 12)
  store ptr %2156, ptr @num_12, align 8
  %2157 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:256\00", ptr %2157, align 1
  %2158 = call ptr @make_candy_text(ptr %2157)
  store ptr %2158, ptr @"Core:iterator:256", align 8
  %2159 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2160 = call ptr @make_candy_function(ptr @"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2733", ptr %2159, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2160, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2734", align 8
  %2161 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2162 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2735, ptr %2161, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2162, ptr @fun_Core_iterator_wrapSafe_14.2736, align 8
  %2163 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2164 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2789, ptr %2163, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2164, ptr @fun_Core_controlFlow_recursive_16.2790, align 8
  %2165 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2790, align 8
  %2166 = call ptr @Core_controlFlow_recursive_16.2789(ptr %2165, ptr %1739)
  %2167 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  %2168 = call ptr @Core_iterator_wrapSafe(ptr %2166, ptr %2167)
  %2169 = alloca ptr, i64 3, align 8
  %2170 = alloca ptr, i64 3, align 8
  %2171 = load ptr, ptr @tag_Iterator, align 8
  %2172 = getelementptr ptr, ptr %2169, i64 0
  store ptr %2171, ptr %2172, align 8
  %2173 = getelementptr ptr, ptr %2170, i64 0
  store ptr %2168, ptr %2173, align 8
  %2174 = load ptr, ptr @tag_Index, align 8
  %2175 = load ptr, ptr @num_0, align 8
  %2176 = getelementptr ptr, ptr %2169, i64 1
  store ptr %2174, ptr %2176, align 8
  %2177 = getelementptr ptr, ptr %2170, i64 1
  store ptr %2175, ptr %2177, align 8
  %2178 = getelementptr ptr, ptr %2169, i64 2
  store ptr null, ptr %2178, align 8
  %2179 = getelementptr ptr, ptr %2170, i64 2
  store ptr null, ptr %2179, align 8
  %2180 = call ptr @make_candy_struct(ptr %2169, ptr %2170)
  %2181 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  %2182 = call ptr @Core_iterator_generateWithState(ptr %2180, ptr %2181)
  %2183 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2184 = call ptr @make_candy_function(ptr @Core_iterator_take_27.2793, ptr %2183, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2184, ptr @fun_Core_iterator_take_27.2794, align 8
  %2185 = load ptr, ptr @fun_Core_iterator_take_27.2794, align 8
  %2186 = call ptr @Core_iterator_takeWhile(ptr %2182, ptr %2185)
  %2187 = load ptr, ptr @fun_Core_iterator_take_30, align 8
  %2188 = call ptr @Core_iterator_map(ptr %2186, ptr %2187)
  %2189 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:258\00", ptr %2189, align 1
  %2190 = call ptr @make_candy_text(ptr %2189)
  store ptr %2190, ptr @"Core:iterator:258", align 8
  %2191 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2192 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.2817, ptr %2191, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2192, ptr @fun_Core_iterator_toList_2.2818, align 8
  %2193 = load ptr, ptr @fun_Core_iterator_toList_2.2818, align 8
  %2194 = call ptr @Core_iterator_wrapSafe(ptr %2188, ptr %2193)
  %2195 = load ptr, ptr @356, align 8
  %2196 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2197 = call ptr @Core_iterator_foldLeft(ptr %2194, ptr %2195, ptr %2196)
  %2198 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:270\00", ptr %2198, align 1
  %2199 = call ptr @make_candy_text(ptr %2198)
  store ptr %2199, ptr @"Core:iterator:270", align 8
  %2200 = load ptr, ptr @402, align 8
  %2201 = call ptr @Core_check_checkEquals(ptr %2197, ptr %2200)
  %2202 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:275\00", ptr %2202, align 1
  %2203 = call ptr @make_candy_text(ptr %2202)
  store ptr %2203, ptr @"Core:iterator:275", align 8
  %2204 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2205 = call ptr @make_candy_function(ptr @"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2819", ptr %2204, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2205, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2820", align 8
  %2206 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2207 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2821, ptr %2206, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2207, ptr @fun_Core_iterator_wrapSafe_14.2822, align 8
  %2208 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2209 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2875, ptr %2208, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2209, ptr @fun_Core_controlFlow_recursive_16.2876, align 8
  %2210 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2876, align 8
  %2211 = call ptr @Core_controlFlow_recursive_16.2875(ptr %2210, ptr %1739)
  %2212 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2213 = getelementptr inbounds { ptr }, ptr %2212, i32 0, i32 0
  store ptr %2211, ptr %2213, align 8
  %2214 = call ptr @make_candy_function(ptr @Core_iterator_skip_26.2879, ptr %2212, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2214, ptr @fun_Core_iterator_skip_26.2880, align 8
  %2215 = load ptr, ptr @fun_Core_iterator_skip_26.2880, align 8
  %2216 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %2216, align 1
  %2217 = call ptr @make_candy_tag(ptr %2216, ptr %2215)
  store ptr %2217, ptr @tag_Iterator.2881, align 8
  %2218 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:277\00", ptr %2218, align 1
  %2219 = call ptr @make_candy_text(ptr %2218)
  store ptr %2219, ptr @"Core:iterator:277", align 8
  %2220 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2221 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.2882, ptr %2220, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2221, ptr @fun_Core_iterator_toList_2.2883, align 8
  %2222 = load ptr, ptr @tag_Iterator.2881, align 8
  %2223 = load ptr, ptr @fun_Core_iterator_toList_2.2883, align 8
  %2224 = call ptr @Core_iterator_wrapSafe(ptr %2222, ptr %2223)
  %2225 = load ptr, ptr @356, align 8
  %2226 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2227 = call ptr @Core_iterator_foldLeft(ptr %2224, ptr %2225, ptr %2226)
  %2228 = alloca ptr, i64 7, align 8
  %2229 = load ptr, ptr @num_5, align 8
  %2230 = getelementptr ptr, ptr %2228, i64 0
  store ptr %2229, ptr %2230, align 8
  %2231 = load ptr, ptr @num_6, align 8
  %2232 = getelementptr ptr, ptr %2228, i64 1
  store ptr %2231, ptr %2232, align 8
  %2233 = load ptr, ptr @num_7, align 8
  %2234 = getelementptr ptr, ptr %2228, i64 2
  store ptr %2233, ptr %2234, align 8
  %2235 = load ptr, ptr @num_8, align 8
  %2236 = getelementptr ptr, ptr %2228, i64 3
  store ptr %2235, ptr %2236, align 8
  %2237 = load ptr, ptr @num_9, align 8
  %2238 = getelementptr ptr, ptr %2228, i64 4
  store ptr %2237, ptr %2238, align 8
  %2239 = load ptr, ptr @num_10, align 8
  %2240 = getelementptr ptr, ptr %2228, i64 5
  store ptr %2239, ptr %2240, align 8
  %2241 = getelementptr ptr, ptr %2228, i64 6
  store ptr null, ptr %2241, align 8
  %2242 = call ptr @make_candy_list(ptr %2228)
  store ptr %2242, ptr @686, align 8
  %2243 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:285\00", ptr %2243, align 1
  %2244 = call ptr @make_candy_text(ptr %2243)
  store ptr %2244, ptr @"Core:iterator:285", align 8
  %2245 = load ptr, ptr @686, align 8
  %2246 = call ptr @Core_check_checkEquals(ptr %2227, ptr %2245)
  %2247 = call ptr @make_candy_int(i64 40)
  store ptr %2247, ptr @num_40, align 8
  %2248 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:290\00", ptr %2248, align 1
  %2249 = call ptr @make_candy_text(ptr %2248)
  store ptr %2249, ptr @"Core:iterator:290", align 8
  %2250 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2251 = call ptr @make_candy_function(ptr @"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2884", ptr %2250, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2251, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2885", align 8
  %2252 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2253 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2886, ptr %2252, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2253, ptr @fun_Core_iterator_wrapSafe_14.2887, align 8
  %2254 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2255 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.2940, ptr %2254, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2255, ptr @fun_Core_controlFlow_recursive_16.2941, align 8
  %2256 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2941, align 8
  %2257 = call ptr @Core_controlFlow_recursive_16.2940(ptr %2256, ptr %1739)
  %2258 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2259 = getelementptr inbounds { ptr }, ptr %2258, i32 0, i32 0
  store ptr %2257, ptr %2259, align 8
  %2260 = call ptr @make_candy_function(ptr @Core_iterator_skip_26.2944, ptr %2258, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2260, ptr @fun_Core_iterator_skip_26.2945, align 8
  %2261 = load ptr, ptr @fun_Core_iterator_skip_26.2945, align 8
  %2262 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %2262, align 1
  %2263 = call ptr @make_candy_tag(ptr %2262, ptr %2261)
  store ptr %2263, ptr @tag_Iterator.2946, align 8
  %2264 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:292\00", ptr %2264, align 1
  %2265 = call ptr @make_candy_text(ptr %2264)
  store ptr %2265, ptr @"Core:iterator:292", align 8
  %2266 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2267 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.2947, ptr %2266, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2267, ptr @fun_Core_iterator_toList_2.2948, align 8
  %2268 = load ptr, ptr @tag_Iterator.2946, align 8
  %2269 = load ptr, ptr @fun_Core_iterator_toList_2.2948, align 8
  %2270 = call ptr @Core_iterator_wrapSafe(ptr %2268, ptr %2269)
  %2271 = load ptr, ptr @356, align 8
  %2272 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2273 = call ptr @Core_iterator_foldLeft(ptr %2270, ptr %2271, ptr %2272)
  %2274 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:294\00", ptr %2274, align 1
  %2275 = call ptr @make_candy_text(ptr %2274)
  store ptr %2275, ptr @"Core:iterator:294", align 8
  %2276 = load ptr, ptr @356, align 8
  %2277 = call ptr @Core_check_checkEquals(ptr %2273, ptr %2276)
  %2278 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:301\00", ptr %2278, align 1
  %2279 = call ptr @make_candy_text(ptr %2278)
  store ptr %2279, ptr @"Core:iterator:301", align 8
  %2280 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2281 = call ptr @make_candy_function(ptr @"Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %2280, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2281, ptr @"fun_Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %2282 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2283 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.2949, ptr %2282, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2283, ptr @fun_Core_iterator_wrapSafe_14.2950, align 8
  %2284 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2285 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.3003, ptr %2284, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2285, ptr @fun_Core_controlFlow_recursive_16.3004, align 8
  %2286 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3004, align 8
  %2287 = call ptr @Core_controlFlow_recursive_16.3003(ptr %2286, ptr %1739)
  %2288 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2289 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57.3007, ptr %2288, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2289, ptr @fun_Core_iterator_windowed_57.3008, align 8
  %2290 = load ptr, ptr @fun_Core_iterator_windowed_57.3008, align 8
  %2291 = call ptr @Core_iterator_generateWithState(ptr %2287, ptr %2290)
  %2292 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:303\00", ptr %2292, align 1
  %2293 = call ptr @make_candy_text(ptr %2292)
  store ptr %2293, ptr @"Core:iterator:303", align 8
  %2294 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2295 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.3019, ptr %2294, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2295, ptr @fun_Core_iterator_toList_2.3020, align 8
  %2296 = load ptr, ptr @fun_Core_iterator_toList_2.3020, align 8
  %2297 = call ptr @Core_iterator_wrapSafe(ptr %2291, ptr %2296)
  %2298 = load ptr, ptr @356, align 8
  %2299 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2300 = call ptr @Core_iterator_foldLeft(ptr %2297, ptr %2298, ptr %2299)
  %2301 = alloca ptr, i64 5, align 8
  %2302 = load ptr, ptr @num_4, align 8
  %2303 = getelementptr ptr, ptr %2301, i64 0
  store ptr %2302, ptr %2303, align 8
  %2304 = load ptr, ptr @num_5, align 8
  %2305 = getelementptr ptr, ptr %2301, i64 1
  store ptr %2304, ptr %2305, align 8
  %2306 = load ptr, ptr @num_6, align 8
  %2307 = getelementptr ptr, ptr %2301, i64 2
  store ptr %2306, ptr %2307, align 8
  %2308 = load ptr, ptr @num_7, align 8
  %2309 = getelementptr ptr, ptr %2301, i64 3
  store ptr %2308, ptr %2309, align 8
  %2310 = getelementptr ptr, ptr %2301, i64 4
  store ptr null, ptr %2310, align 8
  %2311 = call ptr @make_candy_list(ptr %2301)
  store ptr %2311, ptr @711, align 8
  %2312 = alloca ptr, i64 5, align 8
  %2313 = load ptr, ptr @num_7, align 8
  %2314 = getelementptr ptr, ptr %2312, i64 0
  store ptr %2313, ptr %2314, align 8
  %2315 = load ptr, ptr @num_8, align 8
  %2316 = getelementptr ptr, ptr %2312, i64 1
  store ptr %2315, ptr %2316, align 8
  %2317 = load ptr, ptr @num_9, align 8
  %2318 = getelementptr ptr, ptr %2312, i64 2
  store ptr %2317, ptr %2318, align 8
  %2319 = load ptr, ptr @num_10, align 8
  %2320 = getelementptr ptr, ptr %2312, i64 3
  store ptr %2319, ptr %2320, align 8
  %2321 = getelementptr ptr, ptr %2312, i64 4
  store ptr null, ptr %2321, align 8
  %2322 = call ptr @make_candy_list(ptr %2312)
  store ptr %2322, ptr @712, align 8
  %2323 = alloca ptr, i64 4, align 8
  %2324 = load ptr, ptr @655, align 8
  %2325 = getelementptr ptr, ptr %2323, i64 0
  store ptr %2324, ptr %2325, align 8
  %2326 = load ptr, ptr @711, align 8
  %2327 = getelementptr ptr, ptr %2323, i64 1
  store ptr %2326, ptr %2327, align 8
  %2328 = load ptr, ptr @712, align 8
  %2329 = getelementptr ptr, ptr %2323, i64 2
  store ptr %2328, ptr %2329, align 8
  %2330 = getelementptr ptr, ptr %2323, i64 3
  store ptr null, ptr %2330, align 8
  %2331 = call ptr @make_candy_list(ptr %2323)
  store ptr %2331, ptr @713, align 8
  %2332 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:320\00", ptr %2332, align 1
  %2333 = call ptr @make_candy_text(ptr %2332)
  store ptr %2333, ptr @"Core:iterator:320", align 8
  %2334 = load ptr, ptr @713, align 8
  %2335 = call ptr @Core_check_checkEquals(ptr %2300, ptr %2334)
  %2336 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:325\00", ptr %2336, align 1
  %2337 = call ptr @make_candy_text(ptr %2336)
  store ptr %2337, ptr @"Core:iterator:325", align 8
  %2338 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2339 = call ptr @make_candy_function(ptr @"Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", ptr %2338, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2339, ptr @"fun_Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %2340 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2341 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14.3021, ptr %2340, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2341, ptr @fun_Core_iterator_wrapSafe_14.3022, align 8
  %2342 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2343 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.3075, ptr %2342, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2343, ptr @fun_Core_controlFlow_recursive_16.3076, align 8
  %2344 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3076, align 8
  %2345 = call ptr @Core_controlFlow_recursive_16.3075(ptr %2344, ptr %1739)
  %2346 = load ptr, ptr @num_3, align 8
  %2347 = load ptr, ptr @num_3, align 8
  %2348 = load ptr, ptr @tag_True, align 8
  %2349 = call ptr @Core_iterator_windowed(ptr %2345, ptr %2346, ptr %2347, ptr %2348)
  %2350 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:327\00", ptr %2350, align 1
  %2351 = call ptr @make_candy_text(ptr %2350)
  store ptr %2351, ptr @"Core:iterator:327", align 8
  %2352 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2353 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.3079, ptr %2352, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2353, ptr @fun_Core_iterator_toList_2.3080, align 8
  %2354 = load ptr, ptr @fun_Core_iterator_toList_2.3080, align 8
  %2355 = call ptr @Core_iterator_wrapSafe(ptr %2349, ptr %2354)
  %2356 = load ptr, ptr @356, align 8
  %2357 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2358 = call ptr @Core_iterator_foldLeft(ptr %2355, ptr %2356, ptr %2357)
  %2359 = alloca ptr, i64 4, align 8
  %2360 = load ptr, ptr @num_4, align 8
  %2361 = getelementptr ptr, ptr %2359, i64 0
  store ptr %2360, ptr %2361, align 8
  %2362 = load ptr, ptr @num_5, align 8
  %2363 = getelementptr ptr, ptr %2359, i64 1
  store ptr %2362, ptr %2363, align 8
  %2364 = load ptr, ptr @num_6, align 8
  %2365 = getelementptr ptr, ptr %2359, i64 2
  store ptr %2364, ptr %2365, align 8
  %2366 = getelementptr ptr, ptr %2359, i64 3
  store ptr null, ptr %2366, align 8
  %2367 = call ptr @make_candy_list(ptr %2359)
  store ptr %2367, ptr @726, align 8
  %2368 = alloca ptr, i64 4, align 8
  %2369 = load ptr, ptr @num_7, align 8
  %2370 = getelementptr ptr, ptr %2368, i64 0
  store ptr %2369, ptr %2370, align 8
  %2371 = load ptr, ptr @num_8, align 8
  %2372 = getelementptr ptr, ptr %2368, i64 1
  store ptr %2371, ptr %2372, align 8
  %2373 = load ptr, ptr @num_9, align 8
  %2374 = getelementptr ptr, ptr %2368, i64 2
  store ptr %2373, ptr %2374, align 8
  %2375 = getelementptr ptr, ptr %2368, i64 3
  store ptr null, ptr %2375, align 8
  %2376 = call ptr @make_candy_list(ptr %2368)
  store ptr %2376, ptr @727, align 8
  %2377 = alloca ptr, i64 2, align 8
  %2378 = load ptr, ptr @num_10, align 8
  %2379 = getelementptr ptr, ptr %2377, i64 0
  store ptr %2378, ptr %2379, align 8
  %2380 = getelementptr ptr, ptr %2377, i64 1
  store ptr null, ptr %2380, align 8
  %2381 = call ptr @make_candy_list(ptr %2377)
  store ptr %2381, ptr @728, align 8
  %2382 = alloca ptr, i64 5, align 8
  %2383 = load ptr, ptr @389, align 8
  %2384 = getelementptr ptr, ptr %2382, i64 0
  store ptr %2383, ptr %2384, align 8
  %2385 = load ptr, ptr @726, align 8
  %2386 = getelementptr ptr, ptr %2382, i64 1
  store ptr %2385, ptr %2386, align 8
  %2387 = load ptr, ptr @727, align 8
  %2388 = getelementptr ptr, ptr %2382, i64 2
  store ptr %2387, ptr %2388, align 8
  %2389 = load ptr, ptr @728, align 8
  %2390 = getelementptr ptr, ptr %2382, i64 3
  store ptr %2389, ptr %2390, align 8
  %2391 = getelementptr ptr, ptr %2382, i64 4
  store ptr null, ptr %2391, align 8
  %2392 = call ptr @make_candy_list(ptr %2382)
  store ptr %2392, ptr @729, align 8
  %2393 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:343\00", ptr %2393, align 1
  %2394 = call ptr @make_candy_text(ptr %2393)
  store ptr %2394, ptr @"Core:iterator:343", align 8
  %2395 = load ptr, ptr @729, align 8
  %2396 = call ptr @Core_check_checkEquals(ptr %2358, ptr %2395)
  %2397 = alloca ptr, i64 3, align 8
  %2398 = alloca ptr, i64 3, align 8
  %2399 = load ptr, ptr @tag_MinorUnits, align 8
  %2400 = load ptr, ptr @num_2, align 8
  %2401 = getelementptr ptr, ptr %2397, i64 0
  store ptr %2399, ptr %2401, align 8
  %2402 = getelementptr ptr, ptr %2398, i64 0
  store ptr %2400, ptr %2402, align 8
  %2403 = load ptr, ptr @tag_Scale, align 8
  %2404 = load ptr, ptr @num_0, align 8
  %2405 = getelementptr ptr, ptr %2397, i64 1
  store ptr %2403, ptr %2405, align 8
  %2406 = getelementptr ptr, ptr %2398, i64 1
  store ptr %2404, ptr %2406, align 8
  %2407 = getelementptr ptr, ptr %2397, i64 2
  store ptr null, ptr %2407, align 8
  %2408 = getelementptr ptr, ptr %2398, i64 2
  store ptr null, ptr %2408, align 8
  %2409 = call ptr @make_candy_struct(ptr %2397, ptr %2398)
  %2410 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %2410, align 1
  %2411 = call ptr @make_candy_tag(ptr %2410, ptr %2409)
  store ptr %2411, ptr @tag_FixedDecimal.3081, align 8
  %2412 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:68:22\00", ptr %2412, align 1
  %2413 = call ptr @make_candy_text(ptr %2412)
  store ptr %2413, ptr @"Examples:sqrt:sqrt:68:22", align 8
  %2414 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:68:23\00", ptr %2414, align 1
  %2415 = call ptr @make_candy_text(ptr %2414)
  store ptr %2415, ptr @"Examples:sqrt:sqrt:68:23", align 8
  %2416 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:68:33\00", ptr %2416, align 1
  %2417 = call ptr @make_candy_text(ptr %2416)
  store ptr %2417, ptr @"Examples:sqrt:sqrt:68:33", align 8
  %2418 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:68:45\00", ptr %2418, align 1
  %2419 = call ptr @make_candy_text(ptr %2418)
  store ptr %2419, ptr @"Examples:sqrt:sqrt:68:45", align 8
  %2420 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:sqrt:sqrt:68:47:2\00", ptr %2420, align 1
  %2421 = call ptr @make_candy_text(ptr %2420)
  store ptr %2421, ptr @"Examples:sqrt:sqrt:68:47:2", align 8
  %2422 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:68:48\00", ptr %2422, align 1
  %2423 = call ptr @make_candy_text(ptr %2422)
  store ptr %2423, ptr @"Examples:sqrt:sqrt:68:48", align 8
  %2424 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:69\00", ptr %2424, align 1
  %2425 = call ptr @make_candy_text(ptr %2424)
  store ptr %2425, ptr @"Examples:sqrt:sqrt:69", align 8
  %2426 = call ptr @make_candy_int(i64 65)
  store ptr %2426, ptr @num_65, align 8
  %2427 = alloca ptr, i64 3, align 8
  %2428 = alloca ptr, i64 3, align 8
  %2429 = load ptr, ptr @tag_MinorUnits, align 8
  %2430 = load ptr, ptr @num_10, align 8
  %2431 = getelementptr ptr, ptr %2427, i64 0
  store ptr %2429, ptr %2431, align 8
  %2432 = getelementptr ptr, ptr %2428, i64 0
  store ptr %2430, ptr %2432, align 8
  %2433 = load ptr, ptr @tag_Scale, align 8
  %2434 = load ptr, ptr @num_65, align 8
  %2435 = getelementptr ptr, ptr %2427, i64 1
  store ptr %2433, ptr %2435, align 8
  %2436 = getelementptr ptr, ptr %2428, i64 1
  store ptr %2434, ptr %2436, align 8
  %2437 = getelementptr ptr, ptr %2427, i64 2
  store ptr null, ptr %2437, align 8
  %2438 = getelementptr ptr, ptr %2428, i64 2
  store ptr null, ptr %2438, align 8
  %2439 = call ptr @make_candy_struct(ptr %2427, ptr %2428)
  %2440 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %2440, align 1
  %2441 = call ptr @make_candy_tag(ptr %2440, ptr %2439)
  store ptr %2441, ptr @tag_FixedDecimal.3082, align 8
  %2442 = alloca ptr, i64 3, align 8
  %2443 = alloca ptr, i64 3, align 8
  %2444 = load ptr, ptr @tag_Exponent, align 8
  %2445 = load ptr, ptr @num_0, align 8
  %2446 = getelementptr ptr, ptr %2442, i64 0
  store ptr %2444, ptr %2446, align 8
  %2447 = getelementptr ptr, ptr %2443, i64 0
  store ptr %2445, ptr %2447, align 8
  %2448 = load ptr, ptr @tag_Base, align 8
  %2449 = load ptr, ptr @num_10, align 8
  %2450 = getelementptr ptr, ptr %2442, i64 1
  store ptr %2448, ptr %2450, align 8
  %2451 = getelementptr ptr, ptr %2443, i64 1
  store ptr %2449, ptr %2451, align 8
  %2452 = getelementptr ptr, ptr %2442, i64 2
  store ptr null, ptr %2452, align 8
  %2453 = getelementptr ptr, ptr %2443, i64 2
  store ptr null, ptr %2453, align 8
  %2454 = call ptr @make_candy_struct(ptr %2442, ptr %2443)
  %2455 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2456 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.3083, ptr %2455, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2456, ptr @fun_Core_controlFlow_recursive_16.3084, align 8
  %2457 = alloca ptr, i64 3, align 8
  %2458 = alloca ptr, i64 3, align 8
  %2459 = load ptr, ptr @tag_Exponent, align 8
  %2460 = load ptr, ptr @num_65, align 8
  %2461 = getelementptr ptr, ptr %2457, i64 0
  store ptr %2459, ptr %2461, align 8
  %2462 = getelementptr ptr, ptr %2458, i64 0
  store ptr %2460, ptr %2462, align 8
  %2463 = load ptr, ptr @tag_Base, align 8
  %2464 = load ptr, ptr @num_10, align 8
  %2465 = getelementptr ptr, ptr %2457, i64 1
  store ptr %2463, ptr %2465, align 8
  %2466 = getelementptr ptr, ptr %2458, i64 1
  store ptr %2464, ptr %2466, align 8
  %2467 = getelementptr ptr, ptr %2457, i64 2
  store ptr null, ptr %2467, align 8
  %2468 = getelementptr ptr, ptr %2458, i64 2
  store ptr null, ptr %2468, align 8
  %2469 = call ptr @make_candy_struct(ptr %2457, ptr %2458)
  %2470 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2471 = getelementptr inbounds { ptr }, ptr %2470, i32 0, i32 0
  store ptr %2469, ptr %2471, align 8
  %2472 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_68, ptr %2470, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2472, ptr @fun_Examples_sqrt_sqrt_68, align 8
  %2473 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:41\00", ptr %2473, align 1
  %2474 = call ptr @make_candy_text(ptr %2473)
  store ptr %2474, ptr @"Examples:sqrt:main:41", align 8
  %2475 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:42\00", ptr %2475, align 1
  %2476 = call ptr @make_candy_text(ptr %2475)
  store ptr %2476, ptr @"Examples:sqrt:main:42", align 8
  %2477 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:43\00", ptr %2477, align 1
  %2478 = call ptr @make_candy_text(ptr %2477)
  store ptr %2478, ptr @"Examples:sqrt:main:43", align 8
  %2479 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:sqrt:main:45:0\00", ptr %2479, align 1
  %2480 = call ptr @make_candy_text(ptr %2479)
  store ptr %2480, ptr @"Examples:sqrt:main:45:0", align 8
  %2481 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:46\00", ptr %2481, align 1
  %2482 = call ptr @make_candy_text(ptr %2481)
  store ptr %2482, ptr @"Examples:sqrt:main:46", align 8
  %2483 = alloca i8, i64 18, align 1
  store [18 x i8] c"The root of 2 is \00", ptr %2483, align 1
  %2484 = call ptr @make_candy_text(ptr %2483)
  store ptr %2484, ptr @"text_The root of 2 is ", align 8
  %2485 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:49\00", ptr %2485, align 1
  %2486 = call ptr @make_candy_text(ptr %2485)
  store ptr %2486, ptr @"Examples:sqrt:main:49", align 8
  %2487 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2488 = getelementptr inbounds { ptr, ptr }, ptr %2487, i32 0, i32 0
  store ptr %2469, ptr %2488, align 8
  %2489 = getelementptr inbounds { ptr, ptr }, ptr %2487, i32 0, i32 1
  store ptr %2454, ptr %2489, align 8
  %2490 = call ptr @make_candy_function(ptr @Examples_sqrt_main, ptr %2487, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2490, ptr @fun_Examples_sqrt_main, align 8
  %2491 = call ptr @run_candy_main(ptr @fun_Examples_sqrt_main, ptr @candy_environment)
  call void @print_candy_value(ptr %2491)
  %2492 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %2492)
  %2493 = load ptr, ptr @"Builtins::fitsInRustU128:10", align 8
  call void @free_candy_value(ptr %2493)
  %2494 = load ptr, ptr @"Builtins::fitsInRustU128:16", align 8
  call void @free_candy_value(ptr %2494)
  %2495 = load ptr, ptr @"Builtins::fitsInRustU128:5", align 8
  call void @free_candy_value(ptr %2495)
  %2496 = load ptr, ptr @"Builtins::fitsInRustU128:8", align 8
  call void @free_candy_value(ptr %2496)
  %2497 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %2497)
  %2498 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %2498)
  %2499 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %2499)
  %2500 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %2500)
  %2501 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %2501)
  %2502 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %2502)
  %2503 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %2503)
  %2504 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %2504)
  %2505 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %2505)
  %2506 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %2506)
  %2507 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %2507)
  %2508 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %2508)
  %2509 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %2509)
  %2510 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %2510)
  %2511 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %2511)
  %2512 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %2512)
  %2513 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %2513)
  %2514 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %2514)
  %2515 = load ptr, ptr @"Builtins::intBitwiseAnd:18", align 8
  call void @free_candy_value(ptr %2515)
  %2516 = load ptr, ptr @"Builtins::intBitwiseAnd:5", align 8
  call void @free_candy_value(ptr %2516)
  %2517 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %2517)
  %2518 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %2518)
  %2519 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %2519)
  %2520 = load ptr, ptr @"Builtins::intDivideTruncating:11", align 8
  call void @free_candy_value(ptr %2520)
  %2521 = load ptr, ptr @"Builtins::intDivideTruncating:17", align 8
  call void @free_candy_value(ptr %2521)
  %2522 = load ptr, ptr @"Builtins::intDivideTruncating:25", align 8
  call void @free_candy_value(ptr %2522)
  %2523 = load ptr, ptr @"Builtins::intDivideTruncating:32", align 8
  call void @free_candy_value(ptr %2523)
  %2524 = load ptr, ptr @"Builtins::intDivideTruncating:5", align 8
  call void @free_candy_value(ptr %2524)
  %2525 = load ptr, ptr @"Builtins::intMultiply:11", align 8
  call void @free_candy_value(ptr %2525)
  %2526 = load ptr, ptr @"Builtins::intMultiply:18", align 8
  call void @free_candy_value(ptr %2526)
  %2527 = load ptr, ptr @"Builtins::intMultiply:5", align 8
  call void @free_candy_value(ptr %2527)
  %2528 = load ptr, ptr @"Builtins::intRemainder:11", align 8
  call void @free_candy_value(ptr %2528)
  %2529 = load ptr, ptr @"Builtins::intRemainder:17", align 8
  call void @free_candy_value(ptr %2529)
  %2530 = load ptr, ptr @"Builtins::intRemainder:25", align 8
  call void @free_candy_value(ptr %2530)
  %2531 = load ptr, ptr @"Builtins::intRemainder:32", align 8
  call void @free_candy_value(ptr %2531)
  %2532 = load ptr, ptr @"Builtins::intRemainder:5", align 8
  call void @free_candy_value(ptr %2532)
  %2533 = load ptr, ptr @"Builtins::intShiftRight:11", align 8
  call void @free_candy_value(ptr %2533)
  %2534 = load ptr, ptr @"Builtins::intShiftRight:14", align 8
  call void @free_candy_value(ptr %2534)
  %2535 = load ptr, ptr @"Builtins::intShiftRight:23", align 8
  call void @free_candy_value(ptr %2535)
  %2536 = load ptr, ptr @"Builtins::intShiftRight:24", align 8
  call void @free_candy_value(ptr %2536)
  %2537 = load ptr, ptr @"Builtins::intShiftRight:26:0", align 8
  call void @free_candy_value(ptr %2537)
  %2538 = load ptr, ptr @"Builtins::intShiftRight:27", align 8
  call void @free_candy_value(ptr %2538)
  %2539 = load ptr, ptr @"Builtins::intShiftRight:29", align 8
  call void @free_candy_value(ptr %2539)
  %2540 = load ptr, ptr @"Builtins::intShiftRight:30", align 8
  call void @free_candy_value(ptr %2540)
  %2541 = load ptr, ptr @"Builtins::intShiftRight:31", align 8
  call void @free_candy_value(ptr %2541)
  %2542 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  call void @free_candy_value(ptr %2542)
  %2543 = load ptr, ptr @"Builtins::intShiftRight:42", align 8
  call void @free_candy_value(ptr %2543)
  %2544 = load ptr, ptr @"Builtins::intShiftRight:49", align 8
  call void @free_candy_value(ptr %2544)
  %2545 = load ptr, ptr @"Builtins::intShiftRight:5", align 8
  call void @free_candy_value(ptr %2545)
  %2546 = load ptr, ptr @"Builtins::intSubtract:11", align 8
  call void @free_candy_value(ptr %2546)
  %2547 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %2547)
  %2548 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %2548)
  %2549 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  call void @free_candy_value(ptr %2549)
  %2550 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  call void @free_candy_value(ptr %2550)
  %2551 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  call void @free_candy_value(ptr %2551)
  %2552 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  call void @free_candy_value(ptr %2552)
  %2553 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %2553)
  %2554 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %2554)
  %2555 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %2555)
  %2556 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %2556)
  %2557 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %2557)
  %2558 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %2558)
  %2559 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %2559)
  %2560 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %2560)
  %2561 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %2561)
  %2562 = load ptr, ptr @"Builtins::listInsert:11", align 8
  call void @free_candy_value(ptr %2562)
  %2563 = load ptr, ptr @"Builtins::listInsert:14", align 8
  call void @free_candy_value(ptr %2563)
  %2564 = load ptr, ptr @"Builtins::listInsert:16", align 8
  call void @free_candy_value(ptr %2564)
  %2565 = load ptr, ptr @"Builtins::listInsert:24", align 8
  call void @free_candy_value(ptr %2565)
  %2566 = load ptr, ptr @"Builtins::listInsert:25", align 8
  call void @free_candy_value(ptr %2566)
  %2567 = load ptr, ptr @"Builtins::listInsert:27", align 8
  call void @free_candy_value(ptr %2567)
  %2568 = load ptr, ptr @"Builtins::listInsert:35", align 8
  call void @free_candy_value(ptr %2568)
  %2569 = load ptr, ptr @"Builtins::listInsert:5", align 8
  call void @free_candy_value(ptr %2569)
  %2570 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %2570)
  %2571 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %2571)
  %2572 = load ptr, ptr @"Builtins::not:1", align 8
  call void @free_candy_value(ptr %2572)
  %2573 = load ptr, ptr @"Builtins::print:11", align 8
  call void @free_candy_value(ptr %2573)
  %2574 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %2574)
  %2575 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %2575)
  %2576 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %2576)
  %2577 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %2577)
  %2578 = load ptr, ptr @"Builtins::tagGetValue:11", align 8
  call void @free_candy_value(ptr %2578)
  %2579 = load ptr, ptr @"Builtins::tagGetValue:13", align 8
  call void @free_candy_value(ptr %2579)
  %2580 = load ptr, ptr @"Builtins::tagGetValue:19", align 8
  call void @free_candy_value(ptr %2580)
  %2581 = load ptr, ptr @"Builtins::tagGetValue:5", align 8
  call void @free_candy_value(ptr %2581)
  %2582 = load ptr, ptr @"Builtins::textConcatenate:11", align 8
  call void @free_candy_value(ptr %2582)
  %2583 = load ptr, ptr @"Builtins::textConcatenate:18", align 8
  call void @free_candy_value(ptr %2583)
  %2584 = load ptr, ptr @"Builtins::textConcatenate:5", align 8
  call void @free_candy_value(ptr %2584)
  %2585 = load ptr, ptr @"Builtins::textGetRange:11", align 8
  call void @free_candy_value(ptr %2585)
  %2586 = load ptr, ptr @"Builtins::textGetRange:14", align 8
  call void @free_candy_value(ptr %2586)
  %2587 = load ptr, ptr @"Builtins::textGetRange:16", align 8
  call void @free_candy_value(ptr %2587)
  %2588 = load ptr, ptr @"Builtins::textGetRange:24", align 8
  call void @free_candy_value(ptr %2588)
  %2589 = load ptr, ptr @"Builtins::textGetRange:25", align 8
  call void @free_candy_value(ptr %2589)
  %2590 = load ptr, ptr @"Builtins::textGetRange:27", align 8
  call void @free_candy_value(ptr %2590)
  %2591 = load ptr, ptr @"Builtins::textGetRange:33", align 8
  call void @free_candy_value(ptr %2591)
  %2592 = load ptr, ptr @"Builtins::textGetRange:36", align 8
  call void @free_candy_value(ptr %2592)
  %2593 = load ptr, ptr @"Builtins::textGetRange:38", align 8
  call void @free_candy_value(ptr %2593)
  %2594 = load ptr, ptr @"Builtins::textGetRange:46", align 8
  call void @free_candy_value(ptr %2594)
  %2595 = load ptr, ptr @"Builtins::textGetRange:47", align 8
  call void @free_candy_value(ptr %2595)
  %2596 = load ptr, ptr @"Builtins::textGetRange:49", align 8
  call void @free_candy_value(ptr %2596)
  %2597 = load ptr, ptr @"Builtins::textGetRange:5", align 8
  call void @free_candy_value(ptr %2597)
  %2598 = load ptr, ptr @"Builtins::textGetRange:53", align 8
  call void @free_candy_value(ptr %2598)
  %2599 = load ptr, ptr @"Builtins::textGetRange:55", align 8
  call void @free_candy_value(ptr %2599)
  %2600 = load ptr, ptr @"Builtins::textGetRange:63", align 8
  call void @free_candy_value(ptr %2600)
  %2601 = load ptr, ptr @"Builtins::textLength:11", align 8
  call void @free_candy_value(ptr %2601)
  %2602 = load ptr, ptr @"Builtins::textLength:5", align 8
  call void @free_candy_value(ptr %2602)
  %2603 = load ptr, ptr @"Builtins::textStartsWith:11", align 8
  call void @free_candy_value(ptr %2603)
  %2604 = load ptr, ptr @"Builtins::textStartsWith:18", align 8
  call void @free_candy_value(ptr %2604)
  %2605 = load ptr, ptr @"Builtins::textStartsWith:5", align 8
  call void @free_candy_value(ptr %2605)
  %2606 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %2606)
  %2607 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %2607)
  %2608 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %2608)
  %2609 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %2609)
  %2610 = load ptr, ptr @"Core:bool:and:13", align 8
  call void @free_candy_value(ptr %2610)
  %2611 = load ptr, ptr @"Core:bool:and:4", align 8
  call void @free_candy_value(ptr %2611)
  %2612 = load ptr, ptr @"Core:bool:and:9", align 8
  call void @free_candy_value(ptr %2612)
  %2613 = load ptr, ptr @"Core:bool:implies:12", align 8
  call void @free_candy_value(ptr %2613)
  %2614 = load ptr, ptr @"Core:bool:implies:15", align 8
  call void @free_candy_value(ptr %2614)
  %2615 = load ptr, ptr @"Core:bool:implies:4", align 8
  call void @free_candy_value(ptr %2615)
  %2616 = load ptr, ptr @"Core:bool:implies:9", align 8
  call void @free_candy_value(ptr %2616)
  %2617 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %2617)
  %2618 = load ptr, ptr @"Core:bool:lazyAnd:14", align 8
  call void @free_candy_value(ptr %2618)
  %2619 = load ptr, ptr @"Core:bool:lazyAnd:16", align 8
  call void @free_candy_value(ptr %2619)
  %2620 = load ptr, ptr @"Core:bool:lazyAnd:16:11", align 8
  call void @free_candy_value(ptr %2620)
  %2621 = load ptr, ptr @"Core:bool:lazyAnd:16:19", align 8
  call void @free_candy_value(ptr %2621)
  %2622 = load ptr, ptr @"Core:bool:lazyAnd:16:7", align 8
  call void @free_candy_value(ptr %2622)
  %2623 = load ptr, ptr @"Core:bool:lazyAnd:4", align 8
  call void @free_candy_value(ptr %2623)
  %2624 = load ptr, ptr @"Core:bool:lazyOr:14", align 8
  call void @free_candy_value(ptr %2624)
  %2625 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %2625)
  %2626 = load ptr, ptr @"Core:bool:lazyOr:16:12", align 8
  call void @free_candy_value(ptr %2626)
  %2627 = load ptr, ptr @"Core:bool:lazyOr:16:20", align 8
  call void @free_candy_value(ptr %2627)
  %2628 = load ptr, ptr @"Core:bool:lazyOr:16:8", align 8
  call void @free_candy_value(ptr %2628)
  %2629 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %2629)
  %2630 = load ptr, ptr @"Core:bool:not:4", align 8
  call void @free_candy_value(ptr %2630)
  %2631 = load ptr, ptr @"Core:bool:not:6", align 8
  call void @free_candy_value(ptr %2631)
  %2632 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %2632)
  %2633 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %2633)
  %2634 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %2634)
  %2635 = load ptr, ptr @"Core:check:check:1", align 8
  call void @free_candy_value(ptr %2635)
  %2636 = load ptr, ptr @"Core:check:check:14", align 8
  call void @free_candy_value(ptr %2636)
  %2637 = load ptr, ptr @"Core:check:check:5", align 8
  call void @free_candy_value(ptr %2637)
  %2638 = load ptr, ptr @"Core:check:checkEquals:12", align 8
  call void @free_candy_value(ptr %2638)
  %2639 = load ptr, ptr @"Core:check:checkEquals:13", align 8
  call void @free_candy_value(ptr %2639)
  %2640 = load ptr, ptr @"Core:check:checkEquals:15:0", align 8
  call void @free_candy_value(ptr %2640)
  %2641 = load ptr, ptr @"Core:check:checkEquals:16", align 8
  call void @free_candy_value(ptr %2641)
  %2642 = load ptr, ptr @"Core:check:checkEquals:19", align 8
  call void @free_candy_value(ptr %2642)
  %2643 = load ptr, ptr @"Core:check:checkEquals:20", align 8
  call void @free_candy_value(ptr %2643)
  %2644 = load ptr, ptr @"Core:check:checkEquals:22:0", align 8
  call void @free_candy_value(ptr %2644)
  %2645 = load ptr, ptr @"Core:check:checkEquals:23", align 8
  call void @free_candy_value(ptr %2645)
  %2646 = load ptr, ptr @"Core:check:checkEquals:25", align 8
  call void @free_candy_value(ptr %2646)
  %2647 = load ptr, ptr @"Core:check:checkEquals:26", align 8
  call void @free_candy_value(ptr %2647)
  %2648 = load ptr, ptr @"Core:check:checkEquals:27", align 8
  call void @free_candy_value(ptr %2648)
  %2649 = load ptr, ptr @"Core:check:checkEquals:28", align 8
  call void @free_candy_value(ptr %2649)
  %2650 = load ptr, ptr @"Core:check:checkEquals:29", align 8
  call void @free_candy_value(ptr %2650)
  %2651 = load ptr, ptr @"Core:controlFlow:if:19", align 8
  call void @free_candy_value(ptr %2651)
  %2652 = load ptr, ptr @"Core:controlFlow:if:24", align 8
  call void @free_candy_value(ptr %2652)
  %2653 = load ptr, ptr @"Core:controlFlow:if:9", align 8
  call void @free_candy_value(ptr %2653)
  %2654 = load ptr, ptr @"Core:controlFlow:recursive:15", align 8
  call void @free_candy_value(ptr %2654)
  %2655 = load ptr, ptr @"Core:controlFlow:recursive:16:0:3", align 8
  call void @free_candy_value(ptr %2655)
  %2656 = load ptr, ptr @"Core:controlFlow:recursive:16:5", align 8
  call void @free_candy_value(ptr %2656)
  %2657 = load ptr, ptr @"Core:controlFlow:recursive:21", align 8
  call void @free_candy_value(ptr %2657)
  %2658 = load ptr, ptr @"Core:fixedDecimal:absolute:11", align 8
  call void @free_candy_value(ptr %2658)
  %2659 = load ptr, ptr @"Core:fixedDecimal:absolute:4", align 8
  call void @free_candy_value(ptr %2659)
  %2660 = load ptr, ptr @"Core:fixedDecimal:absolute:8", align 8
  call void @free_candy_value(ptr %2660)
  %2661 = load ptr, ptr @"Core:fixedDecimal:absolute:9:2", align 8
  call void @free_candy_value(ptr %2661)
  %2662 = load ptr, ptr @"Core:fixedDecimal:add:13", align 8
  call void @free_candy_value(ptr %2662)
  %2663 = load ptr, ptr @"Core:fixedDecimal:add:25", align 8
  call void @free_candy_value(ptr %2663)
  %2664 = load ptr, ptr @"Core:fixedDecimal:add:27", align 8
  call void @free_candy_value(ptr %2664)
  %2665 = load ptr, ptr @"Core:fixedDecimal:add:4", align 8
  call void @free_candy_value(ptr %2665)
  %2666 = load ptr, ptr @"Core:fixedDecimal:add:9", align 8
  call void @free_candy_value(ptr %2666)
  %2667 = load ptr, ptr @"Core:fixedDecimal:approxEquals:14", align 8
  call void @free_candy_value(ptr %2667)
  %2668 = load ptr, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  call void @free_candy_value(ptr %2668)
  %2669 = load ptr, ptr @"Core:fixedDecimal:approxEquals:19", align 8
  call void @free_candy_value(ptr %2669)
  %2670 = load ptr, ptr @"Core:fixedDecimal:approxEquals:23", align 8
  call void @free_candy_value(ptr %2670)
  %2671 = load ptr, ptr @"Core:fixedDecimal:approxEquals:25", align 8
  call void @free_candy_value(ptr %2671)
  %2672 = load ptr, ptr @"Core:fixedDecimal:approxEquals:28", align 8
  call void @free_candy_value(ptr %2672)
  %2673 = load ptr, ptr @"Core:fixedDecimal:approxEquals:4", align 8
  call void @free_candy_value(ptr %2673)
  %2674 = load ptr, ptr @"Core:fixedDecimal:approxEquals:9", align 8
  call void @free_candy_value(ptr %2674)
  %2675 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:18", align 8
  call void @free_candy_value(ptr %2675)
  %2676 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:21", align 8
  call void @free_candy_value(ptr %2676)
  %2677 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:22", align 8
  call void @free_candy_value(ptr %2677)
  %2678 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:28", align 8
  call void @free_candy_value(ptr %2678)
  %2679 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:33", align 8
  call void @free_candy_value(ptr %2679)
  %2680 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:4", align 8
  call void @free_candy_value(ptr %2680)
  %2681 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:9", align 8
  call void @free_candy_value(ptr %2681)
  %2682 = load ptr, ptr @"Core:fixedDecimal:compareTo:13", align 8
  call void @free_candy_value(ptr %2682)
  %2683 = load ptr, ptr @"Core:fixedDecimal:compareTo:24", align 8
  call void @free_candy_value(ptr %2683)
  %2684 = load ptr, ptr @"Core:fixedDecimal:compareTo:4", align 8
  call void @free_candy_value(ptr %2684)
  %2685 = load ptr, ptr @"Core:fixedDecimal:compareTo:41", align 8
  call void @free_candy_value(ptr %2685)
  %2686 = load ptr, ptr @"Core:fixedDecimal:compareTo:42", align 8
  call void @free_candy_value(ptr %2686)
  %2687 = load ptr, ptr @"Core:fixedDecimal:compareTo:9", align 8
  call void @free_candy_value(ptr %2687)
  %2688 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:14", align 8
  call void @free_candy_value(ptr %2688)
  %2689 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  call void @free_candy_value(ptr %2689)
  %2690 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:27", align 8
  call void @free_candy_value(ptr %2690)
  %2691 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:35", align 8
  call void @free_candy_value(ptr %2691)
  %2692 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:39", align 8
  call void @free_candy_value(ptr %2692)
  %2693 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:4", align 8
  call void @free_candy_value(ptr %2693)
  %2694 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:52", align 8
  call void @free_candy_value(ptr %2694)
  %2695 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  call void @free_candy_value(ptr %2695)
  %2696 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:61", align 8
  call void @free_candy_value(ptr %2696)
  %2697 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:63", align 8
  call void @free_candy_value(ptr %2697)
  %2698 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:9", align 8
  call void @free_candy_value(ptr %2698)
  %2699 = load ptr, ptr @"Core:fixedDecimal:floorToInt:16", align 8
  call void @free_candy_value(ptr %2699)
  %2700 = load ptr, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  call void @free_candy_value(ptr %2700)
  %2701 = load ptr, ptr @"Core:fixedDecimal:floorToInt:19", align 8
  call void @free_candy_value(ptr %2701)
  %2702 = load ptr, ptr @"Core:fixedDecimal:floorToInt:4", align 8
  call void @free_candy_value(ptr %2702)
  %2703 = load ptr, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  call void @free_candy_value(ptr %2703)
  %2704 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:14", align 8
  call void @free_candy_value(ptr %2704)
  %2705 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:9", align 8
  call void @free_candy_value(ptr %2705)
  %2706 = load ptr, ptr @"Core:fixedDecimal:is:1", align 8
  call void @free_candy_value(ptr %2706)
  %2707 = load ptr, ptr @"Core:fixedDecimal:is:1:14:2", align 8
  call void @free_candy_value(ptr %2707)
  %2708 = load ptr, ptr @"Core:fixedDecimal:is:1:15", align 8
  call void @free_candy_value(ptr %2708)
  %2709 = load ptr, ptr @"Core:fixedDecimal:is:1:minorUnits", align 8
  call void @free_candy_value(ptr %2709)
  %2710 = load ptr, ptr @"Core:fixedDecimal:is:1:scale", align 8
  call void @free_candy_value(ptr %2710)
  %2711 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:14", align 8
  call void @free_candy_value(ptr %2711)
  %2712 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %2712)
  %2713 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %2713)
  %2714 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %2714)
  %2715 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:20", align 8
  call void @free_candy_value(ptr %2715)
  %2716 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %2716)
  %2717 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %2717)
  %2718 = load ptr, ptr @"Core:fixedDecimal:isNegative:15", align 8
  call void @free_candy_value(ptr %2718)
  %2719 = load ptr, ptr @"Core:fixedDecimal:isNegative:4", align 8
  call void @free_candy_value(ptr %2719)
  %2720 = load ptr, ptr @"Core:fixedDecimal:isNegative:7", align 8
  call void @free_candy_value(ptr %2720)
  %2721 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:14", align 8
  call void @free_candy_value(ptr %2721)
  %2722 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:4", align 8
  call void @free_candy_value(ptr %2722)
  %2723 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  call void @free_candy_value(ptr %2723)
  %2724 = load ptr, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  call void @free_candy_value(ptr %2724)
  %2725 = load ptr, ptr @"Core:fixedDecimal:isScale:15", align 8
  call void @free_candy_value(ptr %2725)
  %2726 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  call void @free_candy_value(ptr %2726)
  %2727 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  call void @free_candy_value(ptr %2727)
  %2728 = load ptr, ptr @"Core:fixedDecimal:minorUnits:4", align 8
  call void @free_candy_value(ptr %2728)
  %2729 = load ptr, ptr @"Core:fixedDecimal:negate:15", align 8
  call void @free_candy_value(ptr %2729)
  %2730 = load ptr, ptr @"Core:fixedDecimal:negate:18", align 8
  call void @free_candy_value(ptr %2730)
  %2731 = load ptr, ptr @"Core:fixedDecimal:negate:19", align 8
  call void @free_candy_value(ptr %2731)
  %2732 = load ptr, ptr @"Core:fixedDecimal:negate:4", align 8
  call void @free_candy_value(ptr %2732)
  %2733 = load ptr, ptr @"Core:fixedDecimal:negate:8", align 8
  call void @free_candy_value(ptr %2733)
  %2734 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  call void @free_candy_value(ptr %2734)
  %2735 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:21", align 8
  call void @free_candy_value(ptr %2735)
  %2736 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:12", align 8
  call void @free_candy_value(ptr %2736)
  %2737 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:2", align 8
  call void @free_candy_value(ptr %2737)
  %2738 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:20", align 8
  call void @free_candy_value(ptr %2738)
  %2739 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:21", align 8
  call void @free_candy_value(ptr %2739)
  %2740 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:22", align 8
  call void @free_candy_value(ptr %2740)
  %2741 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:19", align 8
  call void @free_candy_value(ptr %2741)
  %2742 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:2", align 8
  call void @free_candy_value(ptr %2742)
  %2743 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:20", align 8
  call void @free_candy_value(ptr %2743)
  %2744 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:21", align 8
  call void @free_candy_value(ptr %2744)
  %2745 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:22", align 8
  call void @free_candy_value(ptr %2745)
  %2746 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24", align 8
  call void @free_candy_value(ptr %2746)
  %2747 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:4", align 8
  call void @free_candy_value(ptr %2747)
  %2748 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:9", align 8
  call void @free_candy_value(ptr %2748)
  %2749 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  call void @free_candy_value(ptr %2749)
  %2750 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  call void @free_candy_value(ptr %2750)
  %2751 = load ptr, ptr @"Core:fixedDecimal:scale:4", align 8
  call void @free_candy_value(ptr %2751)
  %2752 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:13", align 8
  call void @free_candy_value(ptr %2752)
  %2753 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:4", align 8
  call void @free_candy_value(ptr %2753)
  %2754 = load ptr, ptr @"Core:fixedDecimal:subtract:13", align 8
  call void @free_candy_value(ptr %2754)
  %2755 = load ptr, ptr @"Core:fixedDecimal:subtract:25", align 8
  call void @free_candy_value(ptr %2755)
  %2756 = load ptr, ptr @"Core:fixedDecimal:subtract:27", align 8
  call void @free_candy_value(ptr %2756)
  %2757 = load ptr, ptr @"Core:fixedDecimal:subtract:4", align 8
  call void @free_candy_value(ptr %2757)
  %2758 = load ptr, ptr @"Core:fixedDecimal:subtract:9", align 8
  call void @free_candy_value(ptr %2758)
  %2759 = load ptr, ptr @"Core:fixedDecimal:toText:10:16", align 8
  call void @free_candy_value(ptr %2759)
  %2760 = load ptr, ptr @"Core:fixedDecimal:toText:10:2", align 8
  call void @free_candy_value(ptr %2760)
  %2761 = load ptr, ptr @"Core:fixedDecimal:toText:10:26", align 8
  call void @free_candy_value(ptr %2761)
  %2762 = load ptr, ptr @"Core:fixedDecimal:toText:10:27:24", align 8
  call void @free_candy_value(ptr %2762)
  %2763 = load ptr, ptr @"Core:fixedDecimal:toText:10:27:8", align 8
  call void @free_candy_value(ptr %2763)
  %2764 = load ptr, ptr @"Core:fixedDecimal:toText:10:28:24", align 8
  call void @free_candy_value(ptr %2764)
  %2765 = load ptr, ptr @"Core:fixedDecimal:toText:10:28:8", align 8
  call void @free_candy_value(ptr %2765)
  %2766 = load ptr, ptr @"Core:fixedDecimal:toText:10:29", align 8
  call void @free_candy_value(ptr %2766)
  %2767 = load ptr, ptr @"Core:fixedDecimal:toText:10:4", align 8
  call void @free_candy_value(ptr %2767)
  %2768 = load ptr, ptr @"Core:fixedDecimal:toText:10:8", align 8
  call void @free_candy_value(ptr %2768)
  %2769 = load ptr, ptr @"Core:fixedDecimal:toText:11", align 8
  call void @free_candy_value(ptr %2769)
  %2770 = load ptr, ptr @"Core:fixedDecimal:toText:20", align 8
  call void @free_candy_value(ptr %2770)
  %2771 = load ptr, ptr @"Core:fixedDecimal:toText:21", align 8
  call void @free_candy_value(ptr %2771)
  %2772 = load ptr, ptr @"Core:fixedDecimal:toText:23:0", align 8
  call void @free_candy_value(ptr %2772)
  %2773 = load ptr, ptr @"Core:fixedDecimal:toText:24", align 8
  call void @free_candy_value(ptr %2773)
  %2774 = load ptr, ptr @"Core:fixedDecimal:toText:27", align 8
  call void @free_candy_value(ptr %2774)
  %2775 = load ptr, ptr @"Core:fixedDecimal:toText:28", align 8
  call void @free_candy_value(ptr %2775)
  %2776 = load ptr, ptr @"Core:fixedDecimal:toText:30:0", align 8
  call void @free_candy_value(ptr %2776)
  %2777 = load ptr, ptr @"Core:fixedDecimal:toText:31", align 8
  call void @free_candy_value(ptr %2777)
  %2778 = load ptr, ptr @"Core:fixedDecimal:toText:32", align 8
  call void @free_candy_value(ptr %2778)
  %2779 = load ptr, ptr @"Core:fixedDecimal:toText:33", align 8
  call void @free_candy_value(ptr %2779)
  %2780 = load ptr, ptr @"Core:fixedDecimal:toText:4", align 8
  call void @free_candy_value(ptr %2780)
  %2781 = load ptr, ptr @"Core:fixedDecimal:toText:7", align 8
  call void @free_candy_value(ptr %2781)
  %2782 = load ptr, ptr @"Core:function:is0:11", align 8
  call void @free_candy_value(ptr %2782)
  %2783 = load ptr, ptr @"Core:function:is0:9:3", align 8
  call void @free_candy_value(ptr %2783)
  %2784 = load ptr, ptr @"Core:function:is1:11", align 8
  call void @free_candy_value(ptr %2784)
  %2785 = load ptr, ptr @"Core:function:is1:9:3", align 8
  call void @free_candy_value(ptr %2785)
  %2786 = load ptr, ptr @"Core:function:is2:11", align 8
  call void @free_candy_value(ptr %2786)
  %2787 = load ptr, ptr @"Core:function:is2:9:3", align 8
  call void @free_candy_value(ptr %2787)
  %2788 = load ptr, ptr @"Core:function:run:12", align 8
  call void @free_candy_value(ptr %2788)
  %2789 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %2789)
  %2790 = load ptr, ptr @"Core:int:compareTo:18", align 8
  call void @free_candy_value(ptr %2790)
  %2791 = load ptr, ptr @"Core:int:compareTo:4", align 8
  call void @free_candy_value(ptr %2791)
  %2792 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %2792)
  %2793 = load ptr, ptr @"Core:int:isEven:4", align 8
  call void @free_candy_value(ptr %2793)
  %2794 = load ptr, ptr @"Core:int:isEven:8", align 8
  call void @free_candy_value(ptr %2794)
  %2795 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  call void @free_candy_value(ptr %2795)
  %2796 = load ptr, ptr @"Core:int:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %2796)
  %2797 = load ptr, ptr @"Core:int:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %2797)
  %2798 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %2798)
  %2799 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:20", align 8
  call void @free_candy_value(ptr %2799)
  %2800 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %2800)
  %2801 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %2801)
  %2802 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %2802)
  %2803 = load ptr, ptr @"Core:int:isLessThan:4", align 8
  call void @free_candy_value(ptr %2803)
  %2804 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %2804)
  %2805 = load ptr, ptr @"Core:int:isNegative:4", align 8
  call void @free_candy_value(ptr %2805)
  %2806 = load ptr, ptr @"Core:int:isNegative:8", align 8
  call void @free_candy_value(ptr %2806)
  %2807 = load ptr, ptr @"Core:int:isNonNegative:14", align 8
  call void @free_candy_value(ptr %2807)
  %2808 = load ptr, ptr @"Core:int:isNonNegative:4", align 8
  call void @free_candy_value(ptr %2808)
  %2809 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  call void @free_candy_value(ptr %2809)
  %2810 = load ptr, ptr @"Core:int:isOdd:4", align 8
  call void @free_candy_value(ptr %2810)
  %2811 = load ptr, ptr @"Core:int:isOdd:8", align 8
  call void @free_candy_value(ptr %2811)
  %2812 = load ptr, ptr @"Core:int:isPositive:4", align 8
  call void @free_candy_value(ptr %2812)
  %2813 = load ptr, ptr @"Core:int:isPositive:8", align 8
  call void @free_candy_value(ptr %2813)
  %2814 = load ptr, ptr @"Core:int:max:14", align 8
  call void @free_candy_value(ptr %2814)
  %2815 = load ptr, ptr @"Core:int:max:17", align 8
  call void @free_candy_value(ptr %2815)
  %2816 = load ptr, ptr @"Core:int:max:4", align 8
  call void @free_candy_value(ptr %2816)
  %2817 = load ptr, ptr @"Core:int:max:9", align 8
  call void @free_candy_value(ptr %2817)
  %2818 = load ptr, ptr @"Core:int:negate:4", align 8
  call void @free_candy_value(ptr %2818)
  %2819 = load ptr, ptr @"Core:int:negate:8", align 8
  call void @free_candy_value(ptr %2819)
  %2820 = load ptr, ptr @"Core:int:pow:12", align 8
  call void @free_candy_value(ptr %2820)
  %2821 = load ptr, ptr @"Core:int:pow:14", align 8
  call void @free_candy_value(ptr %2821)
  %2822 = load ptr, ptr @"Core:int:pow:21:1", align 8
  call void @free_candy_value(ptr %2822)
  %2823 = load ptr, ptr @"Core:int:pow:21:4", align 8
  call void @free_candy_value(ptr %2823)
  %2824 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  call void @free_candy_value(ptr %2824)
  %2825 = load ptr, ptr @"Core:int:pow:21:4:5:10", align 8
  call void @free_candy_value(ptr %2825)
  %2826 = load ptr, ptr @"Core:int:pow:21:4:5:12", align 8
  call void @free_candy_value(ptr %2826)
  %2827 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  call void @free_candy_value(ptr %2827)
  %2828 = load ptr, ptr @"Core:int:pow:21:4:6:12", align 8
  call void @free_candy_value(ptr %2828)
  %2829 = load ptr, ptr @"Core:int:pow:21:4:6:15", align 8
  call void @free_candy_value(ptr %2829)
  %2830 = load ptr, ptr @"Core:int:pow:21:4:6:17", align 8
  call void @free_candy_value(ptr %2830)
  %2831 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  call void @free_candy_value(ptr %2831)
  %2832 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  call void @free_candy_value(ptr %2832)
  %2833 = load ptr, ptr @"Core:int:pow:21:4:7", align 8
  call void @free_candy_value(ptr %2833)
  %2834 = load ptr, ptr @"Core:int:pow:21:base", align 8
  call void @free_candy_value(ptr %2834)
  %2835 = load ptr, ptr @"Core:int:pow:21:exponent", align 8
  call void @free_candy_value(ptr %2835)
  %2836 = load ptr, ptr @"Core:int:pow:22", align 8
  call void @free_candy_value(ptr %2836)
  %2837 = load ptr, ptr @"Core:int:pow:9", align 8
  call void @free_candy_value(ptr %2837)
  %2838 = load ptr, ptr @"Core:iterator:129", align 8
  call void @free_candy_value(ptr %2838)
  %2839 = load ptr, ptr @"Core:iterator:all:16:11", align 8
  call void @free_candy_value(ptr %2839)
  %2840 = load ptr, ptr @"Core:iterator:all:16:13", align 8
  call void @free_candy_value(ptr %2840)
  %2841 = load ptr, ptr @"Core:iterator:all:16:22", align 8
  call void @free_candy_value(ptr %2841)
  %2842 = load ptr, ptr @"Core:iterator:all:17", align 8
  call void @free_candy_value(ptr %2842)
  %2843 = load ptr, ptr @"Core:iterator:any:16:11", align 8
  call void @free_candy_value(ptr %2843)
  %2844 = load ptr, ptr @"Core:iterator:any:16:13", align 8
  call void @free_candy_value(ptr %2844)
  %2845 = load ptr, ptr @"Core:iterator:any:16:22", align 8
  call void @free_candy_value(ptr %2845)
  %2846 = load ptr, ptr @"Core:iterator:any:17", align 8
  call void @free_candy_value(ptr %2846)
  %2847 = load ptr, ptr @"Core:iterator:chunked:28", align 8
  call void @free_candy_value(ptr %2847)
  %2848 = load ptr, ptr @"Core:iterator:ensure:13", align 8
  call void @free_candy_value(ptr %2848)
  %2849 = load ptr, ptr @"Core:iterator:ensure:17:2", align 8
  call void @free_candy_value(ptr %2849)
  %2850 = load ptr, ptr @"Core:iterator:ensure:18", align 8
  call void @free_candy_value(ptr %2850)
  %2851 = load ptr, ptr @"Core:iterator:ensure:9", align 8
  call void @free_candy_value(ptr %2851)
  %2852 = load ptr, ptr @"Core:iterator:foldLeft:14", align 8
  call void @free_candy_value(ptr %2852)
  %2853 = load ptr, ptr @"Core:iterator:foldLeft:21:1", align 8
  call void @free_candy_value(ptr %2853)
  %2854 = load ptr, ptr @"Core:iterator:foldLeft:21:4", align 8
  call void @free_candy_value(ptr %2854)
  %2855 = load ptr, ptr @"Core:iterator:foldLeft:21:5", align 8
  call void @free_candy_value(ptr %2855)
  %2856 = load ptr, ptr @"Core:iterator:foldLeft:21:5:10", align 8
  call void @free_candy_value(ptr %2856)
  %2857 = load ptr, ptr @"Core:iterator:foldLeft:21:5:8", align 8
  call void @free_candy_value(ptr %2857)
  %2858 = load ptr, ptr @"Core:iterator:foldLeft:21:5:item", align 8
  call void @free_candy_value(ptr %2858)
  %2859 = load ptr, ptr @"Core:iterator:foldLeft:21:5:rest", align 8
  call void @free_candy_value(ptr %2859)
  %2860 = load ptr, ptr @"Core:iterator:foldLeft:21:iterator", align 8
  call void @free_candy_value(ptr %2860)
  %2861 = load ptr, ptr @"Core:iterator:foldLeft:21:value", align 8
  call void @free_candy_value(ptr %2861)
  %2862 = load ptr, ptr @"Core:iterator:foldLeft:22", align 8
  call void @free_candy_value(ptr %2862)
  %2863 = load ptr, ptr @"Core:iterator:foldLeft:3", align 8
  call void @free_candy_value(ptr %2863)
  %2864 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  call void @free_candy_value(ptr %2864)
  %2865 = load ptr, ptr @"Core:iterator:generate:42:6:14", align 8
  call void @free_candy_value(ptr %2865)
  %2866 = load ptr, ptr @"Core:iterator:generate:42:7", align 8
  call void @free_candy_value(ptr %2866)
  %2867 = load ptr, ptr @"Core:iterator:generate:43", align 8
  call void @free_candy_value(ptr %2867)
  %2868 = load ptr, ptr @"Core:iterator:generateWithState:12:1:2", align 8
  call void @free_candy_value(ptr %2868)
  %2869 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3", align 8
  call void @free_candy_value(ptr %2869)
  %2870 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:19", align 8
  call void @free_candy_value(ptr %2870)
  %2871 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:20", align 8
  call void @free_candy_value(ptr %2871)
  %2872 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:22:0", align 8
  call void @free_candy_value(ptr %2872)
  %2873 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:23", align 8
  call void @free_candy_value(ptr %2873)
  %2874 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:25", align 8
  call void @free_candy_value(ptr %2874)
  %2875 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:26", align 8
  call void @free_candy_value(ptr %2875)
  %2876 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:27", align 8
  call void @free_candy_value(ptr %2876)
  %2877 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:6", align 8
  call void @free_candy_value(ptr %2877)
  %2878 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:item", align 8
  call void @free_candy_value(ptr %2878)
  %2879 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:state", align 8
  call void @free_candy_value(ptr %2879)
  %2880 = load ptr, ptr @"Core:iterator:generateWithState:13", align 8
  call void @free_candy_value(ptr %2880)
  %2881 = load ptr, ptr @"Core:iterator:generateWithState:9", align 8
  call void @free_candy_value(ptr %2881)
  %2882 = load ptr, ptr @"Core:iterator:isEmpty:7", align 8
  call void @free_candy_value(ptr %2882)
  %2883 = load ptr, ptr @"Core:iterator:joinToText:12:18", align 8
  call void @free_candy_value(ptr %2883)
  %2884 = load ptr, ptr @"Core:iterator:joinToText:12:9", align 8
  call void @free_candy_value(ptr %2884)
  %2885 = load ptr, ptr @"Core:iterator:joinToText:13", align 8
  call void @free_candy_value(ptr %2885)
  %2886 = load ptr, ptr @"Core:iterator:joinToText:3", align 8
  call void @free_candy_value(ptr %2886)
  %2887 = load ptr, ptr @"Core:iterator:length:6", align 8
  call void @free_candy_value(ptr %2887)
  %2888 = load ptr, ptr @"Core:iterator:length:8", align 8
  call void @free_candy_value(ptr %2888)
  %2889 = load ptr, ptr @"Core:iterator:map:14", align 8
  call void @free_candy_value(ptr %2889)
  %2890 = load ptr, ptr @"Core:iterator:map:17:2", align 8
  call void @free_candy_value(ptr %2890)
  %2891 = load ptr, ptr @"Core:iterator:map:17:3", align 8
  call void @free_candy_value(ptr %2891)
  %2892 = load ptr, ptr @"Core:iterator:map:17:3:5", align 8
  call void @free_candy_value(ptr %2892)
  %2893 = load ptr, ptr @"Core:iterator:map:17:3:item", align 8
  call void @free_candy_value(ptr %2893)
  %2894 = load ptr, ptr @"Core:iterator:map:17:3:rest", align 8
  call void @free_candy_value(ptr %2894)
  %2895 = load ptr, ptr @"Core:iterator:map:18", align 8
  call void @free_candy_value(ptr %2895)
  %2896 = load ptr, ptr @"Core:iterator:map:3", align 8
  call void @free_candy_value(ptr %2896)
  %2897 = load ptr, ptr @"Core:iterator:next:15", align 8
  call void @free_candy_value(ptr %2897)
  %2898 = load ptr, ptr @"Core:iterator:next:3", align 8
  call void @free_candy_value(ptr %2898)
  %2899 = load ptr, ptr @"Core:iterator:next:6", align 8
  call void @free_candy_value(ptr %2899)
  %2900 = load ptr, ptr @"Core:iterator:next:nextFunction", align 8
  call void @free_candy_value(ptr %2900)
  %2901 = load ptr, ptr @"Core:iterator:reduceLeft:13", align 8
  call void @free_candy_value(ptr %2901)
  %2902 = load ptr, ptr @"Core:iterator:reduceLeft:15", align 8
  call void @free_candy_value(ptr %2902)
  %2903 = load ptr, ptr @"Core:iterator:reduceLeft:16", align 8
  call void @free_candy_value(ptr %2903)
  %2904 = load ptr, ptr @"Core:iterator:reduceLeft:16:14", align 8
  call void @free_candy_value(ptr %2904)
  %2905 = load ptr, ptr @"Core:iterator:reduceLeft:16:item", align 8
  call void @free_candy_value(ptr %2905)
  %2906 = load ptr, ptr @"Core:iterator:reduceLeft:16:rest", align 8
  call void @free_candy_value(ptr %2906)
  %2907 = load ptr, ptr @"Core:iterator:reduceLeft:9", align 8
  call void @free_candy_value(ptr %2907)
  %2908 = load ptr, ptr @"Core:iterator:skip:14", align 8
  call void @free_candy_value(ptr %2908)
  %2909 = load ptr, ptr @"Core:iterator:skip:22", align 8
  call void @free_candy_value(ptr %2909)
  %2910 = load ptr, ptr @"Core:iterator:skip:24", align 8
  call void @free_candy_value(ptr %2910)
  %2911 = load ptr, ptr @"Core:iterator:skip:26:6:1", align 8
  call void @free_candy_value(ptr %2911)
  %2912 = load ptr, ptr @"Core:iterator:skip:26:6:7:2", align 8
  call void @free_candy_value(ptr %2912)
  %2913 = load ptr, ptr @"Core:iterator:skip:26:6:8:2", align 8
  call void @free_candy_value(ptr %2913)
  %2914 = load ptr, ptr @"Core:iterator:skip:26:6:8:3", align 8
  call void @free_candy_value(ptr %2914)
  %2915 = load ptr, ptr @"Core:iterator:skip:26:6:8:3:13", align 8
  call void @free_candy_value(ptr %2915)
  %2916 = load ptr, ptr @"Core:iterator:skip:26:6:8:3:15", align 8
  call void @free_candy_value(ptr %2916)
  %2917 = load ptr, ptr @"Core:iterator:skip:26:6:8:3:rest", align 8
  call void @free_candy_value(ptr %2917)
  %2918 = load ptr, ptr @"Core:iterator:skip:26:6:9", align 8
  call void @free_candy_value(ptr %2918)
  %2919 = load ptr, ptr @"Core:iterator:skip:26:6:iterator", align 8
  call void @free_candy_value(ptr %2919)
  %2920 = load ptr, ptr @"Core:iterator:skip:26:6:n", align 8
  call void @free_candy_value(ptr %2920)
  %2921 = load ptr, ptr @"Core:iterator:skip:26:7", align 8
  call void @free_candy_value(ptr %2921)
  %2922 = load ptr, ptr @"Core:iterator:sum:17", align 8
  call void @free_candy_value(ptr %2922)
  %2923 = load ptr, ptr @"Core:iterator:sum:3", align 8
  call void @free_candy_value(ptr %2923)
  %2924 = load ptr, ptr @"Core:iterator:sum:5:15", align 8
  call void @free_candy_value(ptr %2924)
  %2925 = load ptr, ptr @"Core:iterator:sum:6", align 8
  call void @free_candy_value(ptr %2925)
  %2926 = load ptr, ptr @"Core:iterator:sum:8:8", align 8
  call void @free_candy_value(ptr %2926)
  %2927 = load ptr, ptr @"Core:iterator:sum:9", align 8
  call void @free_candy_value(ptr %2927)
  %2928 = load ptr, ptr @"Core:iterator:take:17", align 8
  call void @free_candy_value(ptr %2928)
  %2929 = load ptr, ptr @"Core:iterator:take:19", align 8
  call void @free_candy_value(ptr %2929)
  %2930 = load ptr, ptr @"Core:iterator:take:25", align 8
  call void @free_candy_value(ptr %2930)
  %2931 = load ptr, ptr @"Core:iterator:take:27:1", align 8
  call void @free_candy_value(ptr %2931)
  %2932 = load ptr, ptr @"Core:iterator:take:27:10", align 8
  call void @free_candy_value(ptr %2932)
  %2933 = load ptr, ptr @"Core:iterator:take:27:index", align 8
  call void @free_candy_value(ptr %2933)
  %2934 = load ptr, ptr @"Core:iterator:take:28", align 8
  call void @free_candy_value(ptr %2934)
  %2935 = load ptr, ptr @"Core:iterator:take:30:5", align 8
  call void @free_candy_value(ptr %2935)
  %2936 = load ptr, ptr @"Core:iterator:take:31", align 8
  call void @free_candy_value(ptr %2936)
  %2937 = load ptr, ptr @"Core:iterator:take:9", align 8
  call void @free_candy_value(ptr %2937)
  %2938 = load ptr, ptr @"Core:iterator:takeWhile:3", align 8
  call void @free_candy_value(ptr %2938)
  %2939 = load ptr, ptr @"Core:iterator:takeWhile:7:2", align 8
  call void @free_candy_value(ptr %2939)
  %2940 = load ptr, ptr @"Core:iterator:takeWhile:7:3", align 8
  call void @free_candy_value(ptr %2940)
  %2941 = load ptr, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  call void @free_candy_value(ptr %2941)
  %2942 = load ptr, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  call void @free_candy_value(ptr %2942)
  %2943 = load ptr, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  call void @free_candy_value(ptr %2943)
  %2944 = load ptr, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  call void @free_candy_value(ptr %2944)
  %2945 = load ptr, ptr @"Core:iterator:takeWhile:8", align 8
  call void @free_candy_value(ptr %2945)
  %2946 = load ptr, ptr @"Core:iterator:toList:3", align 8
  call void @free_candy_value(ptr %2946)
  %2947 = load ptr, ptr @"Core:iterator:toList:6:8", align 8
  call void @free_candy_value(ptr %2947)
  %2948 = load ptr, ptr @"Core:iterator:toList:7", align 8
  call void @free_candy_value(ptr %2948)
  %2949 = load ptr, ptr @"Core:iterator:where:17:2:2", align 8
  call void @free_candy_value(ptr %2949)
  %2950 = load ptr, ptr @"Core:iterator:where:17:2:3", align 8
  call void @free_candy_value(ptr %2950)
  %2951 = load ptr, ptr @"Core:iterator:where:17:2:3:4", align 8
  call void @free_candy_value(ptr %2951)
  %2952 = load ptr, ptr @"Core:iterator:where:17:2:3:6:2", align 8
  call void @free_candy_value(ptr %2952)
  %2953 = load ptr, ptr @"Core:iterator:where:17:2:3:6:4", align 8
  call void @free_candy_value(ptr %2953)
  %2954 = load ptr, ptr @"Core:iterator:where:17:2:3:6:5", align 8
  call void @free_candy_value(ptr %2954)
  %2955 = load ptr, ptr @"Core:iterator:where:17:2:3:6:5:item", align 8
  call void @free_candy_value(ptr %2955)
  %2956 = load ptr, ptr @"Core:iterator:where:17:2:3:6:5:rest", align 8
  call void @free_candy_value(ptr %2956)
  %2957 = load ptr, ptr @"Core:iterator:where:17:2:3:7", align 8
  call void @free_candy_value(ptr %2957)
  %2958 = load ptr, ptr @"Core:iterator:where:17:2:3:item", align 8
  call void @free_candy_value(ptr %2958)
  %2959 = load ptr, ptr @"Core:iterator:where:17:2:3:rest", align 8
  call void @free_candy_value(ptr %2959)
  %2960 = load ptr, ptr @"Core:iterator:where:17:3", align 8
  call void @free_candy_value(ptr %2960)
  %2961 = load ptr, ptr @"Core:iterator:where:18", align 8
  call void @free_candy_value(ptr %2961)
  %2962 = load ptr, ptr @"Core:iterator:windowed:14", align 8
  call void @free_candy_value(ptr %2962)
  %2963 = load ptr, ptr @"Core:iterator:windowed:22", align 8
  call void @free_candy_value(ptr %2963)
  %2964 = load ptr, ptr @"Core:iterator:windowed:24", align 8
  call void @free_candy_value(ptr %2964)
  %2965 = load ptr, ptr @"Core:iterator:windowed:3", align 8
  call void @free_candy_value(ptr %2965)
  %2966 = load ptr, ptr @"Core:iterator:windowed:34", align 8
  call void @free_candy_value(ptr %2966)
  %2967 = load ptr, ptr @"Core:iterator:windowed:42", align 8
  call void @free_candy_value(ptr %2967)
  %2968 = load ptr, ptr @"Core:iterator:windowed:44", align 8
  call void @free_candy_value(ptr %2968)
  %2969 = load ptr, ptr @"Core:iterator:windowed:54", align 8
  call void @free_candy_value(ptr %2969)
  %2970 = load ptr, ptr @"Core:iterator:windowed:57:14", align 8
  call void @free_candy_value(ptr %2970)
  %2971 = load ptr, ptr @"Core:iterator:windowed:57:18:7", align 8
  call void @free_candy_value(ptr %2971)
  %2972 = load ptr, ptr @"Core:iterator:windowed:57:20", align 8
  call void @free_candy_value(ptr %2972)
  %2973 = load ptr, ptr @"Core:iterator:windowed:57:24:7", align 8
  call void @free_candy_value(ptr %2973)
  %2974 = load ptr, ptr @"Core:iterator:windowed:57:26", align 8
  call void @free_candy_value(ptr %2974)
  %2975 = load ptr, ptr @"Core:iterator:windowed:57:3", align 8
  call void @free_candy_value(ptr %2975)
  %2976 = load ptr, ptr @"Core:iterator:windowed:57:5", align 8
  call void @free_candy_value(ptr %2976)
  %2977 = load ptr, ptr @"Core:iterator:windowed:58", align 8
  call void @free_candy_value(ptr %2977)
  %2978 = load ptr, ptr @"Core:iterator:withIndex:11:1", align 8
  call void @free_candy_value(ptr %2978)
  %2979 = load ptr, ptr @"Core:iterator:withIndex:11:4", align 8
  call void @free_candy_value(ptr %2979)
  %2980 = load ptr, ptr @"Core:iterator:withIndex:11:5", align 8
  call void @free_candy_value(ptr %2980)
  %2981 = load ptr, ptr @"Core:iterator:withIndex:11:5:20", align 8
  call void @free_candy_value(ptr %2981)
  %2982 = load ptr, ptr @"Core:iterator:withIndex:11:5:item", align 8
  call void @free_candy_value(ptr %2982)
  %2983 = load ptr, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  call void @free_candy_value(ptr %2983)
  %2984 = load ptr, ptr @"Core:iterator:withIndex:11:index", align 8
  call void @free_candy_value(ptr %2984)
  %2985 = load ptr, ptr @"Core:iterator:withIndex:11:iterator", align 8
  call void @free_candy_value(ptr %2985)
  %2986 = load ptr, ptr @"Core:iterator:withIndex:12", align 8
  call void @free_candy_value(ptr %2986)
  %2987 = load ptr, ptr @"Core:iterator:withIndex:3", align 8
  call void @free_candy_value(ptr %2987)
  %2988 = load ptr, ptr @"Core:iterator:wrapSafe:10:7", align 8
  call void @free_candy_value(ptr %2988)
  %2989 = load ptr, ptr @"Core:iterator:wrapSafe:14:1", align 8
  call void @free_candy_value(ptr %2989)
  %2990 = load ptr, ptr @"Core:iterator:wrapSafe:14:11", align 8
  call void @free_candy_value(ptr %2990)
  %2991 = load ptr, ptr @"Core:iterator:wrapSafe:14:18", align 8
  call void @free_candy_value(ptr %2991)
  %2992 = load ptr, ptr @"Core:iterator:wrapSafe:14:1:8", align 8
  call void @free_candy_value(ptr %2992)
  %2993 = load ptr, ptr @"Core:iterator:wrapSafe:14:1:function", align 8
  call void @free_candy_value(ptr %2993)
  %2994 = load ptr, ptr @"Core:iterator:wrapSafe:14:20", align 8
  call void @free_candy_value(ptr %2994)
  %2995 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:7", align 8
  call void @free_candy_value(ptr %2995)
  %2996 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8", align 8
  call void @free_candy_value(ptr %2996)
  %2997 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8:17", align 8
  call void @free_candy_value(ptr %2997)
  %2998 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8:7", align 8
  call void @free_candy_value(ptr %2998)
  %2999 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8:item", align 8
  call void @free_candy_value(ptr %2999)
  %3000 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8:rest", align 8
  call void @free_candy_value(ptr %3000)
  %3001 = load ptr, ptr @"Core:iterator:wrapSafe:15", align 8
  call void @free_candy_value(ptr %3001)
  %3002 = load ptr, ptr @"Core:iterator:wrapSafe:9", align 8
  call void @free_candy_value(ptr %3002)
  %3003 = load ptr, ptr @"Core:list:append:11", align 8
  call void @free_candy_value(ptr %3003)
  %3004 = load ptr, ptr @"Core:list:append:4", align 8
  call void @free_candy_value(ptr %3004)
  %3005 = load ptr, ptr @"Core:list:append:9", align 8
  call void @free_candy_value(ptr %3005)
  %3006 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %3006)
  %3007 = load ptr, ptr @"Core:result:mapOrElse:14", align 8
  call void @free_candy_value(ptr %3007)
  %3008 = load ptr, ptr @"Core:result:mapOrElse:24", align 8
  call void @free_candy_value(ptr %3008)
  %3009 = load ptr, ptr @"Core:result:mapOrElse:26", align 8
  call void @free_candy_value(ptr %3009)
  %3010 = load ptr, ptr @"Core:result:mapOrElse:26:2", align 8
  call void @free_candy_value(ptr %3010)
  %3011 = load ptr, ptr @"Core:result:mapOrElse:26:5", align 8
  call void @free_candy_value(ptr %3011)
  %3012 = load ptr, ptr @"Core:result:mapOrElse:26:value", align 8
  call void @free_candy_value(ptr %3012)
  %3013 = load ptr, ptr @"Core:result:mapOrElse:26:value#1", align 8
  call void @free_candy_value(ptr %3013)
  %3014 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %3014)
  %3015 = load ptr, ptr @"Core:result:unwrapOr:4", align 8
  call void @free_candy_value(ptr %3015)
  %3016 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  call void @free_candy_value(ptr %3016)
  %3017 = load ptr, ptr @"Core:result:unwrapOrElse:14", align 8
  call void @free_candy_value(ptr %3017)
  %3018 = load ptr, ptr @"Core:result:unwrapOrElse:18:7", align 8
  call void @free_candy_value(ptr %3018)
  %3019 = load ptr, ptr @"Core:result:unwrapOrElse:19", align 8
  call void @free_candy_value(ptr %3019)
  %3020 = load ptr, ptr @"Core:result:unwrapOrElse:4", align 8
  call void @free_candy_value(ptr %3020)
  %3021 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  call void @free_candy_value(ptr %3021)
  %3022 = load ptr, ptr @"Core:text:removePrefix:15:4", align 8
  call void @free_candy_value(ptr %3022)
  %3023 = load ptr, ptr @"Core:text:removePrefix:15:7", align 8
  call void @free_candy_value(ptr %3023)
  %3024 = load ptr, ptr @"Core:text:removePrefix:15:8", align 8
  call void @free_candy_value(ptr %3024)
  %3025 = load ptr, ptr @"Core:text:removePrefix:17", align 8
  call void @free_candy_value(ptr %3025)
  %3026 = load ptr, ptr @"Core:text:removePrefix:4", align 8
  call void @free_candy_value(ptr %3026)
  %3027 = load ptr, ptr @"Core:text:removePrefix:9", align 8
  call void @free_candy_value(ptr %3027)
  %3028 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %3028)
  %3029 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %3029)
  %3030 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %3030)
  %3031 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %3031)
  %3032 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %3032)
  %3033 = load ptr, ptr @fun_candy_builtin_int_bitwise_and, align 8
  call void @free_candy_value(ptr %3033)
  %3034 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %3034)
  %3035 = load ptr, ptr @fun_candy_builtin_int_divide_truncating, align 8
  call void @free_candy_value(ptr %3035)
  %3036 = load ptr, ptr @fun_candy_builtin_int_multiply, align 8
  call void @free_candy_value(ptr %3036)
  %3037 = load ptr, ptr @fun_candy_builtin_int_remainder, align 8
  call void @free_candy_value(ptr %3037)
  %3038 = load ptr, ptr @fun_candy_builtin_int_shift_right, align 8
  call void @free_candy_value(ptr %3038)
  %3039 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %3039)
  %3040 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %3040)
  %3041 = load ptr, ptr @fun_candy_builtin_list_insert, align 8
  call void @free_candy_value(ptr %3041)
  %3042 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %3042)
  %3043 = load ptr, ptr @fun_candy_builtin_print, align 8
  call void @free_candy_value(ptr %3043)
  %3044 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %3044)
  %3045 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %3045)
  %3046 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %3046)
  %3047 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %3047)
  %3048 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %3048)
  %3049 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %3049)
  %3050 = load ptr, ptr @fun_candy_builtin_text_get_range, align 8
  call void @free_candy_value(ptr %3050)
  %3051 = load ptr, ptr @fun_candy_builtin_text_length, align 8
  call void @free_candy_value(ptr %3051)
  %3052 = load ptr, ptr @fun_candy_builtin_text_starts_with, align 8
  call void @free_candy_value(ptr %3052)
  %3053 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %3053)
  %3054 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %3054)
  %3055 = load ptr, ptr @tag_Base, align 8
  call void @free_candy_value(ptr %3055)
  %3056 = load ptr, ptr @tag_Empty, align 8
  call void @free_candy_value(ptr %3056)
  %3057 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %3057)
  %3058 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %3058)
  %3059 = load ptr, ptr @tag_Exponent, align 8
  call void @free_candy_value(ptr %3059)
  %3060 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %3060)
  %3061 = load ptr, ptr @tag_FixedDecimal, align 8
  call void @free_candy_value(ptr %3061)
  %3062 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %3062)
  %3063 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %3063)
  %3064 = load ptr, ptr @tag_Index, align 8
  call void @free_candy_value(ptr %3064)
  %3065 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %3065)
  %3066 = load ptr, ptr @tag_Item, align 8
  call void @free_candy_value(ptr %3066)
  %3067 = load ptr, ptr @tag_Iterator, align 8
  call void @free_candy_value(ptr %3067)
  %3068 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %3068)
  %3069 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %3069)
  %3070 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %3070)
  %3071 = load ptr, ptr @tag_MinorUnits, align 8
  call void @free_candy_value(ptr %3071)
  %3072 = load ptr, ptr @tag_More, align 8
  call void @free_candy_value(ptr %3072)
  %3073 = load ptr, ptr @tag_N, align 8
  call void @free_candy_value(ptr %3073)
  %3074 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %3074)
  %3075 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %3075)
  %3076 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %3076)
  %3077 = load ptr, ptr @tag_Rest, align 8
  call void @free_candy_value(ptr %3077)
  %3078 = load ptr, ptr @tag_Scale, align 8
  call void @free_candy_value(ptr %3078)
  %3079 = load ptr, ptr @tag_State, align 8
  call void @free_candy_value(ptr %3079)
  %3080 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %3080)
  %3081 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %3081)
  %3082 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %3082)
  %3083 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %3083)
  %3084 = load ptr, ptr @tag_Value, align 8
  call void @free_candy_value(ptr %3084)
  %3085 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %3085)
  %3086 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %3086)
  %3087 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %3087)
  %3088 = load ptr, ptr @num_3, align 8
  call void @free_candy_value(ptr %3088)
  %3089 = load ptr, ptr @num_4, align 8
  call void @free_candy_value(ptr %3089)
  %3090 = load ptr, ptr @num_5, align 8
  call void @free_candy_value(ptr %3090)
  %3091 = load ptr, ptr @num_6, align 8
  call void @free_candy_value(ptr %3091)
  %3092 = load ptr, ptr @num_7, align 8
  call void @free_candy_value(ptr %3092)
  %3093 = load ptr, ptr @num_8, align 8
  call void @free_candy_value(ptr %3093)
  %3094 = load ptr, ptr @num_9, align 8
  call void @free_candy_value(ptr %3094)
  %3095 = load ptr, ptr @num_10, align 8
  call void @free_candy_value(ptr %3095)
  %3096 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  call void @free_candy_value(ptr %3096)
  %3097 = load ptr, ptr @text_, align 8
  call void @free_candy_value(ptr %3097)
  %3098 = load ptr, ptr @"text_ to be ", align 8
  call void @free_candy_value(ptr %3098)
  %3099 = load ptr, ptr @text_-1, align 8
  call void @free_candy_value(ptr %3099)
  %3100 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %3100)
  %3101 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  call void @free_candy_value(ptr %3101)
  %3102 = load ptr, ptr @text_1, align 8
  call void @free_candy_value(ptr %3102)
  %3103 = load ptr, ptr @"text_A check failed.", align 8
  call void @free_candy_value(ptr %3103)
  %3104 = load ptr, ptr @"text_A check failed: Expected ", align 8
  call void @free_candy_value(ptr %3104)
  %3105 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  call void @free_candy_value(ptr %3105)
  %3106 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %3106)
  %3107 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  call void @free_candy_value(ptr %3107)
  %3108 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  call void @free_candy_value(ptr %3108)
  %3109 = load ptr, ptr @"text_Expected More, got ", align 8
  call void @free_candy_value(ptr %3109)
  %3110 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %3110)
  %3111 = load ptr, ptr @"text_Expected `0`, got `", align 8
  call void @free_candy_value(ptr %3111)
  %3112 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  call void @free_candy_value(ptr %3112)
  %3113 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  call void @free_candy_value(ptr %3113)
  %3114 = load ptr, ptr @"text_Expected `False`, got `", align 8
  call void @free_candy_value(ptr %3114)
  %3115 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  call void @free_candy_value(ptr %3115)
  %3116 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  call void @free_candy_value(ptr %3116)
  %3117 = load ptr, ptr @"text_Expected `True`, got `", align 8
  call void @free_candy_value(ptr %3117)
  %3118 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  call void @free_candy_value(ptr %3118)
  %3119 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %3119)
  %3120 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %3120)
  %3121 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  call void @free_candy_value(ptr %3121)
  %3122 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %3122)
  %3123 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  call void @free_candy_value(ptr %3123)
  %3124 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  call void @free_candy_value(ptr %3124)
  %3125 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  call void @free_candy_value(ptr %3125)
  %3126 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  call void @free_candy_value(ptr %3126)
  %3127 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  call void @free_candy_value(ptr %3127)
  %3128 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  call void @free_candy_value(ptr %3128)
  %3129 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  call void @free_candy_value(ptr %3129)
  %3130 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  call void @free_candy_value(ptr %3130)
  %3131 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  call void @free_candy_value(ptr %3131)
  %3132 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  call void @free_candy_value(ptr %3132)
  %3133 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  call void @free_candy_value(ptr %3133)
  %3134 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  call void @free_candy_value(ptr %3134)
  %3135 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %3135)
  %3136 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %3136)
  %3137 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  call void @free_candy_value(ptr %3137)
  %3138 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %3138)
  %3139 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @free_candy_value(ptr %3139)
  %3140 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  call void @free_candy_value(ptr %3140)
  %3141 = load ptr, ptr @"text_You can't divide by zero.", align 8
  call void @free_candy_value(ptr %3141)
  %3142 = load ptr, ptr @"text_`", align 8
  call void @free_candy_value(ptr %3142)
  %3143 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %3143)
  %3144 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @free_candy_value(ptr %3144)
  %3145 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3145)
  %3146 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %3146)
  %3147 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @free_candy_value(ptr %3147)
  %3148 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3148)
  %3149 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @free_candy_value(ptr %3149)
  %3150 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3150)
  %3151 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %3151)
  %3152 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %3152)
  %3153 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  call void @free_candy_value(ptr %3153)
  %3154 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %3154)
  %3155 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  call void @free_candy_value(ptr %3155)
  %3156 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @free_candy_value(ptr %3156)
  %3157 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %3157)
  %3158 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3158)
  %3159 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3159)
  %3160 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %3160)
  %3161 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %3161)
  %3162 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %3162)
  %3163 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %3163)
  %3164 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3164)
  %3165 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @free_candy_value(ptr %3165)
  %3166 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3166)
  %3167 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3167)
  %3168 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %3168)
  %3169 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %3169)
  %3170 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %3170)
  %3171 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %3171)
  %3172 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %3172)
  %3173 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  call void @free_candy_value(ptr %3173)
  %3174 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  call void @free_candy_value(ptr %3174)
  %3175 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %3175)
  %3176 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  call void @free_candy_value(ptr %3176)
  %3177 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  call void @free_candy_value(ptr %3177)
  %3178 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %3178)
  %3179 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  call void @free_candy_value(ptr %3179)
  %3180 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %3180)
  %3181 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %3181)
  %3182 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %3182)
  %3183 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3183)
  %3184 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3184)
  %3185 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  call void @free_candy_value(ptr %3185)
  %3186 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  call void @free_candy_value(ptr %3186)
  %3187 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  call void @free_candy_value(ptr %3187)
  %3188 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  call void @free_candy_value(ptr %3188)
  %3189 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  call void @free_candy_value(ptr %3189)
  %3190 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  call void @free_candy_value(ptr %3190)
  %3191 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  call void @free_candy_value(ptr %3191)
  %3192 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %3192)
  %3193 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %3193)
  %3194 = load ptr, ptr @"text_`is delta` was not satisfied", align 8
  call void @free_candy_value(ptr %3194)
  %3195 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  call void @free_candy_value(ptr %3195)
  %3196 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  call void @free_candy_value(ptr %3196)
  %3197 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %3197)
  %3198 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  call void @free_candy_value(ptr %3198)
  %3199 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  call void @free_candy_value(ptr %3199)
  %3200 = load ptr, ptr @"text_`is prefix` was not satisfied", align 8
  call void @free_candy_value(ptr %3200)
  %3201 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %3201)
  %3202 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  call void @free_candy_value(ptr %3202)
  %3203 = load ptr, ptr @"text_`is summandA` was not satisfied", align 8
  call void @free_candy_value(ptr %3203)
  %3204 = load ptr, ptr @"text_`is summandB` was not satisfied", align 8
  call void @free_candy_value(ptr %3204)
  %3205 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  call void @free_candy_value(ptr %3205)
  %3206 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  call void @free_candy_value(ptr %3206)
  %3207 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %3207)
  %3208 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  call void @free_candy_value(ptr %3208)
  %3209 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %3209)
  %3210 = load ptr, ptr @"text_`isConditionBool` was not satisfied", align 8
  call void @free_candy_value(ptr %3210)
  %3211 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @free_candy_value(ptr %3211)
  %3212 = load ptr, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  call void @free_candy_value(ptr %3212)
  %3213 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %3213)
  %3214 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  call void @free_candy_value(ptr %3214)
  %3215 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  call void @free_candy_value(ptr %3215)
  %3216 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @free_candy_value(ptr %3216)
  %3217 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @free_candy_value(ptr %3217)
  %3218 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %3218)
  %3219 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @free_candy_value(ptr %3219)
  %3220 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3220)
  %3221 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @free_candy_value(ptr %3221)
  %3222 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %3222)
  %3223 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %3223)
  %3224 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @free_candy_value(ptr %3224)
  %3225 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %3225)
  %3226 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %3226)
  %3227 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %3227)
  %3228 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3228)
  %3229 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %3229)
  %3230 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %3230)
  %3231 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3231)
  %3232 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @free_candy_value(ptr %3232)
  %3233 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %3233)
  %3234 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  call void @free_candy_value(ptr %3234)
  %3235 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @free_candy_value(ptr %3235)
  %3236 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @free_candy_value(ptr %3236)
  %3237 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %3237)
  %3238 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  call void @free_candy_value(ptr %3238)
  %3239 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %3239)
  %3240 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %3240)
  %3241 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @free_candy_value(ptr %3241)
  %3242 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %3242)
  %3243 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %3243)
  %3244 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @free_candy_value(ptr %3244)
  %3245 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @free_candy_value(ptr %3245)
  %3246 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @free_candy_value(ptr %3246)
  %3247 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %3247)
  %3248 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %3248)
  %3249 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %3249)
  %3250 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %3250)
  %3251 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %3251)
  %3252 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %3252)
  %3253 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %3253)
  %3254 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %3254)
  %3255 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  call void @free_candy_value(ptr %3255)
  %3256 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %3256)
  %3257 = load ptr, ptr @fun_Builtins__not, align 8
  call void @free_candy_value(ptr %3257)
  %3258 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  call void @free_candy_value(ptr %3258)
  %3259 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %3259)
  %3260 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3260)
  %3261 = load ptr, ptr @fun_Builtins__not_1_equals_else.2, align 8
  call void @free_candy_value(ptr %3261)
  %3262 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %3262)
  %3263 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3263)
  %3264 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3264)
  %3265 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3265)
  %3266 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %3266)
  %3267 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  call void @free_candy_value(ptr %3267)
  %3268 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %3268)
  %3269 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  call void @free_candy_value(ptr %3269)
  %3270 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  call void @free_candy_value(ptr %3270)
  %3271 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.4, align 8
  call void @free_candy_value(ptr %3271)
  %3272 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %3272)
  %3273 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3273)
  %3274 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.6, align 8
  call void @free_candy_value(ptr %3274)
  %3275 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %3275)
  %3276 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %3276)
  %3277 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %3277)
  %3278 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %3278)
  %3279 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3279)
  %3280 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3280)
  %3281 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.8, align 8
  call void @free_candy_value(ptr %3281)
  %3282 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %3282)
  %3283 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  call void @free_candy_value(ptr %3283)
  %3284 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  call void @free_candy_value(ptr %3284)
  %3285 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  call void @free_candy_value(ptr %3285)
  %3286 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %3286)
  %3287 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %3287)
  %3288 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %3288)
  %3289 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %3289)
  %3290 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.10, align 8
  call void @free_candy_value(ptr %3290)
  %3291 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %3291)
  %3292 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3292)
  %3293 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.12, align 8
  call void @free_candy_value(ptr %3293)
  %3294 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %3294)
  %3295 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  call void @free_candy_value(ptr %3295)
  %3296 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  call void @free_candy_value(ptr %3296)
  %3297 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.14, align 8
  call void @free_candy_value(ptr %3297)
  %3298 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.16, align 8
  call void @free_candy_value(ptr %3298)
  %3299 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %3299)
  %3300 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then.18, align 8
  call void @free_candy_value(ptr %3300)
  %3301 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else.20, align 8
  call void @free_candy_value(ptr %3301)
  %3302 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.22, align 8
  call void @free_candy_value(ptr %3302)
  %3303 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %3303)
  %3304 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.24, align 8
  call void @free_candy_value(ptr %3304)
  %3305 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.26, align 8
  call void @free_candy_value(ptr %3305)
  %3306 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %3306)
  %3307 = load ptr, ptr @fun_Builtins__listInsert, align 8
  call void @free_candy_value(ptr %3307)
  %3308 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.28, align 8
  call void @free_candy_value(ptr %3308)
  %3309 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %3309)
  %3310 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.30, align 8
  call void @free_candy_value(ptr %3310)
  %3311 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.32, align 8
  call void @free_candy_value(ptr %3311)
  %3312 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.34, align 8
  call void @free_candy_value(ptr %3312)
  %3313 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %3313)
  %3314 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.36, align 8
  call void @free_candy_value(ptr %3314)
  %3315 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.38, align 8
  call void @free_candy_value(ptr %3315)
  %3316 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %3316)
  %3317 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  call void @free_candy_value(ptr %3317)
  %3318 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.40, align 8
  call void @free_candy_value(ptr %3318)
  %3319 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %3319)
  %3320 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.42, align 8
  call void @free_candy_value(ptr %3320)
  %3321 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.44, align 8
  call void @free_candy_value(ptr %3321)
  %3322 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.46, align 8
  call void @free_candy_value(ptr %3322)
  %3323 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %3323)
  %3324 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.48, align 8
  call void @free_candy_value(ptr %3324)
  %3325 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.50, align 8
  call void @free_candy_value(ptr %3325)
  %3326 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %3326)
  %3327 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.52, align 8
  call void @free_candy_value(ptr %3327)
  %3328 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %3328)
  %3329 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.54, align 8
  call void @free_candy_value(ptr %3329)
  %3330 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.56, align 8
  call void @free_candy_value(ptr %3330)
  %3331 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.58, align 8
  call void @free_candy_value(ptr %3331)
  %3332 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %3332)
  %3333 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.60, align 8
  call void @free_candy_value(ptr %3333)
  %3334 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.62, align 8
  call void @free_candy_value(ptr %3334)
  %3335 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %3335)
  %3336 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.64, align 8
  call void @free_candy_value(ptr %3336)
  %3337 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %3337)
  %3338 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then.66, align 8
  call void @free_candy_value(ptr %3338)
  %3339 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else.68, align 8
  call void @free_candy_value(ptr %3339)
  %3340 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.70, align 8
  call void @free_candy_value(ptr %3340)
  %3341 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %3341)
  %3342 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.72, align 8
  call void @free_candy_value(ptr %3342)
  %3343 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.74, align 8
  call void @free_candy_value(ptr %3343)
  %3344 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %3344)
  %3345 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %3345)
  %3346 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %3346)
  %3347 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %3347)
  %3348 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3348)
  %3349 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3349)
  %3350 = load ptr, ptr @fun_Core_bool_is_1_equals_else.76, align 8
  call void @free_candy_value(ptr %3350)
  %3351 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %3351)
  %3352 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3352)
  %3353 = load ptr, ptr @fun_Core_bool_not, align 8
  call void @free_candy_value(ptr %3353)
  %3354 = load ptr, ptr @fun_Core_bool_is_1_equals_else.78, align 8
  call void @free_candy_value(ptr %3354)
  %3355 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %3355)
  %3356 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.80, align 8
  call void @free_candy_value(ptr %3356)
  %3357 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.82, align 8
  call void @free_candy_value(ptr %3357)
  %3358 = load ptr, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  call void @free_candy_value(ptr %3358)
  %3359 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %3359)
  %3360 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  call void @free_candy_value(ptr %3360)
  %3361 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %3361)
  %3362 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3362)
  %3363 = load ptr, ptr @fun_Core_bool_not_6_equals_else.86, align 8
  call void @free_candy_value(ptr %3363)
  %3364 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %3364)
  %3365 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3365)
  %3366 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  call void @free_candy_value(ptr %3366)
  %3367 = load ptr, ptr @fun_Core_bool_is_1_equals_else.88, align 8
  call void @free_candy_value(ptr %3367)
  %3368 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %3368)
  %3369 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.90, align 8
  call void @free_candy_value(ptr %3369)
  %3370 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.92, align 8
  call void @free_candy_value(ptr %3370)
  %3371 = load ptr, ptr @fun_Core_bool_is_1_equals_else.94, align 8
  call void @free_candy_value(ptr %3371)
  %3372 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %3372)
  %3373 = load ptr, ptr @fun_Core_function_is0_9, align 8
  call void @free_candy_value(ptr %3373)
  %3374 = load ptr, ptr @fun_Core_bool_lazyAnd_16_equals_else, align 8
  call void @free_candy_value(ptr %3374)
  %3375 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %3375)
  %3376 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-0_matched, align 8
  call void @free_candy_value(ptr %3376)
  %3377 = load ptr, ptr @fun_Core_function_is0_9.96, align 8
  call void @free_candy_value(ptr %3377)
  %3378 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3378)
  %3379 = load ptr, ptr @fun_Core_bool_lazyAnd_16_equals_else.98, align 8
  call void @free_candy_value(ptr %3379)
  %3380 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %3380)
  %3381 = load ptr, ptr @fun_Core_bool_and, align 8
  call void @free_candy_value(ptr %3381)
  %3382 = load ptr, ptr @fun_Core_bool_is_1_equals_else.100, align 8
  call void @free_candy_value(ptr %3382)
  %3383 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %3383)
  %3384 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.102, align 8
  call void @free_candy_value(ptr %3384)
  %3385 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.104, align 8
  call void @free_candy_value(ptr %3385)
  %3386 = load ptr, ptr @fun_Core_bool_is_1_equals_else.106, align 8
  call void @free_candy_value(ptr %3386)
  %3387 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %3387)
  %3388 = load ptr, ptr @fun_Core_bool_is_1_equals_else.108, align 8
  call void @free_candy_value(ptr %3388)
  %3389 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %3389)
  %3390 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.110, align 8
  call void @free_candy_value(ptr %3390)
  %3391 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.112, align 8
  call void @free_candy_value(ptr %3391)
  %3392 = load ptr, ptr @fun_Core_bool_is_1_equals_else.114, align 8
  call void @free_candy_value(ptr %3392)
  %3393 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %3393)
  %3394 = load ptr, ptr @fun_Core_bool_and_12, align 8
  call void @free_candy_value(ptr %3394)
  %3395 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3395)
  %3396 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %3396)
  %3397 = load ptr, ptr @fun_Core_bool_is_1_equals_else.116, align 8
  call void @free_candy_value(ptr %3397)
  %3398 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %3398)
  %3399 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.118, align 8
  call void @free_candy_value(ptr %3399)
  %3400 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.120, align 8
  call void @free_candy_value(ptr %3400)
  %3401 = load ptr, ptr @fun_Core_bool_is_1_equals_else.122, align 8
  call void @free_candy_value(ptr %3401)
  %3402 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %3402)
  %3403 = load ptr, ptr @fun_Core_function_is0_9.124, align 8
  call void @free_candy_value(ptr %3403)
  %3404 = load ptr, ptr @fun_Core_bool_lazyOr_16_equals_else, align 8
  call void @free_candy_value(ptr %3404)
  %3405 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %3405)
  %3406 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3406)
  %3407 = load ptr, ptr @fun_Core_bool_lazyOr_16_equals_else.126, align 8
  call void @free_candy_value(ptr %3407)
  %3408 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %3408)
  %3409 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-1_matched, align 8
  call void @free_candy_value(ptr %3409)
  %3410 = load ptr, ptr @fun_Core_function_is0_9.128, align 8
  call void @free_candy_value(ptr %3410)
  %3411 = load ptr, ptr @fun_Core_bool_or, align 8
  call void @free_candy_value(ptr %3411)
  %3412 = load ptr, ptr @fun_Core_bool_is_1_equals_else.130, align 8
  call void @free_candy_value(ptr %3412)
  %3413 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %3413)
  %3414 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.132, align 8
  call void @free_candy_value(ptr %3414)
  %3415 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.134, align 8
  call void @free_candy_value(ptr %3415)
  %3416 = load ptr, ptr @fun_Core_bool_is_1_equals_else.136, align 8
  call void @free_candy_value(ptr %3416)
  %3417 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %3417)
  %3418 = load ptr, ptr @fun_Core_bool_is_1_equals_else.138, align 8
  call void @free_candy_value(ptr %3418)
  %3419 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %3419)
  %3420 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.140, align 8
  call void @free_candy_value(ptr %3420)
  %3421 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.142, align 8
  call void @free_candy_value(ptr %3421)
  %3422 = load ptr, ptr @fun_Core_bool_is_1_equals_else.144, align 8
  call void @free_candy_value(ptr %3422)
  %3423 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %3423)
  %3424 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %3424)
  %3425 = load ptr, ptr @fun_Core_bool_implies, align 8
  call void @free_candy_value(ptr %3425)
  %3426 = load ptr, ptr @fun_Core_bool_is_1_equals_else.146, align 8
  call void @free_candy_value(ptr %3426)
  %3427 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %3427)
  %3428 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.148, align 8
  call void @free_candy_value(ptr %3428)
  %3429 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.150, align 8
  call void @free_candy_value(ptr %3429)
  %3430 = load ptr, ptr @fun_Core_bool_is_1_equals_else.152, align 8
  call void @free_candy_value(ptr %3430)
  %3431 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %3431)
  %3432 = load ptr, ptr @fun_Core_bool_is_1_equals_else.154, align 8
  call void @free_candy_value(ptr %3432)
  %3433 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %3433)
  %3434 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.156, align 8
  call void @free_candy_value(ptr %3434)
  %3435 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.158, align 8
  call void @free_candy_value(ptr %3435)
  %3436 = load ptr, ptr @fun_Core_bool_is_1_equals_else.160, align 8
  call void @free_candy_value(ptr %3436)
  %3437 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %3437)
  %3438 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.162, align 8
  call void @free_candy_value(ptr %3438)
  %3439 = load ptr, ptr @fun_Core_bool_not_6_equals_else.164, align 8
  call void @free_candy_value(ptr %3439)
  %3440 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %3440)
  %3441 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch.166, align 8
  call void @free_candy_value(ptr %3441)
  %3442 = load ptr, ptr @fun_Core_bool_not_6_equals_else.168, align 8
  call void @free_candy_value(ptr %3442)
  %3443 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %3443)
  %3444 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.170", align 8
  call void @free_candy_value(ptr %3444)
  %3445 = load ptr, ptr @fun_Core_check_check, align 8
  call void @free_candy_value(ptr %3445)
  %3446 = load ptr, ptr @fun_Core_check_check_1_equals_else, align 8
  call void @free_candy_value(ptr %3446)
  %3447 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %3447)
  %3448 = load ptr, ptr @fun_Core_check_check_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3448)
  %3449 = load ptr, ptr @fun_Core_check_check_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3449)
  %3450 = load ptr, ptr @fun_Core_check_check_1_equals_else.172, align 8
  call void @free_candy_value(ptr %3450)
  %3451 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %3451)
  %3452 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.174", align 8
  call void @free_candy_value(ptr %3452)
  %3453 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.176", align 8
  call void @free_candy_value(ptr %3453)
  %3454 = load ptr, ptr @fun_Core_check_checkEquals, align 8
  call void @free_candy_value(ptr %3454)
  %3455 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  call void @free_candy_value(ptr %3455)
  %3456 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  call void @free_candy_value(ptr %3456)
  %3457 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  call void @free_candy_value(ptr %3457)
  %3458 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  call void @free_candy_value(ptr %3458)
  %3459 = load ptr, ptr @fun_Core_controlFlow_if, align 8
  call void @free_candy_value(ptr %3459)
  %3460 = load ptr, ptr @fun_Core_bool_is_1_equals_else.178, align 8
  call void @free_candy_value(ptr %3460)
  %3461 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %3461)
  %3462 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.180, align 8
  call void @free_candy_value(ptr %3462)
  %3463 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.182, align 8
  call void @free_candy_value(ptr %3463)
  %3464 = load ptr, ptr @fun_Core_bool_is_1_equals_else.184, align 8
  call void @free_candy_value(ptr %3464)
  %3465 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %3465)
  %3466 = load ptr, ptr @fun_Core_function_is0_9.186, align 8
  call void @free_candy_value(ptr %3466)
  %3467 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.188, align 8
  call void @free_candy_value(ptr %3467)
  %3468 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %3468)
  %3469 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then.190, align 8
  call void @free_candy_value(ptr %3469)
  %3470 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else.192, align 8
  call void @free_candy_value(ptr %3470)
  %3471 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.194, align 8
  call void @free_candy_value(ptr %3471)
  %3472 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %3472)
  %3473 = load ptr, ptr @fun_Core_controlFlow_recursive, align 8
  call void @free_candy_value(ptr %3473)
  %3474 = load ptr, ptr @fun_Core_function_is2_9, align 8
  call void @free_candy_value(ptr %3474)
  %3475 = load ptr, ptr @fun_Core_controlFlow_recursive_16, align 8
  call void @free_candy_value(ptr %3475)
  %3476 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0, align 8
  call void @free_candy_value(ptr %3476)
  %3477 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %3477)
  %3478 = load ptr, ptr @fun_Core_function_is0_9.196, align 8
  call void @free_candy_value(ptr %3478)
  %3479 = load ptr, ptr @fun_Core_int_compareTo, align 8
  call void @free_candy_value(ptr %3479)
  %3480 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  call void @free_candy_value(ptr %3480)
  %3481 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  call void @free_candy_value(ptr %3481)
  %3482 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  call void @free_candy_value(ptr %3482)
  %3483 = load ptr, ptr @fun_Core_int_isEven, align 8
  call void @free_candy_value(ptr %3483)
  %3484 = load ptr, ptr @fun_Core_int_max, align 8
  call void @free_candy_value(ptr %3484)
  %3485 = load ptr, ptr @fun_Core_int_max_15, align 8
  call void @free_candy_value(ptr %3485)
  %3486 = load ptr, ptr @fun_Core_int_max_16, align 8
  call void @free_candy_value(ptr %3486)
  %3487 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  call void @free_candy_value(ptr %3487)
  %3488 = load ptr, ptr @fun_Core_int_pow_21, align 8
  call void @free_candy_value(ptr %3488)
  %3489 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  call void @free_candy_value(ptr %3489)
  %3490 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  call void @free_candy_value(ptr %3490)
  %3491 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %3491)
  %3492 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  call void @free_candy_value(ptr %3492)
  %3493 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %3493)
  %3494 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3494)
  %3495 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.198, align 8
  call void @free_candy_value(ptr %3495)
  %3496 = load ptr, ptr @62, align 8
  call void @free_candy_value(ptr %3496)
  %3497 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.200, align 8
  call void @free_candy_value(ptr %3497)
  %3498 = load ptr, ptr @63, align 8
  call void @free_candy_value(ptr %3498)
  %3499 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.202, align 8
  call void @free_candy_value(ptr %3499)
  %3500 = load ptr, ptr @64, align 8
  call void @free_candy_value(ptr %3500)
  %3501 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3501)
  %3502 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.204, align 8
  call void @free_candy_value(ptr %3502)
  %3503 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  call void @free_candy_value(ptr %3503)
  %3504 = load ptr, ptr @65, align 8
  call void @free_candy_value(ptr %3504)
  %3505 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.206, align 8
  call void @free_candy_value(ptr %3505)
  %3506 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  call void @free_candy_value(ptr %3506)
  %3507 = load ptr, ptr @66, align 8
  call void @free_candy_value(ptr %3507)
  %3508 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3508)
  %3509 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  call void @free_candy_value(ptr %3509)
  %3510 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  call void @free_candy_value(ptr %3510)
  %3511 = load ptr, ptr @67, align 8
  call void @free_candy_value(ptr %3511)
  %3512 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  call void @free_candy_value(ptr %3512)
  %3513 = load ptr, ptr @fun_Core_text_removePrefix, align 8
  call void @free_candy_value(ptr %3513)
  %3514 = load ptr, ptr @fun_Core_text_removePrefix_15, align 8
  call void @free_candy_value(ptr %3514)
  %3515 = load ptr, ptr @fun_Core_text_removePrefix_16, align 8
  call void @free_candy_value(ptr %3515)
  %3516 = load ptr, ptr @fun_Core_fixedDecimal_isScale, align 8
  call void @free_candy_value(ptr %3516)
  %3517 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14, align 8
  call void @free_candy_value(ptr %3517)
  %3518 = load ptr, ptr @fun_Core_fixedDecimal_scaleFactor, align 8
  call void @free_candy_value(ptr %3518)
  %3519 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.208, align 8
  call void @free_candy_value(ptr %3519)
  %3520 = load ptr, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  call void @free_candy_value(ptr %3520)
  %3521 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.210, align 8
  call void @free_candy_value(ptr %3521)
  %3522 = load ptr, ptr @tag_FixedDecimal.211, align 8
  call void @free_candy_value(ptr %3522)
  %3523 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits, align 8
  call void @free_candy_value(ptr %3523)
  %3524 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  call void @free_candy_value(ptr %3524)
  %3525 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.213, align 8
  call void @free_candy_value(ptr %3525)
  %3526 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.215, align 8
  call void @free_candy_value(ptr %3526)
  %3527 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.217, align 8
  call void @free_candy_value(ptr %3527)
  %3528 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  call void @free_candy_value(ptr %3528)
  %3529 = load ptr, ptr @68, align 8
  call void @free_candy_value(ptr %3529)
  %3530 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  call void @free_candy_value(ptr %3530)
  %3531 = load ptr, ptr @69, align 8
  call void @free_candy_value(ptr %3531)
  %3532 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3532)
  %3533 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.219, align 8
  call void @free_candy_value(ptr %3533)
  %3534 = load ptr, ptr @70, align 8
  call void @free_candy_value(ptr %3534)
  %3535 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.221, align 8
  call void @free_candy_value(ptr %3535)
  %3536 = load ptr, ptr @71, align 8
  call void @free_candy_value(ptr %3536)
  %3537 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.223, align 8
  call void @free_candy_value(ptr %3537)
  %3538 = load ptr, ptr @72, align 8
  call void @free_candy_value(ptr %3538)
  %3539 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3539)
  %3540 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.225, align 8
  call void @free_candy_value(ptr %3540)
  %3541 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  call void @free_candy_value(ptr %3541)
  %3542 = load ptr, ptr @73, align 8
  call void @free_candy_value(ptr %3542)
  %3543 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.227, align 8
  call void @free_candy_value(ptr %3543)
  %3544 = load ptr, ptr @74, align 8
  call void @free_candy_value(ptr %3544)
  %3545 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.229, align 8
  call void @free_candy_value(ptr %3545)
  %3546 = load ptr, ptr @75, align 8
  call void @free_candy_value(ptr %3546)
  %3547 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %3547)
  %3548 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14, align 8
  call void @free_candy_value(ptr %3548)
  %3549 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.231, align 8
  call void @free_candy_value(ptr %3549)
  %3550 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.233, align 8
  call void @free_candy_value(ptr %3550)
  %3551 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.235, align 8
  call void @free_candy_value(ptr %3551)
  %3552 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_22, align 8
  call void @free_candy_value(ptr %3552)
  %3553 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.237, align 8
  call void @free_candy_value(ptr %3553)
  %3554 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.239, align 8
  call void @free_candy_value(ptr %3554)
  %3555 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.241, align 8
  call void @free_candy_value(ptr %3555)
  %3556 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.243, align 8
  call void @free_candy_value(ptr %3556)
  %3557 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.245, align 8
  call void @free_candy_value(ptr %3557)
  %3558 = load ptr, ptr @76, align 8
  call void @free_candy_value(ptr %3558)
  %3559 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.247, align 8
  call void @free_candy_value(ptr %3559)
  %3560 = load ptr, ptr @77, align 8
  call void @free_candy_value(ptr %3560)
  %3561 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.249, align 8
  call void @free_candy_value(ptr %3561)
  %3562 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.251, align 8
  call void @free_candy_value(ptr %3562)
  %3563 = load ptr, ptr @78, align 8
  call void @free_candy_value(ptr %3563)
  %3564 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.253, align 8
  call void @free_candy_value(ptr %3564)
  %3565 = load ptr, ptr @79, align 8
  call void @free_candy_value(ptr %3565)
  %3566 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.255, align 8
  call void @free_candy_value(ptr %3566)
  %3567 = load ptr, ptr @80, align 8
  call void @free_candy_value(ptr %3567)
  %3568 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.257, align 8
  call void @free_candy_value(ptr %3568)
  %3569 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.259, align 8
  call void @free_candy_value(ptr %3569)
  %3570 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.261, align 8
  call void @free_candy_value(ptr %3570)
  %3571 = load ptr, ptr @81, align 8
  call void @free_candy_value(ptr %3571)
  %3572 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.263, align 8
  call void @free_candy_value(ptr %3572)
  %3573 = load ptr, ptr @82, align 8
  call void @free_candy_value(ptr %3573)
  %3574 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.265, align 8
  call void @free_candy_value(ptr %3574)
  %3575 = load ptr, ptr @83, align 8
  call void @free_candy_value(ptr %3575)
  %3576 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.267, align 8
  call void @free_candy_value(ptr %3576)
  %3577 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.269, align 8
  call void @free_candy_value(ptr %3577)
  %3578 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.271, align 8
  call void @free_candy_value(ptr %3578)
  %3579 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.273, align 8
  call void @free_candy_value(ptr %3579)
  %3580 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_23, align 8
  call void @free_candy_value(ptr %3580)
  %3581 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.275, align 8
  call void @free_candy_value(ptr %3581)
  %3582 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.277, align 8
  call void @free_candy_value(ptr %3582)
  %3583 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.279, align 8
  call void @free_candy_value(ptr %3583)
  %3584 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.281, align 8
  call void @free_candy_value(ptr %3584)
  %3585 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.283, align 8
  call void @free_candy_value(ptr %3585)
  %3586 = load ptr, ptr @84, align 8
  call void @free_candy_value(ptr %3586)
  %3587 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.285, align 8
  call void @free_candy_value(ptr %3587)
  %3588 = load ptr, ptr @85, align 8
  call void @free_candy_value(ptr %3588)
  %3589 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.287, align 8
  call void @free_candy_value(ptr %3589)
  %3590 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.289, align 8
  call void @free_candy_value(ptr %3590)
  %3591 = load ptr, ptr @86, align 8
  call void @free_candy_value(ptr %3591)
  %3592 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.291, align 8
  call void @free_candy_value(ptr %3592)
  %3593 = load ptr, ptr @87, align 8
  call void @free_candy_value(ptr %3593)
  %3594 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.293, align 8
  call void @free_candy_value(ptr %3594)
  %3595 = load ptr, ptr @88, align 8
  call void @free_candy_value(ptr %3595)
  %3596 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.295, align 8
  call void @free_candy_value(ptr %3596)
  %3597 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.297, align 8
  call void @free_candy_value(ptr %3597)
  %3598 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.299, align 8
  call void @free_candy_value(ptr %3598)
  %3599 = load ptr, ptr @89, align 8
  call void @free_candy_value(ptr %3599)
  %3600 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.301, align 8
  call void @free_candy_value(ptr %3600)
  %3601 = load ptr, ptr @90, align 8
  call void @free_candy_value(ptr %3601)
  %3602 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.303, align 8
  call void @free_candy_value(ptr %3602)
  %3603 = load ptr, ptr @91, align 8
  call void @free_candy_value(ptr %3603)
  %3604 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.305, align 8
  call void @free_candy_value(ptr %3604)
  %3605 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.307, align 8
  call void @free_candy_value(ptr %3605)
  %3606 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.309, align 8
  call void @free_candy_value(ptr %3606)
  %3607 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.311, align 8
  call void @free_candy_value(ptr %3607)
  %3608 = load ptr, ptr @fun_Core_fixedDecimal_add, align 8
  call void @free_candy_value(ptr %3608)
  %3609 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.313, align 8
  call void @free_candy_value(ptr %3609)
  %3610 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.315, align 8
  call void @free_candy_value(ptr %3610)
  %3611 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.317, align 8
  call void @free_candy_value(ptr %3611)
  %3612 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.319, align 8
  call void @free_candy_value(ptr %3612)
  %3613 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.321, align 8
  call void @free_candy_value(ptr %3613)
  %3614 = load ptr, ptr @92, align 8
  call void @free_candy_value(ptr %3614)
  %3615 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.323, align 8
  call void @free_candy_value(ptr %3615)
  %3616 = load ptr, ptr @93, align 8
  call void @free_candy_value(ptr %3616)
  %3617 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.325, align 8
  call void @free_candy_value(ptr %3617)
  %3618 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.327, align 8
  call void @free_candy_value(ptr %3618)
  %3619 = load ptr, ptr @94, align 8
  call void @free_candy_value(ptr %3619)
  %3620 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.329, align 8
  call void @free_candy_value(ptr %3620)
  %3621 = load ptr, ptr @95, align 8
  call void @free_candy_value(ptr %3621)
  %3622 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.331, align 8
  call void @free_candy_value(ptr %3622)
  %3623 = load ptr, ptr @96, align 8
  call void @free_candy_value(ptr %3623)
  %3624 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.333, align 8
  call void @free_candy_value(ptr %3624)
  %3625 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.335, align 8
  call void @free_candy_value(ptr %3625)
  %3626 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.337, align 8
  call void @free_candy_value(ptr %3626)
  %3627 = load ptr, ptr @97, align 8
  call void @free_candy_value(ptr %3627)
  %3628 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.339, align 8
  call void @free_candy_value(ptr %3628)
  %3629 = load ptr, ptr @98, align 8
  call void @free_candy_value(ptr %3629)
  %3630 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.341, align 8
  call void @free_candy_value(ptr %3630)
  %3631 = load ptr, ptr @99, align 8
  call void @free_candy_value(ptr %3631)
  %3632 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.343, align 8
  call void @free_candy_value(ptr %3632)
  %3633 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.345, align 8
  call void @free_candy_value(ptr %3633)
  %3634 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.347, align 8
  call void @free_candy_value(ptr %3634)
  %3635 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.349, align 8
  call void @free_candy_value(ptr %3635)
  %3636 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.351, align 8
  call void @free_candy_value(ptr %3636)
  %3637 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.353, align 8
  call void @free_candy_value(ptr %3637)
  %3638 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.355, align 8
  call void @free_candy_value(ptr %3638)
  %3639 = load ptr, ptr @100, align 8
  call void @free_candy_value(ptr %3639)
  %3640 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.357, align 8
  call void @free_candy_value(ptr %3640)
  %3641 = load ptr, ptr @101, align 8
  call void @free_candy_value(ptr %3641)
  %3642 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.359, align 8
  call void @free_candy_value(ptr %3642)
  %3643 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.361, align 8
  call void @free_candy_value(ptr %3643)
  %3644 = load ptr, ptr @102, align 8
  call void @free_candy_value(ptr %3644)
  %3645 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.363, align 8
  call void @free_candy_value(ptr %3645)
  %3646 = load ptr, ptr @103, align 8
  call void @free_candy_value(ptr %3646)
  %3647 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.365, align 8
  call void @free_candy_value(ptr %3647)
  %3648 = load ptr, ptr @104, align 8
  call void @free_candy_value(ptr %3648)
  %3649 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.367, align 8
  call void @free_candy_value(ptr %3649)
  %3650 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.369, align 8
  call void @free_candy_value(ptr %3650)
  %3651 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.371, align 8
  call void @free_candy_value(ptr %3651)
  %3652 = load ptr, ptr @105, align 8
  call void @free_candy_value(ptr %3652)
  %3653 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.373, align 8
  call void @free_candy_value(ptr %3653)
  %3654 = load ptr, ptr @106, align 8
  call void @free_candy_value(ptr %3654)
  %3655 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.375, align 8
  call void @free_candy_value(ptr %3655)
  %3656 = load ptr, ptr @107, align 8
  call void @free_candy_value(ptr %3656)
  %3657 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.377, align 8
  call void @free_candy_value(ptr %3657)
  %3658 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.379, align 8
  call void @free_candy_value(ptr %3658)
  %3659 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.381, align 8
  call void @free_candy_value(ptr %3659)
  %3660 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.383, align 8
  call void @free_candy_value(ptr %3660)
  %3661 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.385, align 8
  call void @free_candy_value(ptr %3661)
  %3662 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.387, align 8
  call void @free_candy_value(ptr %3662)
  %3663 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.389, align 8
  call void @free_candy_value(ptr %3663)
  %3664 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.391, align 8
  call void @free_candy_value(ptr %3664)
  %3665 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.393, align 8
  call void @free_candy_value(ptr %3665)
  %3666 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.395, align 8
  call void @free_candy_value(ptr %3666)
  %3667 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale, align 8
  call void @free_candy_value(ptr %3667)
  %3668 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.397, align 8
  call void @free_candy_value(ptr %3668)
  %3669 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.399, align 8
  call void @free_candy_value(ptr %3669)
  %3670 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.401, align 8
  call void @free_candy_value(ptr %3670)
  %3671 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.403, align 8
  call void @free_candy_value(ptr %3671)
  %3672 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.405, align 8
  call void @free_candy_value(ptr %3672)
  %3673 = load ptr, ptr @108, align 8
  call void @free_candy_value(ptr %3673)
  %3674 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.407, align 8
  call void @free_candy_value(ptr %3674)
  %3675 = load ptr, ptr @109, align 8
  call void @free_candy_value(ptr %3675)
  %3676 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.409, align 8
  call void @free_candy_value(ptr %3676)
  %3677 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.411, align 8
  call void @free_candy_value(ptr %3677)
  %3678 = load ptr, ptr @110, align 8
  call void @free_candy_value(ptr %3678)
  %3679 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.413, align 8
  call void @free_candy_value(ptr %3679)
  %3680 = load ptr, ptr @111, align 8
  call void @free_candy_value(ptr %3680)
  %3681 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.415, align 8
  call void @free_candy_value(ptr %3681)
  %3682 = load ptr, ptr @112, align 8
  call void @free_candy_value(ptr %3682)
  %3683 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.417, align 8
  call void @free_candy_value(ptr %3683)
  %3684 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.419, align 8
  call void @free_candy_value(ptr %3684)
  %3685 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.421, align 8
  call void @free_candy_value(ptr %3685)
  %3686 = load ptr, ptr @113, align 8
  call void @free_candy_value(ptr %3686)
  %3687 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.423, align 8
  call void @free_candy_value(ptr %3687)
  %3688 = load ptr, ptr @114, align 8
  call void @free_candy_value(ptr %3688)
  %3689 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.425, align 8
  call void @free_candy_value(ptr %3689)
  %3690 = load ptr, ptr @115, align 8
  call void @free_candy_value(ptr %3690)
  %3691 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.427, align 8
  call void @free_candy_value(ptr %3691)
  %3692 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.429, align 8
  call void @free_candy_value(ptr %3692)
  %3693 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.431, align 8
  call void @free_candy_value(ptr %3693)
  %3694 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.433, align 8
  call void @free_candy_value(ptr %3694)
  %3695 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.435, align 8
  call void @free_candy_value(ptr %3695)
  %3696 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.437, align 8
  call void @free_candy_value(ptr %3696)
  %3697 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.439, align 8
  call void @free_candy_value(ptr %3697)
  %3698 = load ptr, ptr @116, align 8
  call void @free_candy_value(ptr %3698)
  %3699 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.441, align 8
  call void @free_candy_value(ptr %3699)
  %3700 = load ptr, ptr @117, align 8
  call void @free_candy_value(ptr %3700)
  %3701 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.443, align 8
  call void @free_candy_value(ptr %3701)
  %3702 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.445, align 8
  call void @free_candy_value(ptr %3702)
  %3703 = load ptr, ptr @118, align 8
  call void @free_candy_value(ptr %3703)
  %3704 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.447, align 8
  call void @free_candy_value(ptr %3704)
  %3705 = load ptr, ptr @119, align 8
  call void @free_candy_value(ptr %3705)
  %3706 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.449, align 8
  call void @free_candy_value(ptr %3706)
  %3707 = load ptr, ptr @120, align 8
  call void @free_candy_value(ptr %3707)
  %3708 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.451, align 8
  call void @free_candy_value(ptr %3708)
  %3709 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.453, align 8
  call void @free_candy_value(ptr %3709)
  %3710 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.455, align 8
  call void @free_candy_value(ptr %3710)
  %3711 = load ptr, ptr @121, align 8
  call void @free_candy_value(ptr %3711)
  %3712 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.457, align 8
  call void @free_candy_value(ptr %3712)
  %3713 = load ptr, ptr @122, align 8
  call void @free_candy_value(ptr %3713)
  %3714 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.459, align 8
  call void @free_candy_value(ptr %3714)
  %3715 = load ptr, ptr @123, align 8
  call void @free_candy_value(ptr %3715)
  %3716 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.461, align 8
  call void @free_candy_value(ptr %3716)
  %3717 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.463, align 8
  call void @free_candy_value(ptr %3717)
  %3718 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.465, align 8
  call void @free_candy_value(ptr %3718)
  %3719 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.467, align 8
  call void @free_candy_value(ptr %3719)
  %3720 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.469, align 8
  call void @free_candy_value(ptr %3720)
  %3721 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.471, align 8
  call void @free_candy_value(ptr %3721)
  %3722 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.473, align 8
  call void @free_candy_value(ptr %3722)
  %3723 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.475, align 8
  call void @free_candy_value(ptr %3723)
  %3724 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.477, align 8
  call void @free_candy_value(ptr %3724)
  %3725 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.479, align 8
  call void @free_candy_value(ptr %3725)
  %3726 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.481, align 8
  call void @free_candy_value(ptr %3726)
  %3727 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.483, align 8
  call void @free_candy_value(ptr %3727)
  %3728 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.485, align 8
  call void @free_candy_value(ptr %3728)
  %3729 = load ptr, ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %3729)
  %3730 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.487, align 8
  call void @free_candy_value(ptr %3730)
  %3731 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.489, align 8
  call void @free_candy_value(ptr %3731)
  %3732 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.491, align 8
  call void @free_candy_value(ptr %3732)
  %3733 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.493, align 8
  call void @free_candy_value(ptr %3733)
  %3734 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.495, align 8
  call void @free_candy_value(ptr %3734)
  %3735 = load ptr, ptr @124, align 8
  call void @free_candy_value(ptr %3735)
  %3736 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.497, align 8
  call void @free_candy_value(ptr %3736)
  %3737 = load ptr, ptr @125, align 8
  call void @free_candy_value(ptr %3737)
  %3738 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.499, align 8
  call void @free_candy_value(ptr %3738)
  %3739 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.501, align 8
  call void @free_candy_value(ptr %3739)
  %3740 = load ptr, ptr @126, align 8
  call void @free_candy_value(ptr %3740)
  %3741 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.503, align 8
  call void @free_candy_value(ptr %3741)
  %3742 = load ptr, ptr @127, align 8
  call void @free_candy_value(ptr %3742)
  %3743 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.505, align 8
  call void @free_candy_value(ptr %3743)
  %3744 = load ptr, ptr @128, align 8
  call void @free_candy_value(ptr %3744)
  %3745 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.507, align 8
  call void @free_candy_value(ptr %3745)
  %3746 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.509, align 8
  call void @free_candy_value(ptr %3746)
  %3747 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.511, align 8
  call void @free_candy_value(ptr %3747)
  %3748 = load ptr, ptr @129, align 8
  call void @free_candy_value(ptr %3748)
  %3749 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.513, align 8
  call void @free_candy_value(ptr %3749)
  %3750 = load ptr, ptr @130, align 8
  call void @free_candy_value(ptr %3750)
  %3751 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.515, align 8
  call void @free_candy_value(ptr %3751)
  %3752 = load ptr, ptr @131, align 8
  call void @free_candy_value(ptr %3752)
  %3753 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.517, align 8
  call void @free_candy_value(ptr %3753)
  %3754 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.519, align 8
  call void @free_candy_value(ptr %3754)
  %3755 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.521, align 8
  call void @free_candy_value(ptr %3755)
  %3756 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.523, align 8
  call void @free_candy_value(ptr %3756)
  %3757 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.525, align 8
  call void @free_candy_value(ptr %3757)
  %3758 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.527, align 8
  call void @free_candy_value(ptr %3758)
  %3759 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.529, align 8
  call void @free_candy_value(ptr %3759)
  %3760 = load ptr, ptr @132, align 8
  call void @free_candy_value(ptr %3760)
  %3761 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.531, align 8
  call void @free_candy_value(ptr %3761)
  %3762 = load ptr, ptr @133, align 8
  call void @free_candy_value(ptr %3762)
  %3763 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.533, align 8
  call void @free_candy_value(ptr %3763)
  %3764 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.535, align 8
  call void @free_candy_value(ptr %3764)
  %3765 = load ptr, ptr @134, align 8
  call void @free_candy_value(ptr %3765)
  %3766 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.537, align 8
  call void @free_candy_value(ptr %3766)
  %3767 = load ptr, ptr @135, align 8
  call void @free_candy_value(ptr %3767)
  %3768 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.539, align 8
  call void @free_candy_value(ptr %3768)
  %3769 = load ptr, ptr @136, align 8
  call void @free_candy_value(ptr %3769)
  %3770 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.541, align 8
  call void @free_candy_value(ptr %3770)
  %3771 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.543, align 8
  call void @free_candy_value(ptr %3771)
  %3772 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.545, align 8
  call void @free_candy_value(ptr %3772)
  %3773 = load ptr, ptr @137, align 8
  call void @free_candy_value(ptr %3773)
  %3774 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.547, align 8
  call void @free_candy_value(ptr %3774)
  %3775 = load ptr, ptr @138, align 8
  call void @free_candy_value(ptr %3775)
  %3776 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.549, align 8
  call void @free_candy_value(ptr %3776)
  %3777 = load ptr, ptr @139, align 8
  call void @free_candy_value(ptr %3777)
  %3778 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.551, align 8
  call void @free_candy_value(ptr %3778)
  %3779 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.553, align 8
  call void @free_candy_value(ptr %3779)
  %3780 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.555, align 8
  call void @free_candy_value(ptr %3780)
  %3781 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.557, align 8
  call void @free_candy_value(ptr %3781)
  %3782 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.559, align 8
  call void @free_candy_value(ptr %3782)
  %3783 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.561, align 8
  call void @free_candy_value(ptr %3783)
  %3784 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.563, align 8
  call void @free_candy_value(ptr %3784)
  %3785 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.565, align 8
  call void @free_candy_value(ptr %3785)
  %3786 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.567, align 8
  call void @free_candy_value(ptr %3786)
  %3787 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.569, align 8
  call void @free_candy_value(ptr %3787)
  %3788 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.571, align 8
  call void @free_candy_value(ptr %3788)
  %3789 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.573, align 8
  call void @free_candy_value(ptr %3789)
  %3790 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.575, align 8
  call void @free_candy_value(ptr %3790)
  %3791 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.577, align 8
  call void @free_candy_value(ptr %3791)
  %3792 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.579, align 8
  call void @free_candy_value(ptr %3792)
  %3793 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.581, align 8
  call void @free_candy_value(ptr %3793)
  %3794 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.583, align 8
  call void @free_candy_value(ptr %3794)
  %3795 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.585, align 8
  call void @free_candy_value(ptr %3795)
  %3796 = load ptr, ptr @fun_Core_fixedDecimal_absolute, align 8
  call void @free_candy_value(ptr %3796)
  %3797 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.587, align 8
  call void @free_candy_value(ptr %3797)
  %3798 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.589, align 8
  call void @free_candy_value(ptr %3798)
  %3799 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.591, align 8
  call void @free_candy_value(ptr %3799)
  %3800 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.593, align 8
  call void @free_candy_value(ptr %3800)
  %3801 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.595, align 8
  call void @free_candy_value(ptr %3801)
  %3802 = load ptr, ptr @140, align 8
  call void @free_candy_value(ptr %3802)
  %3803 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.597, align 8
  call void @free_candy_value(ptr %3803)
  %3804 = load ptr, ptr @141, align 8
  call void @free_candy_value(ptr %3804)
  %3805 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.599, align 8
  call void @free_candy_value(ptr %3805)
  %3806 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.601, align 8
  call void @free_candy_value(ptr %3806)
  %3807 = load ptr, ptr @142, align 8
  call void @free_candy_value(ptr %3807)
  %3808 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.603, align 8
  call void @free_candy_value(ptr %3808)
  %3809 = load ptr, ptr @143, align 8
  call void @free_candy_value(ptr %3809)
  %3810 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.605, align 8
  call void @free_candy_value(ptr %3810)
  %3811 = load ptr, ptr @144, align 8
  call void @free_candy_value(ptr %3811)
  %3812 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.607, align 8
  call void @free_candy_value(ptr %3812)
  %3813 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.609, align 8
  call void @free_candy_value(ptr %3813)
  %3814 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.611, align 8
  call void @free_candy_value(ptr %3814)
  %3815 = load ptr, ptr @145, align 8
  call void @free_candy_value(ptr %3815)
  %3816 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.613, align 8
  call void @free_candy_value(ptr %3816)
  %3817 = load ptr, ptr @146, align 8
  call void @free_candy_value(ptr %3817)
  %3818 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.615, align 8
  call void @free_candy_value(ptr %3818)
  %3819 = load ptr, ptr @147, align 8
  call void @free_candy_value(ptr %3819)
  %3820 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.617, align 8
  call void @free_candy_value(ptr %3820)
  %3821 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.619, align 8
  call void @free_candy_value(ptr %3821)
  %3822 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.621, align 8
  call void @free_candy_value(ptr %3822)
  %3823 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.623, align 8
  call void @free_candy_value(ptr %3823)
  %3824 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.625, align 8
  call void @free_candy_value(ptr %3824)
  %3825 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.627, align 8
  call void @free_candy_value(ptr %3825)
  %3826 = load ptr, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  call void @free_candy_value(ptr %3826)
  %3827 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.629, align 8
  call void @free_candy_value(ptr %3827)
  %3828 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.631, align 8
  call void @free_candy_value(ptr %3828)
  %3829 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.633, align 8
  call void @free_candy_value(ptr %3829)
  %3830 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.635, align 8
  call void @free_candy_value(ptr %3830)
  %3831 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.637, align 8
  call void @free_candy_value(ptr %3831)
  %3832 = load ptr, ptr @148, align 8
  call void @free_candy_value(ptr %3832)
  %3833 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.639, align 8
  call void @free_candy_value(ptr %3833)
  %3834 = load ptr, ptr @149, align 8
  call void @free_candy_value(ptr %3834)
  %3835 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.641, align 8
  call void @free_candy_value(ptr %3835)
  %3836 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.643, align 8
  call void @free_candy_value(ptr %3836)
  %3837 = load ptr, ptr @150, align 8
  call void @free_candy_value(ptr %3837)
  %3838 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.645, align 8
  call void @free_candy_value(ptr %3838)
  %3839 = load ptr, ptr @151, align 8
  call void @free_candy_value(ptr %3839)
  %3840 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.647, align 8
  call void @free_candy_value(ptr %3840)
  %3841 = load ptr, ptr @152, align 8
  call void @free_candy_value(ptr %3841)
  %3842 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.649, align 8
  call void @free_candy_value(ptr %3842)
  %3843 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.651, align 8
  call void @free_candy_value(ptr %3843)
  %3844 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.653, align 8
  call void @free_candy_value(ptr %3844)
  %3845 = load ptr, ptr @153, align 8
  call void @free_candy_value(ptr %3845)
  %3846 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.655, align 8
  call void @free_candy_value(ptr %3846)
  %3847 = load ptr, ptr @154, align 8
  call void @free_candy_value(ptr %3847)
  %3848 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.657, align 8
  call void @free_candy_value(ptr %3848)
  %3849 = load ptr, ptr @155, align 8
  call void @free_candy_value(ptr %3849)
  %3850 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.659, align 8
  call void @free_candy_value(ptr %3850)
  %3851 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.661, align 8
  call void @free_candy_value(ptr %3851)
  %3852 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.663, align 8
  call void @free_candy_value(ptr %3852)
  %3853 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.665, align 8
  call void @free_candy_value(ptr %3853)
  %3854 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.667, align 8
  call void @free_candy_value(ptr %3854)
  %3855 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.669, align 8
  call void @free_candy_value(ptr %3855)
  %3856 = load ptr, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  call void @free_candy_value(ptr %3856)
  %3857 = load ptr, ptr @fun_Core_fixedDecimal_approxEquals, align 8
  call void @free_candy_value(ptr %3857)
  %3858 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.671, align 8
  call void @free_candy_value(ptr %3858)
  %3859 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.673, align 8
  call void @free_candy_value(ptr %3859)
  %3860 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.675, align 8
  call void @free_candy_value(ptr %3860)
  %3861 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.677, align 8
  call void @free_candy_value(ptr %3861)
  %3862 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.679, align 8
  call void @free_candy_value(ptr %3862)
  %3863 = load ptr, ptr @156, align 8
  call void @free_candy_value(ptr %3863)
  %3864 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.681, align 8
  call void @free_candy_value(ptr %3864)
  %3865 = load ptr, ptr @157, align 8
  call void @free_candy_value(ptr %3865)
  %3866 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.683, align 8
  call void @free_candy_value(ptr %3866)
  %3867 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.685, align 8
  call void @free_candy_value(ptr %3867)
  %3868 = load ptr, ptr @158, align 8
  call void @free_candy_value(ptr %3868)
  %3869 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.687, align 8
  call void @free_candy_value(ptr %3869)
  %3870 = load ptr, ptr @159, align 8
  call void @free_candy_value(ptr %3870)
  %3871 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.689, align 8
  call void @free_candy_value(ptr %3871)
  %3872 = load ptr, ptr @160, align 8
  call void @free_candy_value(ptr %3872)
  %3873 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.691, align 8
  call void @free_candy_value(ptr %3873)
  %3874 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.693, align 8
  call void @free_candy_value(ptr %3874)
  %3875 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.695, align 8
  call void @free_candy_value(ptr %3875)
  %3876 = load ptr, ptr @161, align 8
  call void @free_candy_value(ptr %3876)
  %3877 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.697, align 8
  call void @free_candy_value(ptr %3877)
  %3878 = load ptr, ptr @162, align 8
  call void @free_candy_value(ptr %3878)
  %3879 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.699, align 8
  call void @free_candy_value(ptr %3879)
  %3880 = load ptr, ptr @163, align 8
  call void @free_candy_value(ptr %3880)
  %3881 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.701, align 8
  call void @free_candy_value(ptr %3881)
  %3882 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.703, align 8
  call void @free_candy_value(ptr %3882)
  %3883 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.705, align 8
  call void @free_candy_value(ptr %3883)
  %3884 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.707, align 8
  call void @free_candy_value(ptr %3884)
  %3885 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.709, align 8
  call void @free_candy_value(ptr %3885)
  %3886 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.711, align 8
  call void @free_candy_value(ptr %3886)
  %3887 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.713, align 8
  call void @free_candy_value(ptr %3887)
  %3888 = load ptr, ptr @164, align 8
  call void @free_candy_value(ptr %3888)
  %3889 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.715, align 8
  call void @free_candy_value(ptr %3889)
  %3890 = load ptr, ptr @165, align 8
  call void @free_candy_value(ptr %3890)
  %3891 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.717, align 8
  call void @free_candy_value(ptr %3891)
  %3892 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.719, align 8
  call void @free_candy_value(ptr %3892)
  %3893 = load ptr, ptr @166, align 8
  call void @free_candy_value(ptr %3893)
  %3894 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.721, align 8
  call void @free_candy_value(ptr %3894)
  %3895 = load ptr, ptr @167, align 8
  call void @free_candy_value(ptr %3895)
  %3896 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.723, align 8
  call void @free_candy_value(ptr %3896)
  %3897 = load ptr, ptr @168, align 8
  call void @free_candy_value(ptr %3897)
  %3898 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.725, align 8
  call void @free_candy_value(ptr %3898)
  %3899 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.727, align 8
  call void @free_candy_value(ptr %3899)
  %3900 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.729, align 8
  call void @free_candy_value(ptr %3900)
  %3901 = load ptr, ptr @169, align 8
  call void @free_candy_value(ptr %3901)
  %3902 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.731, align 8
  call void @free_candy_value(ptr %3902)
  %3903 = load ptr, ptr @170, align 8
  call void @free_candy_value(ptr %3903)
  %3904 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.733, align 8
  call void @free_candy_value(ptr %3904)
  %3905 = load ptr, ptr @171, align 8
  call void @free_candy_value(ptr %3905)
  %3906 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.735, align 8
  call void @free_candy_value(ptr %3906)
  %3907 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.737, align 8
  call void @free_candy_value(ptr %3907)
  %3908 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.739, align 8
  call void @free_candy_value(ptr %3908)
  %3909 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.741, align 8
  call void @free_candy_value(ptr %3909)
  %3910 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.743, align 8
  call void @free_candy_value(ptr %3910)
  %3911 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.745, align 8
  call void @free_candy_value(ptr %3911)
  %3912 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.747, align 8
  call void @free_candy_value(ptr %3912)
  %3913 = load ptr, ptr @172, align 8
  call void @free_candy_value(ptr %3913)
  %3914 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.749, align 8
  call void @free_candy_value(ptr %3914)
  %3915 = load ptr, ptr @173, align 8
  call void @free_candy_value(ptr %3915)
  %3916 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.751, align 8
  call void @free_candy_value(ptr %3916)
  %3917 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.753, align 8
  call void @free_candy_value(ptr %3917)
  %3918 = load ptr, ptr @174, align 8
  call void @free_candy_value(ptr %3918)
  %3919 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.755, align 8
  call void @free_candy_value(ptr %3919)
  %3920 = load ptr, ptr @175, align 8
  call void @free_candy_value(ptr %3920)
  %3921 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.757, align 8
  call void @free_candy_value(ptr %3921)
  %3922 = load ptr, ptr @176, align 8
  call void @free_candy_value(ptr %3922)
  %3923 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.759, align 8
  call void @free_candy_value(ptr %3923)
  %3924 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.761, align 8
  call void @free_candy_value(ptr %3924)
  %3925 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.763, align 8
  call void @free_candy_value(ptr %3925)
  %3926 = load ptr, ptr @177, align 8
  call void @free_candy_value(ptr %3926)
  %3927 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.765, align 8
  call void @free_candy_value(ptr %3927)
  %3928 = load ptr, ptr @178, align 8
  call void @free_candy_value(ptr %3928)
  %3929 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.767, align 8
  call void @free_candy_value(ptr %3929)
  %3930 = load ptr, ptr @179, align 8
  call void @free_candy_value(ptr %3930)
  %3931 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.769, align 8
  call void @free_candy_value(ptr %3931)
  %3932 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.771, align 8
  call void @free_candy_value(ptr %3932)
  %3933 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.773, align 8
  call void @free_candy_value(ptr %3933)
  %3934 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.775, align 8
  call void @free_candy_value(ptr %3934)
  %3935 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.777, align 8
  call void @free_candy_value(ptr %3935)
  %3936 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.779, align 8
  call void @free_candy_value(ptr %3936)
  %3937 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.781, align 8
  call void @free_candy_value(ptr %3937)
  %3938 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.783, align 8
  call void @free_candy_value(ptr %3938)
  %3939 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.785, align 8
  call void @free_candy_value(ptr %3939)
  %3940 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.787, align 8
  call void @free_candy_value(ptr %3940)
  %3941 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.789, align 8
  call void @free_candy_value(ptr %3941)
  %3942 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.791, align 8
  call void @free_candy_value(ptr %3942)
  %3943 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.793, align 8
  call void @free_candy_value(ptr %3943)
  %3944 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.795, align 8
  call void @free_candy_value(ptr %3944)
  %3945 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.797, align 8
  call void @free_candy_value(ptr %3945)
  %3946 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.799, align 8
  call void @free_candy_value(ptr %3946)
  %3947 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.801, align 8
  call void @free_candy_value(ptr %3947)
  %3948 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.803, align 8
  call void @free_candy_value(ptr %3948)
  %3949 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.805, align 8
  call void @free_candy_value(ptr %3949)
  %3950 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.807, align 8
  call void @free_candy_value(ptr %3950)
  %3951 = load ptr, ptr @fun_Core_fixedDecimal_toText, align 8
  call void @free_candy_value(ptr %3951)
  %3952 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.809, align 8
  call void @free_candy_value(ptr %3952)
  %3953 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.811, align 8
  call void @free_candy_value(ptr %3953)
  %3954 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.813, align 8
  call void @free_candy_value(ptr %3954)
  %3955 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.815, align 8
  call void @free_candy_value(ptr %3955)
  %3956 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.817, align 8
  call void @free_candy_value(ptr %3956)
  %3957 = load ptr, ptr @180, align 8
  call void @free_candy_value(ptr %3957)
  %3958 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.819, align 8
  call void @free_candy_value(ptr %3958)
  %3959 = load ptr, ptr @181, align 8
  call void @free_candy_value(ptr %3959)
  %3960 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.821, align 8
  call void @free_candy_value(ptr %3960)
  %3961 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.823, align 8
  call void @free_candy_value(ptr %3961)
  %3962 = load ptr, ptr @182, align 8
  call void @free_candy_value(ptr %3962)
  %3963 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.825, align 8
  call void @free_candy_value(ptr %3963)
  %3964 = load ptr, ptr @183, align 8
  call void @free_candy_value(ptr %3964)
  %3965 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.827, align 8
  call void @free_candy_value(ptr %3965)
  %3966 = load ptr, ptr @184, align 8
  call void @free_candy_value(ptr %3966)
  %3967 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.829, align 8
  call void @free_candy_value(ptr %3967)
  %3968 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.831, align 8
  call void @free_candy_value(ptr %3968)
  %3969 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.833, align 8
  call void @free_candy_value(ptr %3969)
  %3970 = load ptr, ptr @185, align 8
  call void @free_candy_value(ptr %3970)
  %3971 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.835, align 8
  call void @free_candy_value(ptr %3971)
  %3972 = load ptr, ptr @186, align 8
  call void @free_candy_value(ptr %3972)
  %3973 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.837, align 8
  call void @free_candy_value(ptr %3973)
  %3974 = load ptr, ptr @187, align 8
  call void @free_candy_value(ptr %3974)
  %3975 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.839, align 8
  call void @free_candy_value(ptr %3975)
  %3976 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.841, align 8
  call void @free_candy_value(ptr %3976)
  %3977 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.843, align 8
  call void @free_candy_value(ptr %3977)
  %3978 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.845, align 8
  call void @free_candy_value(ptr %3978)
  %3979 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.847, align 8
  call void @free_candy_value(ptr %3979)
  %3980 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.849, align 8
  call void @free_candy_value(ptr %3980)
  %3981 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.851, align 8
  call void @free_candy_value(ptr %3981)
  %3982 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.853, align 8
  call void @free_candy_value(ptr %3982)
  %3983 = load ptr, ptr @fun_Core_fixedDecimal_toText_10, align 8
  call void @free_candy_value(ptr %3983)
  %3984 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.855, align 8
  call void @free_candy_value(ptr %3984)
  %3985 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.857, align 8
  call void @free_candy_value(ptr %3985)
  %3986 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.859, align 8
  call void @free_candy_value(ptr %3986)
  %3987 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.861, align 8
  call void @free_candy_value(ptr %3987)
  %3988 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.863, align 8
  call void @free_candy_value(ptr %3988)
  %3989 = load ptr, ptr @188, align 8
  call void @free_candy_value(ptr %3989)
  %3990 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.865, align 8
  call void @free_candy_value(ptr %3990)
  %3991 = load ptr, ptr @189, align 8
  call void @free_candy_value(ptr %3991)
  %3992 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.867, align 8
  call void @free_candy_value(ptr %3992)
  %3993 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.869, align 8
  call void @free_candy_value(ptr %3993)
  %3994 = load ptr, ptr @190, align 8
  call void @free_candy_value(ptr %3994)
  %3995 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.871, align 8
  call void @free_candy_value(ptr %3995)
  %3996 = load ptr, ptr @191, align 8
  call void @free_candy_value(ptr %3996)
  %3997 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.873, align 8
  call void @free_candy_value(ptr %3997)
  %3998 = load ptr, ptr @192, align 8
  call void @free_candy_value(ptr %3998)
  %3999 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.875, align 8
  call void @free_candy_value(ptr %3999)
  %4000 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.877, align 8
  call void @free_candy_value(ptr %4000)
  %4001 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.879, align 8
  call void @free_candy_value(ptr %4001)
  %4002 = load ptr, ptr @193, align 8
  call void @free_candy_value(ptr %4002)
  %4003 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.881, align 8
  call void @free_candy_value(ptr %4003)
  %4004 = load ptr, ptr @194, align 8
  call void @free_candy_value(ptr %4004)
  %4005 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.883, align 8
  call void @free_candy_value(ptr %4005)
  %4006 = load ptr, ptr @195, align 8
  call void @free_candy_value(ptr %4006)
  %4007 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.885, align 8
  call void @free_candy_value(ptr %4007)
  %4008 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.887, align 8
  call void @free_candy_value(ptr %4008)
  %4009 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.889, align 8
  call void @free_candy_value(ptr %4009)
  %4010 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.891, align 8
  call void @free_candy_value(ptr %4010)
  %4011 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_27, align 8
  call void @free_candy_value(ptr %4011)
  %4012 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_28, align 8
  call void @free_candy_value(ptr %4012)
  %4013 = load ptr, ptr @fun_Core_fixedDecimal_toText_22, align 8
  call void @free_candy_value(ptr %4013)
  %4014 = load ptr, ptr @fun_Core_fixedDecimal_toText_23, align 8
  call void @free_candy_value(ptr %4014)
  %4015 = load ptr, ptr @fun_Core_fixedDecimal_toText_29, align 8
  call void @free_candy_value(ptr %4015)
  %4016 = load ptr, ptr @fun_Core_fixedDecimal_toText_30, align 8
  call void @free_candy_value(ptr %4016)
  %4017 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %4017)
  %4018 = load ptr, ptr @fun_Core_function_is0_9.893, align 8
  call void @free_candy_value(ptr %4018)
  %4019 = load ptr, ptr @fun_Core_int_isPositive, align 8
  call void @free_candy_value(ptr %4019)
  %4020 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4020)
  %4021 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %4021)
  %4022 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %4022)
  %4023 = load ptr, ptr @fun_Core_result_is_1_equals_then.895, align 8
  call void @free_candy_value(ptr %4023)
  %4024 = load ptr, ptr @fun_Core_result_is_1_equals_then.897, align 8
  call void @free_candy_value(ptr %4024)
  %4025 = load ptr, ptr @196, align 8
  call void @free_candy_value(ptr %4025)
  %4026 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %4026)
  %4027 = load ptr, ptr @197, align 8
  call void @free_candy_value(ptr %4027)
  %4028 = load ptr, ptr @fun_Core_result_is_1_equals_else.899, align 8
  call void @free_candy_value(ptr %4028)
  %4029 = load ptr, ptr @198, align 8
  call void @free_candy_value(ptr %4029)
  %4030 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %4030)
  %4031 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %4031)
  %4032 = load ptr, ptr @fun_Core_result_is_1_equals_then.901, align 8
  call void @free_candy_value(ptr %4032)
  %4033 = load ptr, ptr @fun_Core_result_is_1_equals_then.903, align 8
  call void @free_candy_value(ptr %4033)
  %4034 = load ptr, ptr @fun_Core_result_is_1_equals_then.905, align 8
  call void @free_candy_value(ptr %4034)
  %4035 = load ptr, ptr @199, align 8
  call void @free_candy_value(ptr %4035)
  %4036 = load ptr, ptr @fun_Core_result_is_1_equals_else.907, align 8
  call void @free_candy_value(ptr %4036)
  %4037 = load ptr, ptr @200, align 8
  call void @free_candy_value(ptr %4037)
  %4038 = load ptr, ptr @fun_Core_result_is_1_equals_else.909, align 8
  call void @free_candy_value(ptr %4038)
  %4039 = load ptr, ptr @201, align 8
  call void @free_candy_value(ptr %4039)
  %4040 = load ptr, ptr @fun_Core_function_is1_9, align 8
  call void @free_candy_value(ptr %4040)
  %4041 = load ptr, ptr @fun_Core_function_is1_9.911, align 8
  call void @free_candy_value(ptr %4041)
  %4042 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then, align 8
  call void @free_candy_value(ptr %4042)
  %4043 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.913, align 8
  call void @free_candy_value(ptr %4043)
  %4044 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.915, align 8
  call void @free_candy_value(ptr %4044)
  %4045 = load ptr, ptr @202, align 8
  call void @free_candy_value(ptr %4045)
  %4046 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else, align 8
  call void @free_candy_value(ptr %4046)
  %4047 = load ptr, ptr @203, align 8
  call void @free_candy_value(ptr %4047)
  %4048 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.917, align 8
  call void @free_candy_value(ptr %4048)
  %4049 = load ptr, ptr @204, align 8
  call void @free_candy_value(ptr %4049)
  %4050 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-0_matched, align 8
  call void @free_candy_value(ptr %4050)
  %4051 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4051)
  %4052 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.919, align 8
  call void @free_candy_value(ptr %4052)
  %4053 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.921, align 8
  call void @free_candy_value(ptr %4053)
  %4054 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.923, align 8
  call void @free_candy_value(ptr %4054)
  %4055 = load ptr, ptr @205, align 8
  call void @free_candy_value(ptr %4055)
  %4056 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.925, align 8
  call void @free_candy_value(ptr %4056)
  %4057 = load ptr, ptr @206, align 8
  call void @free_candy_value(ptr %4057)
  %4058 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.927, align 8
  call void @free_candy_value(ptr %4058)
  %4059 = load ptr, ptr @207, align 8
  call void @free_candy_value(ptr %4059)
  %4060 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-1_matched, align 8
  call void @free_candy_value(ptr %4060)
  %4061 = load ptr, ptr @fun_Core_result_unwrapOrElse_17, align 8
  call void @free_candy_value(ptr %4061)
  %4062 = load ptr, ptr @fun_Core_result_unwrapOrElse, align 8
  call void @free_candy_value(ptr %4062)
  %4063 = load ptr, ptr @fun_Core_result_is_1_equals_then.929, align 8
  call void @free_candy_value(ptr %4063)
  %4064 = load ptr, ptr @fun_Core_result_is_1_equals_then.931, align 8
  call void @free_candy_value(ptr %4064)
  %4065 = load ptr, ptr @fun_Core_result_is_1_equals_then.933, align 8
  call void @free_candy_value(ptr %4065)
  %4066 = load ptr, ptr @208, align 8
  call void @free_candy_value(ptr %4066)
  %4067 = load ptr, ptr @fun_Core_result_is_1_equals_else.935, align 8
  call void @free_candy_value(ptr %4067)
  %4068 = load ptr, ptr @209, align 8
  call void @free_candy_value(ptr %4068)
  %4069 = load ptr, ptr @fun_Core_result_is_1_equals_else.937, align 8
  call void @free_candy_value(ptr %4069)
  %4070 = load ptr, ptr @210, align 8
  call void @free_candy_value(ptr %4070)
  %4071 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.939, align 8
  call void @free_candy_value(ptr %4071)
  %4072 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.941, align 8
  call void @free_candy_value(ptr %4072)
  %4073 = load ptr, ptr @fun_Core_result_is_1_equals_then.943, align 8
  call void @free_candy_value(ptr %4073)
  %4074 = load ptr, ptr @fun_Core_result_is_1_equals_then.945, align 8
  call void @free_candy_value(ptr %4074)
  %4075 = load ptr, ptr @fun_Core_result_is_1_equals_then.947, align 8
  call void @free_candy_value(ptr %4075)
  %4076 = load ptr, ptr @211, align 8
  call void @free_candy_value(ptr %4076)
  %4077 = load ptr, ptr @fun_Core_result_is_1_equals_else.949, align 8
  call void @free_candy_value(ptr %4077)
  %4078 = load ptr, ptr @212, align 8
  call void @free_candy_value(ptr %4078)
  %4079 = load ptr, ptr @fun_Core_result_is_1_equals_else.951, align 8
  call void @free_candy_value(ptr %4079)
  %4080 = load ptr, ptr @213, align 8
  call void @free_candy_value(ptr %4080)
  %4081 = load ptr, ptr @fun_Core_function_is0_9.953, align 8
  call void @free_candy_value(ptr %4081)
  %4082 = load ptr, ptr @fun_Core_result_unwrapOrElse_18, align 8
  call void @free_candy_value(ptr %4082)
  %4083 = load ptr, ptr @fun_Core_function_is0_9.955, align 8
  call void @free_candy_value(ptr %4083)
  %4084 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  call void @free_candy_value(ptr %4084)
  %4085 = load ptr, ptr @fun_Core_result_is_1_equals_then.957, align 8
  call void @free_candy_value(ptr %4085)
  %4086 = load ptr, ptr @fun_Core_result_is_1_equals_then.959, align 8
  call void @free_candy_value(ptr %4086)
  %4087 = load ptr, ptr @fun_Core_result_is_1_equals_then.961, align 8
  call void @free_candy_value(ptr %4087)
  %4088 = load ptr, ptr @214, align 8
  call void @free_candy_value(ptr %4088)
  %4089 = load ptr, ptr @fun_Core_result_is_1_equals_else.963, align 8
  call void @free_candy_value(ptr %4089)
  %4090 = load ptr, ptr @215, align 8
  call void @free_candy_value(ptr %4090)
  %4091 = load ptr, ptr @fun_Core_result_is_1_equals_else.965, align 8
  call void @free_candy_value(ptr %4091)
  %4092 = load ptr, ptr @216, align 8
  call void @free_candy_value(ptr %4092)
  %4093 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.967, align 8
  call void @free_candy_value(ptr %4093)
  %4094 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.969, align 8
  call void @free_candy_value(ptr %4094)
  %4095 = load ptr, ptr @fun_Core_result_is_1_equals_then.971, align 8
  call void @free_candy_value(ptr %4095)
  %4096 = load ptr, ptr @fun_Core_result_is_1_equals_then.973, align 8
  call void @free_candy_value(ptr %4096)
  %4097 = load ptr, ptr @fun_Core_result_is_1_equals_then.975, align 8
  call void @free_candy_value(ptr %4097)
  %4098 = load ptr, ptr @217, align 8
  call void @free_candy_value(ptr %4098)
  %4099 = load ptr, ptr @fun_Core_result_is_1_equals_else.977, align 8
  call void @free_candy_value(ptr %4099)
  %4100 = load ptr, ptr @218, align 8
  call void @free_candy_value(ptr %4100)
  %4101 = load ptr, ptr @fun_Core_result_is_1_equals_else.979, align 8
  call void @free_candy_value(ptr %4101)
  %4102 = load ptr, ptr @219, align 8
  call void @free_candy_value(ptr %4102)
  %4103 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  call void @free_candy_value(ptr %4103)
  %4104 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  call void @free_candy_value(ptr %4104)
  %4105 = load ptr, ptr @fun_Core_iterator_wrapSafe, align 8
  call void @free_candy_value(ptr %4105)
  %4106 = load ptr, ptr @fun_Core_function_is0_9.981, align 8
  call void @free_candy_value(ptr %4106)
  %4107 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  call void @free_candy_value(ptr %4107)
  %4108 = load ptr, ptr @fun_Core_function_is0_9.983, align 8
  call void @free_candy_value(ptr %4108)
  %4109 = load ptr, ptr @fun_Core_iterator_wrapSafe_14, align 8
  call void @free_candy_value(ptr %4109)
  %4110 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then, align 8
  call void @free_candy_value(ptr %4110)
  %4111 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.985, align 8
  call void @free_candy_value(ptr %4111)
  %4112 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.987, align 8
  call void @free_candy_value(ptr %4112)
  %4113 = load ptr, ptr @220, align 8
  call void @free_candy_value(ptr %4113)
  %4114 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else, align 8
  call void @free_candy_value(ptr %4114)
  %4115 = load ptr, ptr @221, align 8
  call void @free_candy_value(ptr %4115)
  %4116 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.989, align 8
  call void @free_candy_value(ptr %4116)
  %4117 = load ptr, ptr @222, align 8
  call void @free_candy_value(ptr %4117)
  %4118 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched, align 8
  call void @free_candy_value(ptr %4118)
  %4119 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4119)
  %4120 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22, align 8
  call void @free_candy_value(ptr %4120)
  %4121 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else, align 8
  call void @free_candy_value(ptr %4121)
  %4122 = load ptr, ptr @223, align 8
  call void @free_candy_value(ptr %4122)
  %4123 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4123)
  %4124 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then, align 8
  call void @free_candy_value(ptr %4124)
  %4125 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.991, align 8
  call void @free_candy_value(ptr %4125)
  %4126 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.993, align 8
  call void @free_candy_value(ptr %4126)
  %4127 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.995, align 8
  call void @free_candy_value(ptr %4127)
  %4128 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then, align 8
  call void @free_candy_value(ptr %4128)
  %4129 = load ptr, ptr @224, align 8
  call void @free_candy_value(ptr %4129)
  %4130 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else, align 8
  call void @free_candy_value(ptr %4130)
  %4131 = load ptr, ptr @225, align 8
  call void @free_candy_value(ptr %4131)
  %4132 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then, align 8
  call void @free_candy_value(ptr %4132)
  %4133 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.997, align 8
  call void @free_candy_value(ptr %4133)
  %4134 = load ptr, ptr @226, align 8
  call void @free_candy_value(ptr %4134)
  %4135 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.999, align 8
  call void @free_candy_value(ptr %4135)
  %4136 = load ptr, ptr @227, align 8
  call void @free_candy_value(ptr %4136)
  %4137 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1001, align 8
  call void @free_candy_value(ptr %4137)
  %4138 = load ptr, ptr @228, align 8
  call void @free_candy_value(ptr %4138)
  %4139 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else, align 8
  call void @free_candy_value(ptr %4139)
  %4140 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1003, align 8
  call void @free_candy_value(ptr %4140)
  %4141 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1005, align 8
  call void @free_candy_value(ptr %4141)
  %4142 = load ptr, ptr @229, align 8
  call void @free_candy_value(ptr %4142)
  %4143 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1007, align 8
  call void @free_candy_value(ptr %4143)
  %4144 = load ptr, ptr @230, align 8
  call void @free_candy_value(ptr %4144)
  %4145 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1009, align 8
  call void @free_candy_value(ptr %4145)
  %4146 = load ptr, ptr @231, align 8
  call void @free_candy_value(ptr %4146)
  %4147 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched, align 8
  call void @free_candy_value(ptr %4147)
  %4148 = load ptr, ptr @tag_More.1010, align 8
  call void @free_candy_value(ptr %4148)
  %4149 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4149)
  %4150 = load ptr, ptr @tag_Iterator.1011, align 8
  call void @free_candy_value(ptr %4150)
  %4151 = load ptr, ptr @fun_Core_iterator_next, align 8
  call void @free_candy_value(ptr %4151)
  %4152 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  call void @free_candy_value(ptr %4152)
  %4153 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  call void @free_candy_value(ptr %4153)
  %4154 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1013, align 8
  call void @free_candy_value(ptr %4154)
  %4155 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1015, align 8
  call void @free_candy_value(ptr %4155)
  %4156 = load ptr, ptr @232, align 8
  call void @free_candy_value(ptr %4156)
  %4157 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  call void @free_candy_value(ptr %4157)
  %4158 = load ptr, ptr @233, align 8
  call void @free_candy_value(ptr %4158)
  %4159 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1017, align 8
  call void @free_candy_value(ptr %4159)
  %4160 = load ptr, ptr @234, align 8
  call void @free_candy_value(ptr %4160)
  %4161 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  call void @free_candy_value(ptr %4161)
  %4162 = load ptr, ptr @fun_Core_iterator_generateWithState, align 8
  call void @free_candy_value(ptr %4162)
  %4163 = load ptr, ptr @fun_Core_function_is1_9.1019, align 8
  call void @free_candy_value(ptr %4163)
  %4164 = load ptr, ptr @fun_Core_iterator_generateWithState_12, align 8
  call void @free_candy_value(ptr %4164)
  %4165 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1, align 8
  call void @free_candy_value(ptr %4165)
  %4166 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then, align 8
  call void @free_candy_value(ptr %4166)
  %4167 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1021, align 8
  call void @free_candy_value(ptr %4167)
  %4168 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1023, align 8
  call void @free_candy_value(ptr %4168)
  %4169 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1025, align 8
  call void @free_candy_value(ptr %4169)
  %4170 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then, align 8
  call void @free_candy_value(ptr %4170)
  %4171 = load ptr, ptr @235, align 8
  call void @free_candy_value(ptr %4171)
  %4172 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else, align 8
  call void @free_candy_value(ptr %4172)
  %4173 = load ptr, ptr @236, align 8
  call void @free_candy_value(ptr %4173)
  %4174 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then, align 8
  call void @free_candy_value(ptr %4174)
  %4175 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1027, align 8
  call void @free_candy_value(ptr %4175)
  %4176 = load ptr, ptr @237, align 8
  call void @free_candy_value(ptr %4176)
  %4177 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1029, align 8
  call void @free_candy_value(ptr %4177)
  %4178 = load ptr, ptr @238, align 8
  call void @free_candy_value(ptr %4178)
  %4179 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1031, align 8
  call void @free_candy_value(ptr %4179)
  %4180 = load ptr, ptr @239, align 8
  call void @free_candy_value(ptr %4180)
  %4181 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else, align 8
  call void @free_candy_value(ptr %4181)
  %4182 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1033, align 8
  call void @free_candy_value(ptr %4182)
  %4183 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else, align 8
  call void @free_candy_value(ptr %4183)
  %4184 = load ptr, ptr @240, align 8
  call void @free_candy_value(ptr %4184)
  %4185 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1035, align 8
  call void @free_candy_value(ptr %4185)
  %4186 = load ptr, ptr @241, align 8
  call void @free_candy_value(ptr %4186)
  %4187 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1037, align 8
  call void @free_candy_value(ptr %4187)
  %4188 = load ptr, ptr @242, align 8
  call void @free_candy_value(ptr %4188)
  %4189 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched, align 8
  call void @free_candy_value(ptr %4189)
  %4190 = load ptr, ptr @tag_More.1038, align 8
  call void @free_candy_value(ptr %4190)
  %4191 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4191)
  %4192 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1040, align 8
  call void @free_candy_value(ptr %4192)
  %4193 = load ptr, ptr @243, align 8
  call void @free_candy_value(ptr %4193)
  %4194 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4194)
  %4195 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21, align 8
  call void @free_candy_value(ptr %4195)
  %4196 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22, align 8
  call void @free_candy_value(ptr %4196)
  %4197 = load ptr, ptr @tag_Iterator.1041, align 8
  call void @free_candy_value(ptr %4197)
  %4198 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %4198)
  %4199 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1043, align 8
  call void @free_candy_value(ptr %4199)
  %4200 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1045, align 8
  call void @free_candy_value(ptr %4200)
  %4201 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1047, align 8
  call void @free_candy_value(ptr %4201)
  %4202 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1049, align 8
  call void @free_candy_value(ptr %4202)
  %4203 = load ptr, ptr @244, align 8
  call void @free_candy_value(ptr %4203)
  %4204 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1051, align 8
  call void @free_candy_value(ptr %4204)
  %4205 = load ptr, ptr @245, align 8
  call void @free_candy_value(ptr %4205)
  %4206 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1053, align 8
  call void @free_candy_value(ptr %4206)
  %4207 = load ptr, ptr @246, align 8
  call void @free_candy_value(ptr %4207)
  %4208 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1055, align 8
  call void @free_candy_value(ptr %4208)
  %4209 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1057, align 8
  call void @free_candy_value(ptr %4209)
  %4210 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1059, align 8
  call void @free_candy_value(ptr %4210)
  %4211 = load ptr, ptr @247, align 8
  call void @free_candy_value(ptr %4211)
  %4212 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1061, align 8
  call void @free_candy_value(ptr %4212)
  %4213 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1063, align 8
  call void @free_candy_value(ptr %4213)
  %4214 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1065, align 8
  call void @free_candy_value(ptr %4214)
  %4215 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1067, align 8
  call void @free_candy_value(ptr %4215)
  %4216 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1069, align 8
  call void @free_candy_value(ptr %4216)
  %4217 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1071, align 8
  call void @free_candy_value(ptr %4217)
  %4218 = load ptr, ptr @248, align 8
  call void @free_candy_value(ptr %4218)
  %4219 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1073, align 8
  call void @free_candy_value(ptr %4219)
  %4220 = load ptr, ptr @249, align 8
  call void @free_candy_value(ptr %4220)
  %4221 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1075, align 8
  call void @free_candy_value(ptr %4221)
  %4222 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1077, align 8
  call void @free_candy_value(ptr %4222)
  %4223 = load ptr, ptr @250, align 8
  call void @free_candy_value(ptr %4223)
  %4224 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1079, align 8
  call void @free_candy_value(ptr %4224)
  %4225 = load ptr, ptr @251, align 8
  call void @free_candy_value(ptr %4225)
  %4226 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1081, align 8
  call void @free_candy_value(ptr %4226)
  %4227 = load ptr, ptr @252, align 8
  call void @free_candy_value(ptr %4227)
  %4228 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1083, align 8
  call void @free_candy_value(ptr %4228)
  %4229 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1085, align 8
  call void @free_candy_value(ptr %4229)
  %4230 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1087, align 8
  call void @free_candy_value(ptr %4230)
  %4231 = load ptr, ptr @253, align 8
  call void @free_candy_value(ptr %4231)
  %4232 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1089, align 8
  call void @free_candy_value(ptr %4232)
  %4233 = load ptr, ptr @254, align 8
  call void @free_candy_value(ptr %4233)
  %4234 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1091, align 8
  call void @free_candy_value(ptr %4234)
  %4235 = load ptr, ptr @255, align 8
  call void @free_candy_value(ptr %4235)
  %4236 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1093, align 8
  call void @free_candy_value(ptr %4236)
  %4237 = load ptr, ptr @tag_More.1094, align 8
  call void @free_candy_value(ptr %4237)
  %4238 = load ptr, ptr @tag_Iterator.1095, align 8
  call void @free_candy_value(ptr %4238)
  %4239 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1097, align 8
  call void @free_candy_value(ptr %4239)
  %4240 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1099, align 8
  call void @free_candy_value(ptr %4240)
  %4241 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4241)
  %4242 = load ptr, ptr @fun_Core_iterator_map, align 8
  call void @free_candy_value(ptr %4242)
  %4243 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  call void @free_candy_value(ptr %4243)
  %4244 = load ptr, ptr @fun_Core_function_is1_9.1101, align 8
  call void @free_candy_value(ptr %4244)
  %4245 = load ptr, ptr @fun_Core_iterator_map_17, align 8
  call void @free_candy_value(ptr %4245)
  %4246 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1103, align 8
  call void @free_candy_value(ptr %4246)
  %4247 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1105, align 8
  call void @free_candy_value(ptr %4247)
  %4248 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1107, align 8
  call void @free_candy_value(ptr %4248)
  %4249 = load ptr, ptr @256, align 8
  call void @free_candy_value(ptr %4249)
  %4250 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1109, align 8
  call void @free_candy_value(ptr %4250)
  %4251 = load ptr, ptr @257, align 8
  call void @free_candy_value(ptr %4251)
  %4252 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1111, align 8
  call void @free_candy_value(ptr %4252)
  %4253 = load ptr, ptr @258, align 8
  call void @free_candy_value(ptr %4253)
  %4254 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.1113, align 8
  call void @free_candy_value(ptr %4254)
  %4255 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else, align 8
  call void @free_candy_value(ptr %4255)
  %4256 = load ptr, ptr @259, align 8
  call void @free_candy_value(ptr %4256)
  %4257 = load ptr, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4257)
  %4258 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then, align 8
  call void @free_candy_value(ptr %4258)
  %4259 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.1115, align 8
  call void @free_candy_value(ptr %4259)
  %4260 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.1117, align 8
  call void @free_candy_value(ptr %4260)
  %4261 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.1119, align 8
  call void @free_candy_value(ptr %4261)
  %4262 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then, align 8
  call void @free_candy_value(ptr %4262)
  %4263 = load ptr, ptr @260, align 8
  call void @free_candy_value(ptr %4263)
  %4264 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else, align 8
  call void @free_candy_value(ptr %4264)
  %4265 = load ptr, ptr @261, align 8
  call void @free_candy_value(ptr %4265)
  %4266 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then, align 8
  call void @free_candy_value(ptr %4266)
  %4267 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.1121, align 8
  call void @free_candy_value(ptr %4267)
  %4268 = load ptr, ptr @262, align 8
  call void @free_candy_value(ptr %4268)
  %4269 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.1123, align 8
  call void @free_candy_value(ptr %4269)
  %4270 = load ptr, ptr @263, align 8
  call void @free_candy_value(ptr %4270)
  %4271 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.1125, align 8
  call void @free_candy_value(ptr %4271)
  %4272 = load ptr, ptr @264, align 8
  call void @free_candy_value(ptr %4272)
  %4273 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else, align 8
  call void @free_candy_value(ptr %4273)
  %4274 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.1127, align 8
  call void @free_candy_value(ptr %4274)
  %4275 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.1129, align 8
  call void @free_candy_value(ptr %4275)
  %4276 = load ptr, ptr @265, align 8
  call void @free_candy_value(ptr %4276)
  %4277 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.1131, align 8
  call void @free_candy_value(ptr %4277)
  %4278 = load ptr, ptr @266, align 8
  call void @free_candy_value(ptr %4278)
  %4279 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.1133, align 8
  call void @free_candy_value(ptr %4279)
  %4280 = load ptr, ptr @267, align 8
  call void @free_candy_value(ptr %4280)
  %4281 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_matched, align 8
  call void @free_candy_value(ptr %4281)
  %4282 = load ptr, ptr @tag_More.1134, align 8
  call void @free_candy_value(ptr %4282)
  %4283 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4283)
  %4284 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  call void @free_candy_value(ptr %4284)
  %4285 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  call void @free_candy_value(ptr %4285)
  %4286 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  call void @free_candy_value(ptr %4286)
  %4287 = load ptr, ptr @268, align 8
  call void @free_candy_value(ptr %4287)
  %4288 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  call void @free_candy_value(ptr %4288)
  %4289 = load ptr, ptr @269, align 8
  call void @free_candy_value(ptr %4289)
  %4290 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  call void @free_candy_value(ptr %4290)
  %4291 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.1136, align 8
  call void @free_candy_value(ptr %4291)
  %4292 = load ptr, ptr @270, align 8
  call void @free_candy_value(ptr %4292)
  %4293 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.1138, align 8
  call void @free_candy_value(ptr %4293)
  %4294 = load ptr, ptr @271, align 8
  call void @free_candy_value(ptr %4294)
  %4295 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.1140, align 8
  call void @free_candy_value(ptr %4295)
  %4296 = load ptr, ptr @272, align 8
  call void @free_candy_value(ptr %4296)
  %4297 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  call void @free_candy_value(ptr %4297)
  %4298 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.1142, align 8
  call void @free_candy_value(ptr %4298)
  %4299 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  call void @free_candy_value(ptr %4299)
  %4300 = load ptr, ptr @273, align 8
  call void @free_candy_value(ptr %4300)
  %4301 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.1144, align 8
  call void @free_candy_value(ptr %4301)
  %4302 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  call void @free_candy_value(ptr %4302)
  %4303 = load ptr, ptr @274, align 8
  call void @free_candy_value(ptr %4303)
  %4304 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4304)
  %4305 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  call void @free_candy_value(ptr %4305)
  %4306 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1146, align 8
  call void @free_candy_value(ptr %4306)
  %4307 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1148, align 8
  call void @free_candy_value(ptr %4307)
  %4308 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1150, align 8
  call void @free_candy_value(ptr %4308)
  %4309 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  call void @free_candy_value(ptr %4309)
  %4310 = load ptr, ptr @275, align 8
  call void @free_candy_value(ptr %4310)
  %4311 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  call void @free_candy_value(ptr %4311)
  %4312 = load ptr, ptr @276, align 8
  call void @free_candy_value(ptr %4312)
  %4313 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  call void @free_candy_value(ptr %4313)
  %4314 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.1152, align 8
  call void @free_candy_value(ptr %4314)
  %4315 = load ptr, ptr @277, align 8
  call void @free_candy_value(ptr %4315)
  %4316 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.1154, align 8
  call void @free_candy_value(ptr %4316)
  %4317 = load ptr, ptr @278, align 8
  call void @free_candy_value(ptr %4317)
  %4318 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.1156, align 8
  call void @free_candy_value(ptr %4318)
  %4319 = load ptr, ptr @279, align 8
  call void @free_candy_value(ptr %4319)
  %4320 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  call void @free_candy_value(ptr %4320)
  %4321 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.1158, align 8
  call void @free_candy_value(ptr %4321)
  %4322 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1160, align 8
  call void @free_candy_value(ptr %4322)
  %4323 = load ptr, ptr @280, align 8
  call void @free_candy_value(ptr %4323)
  %4324 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1162, align 8
  call void @free_candy_value(ptr %4324)
  %4325 = load ptr, ptr @281, align 8
  call void @free_candy_value(ptr %4325)
  %4326 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1164, align 8
  call void @free_candy_value(ptr %4326)
  %4327 = load ptr, ptr @282, align 8
  call void @free_candy_value(ptr %4327)
  %4328 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  call void @free_candy_value(ptr %4328)
  %4329 = load ptr, ptr @tag_More.1165, align 8
  call void @free_candy_value(ptr %4329)
  %4330 = load ptr, ptr @fun_Core_iterator_ensure, align 8
  call void @free_candy_value(ptr %4330)
  %4331 = load ptr, ptr @fun_Core_function_is1_9.1167, align 8
  call void @free_candy_value(ptr %4331)
  %4332 = load ptr, ptr @fun_Core_iterator_ensure_12, align 8
  call void @free_candy_value(ptr %4332)
  %4333 = load ptr, ptr @fun_Core_iterator_ensure_17, align 8
  call void @free_candy_value(ptr %4333)
  %4334 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4334)
  %4335 = load ptr, ptr @fun_Core_iterator_foldLeft, align 8
  call void @free_candy_value(ptr %4335)
  %4336 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  call void @free_candy_value(ptr %4336)
  %4337 = load ptr, ptr @fun_Core_function_is2_9.1169, align 8
  call void @free_candy_value(ptr %4337)
  %4338 = load ptr, ptr @fun_Core_iterator_foldLeft_21, align 8
  call void @free_candy_value(ptr %4338)
  %4339 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_equals_then, align 8
  call void @free_candy_value(ptr %4339)
  %4340 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then, align 8
  call void @free_candy_value(ptr %4340)
  %4341 = load ptr, ptr @283, align 8
  call void @free_candy_value(ptr %4341)
  %4342 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else, align 8
  call void @free_candy_value(ptr %4342)
  %4343 = load ptr, ptr @284, align 8
  call void @free_candy_value(ptr %4343)
  %4344 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then, align 8
  call void @free_candy_value(ptr %4344)
  %4345 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then.1171, align 8
  call void @free_candy_value(ptr %4345)
  %4346 = load ptr, ptr @285, align 8
  call void @free_candy_value(ptr %4346)
  %4347 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else.1173, align 8
  call void @free_candy_value(ptr %4347)
  %4348 = load ptr, ptr @286, align 8
  call void @free_candy_value(ptr %4348)
  %4349 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then.1175, align 8
  call void @free_candy_value(ptr %4349)
  %4350 = load ptr, ptr @287, align 8
  call void @free_candy_value(ptr %4350)
  %4351 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else, align 8
  call void @free_candy_value(ptr %4351)
  %4352 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.1177, align 8
  call void @free_candy_value(ptr %4352)
  %4353 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_equals_else, align 8
  call void @free_candy_value(ptr %4353)
  %4354 = load ptr, ptr @288, align 8
  call void @free_candy_value(ptr %4354)
  %4355 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.1179, align 8
  call void @free_candy_value(ptr %4355)
  %4356 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else, align 8
  call void @free_candy_value(ptr %4356)
  %4357 = load ptr, ptr @289, align 8
  call void @free_candy_value(ptr %4357)
  %4358 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-0_matched, align 8
  call void @free_candy_value(ptr %4358)
  %4359 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4359)
  %4360 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then, align 8
  call void @free_candy_value(ptr %4360)
  %4361 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1181, align 8
  call void @free_candy_value(ptr %4361)
  %4362 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1183, align 8
  call void @free_candy_value(ptr %4362)
  %4363 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1185, align 8
  call void @free_candy_value(ptr %4363)
  %4364 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then, align 8
  call void @free_candy_value(ptr %4364)
  %4365 = load ptr, ptr @290, align 8
  call void @free_candy_value(ptr %4365)
  %4366 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else, align 8
  call void @free_candy_value(ptr %4366)
  %4367 = load ptr, ptr @291, align 8
  call void @free_candy_value(ptr %4367)
  %4368 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then, align 8
  call void @free_candy_value(ptr %4368)
  %4369 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then.1187, align 8
  call void @free_candy_value(ptr %4369)
  %4370 = load ptr, ptr @292, align 8
  call void @free_candy_value(ptr %4370)
  %4371 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else.1189, align 8
  call void @free_candy_value(ptr %4371)
  %4372 = load ptr, ptr @293, align 8
  call void @free_candy_value(ptr %4372)
  %4373 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then.1191, align 8
  call void @free_candy_value(ptr %4373)
  %4374 = load ptr, ptr @294, align 8
  call void @free_candy_value(ptr %4374)
  %4375 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else, align 8
  call void @free_candy_value(ptr %4375)
  %4376 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else.1193, align 8
  call void @free_candy_value(ptr %4376)
  %4377 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1195, align 8
  call void @free_candy_value(ptr %4377)
  %4378 = load ptr, ptr @295, align 8
  call void @free_candy_value(ptr %4378)
  %4379 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1197, align 8
  call void @free_candy_value(ptr %4379)
  %4380 = load ptr, ptr @296, align 8
  call void @free_candy_value(ptr %4380)
  %4381 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1199, align 8
  call void @free_candy_value(ptr %4381)
  %4382 = load ptr, ptr @297, align 8
  call void @free_candy_value(ptr %4382)
  %4383 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-1_matched, align 8
  call void @free_candy_value(ptr %4383)
  %4384 = load ptr, ptr @tag_Error.1200, align 8
  call void @free_candy_value(ptr %4384)
  %4385 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-0_matched, align 8
  call void @free_candy_value(ptr %4385)
  %4386 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4386)
  %4387 = load ptr, ptr @fun_Core_iterator_reduceLeft, align 8
  call void @free_candy_value(ptr %4387)
  %4388 = load ptr, ptr @fun_Core_function_is2_9.1202, align 8
  call void @free_candy_value(ptr %4388)
  %4389 = load ptr, ptr @fun_Core_iterator_reduceLeft_12, align 8
  call void @free_candy_value(ptr %4389)
  %4390 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else, align 8
  call void @free_candy_value(ptr %4390)
  %4391 = load ptr, ptr @298, align 8
  call void @free_candy_value(ptr %4391)
  %4392 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4392)
  %4393 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then, align 8
  call void @free_candy_value(ptr %4393)
  %4394 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1204, align 8
  call void @free_candy_value(ptr %4394)
  %4395 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1206, align 8
  call void @free_candy_value(ptr %4395)
  %4396 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1208, align 8
  call void @free_candy_value(ptr %4396)
  %4397 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then, align 8
  call void @free_candy_value(ptr %4397)
  %4398 = load ptr, ptr @299, align 8
  call void @free_candy_value(ptr %4398)
  %4399 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else, align 8
  call void @free_candy_value(ptr %4399)
  %4400 = load ptr, ptr @300, align 8
  call void @free_candy_value(ptr %4400)
  %4401 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then, align 8
  call void @free_candy_value(ptr %4401)
  %4402 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then.1210, align 8
  call void @free_candy_value(ptr %4402)
  %4403 = load ptr, ptr @301, align 8
  call void @free_candy_value(ptr %4403)
  %4404 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else.1212, align 8
  call void @free_candy_value(ptr %4404)
  %4405 = load ptr, ptr @302, align 8
  call void @free_candy_value(ptr %4405)
  %4406 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then.1214, align 8
  call void @free_candy_value(ptr %4406)
  %4407 = load ptr, ptr @303, align 8
  call void @free_candy_value(ptr %4407)
  %4408 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else, align 8
  call void @free_candy_value(ptr %4408)
  %4409 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else.1216, align 8
  call void @free_candy_value(ptr %4409)
  %4410 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1218, align 8
  call void @free_candy_value(ptr %4410)
  %4411 = load ptr, ptr @304, align 8
  call void @free_candy_value(ptr %4411)
  %4412 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1220, align 8
  call void @free_candy_value(ptr %4412)
  %4413 = load ptr, ptr @305, align 8
  call void @free_candy_value(ptr %4413)
  %4414 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1222, align 8
  call void @free_candy_value(ptr %4414)
  %4415 = load ptr, ptr @306, align 8
  call void @free_candy_value(ptr %4415)
  %4416 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-1_matched, align 8
  call void @free_candy_value(ptr %4416)
  %4417 = load ptr, ptr @tag_Ok.1223, align 8
  call void @free_candy_value(ptr %4417)
  %4418 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  call void @free_candy_value(ptr %4418)
  %4419 = load ptr, ptr @fun_Core_iterator_sum, align 8
  call void @free_candy_value(ptr %4419)
  %4420 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  call void @free_candy_value(ptr %4420)
  %4421 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  call void @free_candy_value(ptr %4421)
  %4422 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  call void @free_candy_value(ptr %4422)
  %4423 = load ptr, ptr @fun_Core_iterator_joinToText, align 8
  call void @free_candy_value(ptr %4423)
  %4424 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  call void @free_candy_value(ptr %4424)
  %4425 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  call void @free_candy_value(ptr %4425)
  %4426 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1225", align 8
  call void @free_candy_value(ptr %4426)
  %4427 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1227, align 8
  call void @free_candy_value(ptr %4427)
  %4428 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1229, align 8
  call void @free_candy_value(ptr %4428)
  %4429 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1231, align 8
  call void @free_candy_value(ptr %4429)
  %4430 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1233, align 8
  call void @free_candy_value(ptr %4430)
  %4431 = load ptr, ptr @307, align 8
  call void @free_candy_value(ptr %4431)
  %4432 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1235, align 8
  call void @free_candy_value(ptr %4432)
  %4433 = load ptr, ptr @308, align 8
  call void @free_candy_value(ptr %4433)
  %4434 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1237, align 8
  call void @free_candy_value(ptr %4434)
  %4435 = load ptr, ptr @309, align 8
  call void @free_candy_value(ptr %4435)
  %4436 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1239, align 8
  call void @free_candy_value(ptr %4436)
  %4437 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1241, align 8
  call void @free_candy_value(ptr %4437)
  %4438 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1243, align 8
  call void @free_candy_value(ptr %4438)
  %4439 = load ptr, ptr @310, align 8
  call void @free_candy_value(ptr %4439)
  %4440 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1245, align 8
  call void @free_candy_value(ptr %4440)
  %4441 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1247, align 8
  call void @free_candy_value(ptr %4441)
  %4442 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1249, align 8
  call void @free_candy_value(ptr %4442)
  %4443 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1251, align 8
  call void @free_candy_value(ptr %4443)
  %4444 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1253, align 8
  call void @free_candy_value(ptr %4444)
  %4445 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1255, align 8
  call void @free_candy_value(ptr %4445)
  %4446 = load ptr, ptr @311, align 8
  call void @free_candy_value(ptr %4446)
  %4447 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1257, align 8
  call void @free_candy_value(ptr %4447)
  %4448 = load ptr, ptr @312, align 8
  call void @free_candy_value(ptr %4448)
  %4449 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1259, align 8
  call void @free_candy_value(ptr %4449)
  %4450 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1261, align 8
  call void @free_candy_value(ptr %4450)
  %4451 = load ptr, ptr @313, align 8
  call void @free_candy_value(ptr %4451)
  %4452 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1263, align 8
  call void @free_candy_value(ptr %4452)
  %4453 = load ptr, ptr @314, align 8
  call void @free_candy_value(ptr %4453)
  %4454 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1265, align 8
  call void @free_candy_value(ptr %4454)
  %4455 = load ptr, ptr @315, align 8
  call void @free_candy_value(ptr %4455)
  %4456 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1267, align 8
  call void @free_candy_value(ptr %4456)
  %4457 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1269, align 8
  call void @free_candy_value(ptr %4457)
  %4458 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1271, align 8
  call void @free_candy_value(ptr %4458)
  %4459 = load ptr, ptr @316, align 8
  call void @free_candy_value(ptr %4459)
  %4460 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1273, align 8
  call void @free_candy_value(ptr %4460)
  %4461 = load ptr, ptr @317, align 8
  call void @free_candy_value(ptr %4461)
  %4462 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1275, align 8
  call void @free_candy_value(ptr %4462)
  %4463 = load ptr, ptr @318, align 8
  call void @free_candy_value(ptr %4463)
  %4464 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1277, align 8
  call void @free_candy_value(ptr %4464)
  %4465 = load ptr, ptr @tag_More.1278, align 8
  call void @free_candy_value(ptr %4465)
  %4466 = load ptr, ptr @tag_Iterator.1279, align 8
  call void @free_candy_value(ptr %4466)
  %4467 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1281, align 8
  call void @free_candy_value(ptr %4467)
  %4468 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1283, align 8
  call void @free_candy_value(ptr %4468)
  %4469 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4469)
  %4470 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4470)
  %4471 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1285", align 8
  call void @free_candy_value(ptr %4471)
  %4472 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1287, align 8
  call void @free_candy_value(ptr %4472)
  %4473 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1289, align 8
  call void @free_candy_value(ptr %4473)
  %4474 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1291, align 8
  call void @free_candy_value(ptr %4474)
  %4475 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1293, align 8
  call void @free_candy_value(ptr %4475)
  %4476 = load ptr, ptr @319, align 8
  call void @free_candy_value(ptr %4476)
  %4477 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1295, align 8
  call void @free_candy_value(ptr %4477)
  %4478 = load ptr, ptr @320, align 8
  call void @free_candy_value(ptr %4478)
  %4479 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1297, align 8
  call void @free_candy_value(ptr %4479)
  %4480 = load ptr, ptr @321, align 8
  call void @free_candy_value(ptr %4480)
  %4481 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1299, align 8
  call void @free_candy_value(ptr %4481)
  %4482 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1301, align 8
  call void @free_candy_value(ptr %4482)
  %4483 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1303, align 8
  call void @free_candy_value(ptr %4483)
  %4484 = load ptr, ptr @322, align 8
  call void @free_candy_value(ptr %4484)
  %4485 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1305, align 8
  call void @free_candy_value(ptr %4485)
  %4486 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1307, align 8
  call void @free_candy_value(ptr %4486)
  %4487 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1309, align 8
  call void @free_candy_value(ptr %4487)
  %4488 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1311, align 8
  call void @free_candy_value(ptr %4488)
  %4489 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1313, align 8
  call void @free_candy_value(ptr %4489)
  %4490 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1315, align 8
  call void @free_candy_value(ptr %4490)
  %4491 = load ptr, ptr @323, align 8
  call void @free_candy_value(ptr %4491)
  %4492 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1317, align 8
  call void @free_candy_value(ptr %4492)
  %4493 = load ptr, ptr @324, align 8
  call void @free_candy_value(ptr %4493)
  %4494 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1319, align 8
  call void @free_candy_value(ptr %4494)
  %4495 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1321, align 8
  call void @free_candy_value(ptr %4495)
  %4496 = load ptr, ptr @325, align 8
  call void @free_candy_value(ptr %4496)
  %4497 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1323, align 8
  call void @free_candy_value(ptr %4497)
  %4498 = load ptr, ptr @326, align 8
  call void @free_candy_value(ptr %4498)
  %4499 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1325, align 8
  call void @free_candy_value(ptr %4499)
  %4500 = load ptr, ptr @327, align 8
  call void @free_candy_value(ptr %4500)
  %4501 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1327, align 8
  call void @free_candy_value(ptr %4501)
  %4502 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1329, align 8
  call void @free_candy_value(ptr %4502)
  %4503 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1331, align 8
  call void @free_candy_value(ptr %4503)
  %4504 = load ptr, ptr @328, align 8
  call void @free_candy_value(ptr %4504)
  %4505 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1333, align 8
  call void @free_candy_value(ptr %4505)
  %4506 = load ptr, ptr @329, align 8
  call void @free_candy_value(ptr %4506)
  %4507 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1335, align 8
  call void @free_candy_value(ptr %4507)
  %4508 = load ptr, ptr @330, align 8
  call void @free_candy_value(ptr %4508)
  %4509 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1337, align 8
  call void @free_candy_value(ptr %4509)
  %4510 = load ptr, ptr @tag_More.1338, align 8
  call void @free_candy_value(ptr %4510)
  %4511 = load ptr, ptr @tag_Iterator.1339, align 8
  call void @free_candy_value(ptr %4511)
  %4512 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1341, align 8
  call void @free_candy_value(ptr %4512)
  %4513 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1343, align 8
  call void @free_candy_value(ptr %4513)
  %4514 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4514)
  %4515 = load ptr, ptr @fun_Core_iterator_takeWhile, align 8
  call void @free_candy_value(ptr %4515)
  %4516 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  call void @free_candy_value(ptr %4516)
  %4517 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  call void @free_candy_value(ptr %4517)
  %4518 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1345, align 8
  call void @free_candy_value(ptr %4518)
  %4519 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1347, align 8
  call void @free_candy_value(ptr %4519)
  %4520 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1349, align 8
  call void @free_candy_value(ptr %4520)
  %4521 = load ptr, ptr @331, align 8
  call void @free_candy_value(ptr %4521)
  %4522 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1351, align 8
  call void @free_candy_value(ptr %4522)
  %4523 = load ptr, ptr @332, align 8
  call void @free_candy_value(ptr %4523)
  %4524 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1353, align 8
  call void @free_candy_value(ptr %4524)
  %4525 = load ptr, ptr @333, align 8
  call void @free_candy_value(ptr %4525)
  %4526 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.1355, align 8
  call void @free_candy_value(ptr %4526)
  %4527 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  call void @free_candy_value(ptr %4527)
  %4528 = load ptr, ptr @334, align 8
  call void @free_candy_value(ptr %4528)
  %4529 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4529)
  %4530 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  call void @free_candy_value(ptr %4530)
  %4531 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1357, align 8
  call void @free_candy_value(ptr %4531)
  %4532 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1359, align 8
  call void @free_candy_value(ptr %4532)
  %4533 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1361, align 8
  call void @free_candy_value(ptr %4533)
  %4534 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  call void @free_candy_value(ptr %4534)
  %4535 = load ptr, ptr @335, align 8
  call void @free_candy_value(ptr %4535)
  %4536 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  call void @free_candy_value(ptr %4536)
  %4537 = load ptr, ptr @336, align 8
  call void @free_candy_value(ptr %4537)
  %4538 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  call void @free_candy_value(ptr %4538)
  %4539 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.1363, align 8
  call void @free_candy_value(ptr %4539)
  %4540 = load ptr, ptr @337, align 8
  call void @free_candy_value(ptr %4540)
  %4541 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.1365, align 8
  call void @free_candy_value(ptr %4541)
  %4542 = load ptr, ptr @338, align 8
  call void @free_candy_value(ptr %4542)
  %4543 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.1367, align 8
  call void @free_candy_value(ptr %4543)
  %4544 = load ptr, ptr @339, align 8
  call void @free_candy_value(ptr %4544)
  %4545 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  call void @free_candy_value(ptr %4545)
  %4546 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.1369, align 8
  call void @free_candy_value(ptr %4546)
  %4547 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1371, align 8
  call void @free_candy_value(ptr %4547)
  %4548 = load ptr, ptr @340, align 8
  call void @free_candy_value(ptr %4548)
  %4549 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1373, align 8
  call void @free_candy_value(ptr %4549)
  %4550 = load ptr, ptr @341, align 8
  call void @free_candy_value(ptr %4550)
  %4551 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1375, align 8
  call void @free_candy_value(ptr %4551)
  %4552 = load ptr, ptr @342, align 8
  call void @free_candy_value(ptr %4552)
  %4553 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  call void @free_candy_value(ptr %4553)
  %4554 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  call void @free_candy_value(ptr %4554)
  %4555 = load ptr, ptr @tag_More.1376, align 8
  call void @free_candy_value(ptr %4555)
  %4556 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  call void @free_candy_value(ptr %4556)
  %4557 = load ptr, ptr @fun_Core_iterator_take_30, align 8
  call void @free_candy_value(ptr %4557)
  %4558 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4558)
  %4559 = load ptr, ptr @fun_Core_iterator_skip_26_6, align 8
  call void @free_candy_value(ptr %4559)
  %4560 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_equals_then, align 8
  call void @free_candy_value(ptr %4560)
  %4561 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then, align 8
  call void @free_candy_value(ptr %4561)
  %4562 = load ptr, ptr @343, align 8
  call void @free_candy_value(ptr %4562)
  %4563 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else, align 8
  call void @free_candy_value(ptr %4563)
  %4564 = load ptr, ptr @344, align 8
  call void @free_candy_value(ptr %4564)
  %4565 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then, align 8
  call void @free_candy_value(ptr %4565)
  %4566 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then.1378, align 8
  call void @free_candy_value(ptr %4566)
  %4567 = load ptr, ptr @345, align 8
  call void @free_candy_value(ptr %4567)
  %4568 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else.1380, align 8
  call void @free_candy_value(ptr %4568)
  %4569 = load ptr, ptr @346, align 8
  call void @free_candy_value(ptr %4569)
  %4570 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then.1382, align 8
  call void @free_candy_value(ptr %4570)
  %4571 = load ptr, ptr @347, align 8
  call void @free_candy_value(ptr %4571)
  %4572 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else, align 8
  call void @free_candy_value(ptr %4572)
  %4573 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.1384, align 8
  call void @free_candy_value(ptr %4573)
  %4574 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_equals_else, align 8
  call void @free_candy_value(ptr %4574)
  %4575 = load ptr, ptr @348, align 8
  call void @free_candy_value(ptr %4575)
  %4576 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.1386, align 8
  call void @free_candy_value(ptr %4576)
  %4577 = load ptr, ptr @fun_Core_iterator_skip_26_6_7, align 8
  call void @free_candy_value(ptr %4577)
  %4578 = load ptr, ptr @fun_Core_iterator_skip_26_6_8, align 8
  call void @free_candy_value(ptr %4578)
  %4579 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else, align 8
  call void @free_candy_value(ptr %4579)
  %4580 = load ptr, ptr @349, align 8
  call void @free_candy_value(ptr %4580)
  %4581 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4581)
  %4582 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then, align 8
  call void @free_candy_value(ptr %4582)
  %4583 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1388, align 8
  call void @free_candy_value(ptr %4583)
  %4584 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1390, align 8
  call void @free_candy_value(ptr %4584)
  %4585 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1392, align 8
  call void @free_candy_value(ptr %4585)
  %4586 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_then, align 8
  call void @free_candy_value(ptr %4586)
  %4587 = load ptr, ptr @350, align 8
  call void @free_candy_value(ptr %4587)
  %4588 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_else, align 8
  call void @free_candy_value(ptr %4588)
  %4589 = load ptr, ptr @351, align 8
  call void @free_candy_value(ptr %4589)
  %4590 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_then, align 8
  call void @free_candy_value(ptr %4590)
  %4591 = load ptr, ptr @352, align 8
  call void @free_candy_value(ptr %4591)
  %4592 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_else, align 8
  call void @free_candy_value(ptr %4592)
  %4593 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1394, align 8
  call void @free_candy_value(ptr %4593)
  %4594 = load ptr, ptr @353, align 8
  call void @free_candy_value(ptr %4594)
  %4595 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1396, align 8
  call void @free_candy_value(ptr %4595)
  %4596 = load ptr, ptr @354, align 8
  call void @free_candy_value(ptr %4596)
  %4597 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1398, align 8
  call void @free_candy_value(ptr %4597)
  %4598 = load ptr, ptr @355, align 8
  call void @free_candy_value(ptr %4598)
  %4599 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_matched, align 8
  call void @free_candy_value(ptr %4599)
  %4600 = load ptr, ptr @356, align 8
  call void @free_candy_value(ptr %4600)
  %4601 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  call void @free_candy_value(ptr %4601)
  %4602 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %4602)
  %4603 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1400, align 8
  call void @free_candy_value(ptr %4603)
  %4604 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1402, align 8
  call void @free_candy_value(ptr %4604)
  %4605 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1404, align 8
  call void @free_candy_value(ptr %4605)
  %4606 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1406, align 8
  call void @free_candy_value(ptr %4606)
  %4607 = load ptr, ptr @357, align 8
  call void @free_candy_value(ptr %4607)
  %4608 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1408, align 8
  call void @free_candy_value(ptr %4608)
  %4609 = load ptr, ptr @358, align 8
  call void @free_candy_value(ptr %4609)
  %4610 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1410, align 8
  call void @free_candy_value(ptr %4610)
  %4611 = load ptr, ptr @359, align 8
  call void @free_candy_value(ptr %4611)
  %4612 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1412, align 8
  call void @free_candy_value(ptr %4612)
  %4613 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1414, align 8
  call void @free_candy_value(ptr %4613)
  %4614 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1416, align 8
  call void @free_candy_value(ptr %4614)
  %4615 = load ptr, ptr @360, align 8
  call void @free_candy_value(ptr %4615)
  %4616 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1418, align 8
  call void @free_candy_value(ptr %4616)
  %4617 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1420, align 8
  call void @free_candy_value(ptr %4617)
  %4618 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1422, align 8
  call void @free_candy_value(ptr %4618)
  %4619 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1424, align 8
  call void @free_candy_value(ptr %4619)
  %4620 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1426, align 8
  call void @free_candy_value(ptr %4620)
  %4621 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1428, align 8
  call void @free_candy_value(ptr %4621)
  %4622 = load ptr, ptr @361, align 8
  call void @free_candy_value(ptr %4622)
  %4623 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1430, align 8
  call void @free_candy_value(ptr %4623)
  %4624 = load ptr, ptr @362, align 8
  call void @free_candy_value(ptr %4624)
  %4625 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1432, align 8
  call void @free_candy_value(ptr %4625)
  %4626 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1434, align 8
  call void @free_candy_value(ptr %4626)
  %4627 = load ptr, ptr @363, align 8
  call void @free_candy_value(ptr %4627)
  %4628 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1436, align 8
  call void @free_candy_value(ptr %4628)
  %4629 = load ptr, ptr @364, align 8
  call void @free_candy_value(ptr %4629)
  %4630 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1438, align 8
  call void @free_candy_value(ptr %4630)
  %4631 = load ptr, ptr @365, align 8
  call void @free_candy_value(ptr %4631)
  %4632 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1440, align 8
  call void @free_candy_value(ptr %4632)
  %4633 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1442, align 8
  call void @free_candy_value(ptr %4633)
  %4634 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1444, align 8
  call void @free_candy_value(ptr %4634)
  %4635 = load ptr, ptr @366, align 8
  call void @free_candy_value(ptr %4635)
  %4636 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1446, align 8
  call void @free_candy_value(ptr %4636)
  %4637 = load ptr, ptr @367, align 8
  call void @free_candy_value(ptr %4637)
  %4638 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1448, align 8
  call void @free_candy_value(ptr %4638)
  %4639 = load ptr, ptr @368, align 8
  call void @free_candy_value(ptr %4639)
  %4640 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1450, align 8
  call void @free_candy_value(ptr %4640)
  %4641 = load ptr, ptr @tag_More.1451, align 8
  call void @free_candy_value(ptr %4641)
  %4642 = load ptr, ptr @tag_Iterator.1452, align 8
  call void @free_candy_value(ptr %4642)
  %4643 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1454, align 8
  call void @free_candy_value(ptr %4643)
  %4644 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1456, align 8
  call void @free_candy_value(ptr %4644)
  %4645 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  call void @free_candy_value(ptr %4645)
  %4646 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %4646)
  %4647 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1458, align 8
  call void @free_candy_value(ptr %4647)
  %4648 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1460, align 8
  call void @free_candy_value(ptr %4648)
  %4649 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1462, align 8
  call void @free_candy_value(ptr %4649)
  %4650 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1464, align 8
  call void @free_candy_value(ptr %4650)
  %4651 = load ptr, ptr @369, align 8
  call void @free_candy_value(ptr %4651)
  %4652 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1466, align 8
  call void @free_candy_value(ptr %4652)
  %4653 = load ptr, ptr @370, align 8
  call void @free_candy_value(ptr %4653)
  %4654 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1468, align 8
  call void @free_candy_value(ptr %4654)
  %4655 = load ptr, ptr @371, align 8
  call void @free_candy_value(ptr %4655)
  %4656 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1470, align 8
  call void @free_candy_value(ptr %4656)
  %4657 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1472, align 8
  call void @free_candy_value(ptr %4657)
  %4658 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1474, align 8
  call void @free_candy_value(ptr %4658)
  %4659 = load ptr, ptr @372, align 8
  call void @free_candy_value(ptr %4659)
  %4660 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1476, align 8
  call void @free_candy_value(ptr %4660)
  %4661 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1478, align 8
  call void @free_candy_value(ptr %4661)
  %4662 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1480, align 8
  call void @free_candy_value(ptr %4662)
  %4663 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1482, align 8
  call void @free_candy_value(ptr %4663)
  %4664 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1484, align 8
  call void @free_candy_value(ptr %4664)
  %4665 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1486, align 8
  call void @free_candy_value(ptr %4665)
  %4666 = load ptr, ptr @373, align 8
  call void @free_candy_value(ptr %4666)
  %4667 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1488, align 8
  call void @free_candy_value(ptr %4667)
  %4668 = load ptr, ptr @374, align 8
  call void @free_candy_value(ptr %4668)
  %4669 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1490, align 8
  call void @free_candy_value(ptr %4669)
  %4670 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1492, align 8
  call void @free_candy_value(ptr %4670)
  %4671 = load ptr, ptr @375, align 8
  call void @free_candy_value(ptr %4671)
  %4672 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1494, align 8
  call void @free_candy_value(ptr %4672)
  %4673 = load ptr, ptr @376, align 8
  call void @free_candy_value(ptr %4673)
  %4674 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1496, align 8
  call void @free_candy_value(ptr %4674)
  %4675 = load ptr, ptr @377, align 8
  call void @free_candy_value(ptr %4675)
  %4676 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1498, align 8
  call void @free_candy_value(ptr %4676)
  %4677 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1500, align 8
  call void @free_candy_value(ptr %4677)
  %4678 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1502, align 8
  call void @free_candy_value(ptr %4678)
  %4679 = load ptr, ptr @378, align 8
  call void @free_candy_value(ptr %4679)
  %4680 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1504, align 8
  call void @free_candy_value(ptr %4680)
  %4681 = load ptr, ptr @379, align 8
  call void @free_candy_value(ptr %4681)
  %4682 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1506, align 8
  call void @free_candy_value(ptr %4682)
  %4683 = load ptr, ptr @380, align 8
  call void @free_candy_value(ptr %4683)
  %4684 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1508, align 8
  call void @free_candy_value(ptr %4684)
  %4685 = load ptr, ptr @tag_More.1509, align 8
  call void @free_candy_value(ptr %4685)
  %4686 = load ptr, ptr @tag_Iterator.1510, align 8
  call void @free_candy_value(ptr %4686)
  %4687 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1512, align 8
  call void @free_candy_value(ptr %4687)
  %4688 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1514, align 8
  call void @free_candy_value(ptr %4688)
  %4689 = load ptr, ptr @fun_Core_iterator_windowed, align 8
  call void @free_candy_value(ptr %4689)
  %4690 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  call void @free_candy_value(ptr %4690)
  %4691 = load ptr, ptr @fun_Core_bool_is_1_equals_else.1516, align 8
  call void @free_candy_value(ptr %4691)
  %4692 = load ptr, ptr @381, align 8
  call void @free_candy_value(ptr %4692)
  %4693 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.1518, align 8
  call void @free_candy_value(ptr %4693)
  %4694 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.1520, align 8
  call void @free_candy_value(ptr %4694)
  %4695 = load ptr, ptr @fun_Core_bool_is_1_equals_else.1522, align 8
  call void @free_candy_value(ptr %4695)
  %4696 = load ptr, ptr @382, align 8
  call void @free_candy_value(ptr %4696)
  %4697 = load ptr, ptr @fun_Core_iterator_windowed_57, align 8
  call void @free_candy_value(ptr %4697)
  %4698 = load ptr, ptr @fun_Core_iterator_take_27, align 8
  call void @free_candy_value(ptr %4698)
  %4699 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_then, align 8
  call void @free_candy_value(ptr %4699)
  %4700 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then, align 8
  call void @free_candy_value(ptr %4700)
  %4701 = load ptr, ptr @383, align 8
  call void @free_candy_value(ptr %4701)
  %4702 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else, align 8
  call void @free_candy_value(ptr %4702)
  %4703 = load ptr, ptr @384, align 8
  call void @free_candy_value(ptr %4703)
  %4704 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then, align 8
  call void @free_candy_value(ptr %4704)
  %4705 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.1524, align 8
  call void @free_candy_value(ptr %4705)
  %4706 = load ptr, ptr @385, align 8
  call void @free_candy_value(ptr %4706)
  %4707 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.1526, align 8
  call void @free_candy_value(ptr %4707)
  %4708 = load ptr, ptr @386, align 8
  call void @free_candy_value(ptr %4708)
  %4709 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.1528, align 8
  call void @free_candy_value(ptr %4709)
  %4710 = load ptr, ptr @387, align 8
  call void @free_candy_value(ptr %4710)
  %4711 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else, align 8
  call void @free_candy_value(ptr %4711)
  %4712 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.1530, align 8
  call void @free_candy_value(ptr %4712)
  %4713 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_else, align 8
  call void @free_candy_value(ptr %4713)
  %4714 = load ptr, ptr @388, align 8
  call void @free_candy_value(ptr %4714)
  %4715 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.1532, align 8
  call void @free_candy_value(ptr %4715)
  %4716 = load ptr, ptr @fun_Core_iterator_windowed_57_18, align 8
  call void @free_candy_value(ptr %4716)
  %4717 = load ptr, ptr @fun_Core_iterator_windowed_57_19, align 8
  call void @free_candy_value(ptr %4717)
  %4718 = load ptr, ptr @fun_Core_iterator_windowed_57_24, align 8
  call void @free_candy_value(ptr %4718)
  %4719 = load ptr, ptr @fun_Core_iterator_skip_26, align 8
  call void @free_candy_value(ptr %4719)
  %4720 = load ptr, ptr @tag_Iterator.1533, align 8
  call void @free_candy_value(ptr %4720)
  %4721 = load ptr, ptr @tag_More.1534, align 8
  call void @free_candy_value(ptr %4721)
  %4722 = load ptr, ptr @389, align 8
  call void @free_candy_value(ptr %4722)
  %4723 = load ptr, ptr @fun_Core_iterator_generateWithState_12.1536, align 8
  call void @free_candy_value(ptr %4723)
  %4724 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1.1538, align 8
  call void @free_candy_value(ptr %4724)
  %4725 = load ptr, ptr @fun_Core_iterator_generate_42_6, align 8
  call void @free_candy_value(ptr %4725)
  %4726 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1540, align 8
  call void @free_candy_value(ptr %4726)
  %4727 = load ptr, ptr @390, align 8
  call void @free_candy_value(ptr %4727)
  %4728 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1542, align 8
  call void @free_candy_value(ptr %4728)
  %4729 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1544, align 8
  call void @free_candy_value(ptr %4729)
  %4730 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1546, align 8
  call void @free_candy_value(ptr %4730)
  %4731 = load ptr, ptr @391, align 8
  call void @free_candy_value(ptr %4731)
  %4732 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1548, align 8
  call void @free_candy_value(ptr %4732)
  %4733 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1550, align 8
  call void @free_candy_value(ptr %4733)
  %4734 = load ptr, ptr @392, align 8
  call void @free_candy_value(ptr %4734)
  %4735 = load ptr, ptr @tag_More.1551, align 8
  call void @free_candy_value(ptr %4735)
  %4736 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1553, align 8
  call void @free_candy_value(ptr %4736)
  %4737 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1555, align 8
  call void @free_candy_value(ptr %4737)
  %4738 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1557, align 8
  call void @free_candy_value(ptr %4738)
  %4739 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1559, align 8
  call void @free_candy_value(ptr %4739)
  %4740 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1561, align 8
  call void @free_candy_value(ptr %4740)
  %4741 = load ptr, ptr @393, align 8
  call void @free_candy_value(ptr %4741)
  %4742 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1563, align 8
  call void @free_candy_value(ptr %4742)
  %4743 = load ptr, ptr @394, align 8
  call void @free_candy_value(ptr %4743)
  %4744 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1565, align 8
  call void @free_candy_value(ptr %4744)
  %4745 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1567, align 8
  call void @free_candy_value(ptr %4745)
  %4746 = load ptr, ptr @395, align 8
  call void @free_candy_value(ptr %4746)
  %4747 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1569, align 8
  call void @free_candy_value(ptr %4747)
  %4748 = load ptr, ptr @396, align 8
  call void @free_candy_value(ptr %4748)
  %4749 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1571, align 8
  call void @free_candy_value(ptr %4749)
  %4750 = load ptr, ptr @397, align 8
  call void @free_candy_value(ptr %4750)
  %4751 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1573, align 8
  call void @free_candy_value(ptr %4751)
  %4752 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1575, align 8
  call void @free_candy_value(ptr %4752)
  %4753 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1577, align 8
  call void @free_candy_value(ptr %4753)
  %4754 = load ptr, ptr @398, align 8
  call void @free_candy_value(ptr %4754)
  %4755 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1579, align 8
  call void @free_candy_value(ptr %4755)
  %4756 = load ptr, ptr @399, align 8
  call void @free_candy_value(ptr %4756)
  %4757 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1581, align 8
  call void @free_candy_value(ptr %4757)
  %4758 = load ptr, ptr @400, align 8
  call void @free_candy_value(ptr %4758)
  %4759 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1583, align 8
  call void @free_candy_value(ptr %4759)
  %4760 = load ptr, ptr @tag_More.1584, align 8
  call void @free_candy_value(ptr %4760)
  %4761 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1586, align 8
  call void @free_candy_value(ptr %4761)
  %4762 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1588, align 8
  call void @free_candy_value(ptr %4762)
  %4763 = load ptr, ptr @401, align 8
  call void @free_candy_value(ptr %4763)
  %4764 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1590, align 8
  call void @free_candy_value(ptr %4764)
  %4765 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1592, align 8
  call void @free_candy_value(ptr %4765)
  %4766 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1594, align 8
  call void @free_candy_value(ptr %4766)
  %4767 = load ptr, ptr @tag_Iterator.1595, align 8
  call void @free_candy_value(ptr %4767)
  %4768 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1597, align 8
  call void @free_candy_value(ptr %4768)
  %4769 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1599, align 8
  call void @free_candy_value(ptr %4769)
  %4770 = load ptr, ptr @402, align 8
  call void @free_candy_value(ptr %4770)
  %4771 = load ptr, ptr @fun_Core_iterator_generateWithState_12.1601, align 8
  call void @free_candy_value(ptr %4771)
  %4772 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1.1603, align 8
  call void @free_candy_value(ptr %4772)
  %4773 = load ptr, ptr @fun_Core_iterator_generate_42_6.1605, align 8
  call void @free_candy_value(ptr %4773)
  %4774 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1607, align 8
  call void @free_candy_value(ptr %4774)
  %4775 = load ptr, ptr @403, align 8
  call void @free_candy_value(ptr %4775)
  %4776 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1609, align 8
  call void @free_candy_value(ptr %4776)
  %4777 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1611, align 8
  call void @free_candy_value(ptr %4777)
  %4778 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1613, align 8
  call void @free_candy_value(ptr %4778)
  %4779 = load ptr, ptr @404, align 8
  call void @free_candy_value(ptr %4779)
  %4780 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1615, align 8
  call void @free_candy_value(ptr %4780)
  %4781 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1617, align 8
  call void @free_candy_value(ptr %4781)
  %4782 = load ptr, ptr @405, align 8
  call void @free_candy_value(ptr %4782)
  %4783 = load ptr, ptr @tag_More.1618, align 8
  call void @free_candy_value(ptr %4783)
  %4784 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1620, align 8
  call void @free_candy_value(ptr %4784)
  %4785 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1622, align 8
  call void @free_candy_value(ptr %4785)
  %4786 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1624, align 8
  call void @free_candy_value(ptr %4786)
  %4787 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1626, align 8
  call void @free_candy_value(ptr %4787)
  %4788 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1628, align 8
  call void @free_candy_value(ptr %4788)
  %4789 = load ptr, ptr @406, align 8
  call void @free_candy_value(ptr %4789)
  %4790 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1630, align 8
  call void @free_candy_value(ptr %4790)
  %4791 = load ptr, ptr @407, align 8
  call void @free_candy_value(ptr %4791)
  %4792 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1632, align 8
  call void @free_candy_value(ptr %4792)
  %4793 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1634, align 8
  call void @free_candy_value(ptr %4793)
  %4794 = load ptr, ptr @408, align 8
  call void @free_candy_value(ptr %4794)
  %4795 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1636, align 8
  call void @free_candy_value(ptr %4795)
  %4796 = load ptr, ptr @409, align 8
  call void @free_candy_value(ptr %4796)
  %4797 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1638, align 8
  call void @free_candy_value(ptr %4797)
  %4798 = load ptr, ptr @410, align 8
  call void @free_candy_value(ptr %4798)
  %4799 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1640, align 8
  call void @free_candy_value(ptr %4799)
  %4800 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1642, align 8
  call void @free_candy_value(ptr %4800)
  %4801 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1644, align 8
  call void @free_candy_value(ptr %4801)
  %4802 = load ptr, ptr @411, align 8
  call void @free_candy_value(ptr %4802)
  %4803 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1646, align 8
  call void @free_candy_value(ptr %4803)
  %4804 = load ptr, ptr @412, align 8
  call void @free_candy_value(ptr %4804)
  %4805 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1648, align 8
  call void @free_candy_value(ptr %4805)
  %4806 = load ptr, ptr @413, align 8
  call void @free_candy_value(ptr %4806)
  %4807 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1650, align 8
  call void @free_candy_value(ptr %4807)
  %4808 = load ptr, ptr @tag_More.1651, align 8
  call void @free_candy_value(ptr %4808)
  %4809 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1653, align 8
  call void @free_candy_value(ptr %4809)
  %4810 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1655, align 8
  call void @free_candy_value(ptr %4810)
  %4811 = load ptr, ptr @414, align 8
  call void @free_candy_value(ptr %4811)
  %4812 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1657, align 8
  call void @free_candy_value(ptr %4812)
  %4813 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1659, align 8
  call void @free_candy_value(ptr %4813)
  %4814 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1661, align 8
  call void @free_candy_value(ptr %4814)
  %4815 = load ptr, ptr @tag_Iterator.1662, align 8
  call void @free_candy_value(ptr %4815)
  %4816 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1664, align 8
  call void @free_candy_value(ptr %4816)
  %4817 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1666, align 8
  call void @free_candy_value(ptr %4817)
  %4818 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1668", align 8
  call void @free_candy_value(ptr %4818)
  %4819 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1670, align 8
  call void @free_candy_value(ptr %4819)
  %4820 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1672, align 8
  call void @free_candy_value(ptr %4820)
  %4821 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1674, align 8
  call void @free_candy_value(ptr %4821)
  %4822 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1676, align 8
  call void @free_candy_value(ptr %4822)
  %4823 = load ptr, ptr @415, align 8
  call void @free_candy_value(ptr %4823)
  %4824 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1678, align 8
  call void @free_candy_value(ptr %4824)
  %4825 = load ptr, ptr @416, align 8
  call void @free_candy_value(ptr %4825)
  %4826 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1680, align 8
  call void @free_candy_value(ptr %4826)
  %4827 = load ptr, ptr @417, align 8
  call void @free_candy_value(ptr %4827)
  %4828 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1682, align 8
  call void @free_candy_value(ptr %4828)
  %4829 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1684, align 8
  call void @free_candy_value(ptr %4829)
  %4830 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1686, align 8
  call void @free_candy_value(ptr %4830)
  %4831 = load ptr, ptr @418, align 8
  call void @free_candy_value(ptr %4831)
  %4832 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1688, align 8
  call void @free_candy_value(ptr %4832)
  %4833 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1690, align 8
  call void @free_candy_value(ptr %4833)
  %4834 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1692, align 8
  call void @free_candy_value(ptr %4834)
  %4835 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1694, align 8
  call void @free_candy_value(ptr %4835)
  %4836 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1696, align 8
  call void @free_candy_value(ptr %4836)
  %4837 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1698, align 8
  call void @free_candy_value(ptr %4837)
  %4838 = load ptr, ptr @419, align 8
  call void @free_candy_value(ptr %4838)
  %4839 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1700, align 8
  call void @free_candy_value(ptr %4839)
  %4840 = load ptr, ptr @420, align 8
  call void @free_candy_value(ptr %4840)
  %4841 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1702, align 8
  call void @free_candy_value(ptr %4841)
  %4842 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1704, align 8
  call void @free_candy_value(ptr %4842)
  %4843 = load ptr, ptr @421, align 8
  call void @free_candy_value(ptr %4843)
  %4844 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1706, align 8
  call void @free_candy_value(ptr %4844)
  %4845 = load ptr, ptr @422, align 8
  call void @free_candy_value(ptr %4845)
  %4846 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1708, align 8
  call void @free_candy_value(ptr %4846)
  %4847 = load ptr, ptr @423, align 8
  call void @free_candy_value(ptr %4847)
  %4848 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1710, align 8
  call void @free_candy_value(ptr %4848)
  %4849 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1712, align 8
  call void @free_candy_value(ptr %4849)
  %4850 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1714, align 8
  call void @free_candy_value(ptr %4850)
  %4851 = load ptr, ptr @424, align 8
  call void @free_candy_value(ptr %4851)
  %4852 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1716, align 8
  call void @free_candy_value(ptr %4852)
  %4853 = load ptr, ptr @425, align 8
  call void @free_candy_value(ptr %4853)
  %4854 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1718, align 8
  call void @free_candy_value(ptr %4854)
  %4855 = load ptr, ptr @426, align 8
  call void @free_candy_value(ptr %4855)
  %4856 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1720, align 8
  call void @free_candy_value(ptr %4856)
  %4857 = load ptr, ptr @tag_More.1721, align 8
  call void @free_candy_value(ptr %4857)
  %4858 = load ptr, ptr @tag_Iterator.1722, align 8
  call void @free_candy_value(ptr %4858)
  %4859 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1724, align 8
  call void @free_candy_value(ptr %4859)
  %4860 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1726, align 8
  call void @free_candy_value(ptr %4860)
  %4861 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1728, align 8
  call void @free_candy_value(ptr %4861)
  %4862 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1730, align 8
  call void @free_candy_value(ptr %4862)
  %4863 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1732, align 8
  call void @free_candy_value(ptr %4863)
  %4864 = load ptr, ptr @427, align 8
  call void @free_candy_value(ptr %4864)
  %4865 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1734, align 8
  call void @free_candy_value(ptr %4865)
  %4866 = load ptr, ptr @428, align 8
  call void @free_candy_value(ptr %4866)
  %4867 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1736, align 8
  call void @free_candy_value(ptr %4867)
  %4868 = load ptr, ptr @429, align 8
  call void @free_candy_value(ptr %4868)
  %4869 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.1738, align 8
  call void @free_candy_value(ptr %4869)
  %4870 = load ptr, ptr @"Core:iterator:130", align 8
  call void @free_candy_value(ptr %4870)
  %4871 = load ptr, ptr @fun_Core_iterator_130_equals_then, align 8
  call void @free_candy_value(ptr %4871)
  %4872 = load ptr, ptr @fun_Core_iterator_130_equals_then.1740, align 8
  call void @free_candy_value(ptr %4872)
  %4873 = load ptr, ptr @fun_Core_iterator_130_equals_then.1742, align 8
  call void @free_candy_value(ptr %4873)
  %4874 = load ptr, ptr @fun_Core_iterator_130_equals_then.1744, align 8
  call void @free_candy_value(ptr %4874)
  %4875 = load ptr, ptr @fun_Core_iterator_130_hasKey_then, align 8
  call void @free_candy_value(ptr %4875)
  %4876 = load ptr, ptr @430, align 8
  call void @free_candy_value(ptr %4876)
  %4877 = load ptr, ptr @fun_Core_iterator_130_hasKey_else, align 8
  call void @free_candy_value(ptr %4877)
  %4878 = load ptr, ptr @431, align 8
  call void @free_candy_value(ptr %4878)
  %4879 = load ptr, ptr @fun_Core_iterator_130_isMatch_then, align 8
  call void @free_candy_value(ptr %4879)
  %4880 = load ptr, ptr @fun_Core_iterator_130_hasKey_then.1746, align 8
  call void @free_candy_value(ptr %4880)
  %4881 = load ptr, ptr @432, align 8
  call void @free_candy_value(ptr %4881)
  %4882 = load ptr, ptr @fun_Core_iterator_130_hasKey_else.1748, align 8
  call void @free_candy_value(ptr %4882)
  %4883 = load ptr, ptr @433, align 8
  call void @free_candy_value(ptr %4883)
  %4884 = load ptr, ptr @fun_Core_iterator_130_isMatch_then.1750, align 8
  call void @free_candy_value(ptr %4884)
  %4885 = load ptr, ptr @434, align 8
  call void @free_candy_value(ptr %4885)
  %4886 = load ptr, ptr @fun_Core_iterator_130_isMatch_else, align 8
  call void @free_candy_value(ptr %4886)
  %4887 = load ptr, ptr @fun_Core_iterator_130_isMatch_else.1752, align 8
  call void @free_candy_value(ptr %4887)
  %4888 = load ptr, ptr @fun_Core_iterator_130_equals_else, align 8
  call void @free_candy_value(ptr %4888)
  %4889 = load ptr, ptr @435, align 8
  call void @free_candy_value(ptr %4889)
  %4890 = load ptr, ptr @fun_Core_iterator_130_equals_else.1754, align 8
  call void @free_candy_value(ptr %4890)
  %4891 = load ptr, ptr @436, align 8
  call void @free_candy_value(ptr %4891)
  %4892 = load ptr, ptr @fun_Core_iterator_130_equals_else.1756, align 8
  call void @free_candy_value(ptr %4892)
  %4893 = load ptr, ptr @437, align 8
  call void @free_candy_value(ptr %4893)
  %4894 = load ptr, ptr @fun_Core_iterator_130_isMatch_else.1758, align 8
  call void @free_candy_value(ptr %4894)
  %4895 = load ptr, ptr @"Core:iterator:item", align 8
  call void @free_candy_value(ptr %4895)
  %4896 = load ptr, ptr @"Core:iterator:rest", align 8
  call void @free_candy_value(ptr %4896)
  %4897 = load ptr, ptr @"Core:iterator:135", align 8
  call void @free_candy_value(ptr %4897)
  %4898 = load ptr, ptr @"Core:iterator:138", align 8
  call void @free_candy_value(ptr %4898)
  %4899 = load ptr, ptr @"Core:iterator:139", align 8
  call void @free_candy_value(ptr %4899)
  %4900 = load ptr, ptr @fun_Core_iterator_139_equals_then, align 8
  call void @free_candy_value(ptr %4900)
  %4901 = load ptr, ptr @fun_Core_iterator_139_equals_then.1760, align 8
  call void @free_candy_value(ptr %4901)
  %4902 = load ptr, ptr @fun_Core_iterator_139_equals_then.1762, align 8
  call void @free_candy_value(ptr %4902)
  %4903 = load ptr, ptr @fun_Core_iterator_139_equals_then.1764, align 8
  call void @free_candy_value(ptr %4903)
  %4904 = load ptr, ptr @fun_Core_iterator_139_hasKey_then, align 8
  call void @free_candy_value(ptr %4904)
  %4905 = load ptr, ptr @438, align 8
  call void @free_candy_value(ptr %4905)
  %4906 = load ptr, ptr @fun_Core_iterator_139_hasKey_else, align 8
  call void @free_candy_value(ptr %4906)
  %4907 = load ptr, ptr @439, align 8
  call void @free_candy_value(ptr %4907)
  %4908 = load ptr, ptr @fun_Core_iterator_139_isMatch_then, align 8
  call void @free_candy_value(ptr %4908)
  %4909 = load ptr, ptr @fun_Core_iterator_139_hasKey_then.1766, align 8
  call void @free_candy_value(ptr %4909)
  %4910 = load ptr, ptr @440, align 8
  call void @free_candy_value(ptr %4910)
  %4911 = load ptr, ptr @fun_Core_iterator_139_hasKey_else.1768, align 8
  call void @free_candy_value(ptr %4911)
  %4912 = load ptr, ptr @441, align 8
  call void @free_candy_value(ptr %4912)
  %4913 = load ptr, ptr @fun_Core_iterator_139_isMatch_then.1770, align 8
  call void @free_candy_value(ptr %4913)
  %4914 = load ptr, ptr @442, align 8
  call void @free_candy_value(ptr %4914)
  %4915 = load ptr, ptr @fun_Core_iterator_139_isMatch_else, align 8
  call void @free_candy_value(ptr %4915)
  %4916 = load ptr, ptr @fun_Core_iterator_139_isMatch_else.1772, align 8
  call void @free_candy_value(ptr %4916)
  %4917 = load ptr, ptr @fun_Core_iterator_139_equals_else, align 8
  call void @free_candy_value(ptr %4917)
  %4918 = load ptr, ptr @443, align 8
  call void @free_candy_value(ptr %4918)
  %4919 = load ptr, ptr @fun_Core_iterator_139_equals_else.1774, align 8
  call void @free_candy_value(ptr %4919)
  %4920 = load ptr, ptr @444, align 8
  call void @free_candy_value(ptr %4920)
  %4921 = load ptr, ptr @fun_Core_iterator_139_equals_else.1776, align 8
  call void @free_candy_value(ptr %4921)
  %4922 = load ptr, ptr @445, align 8
  call void @free_candy_value(ptr %4922)
  %4923 = load ptr, ptr @fun_Core_iterator_139_isMatch_else.1778, align 8
  call void @free_candy_value(ptr %4923)
  %4924 = load ptr, ptr @"Core:iterator:item#1", align 8
  call void @free_candy_value(ptr %4924)
  %4925 = load ptr, ptr @"Core:iterator:144", align 8
  call void @free_candy_value(ptr %4925)
  %4926 = load ptr, ptr @"Core:iterator:149", align 8
  call void @free_candy_value(ptr %4926)
  %4927 = load ptr, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %4927)
  %4928 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1780, align 8
  call void @free_candy_value(ptr %4928)
  %4929 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1782, align 8
  call void @free_candy_value(ptr %4929)
  %4930 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1784, align 8
  call void @free_candy_value(ptr %4930)
  %4931 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1786, align 8
  call void @free_candy_value(ptr %4931)
  %4932 = load ptr, ptr @446, align 8
  call void @free_candy_value(ptr %4932)
  %4933 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1788, align 8
  call void @free_candy_value(ptr %4933)
  %4934 = load ptr, ptr @447, align 8
  call void @free_candy_value(ptr %4934)
  %4935 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1790, align 8
  call void @free_candy_value(ptr %4935)
  %4936 = load ptr, ptr @448, align 8
  call void @free_candy_value(ptr %4936)
  %4937 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1792, align 8
  call void @free_candy_value(ptr %4937)
  %4938 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1794, align 8
  call void @free_candy_value(ptr %4938)
  %4939 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1796, align 8
  call void @free_candy_value(ptr %4939)
  %4940 = load ptr, ptr @449, align 8
  call void @free_candy_value(ptr %4940)
  %4941 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1798, align 8
  call void @free_candy_value(ptr %4941)
  %4942 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1800, align 8
  call void @free_candy_value(ptr %4942)
  %4943 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1802, align 8
  call void @free_candy_value(ptr %4943)
  %4944 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1804, align 8
  call void @free_candy_value(ptr %4944)
  %4945 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1806, align 8
  call void @free_candy_value(ptr %4945)
  %4946 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1808, align 8
  call void @free_candy_value(ptr %4946)
  %4947 = load ptr, ptr @450, align 8
  call void @free_candy_value(ptr %4947)
  %4948 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1810, align 8
  call void @free_candy_value(ptr %4948)
  %4949 = load ptr, ptr @451, align 8
  call void @free_candy_value(ptr %4949)
  %4950 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1812, align 8
  call void @free_candy_value(ptr %4950)
  %4951 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1814, align 8
  call void @free_candy_value(ptr %4951)
  %4952 = load ptr, ptr @452, align 8
  call void @free_candy_value(ptr %4952)
  %4953 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1816, align 8
  call void @free_candy_value(ptr %4953)
  %4954 = load ptr, ptr @453, align 8
  call void @free_candy_value(ptr %4954)
  %4955 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1818, align 8
  call void @free_candy_value(ptr %4955)
  %4956 = load ptr, ptr @454, align 8
  call void @free_candy_value(ptr %4956)
  %4957 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1820, align 8
  call void @free_candy_value(ptr %4957)
  %4958 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1822, align 8
  call void @free_candy_value(ptr %4958)
  %4959 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1824, align 8
  call void @free_candy_value(ptr %4959)
  %4960 = load ptr, ptr @455, align 8
  call void @free_candy_value(ptr %4960)
  %4961 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1826, align 8
  call void @free_candy_value(ptr %4961)
  %4962 = load ptr, ptr @456, align 8
  call void @free_candy_value(ptr %4962)
  %4963 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1828, align 8
  call void @free_candy_value(ptr %4963)
  %4964 = load ptr, ptr @457, align 8
  call void @free_candy_value(ptr %4964)
  %4965 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1830, align 8
  call void @free_candy_value(ptr %4965)
  %4966 = load ptr, ptr @tag_More.1831, align 8
  call void @free_candy_value(ptr %4966)
  %4967 = load ptr, ptr @tag_Iterator.1832, align 8
  call void @free_candy_value(ptr %4967)
  %4968 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1834, align 8
  call void @free_candy_value(ptr %4968)
  %4969 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1836, align 8
  call void @free_candy_value(ptr %4969)
  %4970 = load ptr, ptr @"Core:iterator:151", align 8
  call void @free_candy_value(ptr %4970)
  %4971 = load ptr, ptr @fun_Core_iterator_generateWithState_12.1838, align 8
  call void @free_candy_value(ptr %4971)
  %4972 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1.1840, align 8
  call void @free_candy_value(ptr %4972)
  %4973 = load ptr, ptr @fun_Core_iterator_generate_42_6.1842, align 8
  call void @free_candy_value(ptr %4973)
  %4974 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1844, align 8
  call void @free_candy_value(ptr %4974)
  %4975 = load ptr, ptr @458, align 8
  call void @free_candy_value(ptr %4975)
  %4976 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1846, align 8
  call void @free_candy_value(ptr %4976)
  %4977 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1848, align 8
  call void @free_candy_value(ptr %4977)
  %4978 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1850, align 8
  call void @free_candy_value(ptr %4978)
  %4979 = load ptr, ptr @459, align 8
  call void @free_candy_value(ptr %4979)
  %4980 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1852, align 8
  call void @free_candy_value(ptr %4980)
  %4981 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1854, align 8
  call void @free_candy_value(ptr %4981)
  %4982 = load ptr, ptr @460, align 8
  call void @free_candy_value(ptr %4982)
  %4983 = load ptr, ptr @tag_More.1855, align 8
  call void @free_candy_value(ptr %4983)
  %4984 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1857, align 8
  call void @free_candy_value(ptr %4984)
  %4985 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1859, align 8
  call void @free_candy_value(ptr %4985)
  %4986 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1861, align 8
  call void @free_candy_value(ptr %4986)
  %4987 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1863, align 8
  call void @free_candy_value(ptr %4987)
  %4988 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1865, align 8
  call void @free_candy_value(ptr %4988)
  %4989 = load ptr, ptr @461, align 8
  call void @free_candy_value(ptr %4989)
  %4990 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1867, align 8
  call void @free_candy_value(ptr %4990)
  %4991 = load ptr, ptr @462, align 8
  call void @free_candy_value(ptr %4991)
  %4992 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1869, align 8
  call void @free_candy_value(ptr %4992)
  %4993 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1871, align 8
  call void @free_candy_value(ptr %4993)
  %4994 = load ptr, ptr @463, align 8
  call void @free_candy_value(ptr %4994)
  %4995 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1873, align 8
  call void @free_candy_value(ptr %4995)
  %4996 = load ptr, ptr @464, align 8
  call void @free_candy_value(ptr %4996)
  %4997 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1875, align 8
  call void @free_candy_value(ptr %4997)
  %4998 = load ptr, ptr @465, align 8
  call void @free_candy_value(ptr %4998)
  %4999 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1877, align 8
  call void @free_candy_value(ptr %4999)
  %5000 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1879, align 8
  call void @free_candy_value(ptr %5000)
  %5001 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1881, align 8
  call void @free_candy_value(ptr %5001)
  %5002 = load ptr, ptr @466, align 8
  call void @free_candy_value(ptr %5002)
  %5003 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1883, align 8
  call void @free_candy_value(ptr %5003)
  %5004 = load ptr, ptr @467, align 8
  call void @free_candy_value(ptr %5004)
  %5005 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1885, align 8
  call void @free_candy_value(ptr %5005)
  %5006 = load ptr, ptr @468, align 8
  call void @free_candy_value(ptr %5006)
  %5007 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1887, align 8
  call void @free_candy_value(ptr %5007)
  %5008 = load ptr, ptr @tag_More.1888, align 8
  call void @free_candy_value(ptr %5008)
  %5009 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1890, align 8
  call void @free_candy_value(ptr %5009)
  %5010 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1892, align 8
  call void @free_candy_value(ptr %5010)
  %5011 = load ptr, ptr @469, align 8
  call void @free_candy_value(ptr %5011)
  %5012 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1894, align 8
  call void @free_candy_value(ptr %5012)
  %5013 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1896, align 8
  call void @free_candy_value(ptr %5013)
  %5014 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1898, align 8
  call void @free_candy_value(ptr %5014)
  %5015 = load ptr, ptr @tag_Iterator.1899, align 8
  call void @free_candy_value(ptr %5015)
  %5016 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1901, align 8
  call void @free_candy_value(ptr %5016)
  %5017 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1903, align 8
  call void @free_candy_value(ptr %5017)
  %5018 = load ptr, ptr @"Core:iterator:157", align 8
  call void @free_candy_value(ptr %5018)
  %5019 = load ptr, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1905", align 8
  call void @free_candy_value(ptr %5019)
  %5020 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1907, align 8
  call void @free_candy_value(ptr %5020)
  %5021 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1909, align 8
  call void @free_candy_value(ptr %5021)
  %5022 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1911, align 8
  call void @free_candy_value(ptr %5022)
  %5023 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1913, align 8
  call void @free_candy_value(ptr %5023)
  %5024 = load ptr, ptr @470, align 8
  call void @free_candy_value(ptr %5024)
  %5025 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1915, align 8
  call void @free_candy_value(ptr %5025)
  %5026 = load ptr, ptr @471, align 8
  call void @free_candy_value(ptr %5026)
  %5027 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1917, align 8
  call void @free_candy_value(ptr %5027)
  %5028 = load ptr, ptr @472, align 8
  call void @free_candy_value(ptr %5028)
  %5029 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1919, align 8
  call void @free_candy_value(ptr %5029)
  %5030 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1921, align 8
  call void @free_candy_value(ptr %5030)
  %5031 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1923, align 8
  call void @free_candy_value(ptr %5031)
  %5032 = load ptr, ptr @473, align 8
  call void @free_candy_value(ptr %5032)
  %5033 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1925, align 8
  call void @free_candy_value(ptr %5033)
  %5034 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1927, align 8
  call void @free_candy_value(ptr %5034)
  %5035 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1929, align 8
  call void @free_candy_value(ptr %5035)
  %5036 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1931, align 8
  call void @free_candy_value(ptr %5036)
  %5037 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1933, align 8
  call void @free_candy_value(ptr %5037)
  %5038 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1935, align 8
  call void @free_candy_value(ptr %5038)
  %5039 = load ptr, ptr @474, align 8
  call void @free_candy_value(ptr %5039)
  %5040 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1937, align 8
  call void @free_candy_value(ptr %5040)
  %5041 = load ptr, ptr @475, align 8
  call void @free_candy_value(ptr %5041)
  %5042 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1939, align 8
  call void @free_candy_value(ptr %5042)
  %5043 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1941, align 8
  call void @free_candy_value(ptr %5043)
  %5044 = load ptr, ptr @476, align 8
  call void @free_candy_value(ptr %5044)
  %5045 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1943, align 8
  call void @free_candy_value(ptr %5045)
  %5046 = load ptr, ptr @477, align 8
  call void @free_candy_value(ptr %5046)
  %5047 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1945, align 8
  call void @free_candy_value(ptr %5047)
  %5048 = load ptr, ptr @478, align 8
  call void @free_candy_value(ptr %5048)
  %5049 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1947, align 8
  call void @free_candy_value(ptr %5049)
  %5050 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1949, align 8
  call void @free_candy_value(ptr %5050)
  %5051 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1951, align 8
  call void @free_candy_value(ptr %5051)
  %5052 = load ptr, ptr @479, align 8
  call void @free_candy_value(ptr %5052)
  %5053 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1953, align 8
  call void @free_candy_value(ptr %5053)
  %5054 = load ptr, ptr @480, align 8
  call void @free_candy_value(ptr %5054)
  %5055 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1955, align 8
  call void @free_candy_value(ptr %5055)
  %5056 = load ptr, ptr @481, align 8
  call void @free_candy_value(ptr %5056)
  %5057 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1957, align 8
  call void @free_candy_value(ptr %5057)
  %5058 = load ptr, ptr @tag_More.1958, align 8
  call void @free_candy_value(ptr %5058)
  %5059 = load ptr, ptr @tag_Iterator.1959, align 8
  call void @free_candy_value(ptr %5059)
  %5060 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1961, align 8
  call void @free_candy_value(ptr %5060)
  %5061 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1963, align 8
  call void @free_candy_value(ptr %5061)
  %5062 = load ptr, ptr @"Core:iterator:159", align 8
  call void @free_candy_value(ptr %5062)
  %5063 = load ptr, ptr @"Core:iterator:163:8", align 8
  call void @free_candy_value(ptr %5063)
  %5064 = load ptr, ptr @"Core:iterator:164", align 8
  call void @free_candy_value(ptr %5064)
  %5065 = load ptr, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5065)
  %5066 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.1965, align 8
  call void @free_candy_value(ptr %5066)
  %5067 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1967, align 8
  call void @free_candy_value(ptr %5067)
  %5068 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1969, align 8
  call void @free_candy_value(ptr %5068)
  %5069 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1971, align 8
  call void @free_candy_value(ptr %5069)
  %5070 = load ptr, ptr @482, align 8
  call void @free_candy_value(ptr %5070)
  %5071 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1973, align 8
  call void @free_candy_value(ptr %5071)
  %5072 = load ptr, ptr @483, align 8
  call void @free_candy_value(ptr %5072)
  %5073 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1975, align 8
  call void @free_candy_value(ptr %5073)
  %5074 = load ptr, ptr @484, align 8
  call void @free_candy_value(ptr %5074)
  %5075 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1977, align 8
  call void @free_candy_value(ptr %5075)
  %5076 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1979, align 8
  call void @free_candy_value(ptr %5076)
  %5077 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1981, align 8
  call void @free_candy_value(ptr %5077)
  %5078 = load ptr, ptr @485, align 8
  call void @free_candy_value(ptr %5078)
  %5079 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1983, align 8
  call void @free_candy_value(ptr %5079)
  %5080 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1985, align 8
  call void @free_candy_value(ptr %5080)
  %5081 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1987, align 8
  call void @free_candy_value(ptr %5081)
  %5082 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1989, align 8
  call void @free_candy_value(ptr %5082)
  %5083 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1991, align 8
  call void @free_candy_value(ptr %5083)
  %5084 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1993, align 8
  call void @free_candy_value(ptr %5084)
  %5085 = load ptr, ptr @486, align 8
  call void @free_candy_value(ptr %5085)
  %5086 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1995, align 8
  call void @free_candy_value(ptr %5086)
  %5087 = load ptr, ptr @487, align 8
  call void @free_candy_value(ptr %5087)
  %5088 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1997, align 8
  call void @free_candy_value(ptr %5088)
  %5089 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1999, align 8
  call void @free_candy_value(ptr %5089)
  %5090 = load ptr, ptr @488, align 8
  call void @free_candy_value(ptr %5090)
  %5091 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2001, align 8
  call void @free_candy_value(ptr %5091)
  %5092 = load ptr, ptr @489, align 8
  call void @free_candy_value(ptr %5092)
  %5093 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2003, align 8
  call void @free_candy_value(ptr %5093)
  %5094 = load ptr, ptr @490, align 8
  call void @free_candy_value(ptr %5094)
  %5095 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2005, align 8
  call void @free_candy_value(ptr %5095)
  %5096 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2007, align 8
  call void @free_candy_value(ptr %5096)
  %5097 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2009, align 8
  call void @free_candy_value(ptr %5097)
  %5098 = load ptr, ptr @491, align 8
  call void @free_candy_value(ptr %5098)
  %5099 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2011, align 8
  call void @free_candy_value(ptr %5099)
  %5100 = load ptr, ptr @492, align 8
  call void @free_candy_value(ptr %5100)
  %5101 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2013, align 8
  call void @free_candy_value(ptr %5101)
  %5102 = load ptr, ptr @493, align 8
  call void @free_candy_value(ptr %5102)
  %5103 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2015, align 8
  call void @free_candy_value(ptr %5103)
  %5104 = load ptr, ptr @tag_More.2016, align 8
  call void @free_candy_value(ptr %5104)
  %5105 = load ptr, ptr @tag_Iterator.2017, align 8
  call void @free_candy_value(ptr %5105)
  %5106 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2019, align 8
  call void @free_candy_value(ptr %5106)
  %5107 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2021, align 8
  call void @free_candy_value(ptr %5107)
  %5108 = load ptr, ptr @fun_Core_iterator_map_17.2023, align 8
  call void @free_candy_value(ptr %5108)
  %5109 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2025, align 8
  call void @free_candy_value(ptr %5109)
  %5110 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2027, align 8
  call void @free_candy_value(ptr %5110)
  %5111 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2029, align 8
  call void @free_candy_value(ptr %5111)
  %5112 = load ptr, ptr @494, align 8
  call void @free_candy_value(ptr %5112)
  %5113 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2031, align 8
  call void @free_candy_value(ptr %5113)
  %5114 = load ptr, ptr @495, align 8
  call void @free_candy_value(ptr %5114)
  %5115 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2033, align 8
  call void @free_candy_value(ptr %5115)
  %5116 = load ptr, ptr @496, align 8
  call void @free_candy_value(ptr %5116)
  %5117 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.2035, align 8
  call void @free_candy_value(ptr %5117)
  %5118 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2037, align 8
  call void @free_candy_value(ptr %5118)
  %5119 = load ptr, ptr @497, align 8
  call void @free_candy_value(ptr %5119)
  %5120 = load ptr, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch.2039, align 8
  call void @free_candy_value(ptr %5120)
  %5121 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2041, align 8
  call void @free_candy_value(ptr %5121)
  %5122 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2043, align 8
  call void @free_candy_value(ptr %5122)
  %5123 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2045, align 8
  call void @free_candy_value(ptr %5123)
  %5124 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2047, align 8
  call void @free_candy_value(ptr %5124)
  %5125 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.2049, align 8
  call void @free_candy_value(ptr %5125)
  %5126 = load ptr, ptr @498, align 8
  call void @free_candy_value(ptr %5126)
  %5127 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.2051, align 8
  call void @free_candy_value(ptr %5127)
  %5128 = load ptr, ptr @499, align 8
  call void @free_candy_value(ptr %5128)
  %5129 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.2053, align 8
  call void @free_candy_value(ptr %5129)
  %5130 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.2055, align 8
  call void @free_candy_value(ptr %5130)
  %5131 = load ptr, ptr @500, align 8
  call void @free_candy_value(ptr %5131)
  %5132 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.2057, align 8
  call void @free_candy_value(ptr %5132)
  %5133 = load ptr, ptr @501, align 8
  call void @free_candy_value(ptr %5133)
  %5134 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.2059, align 8
  call void @free_candy_value(ptr %5134)
  %5135 = load ptr, ptr @502, align 8
  call void @free_candy_value(ptr %5135)
  %5136 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.2061, align 8
  call void @free_candy_value(ptr %5136)
  %5137 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.2063, align 8
  call void @free_candy_value(ptr %5137)
  %5138 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2065, align 8
  call void @free_candy_value(ptr %5138)
  %5139 = load ptr, ptr @503, align 8
  call void @free_candy_value(ptr %5139)
  %5140 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2067, align 8
  call void @free_candy_value(ptr %5140)
  %5141 = load ptr, ptr @504, align 8
  call void @free_candy_value(ptr %5141)
  %5142 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2069, align 8
  call void @free_candy_value(ptr %5142)
  %5143 = load ptr, ptr @505, align 8
  call void @free_candy_value(ptr %5143)
  %5144 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_matched.2071, align 8
  call void @free_candy_value(ptr %5144)
  %5145 = load ptr, ptr @tag_More.2072, align 8
  call void @free_candy_value(ptr %5145)
  %5146 = load ptr, ptr @"Core:iterator:166", align 8
  call void @free_candy_value(ptr %5146)
  %5147 = load ptr, ptr @fun_Core_iterator_toList_2.2074, align 8
  call void @free_candy_value(ptr %5147)
  %5148 = load ptr, ptr @506, align 8
  call void @free_candy_value(ptr %5148)
  %5149 = load ptr, ptr @"Core:iterator:171", align 8
  call void @free_candy_value(ptr %5149)
  %5150 = load ptr, ptr @"Core:iterator:175", align 8
  call void @free_candy_value(ptr %5150)
  %5151 = load ptr, ptr @"fun_Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5151)
  %5152 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2076, align 8
  call void @free_candy_value(ptr %5152)
  %5153 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2078, align 8
  call void @free_candy_value(ptr %5153)
  %5154 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2080, align 8
  call void @free_candy_value(ptr %5154)
  %5155 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2082, align 8
  call void @free_candy_value(ptr %5155)
  %5156 = load ptr, ptr @507, align 8
  call void @free_candy_value(ptr %5156)
  %5157 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2084, align 8
  call void @free_candy_value(ptr %5157)
  %5158 = load ptr, ptr @508, align 8
  call void @free_candy_value(ptr %5158)
  %5159 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2086, align 8
  call void @free_candy_value(ptr %5159)
  %5160 = load ptr, ptr @509, align 8
  call void @free_candy_value(ptr %5160)
  %5161 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2088, align 8
  call void @free_candy_value(ptr %5161)
  %5162 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2090, align 8
  call void @free_candy_value(ptr %5162)
  %5163 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2092, align 8
  call void @free_candy_value(ptr %5163)
  %5164 = load ptr, ptr @510, align 8
  call void @free_candy_value(ptr %5164)
  %5165 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2094, align 8
  call void @free_candy_value(ptr %5165)
  %5166 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2096, align 8
  call void @free_candy_value(ptr %5166)
  %5167 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2098, align 8
  call void @free_candy_value(ptr %5167)
  %5168 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2100, align 8
  call void @free_candy_value(ptr %5168)
  %5169 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2102, align 8
  call void @free_candy_value(ptr %5169)
  %5170 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2104, align 8
  call void @free_candy_value(ptr %5170)
  %5171 = load ptr, ptr @511, align 8
  call void @free_candy_value(ptr %5171)
  %5172 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2106, align 8
  call void @free_candy_value(ptr %5172)
  %5173 = load ptr, ptr @512, align 8
  call void @free_candy_value(ptr %5173)
  %5174 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2108, align 8
  call void @free_candy_value(ptr %5174)
  %5175 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2110, align 8
  call void @free_candy_value(ptr %5175)
  %5176 = load ptr, ptr @513, align 8
  call void @free_candy_value(ptr %5176)
  %5177 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2112, align 8
  call void @free_candy_value(ptr %5177)
  %5178 = load ptr, ptr @514, align 8
  call void @free_candy_value(ptr %5178)
  %5179 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2114, align 8
  call void @free_candy_value(ptr %5179)
  %5180 = load ptr, ptr @515, align 8
  call void @free_candy_value(ptr %5180)
  %5181 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2116, align 8
  call void @free_candy_value(ptr %5181)
  %5182 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2118, align 8
  call void @free_candy_value(ptr %5182)
  %5183 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2120, align 8
  call void @free_candy_value(ptr %5183)
  %5184 = load ptr, ptr @516, align 8
  call void @free_candy_value(ptr %5184)
  %5185 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2122, align 8
  call void @free_candy_value(ptr %5185)
  %5186 = load ptr, ptr @517, align 8
  call void @free_candy_value(ptr %5186)
  %5187 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2124, align 8
  call void @free_candy_value(ptr %5187)
  %5188 = load ptr, ptr @518, align 8
  call void @free_candy_value(ptr %5188)
  %5189 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2126, align 8
  call void @free_candy_value(ptr %5189)
  %5190 = load ptr, ptr @tag_More.2127, align 8
  call void @free_candy_value(ptr %5190)
  %5191 = load ptr, ptr @tag_Iterator.2128, align 8
  call void @free_candy_value(ptr %5191)
  %5192 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2130, align 8
  call void @free_candy_value(ptr %5192)
  %5193 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2132, align 8
  call void @free_candy_value(ptr %5193)
  %5194 = load ptr, ptr @fun_Core_iterator_sum_5.2134, align 8
  call void @free_candy_value(ptr %5194)
  %5195 = load ptr, ptr @"Core:iterator:177", align 8
  call void @free_candy_value(ptr %5195)
  %5196 = load ptr, ptr @"Core:iterator:181", align 8
  call void @free_candy_value(ptr %5196)
  %5197 = load ptr, ptr @"fun_Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5197)
  %5198 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2136, align 8
  call void @free_candy_value(ptr %5198)
  %5199 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2138, align 8
  call void @free_candy_value(ptr %5199)
  %5200 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2140, align 8
  call void @free_candy_value(ptr %5200)
  %5201 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2142, align 8
  call void @free_candy_value(ptr %5201)
  %5202 = load ptr, ptr @519, align 8
  call void @free_candy_value(ptr %5202)
  %5203 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2144, align 8
  call void @free_candy_value(ptr %5203)
  %5204 = load ptr, ptr @520, align 8
  call void @free_candy_value(ptr %5204)
  %5205 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2146, align 8
  call void @free_candy_value(ptr %5205)
  %5206 = load ptr, ptr @521, align 8
  call void @free_candy_value(ptr %5206)
  %5207 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2148, align 8
  call void @free_candy_value(ptr %5207)
  %5208 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2150, align 8
  call void @free_candy_value(ptr %5208)
  %5209 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2152, align 8
  call void @free_candy_value(ptr %5209)
  %5210 = load ptr, ptr @522, align 8
  call void @free_candy_value(ptr %5210)
  %5211 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2154, align 8
  call void @free_candy_value(ptr %5211)
  %5212 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2156, align 8
  call void @free_candy_value(ptr %5212)
  %5213 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2158, align 8
  call void @free_candy_value(ptr %5213)
  %5214 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2160, align 8
  call void @free_candy_value(ptr %5214)
  %5215 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2162, align 8
  call void @free_candy_value(ptr %5215)
  %5216 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2164, align 8
  call void @free_candy_value(ptr %5216)
  %5217 = load ptr, ptr @523, align 8
  call void @free_candy_value(ptr %5217)
  %5218 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2166, align 8
  call void @free_candy_value(ptr %5218)
  %5219 = load ptr, ptr @524, align 8
  call void @free_candy_value(ptr %5219)
  %5220 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2168, align 8
  call void @free_candy_value(ptr %5220)
  %5221 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2170, align 8
  call void @free_candy_value(ptr %5221)
  %5222 = load ptr, ptr @525, align 8
  call void @free_candy_value(ptr %5222)
  %5223 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2172, align 8
  call void @free_candy_value(ptr %5223)
  %5224 = load ptr, ptr @526, align 8
  call void @free_candy_value(ptr %5224)
  %5225 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2174, align 8
  call void @free_candy_value(ptr %5225)
  %5226 = load ptr, ptr @527, align 8
  call void @free_candy_value(ptr %5226)
  %5227 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2176, align 8
  call void @free_candy_value(ptr %5227)
  %5228 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2178, align 8
  call void @free_candy_value(ptr %5228)
  %5229 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2180, align 8
  call void @free_candy_value(ptr %5229)
  %5230 = load ptr, ptr @528, align 8
  call void @free_candy_value(ptr %5230)
  %5231 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2182, align 8
  call void @free_candy_value(ptr %5231)
  %5232 = load ptr, ptr @529, align 8
  call void @free_candy_value(ptr %5232)
  %5233 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2184, align 8
  call void @free_candy_value(ptr %5233)
  %5234 = load ptr, ptr @530, align 8
  call void @free_candy_value(ptr %5234)
  %5235 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2186, align 8
  call void @free_candy_value(ptr %5235)
  %5236 = load ptr, ptr @tag_More.2187, align 8
  call void @free_candy_value(ptr %5236)
  %5237 = load ptr, ptr @tag_Iterator.2188, align 8
  call void @free_candy_value(ptr %5237)
  %5238 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2190, align 8
  call void @free_candy_value(ptr %5238)
  %5239 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2192, align 8
  call void @free_candy_value(ptr %5239)
  %5240 = load ptr, ptr @"Core:iterator:183", align 8
  call void @free_candy_value(ptr %5240)
  %5241 = load ptr, ptr @"Core:iterator:187:7", align 8
  call void @free_candy_value(ptr %5241)
  %5242 = load ptr, ptr @"Core:iterator:188", align 8
  call void @free_candy_value(ptr %5242)
  %5243 = load ptr, ptr @"fun_Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5243)
  %5244 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2194, align 8
  call void @free_candy_value(ptr %5244)
  %5245 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2196, align 8
  call void @free_candy_value(ptr %5245)
  %5246 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2198, align 8
  call void @free_candy_value(ptr %5246)
  %5247 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2200, align 8
  call void @free_candy_value(ptr %5247)
  %5248 = load ptr, ptr @531, align 8
  call void @free_candy_value(ptr %5248)
  %5249 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2202, align 8
  call void @free_candy_value(ptr %5249)
  %5250 = load ptr, ptr @532, align 8
  call void @free_candy_value(ptr %5250)
  %5251 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2204, align 8
  call void @free_candy_value(ptr %5251)
  %5252 = load ptr, ptr @533, align 8
  call void @free_candy_value(ptr %5252)
  %5253 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2206, align 8
  call void @free_candy_value(ptr %5253)
  %5254 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2208, align 8
  call void @free_candy_value(ptr %5254)
  %5255 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2210, align 8
  call void @free_candy_value(ptr %5255)
  %5256 = load ptr, ptr @534, align 8
  call void @free_candy_value(ptr %5256)
  %5257 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2212, align 8
  call void @free_candy_value(ptr %5257)
  %5258 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2214, align 8
  call void @free_candy_value(ptr %5258)
  %5259 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2216, align 8
  call void @free_candy_value(ptr %5259)
  %5260 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2218, align 8
  call void @free_candy_value(ptr %5260)
  %5261 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2220, align 8
  call void @free_candy_value(ptr %5261)
  %5262 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2222, align 8
  call void @free_candy_value(ptr %5262)
  %5263 = load ptr, ptr @535, align 8
  call void @free_candy_value(ptr %5263)
  %5264 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2224, align 8
  call void @free_candy_value(ptr %5264)
  %5265 = load ptr, ptr @536, align 8
  call void @free_candy_value(ptr %5265)
  %5266 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2226, align 8
  call void @free_candy_value(ptr %5266)
  %5267 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2228, align 8
  call void @free_candy_value(ptr %5267)
  %5268 = load ptr, ptr @537, align 8
  call void @free_candy_value(ptr %5268)
  %5269 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2230, align 8
  call void @free_candy_value(ptr %5269)
  %5270 = load ptr, ptr @538, align 8
  call void @free_candy_value(ptr %5270)
  %5271 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2232, align 8
  call void @free_candy_value(ptr %5271)
  %5272 = load ptr, ptr @539, align 8
  call void @free_candy_value(ptr %5272)
  %5273 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2234, align 8
  call void @free_candy_value(ptr %5273)
  %5274 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2236, align 8
  call void @free_candy_value(ptr %5274)
  %5275 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2238, align 8
  call void @free_candy_value(ptr %5275)
  %5276 = load ptr, ptr @540, align 8
  call void @free_candy_value(ptr %5276)
  %5277 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2240, align 8
  call void @free_candy_value(ptr %5277)
  %5278 = load ptr, ptr @541, align 8
  call void @free_candy_value(ptr %5278)
  %5279 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2242, align 8
  call void @free_candy_value(ptr %5279)
  %5280 = load ptr, ptr @542, align 8
  call void @free_candy_value(ptr %5280)
  %5281 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2244, align 8
  call void @free_candy_value(ptr %5281)
  %5282 = load ptr, ptr @tag_More.2245, align 8
  call void @free_candy_value(ptr %5282)
  %5283 = load ptr, ptr @tag_Iterator.2246, align 8
  call void @free_candy_value(ptr %5283)
  %5284 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2248, align 8
  call void @free_candy_value(ptr %5284)
  %5285 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2250, align 8
  call void @free_candy_value(ptr %5285)
  %5286 = load ptr, ptr @fun_Core_iterator_all_16, align 8
  call void @free_candy_value(ptr %5286)
  %5287 = load ptr, ptr @"Core:iterator:190", align 8
  call void @free_candy_value(ptr %5287)
  %5288 = load ptr, ptr @"Core:iterator:195", align 8
  call void @free_candy_value(ptr %5288)
  %5289 = load ptr, ptr @"fun_Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5289)
  %5290 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2252, align 8
  call void @free_candy_value(ptr %5290)
  %5291 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2254, align 8
  call void @free_candy_value(ptr %5291)
  %5292 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2256, align 8
  call void @free_candy_value(ptr %5292)
  %5293 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2258, align 8
  call void @free_candy_value(ptr %5293)
  %5294 = load ptr, ptr @543, align 8
  call void @free_candy_value(ptr %5294)
  %5295 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2260, align 8
  call void @free_candy_value(ptr %5295)
  %5296 = load ptr, ptr @544, align 8
  call void @free_candy_value(ptr %5296)
  %5297 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2262, align 8
  call void @free_candy_value(ptr %5297)
  %5298 = load ptr, ptr @545, align 8
  call void @free_candy_value(ptr %5298)
  %5299 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2264, align 8
  call void @free_candy_value(ptr %5299)
  %5300 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2266, align 8
  call void @free_candy_value(ptr %5300)
  %5301 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2268, align 8
  call void @free_candy_value(ptr %5301)
  %5302 = load ptr, ptr @546, align 8
  call void @free_candy_value(ptr %5302)
  %5303 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2270, align 8
  call void @free_candy_value(ptr %5303)
  %5304 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2272, align 8
  call void @free_candy_value(ptr %5304)
  %5305 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2274, align 8
  call void @free_candy_value(ptr %5305)
  %5306 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2276, align 8
  call void @free_candy_value(ptr %5306)
  %5307 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2278, align 8
  call void @free_candy_value(ptr %5307)
  %5308 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2280, align 8
  call void @free_candy_value(ptr %5308)
  %5309 = load ptr, ptr @547, align 8
  call void @free_candy_value(ptr %5309)
  %5310 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2282, align 8
  call void @free_candy_value(ptr %5310)
  %5311 = load ptr, ptr @548, align 8
  call void @free_candy_value(ptr %5311)
  %5312 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2284, align 8
  call void @free_candy_value(ptr %5312)
  %5313 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2286, align 8
  call void @free_candy_value(ptr %5313)
  %5314 = load ptr, ptr @549, align 8
  call void @free_candy_value(ptr %5314)
  %5315 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2288, align 8
  call void @free_candy_value(ptr %5315)
  %5316 = load ptr, ptr @550, align 8
  call void @free_candy_value(ptr %5316)
  %5317 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2290, align 8
  call void @free_candy_value(ptr %5317)
  %5318 = load ptr, ptr @551, align 8
  call void @free_candy_value(ptr %5318)
  %5319 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2292, align 8
  call void @free_candy_value(ptr %5319)
  %5320 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2294, align 8
  call void @free_candy_value(ptr %5320)
  %5321 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2296, align 8
  call void @free_candy_value(ptr %5321)
  %5322 = load ptr, ptr @552, align 8
  call void @free_candy_value(ptr %5322)
  %5323 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2298, align 8
  call void @free_candy_value(ptr %5323)
  %5324 = load ptr, ptr @553, align 8
  call void @free_candy_value(ptr %5324)
  %5325 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2300, align 8
  call void @free_candy_value(ptr %5325)
  %5326 = load ptr, ptr @554, align 8
  call void @free_candy_value(ptr %5326)
  %5327 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2302, align 8
  call void @free_candy_value(ptr %5327)
  %5328 = load ptr, ptr @tag_More.2303, align 8
  call void @free_candy_value(ptr %5328)
  %5329 = load ptr, ptr @tag_Iterator.2304, align 8
  call void @free_candy_value(ptr %5329)
  %5330 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2306, align 8
  call void @free_candy_value(ptr %5330)
  %5331 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2308, align 8
  call void @free_candy_value(ptr %5331)
  %5332 = load ptr, ptr @fun_Core_iterator_any_16, align 8
  call void @free_candy_value(ptr %5332)
  %5333 = load ptr, ptr @"Core:iterator:197", align 8
  call void @free_candy_value(ptr %5333)
  %5334 = load ptr, ptr @"Core:iterator:202", align 8
  call void @free_candy_value(ptr %5334)
  %5335 = load ptr, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2310", align 8
  call void @free_candy_value(ptr %5335)
  %5336 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2312, align 8
  call void @free_candy_value(ptr %5336)
  %5337 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2314, align 8
  call void @free_candy_value(ptr %5337)
  %5338 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2316, align 8
  call void @free_candy_value(ptr %5338)
  %5339 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2318, align 8
  call void @free_candy_value(ptr %5339)
  %5340 = load ptr, ptr @555, align 8
  call void @free_candy_value(ptr %5340)
  %5341 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2320, align 8
  call void @free_candy_value(ptr %5341)
  %5342 = load ptr, ptr @556, align 8
  call void @free_candy_value(ptr %5342)
  %5343 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2322, align 8
  call void @free_candy_value(ptr %5343)
  %5344 = load ptr, ptr @557, align 8
  call void @free_candy_value(ptr %5344)
  %5345 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2324, align 8
  call void @free_candy_value(ptr %5345)
  %5346 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2326, align 8
  call void @free_candy_value(ptr %5346)
  %5347 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2328, align 8
  call void @free_candy_value(ptr %5347)
  %5348 = load ptr, ptr @558, align 8
  call void @free_candy_value(ptr %5348)
  %5349 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2330, align 8
  call void @free_candy_value(ptr %5349)
  %5350 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2332, align 8
  call void @free_candy_value(ptr %5350)
  %5351 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2334, align 8
  call void @free_candy_value(ptr %5351)
  %5352 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2336, align 8
  call void @free_candy_value(ptr %5352)
  %5353 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2338, align 8
  call void @free_candy_value(ptr %5353)
  %5354 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2340, align 8
  call void @free_candy_value(ptr %5354)
  %5355 = load ptr, ptr @559, align 8
  call void @free_candy_value(ptr %5355)
  %5356 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2342, align 8
  call void @free_candy_value(ptr %5356)
  %5357 = load ptr, ptr @560, align 8
  call void @free_candy_value(ptr %5357)
  %5358 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2344, align 8
  call void @free_candy_value(ptr %5358)
  %5359 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2346, align 8
  call void @free_candy_value(ptr %5359)
  %5360 = load ptr, ptr @561, align 8
  call void @free_candy_value(ptr %5360)
  %5361 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2348, align 8
  call void @free_candy_value(ptr %5361)
  %5362 = load ptr, ptr @562, align 8
  call void @free_candy_value(ptr %5362)
  %5363 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2350, align 8
  call void @free_candy_value(ptr %5363)
  %5364 = load ptr, ptr @563, align 8
  call void @free_candy_value(ptr %5364)
  %5365 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2352, align 8
  call void @free_candy_value(ptr %5365)
  %5366 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2354, align 8
  call void @free_candy_value(ptr %5366)
  %5367 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2356, align 8
  call void @free_candy_value(ptr %5367)
  %5368 = load ptr, ptr @564, align 8
  call void @free_candy_value(ptr %5368)
  %5369 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2358, align 8
  call void @free_candy_value(ptr %5369)
  %5370 = load ptr, ptr @565, align 8
  call void @free_candy_value(ptr %5370)
  %5371 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2360, align 8
  call void @free_candy_value(ptr %5371)
  %5372 = load ptr, ptr @566, align 8
  call void @free_candy_value(ptr %5372)
  %5373 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2362, align 8
  call void @free_candy_value(ptr %5373)
  %5374 = load ptr, ptr @tag_More.2363, align 8
  call void @free_candy_value(ptr %5374)
  %5375 = load ptr, ptr @tag_Iterator.2364, align 8
  call void @free_candy_value(ptr %5375)
  %5376 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2366, align 8
  call void @free_candy_value(ptr %5376)
  %5377 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2368, align 8
  call void @free_candy_value(ptr %5377)
  %5378 = load ptr, ptr @fun_Core_iterator_map_17.2370, align 8
  call void @free_candy_value(ptr %5378)
  %5379 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2372, align 8
  call void @free_candy_value(ptr %5379)
  %5380 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2374, align 8
  call void @free_candy_value(ptr %5380)
  %5381 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2376, align 8
  call void @free_candy_value(ptr %5381)
  %5382 = load ptr, ptr @567, align 8
  call void @free_candy_value(ptr %5382)
  %5383 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2378, align 8
  call void @free_candy_value(ptr %5383)
  %5384 = load ptr, ptr @568, align 8
  call void @free_candy_value(ptr %5384)
  %5385 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2380, align 8
  call void @free_candy_value(ptr %5385)
  %5386 = load ptr, ptr @569, align 8
  call void @free_candy_value(ptr %5386)
  %5387 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.2382, align 8
  call void @free_candy_value(ptr %5387)
  %5388 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2384, align 8
  call void @free_candy_value(ptr %5388)
  %5389 = load ptr, ptr @570, align 8
  call void @free_candy_value(ptr %5389)
  %5390 = load ptr, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch.2386, align 8
  call void @free_candy_value(ptr %5390)
  %5391 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2388, align 8
  call void @free_candy_value(ptr %5391)
  %5392 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2390, align 8
  call void @free_candy_value(ptr %5392)
  %5393 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2392, align 8
  call void @free_candy_value(ptr %5393)
  %5394 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2394, align 8
  call void @free_candy_value(ptr %5394)
  %5395 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.2396, align 8
  call void @free_candy_value(ptr %5395)
  %5396 = load ptr, ptr @571, align 8
  call void @free_candy_value(ptr %5396)
  %5397 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.2398, align 8
  call void @free_candy_value(ptr %5397)
  %5398 = load ptr, ptr @572, align 8
  call void @free_candy_value(ptr %5398)
  %5399 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.2400, align 8
  call void @free_candy_value(ptr %5399)
  %5400 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.2402, align 8
  call void @free_candy_value(ptr %5400)
  %5401 = load ptr, ptr @573, align 8
  call void @free_candy_value(ptr %5401)
  %5402 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.2404, align 8
  call void @free_candy_value(ptr %5402)
  %5403 = load ptr, ptr @574, align 8
  call void @free_candy_value(ptr %5403)
  %5404 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.2406, align 8
  call void @free_candy_value(ptr %5404)
  %5405 = load ptr, ptr @575, align 8
  call void @free_candy_value(ptr %5405)
  %5406 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.2408, align 8
  call void @free_candy_value(ptr %5406)
  %5407 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.2410, align 8
  call void @free_candy_value(ptr %5407)
  %5408 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2412, align 8
  call void @free_candy_value(ptr %5408)
  %5409 = load ptr, ptr @576, align 8
  call void @free_candy_value(ptr %5409)
  %5410 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2414, align 8
  call void @free_candy_value(ptr %5410)
  %5411 = load ptr, ptr @577, align 8
  call void @free_candy_value(ptr %5411)
  %5412 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2416, align 8
  call void @free_candy_value(ptr %5412)
  %5413 = load ptr, ptr @578, align 8
  call void @free_candy_value(ptr %5413)
  %5414 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_matched.2418, align 8
  call void @free_candy_value(ptr %5414)
  %5415 = load ptr, ptr @tag_More.2419, align 8
  call void @free_candy_value(ptr %5415)
  %5416 = load ptr, ptr @"Core:iterator:204", align 8
  call void @free_candy_value(ptr %5416)
  %5417 = load ptr, ptr @text_123, align 8
  call void @free_candy_value(ptr %5417)
  %5418 = load ptr, ptr @"Core:iterator:212", align 8
  call void @free_candy_value(ptr %5418)
  %5419 = load ptr, ptr @"Core:iterator:216:7", align 8
  call void @free_candy_value(ptr %5419)
  %5420 = load ptr, ptr @fun_Core_iterator_216, align 8
  call void @free_candy_value(ptr %5420)
  %5421 = load ptr, ptr @"Core:iterator:217", align 8
  call void @free_candy_value(ptr %5421)
  %5422 = load ptr, ptr @"fun_Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5422)
  %5423 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2421, align 8
  call void @free_candy_value(ptr %5423)
  %5424 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2423, align 8
  call void @free_candy_value(ptr %5424)
  %5425 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2425, align 8
  call void @free_candy_value(ptr %5425)
  %5426 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2427, align 8
  call void @free_candy_value(ptr %5426)
  %5427 = load ptr, ptr @579, align 8
  call void @free_candy_value(ptr %5427)
  %5428 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2429, align 8
  call void @free_candy_value(ptr %5428)
  %5429 = load ptr, ptr @580, align 8
  call void @free_candy_value(ptr %5429)
  %5430 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2431, align 8
  call void @free_candy_value(ptr %5430)
  %5431 = load ptr, ptr @581, align 8
  call void @free_candy_value(ptr %5431)
  %5432 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2433, align 8
  call void @free_candy_value(ptr %5432)
  %5433 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2435, align 8
  call void @free_candy_value(ptr %5433)
  %5434 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2437, align 8
  call void @free_candy_value(ptr %5434)
  %5435 = load ptr, ptr @582, align 8
  call void @free_candy_value(ptr %5435)
  %5436 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2439, align 8
  call void @free_candy_value(ptr %5436)
  %5437 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2441, align 8
  call void @free_candy_value(ptr %5437)
  %5438 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2443, align 8
  call void @free_candy_value(ptr %5438)
  %5439 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2445, align 8
  call void @free_candy_value(ptr %5439)
  %5440 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2447, align 8
  call void @free_candy_value(ptr %5440)
  %5441 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2449, align 8
  call void @free_candy_value(ptr %5441)
  %5442 = load ptr, ptr @583, align 8
  call void @free_candy_value(ptr %5442)
  %5443 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2451, align 8
  call void @free_candy_value(ptr %5443)
  %5444 = load ptr, ptr @584, align 8
  call void @free_candy_value(ptr %5444)
  %5445 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2453, align 8
  call void @free_candy_value(ptr %5445)
  %5446 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2455, align 8
  call void @free_candy_value(ptr %5446)
  %5447 = load ptr, ptr @585, align 8
  call void @free_candy_value(ptr %5447)
  %5448 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2457, align 8
  call void @free_candy_value(ptr %5448)
  %5449 = load ptr, ptr @586, align 8
  call void @free_candy_value(ptr %5449)
  %5450 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2459, align 8
  call void @free_candy_value(ptr %5450)
  %5451 = load ptr, ptr @587, align 8
  call void @free_candy_value(ptr %5451)
  %5452 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2461, align 8
  call void @free_candy_value(ptr %5452)
  %5453 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2463, align 8
  call void @free_candy_value(ptr %5453)
  %5454 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2465, align 8
  call void @free_candy_value(ptr %5454)
  %5455 = load ptr, ptr @588, align 8
  call void @free_candy_value(ptr %5455)
  %5456 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2467, align 8
  call void @free_candy_value(ptr %5456)
  %5457 = load ptr, ptr @589, align 8
  call void @free_candy_value(ptr %5457)
  %5458 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2469, align 8
  call void @free_candy_value(ptr %5458)
  %5459 = load ptr, ptr @590, align 8
  call void @free_candy_value(ptr %5459)
  %5460 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2471, align 8
  call void @free_candy_value(ptr %5460)
  %5461 = load ptr, ptr @tag_More.2472, align 8
  call void @free_candy_value(ptr %5461)
  %5462 = load ptr, ptr @tag_Iterator.2473, align 8
  call void @free_candy_value(ptr %5462)
  %5463 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2475, align 8
  call void @free_candy_value(ptr %5463)
  %5464 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2477, align 8
  call void @free_candy_value(ptr %5464)
  %5465 = load ptr, ptr @fun_Core_iterator_where_17, align 8
  call void @free_candy_value(ptr %5465)
  %5466 = load ptr, ptr @fun_Core_iterator_where_17_2, align 8
  call void @free_candy_value(ptr %5466)
  %5467 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2479, align 8
  call void @free_candy_value(ptr %5467)
  %5468 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2481, align 8
  call void @free_candy_value(ptr %5468)
  %5469 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2483, align 8
  call void @free_candy_value(ptr %5469)
  %5470 = load ptr, ptr @591, align 8
  call void @free_candy_value(ptr %5470)
  %5471 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2485, align 8
  call void @free_candy_value(ptr %5471)
  %5472 = load ptr, ptr @592, align 8
  call void @free_candy_value(ptr %5472)
  %5473 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2487, align 8
  call void @free_candy_value(ptr %5473)
  %5474 = load ptr, ptr @593, align 8
  call void @free_candy_value(ptr %5474)
  %5475 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.2489, align 8
  call void @free_candy_value(ptr %5475)
  %5476 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else, align 8
  call void @free_candy_value(ptr %5476)
  %5477 = load ptr, ptr @594, align 8
  call void @free_candy_value(ptr %5477)
  %5478 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5478)
  %5479 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then, align 8
  call void @free_candy_value(ptr %5479)
  %5480 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.2491, align 8
  call void @free_candy_value(ptr %5480)
  %5481 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.2493, align 8
  call void @free_candy_value(ptr %5481)
  %5482 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.2495, align 8
  call void @free_candy_value(ptr %5482)
  %5483 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_then, align 8
  call void @free_candy_value(ptr %5483)
  %5484 = load ptr, ptr @595, align 8
  call void @free_candy_value(ptr %5484)
  %5485 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_else, align 8
  call void @free_candy_value(ptr %5485)
  %5486 = load ptr, ptr @596, align 8
  call void @free_candy_value(ptr %5486)
  %5487 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_then, align 8
  call void @free_candy_value(ptr %5487)
  %5488 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_then.2497, align 8
  call void @free_candy_value(ptr %5488)
  %5489 = load ptr, ptr @597, align 8
  call void @free_candy_value(ptr %5489)
  %5490 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_else.2499, align 8
  call void @free_candy_value(ptr %5490)
  %5491 = load ptr, ptr @598, align 8
  call void @free_candy_value(ptr %5491)
  %5492 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_then.2501, align 8
  call void @free_candy_value(ptr %5492)
  %5493 = load ptr, ptr @599, align 8
  call void @free_candy_value(ptr %5493)
  %5494 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_else, align 8
  call void @free_candy_value(ptr %5494)
  %5495 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_else.2503, align 8
  call void @free_candy_value(ptr %5495)
  %5496 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.2505, align 8
  call void @free_candy_value(ptr %5496)
  %5497 = load ptr, ptr @600, align 8
  call void @free_candy_value(ptr %5497)
  %5498 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.2507, align 8
  call void @free_candy_value(ptr %5498)
  %5499 = load ptr, ptr @601, align 8
  call void @free_candy_value(ptr %5499)
  %5500 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.2509, align 8
  call void @free_candy_value(ptr %5500)
  %5501 = load ptr, ptr @602, align 8
  call void @free_candy_value(ptr %5501)
  %5502 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-1_matched, align 8
  call void @free_candy_value(ptr %5502)
  %5503 = load ptr, ptr @fun_Core_iterator_where_17_2_3_5, align 8
  call void @free_candy_value(ptr %5503)
  %5504 = load ptr, ptr @tag_More.2510, align 8
  call void @free_candy_value(ptr %5504)
  %5505 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6, align 8
  call void @free_candy_value(ptr %5505)
  %5506 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else, align 8
  call void @free_candy_value(ptr %5506)
  %5507 = load ptr, ptr @603, align 8
  call void @free_candy_value(ptr %5507)
  %5508 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5508)
  %5509 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then, align 8
  call void @free_candy_value(ptr %5509)
  %5510 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2512, align 8
  call void @free_candy_value(ptr %5510)
  %5511 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2514, align 8
  call void @free_candy_value(ptr %5511)
  %5512 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2516, align 8
  call void @free_candy_value(ptr %5512)
  %5513 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then, align 8
  call void @free_candy_value(ptr %5513)
  %5514 = load ptr, ptr @604, align 8
  call void @free_candy_value(ptr %5514)
  %5515 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else, align 8
  call void @free_candy_value(ptr %5515)
  %5516 = load ptr, ptr @605, align 8
  call void @free_candy_value(ptr %5516)
  %5517 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then, align 8
  call void @free_candy_value(ptr %5517)
  %5518 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then.2518, align 8
  call void @free_candy_value(ptr %5518)
  %5519 = load ptr, ptr @606, align 8
  call void @free_candy_value(ptr %5519)
  %5520 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else.2520, align 8
  call void @free_candy_value(ptr %5520)
  %5521 = load ptr, ptr @607, align 8
  call void @free_candy_value(ptr %5521)
  %5522 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then.2522, align 8
  call void @free_candy_value(ptr %5522)
  %5523 = load ptr, ptr @608, align 8
  call void @free_candy_value(ptr %5523)
  %5524 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else, align 8
  call void @free_candy_value(ptr %5524)
  %5525 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else.2524, align 8
  call void @free_candy_value(ptr %5525)
  %5526 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2526, align 8
  call void @free_candy_value(ptr %5526)
  %5527 = load ptr, ptr @609, align 8
  call void @free_candy_value(ptr %5527)
  %5528 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2528, align 8
  call void @free_candy_value(ptr %5528)
  %5529 = load ptr, ptr @610, align 8
  call void @free_candy_value(ptr %5529)
  %5530 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2530, align 8
  call void @free_candy_value(ptr %5530)
  %5531 = load ptr, ptr @611, align 8
  call void @free_candy_value(ptr %5531)
  %5532 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_matched, align 8
  call void @free_candy_value(ptr %5532)
  %5533 = load ptr, ptr @tag_More.2531, align 8
  call void @free_candy_value(ptr %5533)
  %5534 = load ptr, ptr @"Core:iterator:219", align 8
  call void @free_candy_value(ptr %5534)
  %5535 = load ptr, ptr @fun_Core_iterator_toList_2.2533, align 8
  call void @free_candy_value(ptr %5535)
  %5536 = load ptr, ptr @612, align 8
  call void @free_candy_value(ptr %5536)
  %5537 = load ptr, ptr @"Core:iterator:226", align 8
  call void @free_candy_value(ptr %5537)
  %5538 = load ptr, ptr @"Core:iterator:230:8", align 8
  call void @free_candy_value(ptr %5538)
  %5539 = load ptr, ptr @fun_Core_iterator_230, align 8
  call void @free_candy_value(ptr %5539)
  %5540 = load ptr, ptr @"Core:iterator:231", align 8
  call void @free_candy_value(ptr %5540)
  %5541 = load ptr, ptr @"fun_Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5541)
  %5542 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2535, align 8
  call void @free_candy_value(ptr %5542)
  %5543 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2537, align 8
  call void @free_candy_value(ptr %5543)
  %5544 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2539, align 8
  call void @free_candy_value(ptr %5544)
  %5545 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2541, align 8
  call void @free_candy_value(ptr %5545)
  %5546 = load ptr, ptr @613, align 8
  call void @free_candy_value(ptr %5546)
  %5547 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2543, align 8
  call void @free_candy_value(ptr %5547)
  %5548 = load ptr, ptr @614, align 8
  call void @free_candy_value(ptr %5548)
  %5549 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2545, align 8
  call void @free_candy_value(ptr %5549)
  %5550 = load ptr, ptr @615, align 8
  call void @free_candy_value(ptr %5550)
  %5551 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2547, align 8
  call void @free_candy_value(ptr %5551)
  %5552 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2549, align 8
  call void @free_candy_value(ptr %5552)
  %5553 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2551, align 8
  call void @free_candy_value(ptr %5553)
  %5554 = load ptr, ptr @616, align 8
  call void @free_candy_value(ptr %5554)
  %5555 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2553, align 8
  call void @free_candy_value(ptr %5555)
  %5556 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2555, align 8
  call void @free_candy_value(ptr %5556)
  %5557 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2557, align 8
  call void @free_candy_value(ptr %5557)
  %5558 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2559, align 8
  call void @free_candy_value(ptr %5558)
  %5559 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2561, align 8
  call void @free_candy_value(ptr %5559)
  %5560 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2563, align 8
  call void @free_candy_value(ptr %5560)
  %5561 = load ptr, ptr @617, align 8
  call void @free_candy_value(ptr %5561)
  %5562 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2565, align 8
  call void @free_candy_value(ptr %5562)
  %5563 = load ptr, ptr @618, align 8
  call void @free_candy_value(ptr %5563)
  %5564 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2567, align 8
  call void @free_candy_value(ptr %5564)
  %5565 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2569, align 8
  call void @free_candy_value(ptr %5565)
  %5566 = load ptr, ptr @619, align 8
  call void @free_candy_value(ptr %5566)
  %5567 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2571, align 8
  call void @free_candy_value(ptr %5567)
  %5568 = load ptr, ptr @620, align 8
  call void @free_candy_value(ptr %5568)
  %5569 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2573, align 8
  call void @free_candy_value(ptr %5569)
  %5570 = load ptr, ptr @621, align 8
  call void @free_candy_value(ptr %5570)
  %5571 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2575, align 8
  call void @free_candy_value(ptr %5571)
  %5572 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2577, align 8
  call void @free_candy_value(ptr %5572)
  %5573 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2579, align 8
  call void @free_candy_value(ptr %5573)
  %5574 = load ptr, ptr @622, align 8
  call void @free_candy_value(ptr %5574)
  %5575 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2581, align 8
  call void @free_candy_value(ptr %5575)
  %5576 = load ptr, ptr @623, align 8
  call void @free_candy_value(ptr %5576)
  %5577 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2583, align 8
  call void @free_candy_value(ptr %5577)
  %5578 = load ptr, ptr @624, align 8
  call void @free_candy_value(ptr %5578)
  %5579 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2585, align 8
  call void @free_candy_value(ptr %5579)
  %5580 = load ptr, ptr @tag_More.2586, align 8
  call void @free_candy_value(ptr %5580)
  %5581 = load ptr, ptr @tag_Iterator.2587, align 8
  call void @free_candy_value(ptr %5581)
  %5582 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2589, align 8
  call void @free_candy_value(ptr %5582)
  %5583 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2591, align 8
  call void @free_candy_value(ptr %5583)
  %5584 = load ptr, ptr @fun_Core_iterator_takeWhile_7.2593, align 8
  call void @free_candy_value(ptr %5584)
  %5585 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2595, align 8
  call void @free_candy_value(ptr %5585)
  %5586 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2597, align 8
  call void @free_candy_value(ptr %5586)
  %5587 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2599, align 8
  call void @free_candy_value(ptr %5587)
  %5588 = load ptr, ptr @625, align 8
  call void @free_candy_value(ptr %5588)
  %5589 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2601, align 8
  call void @free_candy_value(ptr %5589)
  %5590 = load ptr, ptr @626, align 8
  call void @free_candy_value(ptr %5590)
  %5591 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2603, align 8
  call void @free_candy_value(ptr %5591)
  %5592 = load ptr, ptr @627, align 8
  call void @free_candy_value(ptr %5592)
  %5593 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.2605, align 8
  call void @free_candy_value(ptr %5593)
  %5594 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2607, align 8
  call void @free_candy_value(ptr %5594)
  %5595 = load ptr, ptr @628, align 8
  call void @free_candy_value(ptr %5595)
  %5596 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch.2609, align 8
  call void @free_candy_value(ptr %5596)
  %5597 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2611, align 8
  call void @free_candy_value(ptr %5597)
  %5598 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2613, align 8
  call void @free_candy_value(ptr %5598)
  %5599 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2615, align 8
  call void @free_candy_value(ptr %5599)
  %5600 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2617, align 8
  call void @free_candy_value(ptr %5600)
  %5601 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.2619, align 8
  call void @free_candy_value(ptr %5601)
  %5602 = load ptr, ptr @629, align 8
  call void @free_candy_value(ptr %5602)
  %5603 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.2621, align 8
  call void @free_candy_value(ptr %5603)
  %5604 = load ptr, ptr @630, align 8
  call void @free_candy_value(ptr %5604)
  %5605 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.2623, align 8
  call void @free_candy_value(ptr %5605)
  %5606 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.2625, align 8
  call void @free_candy_value(ptr %5606)
  %5607 = load ptr, ptr @631, align 8
  call void @free_candy_value(ptr %5607)
  %5608 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.2627, align 8
  call void @free_candy_value(ptr %5608)
  %5609 = load ptr, ptr @632, align 8
  call void @free_candy_value(ptr %5609)
  %5610 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.2629, align 8
  call void @free_candy_value(ptr %5610)
  %5611 = load ptr, ptr @633, align 8
  call void @free_candy_value(ptr %5611)
  %5612 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.2631, align 8
  call void @free_candy_value(ptr %5612)
  %5613 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.2633, align 8
  call void @free_candy_value(ptr %5613)
  %5614 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2635, align 8
  call void @free_candy_value(ptr %5614)
  %5615 = load ptr, ptr @634, align 8
  call void @free_candy_value(ptr %5615)
  %5616 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2637, align 8
  call void @free_candy_value(ptr %5616)
  %5617 = load ptr, ptr @635, align 8
  call void @free_candy_value(ptr %5617)
  %5618 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2639, align 8
  call void @free_candy_value(ptr %5618)
  %5619 = load ptr, ptr @636, align 8
  call void @free_candy_value(ptr %5619)
  %5620 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched.2641, align 8
  call void @free_candy_value(ptr %5620)
  %5621 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5.2643, align 8
  call void @free_candy_value(ptr %5621)
  %5622 = load ptr, ptr @tag_More.2644, align 8
  call void @free_candy_value(ptr %5622)
  %5623 = load ptr, ptr @"Core:iterator:233", align 8
  call void @free_candy_value(ptr %5623)
  %5624 = load ptr, ptr @fun_Core_iterator_toList_2.2646, align 8
  call void @free_candy_value(ptr %5624)
  %5625 = load ptr, ptr @"Core:iterator:238", align 8
  call void @free_candy_value(ptr %5625)
  %5626 = load ptr, ptr @"Core:iterator:243", align 8
  call void @free_candy_value(ptr %5626)
  %5627 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2648", align 8
  call void @free_candy_value(ptr %5627)
  %5628 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2650, align 8
  call void @free_candy_value(ptr %5628)
  %5629 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2652, align 8
  call void @free_candy_value(ptr %5629)
  %5630 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2654, align 8
  call void @free_candy_value(ptr %5630)
  %5631 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2656, align 8
  call void @free_candy_value(ptr %5631)
  %5632 = load ptr, ptr @637, align 8
  call void @free_candy_value(ptr %5632)
  %5633 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2658, align 8
  call void @free_candy_value(ptr %5633)
  %5634 = load ptr, ptr @638, align 8
  call void @free_candy_value(ptr %5634)
  %5635 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2660, align 8
  call void @free_candy_value(ptr %5635)
  %5636 = load ptr, ptr @639, align 8
  call void @free_candy_value(ptr %5636)
  %5637 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2662, align 8
  call void @free_candy_value(ptr %5637)
  %5638 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2664, align 8
  call void @free_candy_value(ptr %5638)
  %5639 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2666, align 8
  call void @free_candy_value(ptr %5639)
  %5640 = load ptr, ptr @640, align 8
  call void @free_candy_value(ptr %5640)
  %5641 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2668, align 8
  call void @free_candy_value(ptr %5641)
  %5642 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2670, align 8
  call void @free_candy_value(ptr %5642)
  %5643 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2672, align 8
  call void @free_candy_value(ptr %5643)
  %5644 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2674, align 8
  call void @free_candy_value(ptr %5644)
  %5645 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2676, align 8
  call void @free_candy_value(ptr %5645)
  %5646 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2678, align 8
  call void @free_candy_value(ptr %5646)
  %5647 = load ptr, ptr @641, align 8
  call void @free_candy_value(ptr %5647)
  %5648 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2680, align 8
  call void @free_candy_value(ptr %5648)
  %5649 = load ptr, ptr @642, align 8
  call void @free_candy_value(ptr %5649)
  %5650 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2682, align 8
  call void @free_candy_value(ptr %5650)
  %5651 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2684, align 8
  call void @free_candy_value(ptr %5651)
  %5652 = load ptr, ptr @643, align 8
  call void @free_candy_value(ptr %5652)
  %5653 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2686, align 8
  call void @free_candy_value(ptr %5653)
  %5654 = load ptr, ptr @644, align 8
  call void @free_candy_value(ptr %5654)
  %5655 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2688, align 8
  call void @free_candy_value(ptr %5655)
  %5656 = load ptr, ptr @645, align 8
  call void @free_candy_value(ptr %5656)
  %5657 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2690, align 8
  call void @free_candy_value(ptr %5657)
  %5658 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2692, align 8
  call void @free_candy_value(ptr %5658)
  %5659 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2694, align 8
  call void @free_candy_value(ptr %5659)
  %5660 = load ptr, ptr @646, align 8
  call void @free_candy_value(ptr %5660)
  %5661 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2696, align 8
  call void @free_candy_value(ptr %5661)
  %5662 = load ptr, ptr @647, align 8
  call void @free_candy_value(ptr %5662)
  %5663 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2698, align 8
  call void @free_candy_value(ptr %5663)
  %5664 = load ptr, ptr @648, align 8
  call void @free_candy_value(ptr %5664)
  %5665 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2700, align 8
  call void @free_candy_value(ptr %5665)
  %5666 = load ptr, ptr @tag_More.2701, align 8
  call void @free_candy_value(ptr %5666)
  %5667 = load ptr, ptr @tag_Iterator.2702, align 8
  call void @free_candy_value(ptr %5667)
  %5668 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2704, align 8
  call void @free_candy_value(ptr %5668)
  %5669 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2706, align 8
  call void @free_candy_value(ptr %5669)
  %5670 = load ptr, ptr @fun_Core_iterator_take_27.2708, align 8
  call void @free_candy_value(ptr %5670)
  %5671 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_then.2710, align 8
  call void @free_candy_value(ptr %5671)
  %5672 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.2712, align 8
  call void @free_candy_value(ptr %5672)
  %5673 = load ptr, ptr @649, align 8
  call void @free_candy_value(ptr %5673)
  %5674 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.2714, align 8
  call void @free_candy_value(ptr %5674)
  %5675 = load ptr, ptr @650, align 8
  call void @free_candy_value(ptr %5675)
  %5676 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.2716, align 8
  call void @free_candy_value(ptr %5676)
  %5677 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.2718, align 8
  call void @free_candy_value(ptr %5677)
  %5678 = load ptr, ptr @651, align 8
  call void @free_candy_value(ptr %5678)
  %5679 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.2720, align 8
  call void @free_candy_value(ptr %5679)
  %5680 = load ptr, ptr @652, align 8
  call void @free_candy_value(ptr %5680)
  %5681 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.2722, align 8
  call void @free_candy_value(ptr %5681)
  %5682 = load ptr, ptr @653, align 8
  call void @free_candy_value(ptr %5682)
  %5683 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2724, align 8
  call void @free_candy_value(ptr %5683)
  %5684 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2726, align 8
  call void @free_candy_value(ptr %5684)
  %5685 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_else.2728, align 8
  call void @free_candy_value(ptr %5685)
  %5686 = load ptr, ptr @654, align 8
  call void @free_candy_value(ptr %5686)
  %5687 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2730, align 8
  call void @free_candy_value(ptr %5687)
  %5688 = load ptr, ptr @"Core:iterator:245", align 8
  call void @free_candy_value(ptr %5688)
  %5689 = load ptr, ptr @fun_Core_iterator_toList_2.2732, align 8
  call void @free_candy_value(ptr %5689)
  %5690 = load ptr, ptr @655, align 8
  call void @free_candy_value(ptr %5690)
  %5691 = load ptr, ptr @"Core:iterator:251", align 8
  call void @free_candy_value(ptr %5691)
  %5692 = load ptr, ptr @num_12, align 8
  call void @free_candy_value(ptr %5692)
  %5693 = load ptr, ptr @"Core:iterator:256", align 8
  call void @free_candy_value(ptr %5693)
  %5694 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2734", align 8
  call void @free_candy_value(ptr %5694)
  %5695 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2736, align 8
  call void @free_candy_value(ptr %5695)
  %5696 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2738, align 8
  call void @free_candy_value(ptr %5696)
  %5697 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2740, align 8
  call void @free_candy_value(ptr %5697)
  %5698 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2742, align 8
  call void @free_candy_value(ptr %5698)
  %5699 = load ptr, ptr @656, align 8
  call void @free_candy_value(ptr %5699)
  %5700 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2744, align 8
  call void @free_candy_value(ptr %5700)
  %5701 = load ptr, ptr @657, align 8
  call void @free_candy_value(ptr %5701)
  %5702 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2746, align 8
  call void @free_candy_value(ptr %5702)
  %5703 = load ptr, ptr @658, align 8
  call void @free_candy_value(ptr %5703)
  %5704 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2748, align 8
  call void @free_candy_value(ptr %5704)
  %5705 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2750, align 8
  call void @free_candy_value(ptr %5705)
  %5706 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2752, align 8
  call void @free_candy_value(ptr %5706)
  %5707 = load ptr, ptr @659, align 8
  call void @free_candy_value(ptr %5707)
  %5708 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2754, align 8
  call void @free_candy_value(ptr %5708)
  %5709 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2756, align 8
  call void @free_candy_value(ptr %5709)
  %5710 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2758, align 8
  call void @free_candy_value(ptr %5710)
  %5711 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2760, align 8
  call void @free_candy_value(ptr %5711)
  %5712 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2762, align 8
  call void @free_candy_value(ptr %5712)
  %5713 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2764, align 8
  call void @free_candy_value(ptr %5713)
  %5714 = load ptr, ptr @660, align 8
  call void @free_candy_value(ptr %5714)
  %5715 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2766, align 8
  call void @free_candy_value(ptr %5715)
  %5716 = load ptr, ptr @661, align 8
  call void @free_candy_value(ptr %5716)
  %5717 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2768, align 8
  call void @free_candy_value(ptr %5717)
  %5718 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2770, align 8
  call void @free_candy_value(ptr %5718)
  %5719 = load ptr, ptr @662, align 8
  call void @free_candy_value(ptr %5719)
  %5720 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2772, align 8
  call void @free_candy_value(ptr %5720)
  %5721 = load ptr, ptr @663, align 8
  call void @free_candy_value(ptr %5721)
  %5722 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2774, align 8
  call void @free_candy_value(ptr %5722)
  %5723 = load ptr, ptr @664, align 8
  call void @free_candy_value(ptr %5723)
  %5724 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2776, align 8
  call void @free_candy_value(ptr %5724)
  %5725 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2778, align 8
  call void @free_candy_value(ptr %5725)
  %5726 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2780, align 8
  call void @free_candy_value(ptr %5726)
  %5727 = load ptr, ptr @665, align 8
  call void @free_candy_value(ptr %5727)
  %5728 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2782, align 8
  call void @free_candy_value(ptr %5728)
  %5729 = load ptr, ptr @666, align 8
  call void @free_candy_value(ptr %5729)
  %5730 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2784, align 8
  call void @free_candy_value(ptr %5730)
  %5731 = load ptr, ptr @667, align 8
  call void @free_candy_value(ptr %5731)
  %5732 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2786, align 8
  call void @free_candy_value(ptr %5732)
  %5733 = load ptr, ptr @tag_More.2787, align 8
  call void @free_candy_value(ptr %5733)
  %5734 = load ptr, ptr @tag_Iterator.2788, align 8
  call void @free_candy_value(ptr %5734)
  %5735 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2790, align 8
  call void @free_candy_value(ptr %5735)
  %5736 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2792, align 8
  call void @free_candy_value(ptr %5736)
  %5737 = load ptr, ptr @fun_Core_iterator_take_27.2794, align 8
  call void @free_candy_value(ptr %5737)
  %5738 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_then.2796, align 8
  call void @free_candy_value(ptr %5738)
  %5739 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.2798, align 8
  call void @free_candy_value(ptr %5739)
  %5740 = load ptr, ptr @668, align 8
  call void @free_candy_value(ptr %5740)
  %5741 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.2800, align 8
  call void @free_candy_value(ptr %5741)
  %5742 = load ptr, ptr @669, align 8
  call void @free_candy_value(ptr %5742)
  %5743 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.2802, align 8
  call void @free_candy_value(ptr %5743)
  %5744 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.2804, align 8
  call void @free_candy_value(ptr %5744)
  %5745 = load ptr, ptr @670, align 8
  call void @free_candy_value(ptr %5745)
  %5746 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.2806, align 8
  call void @free_candy_value(ptr %5746)
  %5747 = load ptr, ptr @671, align 8
  call void @free_candy_value(ptr %5747)
  %5748 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.2808, align 8
  call void @free_candy_value(ptr %5748)
  %5749 = load ptr, ptr @672, align 8
  call void @free_candy_value(ptr %5749)
  %5750 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2810, align 8
  call void @free_candy_value(ptr %5750)
  %5751 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2812, align 8
  call void @free_candy_value(ptr %5751)
  %5752 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_else.2814, align 8
  call void @free_candy_value(ptr %5752)
  %5753 = load ptr, ptr @673, align 8
  call void @free_candy_value(ptr %5753)
  %5754 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2816, align 8
  call void @free_candy_value(ptr %5754)
  %5755 = load ptr, ptr @"Core:iterator:258", align 8
  call void @free_candy_value(ptr %5755)
  %5756 = load ptr, ptr @fun_Core_iterator_toList_2.2818, align 8
  call void @free_candy_value(ptr %5756)
  %5757 = load ptr, ptr @"Core:iterator:270", align 8
  call void @free_candy_value(ptr %5757)
  %5758 = load ptr, ptr @"Core:iterator:275", align 8
  call void @free_candy_value(ptr %5758)
  %5759 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2820", align 8
  call void @free_candy_value(ptr %5759)
  %5760 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2822, align 8
  call void @free_candy_value(ptr %5760)
  %5761 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2824, align 8
  call void @free_candy_value(ptr %5761)
  %5762 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2826, align 8
  call void @free_candy_value(ptr %5762)
  %5763 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2828, align 8
  call void @free_candy_value(ptr %5763)
  %5764 = load ptr, ptr @674, align 8
  call void @free_candy_value(ptr %5764)
  %5765 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2830, align 8
  call void @free_candy_value(ptr %5765)
  %5766 = load ptr, ptr @675, align 8
  call void @free_candy_value(ptr %5766)
  %5767 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2832, align 8
  call void @free_candy_value(ptr %5767)
  %5768 = load ptr, ptr @676, align 8
  call void @free_candy_value(ptr %5768)
  %5769 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2834, align 8
  call void @free_candy_value(ptr %5769)
  %5770 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2836, align 8
  call void @free_candy_value(ptr %5770)
  %5771 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2838, align 8
  call void @free_candy_value(ptr %5771)
  %5772 = load ptr, ptr @677, align 8
  call void @free_candy_value(ptr %5772)
  %5773 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2840, align 8
  call void @free_candy_value(ptr %5773)
  %5774 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2842, align 8
  call void @free_candy_value(ptr %5774)
  %5775 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2844, align 8
  call void @free_candy_value(ptr %5775)
  %5776 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2846, align 8
  call void @free_candy_value(ptr %5776)
  %5777 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2848, align 8
  call void @free_candy_value(ptr %5777)
  %5778 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2850, align 8
  call void @free_candy_value(ptr %5778)
  %5779 = load ptr, ptr @678, align 8
  call void @free_candy_value(ptr %5779)
  %5780 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2852, align 8
  call void @free_candy_value(ptr %5780)
  %5781 = load ptr, ptr @679, align 8
  call void @free_candy_value(ptr %5781)
  %5782 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2854, align 8
  call void @free_candy_value(ptr %5782)
  %5783 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2856, align 8
  call void @free_candy_value(ptr %5783)
  %5784 = load ptr, ptr @680, align 8
  call void @free_candy_value(ptr %5784)
  %5785 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2858, align 8
  call void @free_candy_value(ptr %5785)
  %5786 = load ptr, ptr @681, align 8
  call void @free_candy_value(ptr %5786)
  %5787 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2860, align 8
  call void @free_candy_value(ptr %5787)
  %5788 = load ptr, ptr @682, align 8
  call void @free_candy_value(ptr %5788)
  %5789 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2862, align 8
  call void @free_candy_value(ptr %5789)
  %5790 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2864, align 8
  call void @free_candy_value(ptr %5790)
  %5791 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2866, align 8
  call void @free_candy_value(ptr %5791)
  %5792 = load ptr, ptr @683, align 8
  call void @free_candy_value(ptr %5792)
  %5793 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2868, align 8
  call void @free_candy_value(ptr %5793)
  %5794 = load ptr, ptr @684, align 8
  call void @free_candy_value(ptr %5794)
  %5795 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2870, align 8
  call void @free_candy_value(ptr %5795)
  %5796 = load ptr, ptr @685, align 8
  call void @free_candy_value(ptr %5796)
  %5797 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2872, align 8
  call void @free_candy_value(ptr %5797)
  %5798 = load ptr, ptr @tag_More.2873, align 8
  call void @free_candy_value(ptr %5798)
  %5799 = load ptr, ptr @tag_Iterator.2874, align 8
  call void @free_candy_value(ptr %5799)
  %5800 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2876, align 8
  call void @free_candy_value(ptr %5800)
  %5801 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2878, align 8
  call void @free_candy_value(ptr %5801)
  %5802 = load ptr, ptr @fun_Core_iterator_skip_26.2880, align 8
  call void @free_candy_value(ptr %5802)
  %5803 = load ptr, ptr @tag_Iterator.2881, align 8
  call void @free_candy_value(ptr %5803)
  %5804 = load ptr, ptr @"Core:iterator:277", align 8
  call void @free_candy_value(ptr %5804)
  %5805 = load ptr, ptr @fun_Core_iterator_toList_2.2883, align 8
  call void @free_candy_value(ptr %5805)
  %5806 = load ptr, ptr @686, align 8
  call void @free_candy_value(ptr %5806)
  %5807 = load ptr, ptr @"Core:iterator:285", align 8
  call void @free_candy_value(ptr %5807)
  %5808 = load ptr, ptr @num_40, align 8
  call void @free_candy_value(ptr %5808)
  %5809 = load ptr, ptr @"Core:iterator:290", align 8
  call void @free_candy_value(ptr %5809)
  %5810 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2885", align 8
  call void @free_candy_value(ptr %5810)
  %5811 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2887, align 8
  call void @free_candy_value(ptr %5811)
  %5812 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2889, align 8
  call void @free_candy_value(ptr %5812)
  %5813 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2891, align 8
  call void @free_candy_value(ptr %5813)
  %5814 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2893, align 8
  call void @free_candy_value(ptr %5814)
  %5815 = load ptr, ptr @687, align 8
  call void @free_candy_value(ptr %5815)
  %5816 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2895, align 8
  call void @free_candy_value(ptr %5816)
  %5817 = load ptr, ptr @688, align 8
  call void @free_candy_value(ptr %5817)
  %5818 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2897, align 8
  call void @free_candy_value(ptr %5818)
  %5819 = load ptr, ptr @689, align 8
  call void @free_candy_value(ptr %5819)
  %5820 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2899, align 8
  call void @free_candy_value(ptr %5820)
  %5821 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2901, align 8
  call void @free_candy_value(ptr %5821)
  %5822 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2903, align 8
  call void @free_candy_value(ptr %5822)
  %5823 = load ptr, ptr @690, align 8
  call void @free_candy_value(ptr %5823)
  %5824 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2905, align 8
  call void @free_candy_value(ptr %5824)
  %5825 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2907, align 8
  call void @free_candy_value(ptr %5825)
  %5826 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2909, align 8
  call void @free_candy_value(ptr %5826)
  %5827 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2911, align 8
  call void @free_candy_value(ptr %5827)
  %5828 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2913, align 8
  call void @free_candy_value(ptr %5828)
  %5829 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2915, align 8
  call void @free_candy_value(ptr %5829)
  %5830 = load ptr, ptr @691, align 8
  call void @free_candy_value(ptr %5830)
  %5831 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2917, align 8
  call void @free_candy_value(ptr %5831)
  %5832 = load ptr, ptr @692, align 8
  call void @free_candy_value(ptr %5832)
  %5833 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2919, align 8
  call void @free_candy_value(ptr %5833)
  %5834 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2921, align 8
  call void @free_candy_value(ptr %5834)
  %5835 = load ptr, ptr @693, align 8
  call void @free_candy_value(ptr %5835)
  %5836 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2923, align 8
  call void @free_candy_value(ptr %5836)
  %5837 = load ptr, ptr @694, align 8
  call void @free_candy_value(ptr %5837)
  %5838 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2925, align 8
  call void @free_candy_value(ptr %5838)
  %5839 = load ptr, ptr @695, align 8
  call void @free_candy_value(ptr %5839)
  %5840 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2927, align 8
  call void @free_candy_value(ptr %5840)
  %5841 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2929, align 8
  call void @free_candy_value(ptr %5841)
  %5842 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2931, align 8
  call void @free_candy_value(ptr %5842)
  %5843 = load ptr, ptr @696, align 8
  call void @free_candy_value(ptr %5843)
  %5844 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2933, align 8
  call void @free_candy_value(ptr %5844)
  %5845 = load ptr, ptr @697, align 8
  call void @free_candy_value(ptr %5845)
  %5846 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2935, align 8
  call void @free_candy_value(ptr %5846)
  %5847 = load ptr, ptr @698, align 8
  call void @free_candy_value(ptr %5847)
  %5848 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2937, align 8
  call void @free_candy_value(ptr %5848)
  %5849 = load ptr, ptr @tag_More.2938, align 8
  call void @free_candy_value(ptr %5849)
  %5850 = load ptr, ptr @tag_Iterator.2939, align 8
  call void @free_candy_value(ptr %5850)
  %5851 = load ptr, ptr @fun_Core_controlFlow_recursive_16.2941, align 8
  call void @free_candy_value(ptr %5851)
  %5852 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2943, align 8
  call void @free_candy_value(ptr %5852)
  %5853 = load ptr, ptr @fun_Core_iterator_skip_26.2945, align 8
  call void @free_candy_value(ptr %5853)
  %5854 = load ptr, ptr @tag_Iterator.2946, align 8
  call void @free_candy_value(ptr %5854)
  %5855 = load ptr, ptr @"Core:iterator:292", align 8
  call void @free_candy_value(ptr %5855)
  %5856 = load ptr, ptr @fun_Core_iterator_toList_2.2948, align 8
  call void @free_candy_value(ptr %5856)
  %5857 = load ptr, ptr @"Core:iterator:294", align 8
  call void @free_candy_value(ptr %5857)
  %5858 = load ptr, ptr @"Core:iterator:301", align 8
  call void @free_candy_value(ptr %5858)
  %5859 = load ptr, ptr @"fun_Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5859)
  %5860 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.2950, align 8
  call void @free_candy_value(ptr %5860)
  %5861 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2952, align 8
  call void @free_candy_value(ptr %5861)
  %5862 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2954, align 8
  call void @free_candy_value(ptr %5862)
  %5863 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2956, align 8
  call void @free_candy_value(ptr %5863)
  %5864 = load ptr, ptr @699, align 8
  call void @free_candy_value(ptr %5864)
  %5865 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2958, align 8
  call void @free_candy_value(ptr %5865)
  %5866 = load ptr, ptr @700, align 8
  call void @free_candy_value(ptr %5866)
  %5867 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2960, align 8
  call void @free_candy_value(ptr %5867)
  %5868 = load ptr, ptr @701, align 8
  call void @free_candy_value(ptr %5868)
  %5869 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2962, align 8
  call void @free_candy_value(ptr %5869)
  %5870 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2964, align 8
  call void @free_candy_value(ptr %5870)
  %5871 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2966, align 8
  call void @free_candy_value(ptr %5871)
  %5872 = load ptr, ptr @702, align 8
  call void @free_candy_value(ptr %5872)
  %5873 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2968, align 8
  call void @free_candy_value(ptr %5873)
  %5874 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2970, align 8
  call void @free_candy_value(ptr %5874)
  %5875 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2972, align 8
  call void @free_candy_value(ptr %5875)
  %5876 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2974, align 8
  call void @free_candy_value(ptr %5876)
  %5877 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2976, align 8
  call void @free_candy_value(ptr %5877)
  %5878 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2978, align 8
  call void @free_candy_value(ptr %5878)
  %5879 = load ptr, ptr @703, align 8
  call void @free_candy_value(ptr %5879)
  %5880 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2980, align 8
  call void @free_candy_value(ptr %5880)
  %5881 = load ptr, ptr @704, align 8
  call void @free_candy_value(ptr %5881)
  %5882 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2982, align 8
  call void @free_candy_value(ptr %5882)
  %5883 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2984, align 8
  call void @free_candy_value(ptr %5883)
  %5884 = load ptr, ptr @705, align 8
  call void @free_candy_value(ptr %5884)
  %5885 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2986, align 8
  call void @free_candy_value(ptr %5885)
  %5886 = load ptr, ptr @706, align 8
  call void @free_candy_value(ptr %5886)
  %5887 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2988, align 8
  call void @free_candy_value(ptr %5887)
  %5888 = load ptr, ptr @707, align 8
  call void @free_candy_value(ptr %5888)
  %5889 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2990, align 8
  call void @free_candy_value(ptr %5889)
  %5890 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2992, align 8
  call void @free_candy_value(ptr %5890)
  %5891 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2994, align 8
  call void @free_candy_value(ptr %5891)
  %5892 = load ptr, ptr @708, align 8
  call void @free_candy_value(ptr %5892)
  %5893 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2996, align 8
  call void @free_candy_value(ptr %5893)
  %5894 = load ptr, ptr @709, align 8
  call void @free_candy_value(ptr %5894)
  %5895 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2998, align 8
  call void @free_candy_value(ptr %5895)
  %5896 = load ptr, ptr @710, align 8
  call void @free_candy_value(ptr %5896)
  %5897 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.3000, align 8
  call void @free_candy_value(ptr %5897)
  %5898 = load ptr, ptr @tag_More.3001, align 8
  call void @free_candy_value(ptr %5898)
  %5899 = load ptr, ptr @tag_Iterator.3002, align 8
  call void @free_candy_value(ptr %5899)
  %5900 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3004, align 8
  call void @free_candy_value(ptr %5900)
  %5901 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.3006, align 8
  call void @free_candy_value(ptr %5901)
  %5902 = load ptr, ptr @fun_Core_iterator_windowed_57.3008, align 8
  call void @free_candy_value(ptr %5902)
  %5903 = load ptr, ptr @fun_Core_iterator_windowed_57_18.3010, align 8
  call void @free_candy_value(ptr %5903)
  %5904 = load ptr, ptr @fun_Core_iterator_windowed_57_19.3012, align 8
  call void @free_candy_value(ptr %5904)
  %5905 = load ptr, ptr @fun_Core_iterator_windowed_57_24.3014, align 8
  call void @free_candy_value(ptr %5905)
  %5906 = load ptr, ptr @fun_Core_iterator_skip_26.3016, align 8
  call void @free_candy_value(ptr %5906)
  %5907 = load ptr, ptr @tag_Iterator.3017, align 8
  call void @free_candy_value(ptr %5907)
  %5908 = load ptr, ptr @tag_More.3018, align 8
  call void @free_candy_value(ptr %5908)
  %5909 = load ptr, ptr @"Core:iterator:303", align 8
  call void @free_candy_value(ptr %5909)
  %5910 = load ptr, ptr @fun_Core_iterator_toList_2.3020, align 8
  call void @free_candy_value(ptr %5910)
  %5911 = load ptr, ptr @711, align 8
  call void @free_candy_value(ptr %5911)
  %5912 = load ptr, ptr @712, align 8
  call void @free_candy_value(ptr %5912)
  %5913 = load ptr, ptr @713, align 8
  call void @free_candy_value(ptr %5913)
  %5914 = load ptr, ptr @"Core:iterator:320", align 8
  call void @free_candy_value(ptr %5914)
  %5915 = load ptr, ptr @"Core:iterator:325", align 8
  call void @free_candy_value(ptr %5915)
  %5916 = load ptr, ptr @"fun_Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  call void @free_candy_value(ptr %5916)
  %5917 = load ptr, ptr @fun_Core_iterator_wrapSafe_14.3022, align 8
  call void @free_candy_value(ptr %5917)
  %5918 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3024, align 8
  call void @free_candy_value(ptr %5918)
  %5919 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3026, align 8
  call void @free_candy_value(ptr %5919)
  %5920 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3028, align 8
  call void @free_candy_value(ptr %5920)
  %5921 = load ptr, ptr @714, align 8
  call void @free_candy_value(ptr %5921)
  %5922 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.3030, align 8
  call void @free_candy_value(ptr %5922)
  %5923 = load ptr, ptr @715, align 8
  call void @free_candy_value(ptr %5923)
  %5924 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.3032, align 8
  call void @free_candy_value(ptr %5924)
  %5925 = load ptr, ptr @716, align 8
  call void @free_candy_value(ptr %5925)
  %5926 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.3034, align 8
  call void @free_candy_value(ptr %5926)
  %5927 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.3036, align 8
  call void @free_candy_value(ptr %5927)
  %5928 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3038, align 8
  call void @free_candy_value(ptr %5928)
  %5929 = load ptr, ptr @717, align 8
  call void @free_candy_value(ptr %5929)
  %5930 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.3040, align 8
  call void @free_candy_value(ptr %5930)
  %5931 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3042, align 8
  call void @free_candy_value(ptr %5931)
  %5932 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3044, align 8
  call void @free_candy_value(ptr %5932)
  %5933 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3046, align 8
  call void @free_candy_value(ptr %5933)
  %5934 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3048, align 8
  call void @free_candy_value(ptr %5934)
  %5935 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.3050, align 8
  call void @free_candy_value(ptr %5935)
  %5936 = load ptr, ptr @718, align 8
  call void @free_candy_value(ptr %5936)
  %5937 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.3052, align 8
  call void @free_candy_value(ptr %5937)
  %5938 = load ptr, ptr @719, align 8
  call void @free_candy_value(ptr %5938)
  %5939 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.3054, align 8
  call void @free_candy_value(ptr %5939)
  %5940 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.3056, align 8
  call void @free_candy_value(ptr %5940)
  %5941 = load ptr, ptr @720, align 8
  call void @free_candy_value(ptr %5941)
  %5942 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.3058, align 8
  call void @free_candy_value(ptr %5942)
  %5943 = load ptr, ptr @721, align 8
  call void @free_candy_value(ptr %5943)
  %5944 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.3060, align 8
  call void @free_candy_value(ptr %5944)
  %5945 = load ptr, ptr @722, align 8
  call void @free_candy_value(ptr %5945)
  %5946 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.3062, align 8
  call void @free_candy_value(ptr %5946)
  %5947 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.3064, align 8
  call void @free_candy_value(ptr %5947)
  %5948 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3066, align 8
  call void @free_candy_value(ptr %5948)
  %5949 = load ptr, ptr @723, align 8
  call void @free_candy_value(ptr %5949)
  %5950 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3068, align 8
  call void @free_candy_value(ptr %5950)
  %5951 = load ptr, ptr @724, align 8
  call void @free_candy_value(ptr %5951)
  %5952 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3070, align 8
  call void @free_candy_value(ptr %5952)
  %5953 = load ptr, ptr @725, align 8
  call void @free_candy_value(ptr %5953)
  %5954 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.3072, align 8
  call void @free_candy_value(ptr %5954)
  %5955 = load ptr, ptr @tag_More.3073, align 8
  call void @free_candy_value(ptr %5955)
  %5956 = load ptr, ptr @tag_Iterator.3074, align 8
  call void @free_candy_value(ptr %5956)
  %5957 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3076, align 8
  call void @free_candy_value(ptr %5957)
  %5958 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.3078, align 8
  call void @free_candy_value(ptr %5958)
  %5959 = load ptr, ptr @"Core:iterator:327", align 8
  call void @free_candy_value(ptr %5959)
  %5960 = load ptr, ptr @fun_Core_iterator_toList_2.3080, align 8
  call void @free_candy_value(ptr %5960)
  %5961 = load ptr, ptr @726, align 8
  call void @free_candy_value(ptr %5961)
  %5962 = load ptr, ptr @727, align 8
  call void @free_candy_value(ptr %5962)
  %5963 = load ptr, ptr @728, align 8
  call void @free_candy_value(ptr %5963)
  %5964 = load ptr, ptr @729, align 8
  call void @free_candy_value(ptr %5964)
  %5965 = load ptr, ptr @"Core:iterator:343", align 8
  call void @free_candy_value(ptr %5965)
  %5966 = load ptr, ptr @tag_FixedDecimal.3081, align 8
  call void @free_candy_value(ptr %5966)
  %5967 = load ptr, ptr @"Examples:sqrt:sqrt:68:22", align 8
  call void @free_candy_value(ptr %5967)
  %5968 = load ptr, ptr @"Examples:sqrt:sqrt:68:23", align 8
  call void @free_candy_value(ptr %5968)
  %5969 = load ptr, ptr @"Examples:sqrt:sqrt:68:33", align 8
  call void @free_candy_value(ptr %5969)
  %5970 = load ptr, ptr @"Examples:sqrt:sqrt:68:45", align 8
  call void @free_candy_value(ptr %5970)
  %5971 = load ptr, ptr @"Examples:sqrt:sqrt:68:47:2", align 8
  call void @free_candy_value(ptr %5971)
  %5972 = load ptr, ptr @"Examples:sqrt:sqrt:68:48", align 8
  call void @free_candy_value(ptr %5972)
  %5973 = load ptr, ptr @"Examples:sqrt:sqrt:69", align 8
  call void @free_candy_value(ptr %5973)
  %5974 = load ptr, ptr @num_65, align 8
  call void @free_candy_value(ptr %5974)
  %5975 = load ptr, ptr @tag_FixedDecimal.3082, align 8
  call void @free_candy_value(ptr %5975)
  %5976 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3084, align 8
  call void @free_candy_value(ptr %5976)
  %5977 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.3086, align 8
  call void @free_candy_value(ptr %5977)
  %5978 = load ptr, ptr @fun_Examples_sqrt_sqrt_68, align 8
  call void @free_candy_value(ptr %5978)
  %5979 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3088, align 8
  call void @free_candy_value(ptr %5979)
  %5980 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3090, align 8
  call void @free_candy_value(ptr %5980)
  %5981 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3092, align 8
  call void @free_candy_value(ptr %5981)
  %5982 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3094, align 8
  call void @free_candy_value(ptr %5982)
  %5983 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.3096, align 8
  call void @free_candy_value(ptr %5983)
  %5984 = load ptr, ptr @730, align 8
  call void @free_candy_value(ptr %5984)
  %5985 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.3098, align 8
  call void @free_candy_value(ptr %5985)
  %5986 = load ptr, ptr @731, align 8
  call void @free_candy_value(ptr %5986)
  %5987 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.3100, align 8
  call void @free_candy_value(ptr %5987)
  %5988 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.3102, align 8
  call void @free_candy_value(ptr %5988)
  %5989 = load ptr, ptr @732, align 8
  call void @free_candy_value(ptr %5989)
  %5990 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.3104, align 8
  call void @free_candy_value(ptr %5990)
  %5991 = load ptr, ptr @733, align 8
  call void @free_candy_value(ptr %5991)
  %5992 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.3106, align 8
  call void @free_candy_value(ptr %5992)
  %5993 = load ptr, ptr @734, align 8
  call void @free_candy_value(ptr %5993)
  %5994 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.3108, align 8
  call void @free_candy_value(ptr %5994)
  %5995 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.3110, align 8
  call void @free_candy_value(ptr %5995)
  %5996 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3112, align 8
  call void @free_candy_value(ptr %5996)
  %5997 = load ptr, ptr @735, align 8
  call void @free_candy_value(ptr %5997)
  %5998 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3114, align 8
  call void @free_candy_value(ptr %5998)
  %5999 = load ptr, ptr @736, align 8
  call void @free_candy_value(ptr %5999)
  %6000 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3116, align 8
  call void @free_candy_value(ptr %6000)
  %6001 = load ptr, ptr @737, align 8
  call void @free_candy_value(ptr %6001)
  %6002 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3118, align 8
  call void @free_candy_value(ptr %6002)
  %6003 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.3120, align 8
  call void @free_candy_value(ptr %6003)
  %6004 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3122, align 8
  call void @free_candy_value(ptr %6004)
  %6005 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.3124, align 8
  call void @free_candy_value(ptr %6005)
  %6006 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3126, align 8
  call void @free_candy_value(ptr %6006)
  %6007 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.3128, align 8
  call void @free_candy_value(ptr %6007)
  %6008 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3130, align 8
  call void @free_candy_value(ptr %6008)
  %6009 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.3132, align 8
  call void @free_candy_value(ptr %6009)
  %6010 = load ptr, ptr @fun_Examples_sqrt_sqrt_68_46, align 8
  call void @free_candy_value(ptr %6010)
  %6011 = load ptr, ptr @fun_Examples_sqrt_sqrt_68_47, align 8
  call void @free_candy_value(ptr %6011)
  %6012 = load ptr, ptr @"Examples:sqrt:main:41", align 8
  call void @free_candy_value(ptr %6012)
  %6013 = load ptr, ptr @"Examples:sqrt:main:42", align 8
  call void @free_candy_value(ptr %6013)
  %6014 = load ptr, ptr @"Examples:sqrt:main:43", align 8
  call void @free_candy_value(ptr %6014)
  %6015 = load ptr, ptr @"Examples:sqrt:main:45:0", align 8
  call void @free_candy_value(ptr %6015)
  %6016 = load ptr, ptr @"Examples:sqrt:main:46", align 8
  call void @free_candy_value(ptr %6016)
  %6017 = load ptr, ptr @"text_The root of 2 is ", align 8
  call void @free_candy_value(ptr %6017)
  %6018 = load ptr, ptr @"Examples:sqrt:main:49", align 8
  call void @free_candy_value(ptr %6018)
  %6019 = load ptr, ptr @fun_Examples_sqrt_main, align 8
  call void @free_candy_value(ptr %6019)
  %6020 = load ptr, ptr @fun_Examples_sqrt_main_44, align 8
  call void @free_candy_value(ptr %6020)
  %6021 = load ptr, ptr @fun_Examples_sqrt_main_45, align 8
  call void @free_candy_value(ptr %6021)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_and(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_divide_truncating(ptr, ptr)

declare ptr @candy_builtin_int_multiply(ptr, ptr)

declare ptr @candy_builtin_int_remainder(ptr, ptr)

declare ptr @candy_builtin_int_shift_right(ptr, ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_insert(ptr, ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_print(ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_text_get_range(ptr, ptr, ptr)

declare ptr @candy_builtin_text_length(ptr)

declare ptr @candy_builtin_text_starts_with(ptr, ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_gen":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__not(ptr %0) {
Builtins__not:
  %1 = load ptr, ptr @tag_True, align 8
  %2 = call ptr @candy_builtin_equals(ptr %1, ptr %0)
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__not_1_equals_else, align 8
  %6 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %7 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  %8 = call ptr @candy_builtin_if_else(ptr %2, ptr %6, ptr %7)
  %9 = load ptr, ptr @num_0, align 8
  %10 = call ptr @candy_builtin_list_get(ptr %8, ptr %9)
  %11 = load ptr, ptr @tag_Match, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Builtins__not_1_case-0_didNotMatch, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %16 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %17 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %12, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Builtins__not_1_equals_else(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__not_1_case-0_didNotMatch(ptr %0) {
Builtins__not_1_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.1, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__not_1_equals_else.2, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__not_1_equals_else.2, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Builtins__not_1_case-1_didNotMatch, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %20 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %16, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__not_1_equals_else.1(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__not_1_case-1_didNotMatch() {
Builtins__not_1_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch() {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch() {
Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo(ptr %0, ptr %1) {
Builtins__isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Less, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %12, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %18 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %19 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %14, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %12, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %31 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  %34 = load ptr, ptr @num_0, align 8
  %35 = call ptr @candy_builtin_list_get(ptr %33, ptr %34)
  %36 = load ptr, ptr @tag_Match, align 8
  %37 = call ptr @candy_builtin_equals(ptr %35, ptr %36)
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr }, ptr %38, i32 0, i32 0
  store ptr %12, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %41 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %42 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %37, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.3, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.4, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.4, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.3(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Greater, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.5, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.6, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.6, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.5(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %0)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %9 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_list_get(ptr %10, ptr %11)
  %13 = load ptr, ptr @tag_Match, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %10, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %21 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %27, ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr null)
  %33 = call ptr @candy_builtin_type_of(ptr %1)
  %34 = load ptr, ptr @tag_Function, align 8
  %35 = call ptr @candy_builtin_equals(ptr %33, ptr %34)
  %36 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %33, ptr %38)
  %40 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %41 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr %41)
  %43 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %44 = load ptr, ptr @num_0, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %47 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr null)
  %48 = call ptr @candy_builtin_type_of(ptr %2)
  %49 = load ptr, ptr @tag_Function, align 8
  %50 = call ptr @candy_builtin_equals(ptr %48, ptr %49)
  %51 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %51, ptr null)
  %53 = load ptr, ptr @tag_Function, align 8
  %54 = call ptr @candy_builtin_equals(ptr %48, ptr %53)
  %55 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %56 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %57 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr %56)
  %58 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %59 = load ptr, ptr @num_0, align 8
  %60 = call ptr @candy_builtin_equals(ptr %58, ptr %59)
  %61 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %62 = call ptr @"anonymous_$generated__needs"(ptr %60, ptr %61, ptr null)
  %63 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %63
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.7, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__ifElse_1_equals_else.8, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.8, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__ifElse_1_equals_else.7(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @7, align 8
  ret ptr @7
}

define ptr @Builtins__intDivideTruncating(ptr %0, ptr %1) {
Builtins__intDivideTruncating:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_divide_truncating(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intRemainder(ptr %0, ptr %1) {
Builtins__intRemainder:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_remainder(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intShiftRight(ptr %0, ptr %1) {
Builtins__intShiftRight:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %7, ptr %12)
  %14 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Builtins::intShiftRight:14", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %17)
  %19 = load ptr, ptr @tag_Greater, align 8
  %20 = call ptr @candy_builtin_equals(ptr %19, ptr %18)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %18, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %24 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %25 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %26, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %18, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %37 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %38 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %30, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_0, align 8
  %41 = call ptr @candy_builtin_list_get(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Match, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr }, ptr %44, i32 0, i32 0
  store ptr %18, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %47 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %48 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %49 = call ptr @candy_builtin_if_else(ptr %43, ptr %47, ptr %48)
  %50 = call ptr @candy_builtin_type_of(ptr %1)
  %51 = load ptr, ptr @tag_Text, align 8
  %52 = call ptr @candy_builtin_equals(ptr %50, ptr %51)
  %53 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %54 = getelementptr inbounds { ptr }, ptr %53, i32 0, i32 0
  store ptr %1, ptr %54, align 8
  %55 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_25, ptr %53, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %55, ptr @fun_Builtins__intShiftRight_25, align 8
  %56 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %57 = getelementptr inbounds { ptr }, ptr %56, i32 0, i32 0
  store ptr %1, ptr %57, align 8
  %58 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_26, ptr %56, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %58, ptr @fun_Builtins__intShiftRight_26, align 8
  %59 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  %60 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  %61 = call ptr @candy_builtin_if_else(ptr %52, ptr %59, ptr %60)
  %62 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %63 = call ptr @candy_builtin_text_concatenate(ptr %62, ptr %61)
  %64 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %65 = call ptr @candy_builtin_text_concatenate(ptr %63, ptr %64)
  %66 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %65, ptr null)
  %67 = load ptr, ptr @tag_Int, align 8
  %68 = call ptr @candy_builtin_equals(ptr %7, ptr %67)
  %69 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %70 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %71 = call ptr @"anonymous_$generated__needs"(ptr %68, ptr %69, ptr %70)
  %72 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %73 = load ptr, ptr @"Builtins::fitsInRustU128:8", align 8
  %74 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %72, ptr %73)
  %75 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %76 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %77 = call ptr @candy_builtin_if_else(ptr %20, ptr %75, ptr %76)
  %78 = load ptr, ptr @num_0, align 8
  %79 = call ptr @candy_builtin_list_get(ptr %77, ptr %78)
  %80 = load ptr, ptr @tag_Match, align 8
  %81 = call ptr @candy_builtin_equals(ptr %79, ptr %80)
  %82 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %83 = getelementptr inbounds { ptr }, ptr %82, i32 0, i32 0
  store ptr %77, ptr %83, align 8
  %84 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then.13, ptr %82, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %84, ptr @fun_Builtins__isNonNegative_13_isMatch_then.14, align 8
  %85 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.14, align 8
  %86 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %87 = call ptr @candy_builtin_if_else(ptr %81, ptr %85, ptr %86)
  %88 = load ptr, ptr @num_0, align 8
  %89 = call ptr @candy_builtin_list_get(ptr %87, ptr %88)
  %90 = load ptr, ptr @tag_Match, align 8
  %91 = call ptr @candy_builtin_equals(ptr %89, ptr %90)
  %92 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %93 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %94 = call ptr @candy_builtin_if_else(ptr %91, ptr %92, ptr %93)
  %95 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %96 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %97 = call ptr @"anonymous_$generated__needs"(ptr %94, ptr %95, ptr %96)
  %98 = load ptr, ptr @tag_Int, align 8
  %99 = call ptr @candy_builtin_equals(ptr %7, ptr %98)
  %100 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %101 = load ptr, ptr @"Builtins::fitsInRustU128:16", align 8
  %102 = call ptr @"anonymous_$generated__needs"(ptr %99, ptr %100, ptr %101)
  %103 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %104 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %103)
  %105 = load ptr, ptr @tag_Less, align 8
  %106 = call ptr @candy_builtin_equals(ptr %105, ptr %104)
  %107 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %108 = getelementptr inbounds { ptr }, ptr %107, i32 0, i32 0
  store ptr %104, ptr %108, align 8
  %109 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.15, ptr %107, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %109, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.16, align 8
  %110 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %111 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.16, align 8
  %112 = call ptr @candy_builtin_if_else(ptr %106, ptr %110, ptr %111)
  %113 = load ptr, ptr @num_0, align 8
  %114 = call ptr @candy_builtin_list_get(ptr %112, ptr %113)
  %115 = load ptr, ptr @tag_Match, align 8
  %116 = call ptr @candy_builtin_equals(ptr %114, ptr %115)
  %117 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %118 = getelementptr inbounds { ptr }, ptr %117, i32 0, i32 0
  store ptr %112, ptr %118, align 8
  %119 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then.17, ptr %117, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %119, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then.18, align 8
  %120 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %121 = getelementptr inbounds { ptr }, ptr %120, i32 0, i32 0
  store ptr %104, ptr %121, align 8
  %122 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else.19, ptr %120, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %122, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else.20, align 8
  %123 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then.18, align 8
  %124 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else.20, align 8
  %125 = call ptr @candy_builtin_if_else(ptr %116, ptr %123, ptr %124)
  %126 = load ptr, ptr @num_0, align 8
  %127 = call ptr @candy_builtin_list_get(ptr %125, ptr %126)
  %128 = load ptr, ptr @tag_Match, align 8
  %129 = call ptr @candy_builtin_equals(ptr %127, ptr %128)
  %130 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %131 = getelementptr inbounds { ptr }, ptr %130, i32 0, i32 0
  store ptr %104, ptr %131, align 8
  %132 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.23, ptr %130, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %132, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.24, align 8
  %133 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %134 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.24, align 8
  %135 = call ptr @candy_builtin_if_else(ptr %129, ptr %133, ptr %134)
  %136 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %137 = call ptr @"anonymous_$generated__needs"(ptr %135, ptr %136, ptr null)
  %138 = call ptr @candy_builtin_int_shift_right(ptr %0, ptr %1)
  ret ptr %138
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.9, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.10, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.10, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isNonNegative_13_equals_else.9(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @9, align 8
  ret ptr @9
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Less, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.11, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.12, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.12, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isNonNegative_13_equals_else.11(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @10, align 8
  ret ptr @10
}

define ptr @Builtins__intShiftRight_25(ptr %0) {
Builtins__intShiftRight_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftRight_26(ptr %0) {
Builtins__intShiftRight_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__isNonNegative_13_isMatch_then.13(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.15(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @11, align 8
  ret ptr @11
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then.17(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else.19(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.21, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.22, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.22, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.21(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.23(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Greater, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.25, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.26, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.26, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.25(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @13, align 8
  ret ptr @13
}

define ptr @Builtins__listInsert(ptr %0, ptr %1, ptr %2) {
Builtins__listInsert:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %8, ptr %13)
  %15 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Builtins::listInsert:14", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %18)
  %20 = load ptr, ptr @tag_Greater, align 8
  %21 = call ptr @candy_builtin_equals(ptr %20, ptr %19)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %19, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.27, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__isNonNegative_13_equals_else.28, align 8
  %25 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %26 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.28, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %21, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then.29, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Builtins__isNonNegative_13_isMatch_then.30, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %19, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else.31, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Builtins__isNonNegative_13_isMatch_else.32, align 8
  %38 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.30, align 8
  %39 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.32, align 8
  %40 = call ptr @candy_builtin_if_else(ptr %31, ptr %38, ptr %39)
  %41 = load ptr, ptr @num_0, align 8
  %42 = call ptr @candy_builtin_list_get(ptr %40, ptr %41)
  %43 = load ptr, ptr @tag_Match, align 8
  %44 = call ptr @candy_builtin_equals(ptr %42, ptr %43)
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr }, ptr %45, i32 0, i32 0
  store ptr %19, ptr %46, align 8
  %47 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch.35, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %47, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.36, align 8
  %48 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %49 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.36, align 8
  %50 = call ptr @candy_builtin_if_else(ptr %44, ptr %48, ptr %49)
  %51 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %51, ptr null)
  %53 = call ptr @candy_builtin_list_length(ptr %0)
  %54 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %53)
  %55 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %56 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr null)
  %57 = call ptr @candy_builtin_list_insert(ptr %0, ptr %1, ptr %2)
  ret ptr %57
}

define ptr @Builtins__isNonNegative_13_equals_else.27(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Builtins__isNonNegative_13_isMatch_then.29(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else.31(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.33, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.34, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.34, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isNonNegative_13_equals_else.33(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @15, align 8
  ret ptr @15
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch.35(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Less, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.37, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.38, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.38, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isNonNegative_13_equals_else.37(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @16, align 8
  ret ptr @16
}

define ptr @Builtins__textGetRange(ptr %0, ptr %1, ptr %2) {
Builtins__textGetRange:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %8, ptr %13)
  %15 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Builtins::textGetRange:14", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %18)
  %20 = load ptr, ptr @tag_Greater, align 8
  %21 = call ptr @candy_builtin_equals(ptr %20, ptr %19)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %19, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.39, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__isNonNegative_13_equals_else.40, align 8
  %25 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %26 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.40, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %21, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then.41, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Builtins__isNonNegative_13_isMatch_then.42, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %19, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else.43, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Builtins__isNonNegative_13_isMatch_else.44, align 8
  %38 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.42, align 8
  %39 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.44, align 8
  %40 = call ptr @candy_builtin_if_else(ptr %31, ptr %38, ptr %39)
  %41 = load ptr, ptr @num_0, align 8
  %42 = call ptr @candy_builtin_list_get(ptr %40, ptr %41)
  %43 = load ptr, ptr @tag_Match, align 8
  %44 = call ptr @candy_builtin_equals(ptr %42, ptr %43)
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr }, ptr %45, i32 0, i32 0
  store ptr %19, ptr %46, align 8
  %47 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch.47, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %47, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.48, align 8
  %48 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %49 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.48, align 8
  %50 = call ptr @candy_builtin_if_else(ptr %44, ptr %48, ptr %49)
  %51 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %51, ptr null)
  %53 = call ptr @candy_builtin_text_length(ptr %0)
  %54 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %53)
  %55 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %56 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr null)
  %57 = call ptr @candy_builtin_type_of(ptr %2)
  %58 = load ptr, ptr @tag_Int, align 8
  %59 = call ptr @candy_builtin_equals(ptr %57, ptr %58)
  %60 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %59, ptr %60, ptr null)
  %62 = load ptr, ptr @tag_Int, align 8
  %63 = call ptr @candy_builtin_equals(ptr %57, ptr %62)
  %64 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %65 = load ptr, ptr @"Builtins::textGetRange:36", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = load ptr, ptr @num_0, align 8
  %68 = call ptr @candy_builtin_int_compare_to(ptr %2, ptr %67)
  %69 = load ptr, ptr @tag_Greater, align 8
  %70 = call ptr @candy_builtin_equals(ptr %69, ptr %68)
  %71 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %72 = getelementptr inbounds { ptr }, ptr %71, i32 0, i32 0
  store ptr %68, ptr %72, align 8
  %73 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.51, ptr %71, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %73, ptr @fun_Builtins__isNonNegative_13_equals_else.52, align 8
  %74 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %75 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.52, align 8
  %76 = call ptr @candy_builtin_if_else(ptr %70, ptr %74, ptr %75)
  %77 = load ptr, ptr @num_0, align 8
  %78 = call ptr @candy_builtin_list_get(ptr %76, ptr %77)
  %79 = load ptr, ptr @tag_Match, align 8
  %80 = call ptr @candy_builtin_equals(ptr %78, ptr %79)
  %81 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %82 = getelementptr inbounds { ptr }, ptr %81, i32 0, i32 0
  store ptr %76, ptr %82, align 8
  %83 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then.53, ptr %81, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %83, ptr @fun_Builtins__isNonNegative_13_isMatch_then.54, align 8
  %84 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %85 = getelementptr inbounds { ptr }, ptr %84, i32 0, i32 0
  store ptr %68, ptr %85, align 8
  %86 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else.55, ptr %84, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %86, ptr @fun_Builtins__isNonNegative_13_isMatch_else.56, align 8
  %87 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.54, align 8
  %88 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.56, align 8
  %89 = call ptr @candy_builtin_if_else(ptr %80, ptr %87, ptr %88)
  %90 = load ptr, ptr @num_0, align 8
  %91 = call ptr @candy_builtin_list_get(ptr %89, ptr %90)
  %92 = load ptr, ptr @tag_Match, align 8
  %93 = call ptr @candy_builtin_equals(ptr %91, ptr %92)
  %94 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %95 = getelementptr inbounds { ptr }, ptr %94, i32 0, i32 0
  store ptr %68, ptr %95, align 8
  %96 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch.59, ptr %94, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %96, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.60, align 8
  %97 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %98 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.60, align 8
  %99 = call ptr @candy_builtin_if_else(ptr %93, ptr %97, ptr %98)
  %100 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %101 = call ptr @"anonymous_$generated__needs"(ptr %99, ptr %100, ptr null)
  %102 = call ptr @candy_builtin_text_length(ptr %0)
  %103 = call ptr @Builtins__isLessThanOrEqualTo(ptr %2, ptr %102)
  %104 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %105 = call ptr @"anonymous_$generated__needs"(ptr %103, ptr %104, ptr null)
  %106 = load ptr, ptr @tag_Int, align 8
  %107 = call ptr @candy_builtin_equals(ptr %8, ptr %106)
  %108 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %109 = load ptr, ptr @"Builtins::textGetRange:53", align 8
  %110 = call ptr @"anonymous_$generated__needs"(ptr %107, ptr %108, ptr %109)
  %111 = load ptr, ptr @tag_Int, align 8
  %112 = call ptr @candy_builtin_equals(ptr %57, ptr %111)
  %113 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %114 = load ptr, ptr @"Builtins::textGetRange:53", align 8
  %115 = call ptr @"anonymous_$generated__needs"(ptr %112, ptr %113, ptr %114)
  %116 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %2)
  %117 = load ptr, ptr @tag_Less, align 8
  %118 = call ptr @candy_builtin_equals(ptr %117, ptr %116)
  %119 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %120 = getelementptr inbounds { ptr }, ptr %119, i32 0, i32 0
  store ptr %116, ptr %120, align 8
  %121 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.63, ptr %119, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %121, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.64, align 8
  %122 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %123 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.64, align 8
  %124 = call ptr @candy_builtin_if_else(ptr %118, ptr %122, ptr %123)
  %125 = load ptr, ptr @num_0, align 8
  %126 = call ptr @candy_builtin_list_get(ptr %124, ptr %125)
  %127 = load ptr, ptr @tag_Match, align 8
  %128 = call ptr @candy_builtin_equals(ptr %126, ptr %127)
  %129 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %130 = getelementptr inbounds { ptr }, ptr %129, i32 0, i32 0
  store ptr %124, ptr %130, align 8
  %131 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then.65, ptr %129, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %131, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then.66, align 8
  %132 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %133 = getelementptr inbounds { ptr }, ptr %132, i32 0, i32 0
  store ptr %116, ptr %133, align 8
  %134 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else.67, ptr %132, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %134, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else.68, align 8
  %135 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then.66, align 8
  %136 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else.68, align 8
  %137 = call ptr @candy_builtin_if_else(ptr %128, ptr %135, ptr %136)
  %138 = load ptr, ptr @num_0, align 8
  %139 = call ptr @candy_builtin_list_get(ptr %137, ptr %138)
  %140 = load ptr, ptr @tag_Match, align 8
  %141 = call ptr @candy_builtin_equals(ptr %139, ptr %140)
  %142 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %143 = getelementptr inbounds { ptr }, ptr %142, i32 0, i32 0
  store ptr %116, ptr %143, align 8
  %144 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.71, ptr %142, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %144, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.72, align 8
  %145 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %146 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.72, align 8
  %147 = call ptr @candy_builtin_if_else(ptr %141, ptr %145, ptr %146)
  %148 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %149 = call ptr @"anonymous_$generated__needs"(ptr %147, ptr %148, ptr null)
  %150 = call ptr @candy_builtin_text_get_range(ptr %0, ptr %1, ptr %2)
  ret ptr %150
}

define ptr @Builtins__isNonNegative_13_equals_else.39(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @17, align 8
  ret ptr @17
}

define ptr @Builtins__isNonNegative_13_isMatch_then.41(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else.43(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.45, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.46, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.46, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isNonNegative_13_equals_else.45(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch.47(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Less, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.49, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.50, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.50, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isNonNegative_13_equals_else.49(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @19, align 8
  ret ptr @19
}

define ptr @Builtins__isNonNegative_13_equals_else.51(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Builtins__isNonNegative_13_isMatch_then.53(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else.55(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.57, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.58, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.58, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isNonNegative_13_equals_else.57(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch.59(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Less, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.61, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.62, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.62, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isNonNegative_13_equals_else.61(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @22, align 8
  ret ptr @22
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.63(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then.65(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else.67(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.69, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.70, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.70, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.69(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch.71(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Greater, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.73, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.74, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.74, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.73(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = load ptr, ptr @tag_True, align 8
  %2 = call ptr @candy_builtin_equals(ptr %1, ptr %0)
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_bool_is_1_equals_else, align 8
  %6 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %7 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %8 = call ptr @candy_builtin_if_else(ptr %2, ptr %6, ptr %7)
  %9 = load ptr, ptr @num_0, align 8
  %10 = call ptr @candy_builtin_list_get(ptr %8, ptr %9)
  %11 = load ptr, ptr @tag_Match, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %8, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %0, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %19 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %28 = call ptr @candy_builtin_if_else(ptr %25, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.75, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.76, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.76, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.75(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_bool_not_6_case-1_didNotMatch() {
Core_bool_not_6_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_bool_not(ptr %0) {
Core_bool_not:
  %1 = load ptr, ptr @tag_True, align 8
  %2 = call ptr @candy_builtin_equals(ptr %1, ptr %0)
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.77, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_bool_is_1_equals_else.78, align 8
  %6 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %7 = load ptr, ptr @fun_Core_bool_is_1_equals_else.78, align 8
  %8 = call ptr @candy_builtin_if_else(ptr %2, ptr %6, ptr %7)
  %9 = load ptr, ptr @num_0, align 8
  %10 = call ptr @candy_builtin_list_get(ptr %8, ptr %9)
  %11 = load ptr, ptr @tag_Match, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %8, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.79, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_bool_is_1_isMatch_then.80, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %0, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.81, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_bool_is_1_isMatch_else.82, align 8
  %19 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.80, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.82, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %28 = call ptr @candy_builtin_if_else(ptr %25, ptr %26, ptr %27)
  %29 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %30 = call ptr @"anonymous_$generated__needs"(ptr %28, ptr %29, ptr null)
  %31 = load ptr, ptr @tag_True, align 8
  %32 = call ptr @candy_builtin_equals(ptr %31, ptr %0)
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %0, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_not_6_equals_else, align 8
  %36 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %37 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %32, ptr %36, ptr %37)
  %39 = load ptr, ptr @num_0, align 8
  %40 = call ptr @candy_builtin_list_get(ptr %38, ptr %39)
  %41 = load ptr, ptr @tag_Match, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %44 = getelementptr inbounds { ptr }, ptr %43, i32 0, i32 0
  store ptr %0, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch, ptr %43, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %46 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %47 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %48 = call ptr @candy_builtin_if_else(ptr %42, ptr %46, ptr %47)
  ret ptr %48
}

define ptr @Core_bool_is_1_equals_else.77(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_bool_is_1_isMatch_then.79(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.81(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.83, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.83(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_bool_not_6_equals_else(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_bool_not_6_case-0_didNotMatch(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.85, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_not_6_equals_else.86, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_not_6_equals_else.86, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %18 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Core_bool_not_6_equals_else.85(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_bool_lazyAnd_16_case-1_didNotMatch() {
Core_bool_lazyAnd_16_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_bool_lazyAnd(ptr %0, ptr %1) {
Core_bool_lazyAnd:
  %2 = load ptr, ptr @tag_True, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %0)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.87, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_else.88, align 8
  %7 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %8 = load ptr, ptr @fun_Core_bool_is_1_equals_else.88, align 8
  %9 = call ptr @candy_builtin_if_else(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @num_0, align 8
  %11 = call ptr @candy_builtin_list_get(ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Match, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %9, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.89, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_is_1_isMatch_then.90, align 8
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.91, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_else.92, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.90, align 8
  %21 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.92, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %13, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %22, ptr %23)
  %25 = load ptr, ptr @tag_Match, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %26, ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @candy_builtin_type_of(ptr %1)
  %33 = load ptr, ptr @tag_Function, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %1, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_function_is0_9, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_function_is0_9, align 8
  %38 = load ptr, ptr @fun_Core_function_is0_9, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %40 = call ptr @Builtins__ifElse(ptr %34, ptr %38, ptr %39)
  %41 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr null)
  %43 = load ptr, ptr @tag_True, align 8
  %44 = call ptr @candy_builtin_equals(ptr %43, ptr %0)
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr }, ptr %45, i32 0, i32 0
  store ptr %0, ptr %46, align 8
  %47 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_equals_else, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %47, ptr @fun_Core_bool_lazyAnd_16_equals_else, align 8
  %48 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %49 = load ptr, ptr @fun_Core_bool_lazyAnd_16_equals_else, align 8
  %50 = call ptr @candy_builtin_if_else(ptr %44, ptr %48, ptr %49)
  %51 = load ptr, ptr @num_0, align 8
  %52 = call ptr @candy_builtin_list_get(ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Match, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %56 = getelementptr inbounds { ptr }, ptr %55, i32 0, i32 0
  store ptr %1, ptr %56, align 8
  %57 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_case-0_matched, ptr %55, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %57, ptr @fun_Core_bool_lazyAnd_16_case-0_matched, align 8
  %58 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %59 = getelementptr inbounds { ptr }, ptr %58, i32 0, i32 0
  store ptr %0, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_case-0_didNotMatch, ptr %58, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Core_bool_lazyAnd_16_case-0_didNotMatch, align 8
  %61 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-0_matched, align 8
  %62 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-0_didNotMatch, align 8
  %63 = call ptr @candy_builtin_if_else(ptr %54, ptr %61, ptr %62)
  ret ptr %63
}

define ptr @Core_bool_is_1_equals_else.87(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_bool_is_1_isMatch_then.89(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.91(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.93, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.94, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.94, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.93(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_function_is0_9(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd_16_equals_else(ptr %0) {
Core_bool_lazyAnd_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_bool_lazyAnd_16_case-0_matched(ptr %0) {
Core_bool_lazyAnd_16_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_function_is0_9.95, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_function_is0_9.96, align 8
  %11 = load ptr, ptr @fun_Core_function_is0_9.96, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %13 = call ptr @Builtins__ifElse(ptr %5, ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:lazyAnd:16:7", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @candy_builtin_type_of(ptr %18)
  %20 = load ptr, ptr @tag_Function, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %23 = load ptr, ptr @"Core:function:run:12", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr %23)
  %25 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = call ptr @candy_builtin_get_argument_count(ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:function:run:12", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %36)
  %38 = call ptr @Core_bool_is(ptr %37)
  %39 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr null)
  ret ptr %37
}

define ptr @Core_function_is0_9.95(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd_16_case-0_didNotMatch(ptr %0) {
Core_bool_lazyAnd_16_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_equals_else.97, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_lazyAnd_16_equals_else.98, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_lazyAnd_16_equals_else.98, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Core_bool_lazyAnd_16_equals_else.97(ptr %0) {
Core_bool_lazyAnd_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_bool_and(ptr %0, ptr %1) {
Core_bool_and:
  %2 = load ptr, ptr @tag_True, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %0)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.99, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_else.100, align 8
  %7 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %8 = load ptr, ptr @fun_Core_bool_is_1_equals_else.100, align 8
  %9 = call ptr @candy_builtin_if_else(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @num_0, align 8
  %11 = call ptr @candy_builtin_list_get(ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Match, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %9, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.101, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_is_1_isMatch_then.102, align 8
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.103, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_else.104, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.102, align 8
  %21 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.104, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %13, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %22, ptr %23)
  %25 = load ptr, ptr @tag_Match, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %26, ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = load ptr, ptr @tag_True, align 8
  %33 = call ptr @candy_builtin_equals(ptr %32, ptr %1)
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.107, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_is_1_equals_else.108, align 8
  %37 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %38 = load ptr, ptr @fun_Core_bool_is_1_equals_else.108, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %33, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_0, align 8
  %41 = call ptr @candy_builtin_list_get(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Match, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr }, ptr %44, i32 0, i32 0
  store ptr %39, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.109, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Core_bool_is_1_isMatch_then.110, align 8
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %1, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.111, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_bool_is_1_isMatch_else.112, align 8
  %50 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.110, align 8
  %51 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.112, align 8
  %52 = call ptr @candy_builtin_if_else(ptr %43, ptr %50, ptr %51)
  %53 = load ptr, ptr @num_0, align 8
  %54 = call ptr @candy_builtin_list_get(ptr %52, ptr %53)
  %55 = load ptr, ptr @tag_Match, align 8
  %56 = call ptr @candy_builtin_equals(ptr %54, ptr %55)
  %57 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %58 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %59 = call ptr @candy_builtin_if_else(ptr %56, ptr %57, ptr %58)
  %60 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %59, ptr %60, ptr null)
  %62 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %63 = getelementptr inbounds { ptr }, ptr %62, i32 0, i32 0
  store ptr %1, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_bool_and_12, ptr %62, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_bool_and_12, align 8
  %65 = load ptr, ptr @fun_Core_bool_and_12, align 8
  %66 = call ptr @Core_bool_lazyAnd(ptr %0, ptr %65)
  ret ptr %66
}

define ptr @Core_bool_is_1_equals_else.99(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_bool_is_1_isMatch_then.101(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.103(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.105, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.106, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.106, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.105(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @37, align 8
  ret ptr @37
}

define ptr @Core_bool_is_1_equals_else.107(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_bool_is_1_isMatch_then.109(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.111(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.113, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.114, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.114, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.113(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_bool_and_12(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr_16_case-1_didNotMatch() {
Core_bool_lazyOr_16_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1) {
Core_bool_lazyOr:
  %2 = load ptr, ptr @tag_True, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %0)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.115, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_else.116, align 8
  %7 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %8 = load ptr, ptr @fun_Core_bool_is_1_equals_else.116, align 8
  %9 = call ptr @candy_builtin_if_else(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @num_0, align 8
  %11 = call ptr @candy_builtin_list_get(ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Match, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %9, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.117, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_is_1_isMatch_then.118, align 8
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.119, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_else.120, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.118, align 8
  %21 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.120, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %13, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %22, ptr %23)
  %25 = load ptr, ptr @tag_Match, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %26, ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @candy_builtin_type_of(ptr %1)
  %33 = load ptr, ptr @tag_Function, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %1, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_function_is0_9.123, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_function_is0_9.124, align 8
  %38 = load ptr, ptr @fun_Core_function_is0_9.124, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %40 = call ptr @Builtins__ifElse(ptr %34, ptr %38, ptr %39)
  %41 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr null)
  %43 = load ptr, ptr @tag_True, align 8
  %44 = call ptr @candy_builtin_equals(ptr %43, ptr %0)
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr }, ptr %45, i32 0, i32 0
  store ptr %0, ptr %46, align 8
  %47 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_equals_else, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %47, ptr @fun_Core_bool_lazyOr_16_equals_else, align 8
  %48 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %49 = load ptr, ptr @fun_Core_bool_lazyOr_16_equals_else, align 8
  %50 = call ptr @candy_builtin_if_else(ptr %44, ptr %48, ptr %49)
  %51 = load ptr, ptr @num_0, align 8
  %52 = call ptr @candy_builtin_list_get(ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Match, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %56 = getelementptr inbounds { ptr, ptr }, ptr %55, i32 0, i32 0
  store ptr %0, ptr %56, align 8
  %57 = getelementptr inbounds { ptr, ptr }, ptr %55, i32 0, i32 1
  store ptr %1, ptr %57, align 8
  %58 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_case-0_didNotMatch, ptr %55, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %58, ptr @fun_Core_bool_lazyOr_16_case-0_didNotMatch, align 8
  %59 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %60 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-0_didNotMatch, align 8
  %61 = call ptr @candy_builtin_if_else(ptr %54, ptr %59, ptr %60)
  ret ptr %61
}

define ptr @Core_bool_is_1_equals_else.115(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_bool_is_1_isMatch_then.117(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.119(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.121, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.122, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.122, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.121(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_function_is0_9.123(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyOr_16_equals_else(ptr %0) {
Core_bool_lazyOr_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_bool_lazyOr_16_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_16_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_equals_else.125, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_lazyOr_16_equals_else.126, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_lazyOr_16_equals_else.126, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_case-1_matched, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_lazyOr_16_case-1_matched, align 8
  %22 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-1_matched, align 8
  %23 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-1_didNotMatch, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %16, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_bool_lazyOr_16_equals_else.125(ptr %0) {
Core_bool_lazyOr_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @43, align 8
  ret ptr @43
}

define ptr @Core_bool_lazyOr_16_case-1_matched(ptr %0) {
Core_bool_lazyOr_16_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_function_is0_9.127, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_function_is0_9.128, align 8
  %11 = load ptr, ptr @fun_Core_function_is0_9.128, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %13 = call ptr @Builtins__ifElse(ptr %5, ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:lazyOr:16:8", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @candy_builtin_type_of(ptr %18)
  %20 = load ptr, ptr @tag_Function, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %23 = load ptr, ptr @"Core:function:run:12", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr %23)
  %25 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = call ptr @candy_builtin_get_argument_count(ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:function:run:12", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %36)
  %38 = call ptr @Core_bool_is(ptr %37)
  %39 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr null)
  ret ptr %37
}

define ptr @Core_function_is0_9.127(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or(ptr %0, ptr %1) {
Core_bool_or:
  %2 = load ptr, ptr @tag_True, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %0)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.129, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_else.130, align 8
  %7 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %8 = load ptr, ptr @fun_Core_bool_is_1_equals_else.130, align 8
  %9 = call ptr @candy_builtin_if_else(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @num_0, align 8
  %11 = call ptr @candy_builtin_list_get(ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Match, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %9, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.131, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_is_1_isMatch_then.132, align 8
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.133, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_else.134, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.132, align 8
  %21 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.134, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %13, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %22, ptr %23)
  %25 = load ptr, ptr @tag_Match, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %26, ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = load ptr, ptr @tag_True, align 8
  %33 = call ptr @candy_builtin_equals(ptr %32, ptr %1)
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.137, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_is_1_equals_else.138, align 8
  %37 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %38 = load ptr, ptr @fun_Core_bool_is_1_equals_else.138, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %33, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_0, align 8
  %41 = call ptr @candy_builtin_list_get(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Match, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr }, ptr %44, i32 0, i32 0
  store ptr %39, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.139, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Core_bool_is_1_isMatch_then.140, align 8
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %1, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.141, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_bool_is_1_isMatch_else.142, align 8
  %50 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.140, align 8
  %51 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.142, align 8
  %52 = call ptr @candy_builtin_if_else(ptr %43, ptr %50, ptr %51)
  %53 = load ptr, ptr @num_0, align 8
  %54 = call ptr @candy_builtin_list_get(ptr %52, ptr %53)
  %55 = load ptr, ptr @tag_Match, align 8
  %56 = call ptr @candy_builtin_equals(ptr %54, ptr %55)
  %57 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %58 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %59 = call ptr @candy_builtin_if_else(ptr %56, ptr %57, ptr %58)
  %60 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %59, ptr %60, ptr null)
  %62 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %63 = getelementptr inbounds { ptr }, ptr %62, i32 0, i32 0
  store ptr %1, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %62, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_bool_or_12, align 8
  %65 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %66 = call ptr @Core_bool_lazyOr(ptr %0, ptr %65)
  ret ptr %66
}

define ptr @Core_bool_is_1_equals_else.129(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @44, align 8
  ret ptr @44
}

define ptr @Core_bool_is_1_isMatch_then.131(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.133(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.135, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.136, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.136, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.135(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @45, align 8
  ret ptr @45
}

define ptr @Core_bool_is_1_equals_else.137(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @46, align 8
  ret ptr @46
}

define ptr @Core_bool_is_1_isMatch_then.139(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.141(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.143, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.144, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.144, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.143(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @47, align 8
  ret ptr @47
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_implies(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = load ptr, ptr @tag_True, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %0)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.145, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_else.146, align 8
  %7 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %8 = load ptr, ptr @fun_Core_bool_is_1_equals_else.146, align 8
  %9 = call ptr @candy_builtin_if_else(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @num_0, align 8
  %11 = call ptr @candy_builtin_list_get(ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Match, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %9, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.147, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_is_1_isMatch_then.148, align 8
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.149, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_else.150, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.148, align 8
  %21 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.150, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %13, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %22, ptr %23)
  %25 = load ptr, ptr @tag_Match, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %26, ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = load ptr, ptr @tag_True, align 8
  %33 = call ptr @candy_builtin_equals(ptr %32, ptr %1)
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.153, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_is_1_equals_else.154, align 8
  %37 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %38 = load ptr, ptr @fun_Core_bool_is_1_equals_else.154, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %33, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_0, align 8
  %41 = call ptr @candy_builtin_list_get(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Match, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr }, ptr %44, i32 0, i32 0
  store ptr %39, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.155, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Core_bool_is_1_isMatch_then.156, align 8
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %1, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.157, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_bool_is_1_isMatch_else.158, align 8
  %50 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.156, align 8
  %51 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.158, align 8
  %52 = call ptr @candy_builtin_if_else(ptr %43, ptr %50, ptr %51)
  %53 = load ptr, ptr @num_0, align 8
  %54 = call ptr @candy_builtin_list_get(ptr %52, ptr %53)
  %55 = load ptr, ptr @tag_Match, align 8
  %56 = call ptr @candy_builtin_equals(ptr %54, ptr %55)
  %57 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %58 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %59 = call ptr @candy_builtin_if_else(ptr %56, ptr %57, ptr %58)
  %60 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %59, ptr %60, ptr null)
  %62 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %63 = load ptr, ptr @fun_Core_bool_is_1_equals_else.146, align 8
  %64 = call ptr @candy_builtin_if_else(ptr %3, ptr %62, ptr %63)
  %65 = load ptr, ptr @num_0, align 8
  %66 = call ptr @candy_builtin_list_get(ptr %64, ptr %65)
  %67 = load ptr, ptr @tag_Match, align 8
  %68 = call ptr @candy_builtin_equals(ptr %66, ptr %67)
  %69 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %70 = getelementptr inbounds { ptr }, ptr %69, i32 0, i32 0
  store ptr %64, ptr %70, align 8
  %71 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.161, ptr %69, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %71, ptr @fun_Core_bool_is_1_isMatch_then.162, align 8
  %72 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.162, align 8
  %73 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.150, align 8
  %74 = call ptr @candy_builtin_if_else(ptr %68, ptr %72, ptr %73)
  %75 = load ptr, ptr @num_0, align 8
  %76 = call ptr @candy_builtin_list_get(ptr %74, ptr %75)
  %77 = load ptr, ptr @tag_Match, align 8
  %78 = call ptr @candy_builtin_equals(ptr %76, ptr %77)
  %79 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %80 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %81 = call ptr @candy_builtin_if_else(ptr %78, ptr %79, ptr %80)
  %82 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %83 = load ptr, ptr @"Core:bool:implies:12", align 8
  %84 = call ptr @"anonymous_$generated__needs"(ptr %81, ptr %82, ptr %83)
  %85 = load ptr, ptr @tag_True, align 8
  %86 = call ptr @candy_builtin_equals(ptr %85, ptr %0)
  %87 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %88 = getelementptr inbounds { ptr }, ptr %87, i32 0, i32 0
  store ptr %0, ptr %88, align 8
  %89 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.163, ptr %87, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %89, ptr @fun_Core_bool_not_6_equals_else.164, align 8
  %90 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %91 = load ptr, ptr @fun_Core_bool_not_6_equals_else.164, align 8
  %92 = call ptr @candy_builtin_if_else(ptr %86, ptr %90, ptr %91)
  %93 = load ptr, ptr @num_0, align 8
  %94 = call ptr @candy_builtin_list_get(ptr %92, ptr %93)
  %95 = load ptr, ptr @tag_Match, align 8
  %96 = call ptr @candy_builtin_equals(ptr %94, ptr %95)
  %97 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %98 = getelementptr inbounds { ptr }, ptr %97, i32 0, i32 0
  store ptr %0, ptr %98, align 8
  %99 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch.165, ptr %97, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %99, ptr @fun_Core_bool_not_6_case-0_didNotMatch.166, align 8
  %100 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %101 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch.166, align 8
  %102 = call ptr @candy_builtin_if_else(ptr %96, ptr %100, ptr %101)
  %103 = call ptr @Core_bool_or(ptr %102, ptr %1)
  ret ptr %103
}

define ptr @Core_bool_is_1_equals_else.145(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Core_bool_is_1_isMatch_then.147(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.149(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.151, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.152, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.152, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.151(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @49, align 8
  ret ptr @49
}

define ptr @Core_bool_is_1_equals_else.153(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_bool_is_1_isMatch_then.155(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.157(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.159, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.160, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.160, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.159(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_bool_is_1_isMatch_then.161(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_not_6_equals_else.163(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_bool_not_6_case-0_didNotMatch.165(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.167, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_not_6_equals_else.168, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_not_6_equals_else.168, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %18 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Core_bool_not_6_equals_else.167(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @53, align 8
  ret ptr @53
}

define ptr @"anonymous_$generated__needs_isConditionBool_else.169"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_check_check(ptr %0) {
Core_check_check:
  %1 = load ptr, ptr @tag_True, align 8
  %2 = call ptr @candy_builtin_equals(ptr %1, ptr %0)
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_else, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_check_check_1_equals_else, align 8
  %6 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %7 = load ptr, ptr @fun_Core_check_check_1_equals_else, align 8
  %8 = call ptr @candy_builtin_if_else(ptr %2, ptr %6, ptr %7)
  %9 = load ptr, ptr @num_0, align 8
  %10 = call ptr @candy_builtin_list_get(ptr %8, ptr %9)
  %11 = load ptr, ptr @tag_Match, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %8, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_check_check_1_isMatch_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_check_check_1_isMatch_then, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %0, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_check_check_1_isMatch_else, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_check_check_1_isMatch_else, align 8
  %19 = load ptr, ptr @fun_Core_check_check_1_isMatch_then, align 8
  %20 = load ptr, ptr @fun_Core_check_check_1_isMatch_else, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %28 = call ptr @candy_builtin_if_else(ptr %25, ptr %26, ptr %27)
  %29 = load ptr, ptr @"text_`isConditionBool` was not satisfied", align 8
  %30 = call ptr @"anonymous_$generated__needs"(ptr %28, ptr %29, ptr null)
  %31 = load ptr, ptr @tag_True, align 8
  %32 = call ptr @candy_builtin_equals(ptr %0, ptr %31)
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %0, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.173", ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.174", align 8
  %36 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %37 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.174", align 8
  %38 = call ptr @candy_builtin_if_else(ptr %32, ptr %36, ptr %37)
  %39 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %40 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.170", align 8
  %41 = call ptr @candy_builtin_if_else(ptr %38, ptr %39, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %43 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.175", ptr %42, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %43, ptr @"fun_anonymous_$generated__needs_condition_else.176", align 8
  %44 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %45 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.176", align 8
  %46 = call ptr @candy_builtin_if_else(ptr %0, ptr %44, ptr %45)
  ret ptr %46
}

define ptr @Core_check_check_1_equals_else(ptr %0) {
Core_check_check_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_check_check_1_isMatch_then(ptr %0) {
Core_check_check_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_check_1_isMatch_else(ptr %0) {
Core_check_check_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_else.171, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_check_check_1_equals_else.172, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_check_check_1_equals_else.172, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_check_check_1_equals_else.171(ptr %0) {
Core_check_check_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @55, align 8
  ret ptr @55
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.173"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.175"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check failed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_check_checkEquals(ptr %0, ptr %1) {
Core_check_checkEquals:
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_check_checkEquals_14, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_check_checkEquals_14, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %0, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_check_checkEquals_15, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_check_checkEquals_15, align 8
  %12 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  %13 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = call ptr @candy_builtin_type_of(ptr %1)
  %16 = load ptr, ptr @tag_Text, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_check_checkEquals_21, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_check_checkEquals_21, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %1, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_check_checkEquals_22, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_check_checkEquals_22, align 8
  %24 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  %25 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_A check failed: Expected ", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %27, ptr %14)
  %29 = load ptr, ptr @"text_ to be ", align 8
  %30 = call ptr @candy_builtin_text_concatenate(ptr %28, ptr %29)
  %31 = call ptr @candy_builtin_text_concatenate(ptr %30, ptr %26)
  %32 = load ptr, ptr @text_., align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %31, ptr %32)
  %34 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %33, ptr null)
  ret ptr %34
}

define ptr @Core_check_checkEquals_14(ptr %0) {
Core_check_checkEquals_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_15(ptr %0) {
Core_check_checkEquals_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_check_checkEquals_21(ptr %0) {
Core_check_checkEquals_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_22(ptr %0) {
Core_check_checkEquals_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_controlFlow_if(ptr %0, ptr %1) {
Core_controlFlow_if:
  %2 = load ptr, ptr @tag_True, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %0)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.177, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_else.178, align 8
  %7 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %8 = load ptr, ptr @fun_Core_bool_is_1_equals_else.178, align 8
  %9 = call ptr @candy_builtin_if_else(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @num_0, align 8
  %11 = call ptr @candy_builtin_list_get(ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Match, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %9, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.179, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_is_1_isMatch_then.180, align 8
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.181, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_else.182, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.180, align 8
  %21 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.182, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %13, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %22, ptr %23)
  %25 = load ptr, ptr @tag_Match, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %26, ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @candy_builtin_type_of(ptr %1)
  %33 = load ptr, ptr @tag_Function, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %1, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_function_is0_9.185, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_function_is0_9.186, align 8
  %38 = load ptr, ptr @fun_Core_function_is0_9.186, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %40 = call ptr @Builtins__ifElse(ptr %34, ptr %38, ptr %39)
  %41 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr null)
  %43 = load ptr, ptr @tag_True, align 8
  %44 = call ptr @candy_builtin_equals(ptr %43, ptr %0)
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr }, ptr %45, i32 0, i32 0
  store ptr %0, ptr %46, align 8
  %47 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.187, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %47, ptr @fun_Builtins__ifElse_1_equals_else.188, align 8
  %48 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %49 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.188, align 8
  %50 = call ptr @candy_builtin_if_else(ptr %44, ptr %48, ptr %49)
  %51 = load ptr, ptr @num_0, align 8
  %52 = call ptr @candy_builtin_list_get(ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Match, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %56 = getelementptr inbounds { ptr }, ptr %55, i32 0, i32 0
  store ptr %50, ptr %56, align 8
  %57 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then.189, ptr %55, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %57, ptr @fun_Builtins__ifElse_1_isMatch_then.190, align 8
  %58 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %59 = getelementptr inbounds { ptr }, ptr %58, i32 0, i32 0
  store ptr %0, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else.191, ptr %58, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Builtins__ifElse_1_isMatch_else.192, align 8
  %61 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then.190, align 8
  %62 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else.192, align 8
  %63 = call ptr @candy_builtin_if_else(ptr %54, ptr %61, ptr %62)
  %64 = load ptr, ptr @num_0, align 8
  %65 = call ptr @candy_builtin_list_get(ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_Match, align 8
  %67 = call ptr @candy_builtin_equals(ptr %65, ptr %66)
  %68 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %69 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %70 = call ptr @candy_builtin_if_else(ptr %67, ptr %68, ptr %69)
  %71 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:controlFlow:if:24", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = call ptr @candy_builtin_type_of(ptr %1)
  %75 = load ptr, ptr @tag_Function, align 8
  %76 = call ptr @candy_builtin_equals(ptr %74, ptr %75)
  %77 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %78 = load ptr, ptr @"Core:controlFlow:if:24", align 8
  %79 = call ptr @"anonymous_$generated__needs"(ptr %76, ptr %77, ptr %78)
  %80 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %81 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %82 = call ptr @"anonymous_$generated__needs"(ptr %76, ptr %80, ptr %81)
  %83 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %84 = load ptr, ptr @num_0, align 8
  %85 = call ptr @candy_builtin_equals(ptr %83, ptr %84)
  %86 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %87 = load ptr, ptr @"Core:controlFlow:if:24", align 8
  %88 = call ptr @"anonymous_$generated__needs"(ptr %85, ptr %86, ptr %87)
  %89 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %90 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %89)
  ret ptr %90
}

define ptr @Core_bool_is_1_equals_else.177(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @56, align 8
  ret ptr @56
}

define ptr @Core_bool_is_1_isMatch_then.179(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.181(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.183, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.184, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.184, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.183(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_function_is0_9.185(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else.187(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @58, align 8
  ret ptr @58
}

define ptr @Builtins__ifElse_1_isMatch_then.189(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else.191(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.193, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__ifElse_1_equals_else.194, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.194, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__ifElse_1_equals_else.193(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_controlFlow_recursive(ptr %0, ptr %1) {
Core_controlFlow_recursive:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Function, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_function_is2_9, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_function_is2_9, align 8
  %8 = load ptr, ptr @fun_Core_function_is2_9, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @Builtins__ifElse(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %1, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_controlFlow_recursive_16, align 8
  %16 = load ptr, ptr @fun_Core_controlFlow_recursive_16, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_16)
  %18 = call ptr @Core_controlFlow_recursive_16(ptr %16, ptr %0, ptr %17)
  ret ptr %18
}

define ptr @Core_function_is2_9(ptr %0) {
Core_function_is2_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive_16(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_16:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_16_0, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_16_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_function_run(ptr %0) {
Core_function_run:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_9.195, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_9.196, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_9.196, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Function, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:function:run:12", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %19 = load ptr, ptr @num_0, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:function:run:12", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %0)
  %25 = call ptr @get_candy_function_environment(ptr %0)
  %26 = call ptr (...) %24(ptr %25)
  ret ptr %26
}

define ptr @Core_function_is0_9.195(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_compareTo(ptr %0, ptr %1) {
Core_int_compareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  ret ptr %24
}

define ptr @Core_int_isLessThan(ptr %0, ptr %1) {
Core_int_isLessThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %0)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_type_of(ptr %1)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %31 = load ptr, ptr @tag_Less, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_int_isGreaterThan(ptr %0, ptr %1) {
Core_int_isGreaterThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %0)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_type_of(ptr %1)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %31 = load ptr, ptr @tag_Greater, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_int_isNonNegative(ptr %0) {
Core_int_isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %12, ptr %13)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %21)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  ret ptr %25
}

define ptr @Core_int_isEven(ptr %0) {
Core_int_isEven:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isEven:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_int_max(ptr %0, ptr %1) {
Core_int_max:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:max:14", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:max:14", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %21, ptr %22)
  %24 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %25 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %27, ptr %28)
  %30 = call ptr @candy_builtin_type_of(ptr %0)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @candy_builtin_type_of(ptr %1)
  %37 = load ptr, ptr @tag_Int, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %40 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %41 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr %40)
  %42 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %43 = load ptr, ptr @tag_Less, align 8
  %44 = call ptr @candy_builtin_equals(ptr %42, ptr %43)
  %45 = call ptr @Core_bool_not(ptr %44)
  %46 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %47 = getelementptr inbounds { ptr }, ptr %46, i32 0, i32 0
  store ptr %0, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_int_max_15, ptr %46, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_int_max_15, align 8
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %50 = getelementptr inbounds { ptr }, ptr %49, i32 0, i32 0
  store ptr %1, ptr %50, align 8
  %51 = call ptr @make_candy_function(ptr @Core_int_max_16, ptr %49, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %51, ptr @fun_Core_int_max_16, align 8
  %52 = load ptr, ptr @fun_Core_int_max_15, align 8
  %53 = load ptr, ptr @fun_Core_int_max_16, align 8
  %54 = call ptr @Builtins__ifElse(ptr %45, ptr %52, ptr %53)
  ret ptr %54
}

define ptr @Core_int_max_15(ptr %0) {
Core_int_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max_16(ptr %0) {
Core_int_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_4_case-0_matched() {
Core_int_pow_21_4_case-0_matched:
  %0 = load ptr, ptr @num_1, align 8
  ret ptr %0
}

define ptr @Core_int_pow_21(ptr %0, ptr %1) {
Core_int_pow_21:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.205, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_int_pow_21_1_isMatch_else.206, align 8
  %21 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.206, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %27, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_equals_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @num_0, align 8
  %37 = call ptr @candy_builtin_list_get(ptr %35, ptr %36)
  %38 = load ptr, ptr @tag_Match, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %0, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %25, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr }, ptr %40, i32 0, i32 2
  store ptr %27, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_didNotMatch, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %45 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %46 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %47 = call ptr @candy_builtin_if_else(ptr %39, ptr %45, ptr %46)
  ret ptr %47
}

define ptr @Core_int_pow_21_1_equals_then(ptr %0) {
Core_int_pow_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.203, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_pow_21_1_isMatch_else.204, align 8
  %31 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.204, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_1_hasKey_then(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_int_pow_21_1_hasKey_else(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_int_pow_21_1_isMatch_then(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Exponent, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.197, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_int_pow_21_1_hasKey_then.198, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.199, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_pow_21_1_hasKey_else.200, align 8
  %19 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.198, align 8
  %20 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.200, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.201, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_int_pow_21_1_isMatch_then.202, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.202, align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_int_pow_21_1_hasKey_then.197(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Exponent, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @62, align 8
  ret ptr @62
}

define ptr @Core_int_pow_21_1_hasKey_else.199(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @63, align 8
  ret ptr @63
}

define ptr @Core_int_pow_21_1_isMatch_then.201(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @64, align 8
  ret ptr @64
}

define ptr @Core_int_pow_21_1_isMatch_else(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_isMatch_else.203(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_equals_else(ptr %0) {
Core_int_pow_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @65, align 8
  ret ptr @65
}

define ptr @Core_int_pow_21_1_isMatch_else.205(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_int_pow_21_4_equals_else(ptr %0) {
Core_int_pow_21_4_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `0`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @66, align 8
  ret ptr @66
}

define ptr @Core_int_pow_21_4_case-0_didNotMatch(ptr %0) {
Core_int_pow_21_4_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isEven(ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 2
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_5, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_4_5, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %20, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 2
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_6, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_int_pow_21_4_6, align 8
  %26 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  %27 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  %28 = call ptr @Builtins__ifElse(ptr %3, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_int_pow_21_4_5(ptr %0) {
Core_int_pow_21_4_5:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = call ptr @candy_builtin_int_multiply(ptr %13, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr @num_1, align 8
  %20 = call ptr @Builtins__intShiftRight(ptr %18, ptr %19)
  %21 = alloca ptr, i64 3, align 8
  %22 = alloca ptr, i64 3, align 8
  %23 = load ptr, ptr @tag_Exponent, align 8
  %24 = getelementptr ptr, ptr %21, i64 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr ptr, ptr %22, i64 0
  store ptr %20, ptr %25, align 8
  %26 = load ptr, ptr @tag_Base, align 8
  %27 = getelementptr ptr, ptr %21, i64 1
  store ptr %26, ptr %27, align 8
  %28 = getelementptr ptr, ptr %22, i64 1
  store ptr %16, ptr %28, align 8
  %29 = getelementptr ptr, ptr %21, i64 2
  store ptr null, ptr %29, align 8
  %30 = getelementptr ptr, ptr %22, i64 2
  store ptr null, ptr %30, align 8
  %31 = call ptr @make_candy_struct(ptr %21, ptr %22)
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %33 = load ptr, ptr %32, align 8
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %31, ptr %35)
  ret ptr %36
}

define ptr @Core_int_pow_21_4_6(ptr %0) {
Core_int_pow_21_4_6:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = call ptr @candy_builtin_int_multiply(ptr %13, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @candy_builtin_type_of(ptr %18)
  %20 = load ptr, ptr @tag_Int, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %23 = load ptr, ptr @"Core:int:pow:21:4:6:12", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @num_1, align 8
  %28 = call ptr @candy_builtin_int_subtract(ptr %26, ptr %27)
  %29 = load ptr, ptr @num_1, align 8
  %30 = call ptr @Builtins__intShiftRight(ptr %28, ptr %29)
  %31 = alloca ptr, i64 3, align 8
  %32 = alloca ptr, i64 3, align 8
  %33 = load ptr, ptr @tag_Base, align 8
  %34 = getelementptr ptr, ptr %31, i64 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr ptr, ptr %32, i64 0
  store ptr %16, ptr %35, align 8
  %36 = load ptr, ptr @tag_Exponent, align 8
  %37 = getelementptr ptr, ptr %31, i64 1
  store ptr %36, ptr %37, align 8
  %38 = getelementptr ptr, ptr %32, i64 1
  store ptr %30, ptr %38, align 8
  %39 = getelementptr ptr, ptr %31, i64 2
  store ptr null, ptr %39, align 8
  %40 = getelementptr ptr, ptr %32, i64 2
  store ptr null, ptr %40, align 8
  %41 = call ptr @make_candy_struct(ptr %31, ptr %32)
  %42 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %41, ptr %45)
  %47 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %48 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  %49 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %47, ptr %48)
  %50 = call ptr @candy_builtin_type_of(ptr %46)
  %51 = load ptr, ptr @tag_Int, align 8
  %52 = call ptr @candy_builtin_equals(ptr %50, ptr %51)
  %53 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %54 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  %55 = call ptr @"anonymous_$generated__needs"(ptr %52, ptr %53, ptr %54)
  %56 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %57 = load ptr, ptr %56, align 8
  %58 = call ptr @candy_builtin_int_multiply(ptr %57, ptr %46)
  ret ptr %58
}

define ptr @"Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else"() {
"Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else":
  %0 = load ptr, ptr @67, align 8
  ret ptr %0
}

define ptr @Core_text_removePrefix(ptr %0, ptr %1) {
Core_text_removePrefix:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is prefix` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Text, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Text, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_text_starts_with(ptr %0, ptr %1)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %1, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_text_removePrefix_15, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_text_removePrefix_15, align 8
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_text_removePrefix_16, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_text_removePrefix_16, align 8
  %32 = load ptr, ptr @fun_Core_text_removePrefix_15, align 8
  %33 = load ptr, ptr @fun_Core_text_removePrefix_16, align 8
  %34 = call ptr @Builtins__ifElse(ptr %24, ptr %32, ptr %33)
  ret ptr %34
}

define ptr @Core_text_removePrefix_15(ptr %0) {
Core_text_removePrefix_15:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:text:removePrefix:15:4", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_text_length(ptr %10)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @candy_builtin_type_of(ptr %13)
  %15 = load ptr, ptr @tag_Text, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:text:removePrefix:15:7", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %21 = load ptr, ptr %20, align 8
  %22 = call ptr @candy_builtin_text_length(ptr %21)
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @Builtins__textGetRange(ptr %24, ptr %11, ptr %22)
  ret ptr %25
}

define ptr @Core_text_removePrefix_16(ptr %0) {
Core_text_removePrefix_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_isScale(ptr %0) {
Core_fixedDecimal_isScale:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_14, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_fixedDecimal_isScale_14, align 8
  %7 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14, align 8
  %8 = call ptr @Core_bool_lazyAnd(ptr %3, ptr %7)
  ret ptr %8
}

define ptr @Core_fixedDecimal_isScale_14(ptr %0) {
Core_fixedDecimal_isScale_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %15, ptr %16)
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @candy_builtin_type_of(ptr %19)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_int_compare_to(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Less, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = call ptr @Core_bool_not(ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_scaleFactor(ptr %0) {
Core_fixedDecimal_scaleFactor:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_14.207, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_fixedDecimal_isScale_14.208, align 8
  %7 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.208, align 8
  %8 = call ptr @Core_bool_lazyAnd(ptr %3, ptr %7)
  %9 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:13", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:int:pow:12", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %14, ptr %15)
  %17 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %17, ptr %18)
  %20 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %23, ptr %24)
  %26 = call ptr @candy_builtin_type_of(ptr %0)
  %27 = load ptr, ptr @tag_Int, align 8
  %28 = call ptr @candy_builtin_equals(ptr %26, ptr %27)
  %29 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %30 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %28, ptr %29, ptr %30)
  %32 = load ptr, ptr @num_0, align 8
  %33 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %32)
  %34 = load ptr, ptr @tag_Less, align 8
  %35 = call ptr @candy_builtin_equals(ptr %33, ptr %34)
  %36 = call ptr @Core_bool_not(ptr %35)
  %37 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %38 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:13", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = alloca ptr, i64 3, align 8
  %41 = alloca ptr, i64 3, align 8
  %42 = load ptr, ptr @tag_Exponent, align 8
  %43 = getelementptr ptr, ptr %40, i64 0
  store ptr %42, ptr %43, align 8
  %44 = getelementptr ptr, ptr %41, i64 0
  store ptr %0, ptr %44, align 8
  %45 = load ptr, ptr @tag_Base, align 8
  %46 = load ptr, ptr @num_10, align 8
  %47 = getelementptr ptr, ptr %40, i64 1
  store ptr %45, ptr %47, align 8
  %48 = getelementptr ptr, ptr %41, i64 1
  store ptr %46, ptr %48, align 8
  %49 = getelementptr ptr, ptr %40, i64 2
  store ptr null, ptr %49, align 8
  %50 = getelementptr ptr, ptr %41, i64 2
  store ptr null, ptr %50, align 8
  %51 = call ptr @make_candy_struct(ptr %40, ptr %41)
  %52 = load ptr, ptr @fun_Core_int_pow_21, align 8
  %53 = call ptr @Core_controlFlow_recursive(ptr %51, ptr %52)
  ret ptr %53
}

define ptr @Core_fixedDecimal_isScale_14.207(ptr %0) {
Core_fixedDecimal_isScale_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %15, ptr %16)
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @candy_builtin_type_of(ptr %19)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_int_compare_to(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Less, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = call ptr @Core_bool_not(ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_fromIntScaled(ptr %0, ptr %1) {
Core_fixedDecimal_fromIntScaled:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %1, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_14.209, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_isScale_14.210, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.210, align 8
  %14 = call ptr @Core_bool_lazyAnd(ptr %9, ptr %13)
  %15 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_MinorUnits, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %0, ptr %21, align 8
  %22 = load ptr, ptr @tag_Scale, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %1, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %28, align 1
  %29 = call ptr @make_candy_tag(ptr %28, ptr %27)
  store ptr %29, ptr @tag_FixedDecimal.211, align 8
  ret ptr @tag_FixedDecimal.211
}

define ptr @Core_fixedDecimal_isScale_14.209(ptr %0) {
Core_fixedDecimal_isScale_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %15, ptr %16)
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @candy_builtin_type_of(ptr %19)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_int_compare_to(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Less, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = call ptr @Core_bool_not(ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %1) {
Core_fixedDecimal_rescaledMinorUnits:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.228, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_else.229, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.229, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  %21 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  %22 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %24, ptr null)
  %26 = call ptr @candy_builtin_type_of(ptr %1)
  %27 = load ptr, ptr @tag_Int, align 8
  %28 = call ptr @candy_builtin_equals(ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %1, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_14.230, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_fixedDecimal_isScale_14.231, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.231, align 8
  %33 = call ptr @Core_bool_lazyAnd(ptr %28, ptr %32)
  %34 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.229, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %4, ptr %36, ptr %37)
  %39 = load ptr, ptr @num_0, align 8
  %40 = call ptr @candy_builtin_list_get(ptr %38, ptr %39)
  %41 = load ptr, ptr @tag_Match, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %44 = getelementptr inbounds { ptr }, ptr %43, i32 0, i32 0
  store ptr %38, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.232, ptr %43, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.233, align 8
  %46 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.233, align 8
  %47 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %48 = call ptr @candy_builtin_if_else(ptr %42, ptr %46, ptr %47)
  %49 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %50 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  %51 = call ptr @"anonymous_$generated__needs"(ptr %48, ptr %49, ptr %50)
  %52 = call ptr @candy_builtin_type_of(ptr %0)
  %53 = load ptr, ptr @tag_Tag, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %56 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %57 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr %56)
  %58 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %59 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %60 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr %60)
  %62 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %63 = call ptr @candy_builtin_type_of(ptr %62)
  %64 = load ptr, ptr @tag_Struct, align 8
  %65 = call ptr @candy_builtin_equals(ptr %63, ptr %64)
  %66 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %67 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %68 = call ptr @"anonymous_$generated__needs"(ptr %65, ptr %66, ptr %67)
  %69 = load ptr, ptr @tag_Scale, align 8
  %70 = call ptr @candy_builtin_struct_has_key(ptr %62, ptr %69)
  %71 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = load ptr, ptr @tag_Scale, align 8
  %75 = call ptr @candy_builtin_struct_get(ptr %62, ptr %74)
  %76 = call ptr @Core_int_isGreaterThan(ptr %75, ptr %1)
  %77 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %78 = getelementptr inbounds { ptr, ptr }, ptr %77, i32 0, i32 0
  store ptr %0, ptr %78, align 8
  %79 = getelementptr inbounds { ptr, ptr }, ptr %77, i32 0, i32 1
  store ptr %1, ptr %79, align 8
  %80 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits_22, ptr %77, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %80, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_22, align 8
  %81 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %82 = getelementptr inbounds { ptr, ptr }, ptr %81, i32 0, i32 0
  store ptr %0, ptr %82, align 8
  %83 = getelementptr inbounds { ptr, ptr }, ptr %81, i32 0, i32 1
  store ptr %1, ptr %83, align 8
  %84 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits_23, ptr %81, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %84, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_23, align 8
  %85 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_22, align 8
  %86 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_23, align 8
  %87 = call ptr @Builtins__ifElse(ptr %76, ptr %85, ptr %86)
  ret ptr %87
}

define ptr @Core_fixedDecimal_is_1_equals_then(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.212, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.213, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.226, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.227, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.213, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.227, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.212(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.214, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.215, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.215, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.214(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.216, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.217, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.217, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.216(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.224, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.225, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.225, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @68, align 8
  ret ptr @68
}

define ptr @Core_fixedDecimal_is_1_hasKey_else(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @69, align 8
  ret ptr @69
}

define ptr @Core_fixedDecimal_is_1_isMatch_then(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.218, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.219, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.220, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.221, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.219, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.221, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.222, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.223, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.223, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.218(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @70, align 8
  ret ptr @70
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.220(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @71, align 8
  ret ptr @71
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.222(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @72, align 8
  ret ptr @72
}

define ptr @Core_fixedDecimal_is_1_isMatch_else(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.224(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @73, align 8
  ret ptr @73
}

define ptr @Core_fixedDecimal_is_1_equals_else.226(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @74, align 8
  ret ptr @74
}

define ptr @Core_fixedDecimal_is_1_equals_else.228(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @75, align 8
  ret ptr @75
}

define ptr @Core_fixedDecimal_is_1_case-0_matched(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_isScale_14.230(ptr %0) {
Core_fixedDecimal_isScale_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %15, ptr %16)
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @candy_builtin_type_of(ptr %19)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_int_compare_to(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Less, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = call ptr @Core_bool_not(ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.232(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.234, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.235, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.235, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.234(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_rescaledMinorUnits_22(ptr %0) {
Core_fixedDecimal_rescaledMinorUnits_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.236, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.237, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.264, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.265, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.237, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.265, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.266, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.267, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.267, align 8
  %25 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:2", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = call ptr @candy_builtin_type_of(ptr %31)
  %33 = load ptr, ptr @tag_Tag, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = call ptr @candy_builtin_tag_has_value(ptr %39)
  %41 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %42 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr %42)
  %44 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %45 = load ptr, ptr %44, align 8
  %46 = call ptr @candy_builtin_tag_get_value(ptr %45)
  %47 = call ptr @candy_builtin_type_of(ptr %46)
  %48 = load ptr, ptr @tag_Struct, align 8
  %49 = call ptr @candy_builtin_equals(ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %51 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_MinorUnits, align 8
  %54 = call ptr @candy_builtin_struct_has_key(ptr %46, ptr %53)
  %55 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %56 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %57 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr %56)
  %58 = load ptr, ptr @tag_MinorUnits, align 8
  %59 = call ptr @candy_builtin_struct_get(ptr %46, ptr %58)
  %60 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.237, align 8
  %61 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.265, align 8
  %62 = call ptr @candy_builtin_if_else(ptr %5, ptr %60, ptr %61)
  %63 = load ptr, ptr @num_0, align 8
  %64 = call ptr @candy_builtin_list_get(ptr %62, ptr %63)
  %65 = load ptr, ptr @tag_Match, align 8
  %66 = call ptr @candy_builtin_equals(ptr %64, ptr %65)
  %67 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %68 = getelementptr inbounds { ptr }, ptr %67, i32 0, i32 0
  store ptr %62, ptr %68, align 8
  %69 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.270, ptr %67, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %69, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.271, align 8
  %70 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.271, align 8
  %71 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %72 = call ptr @candy_builtin_if_else(ptr %66, ptr %70, ptr %71)
  %73 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %74 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:12", align 8
  %75 = call ptr @"anonymous_$generated__needs"(ptr %72, ptr %73, ptr %74)
  %76 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %77 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %78 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %76, ptr %77)
  %79 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %80 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %81 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %79, ptr %80)
  %82 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %83 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %84 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %82, ptr %83)
  %85 = load ptr, ptr @tag_Scale, align 8
  %86 = call ptr @candy_builtin_struct_has_key(ptr %46, ptr %85)
  %87 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %88 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %89 = call ptr @"anonymous_$generated__needs"(ptr %86, ptr %87, ptr %88)
  %90 = load ptr, ptr @tag_Scale, align 8
  %91 = call ptr @candy_builtin_struct_get(ptr %46, ptr %90)
  %92 = call ptr @candy_builtin_type_of(ptr %91)
  %93 = load ptr, ptr @tag_Int, align 8
  %94 = call ptr @candy_builtin_equals(ptr %92, ptr %93)
  %95 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %96 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:20", align 8
  %97 = call ptr @"anonymous_$generated__needs"(ptr %94, ptr %95, ptr %96)
  %98 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %99 = load ptr, ptr %98, align 8
  %100 = call ptr @candy_builtin_type_of(ptr %99)
  %101 = load ptr, ptr @tag_Int, align 8
  %102 = call ptr @candy_builtin_equals(ptr %100, ptr %101)
  %103 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %104 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:22:20", align 8
  %105 = call ptr @"anonymous_$generated__needs"(ptr %102, ptr %103, ptr %104)
  %106 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %107 = load ptr, ptr %106, align 8
  %108 = call ptr @candy_builtin_int_subtract(ptr %91, ptr %107)
  %109 = call ptr @Core_fixedDecimal_scaleFactor(ptr %108)
  %110 = call ptr @Builtins__intDivideTruncating(ptr %59, ptr %109)
  ret ptr %110
}

define ptr @Core_fixedDecimal_is_1_equals_then.236(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.238, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.239, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.262, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.263, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.239, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.263, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.238(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.240, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.241, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.241, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.240(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.242, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.243, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.260, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.261, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.243, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.261, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.242(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.244, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.245, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.246, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.247, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.245, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.247, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.248, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.249, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.258, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.259, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.249, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.259, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.244(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @76, align 8
  ret ptr @76
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.246(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @77, align 8
  ret ptr @77
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.248(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.250, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.251, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.252, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.253, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.251, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.253, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.254, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.255, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.256, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.257, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.255, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.257, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.250(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @78, align 8
  ret ptr @78
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.252(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @79, align 8
  ret ptr @79
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.254(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @80, align 8
  ret ptr @80
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.256(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.258(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.260(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @81, align 8
  ret ptr @81
}

define ptr @Core_fixedDecimal_is_1_equals_else.262(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @82, align 8
  ret ptr @82
}

define ptr @Core_fixedDecimal_is_1_equals_else.264(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @83, align 8
  ret ptr @83
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.266(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.268, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.269, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.269, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.268(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.270(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.272, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.273, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.273, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.272(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_rescaledMinorUnits_23(ptr %0) {
Core_fixedDecimal_rescaledMinorUnits_23:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.274, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.275, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.302, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.303, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.275, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.303, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.304, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.305, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.305, align 8
  %25 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:2", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = call ptr @candy_builtin_type_of(ptr %31)
  %33 = load ptr, ptr @tag_Tag, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = call ptr @candy_builtin_tag_has_value(ptr %39)
  %41 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %42 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr %42)
  %44 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %45 = load ptr, ptr %44, align 8
  %46 = call ptr @candy_builtin_tag_get_value(ptr %45)
  %47 = call ptr @candy_builtin_type_of(ptr %46)
  %48 = load ptr, ptr @tag_Struct, align 8
  %49 = call ptr @candy_builtin_equals(ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %51 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_MinorUnits, align 8
  %54 = call ptr @candy_builtin_struct_has_key(ptr %46, ptr %53)
  %55 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %56 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %57 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr %56)
  %58 = load ptr, ptr @tag_MinorUnits, align 8
  %59 = call ptr @candy_builtin_struct_get(ptr %46, ptr %58)
  %60 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.275, align 8
  %61 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.303, align 8
  %62 = call ptr @candy_builtin_if_else(ptr %5, ptr %60, ptr %61)
  %63 = load ptr, ptr @num_0, align 8
  %64 = call ptr @candy_builtin_list_get(ptr %62, ptr %63)
  %65 = load ptr, ptr @tag_Match, align 8
  %66 = call ptr @candy_builtin_equals(ptr %64, ptr %65)
  %67 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %68 = getelementptr inbounds { ptr }, ptr %67, i32 0, i32 0
  store ptr %62, ptr %68, align 8
  %69 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.308, ptr %67, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %69, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.309, align 8
  %70 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.309, align 8
  %71 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %72 = call ptr @candy_builtin_if_else(ptr %66, ptr %70, ptr %71)
  %73 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %74 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:19", align 8
  %75 = call ptr @"anonymous_$generated__needs"(ptr %72, ptr %73, ptr %74)
  %76 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %77 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %78 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %76, ptr %77)
  %79 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %80 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %81 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %79, ptr %80)
  %82 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %83 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %84 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %82, ptr %83)
  %85 = load ptr, ptr @tag_Scale, align 8
  %86 = call ptr @candy_builtin_struct_has_key(ptr %46, ptr %85)
  %87 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %88 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %89 = call ptr @"anonymous_$generated__needs"(ptr %86, ptr %87, ptr %88)
  %90 = load ptr, ptr @tag_Scale, align 8
  %91 = call ptr @candy_builtin_struct_get(ptr %46, ptr %90)
  %92 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %93 = load ptr, ptr %92, align 8
  %94 = call ptr @candy_builtin_type_of(ptr %93)
  %95 = load ptr, ptr @tag_Int, align 8
  %96 = call ptr @candy_builtin_equals(ptr %94, ptr %95)
  %97 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %98 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:20", align 8
  %99 = call ptr @"anonymous_$generated__needs"(ptr %96, ptr %97, ptr %98)
  %100 = call ptr @candy_builtin_type_of(ptr %91)
  %101 = load ptr, ptr @tag_Int, align 8
  %102 = call ptr @candy_builtin_equals(ptr %100, ptr %101)
  %103 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %104 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:20", align 8
  %105 = call ptr @"anonymous_$generated__needs"(ptr %102, ptr %103, ptr %104)
  %106 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %107 = load ptr, ptr %106, align 8
  %108 = call ptr @candy_builtin_int_subtract(ptr %107, ptr %91)
  %109 = call ptr @Core_fixedDecimal_scaleFactor(ptr %108)
  %110 = call ptr @candy_builtin_type_of(ptr %59)
  %111 = load ptr, ptr @tag_Int, align 8
  %112 = call ptr @candy_builtin_equals(ptr %110, ptr %111)
  %113 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %114 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:22", align 8
  %115 = call ptr @"anonymous_$generated__needs"(ptr %112, ptr %113, ptr %114)
  %116 = call ptr @candy_builtin_type_of(ptr %109)
  %117 = load ptr, ptr @tag_Int, align 8
  %118 = call ptr @candy_builtin_equals(ptr %116, ptr %117)
  %119 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %120 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:22", align 8
  %121 = call ptr @"anonymous_$generated__needs"(ptr %118, ptr %119, ptr %120)
  %122 = call ptr @candy_builtin_int_multiply(ptr %59, ptr %109)
  ret ptr %122
}

define ptr @Core_fixedDecimal_is_1_equals_then.274(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.276, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.277, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.300, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.301, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.277, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.301, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.276(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.278, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.279, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.279, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.278(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.280, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.281, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.298, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.299, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.281, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.299, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.280(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.282, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.283, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.284, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.285, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.283, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.285, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.286, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.287, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.296, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.297, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.287, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.297, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.282(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @84, align 8
  ret ptr @84
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.284(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @85, align 8
  ret ptr @85
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.286(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.288, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.289, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.290, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.291, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.289, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.291, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.292, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.293, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.294, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.295, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.293, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.295, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.288(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @86, align 8
  ret ptr @86
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.290(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @87, align 8
  ret ptr @87
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.292(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @88, align 8
  ret ptr @88
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.294(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.296(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.298(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @89, align 8
  ret ptr @89
}

define ptr @Core_fixedDecimal_is_1_equals_else.300(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @90, align 8
  ret ptr @90
}

define ptr @Core_fixedDecimal_is_1_equals_else.302(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @91, align 8
  ret ptr @91
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.304(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.306, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.307, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.307, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.306(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.308(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.310, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.311, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.311, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.310(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_add(ptr %0, ptr %1) {
Core_fixedDecimal_add:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.312, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_fixedDecimal_is_1_equals_then.313, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.340, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_else.341, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.313, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.341, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.342, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.343, align 8
  %21 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.343, align 8
  %22 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @"text_`is summandA` was not satisfied", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %24, ptr null)
  %26 = call ptr @candy_builtin_type_of(ptr %1)
  %27 = load ptr, ptr @tag_Tag, align 8
  %28 = call ptr @candy_builtin_equals(ptr %27, ptr %26)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %1, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.346, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_fixedDecimal_is_1_equals_then.347, align 8
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %26, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.374, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_fixedDecimal_is_1_equals_else.375, align 8
  %35 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.347, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.375, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %28, ptr %35, ptr %36)
  %38 = load ptr, ptr @num_0, align 8
  %39 = call ptr @candy_builtin_list_get(ptr %37, ptr %38)
  %40 = load ptr, ptr @tag_Match, align 8
  %41 = call ptr @candy_builtin_equals(ptr %39, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr }, ptr %42, i32 0, i32 0
  store ptr %37, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.376, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.377, align 8
  %45 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.377, align 8
  %46 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %47 = call ptr @candy_builtin_if_else(ptr %41, ptr %45, ptr %46)
  %48 = load ptr, ptr @"text_`is summandB` was not satisfied", align 8
  %49 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr null)
  %50 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.313, align 8
  %51 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.341, align 8
  %52 = call ptr @candy_builtin_if_else(ptr %4, ptr %50, ptr %51)
  %53 = load ptr, ptr @num_0, align 8
  %54 = call ptr @candy_builtin_list_get(ptr %52, ptr %53)
  %55 = load ptr, ptr @tag_Match, align 8
  %56 = call ptr @candy_builtin_equals(ptr %54, ptr %55)
  %57 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %58 = getelementptr inbounds { ptr }, ptr %57, i32 0, i32 0
  store ptr %52, ptr %58, align 8
  %59 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.380, ptr %57, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %59, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.381, align 8
  %60 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.381, align 8
  %61 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %62 = call ptr @candy_builtin_if_else(ptr %56, ptr %60, ptr %61)
  %63 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %64 = load ptr, ptr @"Core:fixedDecimal:add:13", align 8
  %65 = call ptr @"anonymous_$generated__needs"(ptr %62, ptr %63, ptr %64)
  %66 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.347, align 8
  %67 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.375, align 8
  %68 = call ptr @candy_builtin_if_else(ptr %28, ptr %66, ptr %67)
  %69 = load ptr, ptr @num_0, align 8
  %70 = call ptr @candy_builtin_list_get(ptr %68, ptr %69)
  %71 = load ptr, ptr @tag_Match, align 8
  %72 = call ptr @candy_builtin_equals(ptr %70, ptr %71)
  %73 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %74 = getelementptr inbounds { ptr }, ptr %73, i32 0, i32 0
  store ptr %68, ptr %74, align 8
  %75 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.384, ptr %73, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %75, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.385, align 8
  %76 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.385, align 8
  %77 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %78 = call ptr @candy_builtin_if_else(ptr %72, ptr %76, ptr %77)
  %79 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %80 = load ptr, ptr @"Core:fixedDecimal:add:13", align 8
  %81 = call ptr @"anonymous_$generated__needs"(ptr %78, ptr %79, ptr %80)
  %82 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.313, align 8
  %83 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.341, align 8
  %84 = call ptr @candy_builtin_if_else(ptr %4, ptr %82, ptr %83)
  %85 = load ptr, ptr @num_0, align 8
  %86 = call ptr @candy_builtin_list_get(ptr %84, ptr %85)
  %87 = load ptr, ptr @tag_Match, align 8
  %88 = call ptr @candy_builtin_equals(ptr %86, ptr %87)
  %89 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %90 = getelementptr inbounds { ptr }, ptr %89, i32 0, i32 0
  store ptr %84, ptr %90, align 8
  %91 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.388, ptr %89, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %91, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.389, align 8
  %92 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.389, align 8
  %93 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %94 = call ptr @candy_builtin_if_else(ptr %88, ptr %92, ptr %93)
  %95 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %96 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:18", align 8
  %97 = call ptr @"anonymous_$generated__needs"(ptr %94, ptr %95, ptr %96)
  %98 = call ptr @candy_builtin_type_of(ptr %0)
  %99 = load ptr, ptr @tag_Tag, align 8
  %100 = call ptr @candy_builtin_equals(ptr %98, ptr %99)
  %101 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %102 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %103 = call ptr @"anonymous_$generated__needs"(ptr %100, ptr %101, ptr %102)
  %104 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %105 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %106 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %107 = call ptr @"anonymous_$generated__needs"(ptr %104, ptr %105, ptr %106)
  %108 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %109 = call ptr @candy_builtin_type_of(ptr %108)
  %110 = load ptr, ptr @tag_Struct, align 8
  %111 = call ptr @candy_builtin_equals(ptr %109, ptr %110)
  %112 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %113 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %114 = call ptr @"anonymous_$generated__needs"(ptr %111, ptr %112, ptr %113)
  %115 = load ptr, ptr @tag_Scale, align 8
  %116 = call ptr @candy_builtin_struct_has_key(ptr %108, ptr %115)
  %117 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %118 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %119 = call ptr @"anonymous_$generated__needs"(ptr %116, ptr %117, ptr %118)
  %120 = load ptr, ptr @tag_Scale, align 8
  %121 = call ptr @candy_builtin_struct_get(ptr %108, ptr %120)
  %122 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.347, align 8
  %123 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.375, align 8
  %124 = call ptr @candy_builtin_if_else(ptr %28, ptr %122, ptr %123)
  %125 = load ptr, ptr @num_0, align 8
  %126 = call ptr @candy_builtin_list_get(ptr %124, ptr %125)
  %127 = load ptr, ptr @tag_Match, align 8
  %128 = call ptr @candy_builtin_equals(ptr %126, ptr %127)
  %129 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %130 = getelementptr inbounds { ptr }, ptr %129, i32 0, i32 0
  store ptr %124, ptr %130, align 8
  %131 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.392, ptr %129, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %131, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.393, align 8
  %132 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.393, align 8
  %133 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %134 = call ptr @candy_builtin_if_else(ptr %128, ptr %132, ptr %133)
  %135 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %136 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:21", align 8
  %137 = call ptr @"anonymous_$generated__needs"(ptr %134, ptr %135, ptr %136)
  %138 = call ptr @candy_builtin_type_of(ptr %1)
  %139 = load ptr, ptr @tag_Tag, align 8
  %140 = call ptr @candy_builtin_equals(ptr %138, ptr %139)
  %141 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %142 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %143 = call ptr @"anonymous_$generated__needs"(ptr %140, ptr %141, ptr %142)
  %144 = call ptr @candy_builtin_tag_has_value(ptr %1)
  %145 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %146 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %147 = call ptr @"anonymous_$generated__needs"(ptr %144, ptr %145, ptr %146)
  %148 = call ptr @candy_builtin_tag_get_value(ptr %1)
  %149 = call ptr @candy_builtin_type_of(ptr %148)
  %150 = load ptr, ptr @tag_Struct, align 8
  %151 = call ptr @candy_builtin_equals(ptr %149, ptr %150)
  %152 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %153 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %154 = call ptr @"anonymous_$generated__needs"(ptr %151, ptr %152, ptr %153)
  %155 = load ptr, ptr @tag_Scale, align 8
  %156 = call ptr @candy_builtin_struct_has_key(ptr %148, ptr %155)
  %157 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %158 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %159 = call ptr @"anonymous_$generated__needs"(ptr %156, ptr %157, ptr %158)
  %160 = load ptr, ptr @tag_Scale, align 8
  %161 = call ptr @candy_builtin_struct_get(ptr %148, ptr %160)
  %162 = call ptr @Core_int_max(ptr %121, ptr %161)
  %163 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %162)
  %164 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %1, ptr %162)
  %165 = call ptr @candy_builtin_type_of(ptr %163)
  %166 = load ptr, ptr @tag_Int, align 8
  %167 = call ptr @candy_builtin_equals(ptr %165, ptr %166)
  %168 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %169 = load ptr, ptr @"Core:fixedDecimal:add:25", align 8
  %170 = call ptr @"anonymous_$generated__needs"(ptr %167, ptr %168, ptr %169)
  %171 = call ptr @candy_builtin_type_of(ptr %164)
  %172 = load ptr, ptr @tag_Int, align 8
  %173 = call ptr @candy_builtin_equals(ptr %171, ptr %172)
  %174 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %175 = load ptr, ptr @"Core:fixedDecimal:add:25", align 8
  %176 = call ptr @"anonymous_$generated__needs"(ptr %173, ptr %174, ptr %175)
  %177 = call ptr @candy_builtin_int_add(ptr %163, ptr %164)
  %178 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %177, ptr %162)
  ret ptr %178
}

define ptr @Core_fixedDecimal_is_1_equals_then.312(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.314, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.315, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.338, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.339, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.315, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.339, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.314(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.316, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.317, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.317, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.316(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.318, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.319, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.336, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.337, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.319, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.337, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.318(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.320, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.321, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.322, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.323, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.321, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.323, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.324, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.325, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.334, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.335, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.325, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.335, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.320(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @92, align 8
  ret ptr @92
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.322(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @93, align 8
  ret ptr @93
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.324(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.326, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.327, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.328, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.329, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.327, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.329, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.330, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.331, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.332, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.333, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.331, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.333, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.326(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @94, align 8
  ret ptr @94
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.328(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @95, align 8
  ret ptr @95
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.330(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @96, align 8
  ret ptr @96
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.332(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.334(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.336(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @97, align 8
  ret ptr @97
}

define ptr @Core_fixedDecimal_is_1_equals_else.338(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @98, align 8
  ret ptr @98
}

define ptr @Core_fixedDecimal_is_1_equals_else.340(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @99, align 8
  ret ptr @99
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.342(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.344, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.345, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.345, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.344(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_equals_then.346(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.348, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.349, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.372, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.373, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.349, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.373, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.348(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.350, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.351, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.351, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.350(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.352, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.353, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.370, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.371, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.353, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.371, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.352(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.354, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.355, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.356, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.357, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.355, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.357, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.358, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.359, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.368, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.369, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.359, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.369, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.354(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @100, align 8
  ret ptr @100
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.356(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @101, align 8
  ret ptr @101
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.358(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.360, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.361, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.362, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.363, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.361, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.363, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.364, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.365, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.366, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.367, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.365, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.367, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.360(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @102, align 8
  ret ptr @102
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.362(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @103, align 8
  ret ptr @103
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.364(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @104, align 8
  ret ptr @104
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.366(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.368(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.370(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @105, align 8
  ret ptr @105
}

define ptr @Core_fixedDecimal_is_1_equals_else.372(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @106, align 8
  ret ptr @106
}

define ptr @Core_fixedDecimal_is_1_equals_else.374(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @107, align 8
  ret ptr @107
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.376(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.378, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.379, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.379, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.378(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.380(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.382, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.383, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.383, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.382(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.384(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.386, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.387, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.387, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.386(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.388(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.390, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.391, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.391, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.390(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.392(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.394, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.395, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.395, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.394(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_divideTruncatingAtScale:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.396, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_fixedDecimal_is_1_equals_then.397, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.424, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_fixedDecimal_is_1_equals_else.425, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.397, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.425, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.426, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.427, align 8
  %22 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.427, align 8
  %23 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_type_of(ptr %1)
  %28 = load ptr, ptr @tag_Tag, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %1, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.430, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_equals_then.431, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %27, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.458, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_is_1_equals_else.459, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.431, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.459, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  %39 = load ptr, ptr @num_0, align 8
  %40 = call ptr @candy_builtin_list_get(ptr %38, ptr %39)
  %41 = load ptr, ptr @tag_Match, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %44 = getelementptr inbounds { ptr }, ptr %43, i32 0, i32 0
  store ptr %38, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.460, ptr %43, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.461, align 8
  %46 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.461, align 8
  %47 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %48 = call ptr @candy_builtin_if_else(ptr %42, ptr %46, ptr %47)
  %49 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %48, ptr %49, ptr null)
  %51 = call ptr @candy_builtin_type_of(ptr %2)
  %52 = load ptr, ptr @tag_Int, align 8
  %53 = call ptr @candy_builtin_equals(ptr %51, ptr %52)
  %54 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %55 = getelementptr inbounds { ptr }, ptr %54, i32 0, i32 0
  store ptr %2, ptr %55, align 8
  %56 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_14.464, ptr %54, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %56, ptr @fun_Core_fixedDecimal_isScale_14.465, align 8
  %57 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.465, align 8
  %58 = call ptr @Core_bool_lazyAnd(ptr %53, ptr %57)
  %59 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %60 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr null)
  %61 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.431, align 8
  %62 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.459, align 8
  %63 = call ptr @candy_builtin_if_else(ptr %29, ptr %61, ptr %62)
  %64 = load ptr, ptr @num_0, align 8
  %65 = call ptr @candy_builtin_list_get(ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_Match, align 8
  %67 = call ptr @candy_builtin_equals(ptr %65, ptr %66)
  %68 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %69 = getelementptr inbounds { ptr }, ptr %68, i32 0, i32 0
  store ptr %63, ptr %69, align 8
  %70 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.466, ptr %68, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %70, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.467, align 8
  %71 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.467, align 8
  %72 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %73 = call ptr @candy_builtin_if_else(ptr %67, ptr %71, ptr %72)
  %74 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %75 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  %76 = call ptr @"anonymous_$generated__needs"(ptr %73, ptr %74, ptr %75)
  %77 = call ptr @candy_builtin_type_of(ptr %1)
  %78 = load ptr, ptr @tag_Tag, align 8
  %79 = call ptr @candy_builtin_equals(ptr %77, ptr %78)
  %80 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %81 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %82 = call ptr @"anonymous_$generated__needs"(ptr %79, ptr %80, ptr %81)
  %83 = call ptr @candy_builtin_tag_has_value(ptr %1)
  %84 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %85 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %86 = call ptr @"anonymous_$generated__needs"(ptr %83, ptr %84, ptr %85)
  %87 = call ptr @candy_builtin_tag_get_value(ptr %1)
  %88 = call ptr @candy_builtin_type_of(ptr %87)
  %89 = load ptr, ptr @tag_Struct, align 8
  %90 = call ptr @candy_builtin_equals(ptr %88, ptr %89)
  %91 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %92 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %93 = call ptr @"anonymous_$generated__needs"(ptr %90, ptr %91, ptr %92)
  %94 = load ptr, ptr @tag_MinorUnits, align 8
  %95 = call ptr @candy_builtin_struct_has_key(ptr %87, ptr %94)
  %96 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %97 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %98 = call ptr @"anonymous_$generated__needs"(ptr %95, ptr %96, ptr %97)
  %99 = load ptr, ptr @tag_MinorUnits, align 8
  %100 = call ptr @candy_builtin_struct_get(ptr %87, ptr %99)
  %101 = load ptr, ptr @num_0, align 8
  %102 = call ptr @candy_builtin_equals(ptr %100, ptr %101)
  %103 = call ptr @Core_bool_not(ptr %102)
  %104 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %105 = call ptr @"anonymous_$generated__needs"(ptr %103, ptr %104, ptr null)
  %106 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.397, align 8
  %107 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.425, align 8
  %108 = call ptr @candy_builtin_if_else(ptr %5, ptr %106, ptr %107)
  %109 = load ptr, ptr @num_0, align 8
  %110 = call ptr @candy_builtin_list_get(ptr %108, ptr %109)
  %111 = load ptr, ptr @tag_Match, align 8
  %112 = call ptr @candy_builtin_equals(ptr %110, ptr %111)
  %113 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %114 = getelementptr inbounds { ptr }, ptr %113, i32 0, i32 0
  store ptr %108, ptr %114, align 8
  %115 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.470, ptr %113, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %115, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.471, align 8
  %116 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.471, align 8
  %117 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %118 = call ptr @candy_builtin_if_else(ptr %112, ptr %116, ptr %117)
  %119 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %120 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:39", align 8
  %121 = call ptr @"anonymous_$generated__needs"(ptr %118, ptr %119, ptr %120)
  %122 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.431, align 8
  %123 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.459, align 8
  %124 = call ptr @candy_builtin_if_else(ptr %29, ptr %122, ptr %123)
  %125 = load ptr, ptr @num_0, align 8
  %126 = call ptr @candy_builtin_list_get(ptr %124, ptr %125)
  %127 = load ptr, ptr @tag_Match, align 8
  %128 = call ptr @candy_builtin_equals(ptr %126, ptr %127)
  %129 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %130 = getelementptr inbounds { ptr }, ptr %129, i32 0, i32 0
  store ptr %124, ptr %130, align 8
  %131 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.474, ptr %129, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %131, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.475, align 8
  %132 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.475, align 8
  %133 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %134 = call ptr @candy_builtin_if_else(ptr %128, ptr %132, ptr %133)
  %135 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %136 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:39", align 8
  %137 = call ptr @"anonymous_$generated__needs"(ptr %134, ptr %135, ptr %136)
  %138 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.397, align 8
  %139 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.425, align 8
  %140 = call ptr @candy_builtin_if_else(ptr %5, ptr %138, ptr %139)
  %141 = load ptr, ptr @num_0, align 8
  %142 = call ptr @candy_builtin_list_get(ptr %140, ptr %141)
  %143 = load ptr, ptr @tag_Match, align 8
  %144 = call ptr @candy_builtin_equals(ptr %142, ptr %143)
  %145 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %146 = getelementptr inbounds { ptr }, ptr %145, i32 0, i32 0
  store ptr %140, ptr %146, align 8
  %147 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.478, ptr %145, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %147, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.479, align 8
  %148 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.479, align 8
  %149 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %150 = call ptr @candy_builtin_if_else(ptr %144, ptr %148, ptr %149)
  %151 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %152 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:18", align 8
  %153 = call ptr @"anonymous_$generated__needs"(ptr %150, ptr %151, ptr %152)
  %154 = call ptr @candy_builtin_type_of(ptr %0)
  %155 = load ptr, ptr @tag_Tag, align 8
  %156 = call ptr @candy_builtin_equals(ptr %154, ptr %155)
  %157 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %158 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %159 = call ptr @"anonymous_$generated__needs"(ptr %156, ptr %157, ptr %158)
  %160 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %161 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %162 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %163 = call ptr @"anonymous_$generated__needs"(ptr %160, ptr %161, ptr %162)
  %164 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %165 = call ptr @candy_builtin_type_of(ptr %164)
  %166 = load ptr, ptr @tag_Struct, align 8
  %167 = call ptr @candy_builtin_equals(ptr %165, ptr %166)
  %168 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %169 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %170 = call ptr @"anonymous_$generated__needs"(ptr %167, ptr %168, ptr %169)
  %171 = load ptr, ptr @tag_Scale, align 8
  %172 = call ptr @candy_builtin_struct_has_key(ptr %164, ptr %171)
  %173 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %174 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %175 = call ptr @"anonymous_$generated__needs"(ptr %172, ptr %173, ptr %174)
  %176 = load ptr, ptr @tag_Scale, align 8
  %177 = call ptr @candy_builtin_struct_get(ptr %164, ptr %176)
  %178 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.431, align 8
  %179 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.459, align 8
  %180 = call ptr @candy_builtin_if_else(ptr %29, ptr %178, ptr %179)
  %181 = load ptr, ptr @num_0, align 8
  %182 = call ptr @candy_builtin_list_get(ptr %180, ptr %181)
  %183 = load ptr, ptr @tag_Match, align 8
  %184 = call ptr @candy_builtin_equals(ptr %182, ptr %183)
  %185 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %186 = getelementptr inbounds { ptr }, ptr %185, i32 0, i32 0
  store ptr %180, ptr %186, align 8
  %187 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.482, ptr %185, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %187, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.483, align 8
  %188 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.483, align 8
  %189 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %190 = call ptr @candy_builtin_if_else(ptr %184, ptr %188, ptr %189)
  %191 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %192 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:21", align 8
  %193 = call ptr @"anonymous_$generated__needs"(ptr %190, ptr %191, ptr %192)
  %194 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %195 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %196 = call ptr @"anonymous_$generated__needs"(ptr %79, ptr %194, ptr %195)
  %197 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %198 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %199 = call ptr @"anonymous_$generated__needs"(ptr %83, ptr %197, ptr %198)
  %200 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %201 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %202 = call ptr @"anonymous_$generated__needs"(ptr %90, ptr %200, ptr %201)
  %203 = load ptr, ptr @tag_Scale, align 8
  %204 = call ptr @candy_builtin_struct_has_key(ptr %87, ptr %203)
  %205 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %206 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %207 = call ptr @"anonymous_$generated__needs"(ptr %204, ptr %205, ptr %206)
  %208 = load ptr, ptr @tag_Scale, align 8
  %209 = call ptr @candy_builtin_struct_get(ptr %87, ptr %208)
  %210 = call ptr @Core_int_max(ptr %177, ptr %209)
  %211 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %210)
  %212 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %1, ptr %210)
  %213 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14.465, align 8
  %214 = call ptr @Core_bool_lazyAnd(ptr %53, ptr %213)
  %215 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %216 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:52", align 8
  %217 = call ptr @"anonymous_$generated__needs"(ptr %214, ptr %215, ptr %216)
  %218 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %219 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:13", align 8
  %220 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %218, ptr %219)
  %221 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %222 = load ptr, ptr @"Core:int:pow:12", align 8
  %223 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %221, ptr %222)
  %224 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %225 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %226 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %224, ptr %225)
  %227 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %228 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %229 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %227, ptr %228)
  %230 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %231 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %232 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %230, ptr %231)
  %233 = call ptr @candy_builtin_type_of(ptr %2)
  %234 = load ptr, ptr @tag_Int, align 8
  %235 = call ptr @candy_builtin_equals(ptr %233, ptr %234)
  %236 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %237 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %238 = call ptr @"anonymous_$generated__needs"(ptr %235, ptr %236, ptr %237)
  %239 = load ptr, ptr @num_0, align 8
  %240 = call ptr @candy_builtin_int_compare_to(ptr %2, ptr %239)
  %241 = load ptr, ptr @tag_Less, align 8
  %242 = call ptr @candy_builtin_equals(ptr %240, ptr %241)
  %243 = call ptr @Core_bool_not(ptr %242)
  %244 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %245 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:13", align 8
  %246 = call ptr @"anonymous_$generated__needs"(ptr %243, ptr %244, ptr %245)
  %247 = alloca ptr, i64 3, align 8
  %248 = alloca ptr, i64 3, align 8
  %249 = load ptr, ptr @tag_Exponent, align 8
  %250 = getelementptr ptr, ptr %247, i64 0
  store ptr %249, ptr %250, align 8
  %251 = getelementptr ptr, ptr %248, i64 0
  store ptr %2, ptr %251, align 8
  %252 = load ptr, ptr @tag_Base, align 8
  %253 = load ptr, ptr @num_10, align 8
  %254 = getelementptr ptr, ptr %247, i64 1
  store ptr %252, ptr %254, align 8
  %255 = getelementptr ptr, ptr %248, i64 1
  store ptr %253, ptr %255, align 8
  %256 = getelementptr ptr, ptr %247, i64 2
  store ptr null, ptr %256, align 8
  %257 = getelementptr ptr, ptr %248, i64 2
  store ptr null, ptr %257, align 8
  %258 = call ptr @make_candy_struct(ptr %247, ptr %248)
  %259 = load ptr, ptr @fun_Core_int_pow_21, align 8
  %260 = call ptr @Core_controlFlow_recursive(ptr %258, ptr %259)
  %261 = call ptr @candy_builtin_type_of(ptr %211)
  %262 = load ptr, ptr @tag_Int, align 8
  %263 = call ptr @candy_builtin_equals(ptr %261, ptr %262)
  %264 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %265 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  %266 = call ptr @"anonymous_$generated__needs"(ptr %263, ptr %264, ptr %265)
  %267 = call ptr @candy_builtin_type_of(ptr %260)
  %268 = load ptr, ptr @tag_Int, align 8
  %269 = call ptr @candy_builtin_equals(ptr %267, ptr %268)
  %270 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %271 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  %272 = call ptr @"anonymous_$generated__needs"(ptr %269, ptr %270, ptr %271)
  %273 = call ptr @candy_builtin_int_multiply(ptr %211, ptr %260)
  %274 = call ptr @Builtins__intDivideTruncating(ptr %273, ptr %212)
  %275 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %274, ptr %2)
  ret ptr %275
}

define ptr @Core_fixedDecimal_is_1_equals_then.396(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.398, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.399, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.422, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.423, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.399, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.423, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.398(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.400, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.401, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.401, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.400(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.402, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.403, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.420, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.421, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.403, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.421, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.402(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.404, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.405, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.406, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.407, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.405, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.407, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.408, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.409, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.418, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.419, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.409, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.419, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.404(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @108, align 8
  ret ptr @108
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.406(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @109, align 8
  ret ptr @109
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.408(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.410, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.411, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.412, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.413, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.411, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.413, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.414, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.415, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.416, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.417, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.415, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.417, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.410(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @110, align 8
  ret ptr @110
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.412(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @111, align 8
  ret ptr @111
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.414(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @112, align 8
  ret ptr @112
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.416(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.418(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.420(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @113, align 8
  ret ptr @113
}

define ptr @Core_fixedDecimal_is_1_equals_else.422(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @114, align 8
  ret ptr @114
}

define ptr @Core_fixedDecimal_is_1_equals_else.424(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @115, align 8
  ret ptr @115
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.426(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.428, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.429, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.429, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.428(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_equals_then.430(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.432, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.433, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.456, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.457, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.433, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.457, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.432(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.434, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.435, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.435, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.434(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.436, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.437, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.454, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.455, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.437, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.455, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.436(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.438, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.439, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.440, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.441, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.439, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.441, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.442, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.443, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.452, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.453, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.443, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.453, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.438(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @116, align 8
  ret ptr @116
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.440(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @117, align 8
  ret ptr @117
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.442(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.444, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.445, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.446, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.447, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.445, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.447, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.448, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.449, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.450, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.451, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.449, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.451, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.444(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @118, align 8
  ret ptr @118
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.446(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @119, align 8
  ret ptr @119
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.448(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @120, align 8
  ret ptr @120
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.450(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.452(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.454(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @121, align 8
  ret ptr @121
}

define ptr @Core_fixedDecimal_is_1_equals_else.456(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @122, align 8
  ret ptr @122
}

define ptr @Core_fixedDecimal_is_1_equals_else.458(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @123, align 8
  ret ptr @123
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.460(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.462, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.463, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.463, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.462(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_isScale_14.464(ptr %0) {
Core_fixedDecimal_isScale_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %15, ptr %16)
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @candy_builtin_type_of(ptr %19)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_int_compare_to(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Less, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = call ptr @Core_bool_not(ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.466(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.468, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.469, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.469, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.468(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.470(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.472, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.473, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.473, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.472(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.474(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.476, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.477, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.477, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.476(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.478(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.480, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.481, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.481, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.480(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.482(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.484, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.485, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.485, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.484(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_isLessThanOrEqualTo(ptr %0, ptr %1) {
Core_fixedDecimal_isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.486, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_fixedDecimal_is_1_equals_then.487, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.514, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_else.515, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.487, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.515, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.516, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.517, align 8
  %21 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.517, align 8
  %22 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %24, ptr null)
  %26 = call ptr @candy_builtin_type_of(ptr %1)
  %27 = load ptr, ptr @tag_Tag, align 8
  %28 = call ptr @candy_builtin_equals(ptr %27, ptr %26)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %1, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.520, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_fixedDecimal_is_1_equals_then.521, align 8
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %26, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.548, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_fixedDecimal_is_1_equals_else.549, align 8
  %35 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.521, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.549, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %28, ptr %35, ptr %36)
  %38 = load ptr, ptr @num_0, align 8
  %39 = call ptr @candy_builtin_list_get(ptr %37, ptr %38)
  %40 = load ptr, ptr @tag_Match, align 8
  %41 = call ptr @candy_builtin_equals(ptr %39, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr }, ptr %42, i32 0, i32 0
  store ptr %37, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.550, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.551, align 8
  %45 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.551, align 8
  %46 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %47 = call ptr @candy_builtin_if_else(ptr %41, ptr %45, ptr %46)
  %48 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %49 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr null)
  %50 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.487, align 8
  %51 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.515, align 8
  %52 = call ptr @candy_builtin_if_else(ptr %4, ptr %50, ptr %51)
  %53 = load ptr, ptr @num_0, align 8
  %54 = call ptr @candy_builtin_list_get(ptr %52, ptr %53)
  %55 = load ptr, ptr @tag_Match, align 8
  %56 = call ptr @candy_builtin_equals(ptr %54, ptr %55)
  %57 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %58 = getelementptr inbounds { ptr }, ptr %57, i32 0, i32 0
  store ptr %52, ptr %58, align 8
  %59 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.554, ptr %57, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %59, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.555, align 8
  %60 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.555, align 8
  %61 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %62 = call ptr @candy_builtin_if_else(ptr %56, ptr %60, ptr %61)
  %63 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %64 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %65 = call ptr @"anonymous_$generated__needs"(ptr %62, ptr %63, ptr %64)
  %66 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.521, align 8
  %67 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.549, align 8
  %68 = call ptr @candy_builtin_if_else(ptr %28, ptr %66, ptr %67)
  %69 = load ptr, ptr @num_0, align 8
  %70 = call ptr @candy_builtin_list_get(ptr %68, ptr %69)
  %71 = load ptr, ptr @tag_Match, align 8
  %72 = call ptr @candy_builtin_equals(ptr %70, ptr %71)
  %73 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %74 = getelementptr inbounds { ptr }, ptr %73, i32 0, i32 0
  store ptr %68, ptr %74, align 8
  %75 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.558, ptr %73, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %75, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.559, align 8
  %76 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.559, align 8
  %77 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %78 = call ptr @candy_builtin_if_else(ptr %72, ptr %76, ptr %77)
  %79 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %80 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %81 = call ptr @"anonymous_$generated__needs"(ptr %78, ptr %79, ptr %80)
  %82 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.487, align 8
  %83 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.515, align 8
  %84 = call ptr @candy_builtin_if_else(ptr %4, ptr %82, ptr %83)
  %85 = load ptr, ptr @num_0, align 8
  %86 = call ptr @candy_builtin_list_get(ptr %84, ptr %85)
  %87 = load ptr, ptr @tag_Match, align 8
  %88 = call ptr @candy_builtin_equals(ptr %86, ptr %87)
  %89 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %90 = getelementptr inbounds { ptr }, ptr %89, i32 0, i32 0
  store ptr %84, ptr %90, align 8
  %91 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.562, ptr %89, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %91, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.563, align 8
  %92 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.563, align 8
  %93 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %94 = call ptr @candy_builtin_if_else(ptr %88, ptr %92, ptr %93)
  %95 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %96 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:14", align 8
  %97 = call ptr @"anonymous_$generated__needs"(ptr %94, ptr %95, ptr %96)
  %98 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.521, align 8
  %99 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.549, align 8
  %100 = call ptr @candy_builtin_if_else(ptr %28, ptr %98, ptr %99)
  %101 = load ptr, ptr @num_0, align 8
  %102 = call ptr @candy_builtin_list_get(ptr %100, ptr %101)
  %103 = load ptr, ptr @tag_Match, align 8
  %104 = call ptr @candy_builtin_equals(ptr %102, ptr %103)
  %105 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %106 = getelementptr inbounds { ptr }, ptr %105, i32 0, i32 0
  store ptr %100, ptr %106, align 8
  %107 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.566, ptr %105, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %107, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.567, align 8
  %108 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.567, align 8
  %109 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %110 = call ptr @candy_builtin_if_else(ptr %104, ptr %108, ptr %109)
  %111 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %112 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:14", align 8
  %113 = call ptr @"anonymous_$generated__needs"(ptr %110, ptr %111, ptr %112)
  %114 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.487, align 8
  %115 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.515, align 8
  %116 = call ptr @candy_builtin_if_else(ptr %4, ptr %114, ptr %115)
  %117 = load ptr, ptr @num_0, align 8
  %118 = call ptr @candy_builtin_list_get(ptr %116, ptr %117)
  %119 = load ptr, ptr @tag_Match, align 8
  %120 = call ptr @candy_builtin_equals(ptr %118, ptr %119)
  %121 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %122 = getelementptr inbounds { ptr }, ptr %121, i32 0, i32 0
  store ptr %116, ptr %122, align 8
  %123 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.570, ptr %121, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %123, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.571, align 8
  %124 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.571, align 8
  %125 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %126 = call ptr @candy_builtin_if_else(ptr %120, ptr %124, ptr %125)
  %127 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %128 = load ptr, ptr @"Core:fixedDecimal:compareTo:13", align 8
  %129 = call ptr @"anonymous_$generated__needs"(ptr %126, ptr %127, ptr %128)
  %130 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.521, align 8
  %131 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.549, align 8
  %132 = call ptr @candy_builtin_if_else(ptr %28, ptr %130, ptr %131)
  %133 = load ptr, ptr @num_0, align 8
  %134 = call ptr @candy_builtin_list_get(ptr %132, ptr %133)
  %135 = load ptr, ptr @tag_Match, align 8
  %136 = call ptr @candy_builtin_equals(ptr %134, ptr %135)
  %137 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %138 = getelementptr inbounds { ptr }, ptr %137, i32 0, i32 0
  store ptr %132, ptr %138, align 8
  %139 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.574, ptr %137, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %139, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.575, align 8
  %140 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.575, align 8
  %141 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %142 = call ptr @candy_builtin_if_else(ptr %136, ptr %140, ptr %141)
  %143 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %144 = load ptr, ptr @"Core:fixedDecimal:compareTo:13", align 8
  %145 = call ptr @"anonymous_$generated__needs"(ptr %142, ptr %143, ptr %144)
  %146 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.487, align 8
  %147 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.515, align 8
  %148 = call ptr @candy_builtin_if_else(ptr %4, ptr %146, ptr %147)
  %149 = load ptr, ptr @num_0, align 8
  %150 = call ptr @candy_builtin_list_get(ptr %148, ptr %149)
  %151 = load ptr, ptr @tag_Match, align 8
  %152 = call ptr @candy_builtin_equals(ptr %150, ptr %151)
  %153 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %154 = getelementptr inbounds { ptr }, ptr %153, i32 0, i32 0
  store ptr %148, ptr %154, align 8
  %155 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.578, ptr %153, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %155, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.579, align 8
  %156 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.579, align 8
  %157 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %158 = call ptr @candy_builtin_if_else(ptr %152, ptr %156, ptr %157)
  %159 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %160 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:18", align 8
  %161 = call ptr @"anonymous_$generated__needs"(ptr %158, ptr %159, ptr %160)
  %162 = call ptr @candy_builtin_type_of(ptr %0)
  %163 = load ptr, ptr @tag_Tag, align 8
  %164 = call ptr @candy_builtin_equals(ptr %162, ptr %163)
  %165 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %166 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %167 = call ptr @"anonymous_$generated__needs"(ptr %164, ptr %165, ptr %166)
  %168 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %169 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %170 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %171 = call ptr @"anonymous_$generated__needs"(ptr %168, ptr %169, ptr %170)
  %172 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %173 = call ptr @candy_builtin_type_of(ptr %172)
  %174 = load ptr, ptr @tag_Struct, align 8
  %175 = call ptr @candy_builtin_equals(ptr %173, ptr %174)
  %176 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %177 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %178 = call ptr @"anonymous_$generated__needs"(ptr %175, ptr %176, ptr %177)
  %179 = load ptr, ptr @tag_Scale, align 8
  %180 = call ptr @candy_builtin_struct_has_key(ptr %172, ptr %179)
  %181 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %182 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %183 = call ptr @"anonymous_$generated__needs"(ptr %180, ptr %181, ptr %182)
  %184 = load ptr, ptr @tag_Scale, align 8
  %185 = call ptr @candy_builtin_struct_get(ptr %172, ptr %184)
  %186 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.521, align 8
  %187 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.549, align 8
  %188 = call ptr @candy_builtin_if_else(ptr %28, ptr %186, ptr %187)
  %189 = load ptr, ptr @num_0, align 8
  %190 = call ptr @candy_builtin_list_get(ptr %188, ptr %189)
  %191 = load ptr, ptr @tag_Match, align 8
  %192 = call ptr @candy_builtin_equals(ptr %190, ptr %191)
  %193 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %194 = getelementptr inbounds { ptr }, ptr %193, i32 0, i32 0
  store ptr %188, ptr %194, align 8
  %195 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.582, ptr %193, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %195, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.583, align 8
  %196 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.583, align 8
  %197 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %198 = call ptr @candy_builtin_if_else(ptr %192, ptr %196, ptr %197)
  %199 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %200 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:21", align 8
  %201 = call ptr @"anonymous_$generated__needs"(ptr %198, ptr %199, ptr %200)
  %202 = call ptr @candy_builtin_type_of(ptr %1)
  %203 = load ptr, ptr @tag_Tag, align 8
  %204 = call ptr @candy_builtin_equals(ptr %202, ptr %203)
  %205 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %206 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %207 = call ptr @"anonymous_$generated__needs"(ptr %204, ptr %205, ptr %206)
  %208 = call ptr @candy_builtin_tag_has_value(ptr %1)
  %209 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %210 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %211 = call ptr @"anonymous_$generated__needs"(ptr %208, ptr %209, ptr %210)
  %212 = call ptr @candy_builtin_tag_get_value(ptr %1)
  %213 = call ptr @candy_builtin_type_of(ptr %212)
  %214 = load ptr, ptr @tag_Struct, align 8
  %215 = call ptr @candy_builtin_equals(ptr %213, ptr %214)
  %216 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %217 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %218 = call ptr @"anonymous_$generated__needs"(ptr %215, ptr %216, ptr %217)
  %219 = load ptr, ptr @tag_Scale, align 8
  %220 = call ptr @candy_builtin_struct_has_key(ptr %212, ptr %219)
  %221 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %222 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %223 = call ptr @"anonymous_$generated__needs"(ptr %220, ptr %221, ptr %222)
  %224 = load ptr, ptr @tag_Scale, align 8
  %225 = call ptr @candy_builtin_struct_get(ptr %212, ptr %224)
  %226 = call ptr @Core_int_max(ptr %185, ptr %225)
  %227 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %226)
  %228 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %1, ptr %226)
  %229 = call ptr @Core_int_compareTo(ptr %227, ptr %228)
  %230 = load ptr, ptr @tag_Equal, align 8
  %231 = call ptr @candy_builtin_equals(ptr %229, ptr %230)
  %232 = call ptr @candy_builtin_equals(ptr %227, ptr %228)
  %233 = call ptr @Core_bool_implies(ptr %231, ptr %232)
  %234 = call ptr @Core_check_check(ptr %233)
  %235 = load ptr, ptr @tag_Greater, align 8
  %236 = call ptr @candy_builtin_equals(ptr %229, ptr %235)
  %237 = call ptr @Core_bool_not(ptr %236)
  ret ptr %237
}

define ptr @Core_fixedDecimal_is_1_equals_then.486(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.488, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.489, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.512, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.513, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.489, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.513, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.488(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.490, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.491, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.491, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.490(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.492, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.493, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.510, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.511, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.493, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.511, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.492(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.494, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.495, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.496, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.497, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.495, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.497, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.498, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.499, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.508, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.509, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.499, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.509, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.494(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @124, align 8
  ret ptr @124
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.496(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @125, align 8
  ret ptr @125
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.498(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.500, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.501, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.502, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.503, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.501, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.503, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.504, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.505, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.506, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.507, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.505, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.507, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.500(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @126, align 8
  ret ptr @126
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.502(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @127, align 8
  ret ptr @127
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.504(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @128, align 8
  ret ptr @128
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.506(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.508(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.510(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @129, align 8
  ret ptr @129
}

define ptr @Core_fixedDecimal_is_1_equals_else.512(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @130, align 8
  ret ptr @130
}

define ptr @Core_fixedDecimal_is_1_equals_else.514(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @131, align 8
  ret ptr @131
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.516(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.518, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.519, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.519, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.518(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_equals_then.520(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.522, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.523, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.546, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.547, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.523, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.547, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.522(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.524, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.525, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.525, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.524(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.526, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.527, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.544, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.545, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.527, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.545, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.526(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.528, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.529, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.530, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.531, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.529, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.531, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.532, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.533, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.542, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.543, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.533, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.543, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.528(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @132, align 8
  ret ptr @132
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.530(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @133, align 8
  ret ptr @133
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.532(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.534, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.535, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.536, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.537, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.535, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.537, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.538, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.539, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.540, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.541, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.539, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.541, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.534(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @134, align 8
  ret ptr @134
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.536(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @135, align 8
  ret ptr @135
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.538(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @136, align 8
  ret ptr @136
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.540(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.542(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.544(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @137, align 8
  ret ptr @137
}

define ptr @Core_fixedDecimal_is_1_equals_else.546(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @138, align 8
  ret ptr @138
}

define ptr @Core_fixedDecimal_is_1_equals_else.548(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @139, align 8
  ret ptr @139
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.550(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.552, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.553, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.553, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.552(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.554(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.556, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.557, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.557, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.556(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.558(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.560, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.561, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.561, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.560(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.562(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.564, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.565, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.565, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.564(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.566(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.568, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.569, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.569, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.568(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.570(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.572, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.573, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.573, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.572(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.574(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.576, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.577, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.577, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.576(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.578(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.580, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.581, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.581, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.580(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.582(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.584, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.585, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.585, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.584(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_absolute(ptr %0) {
Core_fixedDecimal_absolute:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.586, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_fixedDecimal_is_1_equals_then.587, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.614, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_else.615, align 8
  %10 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.587, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.615, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.616, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.617, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.617, align 8
  %21 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.587, align 8
  %26 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.615, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %3, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.620, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.621, align 8
  %35 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.621, align 8
  %36 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %39 = load ptr, ptr @"Core:fixedDecimal:absolute:8", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr %39)
  %41 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.587, align 8
  %42 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.615, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %3, ptr %41, ptr %42)
  %44 = load ptr, ptr @num_0, align 8
  %45 = call ptr @candy_builtin_list_get(ptr %43, ptr %44)
  %46 = load ptr, ptr @tag_Match, align 8
  %47 = call ptr @candy_builtin_equals(ptr %45, ptr %46)
  %48 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %49 = getelementptr inbounds { ptr }, ptr %48, i32 0, i32 0
  store ptr %43, ptr %49, align 8
  %50 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.624, ptr %48, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %50, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.625, align 8
  %51 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.625, align 8
  %52 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %53 = call ptr @candy_builtin_if_else(ptr %47, ptr %51, ptr %52)
  %54 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %55 = load ptr, ptr @"Core:fixedDecimal:isNegative:7", align 8
  %56 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %54, ptr %55)
  %57 = call ptr @candy_builtin_type_of(ptr %0)
  %58 = load ptr, ptr @tag_Tag, align 8
  %59 = call ptr @candy_builtin_equals(ptr %57, ptr %58)
  %60 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %61 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %62 = call ptr @"anonymous_$generated__needs"(ptr %59, ptr %60, ptr %61)
  %63 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %64 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %65 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %68 = call ptr @candy_builtin_type_of(ptr %67)
  %69 = load ptr, ptr @tag_Struct, align 8
  %70 = call ptr @candy_builtin_equals(ptr %68, ptr %69)
  %71 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = load ptr, ptr @tag_MinorUnits, align 8
  %75 = call ptr @candy_builtin_struct_has_key(ptr %67, ptr %74)
  %76 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %77 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %78 = call ptr @"anonymous_$generated__needs"(ptr %75, ptr %76, ptr %77)
  %79 = load ptr, ptr @tag_MinorUnits, align 8
  %80 = call ptr @candy_builtin_struct_get(ptr %67, ptr %79)
  %81 = load ptr, ptr @num_0, align 8
  %82 = call ptr @Core_int_isLessThan(ptr %80, ptr %81)
  %83 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %84 = getelementptr inbounds { ptr }, ptr %83, i32 0, i32 0
  store ptr %0, ptr %84, align 8
  %85 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute_9, ptr %83, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %85, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  %86 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %87 = getelementptr inbounds { ptr }, ptr %86, i32 0, i32 0
  store ptr %0, ptr %87, align 8
  %88 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute_10, ptr %86, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %88, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  %89 = load ptr, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  %90 = load ptr, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  %91 = call ptr @Builtins__ifElse(ptr %82, ptr %89, ptr %90)
  ret ptr %91
}

define ptr @Core_fixedDecimal_is_1_equals_then.586(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.588, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.589, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.612, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.613, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.589, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.613, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.588(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.590, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.591, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.591, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.590(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.592, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.593, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.610, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.611, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.593, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.611, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.592(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.594, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.595, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.596, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.597, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.595, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.597, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.598, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.599, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.608, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.609, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.599, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.609, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.594(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @140, align 8
  ret ptr @140
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.596(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @141, align 8
  ret ptr @141
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.598(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.600, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.601, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.602, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.603, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.601, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.603, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.604, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.605, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.606, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.607, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.605, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.607, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.600(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @142, align 8
  ret ptr @142
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.602(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @143, align 8
  ret ptr @143
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.604(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @144, align 8
  ret ptr @144
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.606(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.608(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.610(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @145, align 8
  ret ptr @145
}

define ptr @Core_fixedDecimal_is_1_equals_else.612(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @146, align 8
  ret ptr @146
}

define ptr @Core_fixedDecimal_is_1_equals_else.614(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @147, align 8
  ret ptr @147
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.616(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.618, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.619, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.619, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.618(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.620(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.622, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.623, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.623, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.622(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.624(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.626, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.627, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.627, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.626(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_absolute_9(ptr %0) {
Core_fixedDecimal_absolute_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.628, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.629, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.656, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.657, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.629, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.657, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.658, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.659, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.659, align 8
  %25 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:fixedDecimal:absolute:9:2", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.629, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.657, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %5, ptr %30, ptr %31)
  %33 = load ptr, ptr @num_0, align 8
  %34 = call ptr @candy_builtin_list_get(ptr %32, ptr %33)
  %35 = load ptr, ptr @tag_Match, align 8
  %36 = call ptr @candy_builtin_equals(ptr %34, ptr %35)
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr }, ptr %37, i32 0, i32 0
  store ptr %32, ptr %38, align 8
  %39 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.662, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %39, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.663, align 8
  %40 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.663, align 8
  %41 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %42 = call ptr @candy_builtin_if_else(ptr %36, ptr %40, ptr %41)
  %43 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %44 = load ptr, ptr @"Core:fixedDecimal:negate:8", align 8
  %45 = call ptr @"anonymous_$generated__needs"(ptr %42, ptr %43, ptr %44)
  %46 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %47 = load ptr, ptr %46, align 8
  %48 = call ptr @candy_builtin_type_of(ptr %47)
  %49 = load ptr, ptr @tag_Tag, align 8
  %50 = call ptr @candy_builtin_equals(ptr %48, ptr %49)
  %51 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %52 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %53 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %51, ptr %52)
  %54 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %55 = load ptr, ptr %54, align 8
  %56 = call ptr @candy_builtin_tag_has_value(ptr %55)
  %57 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %61 = load ptr, ptr %60, align 8
  %62 = call ptr @candy_builtin_tag_get_value(ptr %61)
  %63 = call ptr @candy_builtin_type_of(ptr %62)
  %64 = load ptr, ptr @tag_Struct, align 8
  %65 = call ptr @candy_builtin_equals(ptr %63, ptr %64)
  %66 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %67 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %68 = call ptr @"anonymous_$generated__needs"(ptr %65, ptr %66, ptr %67)
  %69 = load ptr, ptr @tag_MinorUnits, align 8
  %70 = call ptr @candy_builtin_struct_has_key(ptr %62, ptr %69)
  %71 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = load ptr, ptr @tag_MinorUnits, align 8
  %75 = call ptr @candy_builtin_struct_get(ptr %62, ptr %74)
  %76 = call ptr @candy_builtin_type_of(ptr %75)
  %77 = load ptr, ptr @tag_Int, align 8
  %78 = call ptr @candy_builtin_equals(ptr %76, ptr %77)
  %79 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %80 = load ptr, ptr @"Core:fixedDecimal:negate:15", align 8
  %81 = call ptr @"anonymous_$generated__needs"(ptr %78, ptr %79, ptr %80)
  %82 = call ptr @candy_builtin_type_of(ptr %75)
  %83 = load ptr, ptr @tag_Int, align 8
  %84 = call ptr @candy_builtin_equals(ptr %82, ptr %83)
  %85 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %86 = load ptr, ptr @"Core:int:negate:8", align 8
  %87 = call ptr @"anonymous_$generated__needs"(ptr %84, ptr %85, ptr %86)
  %88 = load ptr, ptr @num_0, align 8
  %89 = call ptr @candy_builtin_int_subtract(ptr %88, ptr %75)
  %90 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.629, align 8
  %91 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.657, align 8
  %92 = call ptr @candy_builtin_if_else(ptr %5, ptr %90, ptr %91)
  %93 = load ptr, ptr @num_0, align 8
  %94 = call ptr @candy_builtin_list_get(ptr %92, ptr %93)
  %95 = load ptr, ptr @tag_Match, align 8
  %96 = call ptr @candy_builtin_equals(ptr %94, ptr %95)
  %97 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %98 = getelementptr inbounds { ptr }, ptr %97, i32 0, i32 0
  store ptr %92, ptr %98, align 8
  %99 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.666, ptr %97, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %99, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.667, align 8
  %100 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.667, align 8
  %101 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %102 = call ptr @candy_builtin_if_else(ptr %96, ptr %100, ptr %101)
  %103 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %104 = load ptr, ptr @"Core:fixedDecimal:negate:18", align 8
  %105 = call ptr @"anonymous_$generated__needs"(ptr %102, ptr %103, ptr %104)
  %106 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %107 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %108 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %106, ptr %107)
  %109 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %110 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %111 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %109, ptr %110)
  %112 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %113 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %114 = call ptr @"anonymous_$generated__needs"(ptr %65, ptr %112, ptr %113)
  %115 = load ptr, ptr @tag_Scale, align 8
  %116 = call ptr @candy_builtin_struct_has_key(ptr %62, ptr %115)
  %117 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %118 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %119 = call ptr @"anonymous_$generated__needs"(ptr %116, ptr %117, ptr %118)
  %120 = load ptr, ptr @tag_Scale, align 8
  %121 = call ptr @candy_builtin_struct_get(ptr %62, ptr %120)
  %122 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %89, ptr %121)
  ret ptr %122
}

define ptr @Core_fixedDecimal_is_1_equals_then.628(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.630, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.631, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.654, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.655, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.631, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.655, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.630(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.632, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.633, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.633, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.632(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.634, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.635, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.652, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.653, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.635, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.653, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.634(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.636, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.637, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.638, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.639, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.637, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.639, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.640, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.641, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.650, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.651, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.641, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.651, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.636(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @148, align 8
  ret ptr @148
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.638(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @149, align 8
  ret ptr @149
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.640(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.642, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.643, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.644, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.645, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.643, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.645, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.646, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.647, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.648, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.649, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.647, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.649, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.642(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @150, align 8
  ret ptr @150
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.644(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @151, align 8
  ret ptr @151
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.646(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @152, align 8
  ret ptr @152
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.648(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.650(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.652(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @153, align 8
  ret ptr @153
}

define ptr @Core_fixedDecimal_is_1_equals_else.654(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @154, align 8
  ret ptr @154
}

define ptr @Core_fixedDecimal_is_1_equals_else.656(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @155, align 8
  ret ptr @155
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.658(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.660, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.661, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.661, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.660(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.662(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.664, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.665, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.665, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.664(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.666(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.668, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.669, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.669, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.668(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_absolute_10(ptr %0) {
Core_fixedDecimal_absolute_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_approxEquals(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_approxEquals:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.670, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_fixedDecimal_is_1_equals_then.671, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.698, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_fixedDecimal_is_1_equals_else.699, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.671, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.699, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.700, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.701, align 8
  %22 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.701, align 8
  %23 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_type_of(ptr %1)
  %28 = load ptr, ptr @tag_Tag, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %1, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.704, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_equals_then.705, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %27, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.732, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_is_1_equals_else.733, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.705, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.733, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  %39 = load ptr, ptr @num_0, align 8
  %40 = call ptr @candy_builtin_list_get(ptr %38, ptr %39)
  %41 = load ptr, ptr @tag_Match, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %44 = getelementptr inbounds { ptr }, ptr %43, i32 0, i32 0
  store ptr %38, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.734, ptr %43, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.735, align 8
  %46 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.735, align 8
  %47 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %48 = call ptr @candy_builtin_if_else(ptr %42, ptr %46, ptr %47)
  %49 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %48, ptr %49, ptr null)
  %51 = call ptr @candy_builtin_type_of(ptr %2)
  %52 = load ptr, ptr @tag_Tag, align 8
  %53 = call ptr @candy_builtin_equals(ptr %52, ptr %51)
  %54 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %55 = getelementptr inbounds { ptr }, ptr %54, i32 0, i32 0
  store ptr %2, ptr %55, align 8
  %56 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.738, ptr %54, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %56, ptr @fun_Core_fixedDecimal_is_1_equals_then.739, align 8
  %57 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %58 = getelementptr inbounds { ptr }, ptr %57, i32 0, i32 0
  store ptr %51, ptr %58, align 8
  %59 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.766, ptr %57, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %59, ptr @fun_Core_fixedDecimal_is_1_equals_else.767, align 8
  %60 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.739, align 8
  %61 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.767, align 8
  %62 = call ptr @candy_builtin_if_else(ptr %53, ptr %60, ptr %61)
  %63 = load ptr, ptr @num_0, align 8
  %64 = call ptr @candy_builtin_list_get(ptr %62, ptr %63)
  %65 = load ptr, ptr @tag_Match, align 8
  %66 = call ptr @candy_builtin_equals(ptr %64, ptr %65)
  %67 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %68 = getelementptr inbounds { ptr }, ptr %67, i32 0, i32 0
  store ptr %62, ptr %68, align 8
  %69 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.768, ptr %67, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %69, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.769, align 8
  %70 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.769, align 8
  %71 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %72 = call ptr @candy_builtin_if_else(ptr %66, ptr %70, ptr %71)
  %73 = load ptr, ptr @"text_`is delta` was not satisfied", align 8
  %74 = call ptr @"anonymous_$generated__needs"(ptr %72, ptr %73, ptr null)
  %75 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.739, align 8
  %76 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.767, align 8
  %77 = call ptr @candy_builtin_if_else(ptr %53, ptr %75, ptr %76)
  %78 = load ptr, ptr @num_0, align 8
  %79 = call ptr @candy_builtin_list_get(ptr %77, ptr %78)
  %80 = load ptr, ptr @tag_Match, align 8
  %81 = call ptr @candy_builtin_equals(ptr %79, ptr %80)
  %82 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %83 = getelementptr inbounds { ptr }, ptr %82, i32 0, i32 0
  store ptr %77, ptr %83, align 8
  %84 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.772, ptr %82, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %84, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.773, align 8
  %85 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.773, align 8
  %86 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %87 = call ptr @candy_builtin_if_else(ptr %81, ptr %85, ptr %86)
  %88 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %89 = load ptr, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  %90 = call ptr @"anonymous_$generated__needs"(ptr %87, ptr %88, ptr %89)
  %91 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.739, align 8
  %92 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.767, align 8
  %93 = call ptr @candy_builtin_if_else(ptr %53, ptr %91, ptr %92)
  %94 = load ptr, ptr @num_0, align 8
  %95 = call ptr @candy_builtin_list_get(ptr %93, ptr %94)
  %96 = load ptr, ptr @tag_Match, align 8
  %97 = call ptr @candy_builtin_equals(ptr %95, ptr %96)
  %98 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %99 = getelementptr inbounds { ptr }, ptr %98, i32 0, i32 0
  store ptr %93, ptr %99, align 8
  %100 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.776, ptr %98, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %100, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.777, align 8
  %101 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.777, align 8
  %102 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %103 = call ptr @candy_builtin_if_else(ptr %97, ptr %101, ptr %102)
  %104 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %105 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  %106 = call ptr @"anonymous_$generated__needs"(ptr %103, ptr %104, ptr %105)
  %107 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.739, align 8
  %108 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.767, align 8
  %109 = call ptr @candy_builtin_if_else(ptr %53, ptr %107, ptr %108)
  %110 = load ptr, ptr @num_0, align 8
  %111 = call ptr @candy_builtin_list_get(ptr %109, ptr %110)
  %112 = load ptr, ptr @tag_Match, align 8
  %113 = call ptr @candy_builtin_equals(ptr %111, ptr %112)
  %114 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %115 = getelementptr inbounds { ptr }, ptr %114, i32 0, i32 0
  store ptr %109, ptr %115, align 8
  %116 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.780, ptr %114, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %116, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.781, align 8
  %117 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.781, align 8
  %118 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %119 = call ptr @candy_builtin_if_else(ptr %113, ptr %117, ptr %118)
  %120 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %121 = load ptr, ptr @"Core:fixedDecimal:isNegative:7", align 8
  %122 = call ptr @"anonymous_$generated__needs"(ptr %119, ptr %120, ptr %121)
  %123 = call ptr @candy_builtin_type_of(ptr %2)
  %124 = load ptr, ptr @tag_Tag, align 8
  %125 = call ptr @candy_builtin_equals(ptr %123, ptr %124)
  %126 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %127 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %128 = call ptr @"anonymous_$generated__needs"(ptr %125, ptr %126, ptr %127)
  %129 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %130 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %131 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %132 = call ptr @"anonymous_$generated__needs"(ptr %129, ptr %130, ptr %131)
  %133 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %134 = call ptr @candy_builtin_type_of(ptr %133)
  %135 = load ptr, ptr @tag_Struct, align 8
  %136 = call ptr @candy_builtin_equals(ptr %134, ptr %135)
  %137 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %138 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %139 = call ptr @"anonymous_$generated__needs"(ptr %136, ptr %137, ptr %138)
  %140 = load ptr, ptr @tag_MinorUnits, align 8
  %141 = call ptr @candy_builtin_struct_has_key(ptr %133, ptr %140)
  %142 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %143 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %144 = call ptr @"anonymous_$generated__needs"(ptr %141, ptr %142, ptr %143)
  %145 = load ptr, ptr @tag_MinorUnits, align 8
  %146 = call ptr @candy_builtin_struct_get(ptr %133, ptr %145)
  %147 = load ptr, ptr @num_0, align 8
  %148 = call ptr @Core_int_isLessThan(ptr %146, ptr %147)
  %149 = call ptr @Core_bool_not(ptr %148)
  %150 = load ptr, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  %151 = call ptr @"anonymous_$generated__needs"(ptr %149, ptr %150, ptr null)
  %152 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.671, align 8
  %153 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.699, align 8
  %154 = call ptr @candy_builtin_if_else(ptr %5, ptr %152, ptr %153)
  %155 = load ptr, ptr @num_0, align 8
  %156 = call ptr @candy_builtin_list_get(ptr %154, ptr %155)
  %157 = load ptr, ptr @tag_Match, align 8
  %158 = call ptr @candy_builtin_equals(ptr %156, ptr %157)
  %159 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %160 = getelementptr inbounds { ptr }, ptr %159, i32 0, i32 0
  store ptr %154, ptr %160, align 8
  %161 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.784, ptr %159, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %161, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.785, align 8
  %162 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.785, align 8
  %163 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %164 = call ptr @candy_builtin_if_else(ptr %158, ptr %162, ptr %163)
  %165 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  %166 = load ptr, ptr @"Core:fixedDecimal:approxEquals:23", align 8
  %167 = call ptr @"anonymous_$generated__needs"(ptr %164, ptr %165, ptr %166)
  %168 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.705, align 8
  %169 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.733, align 8
  %170 = call ptr @candy_builtin_if_else(ptr %29, ptr %168, ptr %169)
  %171 = load ptr, ptr @num_0, align 8
  %172 = call ptr @candy_builtin_list_get(ptr %170, ptr %171)
  %173 = load ptr, ptr @tag_Match, align 8
  %174 = call ptr @candy_builtin_equals(ptr %172, ptr %173)
  %175 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %176 = getelementptr inbounds { ptr }, ptr %175, i32 0, i32 0
  store ptr %170, ptr %176, align 8
  %177 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.788, ptr %175, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %177, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.789, align 8
  %178 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.789, align 8
  %179 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %180 = call ptr @candy_builtin_if_else(ptr %174, ptr %178, ptr %179)
  %181 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  %182 = load ptr, ptr @"Core:fixedDecimal:approxEquals:23", align 8
  %183 = call ptr @"anonymous_$generated__needs"(ptr %180, ptr %181, ptr %182)
  %184 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.671, align 8
  %185 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.699, align 8
  %186 = call ptr @candy_builtin_if_else(ptr %5, ptr %184, ptr %185)
  %187 = load ptr, ptr @num_0, align 8
  %188 = call ptr @candy_builtin_list_get(ptr %186, ptr %187)
  %189 = load ptr, ptr @tag_Match, align 8
  %190 = call ptr @candy_builtin_equals(ptr %188, ptr %189)
  %191 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %192 = getelementptr inbounds { ptr }, ptr %191, i32 0, i32 0
  store ptr %186, ptr %192, align 8
  %193 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.792, ptr %191, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %193, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.793, align 8
  %194 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.793, align 8
  %195 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %196 = call ptr @candy_builtin_if_else(ptr %190, ptr %194, ptr %195)
  %197 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %198 = load ptr, ptr @"Core:fixedDecimal:subtract:13", align 8
  %199 = call ptr @"anonymous_$generated__needs"(ptr %196, ptr %197, ptr %198)
  %200 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.705, align 8
  %201 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.733, align 8
  %202 = call ptr @candy_builtin_if_else(ptr %29, ptr %200, ptr %201)
  %203 = load ptr, ptr @num_0, align 8
  %204 = call ptr @candy_builtin_list_get(ptr %202, ptr %203)
  %205 = load ptr, ptr @tag_Match, align 8
  %206 = call ptr @candy_builtin_equals(ptr %204, ptr %205)
  %207 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %208 = getelementptr inbounds { ptr }, ptr %207, i32 0, i32 0
  store ptr %202, ptr %208, align 8
  %209 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.796, ptr %207, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %209, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.797, align 8
  %210 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.797, align 8
  %211 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %212 = call ptr @candy_builtin_if_else(ptr %206, ptr %210, ptr %211)
  %213 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %214 = load ptr, ptr @"Core:fixedDecimal:subtract:13", align 8
  %215 = call ptr @"anonymous_$generated__needs"(ptr %212, ptr %213, ptr %214)
  %216 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.671, align 8
  %217 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.699, align 8
  %218 = call ptr @candy_builtin_if_else(ptr %5, ptr %216, ptr %217)
  %219 = load ptr, ptr @num_0, align 8
  %220 = call ptr @candy_builtin_list_get(ptr %218, ptr %219)
  %221 = load ptr, ptr @tag_Match, align 8
  %222 = call ptr @candy_builtin_equals(ptr %220, ptr %221)
  %223 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %224 = getelementptr inbounds { ptr }, ptr %223, i32 0, i32 0
  store ptr %218, ptr %224, align 8
  %225 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.800, ptr %223, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %225, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.801, align 8
  %226 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.801, align 8
  %227 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %228 = call ptr @candy_builtin_if_else(ptr %222, ptr %226, ptr %227)
  %229 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %230 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:18", align 8
  %231 = call ptr @"anonymous_$generated__needs"(ptr %228, ptr %229, ptr %230)
  %232 = call ptr @candy_builtin_type_of(ptr %0)
  %233 = load ptr, ptr @tag_Tag, align 8
  %234 = call ptr @candy_builtin_equals(ptr %232, ptr %233)
  %235 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %236 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %237 = call ptr @"anonymous_$generated__needs"(ptr %234, ptr %235, ptr %236)
  %238 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %239 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %240 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %241 = call ptr @"anonymous_$generated__needs"(ptr %238, ptr %239, ptr %240)
  %242 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %243 = call ptr @candy_builtin_type_of(ptr %242)
  %244 = load ptr, ptr @tag_Struct, align 8
  %245 = call ptr @candy_builtin_equals(ptr %243, ptr %244)
  %246 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %247 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %248 = call ptr @"anonymous_$generated__needs"(ptr %245, ptr %246, ptr %247)
  %249 = load ptr, ptr @tag_Scale, align 8
  %250 = call ptr @candy_builtin_struct_has_key(ptr %242, ptr %249)
  %251 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %252 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %253 = call ptr @"anonymous_$generated__needs"(ptr %250, ptr %251, ptr %252)
  %254 = load ptr, ptr @tag_Scale, align 8
  %255 = call ptr @candy_builtin_struct_get(ptr %242, ptr %254)
  %256 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.705, align 8
  %257 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.733, align 8
  %258 = call ptr @candy_builtin_if_else(ptr %29, ptr %256, ptr %257)
  %259 = load ptr, ptr @num_0, align 8
  %260 = call ptr @candy_builtin_list_get(ptr %258, ptr %259)
  %261 = load ptr, ptr @tag_Match, align 8
  %262 = call ptr @candy_builtin_equals(ptr %260, ptr %261)
  %263 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %264 = getelementptr inbounds { ptr }, ptr %263, i32 0, i32 0
  store ptr %258, ptr %264, align 8
  %265 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.804, ptr %263, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %265, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.805, align 8
  %266 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.805, align 8
  %267 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %268 = call ptr @candy_builtin_if_else(ptr %262, ptr %266, ptr %267)
  %269 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %270 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:21", align 8
  %271 = call ptr @"anonymous_$generated__needs"(ptr %268, ptr %269, ptr %270)
  %272 = call ptr @candy_builtin_type_of(ptr %1)
  %273 = load ptr, ptr @tag_Tag, align 8
  %274 = call ptr @candy_builtin_equals(ptr %272, ptr %273)
  %275 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %276 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %277 = call ptr @"anonymous_$generated__needs"(ptr %274, ptr %275, ptr %276)
  %278 = call ptr @candy_builtin_tag_has_value(ptr %1)
  %279 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %280 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %281 = call ptr @"anonymous_$generated__needs"(ptr %278, ptr %279, ptr %280)
  %282 = call ptr @candy_builtin_tag_get_value(ptr %1)
  %283 = call ptr @candy_builtin_type_of(ptr %282)
  %284 = load ptr, ptr @tag_Struct, align 8
  %285 = call ptr @candy_builtin_equals(ptr %283, ptr %284)
  %286 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %287 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %288 = call ptr @"anonymous_$generated__needs"(ptr %285, ptr %286, ptr %287)
  %289 = load ptr, ptr @tag_Scale, align 8
  %290 = call ptr @candy_builtin_struct_has_key(ptr %282, ptr %289)
  %291 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %292 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %293 = call ptr @"anonymous_$generated__needs"(ptr %290, ptr %291, ptr %292)
  %294 = load ptr, ptr @tag_Scale, align 8
  %295 = call ptr @candy_builtin_struct_get(ptr %282, ptr %294)
  %296 = call ptr @Core_int_max(ptr %255, ptr %295)
  %297 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %296)
  %298 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %1, ptr %296)
  %299 = call ptr @candy_builtin_type_of(ptr %297)
  %300 = load ptr, ptr @tag_Int, align 8
  %301 = call ptr @candy_builtin_equals(ptr %299, ptr %300)
  %302 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %303 = load ptr, ptr @"Core:fixedDecimal:subtract:25", align 8
  %304 = call ptr @"anonymous_$generated__needs"(ptr %301, ptr %302, ptr %303)
  %305 = call ptr @candy_builtin_type_of(ptr %298)
  %306 = load ptr, ptr @tag_Int, align 8
  %307 = call ptr @candy_builtin_equals(ptr %305, ptr %306)
  %308 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %309 = load ptr, ptr @"Core:fixedDecimal:subtract:25", align 8
  %310 = call ptr @"anonymous_$generated__needs"(ptr %307, ptr %308, ptr %309)
  %311 = call ptr @candy_builtin_int_subtract(ptr %297, ptr %298)
  %312 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %311, ptr %296)
  %313 = call ptr @Core_fixedDecimal_absolute(ptr %312)
  %314 = call ptr @Core_fixedDecimal_isLessThanOrEqualTo(ptr %313, ptr %2)
  ret ptr %314
}

define ptr @Core_fixedDecimal_is_1_equals_then.670(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.672, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.673, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.696, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.697, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.673, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.697, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.672(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.674, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.675, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.675, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.674(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.676, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.677, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.694, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.695, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.677, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.695, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.676(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.678, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.679, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.680, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.681, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.679, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.681, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.682, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.683, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.692, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.693, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.683, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.693, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.678(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @156, align 8
  ret ptr @156
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.680(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @157, align 8
  ret ptr @157
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.682(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.684, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.685, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.686, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.687, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.685, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.687, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.688, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.689, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.690, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.691, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.689, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.691, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.684(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @158, align 8
  ret ptr @158
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.686(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @159, align 8
  ret ptr @159
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.688(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @160, align 8
  ret ptr @160
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.690(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.692(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.694(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @161, align 8
  ret ptr @161
}

define ptr @Core_fixedDecimal_is_1_equals_else.696(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @162, align 8
  ret ptr @162
}

define ptr @Core_fixedDecimal_is_1_equals_else.698(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @163, align 8
  ret ptr @163
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.700(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.702, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.703, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.703, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.702(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_equals_then.704(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.706, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.707, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.730, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.731, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.707, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.731, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.706(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.708, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.709, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.709, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.708(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.710, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.711, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.728, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.729, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.711, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.729, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.710(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.712, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.713, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.714, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.715, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.713, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.715, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.716, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.717, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.726, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.727, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.717, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.727, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.712(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @164, align 8
  ret ptr @164
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.714(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @165, align 8
  ret ptr @165
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.716(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.718, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.719, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.720, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.721, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.719, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.721, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.722, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.723, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.724, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.725, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.723, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.725, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.718(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @166, align 8
  ret ptr @166
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.720(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @167, align 8
  ret ptr @167
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.722(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @168, align 8
  ret ptr @168
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.724(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.726(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.728(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @169, align 8
  ret ptr @169
}

define ptr @Core_fixedDecimal_is_1_equals_else.730(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @170, align 8
  ret ptr @170
}

define ptr @Core_fixedDecimal_is_1_equals_else.732(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @171, align 8
  ret ptr @171
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.734(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.736, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.737, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.737, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.736(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_equals_then.738(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.740, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.741, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.764, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.765, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.741, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.765, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.740(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.742, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.743, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.743, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.742(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.744, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.745, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.762, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.763, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.745, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.763, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.744(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.746, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.747, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.748, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.749, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.747, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.749, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.750, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.751, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.760, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.761, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.751, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.761, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.746(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @172, align 8
  ret ptr @172
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.748(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @173, align 8
  ret ptr @173
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.750(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.752, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.753, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.754, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.755, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.753, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.755, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.756, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.757, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.758, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.759, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.757, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.759, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.752(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @174, align 8
  ret ptr @174
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.754(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @175, align 8
  ret ptr @175
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.756(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @176, align 8
  ret ptr @176
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.758(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.760(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.762(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @177, align 8
  ret ptr @177
}

define ptr @Core_fixedDecimal_is_1_equals_else.764(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @178, align 8
  ret ptr @178
}

define ptr @Core_fixedDecimal_is_1_equals_else.766(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @179, align 8
  ret ptr @179
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.768(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.770, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.771, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.771, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.770(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.772(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.774, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.775, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.775, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.774(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.776(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.778, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.779, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.779, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.778(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.780(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.782, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.783, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.783, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.782(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.784(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.786, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.787, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.787, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.786(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.788(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.790, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.791, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.791, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.790(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.792(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.794, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.795, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.795, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.794(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.796(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.798, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.799, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.799, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.798(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.800(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.802, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.803, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.803, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.802(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.804(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.806, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.807, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.807, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.806(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText(ptr %0) {
Core_fixedDecimal_toText:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.808, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_fixedDecimal_is_1_equals_then.809, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.836, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_else.837, align 8
  %10 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.809, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.837, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.838, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.839, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.839, align 8
  %21 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.809, align 8
  %26 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.837, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %3, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.842, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.843, align 8
  %35 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.843, align 8
  %36 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %39 = load ptr, ptr @"Core:fixedDecimal:toText:7", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr %39)
  %41 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.809, align 8
  %42 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.837, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %3, ptr %41, ptr %42)
  %44 = load ptr, ptr @num_0, align 8
  %45 = call ptr @candy_builtin_list_get(ptr %43, ptr %44)
  %46 = load ptr, ptr @tag_Match, align 8
  %47 = call ptr @candy_builtin_equals(ptr %45, ptr %46)
  %48 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %49 = getelementptr inbounds { ptr }, ptr %48, i32 0, i32 0
  store ptr %43, ptr %49, align 8
  %50 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.846, ptr %48, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %50, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.847, align 8
  %51 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.847, align 8
  %52 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %53 = call ptr @candy_builtin_if_else(ptr %47, ptr %51, ptr %52)
  %54 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %55 = load ptr, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  %56 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %54, ptr %55)
  %57 = call ptr @candy_builtin_type_of(ptr %0)
  %58 = load ptr, ptr @tag_Tag, align 8
  %59 = call ptr @candy_builtin_equals(ptr %57, ptr %58)
  %60 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %61 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %62 = call ptr @"anonymous_$generated__needs"(ptr %59, ptr %60, ptr %61)
  %63 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %64 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %65 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %68 = call ptr @candy_builtin_type_of(ptr %67)
  %69 = load ptr, ptr @tag_Struct, align 8
  %70 = call ptr @candy_builtin_equals(ptr %68, ptr %69)
  %71 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = load ptr, ptr @tag_MinorUnits, align 8
  %75 = call ptr @candy_builtin_struct_has_key(ptr %67, ptr %74)
  %76 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %77 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %78 = call ptr @"anonymous_$generated__needs"(ptr %75, ptr %76, ptr %77)
  %79 = load ptr, ptr @tag_MinorUnits, align 8
  %80 = call ptr @candy_builtin_struct_get(ptr %67, ptr %79)
  %81 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.809, align 8
  %82 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.837, align 8
  %83 = call ptr @candy_builtin_if_else(ptr %3, ptr %81, ptr %82)
  %84 = load ptr, ptr @num_0, align 8
  %85 = call ptr @candy_builtin_list_get(ptr %83, ptr %84)
  %86 = load ptr, ptr @tag_Match, align 8
  %87 = call ptr @candy_builtin_equals(ptr %85, ptr %86)
  %88 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %89 = getelementptr inbounds { ptr }, ptr %88, i32 0, i32 0
  store ptr %83, ptr %89, align 8
  %90 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.850, ptr %88, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %90, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.851, align 8
  %91 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.851, align 8
  %92 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %93 = call ptr @candy_builtin_if_else(ptr %87, ptr %91, ptr %92)
  %94 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %95 = load ptr, ptr @"Core:fixedDecimal:floorToInt:16", align 8
  %96 = call ptr @"anonymous_$generated__needs"(ptr %93, ptr %94, ptr %95)
  %97 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %98 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %99 = call ptr @"anonymous_$generated__needs"(ptr %59, ptr %97, ptr %98)
  %100 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %101 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %102 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %100, ptr %101)
  %103 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %104 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %105 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %103, ptr %104)
  %106 = load ptr, ptr @tag_Scale, align 8
  %107 = call ptr @candy_builtin_struct_has_key(ptr %67, ptr %106)
  %108 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %109 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %110 = call ptr @"anonymous_$generated__needs"(ptr %107, ptr %108, ptr %109)
  %111 = load ptr, ptr @tag_Scale, align 8
  %112 = call ptr @candy_builtin_struct_get(ptr %67, ptr %111)
  %113 = call ptr @Core_fixedDecimal_scaleFactor(ptr %112)
  %114 = call ptr @Builtins__intDivideTruncating(ptr %80, ptr %113)
  %115 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %116 = getelementptr inbounds { ptr }, ptr %115, i32 0, i32 0
  store ptr %0, ptr %116, align 8
  %117 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10, ptr %115, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %117, ptr @fun_Core_fixedDecimal_toText_10, align 8
  %118 = load ptr, ptr @fun_Core_fixedDecimal_toText_10, align 8
  %119 = call ptr @Core_function_run(ptr %118)
  %120 = call ptr @candy_builtin_type_of(ptr %114)
  %121 = load ptr, ptr @tag_Text, align 8
  %122 = call ptr @candy_builtin_equals(ptr %120, ptr %121)
  %123 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %124 = getelementptr inbounds { ptr }, ptr %123, i32 0, i32 0
  store ptr %114, ptr %124, align 8
  %125 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_22, ptr %123, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %125, ptr @fun_Core_fixedDecimal_toText_22, align 8
  %126 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %127 = getelementptr inbounds { ptr }, ptr %126, i32 0, i32 0
  store ptr %114, ptr %127, align 8
  %128 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_23, ptr %126, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %128, ptr @fun_Core_fixedDecimal_toText_23, align 8
  %129 = load ptr, ptr @fun_Core_fixedDecimal_toText_22, align 8
  %130 = load ptr, ptr @fun_Core_fixedDecimal_toText_23, align 8
  %131 = call ptr @candy_builtin_if_else(ptr %122, ptr %129, ptr %130)
  %132 = call ptr @candy_builtin_type_of(ptr %119)
  %133 = load ptr, ptr @tag_Text, align 8
  %134 = call ptr @candy_builtin_equals(ptr %132, ptr %133)
  %135 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %136 = getelementptr inbounds { ptr }, ptr %135, i32 0, i32 0
  store ptr %119, ptr %136, align 8
  %137 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_29, ptr %135, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %137, ptr @fun_Core_fixedDecimal_toText_29, align 8
  %138 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %139 = getelementptr inbounds { ptr }, ptr %138, i32 0, i32 0
  store ptr %119, ptr %139, align 8
  %140 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_30, ptr %138, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %140, ptr @fun_Core_fixedDecimal_toText_30, align 8
  %141 = load ptr, ptr @fun_Core_fixedDecimal_toText_29, align 8
  %142 = load ptr, ptr @fun_Core_fixedDecimal_toText_30, align 8
  %143 = call ptr @candy_builtin_if_else(ptr %134, ptr %141, ptr %142)
  %144 = load ptr, ptr @text_., align 8
  %145 = call ptr @candy_builtin_text_concatenate(ptr %131, ptr %144)
  %146 = call ptr @candy_builtin_text_concatenate(ptr %145, ptr %143)
  ret ptr %146
}

define ptr @Core_fixedDecimal_is_1_equals_then.808(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.810, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.811, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.834, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.835, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.811, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.835, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.810(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.812, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.813, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.813, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.812(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.814, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.815, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.832, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.833, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.815, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.833, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.814(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.816, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.817, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.818, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.819, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.817, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.819, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.820, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.821, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.830, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.831, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.821, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.831, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.816(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @180, align 8
  ret ptr @180
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.818(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @181, align 8
  ret ptr @181
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.820(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.822, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.823, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.824, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.825, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.823, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.825, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.826, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.827, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.828, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.829, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.827, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.829, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.822(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @182, align 8
  ret ptr @182
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.824(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @183, align 8
  ret ptr @183
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.826(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @184, align 8
  ret ptr @184
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.828(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.830(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.832(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @185, align 8
  ret ptr @185
}

define ptr @Core_fixedDecimal_is_1_equals_else.834(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @186, align 8
  ret ptr @186
}

define ptr @Core_fixedDecimal_is_1_equals_else.836(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @187, align 8
  ret ptr @187
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.838(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.840, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.841, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.841, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.840(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.842(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.844, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.845, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.845, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.844(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.846(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.848, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.849, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.849, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.848(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.850(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.852, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.853, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.853, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.852(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText_10(ptr %0) {
Core_fixedDecimal_toText_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.854, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.855, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.882, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.883, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.855, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.883, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.884, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.885, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.885, align 8
  %25 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:fixedDecimal:toText:10:2", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = call ptr @candy_builtin_type_of(ptr %31)
  %33 = load ptr, ptr @tag_Tag, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = call ptr @candy_builtin_tag_has_value(ptr %39)
  %41 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %42 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr %42)
  %44 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %45 = load ptr, ptr %44, align 8
  %46 = call ptr @candy_builtin_tag_get_value(ptr %45)
  %47 = call ptr @candy_builtin_type_of(ptr %46)
  %48 = load ptr, ptr @tag_Struct, align 8
  %49 = call ptr @candy_builtin_equals(ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %51 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Scale, align 8
  %54 = call ptr @candy_builtin_struct_has_key(ptr %46, ptr %53)
  %55 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %56 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %57 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr %56)
  %58 = load ptr, ptr @tag_Scale, align 8
  %59 = call ptr @candy_builtin_struct_get(ptr %46, ptr %58)
  %60 = call ptr @Core_fixedDecimal_scaleFactor(ptr %59)
  %61 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.855, align 8
  %62 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.883, align 8
  %63 = call ptr @candy_builtin_if_else(ptr %5, ptr %61, ptr %62)
  %64 = load ptr, ptr @num_0, align 8
  %65 = call ptr @candy_builtin_list_get(ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_Match, align 8
  %67 = call ptr @candy_builtin_equals(ptr %65, ptr %66)
  %68 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %69 = getelementptr inbounds { ptr }, ptr %68, i32 0, i32 0
  store ptr %63, ptr %69, align 8
  %70 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.888, ptr %68, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %70, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.889, align 8
  %71 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.889, align 8
  %72 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %73 = call ptr @candy_builtin_if_else(ptr %67, ptr %71, ptr %72)
  %74 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %75 = load ptr, ptr @"Core:fixedDecimal:toText:10:8", align 8
  %76 = call ptr @"anonymous_$generated__needs"(ptr %73, ptr %74, ptr %75)
  %77 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %78 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %79 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %77, ptr %78)
  %80 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %81 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %82 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %80, ptr %81)
  %83 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %84 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %85 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %83, ptr %84)
  %86 = load ptr, ptr @tag_MinorUnits, align 8
  %87 = call ptr @candy_builtin_struct_has_key(ptr %46, ptr %86)
  %88 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %89 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %90 = call ptr @"anonymous_$generated__needs"(ptr %87, ptr %88, ptr %89)
  %91 = load ptr, ptr @tag_MinorUnits, align 8
  %92 = call ptr @candy_builtin_struct_get(ptr %46, ptr %91)
  %93 = call ptr @Builtins__intRemainder(ptr %92, ptr %60)
  %94 = call ptr @Core_int_isNonNegative(ptr %93)
  %95 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %96 = getelementptr inbounds { ptr, ptr }, ptr %95, i32 0, i32 0
  store ptr %60, ptr %96, align 8
  %97 = getelementptr inbounds { ptr, ptr }, ptr %95, i32 0, i32 1
  store ptr %93, ptr %97, align 8
  %98 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10_27, ptr %95, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %98, ptr @fun_Core_fixedDecimal_toText_10_27, align 8
  %99 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %100 = getelementptr inbounds { ptr, ptr }, ptr %99, i32 0, i32 0
  store ptr %60, ptr %100, align 8
  %101 = getelementptr inbounds { ptr, ptr }, ptr %99, i32 0, i32 1
  store ptr %93, ptr %101, align 8
  %102 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10_28, ptr %99, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %102, ptr @fun_Core_fixedDecimal_toText_10_28, align 8
  %103 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_27, align 8
  %104 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_28, align 8
  %105 = call ptr @Builtins__ifElse(ptr %94, ptr %103, ptr %104)
  ret ptr %105
}

define ptr @Core_fixedDecimal_is_1_equals_then.854(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.856, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.857, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.880, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.881, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.857, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.881, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.856(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.858, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.859, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.859, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.858(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.860, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.861, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.878, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.879, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.861, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.879, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.860(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.862, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.863, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.864, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.865, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.863, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.865, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.866, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.867, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.876, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.877, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.867, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.877, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.862(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @188, align 8
  ret ptr @188
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.864(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @189, align 8
  ret ptr @189
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.866(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.868, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.869, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.870, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.871, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.869, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.871, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.872, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.873, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.874, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.875, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.873, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.875, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.868(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @190, align 8
  ret ptr @190
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.870(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @191, align 8
  ret ptr @191
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.872(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @192, align 8
  ret ptr @192
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.874(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.876(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.878(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @193, align 8
  ret ptr @193
}

define ptr @Core_fixedDecimal_is_1_equals_else.880(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @194, align 8
  ret ptr @194
}

define ptr @Core_fixedDecimal_is_1_equals_else.882(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @195, align 8
  ret ptr @195
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.884(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.886, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.887, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.887, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.886(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.888(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.890, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.891, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.891, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.890(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText_10_27(ptr %0) {
Core_fixedDecimal_toText_10_27:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:toText:10:27:8", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:fixedDecimal:toText:10:27:8", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_add(ptr %18, ptr %20)
  %22 = call ptr @candy_builtin_to_debug_text(ptr %21)
  %23 = load ptr, ptr @text_1, align 8
  %24 = call ptr @Core_text_removePrefix(ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_fixedDecimal_toText_10_28(ptr %0) {
Core_fixedDecimal_toText_10_28:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:toText:10:28:8", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:fixedDecimal:toText:10:28:8", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_subtract(ptr %18, ptr %20)
  %22 = call ptr @candy_builtin_to_debug_text(ptr %21)
  %23 = load ptr, ptr @text_-1, align 8
  %24 = call ptr @Core_text_removePrefix(ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_fixedDecimal_toText_22(ptr %0) {
Core_fixedDecimal_toText_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_toText_23(ptr %0) {
Core_fixedDecimal_toText_23:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText_29(ptr %0) {
Core_fixedDecimal_toText_29:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_toText_30(ptr %0) {
Core_fixedDecimal_toText_30:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is0(ptr %0) {
Core_function_is0:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_9.892, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_9.893, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_9.893, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0_9.892(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_isPositive(ptr %0) {
Core_int_isPositive:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:int:isPositive:8", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %9, ptr %10)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %18)
  %20 = load ptr, ptr @tag_Greater, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_result_mapOrElse_26_case-1_didNotMatch() {
Core_result_mapOrElse_26_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_mapOrElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_result_is_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.898, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_result_is_1_equals_else.899, align 8
  %12 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_result_is_1_equals_else.899, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %34 = call ptr @candy_builtin_if_else(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = call ptr @candy_builtin_type_of(ptr %1)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr }, ptr %40, i32 0, i32 0
  store ptr %1, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_function_is1_9, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_function_is1_9, align 8
  %43 = load ptr, ptr @fun_Core_function_is1_9, align 8
  %44 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %45 = call ptr @Builtins__ifElse(ptr %39, ptr %43, ptr %44)
  %46 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %47 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr null)
  %48 = call ptr @candy_builtin_type_of(ptr %2)
  %49 = load ptr, ptr @tag_Function, align 8
  %50 = call ptr @candy_builtin_equals(ptr %48, ptr %49)
  %51 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %52 = getelementptr inbounds { ptr }, ptr %51, i32 0, i32 0
  store ptr %2, ptr %52, align 8
  %53 = call ptr @make_candy_function(ptr @Core_function_is1_9.910, ptr %51, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %53, ptr @fun_Core_function_is1_9.911, align 8
  %54 = load ptr, ptr @fun_Core_function_is1_9.911, align 8
  %55 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %56 = call ptr @Builtins__ifElse(ptr %50, ptr %54, ptr %55)
  %57 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %58 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr null)
  %59 = call ptr @candy_builtin_type_of(ptr %0)
  %60 = load ptr, ptr @tag_Tag, align 8
  %61 = call ptr @candy_builtin_equals(ptr %60, ptr %59)
  %62 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %63 = getelementptr inbounds { ptr }, ptr %62, i32 0, i32 0
  store ptr %0, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then, ptr %62, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_result_mapOrElse_26_equals_then, align 8
  %65 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %66 = getelementptr inbounds { ptr }, ptr %65, i32 0, i32 0
  store ptr %59, ptr %66, align 8
  %67 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else.916, ptr %65, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %67, ptr @fun_Core_result_mapOrElse_26_equals_else.917, align 8
  %68 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then, align 8
  %69 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.917, align 8
  %70 = call ptr @candy_builtin_if_else(ptr %61, ptr %68, ptr %69)
  %71 = load ptr, ptr @num_0, align 8
  %72 = call ptr @candy_builtin_list_get(ptr %70, ptr %71)
  %73 = load ptr, ptr @tag_Match, align 8
  %74 = call ptr @candy_builtin_equals(ptr %72, ptr %73)
  %75 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %76 = getelementptr inbounds { ptr, ptr }, ptr %75, i32 0, i32 0
  store ptr %70, ptr %76, align 8
  %77 = getelementptr inbounds { ptr, ptr }, ptr %75, i32 0, i32 1
  store ptr %1, ptr %77, align 8
  %78 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_case-0_matched, ptr %75, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %78, ptr @fun_Core_result_mapOrElse_26_case-0_matched, align 8
  %79 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %80 = getelementptr inbounds { ptr, ptr }, ptr %79, i32 0, i32 0
  store ptr %2, ptr %80, align 8
  %81 = getelementptr inbounds { ptr, ptr }, ptr %79, i32 0, i32 1
  store ptr %0, ptr %81, align 8
  %82 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_case-0_didNotMatch, ptr %79, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %82, ptr @fun_Core_result_mapOrElse_26_case-0_didNotMatch, align 8
  %83 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-0_matched, align 8
  %84 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-0_didNotMatch, align 8
  %85 = call ptr @candy_builtin_if_else(ptr %74, ptr %83, ptr %84)
  ret ptr %85
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.894, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.895, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.895, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.894(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.896, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.897, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.897, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.896(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @196, align 8
  ret ptr @196
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @197, align 8
  ret ptr @197
}

define ptr @Core_result_is_1_equals_else.898(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @198, align 8
  ret ptr @198
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.900, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.901, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.908, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.909, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.901, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.909, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.900(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.902, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.903, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.906, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.907, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.903, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.907, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.902(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.904, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.905, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.905, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.904(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @199, align 8
  ret ptr @199
}

define ptr @Core_result_is_1_equals_else.906(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @200, align 8
  ret ptr @200
}

define ptr @Core_result_is_1_equals_else.908(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @201, align 8
  ret ptr @201
}

define ptr @Core_function_is1_9(ptr %0) {
Core_function_is1_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1_9.910(ptr %0) {
Core_function_is1_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_26_equals_then(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.912, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.913, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_26_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.913, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_26_equals_then.912(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.914, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.915, align 8
  %11 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.915, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_26_equals_then.914(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @202, align 8
  ret ptr @202
}

define ptr @Core_result_mapOrElse_26_equals_else(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @203, align 8
  ret ptr @203
}

define ptr @Core_result_mapOrElse_26_equals_else.916(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @204, align 8
  ret ptr @204
}

define ptr @Core_result_mapOrElse_26_case-0_matched(ptr %0) {
Core_result_mapOrElse_26_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_26_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_26_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.918, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.919, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else.926, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_26_equals_else.927, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.919, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.927, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_result_mapOrElse_26_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-1_matched, align 8
  %28 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_result_mapOrElse_26_equals_then.918(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.920, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.921, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else.924, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_26_equals_else.925, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.921, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.925, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_26_equals_then.920(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.922, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.923, align 8
  %11 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.923, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_26_equals_then.922(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @205, align 8
  ret ptr @205
}

define ptr @Core_result_mapOrElse_26_equals_else.924(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @206, align 8
  ret ptr @206
}

define ptr @Core_result_mapOrElse_26_equals_else.926(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @207, align 8
  ret ptr @207
}

define ptr @Core_result_mapOrElse_26_case-1_matched(ptr %0) {
Core_result_mapOrElse_26_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_unwrapOrElse_17(ptr %0) {
Core_result_unwrapOrElse_17:
  ret ptr %0
}

define ptr @Core_result_unwrapOrElse(ptr %0, ptr %1) {
Core_result_unwrapOrElse:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.928, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_is_1_equals_then.929, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.936, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_else.937, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.929, align 8
  %12 = load ptr, ptr @fun_Core_result_is_1_equals_else.937, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then.938, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_is_1_isMatch_then.939, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else.940, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_result_is_1_isMatch_else.941, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.939, align 8
  %25 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.941, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %33 = call ptr @candy_builtin_if_else(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = call ptr @candy_builtin_type_of(ptr %1)
  %37 = load ptr, ptr @tag_Function, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %40 = getelementptr inbounds { ptr }, ptr %39, i32 0, i32 0
  store ptr %1, ptr %40, align 8
  %41 = call ptr @make_candy_function(ptr @Core_function_is0_9.952, ptr %39, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %41, ptr @fun_Core_function_is0_9.953, align 8
  %42 = load ptr, ptr @fun_Core_function_is0_9.953, align 8
  %43 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %44 = call ptr @Builtins__ifElse(ptr %38, ptr %42, ptr %43)
  %45 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %44, ptr %45, ptr null)
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %1, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_18, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_result_unwrapOrElse_18, align 8
  %50 = load ptr, ptr @fun_Core_result_unwrapOrElse_17, align 8
  %51 = load ptr, ptr @fun_Core_result_unwrapOrElse_18, align 8
  %52 = call ptr @Core_result_mapOrElse(ptr %0, ptr %50, ptr %51)
  ret ptr %52
}

define ptr @Core_result_is_1_equals_then.928(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.930, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.931, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.934, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.935, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.931, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.935, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.930(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.932, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.933, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.933, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.932(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @208, align 8
  ret ptr @208
}

define ptr @Core_result_is_1_equals_else.934(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @209, align 8
  ret ptr @209
}

define ptr @Core_result_is_1_equals_else.936(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @210, align 8
  ret ptr @210
}

define ptr @Core_result_is_1_isMatch_then.938(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else.940(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.942, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.943, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.950, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.951, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.943, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.951, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.942(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.944, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.945, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.948, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.949, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.945, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.949, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.944(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.946, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.947, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.947, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.946(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @211, align 8
  ret ptr @211
}

define ptr @Core_result_is_1_equals_else.948(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @212, align 8
  ret ptr @212
}

define ptr @Core_result_is_1_equals_else.950(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @213, align 8
  ret ptr @213
}

define ptr @Core_function_is0_9.952(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_unwrapOrElse_18(ptr %0, ptr %1) {
Core_result_unwrapOrElse_18:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Function, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_function_is0_9.954, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_function_is0_9.955, align 8
  %12 = load ptr, ptr @fun_Core_function_is0_9.955, align 8
  %13 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %14 = call ptr @Builtins__ifElse(ptr %6, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:result:unwrapOrElse:18:7", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @candy_builtin_type_of(ptr %19)
  %21 = load ptr, ptr @tag_Function, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:function:run:12", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @candy_builtin_get_argument_count(ptr %27)
  %29 = load ptr, ptr @num_0, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:function:run:12", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %35 = load ptr, ptr %34, align 8
  %36 = call ptr @get_candy_function_pointer(ptr %35)
  %37 = call ptr @get_candy_function_environment(ptr %35)
  %38 = call ptr (...) %36(ptr %37)
  ret ptr %38
}

define ptr @Core_function_is0_9.954(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_unwrapOr(ptr %0, ptr %1) {
Core_result_unwrapOr:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.956, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_is_1_equals_then.957, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.964, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_else.965, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.957, align 8
  %12 = load ptr, ptr @fun_Core_result_is_1_equals_else.965, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then.966, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_is_1_isMatch_then.967, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else.968, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_result_is_1_isMatch_else.969, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.967, align 8
  %25 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.969, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %33 = call ptr @candy_builtin_if_else(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %37 = getelementptr inbounds { ptr }, ptr %36, i32 0, i32 0
  store ptr %1, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_result_unwrapOr_7, ptr %36, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_result_unwrapOr_7, align 8
  %39 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %40 = call ptr @Core_result_unwrapOrElse(ptr %0, ptr %39)
  ret ptr %40
}

define ptr @Core_result_is_1_equals_then.956(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.958, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.959, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.962, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.963, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.959, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.963, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.958(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.960, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.961, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.961, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.960(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @214, align 8
  ret ptr @214
}

define ptr @Core_result_is_1_equals_else.962(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @215, align 8
  ret ptr @215
}

define ptr @Core_result_is_1_equals_else.964(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @216, align 8
  ret ptr @216
}

define ptr @Core_result_is_1_isMatch_then.966(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else.968(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.970, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.971, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.978, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.979, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.971, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.979, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.970(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.972, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.973, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.976, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.977, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.973, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.977, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.972(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.974, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.975, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.975, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.974(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @217, align 8
  ret ptr @217
}

define ptr @Core_result_is_1_equals_else.976(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @218, align 8
  ret ptr @218
}

define ptr @Core_result_is_1_equals_else.978(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @219, align 8
  ret ptr @219
}

define ptr @Core_result_unwrapOr_7(ptr %0) {
Core_result_unwrapOr_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @"Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched"() {
"Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched":
  %0 = load ptr, ptr @tag_Empty, align 8
  ret ptr %0
}

define ptr @Core_iterator_wrapSafe(ptr %0, ptr %1) {
Core_iterator_wrapSafe:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Function, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_function_is0_9.980, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_function_is0_9.981, align 8
  %8 = load ptr, ptr @fun_Core_function_is0_9.981, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @Builtins__ifElse(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %1, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_10, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %17 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14, ptr %16, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_wrapSafe_14, align 8
  %18 = load ptr, ptr @fun_Core_iterator_wrapSafe_14, align 8
  %19 = call ptr @Core_controlFlow_recursive(ptr %0, ptr %18)
  ret ptr %19
}

define ptr @Core_function_is0_9.980(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_10(ptr %0) {
Core_iterator_wrapSafe_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_function_is0_9.982, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_function_is0_9.983, align 8
  %11 = load ptr, ptr @fun_Core_function_is0_9.983, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %13 = call ptr @Builtins__ifElse(ptr %5, ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:iterator:wrapSafe:10:7", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @candy_builtin_type_of(ptr %18)
  %20 = load ptr, ptr @tag_Function, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %23 = load ptr, ptr @"Core:function:run:12", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr %23)
  %25 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = call ptr @candy_builtin_get_argument_count(ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:function:run:12", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %36)
  %38 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @candy_panic(ptr %38)
  unreachable
}

define ptr @Core_function_is0_9.982(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.988, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.989, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.989, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %22 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_didNotMatch, align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched, align 8
  %24 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %17, ptr %23, ptr %24)
  %26 = call ptr @Core_function_is0(ptr %25)
  %27 = call ptr @Core_bool_not(ptr %26)
  %28 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %29 = call ptr @Core_controlFlow_if(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %0, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_wrapSafe_14_22, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22, align 8
  %35 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %35, align 1
  %36 = call ptr @make_candy_tag(ptr %35, ptr %34)
  store ptr %36, ptr @tag_Iterator.1011, align 8
  ret ptr @tag_Iterator.1011
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.984, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.985, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.985, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.984(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.986, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.987, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.987, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.986(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @220, align 8
  ret ptr @220
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @221, align 8
  ret ptr @221
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.988(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @222, align 8
  ret ptr @222
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_didNotMatch() {
Core_iterator_wrapSafe_14_1_case-0_didNotMatch:
  %0 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %1 = call ptr @Core_function_run(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_wrapSafe_14_22(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %3, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @223, align 8
  ret ptr @223
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1008, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1009, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1009, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched, align 8
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %28 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch, ptr %27, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch, align 8
  %29 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched, align 8
  %30 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %20, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.990, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.991, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1006, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1007, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.991, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1007, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.990(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.992, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.993, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.993, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.992(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.994, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.995, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1004, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1005, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.995, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1005, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.994(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1002, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1003, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1003, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @224, align 8
  ret ptr @224
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @225, align 8
  ret ptr @225
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.996, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.997, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.998, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.999, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.997, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.999, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1000, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1001, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1001, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.996(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @226, align 8
  ret ptr @226
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.998(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @227, align 8
  ret ptr @227
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1000(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @228, align 8
  ret ptr @228
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1002(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1004(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @229, align 8
  ret ptr @229
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1006(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @230, align 8
  ret ptr @230
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1008(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @231, align 8
  ret ptr @231
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1010, align 8
  ret ptr @tag_More.1010
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch() {
Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch:
  %0 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %1 = call ptr @Core_function_run(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_next(ptr %0) {
Core_iterator_next:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_next_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_next_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Tag, align 8
  %7 = call ptr @candy_builtin_equals(ptr %6, ptr %5)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %4, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %5, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.1016, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.1017, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1017, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %7, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %24 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_1, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %16, ptr %27)
  %29 = call ptr @Core_function_run(ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_next_2() {
Core_iterator_next_2:
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_next_6_equals_then(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1012, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.1013, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1013, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.1012(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1014, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.1015, align 8
  %11 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1015, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_next_6_equals_then.1014(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @232, align 8
  ret ptr @232
}

define ptr @Core_iterator_next_6_equals_else(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @233, align 8
  ret ptr @233
}

define ptr @Core_iterator_next_6_equals_else.1016(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @234, align 8
  ret ptr @234
}

define ptr @Core_iterator_next_6_isMatch_else(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_generateWithState(ptr %0, ptr %1) {
Core_iterator_generateWithState:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Function, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_function_is1_9.1018, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_function_is1_9.1019, align 8
  %8 = load ptr, ptr @fun_Core_function_is1_9.1019, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @Builtins__ifElse(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %1, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_12, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12, align 8
  %17 = call ptr @Core_controlFlow_recursive(ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_function_is1_9.1018(ptr %0) {
Core_function_is1_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generateWithState_12(ptr %0, ptr %1, ptr %2) {
Core_iterator_generateWithState_12:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  store ptr %0, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1, align 8
  %10 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1, align 8
  %11 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %11, align 1
  %12 = call ptr @make_candy_tag(ptr %11, ptr %10)
  store ptr %12, ptr @tag_Iterator.1041, align 8
  ret ptr @tag_Iterator.1041
}

define ptr @Core_iterator_generateWithState_12_1(ptr %0) {
Core_iterator_generateWithState_12_1:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %7)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %7, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1036, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1037, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1037, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %26, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %19, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_matched, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %23, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1020, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1021, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1034, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1035, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1021, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1035, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1020(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1022, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1023, align 8
  %11 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1023, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1022(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1024, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1025, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1025, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1024(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1032, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1033, align 8
  %31 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1033, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @235, align 8
  ret ptr @235
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @236, align 8
  ret ptr @236
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1026, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1027, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1028, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1029, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1027, align 8
  %20 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1029, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1030, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1031, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1031, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1026(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @237, align 8
  ret ptr @237
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1028(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @238, align 8
  ret ptr @238
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1030(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @239, align 8
  ret ptr @239
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1032(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @240, align 8
  ret ptr @240
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1034(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @241, align 8
  ret ptr @241
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1036(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @242, align 8
  ret ptr @242
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_matched(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Item, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %4, ptr %18, align 8
  %19 = load ptr, ptr @tag_Rest, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %13, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1038, align 8
  ret ptr @tag_More.1038
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Empty, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1039, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1040, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1040, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %16, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1039(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @243, align 8
  ret ptr @243
}

define ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_21, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_21, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_22, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_12_1_3_22, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %5, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = load ptr, ptr @"text_`", align 8
  %22 = call ptr @candy_builtin_text_concatenate(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_False, align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %22, ptr null)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_12_1_3_21(ptr %0) {
Core_iterator_generateWithState_12_1_3_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_22(ptr %0) {
Core_iterator_generateWithState_12_1_3_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1042(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1044, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1045, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1052, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1053, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1045, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1053, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1054, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1055, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1055, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1056, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1057, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1057, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.1095, align 8
  ret ptr @tag_Iterator.1095
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1044(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1046, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1047, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1050, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1051, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1047, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1051, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1046(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1048, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1049, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1049, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1048(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @244, align 8
  ret ptr @244
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1050(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @245, align 8
  ret ptr @245
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1052(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @246, align 8
  ret ptr @246
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1054(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1056(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1058, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1059, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1059, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1060, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1061, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1061, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1058(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @247, align 8
  ret ptr @247
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1060(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1062, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1063, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1090, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1091, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1063, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1091, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1092, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1093, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1093, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1062(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1064, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1065, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1088, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1089, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1065, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1089, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1064(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1066, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1067, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1067, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1066(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1068, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1069, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1086, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1087, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1069, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1087, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1068(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1070, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1071, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1072, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1073, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1071, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1073, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1074, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1075, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1084, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1085, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1075, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1085, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1070(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @248, align 8
  ret ptr @248
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1072(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @249, align 8
  ret ptr @249
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1074(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1076, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1077, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1078, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1079, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1077, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1079, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1080, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1081, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1082, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1083, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1081, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1083, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1076(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @250, align 8
  ret ptr @250
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1078(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @251, align 8
  ret ptr @251
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1080(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @252, align 8
  ret ptr @252
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1082(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1084(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1086(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @253, align 8
  ret ptr @253
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1088(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @254, align 8
  ret ptr @254
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1090(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @255, align 8
  ret ptr @255
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1092(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1094, align 8
  ret ptr @tag_More.1094
}

define ptr @Core_controlFlow_recursive_16.1096(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1098, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1099, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1099, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1042(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1098(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_map_17_3_case-1_didNotMatch() {
Core_iterator_map_17_3_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_map(ptr %0, ptr %1) {
Core_iterator_map:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_map_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_map_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @candy_builtin_type_of(ptr %1)
  %7 = load ptr, ptr @tag_Function, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_function_is1_9.1100, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_function_is1_9.1101, align 8
  %12 = load ptr, ptr @fun_Core_function_is1_9.1101, align 8
  %13 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %14 = call ptr @Builtins__ifElse(ptr %8, ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_map_17, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_map_17, align 8
  %20 = load ptr, ptr @fun_Core_iterator_map_17, align 8
  %21 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %20)
  ret ptr %21
}

define ptr @Core_iterator_map_2() {
Core_iterator_map_2:
  %0 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_function_is1_9.1100(ptr %0) {
Core_function_is1_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_map_17(ptr %0, ptr %1) {
Core_iterator_map_17:
  %2 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1097, align 8
  %3 = call ptr @Core_controlFlow_recursive_16.1096(ptr %2, ptr %0)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1102, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_next_6_equals_then.1103, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.1110, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_next_6_equals_else.1111, align 8
  %13 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1103, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1111, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else.1112, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_iterator_next_6_isMatch_else.1113, align 8
  %23 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %24 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.1113, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %19, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_1, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %15, ptr %26)
  %28 = call ptr @Core_function_run(ptr %27)
  %29 = load ptr, ptr @tag_Empty, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %28, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_map_17_3_equals_else, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %35 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %28, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-0_didNotMatch, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch, align 8
  %47 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %48 = load ptr, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch, align 8
  %49 = call ptr @candy_builtin_if_else(ptr %40, ptr %47, ptr %48)
  ret ptr %49
}

define ptr @Core_iterator_next_6_equals_then.1102(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1104, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.1105, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.1108, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.1109, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1105, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1109, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.1104(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1106, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.1107, align 8
  %11 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1107, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_next_6_equals_then.1106(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @256, align 8
  ret ptr @256
}

define ptr @Core_iterator_next_6_equals_else.1108(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @257, align 8
  ret ptr @257
}

define ptr @Core_iterator_next_6_equals_else.1110(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @258, align 8
  ret ptr @258
}

define ptr @Core_iterator_next_6_isMatch_else.1112(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_map_17_3_equals_else(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @259, align 8
  ret ptr @259
}

define ptr @Core_iterator_map_17_3_case-0_didNotMatch(ptr %0) {
Core_iterator_map_17_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.1132, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_equals_else.1133, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.1133, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_map_17_3_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_matched, align 8
  %28 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_map_17_3_equals_then(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.1114, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.1115, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.1130, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_equals_else.1131, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.1115, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.1131, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_17_3_equals_then.1114(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.1116, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.1117, align 8
  %11 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.1117, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_map_17_3_equals_then.1116(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.1118, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_17_3_equals_then.1119, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.1128, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_map_17_3_equals_else.1129, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.1119, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.1129, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_map_17_3_equals_then.1118(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_17_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_17_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_map_17_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_else.1126, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_17_3_isMatch_else.1127, align 8
  %31 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.1127, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_map_17_3_hasKey_then(ptr %0) {
Core_iterator_map_17_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @260, align 8
  ret ptr @260
}

define ptr @Core_iterator_map_17_3_hasKey_else(ptr %0) {
Core_iterator_map_17_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @261, align 8
  ret ptr @261
}

define ptr @Core_iterator_map_17_3_isMatch_then(ptr %0) {
Core_iterator_map_17_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_then.1120, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_hasKey_then.1121, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_else.1122, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_map_17_3_hasKey_else.1123, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.1121, align 8
  %20 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.1123, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_then.1124, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_map_17_3_isMatch_then.1125, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_17_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.1125, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_map_17_3_hasKey_then.1120(ptr %0) {
Core_iterator_map_17_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @262, align 8
  ret ptr @262
}

define ptr @Core_iterator_map_17_3_hasKey_else.1122(ptr %0) {
Core_iterator_map_17_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @263, align 8
  ret ptr @263
}

define ptr @Core_iterator_map_17_3_isMatch_then.1124(ptr %0) {
Core_iterator_map_17_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @264, align 8
  ret ptr @264
}

define ptr @Core_iterator_map_17_3_isMatch_else(ptr %0) {
Core_iterator_map_17_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_17_3_isMatch_else.1126(ptr %0) {
Core_iterator_map_17_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_17_3_equals_else.1128(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @265, align 8
  ret ptr @265
}

define ptr @Core_iterator_map_17_3_equals_else.1130(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @266, align 8
  ret ptr @266
}

define ptr @Core_iterator_map_17_3_equals_else.1132(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @267, align 8
  ret ptr @267
}

define ptr @Core_iterator_map_17_3_case-1_matched(ptr %0) {
Core_iterator_map_17_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Item, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_State, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %8, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1134, align 8
  ret ptr @tag_More.1134
}

define ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch() {
Core_iterator_withIndex_11_5_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_withIndex_11(ptr %0) {
Core_iterator_withIndex_11:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_else, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %10 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.1143, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.1144, align 8
  %20 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %21 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.1144, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_1, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %12, ptr %23)
  %25 = load ptr, ptr @num_2, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %12, ptr %25)
  %27 = call ptr @Core_iterator_next(ptr %24)
  %28 = load ptr, ptr @tag_Empty, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %27, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @num_0, align 8
  %37 = call ptr @candy_builtin_list_get(ptr %35, ptr %36)
  %38 = load ptr, ptr @tag_Match, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %26, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %27, ptr %42, align 8
  %43 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %43, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %44 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %45 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %46 = call ptr @candy_builtin_if_else(ptr %39, ptr %44, ptr %45)
  ret ptr %46
}

define ptr @Core_iterator_withIndex_11_1_equals_then(ptr %0) {
Core_iterator_withIndex_11_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.1141, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.1142, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.1142, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @268, align 8
  ret ptr @268
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @269, align 8
  ret ptr @269
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then.1135, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.1136, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else.1137, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.1138, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.1136, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.1138, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then.1139, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.1140, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.1140, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then.1135(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @270, align 8
  ret ptr @270
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else.1137(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @271, align 8
  ret ptr @271
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then.1139(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @272, align 8
  ret ptr @272
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.1141(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_equals_else(ptr %0) {
Core_iterator_withIndex_11_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @273, align 8
  ret ptr @273
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.1143(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_withIndex_11_5_equals_else(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @274, align 8
  ret ptr @274
}

define ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.1163, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1164, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1164, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  %28 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_withIndex_11_5_equals_then(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.1145, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1146, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.1161, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1162, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1146, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1162, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.1145(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.1147, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1148, align 8
  %11 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1148, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_withIndex_11_5_equals_then.1147(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.1149, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1150, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.1159, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1160, align 8
  %13 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.1150, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.1160, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_withIndex_11_5_equals_then.1149(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else.1157, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.1158, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.1158, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @275, align 8
  ret ptr @275
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @276, align 8
  ret ptr @276
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then.1151, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.1152, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else.1153, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.1154, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.1152, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.1154, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then.1155, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.1156, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.1156, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then.1151(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @277, align 8
  ret ptr @277
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else.1153(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @278, align 8
  ret ptr @278
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then.1155(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @279, align 8
  ret ptr @279
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else.1157(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_equals_else.1159(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @280, align 8
  ret ptr @280
}

define ptr @Core_iterator_withIndex_11_5_equals_else.1161(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @281, align 8
  ret ptr @281
}

define ptr @Core_iterator_withIndex_11_5_equals_else.1163(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @282, align 8
  ret ptr @282
}

define ptr @Core_iterator_withIndex_11_5_case-1_matched(ptr %0) {
Core_iterator_withIndex_11_5_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_Index, align 8
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 1
  store ptr %16, ptr %18, align 8
  %19 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %19, align 8
  %20 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %20, align 8
  %21 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:iterator:withIndex:11:5:20", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_1, align 8
  %33 = call ptr @candy_builtin_int_add(ptr %31, ptr %32)
  %34 = alloca ptr, i64 3, align 8
  %35 = alloca ptr, i64 3, align 8
  %36 = load ptr, ptr @tag_Index, align 8
  %37 = getelementptr ptr, ptr %34, i64 0
  store ptr %36, ptr %37, align 8
  %38 = getelementptr ptr, ptr %35, i64 0
  store ptr %33, ptr %38, align 8
  %39 = load ptr, ptr @tag_Iterator, align 8
  %40 = getelementptr ptr, ptr %34, i64 1
  store ptr %39, ptr %40, align 8
  %41 = getelementptr ptr, ptr %35, i64 1
  store ptr %8, ptr %41, align 8
  %42 = getelementptr ptr, ptr %34, i64 2
  store ptr null, ptr %42, align 8
  %43 = getelementptr ptr, ptr %35, i64 2
  store ptr null, ptr %43, align 8
  %44 = call ptr @make_candy_struct(ptr %34, ptr %35)
  %45 = alloca ptr, i64 3, align 8
  %46 = alloca ptr, i64 3, align 8
  %47 = load ptr, ptr @tag_Item, align 8
  %48 = getelementptr ptr, ptr %45, i64 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr ptr, ptr %46, i64 0
  store ptr %21, ptr %49, align 8
  %50 = load ptr, ptr @tag_State, align 8
  %51 = getelementptr ptr, ptr %45, i64 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr ptr, ptr %46, i64 1
  store ptr %44, ptr %52, align 8
  %53 = getelementptr ptr, ptr %45, i64 2
  store ptr null, ptr %53, align 8
  %54 = getelementptr ptr, ptr %46, i64 2
  store ptr null, ptr %54, align 8
  %55 = call ptr @make_candy_struct(ptr %45, ptr %46)
  %56 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %56, align 1
  %57 = call ptr @make_candy_tag(ptr %56, ptr %55)
  store ptr %57, ptr @tag_More.1165, align 8
  ret ptr @tag_More.1165
}

define ptr @Core_iterator_ensure(ptr %0, ptr %1) {
Core_iterator_ensure:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Function, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_function_is1_9.1166, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_function_is1_9.1167, align 8
  %8 = load ptr, ptr @fun_Core_function_is1_9.1167, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @Builtins__ifElse(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %14 = call ptr @make_candy_function(ptr @Core_iterator_ensure_12, ptr %13, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_ensure_12, align 8
  %15 = load ptr, ptr @fun_Core_iterator_ensure_12, align 8
  %16 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_ensure_17, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_ensure_17, align 8
  %20 = load ptr, ptr @fun_Core_iterator_ensure_17, align 8
  %21 = call ptr @Core_iterator_map(ptr %16, ptr %20)
  ret ptr %21
}

define ptr @Core_function_is1_9.1166(ptr %0) {
Core_function_is1_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_ensure_12() {
Core_iterator_ensure_12:
  %0 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_ensure_17(ptr %0, ptr %1) {
Core_iterator_ensure_17:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %0
}

define ptr @Core_iterator_foldLeft_21_5_case-1_didNotMatch() {
Core_iterator_foldLeft_21_5_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_foldLeft(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_2, ptr %3, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_iterator_foldLeft_2, align 8
  %5 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %5)
  %7 = call ptr @candy_builtin_type_of(ptr %2)
  %8 = load ptr, ptr @tag_Function, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %2, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_function_is2_9.1168, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_function_is2_9.1169, align 8
  %13 = load ptr, ptr @fun_Core_function_is2_9.1169, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %15 = call ptr @Builtins__ifElse(ptr %9, ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr null)
  %18 = alloca ptr, i64 3, align 8
  %19 = alloca ptr, i64 3, align 8
  %20 = load ptr, ptr @tag_Iterator, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %19, i64 0
  store ptr %6, ptr %22, align 8
  %23 = load ptr, ptr @tag_Value, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr ptr, ptr %19, i64 1
  store ptr %1, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = getelementptr ptr, ptr %19, i64 2
  store ptr null, ptr %27, align 8
  %28 = call ptr @make_candy_struct(ptr %18, ptr %19)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %2, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_foldLeft_21, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_21, align 8
  %33 = call ptr @Core_controlFlow_recursive(ptr %28, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_2() {
Core_iterator_foldLeft_2:
  %0 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_function_is2_9.1168(ptr %0) {
Core_function_is2_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_foldLeft_21(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft_21:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_foldLeft_21_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_foldLeft_21_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_else.1178, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.1179, align 8
  %22 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.1179, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = call ptr @Core_iterator_next(ptr %26)
  %30 = load ptr, ptr @tag_Empty, align 8
  %31 = call ptr @candy_builtin_equals(ptr %30, ptr %29)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %29, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_iterator_foldLeft_21_5_equals_else, align 8
  %35 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %36 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @num_0, align 8
  %39 = call ptr @candy_builtin_list_get(ptr %37, ptr %38)
  %40 = load ptr, ptr @tag_Match, align 8
  %41 = call ptr @candy_builtin_equals(ptr %39, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr }, ptr %42, i32 0, i32 0
  store ptr %28, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_case-0_matched, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_iterator_foldLeft_21_5_case-0_matched, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %28, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %29, ptr %47, align 8
  %48 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 3
  store ptr %0, ptr %51, align 8
  %52 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_case-0_didNotMatch, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %52, ptr @fun_Core_iterator_foldLeft_21_5_case-0_didNotMatch, align 8
  %53 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-0_matched, align 8
  %54 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-0_didNotMatch, align 8
  %55 = call ptr @candy_builtin_if_else(ptr %41, ptr %53, ptr %54)
  ret ptr %55
}

define ptr @Core_iterator_foldLeft_21_1_equals_then(ptr %0) {
Core_iterator_foldLeft_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_else.1176, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.1177, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.1177, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_21_1_hasKey_then(ptr %0) {
Core_iterator_foldLeft_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @283, align 8
  ret ptr @283
}

define ptr @Core_iterator_foldLeft_21_1_hasKey_else(ptr %0) {
Core_iterator_foldLeft_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @284, align 8
  ret ptr @284
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_then(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Value, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_hasKey_then.1170, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then.1171, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_hasKey_else.1172, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else.1173, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then.1171, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else.1173, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_then.1174, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then.1175, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then.1175, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_21_1_hasKey_then.1170(ptr %0) {
Core_iterator_foldLeft_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Value, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @285, align 8
  ret ptr @285
}

define ptr @Core_iterator_foldLeft_21_1_hasKey_else.1172(ptr %0) {
Core_iterator_foldLeft_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @286, align 8
  ret ptr @286
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_then.1174(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @287, align 8
  ret ptr @287
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_else(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_else.1176(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_1_equals_else(ptr %0) {
Core_iterator_foldLeft_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @288, align 8
  ret ptr @288
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_else.1178(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_foldLeft_21_5_equals_else(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @289, align 8
  ret ptr @289
}

define ptr @Core_iterator_foldLeft_21_5_case-0_matched(ptr %0) {
Core_iterator_foldLeft_21_5_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_5_case-0_didNotMatch(ptr %0) {
Core_iterator_foldLeft_21_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_21_5_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else.1198, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1199, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1199, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %21, i32 0, i32 2
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %21, i32 0, i32 3
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_21_5_case-1_matched, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-1_matched, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-1_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %20, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_21_5_equals_then(ptr %0) {
Core_iterator_foldLeft_21_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_then.1180, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1181, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else.1196, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1197, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1181, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1197, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_21_5_equals_then.1180(ptr %0) {
Core_iterator_foldLeft_21_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_then.1182, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1183, align 8
  %11 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1183, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_foldLeft_21_5_equals_then.1182(ptr %0) {
Core_iterator_foldLeft_21_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_then.1184, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1185, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else.1194, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1195, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.1185, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.1195, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_foldLeft_21_5_equals_then.1184(ptr %0) {
Core_iterator_foldLeft_21_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_isMatch_else.1192, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else.1193, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else.1193, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_21_5_hasKey_then(ptr %0) {
Core_iterator_foldLeft_21_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @290, align 8
  ret ptr @290
}

define ptr @Core_iterator_foldLeft_21_5_hasKey_else(ptr %0) {
Core_iterator_foldLeft_21_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @291, align 8
  ret ptr @291
}

define ptr @Core_iterator_foldLeft_21_5_isMatch_then(ptr %0) {
Core_iterator_foldLeft_21_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_hasKey_then.1186, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then.1187, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_hasKey_else.1188, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else.1189, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then.1187, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else.1189, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_isMatch_then.1190, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then.1191, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then.1191, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_21_5_hasKey_then.1186(ptr %0) {
Core_iterator_foldLeft_21_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @292, align 8
  ret ptr @292
}

define ptr @Core_iterator_foldLeft_21_5_hasKey_else.1188(ptr %0) {
Core_iterator_foldLeft_21_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @293, align 8
  ret ptr @293
}

define ptr @Core_iterator_foldLeft_21_5_isMatch_then.1190(ptr %0) {
Core_iterator_foldLeft_21_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @294, align 8
  ret ptr @294
}

define ptr @Core_iterator_foldLeft_21_5_isMatch_else(ptr %0) {
Core_iterator_foldLeft_21_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_5_isMatch_else.1192(ptr %0) {
Core_iterator_foldLeft_21_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_5_equals_else.1194(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @295, align 8
  ret ptr @295
}

define ptr @Core_iterator_foldLeft_21_5_equals_else.1196(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @296, align 8
  ret ptr @296
}

define ptr @Core_iterator_foldLeft_21_5_equals_else.1198(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @297, align 8
  ret ptr @297
}

define ptr @Core_iterator_foldLeft_21_5_case-1_matched(ptr %0) {
Core_iterator_foldLeft_21_5_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %10, ptr %4, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %8, ptr %20, align 8
  %21 = load ptr, ptr @tag_Value, align 8
  %22 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %22, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %15, ptr %23, align 8
  %24 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %26, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_reduceLeft_16_case-0_matched() {
Core_iterator_reduceLeft_16_case-0_matched:
  %0 = load ptr, ptr @tag_Error.1200, align 8
  ret ptr %0
}

define ptr @Core_iterator_reduceLeft_16_case-1_didNotMatch() {
Core_iterator_reduceLeft_16_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_reduceLeft(ptr %0, ptr %1) {
Core_iterator_reduceLeft:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Function, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_function_is2_9.1201, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_function_is2_9.1202, align 8
  %8 = load ptr, ptr @fun_Core_function_is2_9.1202, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @Builtins__ifElse(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_12, ptr %13, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_12, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_12, align 8
  %16 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %15)
  %17 = call ptr @Core_iterator_next(ptr %16)
  %18 = load ptr, ptr @tag_Empty, align 8
  %19 = call ptr @candy_builtin_equals(ptr %18, ptr %17)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %17, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_iterator_reduceLeft_16_equals_else, align 8
  %23 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %24 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %19, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %1, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %17, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_reduceLeft_16_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-0_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %29, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is2_9.1201(ptr %0) {
Core_function_is2_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_reduceLeft_12() {
Core_iterator_reduceLeft_12:
  %0 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_reduceLeft_16_equals_else(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @298, align 8
  ret ptr @298
}

define ptr @Core_iterator_reduceLeft_16_case-0_didNotMatch(ptr %0) {
Core_iterator_reduceLeft_16_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_16_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else.1221, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1222, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1222, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_reduceLeft_16_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-1_matched, align 8
  %28 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_reduceLeft_16_equals_then(ptr %0) {
Core_iterator_reduceLeft_16_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_then.1203, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1204, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else.1219, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1220, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1204, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1220, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_16_equals_then.1203(ptr %0) {
Core_iterator_reduceLeft_16_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_then.1205, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1206, align 8
  %11 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1206, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_reduceLeft_16_equals_then.1205(ptr %0) {
Core_iterator_reduceLeft_16_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_then.1207, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1208, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else.1217, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1218, align 8
  %13 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.1208, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.1218, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_reduceLeft_16_equals_then.1207(ptr %0) {
Core_iterator_reduceLeft_16_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_isMatch_else.1215, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else.1216, align 8
  %31 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else.1216, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_reduceLeft_16_hasKey_then(ptr %0) {
Core_iterator_reduceLeft_16_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @299, align 8
  ret ptr @299
}

define ptr @Core_iterator_reduceLeft_16_hasKey_else(ptr %0) {
Core_iterator_reduceLeft_16_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @300, align 8
  ret ptr @300
}

define ptr @Core_iterator_reduceLeft_16_isMatch_then(ptr %0) {
Core_iterator_reduceLeft_16_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_hasKey_then.1209, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then.1210, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_hasKey_else.1211, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else.1212, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then.1210, align 8
  %20 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else.1212, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_isMatch_then.1213, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then.1214, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then.1214, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_reduceLeft_16_hasKey_then.1209(ptr %0) {
Core_iterator_reduceLeft_16_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @301, align 8
  ret ptr @301
}

define ptr @Core_iterator_reduceLeft_16_hasKey_else.1211(ptr %0) {
Core_iterator_reduceLeft_16_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @302, align 8
  ret ptr @302
}

define ptr @Core_iterator_reduceLeft_16_isMatch_then.1213(ptr %0) {
Core_iterator_reduceLeft_16_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @303, align 8
  ret ptr @303
}

define ptr @Core_iterator_reduceLeft_16_isMatch_else(ptr %0) {
Core_iterator_reduceLeft_16_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_16_isMatch_else.1215(ptr %0) {
Core_iterator_reduceLeft_16_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_16_equals_else.1217(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @304, align 8
  ret ptr @304
}

define ptr @Core_iterator_reduceLeft_16_equals_else.1219(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @305, align 8
  ret ptr @305
}

define ptr @Core_iterator_reduceLeft_16_equals_else.1221(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @306, align 8
  ret ptr @306
}

define ptr @Core_iterator_reduceLeft_16_case-1_matched(ptr %0) {
Core_iterator_reduceLeft_16_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %4, ptr %10)
  %12 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %12, align 1
  %13 = call ptr @make_candy_tag(ptr %12, ptr %11)
  store ptr %13, ptr @tag_Ok.1223, align 8
  ret ptr @tag_Ok.1223
}

define ptr @Core_iterator_sum_8(ptr %0, ptr %1) {
Core_iterator_sum_8:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterator:sum:8:8", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:iterator:sum:8:8", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_int_add(ptr %0, ptr %1)
  ret ptr %14
}

define ptr @Core_iterator_sum(ptr %0) {
Core_iterator_sum:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_sum_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_sum_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_sum_5, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_sum_5, align 8
  %7 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  %8 = call ptr @Core_iterator_ensure(ptr %4, ptr %7)
  %9 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  %10 = call ptr @Core_iterator_reduceLeft(ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @Core_result_unwrapOr(ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_iterator_sum_2() {
Core_iterator_sum_2:
  %0 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_sum_5(ptr %0) {
Core_iterator_sum_5:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  ret ptr %5
}

define ptr @Core_iterator_length_5(ptr %0) {
Core_iterator_length_5:
  %1 = load ptr, ptr @num_1, align 8
  ret ptr %1
}

define ptr @Core_iterator_joinToText(ptr %0) {
Core_iterator_joinToText:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_joinToText_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_joinToText_12, align 8
  %7 = load ptr, ptr @text_, align 8
  %8 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %4, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_iterator_joinToText_2() {
Core_iterator_joinToText_2:
  %0 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_joinToText_12(ptr %0, ptr %1) {
Core_iterator_joinToText_12:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:joinToText:12:18", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:joinToText:12:18", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = call ptr @candy_builtin_text_concatenate(ptr %0, ptr %1)
  ret ptr %19
}

define ptr @"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1224"() {
"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1226(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1228, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1229, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1236, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1237, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1229, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1237, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1238, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1239, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1239, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1225", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1225", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1240, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1241, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1241, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.1279, align 8
  ret ptr @tag_Iterator.1279
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1228(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1230, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1231, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1234, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1235, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1231, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1235, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1230(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1232, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1233, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1233, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1232(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @307, align 8
  ret ptr @307
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1234(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @308, align 8
  ret ptr @308
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1236(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @309, align 8
  ret ptr @309
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1238(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1240(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1242, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1243, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1243, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1244, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1245, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1245, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1242(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @310, align 8
  ret ptr @310
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1244(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1246, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1247, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1274, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1275, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1247, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1275, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1276, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1277, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1277, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1225", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1246(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1248, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1249, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1272, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1273, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1249, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1273, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1248(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1250, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1251, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1251, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1250(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1252, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1253, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1270, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1271, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1253, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1271, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1252(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1254, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1255, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1256, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1257, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1255, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1257, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1258, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1259, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1268, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1269, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1259, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1269, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1254(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @311, align 8
  ret ptr @311
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1256(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @312, align 8
  ret ptr @312
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1258(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1260, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1261, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1262, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1263, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1261, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1263, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1264, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1265, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1266, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1267, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1265, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1267, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1260(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @313, align 8
  ret ptr @313
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1262(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @314, align 8
  ret ptr @314
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1264(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @315, align 8
  ret ptr @315
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1266(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1268(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1270(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @316, align 8
  ret ptr @316
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1272(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @317, align 8
  ret ptr @317
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1274(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @318, align 8
  ret ptr @318
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1276(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1278, align 8
  ret ptr @tag_More.1278
}

define ptr @Core_controlFlow_recursive_16.1280(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1282, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1283, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1283, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1226(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1282(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_where_17_2_3_6_5_case-1_didNotMatch() {
Core_iterator_where_17_2_3_6_5_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_where_17_2_3_case-1_didNotMatch() {
Core_iterator_where_17_2_3_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1284"() {
"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1286(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1288, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1289, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1296, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1297, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1289, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1297, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1298, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1299, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1299, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1285", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1285", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1300, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1301, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1301, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.1339, align 8
  ret ptr @tag_Iterator.1339
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1288(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1290, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1291, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1294, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1295, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1291, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1295, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1290(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1292, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1293, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1293, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1292(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @319, align 8
  ret ptr @319
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1294(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @320, align 8
  ret ptr @320
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1296(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @321, align 8
  ret ptr @321
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1298(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1300(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1302, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1303, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1303, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1304, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1305, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1305, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1302(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @322, align 8
  ret ptr @322
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1304(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1306, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1307, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1334, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1335, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1307, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1335, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1336, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1337, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1337, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1285", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1306(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1308, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1309, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1332, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1333, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1309, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1333, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1308(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1310, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1311, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1311, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1310(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1312, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1313, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1330, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1331, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1313, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1331, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1312(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1314, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1315, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1316, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1317, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1315, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1317, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1318, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1319, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1328, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1329, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1319, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1329, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1314(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @323, align 8
  ret ptr @323
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1316(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @324, align 8
  ret ptr @324
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1318(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1320, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1321, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1322, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1323, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1321, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1323, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1324, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1325, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1326, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1327, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1325, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1327, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1320(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @325, align 8
  ret ptr @325
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1322(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @326, align 8
  ret ptr @326
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1324(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @327, align 8
  ret ptr @327
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1326(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1328(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1330(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @328, align 8
  ret ptr @328
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1332(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @329, align 8
  ret ptr @329
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1334(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @330, align 8
  ret ptr @330
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1336(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1338, align 8
  ret ptr @tag_More.1338
}

define ptr @Core_controlFlow_recursive_16.1340(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1342, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1343, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1343, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1286(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1342(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch() {
Core_iterator_takeWhile_7_3_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_takeWhile(ptr %0, ptr %1) {
Core_iterator_takeWhile:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_takeWhile_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_takeWhile_7, align 8
  %9 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_takeWhile_2() {
Core_iterator_takeWhile_2:
  %0 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_takeWhile_7(ptr %0, ptr %1) {
Core_iterator_takeWhile_7:
  %2 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1341, align 8
  %3 = call ptr @Core_controlFlow_recursive_16.1340(ptr %2, ptr %0)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1344, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_next_6_equals_then.1345, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.1352, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_next_6_equals_else.1353, align 8
  %13 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1345, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1353, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else.1354, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_iterator_next_6_isMatch_else.1355, align 8
  %23 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %24 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.1355, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %19, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_1, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %15, ptr %26)
  %28 = call ptr @Core_function_run(ptr %27)
  %29 = load ptr, ptr @tag_Empty, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %28, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %35 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %28, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %47 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %48 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %49 = call ptr @candy_builtin_if_else(ptr %40, ptr %47, ptr %48)
  ret ptr %49
}

define ptr @Core_iterator_next_6_equals_then.1344(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1346, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.1347, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.1350, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.1351, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1347, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1351, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.1346(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1348, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.1349, align 8
  %11 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1349, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_next_6_equals_then.1348(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @331, align 8
  ret ptr @331
}

define ptr @Core_iterator_next_6_equals_else.1350(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @332, align 8
  ret ptr @332
}

define ptr @Core_iterator_next_6_equals_else.1352(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @333, align 8
  ret ptr @333
}

define ptr @Core_iterator_next_6_isMatch_else.1354(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_takeWhile_7_3_equals_else(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @334, align 8
  ret ptr @334
}

define ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.1374, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1375, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1375, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  %28 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_takeWhile_7_3_equals_then(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.1356, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1357, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.1372, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1373, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1357, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1373, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.1356(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.1358, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1359, align 8
  %11 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1359, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.1358(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.1360, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1361, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.1370, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1371, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.1361, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.1371, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.1360(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else.1368, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.1369, align 8
  %31 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.1369, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @335, align 8
  ret ptr @335
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @336, align 8
  ret ptr @336
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then.1362, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.1363, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else.1364, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.1365, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.1363, align 8
  %20 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.1365, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then.1366, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.1367, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.1367, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then.1362(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @337, align 8
  ret ptr @337
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else.1364(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @338, align 8
  ret ptr @338
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then.1366(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @339, align 8
  ret ptr @339
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else.1368(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.1370(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @340, align 8
  ret ptr @340
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.1372(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @341, align 8
  ret ptr @341
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.1374(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @342, align 8
  ret ptr @342
}

define ptr @Core_iterator_takeWhile_7_3_case-1_matched(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %4, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %18 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %20 = call ptr @Builtins__ifElse(ptr %13, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_iterator_takeWhile_7_3_5(ptr %0) {
Core_iterator_takeWhile_7_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.1376, align 8
  ret ptr @tag_More.1376
}

define ptr @Core_iterator_withIndex_2() {
Core_iterator_withIndex_2:
  %0 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_30(ptr %0) {
Core_iterator_take_30:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:take:30:5", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Item, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:take:30:5", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Item, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_skip_26_6_8_3_case-1_didNotMatch() {
Core_iterator_skip_26_6_8_3_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_skip_26_6(ptr %0, ptr %1) {
Core_iterator_skip_26_6:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_skip_26_6_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_26_6_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_else.1385, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.1386, align 8
  %21 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.1386, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_7, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_26_6_7, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 1
  store ptr %27, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 2
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_skip_26_6_8, align 8
  %38 = load ptr, ptr @fun_Core_iterator_skip_26_6_7, align 8
  %39 = load ptr, ptr @fun_Core_iterator_skip_26_6_8, align 8
  %40 = call ptr @Builtins__ifElse(ptr %29, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_skip_26_6_1_equals_then(ptr %0) {
Core_iterator_skip_26_6_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_else.1383, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.1384, align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.1384, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_skip_26_6_1_hasKey_then(ptr %0) {
Core_iterator_skip_26_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @343, align 8
  ret ptr @343
}

define ptr @Core_iterator_skip_26_6_1_hasKey_else(ptr %0) {
Core_iterator_skip_26_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @344, align 8
  ret ptr @344
}

define ptr @Core_iterator_skip_26_6_1_isMatch_then(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_N, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_hasKey_then.1377, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then.1378, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_hasKey_else.1379, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else.1380, align 8
  %19 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then.1378, align 8
  %20 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else.1380, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_then.1381, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then.1382, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then.1382, align 8
  %34 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_skip_26_6_1_hasKey_then.1377(ptr %0) {
Core_iterator_skip_26_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_N, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @345, align 8
  ret ptr @345
}

define ptr @Core_iterator_skip_26_6_1_hasKey_else.1379(ptr %0) {
Core_iterator_skip_26_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @346, align 8
  ret ptr @346
}

define ptr @Core_iterator_skip_26_6_1_isMatch_then.1381(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @347, align 8
  ret ptr @347
}

define ptr @Core_iterator_skip_26_6_1_isMatch_else(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_26_6_1_isMatch_else.1383(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_26_6_1_equals_else(ptr %0) {
Core_iterator_skip_26_6_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @348, align 8
  ret ptr @348
}

define ptr @Core_iterator_skip_26_6_1_isMatch_else.1385(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_26_6_7(ptr %0) {
Core_iterator_skip_26_6_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_skip_26_6_8(ptr %0) {
Core_iterator_skip_26_6_8:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 2
  store ptr %22, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_case-0_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_skip_26_6_8_3_case-0_didNotMatch, align 8
  %25 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %26 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-0_didNotMatch, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %15, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @349, align 8
  ret ptr @349
}

define ptr @Core_iterator_skip_26_6_8_3_case-0_didNotMatch(ptr %0) {
Core_iterator_skip_26_6_8_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else.1397, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1398, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1398, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 2
  store ptr %27, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_matched, align 8
  %30 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_matched, align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_didNotMatch, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %20, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_skip_26_6_8_3_equals_then(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_then.1387, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1388, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else.1395, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1396, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1388, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1396, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_26_6_8_3_equals_then.1387(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_then.1389, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1390, align 8
  %11 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1390, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_skip_26_6_8_3_equals_then.1389(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_then.1391, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1392, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else.1393, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1394, align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.1392, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.1394, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_skip_26_6_8_3_equals_then.1391(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_skip_26_6_8_3_hasKey_then(ptr %0) {
Core_iterator_skip_26_6_8_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @350, align 8
  ret ptr @350
}

define ptr @Core_iterator_skip_26_6_8_3_hasKey_else(ptr %0) {
Core_iterator_skip_26_6_8_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @351, align 8
  ret ptr @351
}

define ptr @Core_iterator_skip_26_6_8_3_isMatch_then(ptr %0) {
Core_iterator_skip_26_6_8_3_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @352, align 8
  ret ptr @352
}

define ptr @Core_iterator_skip_26_6_8_3_isMatch_else(ptr %0) {
Core_iterator_skip_26_6_8_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else.1393(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @353, align 8
  ret ptr @353
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else.1395(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @354, align 8
  ret ptr @354
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else.1397(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @355, align 8
  ret ptr @355
}

define ptr @Core_iterator_skip_26_6_8_3_case-1_matched(ptr %0) {
Core_iterator_skip_26_6_8_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:skip:26:6:8:3:13", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @num_1, align 8
  %16 = call ptr @candy_builtin_int_subtract(ptr %14, ptr %15)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_Iterator, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %4, ptr %21, align 8
  %22 = load ptr, ptr @tag_N, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %16, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %27, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_toList_6(ptr %0, ptr %1) {
Core_iterator_toList_6:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterator:toList:6:8", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_List, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:list:append:9", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_list_length(ptr %0)
  %15 = call ptr @Builtins__listInsert(ptr %0, ptr %14, ptr %1)
  ret ptr %15
}

define ptr @"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1399(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1401, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1402, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1409, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1410, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1402, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1410, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1411, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1412, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1412, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1413, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1414, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1414, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.1452, align 8
  ret ptr @tag_Iterator.1452
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1401(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1403, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1404, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1407, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1408, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1404, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1408, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1403(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1405, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1406, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1406, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1405(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @357, align 8
  ret ptr @357
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1407(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @358, align 8
  ret ptr @358
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1409(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @359, align 8
  ret ptr @359
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1411(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1413(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1415, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1416, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1416, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1417, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1418, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1418, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1415(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @360, align 8
  ret ptr @360
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1417(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1419, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1420, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1447, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1448, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1420, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1448, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1449, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1450, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1450, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1419(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1421, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1422, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1445, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1446, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1422, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1446, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1421(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1423, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1424, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1424, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1423(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1425, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1426, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1443, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1444, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1426, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1444, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1425(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1427, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1428, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1429, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1430, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1428, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1430, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1431, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1432, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1441, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1442, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1432, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1442, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1427(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @361, align 8
  ret ptr @361
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1429(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @362, align 8
  ret ptr @362
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1431(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1433, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1434, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1435, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1436, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1434, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1436, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1437, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1438, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1439, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1440, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1438, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1440, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1433(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @363, align 8
  ret ptr @363
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1435(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @364, align 8
  ret ptr @364
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1437(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @365, align 8
  ret ptr @365
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1439(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1441(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1443(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @366, align 8
  ret ptr @366
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1445(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @367, align 8
  ret ptr @367
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1447(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @368, align 8
  ret ptr @368
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1449(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1451, align 8
  ret ptr @tag_More.1451
}

define ptr @Core_controlFlow_recursive_16.1453(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1455, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1456, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1456, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1399(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1455(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_toList_2() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1457(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1459, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1460, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1467, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1468, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1460, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1468, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1469, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1470, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1470, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1471, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1472, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1472, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.1510, align 8
  ret ptr @tag_Iterator.1510
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1459(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1461, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1462, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1465, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1466, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1462, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1466, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1461(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1463, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1464, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1464, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1463(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @369, align 8
  ret ptr @369
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1465(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @370, align 8
  ret ptr @370
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1467(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @371, align 8
  ret ptr @371
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1469(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1471(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1473, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1474, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1474, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1475, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1476, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1476, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1473(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @372, align 8
  ret ptr @372
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1475(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1477, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1478, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1505, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1506, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1478, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1506, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1507, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1508, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1508, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1477(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1479, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1480, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1503, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1504, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1480, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1504, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1479(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1481, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1482, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1482, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1481(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1483, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1484, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1501, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1502, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1484, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1502, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1483(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1485, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1486, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1487, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1488, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1486, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1488, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1489, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1490, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1499, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1500, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1490, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1500, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1485(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @373, align 8
  ret ptr @373
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1487(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @374, align 8
  ret ptr @374
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1489(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1491, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1492, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1493, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1494, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1492, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1494, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1495, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1496, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1497, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1498, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1496, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1498, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1491(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @375, align 8
  ret ptr @375
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1493(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @376, align 8
  ret ptr @376
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1495(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @377, align 8
  ret ptr @377
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1497(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1499(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1501(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @378, align 8
  ret ptr @378
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1503(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @379, align 8
  ret ptr @379
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1505(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @380, align 8
  ret ptr @380
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1507(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1509, align 8
  ret ptr @tag_More.1509
}

define ptr @Core_controlFlow_recursive_16.1511(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1513, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1514, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1514, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1457(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1513(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_windowed(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_iterator_windowed:
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5 = call ptr @make_candy_function(ptr @Core_iterator_windowed_2, ptr %4, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_windowed_2, align 8
  %6 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  %7 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:windowed:22", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:int:isPositive:8", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %20 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_type_of(ptr %1)
  %23 = load ptr, ptr @tag_Int, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %26 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %28)
  %30 = load ptr, ptr @tag_Greater, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @candy_builtin_type_of(ptr %2)
  %35 = load ptr, ptr @tag_Int, align 8
  %36 = call ptr @candy_builtin_equals(ptr %34, ptr %35)
  %37 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  %38 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr null)
  %39 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %40 = load ptr, ptr @"Core:iterator:windowed:42", align 8
  %41 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %39, ptr %40)
  %42 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %43 = load ptr, ptr @"Core:int:isPositive:8", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %42, ptr %43)
  %45 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %46 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  %47 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %45, ptr %46)
  %48 = call ptr @candy_builtin_type_of(ptr %2)
  %49 = load ptr, ptr @tag_Int, align 8
  %50 = call ptr @candy_builtin_equals(ptr %48, ptr %49)
  %51 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %52 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %53 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %51, ptr %52)
  %54 = load ptr, ptr @num_0, align 8
  %55 = call ptr @candy_builtin_int_compare_to(ptr %2, ptr %54)
  %56 = load ptr, ptr @tag_Greater, align 8
  %57 = call ptr @candy_builtin_equals(ptr %55, ptr %56)
  %58 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %57, ptr %58, ptr null)
  %60 = load ptr, ptr @tag_True, align 8
  %61 = call ptr @candy_builtin_equals(ptr %60, ptr %3)
  %62 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %63 = getelementptr inbounds { ptr }, ptr %62, i32 0, i32 0
  store ptr %3, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.1515, ptr %62, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_bool_is_1_equals_else.1516, align 8
  %65 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %66 = load ptr, ptr @fun_Core_bool_is_1_equals_else.1516, align 8
  %67 = call ptr @candy_builtin_if_else(ptr %61, ptr %65, ptr %66)
  %68 = load ptr, ptr @num_0, align 8
  %69 = call ptr @candy_builtin_list_get(ptr %67, ptr %68)
  %70 = load ptr, ptr @tag_Match, align 8
  %71 = call ptr @candy_builtin_equals(ptr %69, ptr %70)
  %72 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %73 = getelementptr inbounds { ptr }, ptr %72, i32 0, i32 0
  store ptr %67, ptr %73, align 8
  %74 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.1517, ptr %72, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %74, ptr @fun_Core_bool_is_1_isMatch_then.1518, align 8
  %75 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %76 = getelementptr inbounds { ptr }, ptr %75, i32 0, i32 0
  store ptr %3, ptr %76, align 8
  %77 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.1519, ptr %75, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %77, ptr @fun_Core_bool_is_1_isMatch_else.1520, align 8
  %78 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.1518, align 8
  %79 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.1520, align 8
  %80 = call ptr @candy_builtin_if_else(ptr %71, ptr %78, ptr %79)
  %81 = load ptr, ptr @num_0, align 8
  %82 = call ptr @candy_builtin_list_get(ptr %80, ptr %81)
  %83 = load ptr, ptr @tag_Match, align 8
  %84 = call ptr @candy_builtin_equals(ptr %82, ptr %83)
  %85 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %86 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %87 = call ptr @candy_builtin_if_else(ptr %84, ptr %85, ptr %86)
  %88 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %89 = call ptr @"anonymous_$generated__needs"(ptr %87, ptr %88, ptr null)
  %90 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %91 = getelementptr inbounds { ptr, ptr, ptr }, ptr %90, i32 0, i32 0
  store ptr %1, ptr %91, align 8
  %92 = getelementptr inbounds { ptr, ptr, ptr }, ptr %90, i32 0, i32 1
  store ptr %3, ptr %92, align 8
  %93 = getelementptr inbounds { ptr, ptr, ptr }, ptr %90, i32 0, i32 2
  store ptr %2, ptr %93, align 8
  %94 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57, ptr %90, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %94, ptr @fun_Core_iterator_windowed_57, align 8
  %95 = load ptr, ptr @fun_Core_iterator_windowed_57, align 8
  %96 = call ptr @Core_iterator_generateWithState(ptr %7, ptr %95)
  ret ptr %96
}

define ptr @Core_iterator_windowed_2() {
Core_iterator_windowed_2:
  %0 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_bool_is_1_equals_else.1515(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @381, align 8
  ret ptr @381
}

define ptr @Core_bool_is_1_isMatch_then.1517(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.1519(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.1521, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.1522, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.1522, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.1521(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @382, align 8
  ret ptr @382
}

define ptr @Core_iterator_windowed_57(ptr %0, ptr %1) {
Core_iterator_windowed_57:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Int, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:iterator:windowed:57:3", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:take:17", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %20 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %19, ptr %20)
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_0, align 8
  %33 = call ptr @candy_builtin_int_compare_to(ptr %31, ptr %32)
  %34 = load ptr, ptr @tag_Less, align 8
  %35 = call ptr @candy_builtin_equals(ptr %33, ptr %34)
  %36 = call ptr @Core_bool_not(ptr %35)
  %37 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %38 = load ptr, ptr @"Core:iterator:windowed:57:3", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1454, align 8
  %41 = call ptr @Core_controlFlow_recursive_16.1453(ptr %40, ptr %0)
  %42 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  %43 = call ptr @Core_iterator_wrapSafe(ptr %41, ptr %42)
  %44 = alloca ptr, i64 3, align 8
  %45 = alloca ptr, i64 3, align 8
  %46 = load ptr, ptr @tag_Iterator, align 8
  %47 = getelementptr ptr, ptr %44, i64 0
  store ptr %46, ptr %47, align 8
  %48 = getelementptr ptr, ptr %45, i64 0
  store ptr %43, ptr %48, align 8
  %49 = load ptr, ptr @tag_Index, align 8
  %50 = load ptr, ptr @num_0, align 8
  %51 = getelementptr ptr, ptr %44, i64 1
  store ptr %49, ptr %51, align 8
  %52 = getelementptr ptr, ptr %45, i64 1
  store ptr %50, ptr %52, align 8
  %53 = getelementptr ptr, ptr %44, i64 2
  store ptr null, ptr %53, align 8
  %54 = getelementptr ptr, ptr %45, i64 2
  store ptr null, ptr %54, align 8
  %55 = call ptr @make_candy_struct(ptr %44, ptr %45)
  %56 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  %57 = call ptr @Core_iterator_generateWithState(ptr %55, ptr %56)
  %58 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %59 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %60 = load ptr, ptr %59, align 8
  %61 = getelementptr inbounds { ptr }, ptr %58, i32 0, i32 0
  store ptr %60, ptr %61, align 8
  %62 = call ptr @make_candy_function(ptr @Core_iterator_take_27, ptr %58, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %62, ptr @fun_Core_iterator_take_27, align 8
  %63 = load ptr, ptr @fun_Core_iterator_take_27, align 8
  %64 = call ptr @Core_iterator_takeWhile(ptr %57, ptr %63)
  %65 = load ptr, ptr @fun_Core_iterator_take_30, align 8
  %66 = call ptr @Core_iterator_map(ptr %64, ptr %65)
  %67 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  %68 = call ptr @Core_iterator_wrapSafe(ptr %66, ptr %67)
  %69 = load ptr, ptr @356, align 8
  %70 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %71 = call ptr @Core_iterator_foldLeft(ptr %68, ptr %69, ptr %70)
  %72 = call ptr @candy_builtin_type_of(ptr %71)
  %73 = load ptr, ptr @tag_List, align 8
  %74 = call ptr @candy_builtin_equals(ptr %72, ptr %73)
  %75 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %76 = load ptr, ptr @"Core:iterator:windowed:57:14", align 8
  %77 = call ptr @"anonymous_$generated__needs"(ptr %74, ptr %75, ptr %76)
  %78 = call ptr @candy_builtin_list_length(ptr %71)
  %79 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %80 = getelementptr inbounds { ptr }, ptr %79, i32 0, i32 0
  store ptr %78, ptr %80, align 8
  %81 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_18, ptr %79, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %81, ptr @fun_Core_iterator_windowed_57_18, align 8
  %82 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %83 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %84 = load ptr, ptr %83, align 8
  %85 = getelementptr inbounds { ptr, ptr }, ptr %82, i32 0, i32 0
  store ptr %84, ptr %85, align 8
  %86 = getelementptr inbounds { ptr, ptr }, ptr %82, i32 0, i32 1
  store ptr %78, ptr %86, align 8
  %87 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_19, ptr %82, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %87, ptr @fun_Core_iterator_windowed_57_19, align 8
  %88 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %89 = load ptr, ptr %88, align 8
  %90 = load ptr, ptr @fun_Core_iterator_windowed_57_18, align 8
  %91 = load ptr, ptr @fun_Core_iterator_windowed_57_19, align 8
  %92 = call ptr @Builtins__ifElse(ptr %89, ptr %90, ptr %91)
  %93 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %94 = getelementptr inbounds { ptr, ptr, ptr }, ptr %93, i32 0, i32 0
  store ptr %0, ptr %94, align 8
  %95 = getelementptr inbounds { ptr, ptr, ptr }, ptr %93, i32 0, i32 1
  store ptr %71, ptr %95, align 8
  %96 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %97 = load ptr, ptr %96, align 8
  %98 = getelementptr inbounds { ptr, ptr, ptr }, ptr %93, i32 0, i32 2
  store ptr %97, ptr %98, align 8
  %99 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_24, ptr %93, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %99, ptr @fun_Core_iterator_windowed_57_24, align 8
  %100 = load ptr, ptr @fun_Core_iterator_windowed_57_24, align 8
  %101 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %102 = call ptr @Builtins__ifElse(ptr %92, ptr %100, ptr %101)
  ret ptr %102
}

define ptr @Core_iterator_take_27(ptr %0, ptr %1) {
Core_iterator_take_27:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_take_27_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_take_27_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.1531, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_take_27_1_isMatch_else.1532, align 8
  %21 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.1532, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_2, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @Core_int_isLessThan(ptr %25, ptr %27)
  ret ptr %28
}

define ptr @Core_iterator_take_27_1_equals_then(ptr %0) {
Core_iterator_take_27_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_27_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_take_27_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_take_27_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.1529, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_take_27_1_isMatch_else.1530, align 8
  %31 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.1530, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_take_27_1_hasKey_then(ptr %0) {
Core_iterator_take_27_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @383, align 8
  ret ptr @383
}

define ptr @Core_iterator_take_27_1_hasKey_else(ptr %0) {
Core_iterator_take_27_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @384, align 8
  ret ptr @384
}

define ptr @Core_iterator_take_27_1_isMatch_then(ptr %0) {
Core_iterator_take_27_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_then.1523, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_take_27_1_hasKey_then.1524, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_else.1525, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_take_27_1_hasKey_else.1526, align 8
  %19 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.1524, align 8
  %20 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.1526, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_then.1527, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_take_27_1_isMatch_then.1528, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_27_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.1528, align 8
  %34 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_take_27_1_hasKey_then.1523(ptr %0) {
Core_iterator_take_27_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @385, align 8
  ret ptr @385
}

define ptr @Core_iterator_take_27_1_hasKey_else.1525(ptr %0) {
Core_iterator_take_27_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @386, align 8
  ret ptr @386
}

define ptr @Core_iterator_take_27_1_isMatch_then.1527(ptr %0) {
Core_iterator_take_27_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @387, align 8
  ret ptr @387
}

define ptr @Core_iterator_take_27_1_isMatch_else(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_27_1_isMatch_else.1529(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_27_1_equals_else(ptr %0) {
Core_iterator_take_27_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @388, align 8
  ret ptr @388
}

define ptr @Core_iterator_take_27_1_isMatch_else.1531(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_windowed_57_18(ptr %0) {
Core_iterator_windowed_57_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isPositive(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_windowed_57_19(ptr %0) {
Core_iterator_windowed_57_19:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @candy_builtin_equals(ptr %2, ptr %4)
  ret ptr %5
}

define ptr @Core_iterator_windowed_57_24(ptr %0) {
Core_iterator_windowed_57_24:
  %1 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1512, align 8
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Core_controlFlow_recursive_16.1511(ptr %1, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:windowed:57:24:7", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:skip:22", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %20 = load ptr, ptr @"Core:int:isNegative:8", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %23 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %22, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %26 = load ptr, ptr %25, align 8
  %27 = call ptr @candy_builtin_type_of(ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr @num_0, align 8
  %36 = call ptr @candy_builtin_int_compare_to(ptr %34, ptr %35)
  %37 = load ptr, ptr @tag_Less, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = call ptr @Core_bool_not(ptr %38)
  %40 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %41 = load ptr, ptr @"Core:iterator:windowed:57:24:7", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr %41)
  %43 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %44 = getelementptr inbounds { ptr, ptr }, ptr %43, i32 0, i32 0
  store ptr %4, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr }, ptr %43, i32 0, i32 1
  store ptr %46, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_iterator_skip_26, ptr %43, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_iterator_skip_26, align 8
  %49 = load ptr, ptr @fun_Core_iterator_skip_26, align 8
  %50 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %50, align 1
  %51 = call ptr @make_candy_tag(ptr %50, ptr %49)
  store ptr %51, ptr @tag_Iterator.1533, align 8
  %52 = alloca ptr, i64 3, align 8
  %53 = alloca ptr, i64 3, align 8
  %54 = load ptr, ptr @tag_State, align 8
  %55 = load ptr, ptr @tag_Iterator.1533, align 8
  %56 = getelementptr ptr, ptr %52, i64 0
  store ptr %54, ptr %56, align 8
  %57 = getelementptr ptr, ptr %53, i64 0
  store ptr %55, ptr %57, align 8
  %58 = load ptr, ptr @tag_Item, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %60 = load ptr, ptr %59, align 8
  %61 = getelementptr ptr, ptr %52, i64 1
  store ptr %58, ptr %61, align 8
  %62 = getelementptr ptr, ptr %53, i64 1
  store ptr %60, ptr %62, align 8
  %63 = getelementptr ptr, ptr %52, i64 2
  store ptr null, ptr %63, align 8
  %64 = getelementptr ptr, ptr %53, i64 2
  store ptr null, ptr %64, align 8
  %65 = call ptr @make_candy_struct(ptr %52, ptr %53)
  %66 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %66, align 1
  %67 = call ptr @make_candy_tag(ptr %66, ptr %65)
  store ptr %67, ptr @tag_More.1534, align 8
  ret ptr @tag_More.1534
}

define ptr @Core_iterator_skip_26(ptr %0) {
Core_iterator_skip_26:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_N, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = load ptr, ptr @fun_Core_iterator_skip_26_6, align 8
  %17 = call ptr @Core_controlFlow_recursive(ptr %15, ptr %16)
  ret ptr %17
}

define ptr @Core_iterator_generateWithState_12.1535(ptr %0, ptr %1) {
Core_iterator_generateWithState_12:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1.1537, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_generateWithState_12_1.1538, align 8
  %6 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1.1538, align 8
  %7 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Iterator.1595, align 8
  ret ptr @tag_Iterator.1595
}

define ptr @Core_iterator_generateWithState_12_1.1537(ptr %0) {
Core_iterator_generateWithState_12_1:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_3, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generate_42_6, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generate_42_6, align 8
  %10 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %11 = load ptr, ptr @fun_Core_iterator_generate_42_6, align 8
  %12 = call ptr @Builtins__ifElse(ptr %4, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %12)
  %14 = load ptr, ptr @tag_Tag, align 8
  %15 = call ptr @candy_builtin_equals(ptr %14, ptr %13)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %12, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1552, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1553, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %13, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1580, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1581, align 8
  %22 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1553, align 8
  %23 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1581, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_0, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %24, ptr %25)
  %27 = load ptr, ptr @tag_Match, align 8
  %28 = call ptr @candy_builtin_equals(ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr, ptr }, ptr %29, i32 0, i32 0
  store ptr %24, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %29, i32 0, i32 1
  store ptr %32, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_matched.1582, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1583, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1585, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1586, align 8
  %38 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1583, align 8
  %39 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1586, align 8
  %40 = call ptr @candy_builtin_if_else(ptr %28, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_generate_42_6(ptr %0) {
Core_iterator_generate_42_6:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Builtins::listGet:14", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_int_compare_to(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Greater, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %15, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1539, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__isNonNegative_13_equals_else.1540, align 8
  %21 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %22 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1540, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then.1541, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1542, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %15, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else.1543, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1544, align 8
  %34 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1542, align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1544, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %27, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr }, ptr %41, i32 0, i32 0
  store ptr %15, ptr %42, align 8
  %43 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch.1547, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %43, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1548, align 8
  %44 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %45 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1548, align 8
  %46 = call ptr @candy_builtin_if_else(ptr %40, ptr %44, ptr %45)
  %47 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %48 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %49 = call ptr @"anonymous_$generated__needs"(ptr %46, ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %51 = load ptr, ptr @"Builtins::listGet:25", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %50, ptr %51)
  %53 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %54 = load ptr, ptr %53, align 8
  %55 = load ptr, ptr @num_3, align 8
  %56 = call ptr @candy_builtin_int_compare_to(ptr %54, ptr %55)
  %57 = load ptr, ptr @tag_Less, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %60 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr %60)
  %62 = load ptr, ptr @389, align 8
  %63 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %64 = load ptr, ptr %63, align 8
  %65 = call ptr @candy_builtin_list_get(ptr %62, ptr %64)
  %66 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %67 = load ptr, ptr %66, align 8
  %68 = call ptr @candy_builtin_type_of(ptr %67)
  %69 = load ptr, ptr @tag_Int, align 8
  %70 = call ptr @candy_builtin_equals(ptr %68, ptr %69)
  %71 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:iterator:generate:42:6:14", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %75 = load ptr, ptr %74, align 8
  %76 = load ptr, ptr @num_1, align 8
  %77 = call ptr @candy_builtin_int_add(ptr %75, ptr %76)
  %78 = alloca ptr, i64 3, align 8
  %79 = alloca ptr, i64 3, align 8
  %80 = load ptr, ptr @tag_Item, align 8
  %81 = getelementptr ptr, ptr %78, i64 0
  store ptr %80, ptr %81, align 8
  %82 = getelementptr ptr, ptr %79, i64 0
  store ptr %65, ptr %82, align 8
  %83 = load ptr, ptr @tag_State, align 8
  %84 = getelementptr ptr, ptr %78, i64 1
  store ptr %83, ptr %84, align 8
  %85 = getelementptr ptr, ptr %79, i64 1
  store ptr %77, ptr %85, align 8
  %86 = getelementptr ptr, ptr %78, i64 2
  store ptr null, ptr %86, align 8
  %87 = getelementptr ptr, ptr %79, i64 2
  store ptr null, ptr %87, align 8
  %88 = call ptr @make_candy_struct(ptr %78, ptr %79)
  %89 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %89, align 1
  %90 = call ptr @make_candy_tag(ptr %89, ptr %88)
  store ptr %90, ptr @tag_More.1551, align 8
  ret ptr @tag_More.1551
}

define ptr @Builtins__isNonNegative_13_equals_else.1539(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @390, align 8
  ret ptr @390
}

define ptr @Builtins__isNonNegative_13_isMatch_then.1541(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else.1543(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1545, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.1546, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1546, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isNonNegative_13_equals_else.1545(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @391, align 8
  ret ptr @391
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch.1547(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Less, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1549, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.1550, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1550, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isNonNegative_13_equals_else.1549(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @392, align 8
  ret ptr @392
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1552(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1554, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1555, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1578, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1579, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1555, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1579, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1554(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1556, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1557, align 8
  %11 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1557, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1556(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1558, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1559, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1576, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1577, align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1559, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1577, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1558(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1560, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1561, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1562, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1563, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1561, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1563, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1564, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1565, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1574, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1575, align 8
  %31 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1565, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1575, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1560(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @393, align 8
  ret ptr @393
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1562(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @394, align 8
  ret ptr @394
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1564(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1566, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1567, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1568, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1569, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1567, align 8
  %20 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1569, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1570, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1571, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1572, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1573, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1571, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1573, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1566(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @395, align 8
  ret ptr @395
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1568(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @396, align 8
  ret ptr @396
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1570(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @397, align 8
  ret ptr @397
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1572(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1574(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1576(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @398, align 8
  ret ptr @398
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1578(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @399, align 8
  ret ptr @399
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1580(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @400, align 8
  ret ptr @400
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_matched.1582(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Item, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %4, ptr %18, align 8
  %19 = load ptr, ptr @tag_Rest, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %13, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1584, align 8
  ret ptr @tag_More.1584
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1585(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Empty, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1587, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1588, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1588, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1589, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1590, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1590, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %16, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1587(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @401, align 8
  ret ptr @401
}

define ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1589(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_21.1591, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1592, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_22.1593, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1594, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1592, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1594, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %5, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = load ptr, ptr @"text_`", align 8
  %22 = call ptr @candy_builtin_text_concatenate(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_False, align 8
  %24 = load ptr, ptr @"Core:iterator:generate:43", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %22, ptr %24)
  ret ptr %25
}

define ptr @Core_iterator_generateWithState_12_1_3_21.1591(ptr %0) {
Core_iterator_generateWithState_12_1_3_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_22.1593(ptr %0) {
Core_iterator_generateWithState_12_1_3_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_controlFlow_recursive_16.1596(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1598, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1599, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1599, align 8
  %6 = call ptr @Core_iterator_generateWithState_12.1535(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1598(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_generateWithState_12.1600(ptr %0, ptr %1) {
Core_iterator_generateWithState_12:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1.1602, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_generateWithState_12_1.1603, align 8
  %6 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1.1603, align 8
  %7 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Iterator.1662, align 8
  ret ptr @tag_Iterator.1662
}

define ptr @Core_iterator_generateWithState_12_1.1602(ptr %0) {
Core_iterator_generateWithState_12_1:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_10, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generate_42_6.1604, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generate_42_6.1605, align 8
  %10 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %11 = load ptr, ptr @fun_Core_iterator_generate_42_6.1605, align 8
  %12 = call ptr @Builtins__ifElse(ptr %4, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %12)
  %14 = load ptr, ptr @tag_Tag, align 8
  %15 = call ptr @candy_builtin_equals(ptr %14, ptr %13)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %12, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1619, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1620, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %13, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1647, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1648, align 8
  %22 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1620, align 8
  %23 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1648, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_0, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %24, ptr %25)
  %27 = load ptr, ptr @tag_Match, align 8
  %28 = call ptr @candy_builtin_equals(ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %29, i32 0, i32 0
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %29, i32 0, i32 1
  store ptr %24, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_matched.1649, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1650, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1652, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1653, align 8
  %38 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1650, align 8
  %39 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1653, align 8
  %40 = call ptr @candy_builtin_if_else(ptr %28, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_generate_42_6.1604(ptr %0) {
Core_iterator_generate_42_6:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Builtins::listGet:14", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_int_compare_to(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Greater, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %15, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1606, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__isNonNegative_13_equals_else.1607, align 8
  %21 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %22 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1607, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then.1608, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1609, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %15, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else.1610, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1611, align 8
  %34 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1609, align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1611, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %27, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr }, ptr %41, i32 0, i32 0
  store ptr %15, ptr %42, align 8
  %43 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch.1614, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %43, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1615, align 8
  %44 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %45 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1615, align 8
  %46 = call ptr @candy_builtin_if_else(ptr %40, ptr %44, ptr %45)
  %47 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %48 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %49 = call ptr @"anonymous_$generated__needs"(ptr %46, ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %51 = load ptr, ptr @"Builtins::listGet:25", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %50, ptr %51)
  %53 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %54 = load ptr, ptr %53, align 8
  %55 = load ptr, ptr @num_10, align 8
  %56 = call ptr @candy_builtin_int_compare_to(ptr %54, ptr %55)
  %57 = load ptr, ptr @tag_Less, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %60 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr %60)
  %62 = load ptr, ptr @402, align 8
  %63 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %64 = load ptr, ptr %63, align 8
  %65 = call ptr @candy_builtin_list_get(ptr %62, ptr %64)
  %66 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %67 = load ptr, ptr %66, align 8
  %68 = call ptr @candy_builtin_type_of(ptr %67)
  %69 = load ptr, ptr @tag_Int, align 8
  %70 = call ptr @candy_builtin_equals(ptr %68, ptr %69)
  %71 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:iterator:generate:42:6:14", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %75 = load ptr, ptr %74, align 8
  %76 = load ptr, ptr @num_1, align 8
  %77 = call ptr @candy_builtin_int_add(ptr %75, ptr %76)
  %78 = alloca ptr, i64 3, align 8
  %79 = alloca ptr, i64 3, align 8
  %80 = load ptr, ptr @tag_Item, align 8
  %81 = getelementptr ptr, ptr %78, i64 0
  store ptr %80, ptr %81, align 8
  %82 = getelementptr ptr, ptr %79, i64 0
  store ptr %65, ptr %82, align 8
  %83 = load ptr, ptr @tag_State, align 8
  %84 = getelementptr ptr, ptr %78, i64 1
  store ptr %83, ptr %84, align 8
  %85 = getelementptr ptr, ptr %79, i64 1
  store ptr %77, ptr %85, align 8
  %86 = getelementptr ptr, ptr %78, i64 2
  store ptr null, ptr %86, align 8
  %87 = getelementptr ptr, ptr %79, i64 2
  store ptr null, ptr %87, align 8
  %88 = call ptr @make_candy_struct(ptr %78, ptr %79)
  %89 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %89, align 1
  %90 = call ptr @make_candy_tag(ptr %89, ptr %88)
  store ptr %90, ptr @tag_More.1618, align 8
  ret ptr @tag_More.1618
}

define ptr @Builtins__isNonNegative_13_equals_else.1606(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @403, align 8
  ret ptr @403
}

define ptr @Builtins__isNonNegative_13_isMatch_then.1608(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else.1610(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1612, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.1613, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1613, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isNonNegative_13_equals_else.1612(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @404, align 8
  ret ptr @404
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch.1614(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Less, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1616, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.1617, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1617, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isNonNegative_13_equals_else.1616(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @405, align 8
  ret ptr @405
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1619(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1621, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1622, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1645, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1646, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1622, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1646, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1621(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1623, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1624, align 8
  %11 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1624, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1623(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1625, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1626, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1643, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1644, align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1626, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1644, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1625(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1627, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1628, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1629, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1630, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1628, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1630, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1631, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1632, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1641, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1642, align 8
  %31 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1632, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1642, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1627(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @406, align 8
  ret ptr @406
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1629(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @407, align 8
  ret ptr @407
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1631(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1633, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1634, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1635, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1636, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1634, align 8
  %20 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1636, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1637, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1638, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1639, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1640, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1638, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1640, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1633(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @408, align 8
  ret ptr @408
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1635(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @409, align 8
  ret ptr @409
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1637(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @410, align 8
  ret ptr @410
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1639(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1641(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1643(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @411, align 8
  ret ptr @411
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1645(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @412, align 8
  ret ptr @412
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1647(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @413, align 8
  ret ptr @413
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_matched.1649(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Item, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %4, ptr %18, align 8
  %19 = load ptr, ptr @tag_Rest, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %13, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1651, align 8
  ret ptr @tag_More.1651
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1652(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Empty, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1654, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1655, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1655, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1656, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1657, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1657, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %16, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1654(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @414, align 8
  ret ptr @414
}

define ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1656(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_21.1658, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1659, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_22.1660, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1661, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1659, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1661, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %5, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = load ptr, ptr @"text_`", align 8
  %22 = call ptr @candy_builtin_text_concatenate(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_False, align 8
  %24 = load ptr, ptr @"Core:iterator:generate:43", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %22, ptr %24)
  ret ptr %25
}

define ptr @Core_iterator_generateWithState_12_1_3_21.1658(ptr %0) {
Core_iterator_generateWithState_12_1_3_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_22.1660(ptr %0) {
Core_iterator_generateWithState_12_1_3_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_controlFlow_recursive_16.1663(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1665, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1666, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1666, align 8
  %6 = call ptr @Core_iterator_generateWithState_12.1600(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1665(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1667"() {
"Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1669(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1671, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1672, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1679, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1680, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1672, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1680, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1681, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1682, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1682, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1668", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1668", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1683, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1684, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1684, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.1722, align 8
  ret ptr @tag_Iterator.1722
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1671(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1673, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1674, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1677, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1678, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1674, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1678, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1673(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1675, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1676, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1676, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1675(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @415, align 8
  ret ptr @415
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1677(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @416, align 8
  ret ptr @416
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1679(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @417, align 8
  ret ptr @417
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1681(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1683(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1685, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1686, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1686, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1687, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1688, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1688, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1685(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @418, align 8
  ret ptr @418
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1687(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1689, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1690, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1717, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1718, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1690, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1718, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1719, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1720, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1720, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_next_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1668", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1689(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1691, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1692, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1715, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1716, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1692, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1716, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1691(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1693, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1694, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1694, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1693(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1695, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1696, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1713, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1714, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1696, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1714, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1695(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1697, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1698, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1699, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1700, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1698, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1700, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1701, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1702, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1711, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1712, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1702, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1712, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1697(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @419, align 8
  ret ptr @419
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1699(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @420, align 8
  ret ptr @420
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1701(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1703, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1704, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1705, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1706, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1704, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1706, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1707, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1708, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1709, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1710, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1708, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1710, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1703(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @421, align 8
  ret ptr @421
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1705(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @422, align 8
  ret ptr @422
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1707(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @423, align 8
  ret ptr @423
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1709(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1711(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1713(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @424, align 8
  ret ptr @424
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1715(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @425, align 8
  ret ptr @425
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1717(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @426, align 8
  ret ptr @426
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1719(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1721, align 8
  ret ptr @tag_More.1721
}

define ptr @Core_controlFlow_recursive_16.1723(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1725, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1726, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1726, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1669(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1725(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_next_6_equals_then.1727(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1729, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.1730, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.1733, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.1734, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1730, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.1734, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.1729(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.1731, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.1732, align 8
  %11 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.1732, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_next_6_equals_then.1731(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @427, align 8
  ret ptr @427
}

define ptr @Core_iterator_next_6_equals_else.1733(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @428, align 8
  ret ptr @428
}

define ptr @Core_iterator_next_6_equals_else.1735(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @429, align 8
  ret ptr @429
}

define ptr @Core_iterator_next_6_isMatch_else.1737(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_130_equals_then(ptr %0) {
Core_iterator_130_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_then.1739, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_130_equals_then.1740, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_else.1753, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_130_equals_else.1754, align 8
  %14 = load ptr, ptr @fun_Core_iterator_130_equals_then.1740, align 8
  %15 = load ptr, ptr @fun_Core_iterator_130_equals_else.1754, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_130_equals_then.1739(ptr %0) {
Core_iterator_130_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_then.1741, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_130_equals_then.1742, align 8
  %11 = load ptr, ptr @fun_Core_iterator_130_equals_then.1742, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_130_equals_then.1741(ptr %0) {
Core_iterator_130_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_then.1743, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_130_equals_then.1744, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_130_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_130_equals_then.1744, align 8
  %14 = load ptr, ptr @fun_Core_iterator_130_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_130_equals_then.1743(ptr %0) {
Core_iterator_130_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_130_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_130_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_130_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_130_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_130_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_130_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_130_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_else.1751, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_130_isMatch_else.1752, align 8
  %31 = load ptr, ptr @fun_Core_iterator_130_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_130_isMatch_else.1752, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_130_hasKey_then(ptr %0) {
Core_iterator_130_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @430, align 8
  ret ptr @430
}

define ptr @Core_iterator_130_hasKey_else(ptr %0) {
Core_iterator_130_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @431, align 8
  ret ptr @431
}

define ptr @Core_iterator_130_isMatch_then(ptr %0) {
Core_iterator_130_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_130_hasKey_then.1745, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_130_hasKey_then.1746, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_130_hasKey_else.1747, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_130_hasKey_else.1748, align 8
  %19 = load ptr, ptr @fun_Core_iterator_130_hasKey_then.1746, align 8
  %20 = load ptr, ptr @fun_Core_iterator_130_hasKey_else.1748, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_then.1749, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_130_isMatch_then.1750, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_130_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_130_isMatch_then.1750, align 8
  %34 = load ptr, ptr @fun_Core_iterator_130_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_130_hasKey_then.1745(ptr %0) {
Core_iterator_130_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @432, align 8
  ret ptr @432
}

define ptr @Core_iterator_130_hasKey_else.1747(ptr %0) {
Core_iterator_130_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @433, align 8
  ret ptr @433
}

define ptr @Core_iterator_130_isMatch_then.1749(ptr %0) {
Core_iterator_130_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @434, align 8
  ret ptr @434
}

define ptr @Core_iterator_130_isMatch_else(ptr %0) {
Core_iterator_130_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_130_isMatch_else.1751(ptr %0) {
Core_iterator_130_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_130_equals_else(ptr %0) {
Core_iterator_130_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @435, align 8
  ret ptr @435
}

define ptr @Core_iterator_130_equals_else.1753(ptr %0) {
Core_iterator_130_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @436, align 8
  ret ptr @436
}

define ptr @Core_iterator_130_equals_else.1755(ptr %0) {
Core_iterator_130_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @437, align 8
  ret ptr @437
}

define ptr @Core_iterator_130_isMatch_else.1757(ptr %0) {
Core_iterator_130_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_139_equals_then(ptr %0) {
Core_iterator_139_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_then.1759, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_139_equals_then.1760, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_else.1773, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_139_equals_else.1774, align 8
  %14 = load ptr, ptr @fun_Core_iterator_139_equals_then.1760, align 8
  %15 = load ptr, ptr @fun_Core_iterator_139_equals_else.1774, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_139_equals_then.1759(ptr %0) {
Core_iterator_139_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_then.1761, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_139_equals_then.1762, align 8
  %11 = load ptr, ptr @fun_Core_iterator_139_equals_then.1762, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_139_equals_then.1761(ptr %0) {
Core_iterator_139_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_then.1763, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_139_equals_then.1764, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_139_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_139_equals_then.1764, align 8
  %14 = load ptr, ptr @fun_Core_iterator_139_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_139_equals_then.1763(ptr %0) {
Core_iterator_139_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_139_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_139_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_139_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_139_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_139_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_139_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_139_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_else.1771, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_139_isMatch_else.1772, align 8
  %31 = load ptr, ptr @fun_Core_iterator_139_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_139_isMatch_else.1772, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_139_hasKey_then(ptr %0) {
Core_iterator_139_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @438, align 8
  ret ptr @438
}

define ptr @Core_iterator_139_hasKey_else(ptr %0) {
Core_iterator_139_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @439, align 8
  ret ptr @439
}

define ptr @Core_iterator_139_isMatch_then(ptr %0) {
Core_iterator_139_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_139_hasKey_then.1765, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_139_hasKey_then.1766, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_139_hasKey_else.1767, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_139_hasKey_else.1768, align 8
  %19 = load ptr, ptr @fun_Core_iterator_139_hasKey_then.1766, align 8
  %20 = load ptr, ptr @fun_Core_iterator_139_hasKey_else.1768, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_then.1769, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_139_isMatch_then.1770, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_139_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_139_isMatch_then.1770, align 8
  %34 = load ptr, ptr @fun_Core_iterator_139_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_139_hasKey_then.1765(ptr %0) {
Core_iterator_139_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @440, align 8
  ret ptr @440
}

define ptr @Core_iterator_139_hasKey_else.1767(ptr %0) {
Core_iterator_139_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @441, align 8
  ret ptr @441
}

define ptr @Core_iterator_139_isMatch_then.1769(ptr %0) {
Core_iterator_139_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @442, align 8
  ret ptr @442
}

define ptr @Core_iterator_139_isMatch_else(ptr %0) {
Core_iterator_139_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_139_isMatch_else.1771(ptr %0) {
Core_iterator_139_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_139_equals_else(ptr %0) {
Core_iterator_139_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @443, align 8
  ret ptr @443
}

define ptr @Core_iterator_139_equals_else.1773(ptr %0) {
Core_iterator_139_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @444, align 8
  ret ptr @444
}

define ptr @Core_iterator_139_equals_else.1775(ptr %0) {
Core_iterator_139_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @445, align 8
  ret ptr @445
}

define ptr @Core_iterator_139_isMatch_else.1777(ptr %0) {
Core_iterator_139_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @"Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1779(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1781, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1782, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1789, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1790, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1782, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1790, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1791, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1792, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1792, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1793, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1794, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1794, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.1832, align 8
  ret ptr @tag_Iterator.1832
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1781(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1783, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1784, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1787, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1788, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1784, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1788, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1783(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1785, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1786, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1786, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1785(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @446, align 8
  ret ptr @446
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1787(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @447, align 8
  ret ptr @447
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1789(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @448, align 8
  ret ptr @448
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1791(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1793(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1795, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1796, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1796, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1797, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1798, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1798, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1795(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @449, align 8
  ret ptr @449
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1797(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1799, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1800, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1827, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1828, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1800, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1828, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1829, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1830, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1830, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1799(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1801, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1802, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1825, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1826, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1802, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1826, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1801(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1803, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1804, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1804, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1803(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1805, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1806, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1823, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1824, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1806, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1824, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1805(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1807, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1808, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1809, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1810, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1808, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1810, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1811, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1812, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1821, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1822, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1812, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1822, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1807(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @450, align 8
  ret ptr @450
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1809(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @451, align 8
  ret ptr @451
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1811(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1813, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1814, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1815, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1816, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1814, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1816, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1817, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1818, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1819, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1820, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1818, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1820, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1813(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @452, align 8
  ret ptr @452
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1815(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @453, align 8
  ret ptr @453
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1817(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @454, align 8
  ret ptr @454
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1819(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1821(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1823(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @455, align 8
  ret ptr @455
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1825(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @456, align 8
  ret ptr @456
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1827(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @457, align 8
  ret ptr @457
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1829(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1831, align 8
  ret ptr @tag_More.1831
}

define ptr @Core_controlFlow_recursive_16.1833(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1835, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1836, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1836, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1779(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1835(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_generateWithState_12.1837(ptr %0, ptr %1) {
Core_iterator_generateWithState_12:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  store ptr %1, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1.1839, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_generateWithState_12_1.1840, align 8
  %6 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1.1840, align 8
  %7 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Iterator.1899, align 8
  ret ptr @tag_Iterator.1899
}

define ptr @Core_iterator_generateWithState_12_1.1839(ptr %0) {
Core_iterator_generateWithState_12_1:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generate_42_6.1841, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generate_42_6.1842, align 8
  %10 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %11 = load ptr, ptr @fun_Core_iterator_generate_42_6.1842, align 8
  %12 = call ptr @Builtins__ifElse(ptr %4, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %12)
  %14 = load ptr, ptr @tag_Tag, align 8
  %15 = call ptr @candy_builtin_equals(ptr %14, ptr %13)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %12, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1856, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1857, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %13, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1884, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1885, align 8
  %22 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1857, align 8
  %23 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1885, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_0, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %24, ptr %25)
  %27 = load ptr, ptr @tag_Match, align 8
  %28 = call ptr @candy_builtin_equals(ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr, ptr }, ptr %29, i32 0, i32 0
  store ptr %24, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %29, i32 0, i32 1
  store ptr %32, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_matched.1886, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1887, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1889, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1890, align 8
  %38 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched.1887, align 8
  %39 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1890, align 8
  %40 = call ptr @candy_builtin_if_else(ptr %28, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_generate_42_6.1841(ptr %0) {
Core_iterator_generate_42_6:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Builtins::listGet:14", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_int_compare_to(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Greater, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %15, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1843, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__isNonNegative_13_equals_else.1844, align 8
  %21 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %22 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1844, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then.1845, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1846, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %15, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else.1847, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1848, align 8
  %34 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then.1846, align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else.1848, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %27, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr }, ptr %41, i32 0, i32 0
  store ptr %15, ptr %42, align 8
  %43 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch.1851, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %43, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1852, align 8
  %44 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-0_didNotMatch, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_function_is0_9, Core_function_is1_9, Core_function_is2_9, Core_result_is_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %45 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch.1852, align 8
  %46 = call ptr @candy_builtin_if_else(ptr %40, ptr %44, ptr %45)
  %47 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %48 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %49 = call ptr @"anonymous_$generated__needs"(ptr %46, ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %51 = load ptr, ptr @"Builtins::listGet:25", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %50, ptr %51)
  %53 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %54 = load ptr, ptr %53, align 8
  %55 = load ptr, ptr @num_0, align 8
  %56 = call ptr @candy_builtin_int_compare_to(ptr %54, ptr %55)
  %57 = load ptr, ptr @tag_Less, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %60 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr %60)
  %62 = load ptr, ptr @356, align 8
  %63 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %64 = load ptr, ptr %63, align 8
  %65 = call ptr @candy_builtin_list_get(ptr %62, ptr %64)
  %66 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %67 = load ptr, ptr %66, align 8
  %68 = call ptr @candy_builtin_type_of(ptr %67)
  %69 = load ptr, ptr @tag_Int, align 8
  %70 = call ptr @candy_builtin_equals(ptr %68, ptr %69)
  %71 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:iterator:generate:42:6:14", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %75 = load ptr, ptr %74, align 8
  %76 = load ptr, ptr @num_1, align 8
  %77 = call ptr @candy_builtin_int_add(ptr %75, ptr %76)
  %78 = alloca ptr, i64 3, align 8
  %79 = alloca ptr, i64 3, align 8
  %80 = load ptr, ptr @tag_Item, align 8
  %81 = getelementptr ptr, ptr %78, i64 0
  store ptr %80, ptr %81, align 8
  %82 = getelementptr ptr, ptr %79, i64 0
  store ptr %65, ptr %82, align 8
  %83 = load ptr, ptr @tag_State, align 8
  %84 = getelementptr ptr, ptr %78, i64 1
  store ptr %83, ptr %84, align 8
  %85 = getelementptr ptr, ptr %79, i64 1
  store ptr %77, ptr %85, align 8
  %86 = getelementptr ptr, ptr %78, i64 2
  store ptr null, ptr %86, align 8
  %87 = getelementptr ptr, ptr %79, i64 2
  store ptr null, ptr %87, align 8
  %88 = call ptr @make_candy_struct(ptr %78, ptr %79)
  %89 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %89, align 1
  %90 = call ptr @make_candy_tag(ptr %89, ptr %88)
  store ptr %90, ptr @tag_More.1855, align 8
  ret ptr @tag_More.1855
}

define ptr @Builtins__isNonNegative_13_equals_else.1843(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @458, align 8
  ret ptr @458
}

define ptr @Builtins__isNonNegative_13_isMatch_then.1845(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else.1847(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1849, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.1850, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1850, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isNonNegative_13_equals_else.1849(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @459, align 8
  ret ptr @459
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch.1851(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Less, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1853, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.1854, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.1854, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %18 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %16, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Builtins__isNonNegative_13_equals_else.1853(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @460, align 8
  ret ptr @460
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1856(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1858, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1859, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1882, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1883, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1859, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1883, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1858(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1860, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1861, align 8
  %11 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1861, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1860(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.1862, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1863, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1880, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1881, align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.1863, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1881, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.1862(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1864, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1865, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1866, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1867, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1865, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1867, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1868, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1869, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1878, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1879, align 8
  %31 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1869, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1879, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1864(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @461, align 8
  ret ptr @461
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1866(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @462, align 8
  ret ptr @462
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1868(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1870, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1871, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1872, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1873, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.1871, align 8
  %20 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.1873, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1874, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1875, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1876, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1877, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.1875, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.1877, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.1870(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @463, align 8
  ret ptr @463
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.1872(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @464, align 8
  ret ptr @464
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.1874(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @465, align 8
  ret ptr @465
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1876(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.1878(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1880(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @466, align 8
  ret ptr @466
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1882(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @467, align 8
  ret ptr @467
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1884(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @468, align 8
  ret ptr @468
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_matched.1886(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Item, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %4, ptr %18, align 8
  %19 = load ptr, ptr @tag_Rest, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %13, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1888, align 8
  ret ptr @tag_More.1888
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch.1889(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_didNotMatch:
  %1 = load ptr, ptr @tag_Empty, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.1891, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1892, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.1892, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1893, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1894, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1894, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %16, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.1891(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @469, align 8
  ret ptr @469
}

define ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch.1893(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_21.1895, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1896, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_22.1897, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1898, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21.1896, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22.1898, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %5, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = load ptr, ptr @"text_`", align 8
  %22 = call ptr @candy_builtin_text_concatenate(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_False, align 8
  %24 = load ptr, ptr @"Core:iterator:generate:43", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %22, ptr %24)
  ret ptr %25
}

define ptr @Core_iterator_generateWithState_12_1_3_21.1895(ptr %0) {
Core_iterator_generateWithState_12_1_3_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_22.1897(ptr %0) {
Core_iterator_generateWithState_12_1_3_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_controlFlow_recursive_16.1900(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1902, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1903, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1903, align 8
  %6 = call ptr @Core_iterator_generateWithState_12.1837(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1902(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @"Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1904"() {
"Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1906(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1908, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1909, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1916, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1917, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1909, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1917, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1918, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1919, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1919, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1905", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1905", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1920, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1921, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1921, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.1959, align 8
  ret ptr @tag_Iterator.1959
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1908(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1910, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1911, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1914, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1915, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1911, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1915, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1910(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1912, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1913, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1913, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1912(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @470, align 8
  ret ptr @470
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1914(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @471, align 8
  ret ptr @471
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1916(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @472, align 8
  ret ptr @472
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1918(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1920(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1922, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1923, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1923, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1924, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1925, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1925, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1922(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @473, align 8
  ret ptr @473
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1924(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1926, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1927, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1954, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1955, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1927, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1955, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1956, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1957, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.1957, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_isEmpty_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.1905", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1926(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1928, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1929, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1952, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1953, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1929, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1953, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1928(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1930, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1931, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1931, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1930(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1932, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1933, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1950, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1951, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1933, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1951, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1932(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1934, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1935, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1936, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1937, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1935, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1937, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1938, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1939, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1948, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1949, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1939, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1949, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1934(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @474, align 8
  ret ptr @474
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1936(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @475, align 8
  ret ptr @475
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1938(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1940, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1941, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1942, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1943, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1941, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1943, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1944, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1945, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1946, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1947, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1945, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.1947, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1940(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @476, align 8
  ret ptr @476
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1942(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @477, align 8
  ret ptr @477
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1944(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @478, align 8
  ret ptr @478
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1946(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.1948(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1950(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @479, align 8
  ret ptr @479
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1952(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @480, align 8
  ret ptr @480
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1954(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @481, align 8
  ret ptr @481
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.1956(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.1958, align 8
  ret ptr @tag_More.1958
}

define ptr @Core_controlFlow_recursive_16.1960(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.1962, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.1963, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.1963, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1906(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.1962(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @"Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.1964(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1966, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1967, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1974, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1975, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1967, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1975, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1976, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1977, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.1977, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.1978, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.1979, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.1979, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2017, align 8
  ret ptr @tag_Iterator.2017
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1966(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1968, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1969, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.1972, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1973, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1969, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.1973, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1968(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.1970, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1971, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.1971, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.1970(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @482, align 8
  ret ptr @482
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1972(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @483, align 8
  ret ptr @483
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.1974(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @484, align 8
  ret ptr @484
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.1976(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.1978(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1980, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1981, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.1981, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1982, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1983, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1983, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.1980(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @485, align 8
  ret ptr @485
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.1982(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1984, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1985, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2012, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2013, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1985, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2013, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2014, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2015, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2015, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1984(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1986, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1987, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2010, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2011, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1987, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2011, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1986(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1988, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1989, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1989, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1988(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1990, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1991, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2008, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2009, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.1991, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2009, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.1990(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1992, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1993, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1994, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1995, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1993, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.1995, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1996, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1997, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2006, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2007, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.1997, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2007, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1992(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @486, align 8
  ret ptr @486
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.1994(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @487, align 8
  ret ptr @487
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.1996(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1998, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1999, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2000, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2001, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.1999, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2001, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2002, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2003, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2004, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2005, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2003, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2005, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.1998(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @488, align 8
  ret ptr @488
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2000(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @489, align 8
  ret ptr @489
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2002(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @490, align 8
  ret ptr @490
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2004(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2006(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2008(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @491, align 8
  ret ptr @491
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2010(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @492, align 8
  ret ptr @492
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2012(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @493, align 8
  ret ptr @493
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2014(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2016, align 8
  ret ptr @tag_More.2016
}

define ptr @Core_controlFlow_recursive_16.2018(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2020, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2021, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2021, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.1964(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2020(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_map_17.2022(ptr %0) {
Core_iterator_map_17:
  %1 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1097, align 8
  %2 = call ptr @Core_controlFlow_recursive_16.1096(ptr %1, ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2024, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_next_6_equals_then.2025, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.2032, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_next_6_equals_else.2033, align 8
  %12 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2025, align 8
  %13 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2033, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else.2034, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_next_6_isMatch_else.2035, align 8
  %22 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.2035, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = call ptr @Core_function_run(ptr %26)
  %28 = load ptr, ptr @tag_Empty, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %27, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.2036, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_17_3_equals_else.2037, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2037, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @num_0, align 8
  %37 = call ptr @candy_builtin_list_get(ptr %35, ptr %36)
  %38 = load ptr, ptr @tag_Match, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr }, ptr %40, i32 0, i32 0
  store ptr %27, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-0_didNotMatch.2038, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch.2039, align 8
  %43 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %44 = load ptr, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch.2039, align 8
  %45 = call ptr @candy_builtin_if_else(ptr %39, ptr %43, ptr %44)
  ret ptr %45
}

define ptr @Core_iterator_next_6_equals_then.2024(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2026, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.2027, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.2030, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.2031, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2027, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2031, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.2026(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2028, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.2029, align 8
  %11 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2029, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_next_6_equals_then.2028(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @494, align 8
  ret ptr @494
}

define ptr @Core_iterator_next_6_equals_else.2030(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @495, align 8
  ret ptr @495
}

define ptr @Core_iterator_next_6_equals_else.2032(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @496, align 8
  ret ptr @496
}

define ptr @Core_iterator_next_6_isMatch_else.2034(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_map_17_3_equals_else.2036(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @497, align 8
  ret ptr @497
}

define ptr @Core_iterator_map_17_3_case-0_didNotMatch.2038(ptr %0) {
Core_iterator_map_17_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.2040, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.2041, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.2068, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_equals_else.2069, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2041, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2069, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-1_matched.2070, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_map_17_3_case-1_matched.2071, align 8
  %24 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_matched.2071, align 8
  %25 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_map_17_3_equals_then.2040(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.2042, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.2043, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.2066, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_equals_else.2067, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2043, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2067, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_17_3_equals_then.2042(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.2044, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.2045, align 8
  %11 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2045, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_map_17_3_equals_then.2044(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.2046, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_17_3_equals_then.2047, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.2064, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_map_17_3_equals_else.2065, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2047, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2065, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_map_17_3_equals_then.2046(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_then.2048, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_17_3_hasKey_then.2049, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_else.2050, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_17_3_hasKey_else.2051, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.2049, align 8
  %16 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.2051, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_then.2052, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_map_17_3_isMatch_then.2053, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_else.2062, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_17_3_isMatch_else.2063, align 8
  %31 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.2053, align 8
  %32 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.2063, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_map_17_3_hasKey_then.2048(ptr %0) {
Core_iterator_map_17_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @498, align 8
  ret ptr @498
}

define ptr @Core_iterator_map_17_3_hasKey_else.2050(ptr %0) {
Core_iterator_map_17_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @499, align 8
  ret ptr @499
}

define ptr @Core_iterator_map_17_3_isMatch_then.2052(ptr %0) {
Core_iterator_map_17_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_then.2054, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_hasKey_then.2055, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_else.2056, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_map_17_3_hasKey_else.2057, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.2055, align 8
  %20 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.2057, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_then.2058, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_map_17_3_isMatch_then.2059, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_else.2060, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_17_3_isMatch_else.2061, align 8
  %33 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.2059, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.2061, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_map_17_3_hasKey_then.2054(ptr %0) {
Core_iterator_map_17_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @500, align 8
  ret ptr @500
}

define ptr @Core_iterator_map_17_3_hasKey_else.2056(ptr %0) {
Core_iterator_map_17_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @501, align 8
  ret ptr @501
}

define ptr @Core_iterator_map_17_3_isMatch_then.2058(ptr %0) {
Core_iterator_map_17_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @502, align 8
  ret ptr @502
}

define ptr @Core_iterator_map_17_3_isMatch_else.2060(ptr %0) {
Core_iterator_map_17_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_17_3_isMatch_else.2062(ptr %0) {
Core_iterator_map_17_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_17_3_equals_else.2064(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @503, align 8
  ret ptr @503
}

define ptr @Core_iterator_map_17_3_equals_else.2066(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @504, align 8
  ret ptr @504
}

define ptr @Core_iterator_map_17_3_equals_else.2068(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @505, align 8
  ret ptr @505
}

define ptr @Core_iterator_map_17_3_case-1_matched.2070(ptr %0) {
Core_iterator_map_17_3_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:163:8", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_2, align 8
  %16 = call ptr @candy_builtin_int_multiply(ptr %4, ptr %15)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %16, ptr %21, align 8
  %22 = load ptr, ptr @tag_State, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %8, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %28, align 1
  %29 = call ptr @make_candy_tag(ptr %28, ptr %27)
  store ptr %29, ptr @tag_More.2072, align 8
  ret ptr @tag_More.2072
}

define ptr @Core_iterator_toList_2.2073() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2075(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2077, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2078, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2085, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2086, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2078, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2086, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2087, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2088, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2088, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2089, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2090, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2090, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2128, align 8
  ret ptr @tag_Iterator.2128
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2077(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2079, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2080, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2083, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2084, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2080, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2084, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2079(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2081, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2082, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2082, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2081(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @507, align 8
  ret ptr @507
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2083(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @508, align 8
  ret ptr @508
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2085(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @509, align 8
  ret ptr @509
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2087(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2089(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2091, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2092, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2092, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2093, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2094, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2094, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2091(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @510, align 8
  ret ptr @510
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2093(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2095, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2096, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2123, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2124, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2096, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2124, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2125, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2126, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2126, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_sum_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2095(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2097, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2098, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2121, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2122, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2098, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2122, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2097(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2099, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2100, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2100, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2099(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2101, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2102, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2119, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2120, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2102, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2120, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2101(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2103, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2104, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2105, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2106, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2104, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2106, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2107, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2108, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2117, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2118, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2108, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2118, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2103(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @511, align 8
  ret ptr @511
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2105(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @512, align 8
  ret ptr @512
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2107(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2109, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2110, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2111, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2112, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2110, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2112, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2113, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2114, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2115, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2116, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2114, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2116, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2109(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @513, align 8
  ret ptr @513
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2111(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @514, align 8
  ret ptr @514
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2113(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @515, align 8
  ret ptr @515
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2115(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2117(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2119(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @516, align 8
  ret ptr @516
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2121(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @517, align 8
  ret ptr @517
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2123(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @518, align 8
  ret ptr @518
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2125(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2127, align 8
  ret ptr @tag_More.2127
}

define ptr @Core_controlFlow_recursive_16.2129(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2131, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2132, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2132, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2075(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2131(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_sum_5.2133(ptr %0) {
Core_iterator_sum_5:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  %5 = load ptr, ptr @"Core:iterator:175", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  ret ptr %6
}

define ptr @"Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2135(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2137, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2138, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2145, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2146, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2138, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2146, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2147, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2148, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2148, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2149, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2150, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2150, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2188, align 8
  ret ptr @tag_Iterator.2188
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2137(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2139, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2140, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2143, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2144, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2140, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2144, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2139(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2141, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2142, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2142, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2141(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @519, align 8
  ret ptr @519
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2143(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @520, align 8
  ret ptr @520
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2145(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @521, align 8
  ret ptr @521
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2147(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2149(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2151, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2152, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2152, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2153, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2154, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2154, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2151(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @522, align 8
  ret ptr @522
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2153(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2155, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2156, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2183, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2184, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2156, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2184, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2185, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2186, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2186, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_length_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2155(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2157, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2158, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2181, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2182, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2158, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2182, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2157(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2159, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2160, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2160, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2159(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2161, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2162, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2179, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2180, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2162, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2180, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2161(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2163, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2164, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2165, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2166, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2164, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2166, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2167, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2168, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2177, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2178, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2168, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2178, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2163(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @523, align 8
  ret ptr @523
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2165(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @524, align 8
  ret ptr @524
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2167(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2169, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2170, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2171, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2172, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2170, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2172, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2173, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2174, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2175, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2176, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2174, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2176, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2169(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @525, align 8
  ret ptr @525
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2171(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @526, align 8
  ret ptr @526
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2173(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @527, align 8
  ret ptr @527
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2175(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2177(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2179(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @528, align 8
  ret ptr @528
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2181(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @529, align 8
  ret ptr @529
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2183(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @530, align 8
  ret ptr @530
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2185(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2187, align 8
  ret ptr @tag_More.2187
}

define ptr @Core_controlFlow_recursive_16.2189(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2191, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2192, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2192, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2135(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2191(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @"Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2193(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2195, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2196, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2203, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2204, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2196, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2204, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2205, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2206, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2206, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2207, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2208, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2208, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2246, align 8
  ret ptr @tag_Iterator.2246
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2195(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2197, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2198, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2201, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2202, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2198, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2202, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2197(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2199, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2200, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2200, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2199(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @531, align 8
  ret ptr @531
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2201(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @532, align 8
  ret ptr @532
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2203(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @533, align 8
  ret ptr @533
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2205(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2207(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2209, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2210, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2210, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2211, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2212, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2212, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2209(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @534, align 8
  ret ptr @534
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2211(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2213, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2214, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2241, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2242, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2214, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2242, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2243, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2244, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2244, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_all_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2213(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2215, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2216, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2239, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2240, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2216, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2240, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2215(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2217, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2218, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2218, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2217(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2219, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2220, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2237, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2238, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2220, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2238, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2219(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2221, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2222, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2223, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2224, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2222, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2224, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2225, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2226, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2235, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2236, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2226, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2236, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2221(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @535, align 8
  ret ptr @535
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2223(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @536, align 8
  ret ptr @536
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2225(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2227, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2228, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2229, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2230, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2228, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2230, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2231, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2232, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2233, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2234, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2232, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2234, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2227(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @537, align 8
  ret ptr @537
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2229(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @538, align 8
  ret ptr @538
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2231(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @539, align 8
  ret ptr @539
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2233(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2235(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2237(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @540, align 8
  ret ptr @540
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2239(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @541, align 8
  ret ptr @541
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2241(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @542, align 8
  ret ptr @542
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2243(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2245, align 8
  ret ptr @tag_More.2245
}

define ptr @Core_controlFlow_recursive_16.2247(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2249, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2250, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2250, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2193(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2249(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_all_16(ptr %0, ptr %1) {
Core_iterator_all_16:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterator:187:7", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %9 = load ptr, ptr @"Core:int:isPositive:8", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_type_of(ptr %1)
  %15 = load ptr, ptr @tag_Int, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %20)
  %22 = load ptr, ptr @tag_Greater, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = call ptr @Core_bool_is(ptr %23)
  %25 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %26 = load ptr, ptr @"Core:iterator:188", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = call ptr @Core_bool_and(ptr %0, ptr %23)
  ret ptr %28
}

define ptr @"Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2251(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2253, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2254, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2261, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2262, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2254, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2262, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2263, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2264, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2264, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2265, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2266, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2266, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2304, align 8
  ret ptr @tag_Iterator.2304
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2253(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2255, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2256, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2259, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2260, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2256, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2260, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2255(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2257, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2258, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2258, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2257(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @543, align 8
  ret ptr @543
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2259(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @544, align 8
  ret ptr @544
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2261(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @545, align 8
  ret ptr @545
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2263(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2265(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2267, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2268, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2268, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2269, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2270, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2270, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2267(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @546, align 8
  ret ptr @546
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2269(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2271, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2272, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2299, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2300, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2272, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2300, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2301, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2302, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2302, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_any_12, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2271(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2273, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2274, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2297, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2298, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2274, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2298, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2273(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2275, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2276, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2276, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2275(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2277, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2278, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2295, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2296, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2278, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2296, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2277(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2279, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2280, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2281, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2282, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2280, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2282, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2283, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2284, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2293, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2294, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2284, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2294, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2279(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @547, align 8
  ret ptr @547
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2281(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @548, align 8
  ret ptr @548
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2283(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2285, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2286, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2287, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2288, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2286, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2288, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2289, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2290, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2291, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2292, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2290, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2292, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2285(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @549, align 8
  ret ptr @549
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2287(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @550, align 8
  ret ptr @550
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2289(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @551, align 8
  ret ptr @551
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2291(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2293(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2295(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @552, align 8
  ret ptr @552
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2297(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @553, align 8
  ret ptr @553
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2299(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @554, align 8
  ret ptr @554
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2301(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2303, align 8
  ret ptr @tag_More.2303
}

define ptr @Core_controlFlow_recursive_16.2305(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2307, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2308, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2308, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2251(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2307(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_any_16(ptr %0, ptr %1) {
Core_iterator_any_16:
  %2 = load ptr, ptr @num_2, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterator:195", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @Core_bool_or(ptr %0, ptr %3)
  ret ptr %8
}

define ptr @"Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2309"() {
"Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2311(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2313, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2314, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2321, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2322, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2314, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2322, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2323, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2324, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2324, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2310", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2310", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2325, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2326, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2326, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2364, align 8
  ret ptr @tag_Iterator.2364
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2313(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2315, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2316, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2319, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2320, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2316, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2320, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2315(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2317, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2318, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2318, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2317(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @555, align 8
  ret ptr @555
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2319(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @556, align 8
  ret ptr @556
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2321(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @557, align 8
  ret ptr @557
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2323(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2325(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2327, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2328, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2328, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2329, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2330, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2330, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2327(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @558, align 8
  ret ptr @558
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2329(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2331, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2332, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2359, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2360, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2332, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2360, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2361, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2362, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2362, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_map_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2310", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2331(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2333, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2334, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2357, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2358, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2334, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2358, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2333(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2335, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2336, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2336, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2335(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2337, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2338, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2355, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2356, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2338, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2356, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2337(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2339, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2340, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2341, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2342, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2340, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2342, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2343, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2344, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2353, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2354, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2344, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2354, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2339(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @559, align 8
  ret ptr @559
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2341(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @560, align 8
  ret ptr @560
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2343(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2345, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2346, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2347, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2348, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2346, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2348, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2349, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2350, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2351, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2352, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2350, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2352, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2345(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @561, align 8
  ret ptr @561
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2347(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @562, align 8
  ret ptr @562
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2349(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @563, align 8
  ret ptr @563
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2351(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2353(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2355(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @564, align 8
  ret ptr @564
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2357(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @565, align 8
  ret ptr @565
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2359(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @566, align 8
  ret ptr @566
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2361(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2363, align 8
  ret ptr @tag_More.2363
}

define ptr @Core_controlFlow_recursive_16.2365(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2367, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2368, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2368, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2311(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2367(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_map_17.2369(ptr %0) {
Core_iterator_map_17:
  %1 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1097, align 8
  %2 = call ptr @Core_controlFlow_recursive_16.1096(ptr %1, ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2371, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_next_6_equals_then.2372, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.2379, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_next_6_equals_else.2380, align 8
  %12 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2372, align 8
  %13 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2380, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else.2381, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_next_6_isMatch_else.2382, align 8
  %22 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.2382, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = call ptr @Core_function_run(ptr %26)
  %28 = load ptr, ptr @tag_Empty, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %27, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.2383, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_17_3_equals_else.2384, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2384, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @num_0, align 8
  %37 = call ptr @candy_builtin_list_get(ptr %35, ptr %36)
  %38 = load ptr, ptr @tag_Match, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr }, ptr %40, i32 0, i32 0
  store ptr %27, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-0_didNotMatch.2385, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch.2386, align 8
  %43 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %44 = load ptr, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch.2386, align 8
  %45 = call ptr @candy_builtin_if_else(ptr %39, ptr %43, ptr %44)
  ret ptr %45
}

define ptr @Core_iterator_next_6_equals_then.2371(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2373, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.2374, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.2377, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.2378, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2374, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2378, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.2373(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2375, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.2376, align 8
  %11 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2376, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_next_6_equals_then.2375(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @567, align 8
  ret ptr @567
}

define ptr @Core_iterator_next_6_equals_else.2377(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @568, align 8
  ret ptr @568
}

define ptr @Core_iterator_next_6_equals_else.2379(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @569, align 8
  ret ptr @569
}

define ptr @Core_iterator_next_6_isMatch_else.2381(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_map_17_3_equals_else.2383(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @570, align 8
  ret ptr @570
}

define ptr @Core_iterator_map_17_3_case-0_didNotMatch.2385(ptr %0) {
Core_iterator_map_17_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.2387, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.2388, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.2415, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_equals_else.2416, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2388, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2416, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-1_matched.2417, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_map_17_3_case-1_matched.2418, align 8
  %24 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_matched.2418, align 8
  %25 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_map_17_3_equals_then.2387(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.2389, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.2390, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.2413, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_equals_else.2414, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2390, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2414, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_17_3_equals_then.2389(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.2391, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.2392, align 8
  %11 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2392, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_map_17_3_equals_then.2391(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.2393, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_17_3_equals_then.2394, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.2411, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_map_17_3_equals_else.2412, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.2394, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.2412, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_map_17_3_equals_then.2393(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_then.2395, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_17_3_hasKey_then.2396, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_else.2397, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_17_3_hasKey_else.2398, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.2396, align 8
  %16 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.2398, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_then.2399, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_map_17_3_isMatch_then.2400, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_else.2409, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_17_3_isMatch_else.2410, align 8
  %31 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.2400, align 8
  %32 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.2410, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_map_17_3_hasKey_then.2395(ptr %0) {
Core_iterator_map_17_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @571, align 8
  ret ptr @571
}

define ptr @Core_iterator_map_17_3_hasKey_else.2397(ptr %0) {
Core_iterator_map_17_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @572, align 8
  ret ptr @572
}

define ptr @Core_iterator_map_17_3_isMatch_then.2399(ptr %0) {
Core_iterator_map_17_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_then.2401, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_hasKey_then.2402, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_else.2403, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_map_17_3_hasKey_else.2404, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.2402, align 8
  %20 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.2404, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_then.2405, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_map_17_3_isMatch_then.2406, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_else.2407, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_17_3_isMatch_else.2408, align 8
  %33 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.2406, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.2408, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_map_17_3_hasKey_then.2401(ptr %0) {
Core_iterator_map_17_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @573, align 8
  ret ptr @573
}

define ptr @Core_iterator_map_17_3_hasKey_else.2403(ptr %0) {
Core_iterator_map_17_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @574, align 8
  ret ptr @574
}

define ptr @Core_iterator_map_17_3_isMatch_then.2405(ptr %0) {
Core_iterator_map_17_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @575, align 8
  ret ptr @575
}

define ptr @Core_iterator_map_17_3_isMatch_else.2407(ptr %0) {
Core_iterator_map_17_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_17_3_isMatch_else.2409(ptr %0) {
Core_iterator_map_17_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_17_3_equals_else.2411(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @576, align 8
  ret ptr @576
}

define ptr @Core_iterator_map_17_3_equals_else.2413(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @577, align 8
  ret ptr @577
}

define ptr @Core_iterator_map_17_3_equals_else.2415(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @578, align 8
  ret ptr @578
}

define ptr @Core_iterator_map_17_3_case-1_matched.2417(ptr %0) {
Core_iterator_map_17_3_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_to_debug_text(ptr %4)
  %10 = alloca ptr, i64 3, align 8
  %11 = alloca ptr, i64 3, align 8
  %12 = load ptr, ptr @tag_Item, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %11, i64 0
  store ptr %9, ptr %14, align 8
  %15 = load ptr, ptr @tag_State, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %15, ptr %16, align 8
  %17 = getelementptr ptr, ptr %11, i64 1
  store ptr %8, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = getelementptr ptr, ptr %11, i64 2
  store ptr null, ptr %19, align 8
  %20 = call ptr @make_candy_struct(ptr %10, ptr %11)
  %21 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %21, align 1
  %22 = call ptr @make_candy_tag(ptr %21, ptr %20)
  store ptr %22, ptr @tag_More.2419, align 8
  ret ptr @tag_More.2419
}

define ptr @Core_iterator_216(ptr %0) {
Core_iterator_216:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:216:7", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:int:isOdd:8", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_1, align 8
  %14 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %13)
  %15 = load ptr, ptr @num_1, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  ret ptr %16
}

define ptr @"Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2420(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2422, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2423, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2430, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2431, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2423, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2431, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2432, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2433, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2433, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2434, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2435, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2435, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2473, align 8
  ret ptr @tag_Iterator.2473
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2422(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2424, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2425, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2428, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2429, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2425, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2429, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2424(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2426, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2427, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2427, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2426(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @579, align 8
  ret ptr @579
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2428(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @580, align 8
  ret ptr @580
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2430(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @581, align 8
  ret ptr @581
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2432(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2434(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2436, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2437, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2437, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2438, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2439, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2439, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2436(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @582, align 8
  ret ptr @582
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2438(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2440, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2441, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2468, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2469, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2441, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2469, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2470, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2471, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2471, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_where_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2440(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2442, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2443, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2466, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2467, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2443, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2467, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2442(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2444, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2445, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2445, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2444(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2446, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2447, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2464, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2465, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2447, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2465, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2446(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2448, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2449, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2450, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2451, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2449, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2451, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2452, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2453, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2462, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2463, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2453, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2463, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2448(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @583, align 8
  ret ptr @583
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2450(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @584, align 8
  ret ptr @584
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2452(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2454, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2455, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2456, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2457, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2455, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2457, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2458, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2459, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2460, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2461, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2459, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2461, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2454(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @585, align 8
  ret ptr @585
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2456(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @586, align 8
  ret ptr @586
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2458(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @587, align 8
  ret ptr @587
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2460(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2462(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2464(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @588, align 8
  ret ptr @588
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2466(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @589, align 8
  ret ptr @589
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2468(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @590, align 8
  ret ptr @590
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2470(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2472, align 8
  ret ptr @tag_More.2472
}

define ptr @Core_controlFlow_recursive_16.2474(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2476, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2477, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2477, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2420(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2476(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_where_17(ptr %0, ptr %1) {
Core_iterator_where_17:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_iterator_where_17_2, align 8
  %5 = load ptr, ptr @fun_Core_iterator_where_17_2, align 8
  %6 = call ptr @Core_iterator_generateWithState(ptr %1, ptr %5)
  ret ptr %6
}

define ptr @Core_iterator_where_17_2(ptr %0, ptr %1) {
Core_iterator_where_17_2:
  %2 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1281, align 8
  %3 = call ptr @Core_controlFlow_recursive_16.1280(ptr %2, ptr %0)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2478, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_next_6_equals_then.2479, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.2486, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_next_6_equals_else.2487, align 8
  %13 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2479, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2487, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else.2488, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_iterator_next_6_isMatch_else.2489, align 8
  %23 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %24 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.2489, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %19, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_1, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %15, ptr %26)
  %28 = call ptr @Core_function_run(ptr %27)
  %29 = load ptr, ptr @tag_Empty, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %28, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_where_17_2_3_equals_else, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %35 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %28, ptr %42, align 8
  %43 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %44, ptr %45, align 8
  %46 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_case-0_didNotMatch, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %46, ptr @fun_Core_iterator_where_17_2_3_case-0_didNotMatch, align 8
  %47 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %48 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-0_didNotMatch, align 8
  %49 = call ptr @candy_builtin_if_else(ptr %40, ptr %47, ptr %48)
  ret ptr %49
}

define ptr @Core_iterator_next_6_equals_then.2478(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2480, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.2481, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.2484, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.2485, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2481, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2485, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.2480(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2482, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.2483, align 8
  %11 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2483, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_next_6_equals_then.2482(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @591, align 8
  ret ptr @591
}

define ptr @Core_iterator_next_6_equals_else.2484(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @592, align 8
  ret ptr @592
}

define ptr @Core_iterator_next_6_equals_else.2486(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @593, align 8
  ret ptr @593
}

define ptr @Core_iterator_next_6_isMatch_else.2488(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_where_17_2_3_equals_else(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @594, align 8
  ret ptr @594
}

define ptr @Core_iterator_where_17_2_3_case-0_didNotMatch(ptr %0) {
Core_iterator_where_17_2_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else.2508, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_equals_else.2509, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.2509, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_where_17_2_3_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-1_matched, align 8
  %28 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_where_17_2_3_equals_then(ptr %0) {
Core_iterator_where_17_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_then.2490, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_equals_then.2491, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else.2506, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_equals_else.2507, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.2491, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.2507, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_17_2_3_equals_then.2490(ptr %0) {
Core_iterator_where_17_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_then.2492, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_equals_then.2493, align 8
  %11 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.2493, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_where_17_2_3_equals_then.2492(ptr %0) {
Core_iterator_where_17_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_then.2494, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_17_2_3_equals_then.2495, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else.2504, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_17_2_3_equals_else.2505, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.2495, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.2505, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_17_2_3_equals_then.2494(ptr %0) {
Core_iterator_where_17_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_17_2_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_17_2_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_17_2_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_isMatch_else.2502, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_17_2_3_isMatch_else.2503, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_else.2503, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_17_2_3_hasKey_then(ptr %0) {
Core_iterator_where_17_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @595, align 8
  ret ptr @595
}

define ptr @Core_iterator_where_17_2_3_hasKey_else(ptr %0) {
Core_iterator_where_17_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @596, align 8
  ret ptr @596
}

define ptr @Core_iterator_where_17_2_3_isMatch_then(ptr %0) {
Core_iterator_where_17_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_hasKey_then.2496, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_hasKey_then.2497, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_hasKey_else.2498, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_17_2_3_hasKey_else.2499, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_then.2497, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_else.2499, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_isMatch_then.2500, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_17_2_3_isMatch_then.2501, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_17_2_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_then.2501, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_17_2_3_hasKey_then.2496(ptr %0) {
Core_iterator_where_17_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @597, align 8
  ret ptr @597
}

define ptr @Core_iterator_where_17_2_3_hasKey_else.2498(ptr %0) {
Core_iterator_where_17_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @598, align 8
  ret ptr @598
}

define ptr @Core_iterator_where_17_2_3_isMatch_then.2500(ptr %0) {
Core_iterator_where_17_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @599, align 8
  ret ptr @599
}

define ptr @Core_iterator_where_17_2_3_isMatch_else(ptr %0) {
Core_iterator_where_17_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_17_2_3_isMatch_else.2502(ptr %0) {
Core_iterator_where_17_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_17_2_3_equals_else.2504(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @600, align 8
  ret ptr @600
}

define ptr @Core_iterator_where_17_2_3_equals_else.2506(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @601, align 8
  ret ptr @601
}

define ptr @Core_iterator_where_17_2_3_equals_else.2508(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @602, align 8
  ret ptr @602
}

define ptr @Core_iterator_where_17_2_3_case-1_matched(ptr %0) {
Core_iterator_where_17_2_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @Core_iterator_216(ptr %4)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr }, ptr %10, i32 0, i32 1
  store ptr %8, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_5, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_5, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_where_17_2_3_6, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_17_2_3_5, align 8
  %21 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6, align 8
  %22 = call ptr @Builtins__ifElse(ptr %9, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_iterator_where_17_2_3_5(ptr %0) {
Core_iterator_where_17_2_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_Item, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.2510, align 8
  ret ptr @tag_More.2510
}

define ptr @Core_iterator_where_17_2_3_6(ptr %0) {
Core_iterator_where_17_2_3_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @Core_iterator_next(ptr %7)
  %9 = load ptr, ptr @tag_Empty, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %8, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %10, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %8, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_case-0_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_where_17_2_3_6_5_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %25 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @603, align 8
  ret ptr @603
}

define ptr @Core_iterator_where_17_2_3_6_5_case-0_didNotMatch(ptr %0) {
Core_iterator_where_17_2_3_6_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else.2529, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2530, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2530, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_matched, align 8
  %24 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_matched, align 8
  %25 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_then(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_then.2511, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2512, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else.2527, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2528, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2512, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2528, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_then.2511(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_then.2513, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2514, align 8
  %11 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2514, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_then.2513(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_then.2515, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2516, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else.2525, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2526, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.2516, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.2526, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_then.2515(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_isMatch_else.2523, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else.2524, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else.2524, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_17_2_3_6_5_hasKey_then(ptr %0) {
Core_iterator_where_17_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @604, align 8
  ret ptr @604
}

define ptr @Core_iterator_where_17_2_3_6_5_hasKey_else(ptr %0) {
Core_iterator_where_17_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @605, align 8
  ret ptr @605
}

define ptr @Core_iterator_where_17_2_3_6_5_isMatch_then(ptr %0) {
Core_iterator_where_17_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_hasKey_then.2517, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then.2518, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_hasKey_else.2519, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else.2520, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then.2518, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else.2520, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_isMatch_then.2521, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then.2522, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then.2522, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_17_2_3_6_5_hasKey_then.2517(ptr %0) {
Core_iterator_where_17_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @606, align 8
  ret ptr @606
}

define ptr @Core_iterator_where_17_2_3_6_5_hasKey_else.2519(ptr %0) {
Core_iterator_where_17_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @607, align 8
  ret ptr @607
}

define ptr @Core_iterator_where_17_2_3_6_5_isMatch_then.2521(ptr %0) {
Core_iterator_where_17_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @608, align 8
  ret ptr @608
}

define ptr @Core_iterator_where_17_2_3_6_5_isMatch_else(ptr %0) {
Core_iterator_where_17_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_17_2_3_6_5_isMatch_else.2523(ptr %0) {
Core_iterator_where_17_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else.2525(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @609, align 8
  ret ptr @609
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else.2527(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @610, align 8
  ret ptr @610
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else.2529(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @611, align 8
  ret ptr @611
}

define ptr @Core_iterator_where_17_2_3_6_5_case-1_matched(ptr %0) {
Core_iterator_where_17_2_3_6_5_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_State, align 8
  %15 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %15, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %8, ptr %16, align 8
  %17 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %20 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %20, align 1
  %21 = call ptr @make_candy_tag(ptr %20, ptr %19)
  store ptr %21, ptr @tag_More.2531, align 8
  ret ptr @tag_More.2531
}

define ptr @Core_iterator_toList_2.2532() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_230(ptr %0) {
Core_iterator_230:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:230:8", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %0)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_4, align 8
  %17 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %16)
  %18 = load ptr, ptr @tag_Less, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  ret ptr %19
}

define ptr @"Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2534(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2536, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2537, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2544, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2545, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2537, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2545, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2546, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2547, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2547, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2548, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2549, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2549, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2587, align 8
  ret ptr @tag_Iterator.2587
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2536(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2538, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2539, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2542, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2543, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2539, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2543, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2538(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2540, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2541, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2541, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2540(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @613, align 8
  ret ptr @613
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2542(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @614, align 8
  ret ptr @614
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2544(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @615, align 8
  ret ptr @615
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2546(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2548(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2550, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2551, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2551, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2552, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2553, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2553, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2550(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @616, align 8
  ret ptr @616
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2552(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2554, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2555, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2582, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2583, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2555, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2583, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2584, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2585, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2585, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_takeWhile_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2554(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2556, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2557, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2580, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2581, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2557, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2581, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2556(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2558, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2559, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2559, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2558(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2560, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2561, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2578, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2579, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2561, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2579, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2560(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2562, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2563, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2564, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2565, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2563, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2565, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2566, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2567, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2576, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2577, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2567, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2577, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2562(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @617, align 8
  ret ptr @617
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2564(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @618, align 8
  ret ptr @618
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2566(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2568, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2569, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2570, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2571, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2569, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2571, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2572, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2573, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2574, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2575, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2573, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2575, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2568(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @619, align 8
  ret ptr @619
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2570(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @620, align 8
  ret ptr @620
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2572(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @621, align 8
  ret ptr @621
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2574(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2576(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2578(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @622, align 8
  ret ptr @622
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2580(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @623, align 8
  ret ptr @623
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2582(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @624, align 8
  ret ptr @624
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2584(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2586, align 8
  ret ptr @tag_More.2586
}

define ptr @Core_controlFlow_recursive_16.2588(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2590, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2591, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2591, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2534(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2590(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_takeWhile_7.2592(ptr %0) {
Core_iterator_takeWhile_7:
  %1 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1341, align 8
  %2 = call ptr @Core_controlFlow_recursive_16.1340(ptr %1, ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2594, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_next_6_equals_then.2595, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.2602, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_next_6_equals_else.2603, align 8
  %12 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2595, align 8
  %13 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2603, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else.2604, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_next_6_isMatch_else.2605, align 8
  %22 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else.2605, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = call ptr @Core_function_run(ptr %26)
  %28 = load ptr, ptr @tag_Empty, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %27, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.2606, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2607, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2607, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @num_0, align 8
  %37 = call ptr @candy_builtin_list_get(ptr %35, ptr %36)
  %38 = load ptr, ptr @tag_Match, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr }, ptr %40, i32 0, i32 0
  store ptr %27, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch.2608, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch.2609, align 8
  %43 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %44 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch.2609, align 8
  %45 = call ptr @candy_builtin_if_else(ptr %39, ptr %43, ptr %44)
  ret ptr %45
}

define ptr @Core_iterator_next_6_equals_then.2594(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2596, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.2597, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.2600, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.2601, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2597, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.2601, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.2596(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.2598, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.2599, align 8
  %11 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.2599, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_next_6_equals_then.2598(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @625, align 8
  ret ptr @625
}

define ptr @Core_iterator_next_6_equals_else.2600(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @626, align 8
  ret ptr @626
}

define ptr @Core_iterator_next_6_equals_else.2602(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @627, align 8
  ret ptr @627
}

define ptr @Core_iterator_next_6_isMatch_else.2604(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.2606(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @628, align 8
  ret ptr @628
}

define ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch.2608(ptr %0) {
Core_iterator_takeWhile_7_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.2610, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2611, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.2638, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2639, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2611, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2639, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_matched.2640, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched.2641, align 8
  %24 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched.2641, align 8
  %25 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.2610(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.2612, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2613, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.2636, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2637, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2613, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2637, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.2612(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.2614, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2615, align 8
  %11 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2615, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.2614(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.2616, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2617, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.2634, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2635, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.2617, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.2635, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.2616(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then.2618, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.2619, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else.2620, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.2621, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.2619, align 8
  %16 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.2621, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then.2622, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.2623, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else.2632, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.2633, align 8
  %31 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.2623, align 8
  %32 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.2633, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then.2618(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @629, align 8
  ret ptr @629
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else.2620(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @630, align 8
  ret ptr @630
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then.2622(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then.2624, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.2625, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else.2626, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.2627, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.2625, align 8
  %20 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.2627, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then.2628, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.2629, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else.2630, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.2631, align 8
  %33 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.2629, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.2631, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then.2624(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @631, align 8
  ret ptr @631
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else.2626(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @632, align 8
  ret ptr @632
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then.2628(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @633, align 8
  ret ptr @633
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else.2630(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else.2632(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.2634(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @634, align 8
  ret ptr @634
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.2636(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @635, align 8
  ret ptr @635
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.2638(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @636, align 8
  ret ptr @636
}

define ptr @Core_iterator_takeWhile_7_3_case-1_matched.2640(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @Core_iterator_230(ptr %4)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %10, i32 0, i32 0
  store ptr %8, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr }, ptr %10, i32 0, i32 1
  store ptr %4, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_5.2642, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_5.2643, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5.2643, align 8
  %15 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %16 = call ptr @Builtins__ifElse(ptr %9, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_5.2642(ptr %0) {
Core_iterator_takeWhile_7_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.2644, align 8
  ret ptr @tag_More.2644
}

define ptr @Core_iterator_toList_2.2645() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2647"() {
"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2649(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2651, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2652, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2659, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2660, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2652, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2660, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2661, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2662, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2662, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2648", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2648", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2663, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2664, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2664, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2702, align 8
  ret ptr @tag_Iterator.2702
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2651(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2653, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2654, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2657, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2658, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2654, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2658, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2653(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2655, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2656, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2656, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2655(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @637, align 8
  ret ptr @637
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2657(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @638, align 8
  ret ptr @638
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2659(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @639, align 8
  ret ptr @639
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2661(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2663(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2665, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2666, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2666, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2667, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2668, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2668, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2665(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @640, align 8
  ret ptr @640
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2667(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2669, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2670, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2697, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2698, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2670, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2698, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2699, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2700, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2700, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2648", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2669(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2671, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2672, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2695, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2696, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2672, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2696, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2671(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2673, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2674, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2674, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2673(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2675, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2676, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2693, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2694, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2676, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2694, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2675(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2677, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2678, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2679, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2680, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2678, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2680, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2681, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2682, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2691, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2692, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2682, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2692, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2677(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @641, align 8
  ret ptr @641
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2679(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @642, align 8
  ret ptr @642
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2681(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2683, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2684, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2685, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2686, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2684, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2686, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2687, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2688, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2689, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2690, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2688, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2690, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2683(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @643, align 8
  ret ptr @643
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2685(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @644, align 8
  ret ptr @644
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2687(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @645, align 8
  ret ptr @645
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2689(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2691(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2693(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @646, align 8
  ret ptr @646
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2695(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @647, align 8
  ret ptr @647
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2697(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @648, align 8
  ret ptr @648
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2699(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2701, align 8
  ret ptr @tag_More.2701
}

define ptr @Core_controlFlow_recursive_16.2703(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2705, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2706, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2706, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2649(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2705(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_take_27.2707(ptr %0) {
Core_iterator_take_27:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_equals_then.2709, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_take_27_1_equals_then.2710, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_equals_else.2727, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_27_1_equals_else.2728, align 8
  %10 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_then.2710, align 8
  %11 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_else.2728, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.2729, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_take_27_1_isMatch_else.2730, align 8
  %20 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %21 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2730, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_2, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %12, ptr %23)
  %25 = load ptr, ptr @num_4, align 8
  %26 = call ptr @Core_int_isLessThan(ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_take_27_1_equals_then.2709(ptr %0) {
Core_iterator_take_27_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_then.2711, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_27_1_hasKey_then.2712, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_else.2713, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_take_27_1_hasKey_else.2714, align 8
  %15 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.2712, align 8
  %16 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.2714, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_then.2715, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_take_27_1_isMatch_then.2716, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.2725, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_take_27_1_isMatch_else.2726, align 8
  %31 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.2716, align 8
  %32 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2726, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_take_27_1_hasKey_then.2711(ptr %0) {
Core_iterator_take_27_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @649, align 8
  ret ptr @649
}

define ptr @Core_iterator_take_27_1_hasKey_else.2713(ptr %0) {
Core_iterator_take_27_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @650, align 8
  ret ptr @650
}

define ptr @Core_iterator_take_27_1_isMatch_then.2715(ptr %0) {
Core_iterator_take_27_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_then.2717, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_take_27_1_hasKey_then.2718, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_else.2719, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_take_27_1_hasKey_else.2720, align 8
  %19 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.2718, align 8
  %20 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.2720, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_then.2721, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_take_27_1_isMatch_then.2722, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.2723, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_27_1_isMatch_else.2724, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.2722, align 8
  %34 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2724, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_take_27_1_hasKey_then.2717(ptr %0) {
Core_iterator_take_27_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @651, align 8
  ret ptr @651
}

define ptr @Core_iterator_take_27_1_hasKey_else.2719(ptr %0) {
Core_iterator_take_27_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @652, align 8
  ret ptr @652
}

define ptr @Core_iterator_take_27_1_isMatch_then.2721(ptr %0) {
Core_iterator_take_27_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @653, align 8
  ret ptr @653
}

define ptr @Core_iterator_take_27_1_isMatch_else.2723(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_27_1_isMatch_else.2725(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_27_1_equals_else.2727(ptr %0) {
Core_iterator_take_27_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @654, align 8
  ret ptr @654
}

define ptr @Core_iterator_take_27_1_isMatch_else.2729(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_toList_2.2731() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2733"() {
"Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2735(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2737, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2738, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2745, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2746, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2738, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2746, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2747, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2748, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2748, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2734", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2734", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2749, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2750, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2750, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2788, align 8
  ret ptr @tag_Iterator.2788
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2737(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2739, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2740, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2743, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2744, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2740, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2744, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2739(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2741, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2742, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2742, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2741(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @656, align 8
  ret ptr @656
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2743(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @657, align 8
  ret ptr @657
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2745(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @658, align 8
  ret ptr @658
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2747(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2749(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2751, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2752, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2752, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2753, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2754, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2754, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2751(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @659, align 8
  ret ptr @659
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2753(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2755, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2756, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2783, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2784, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2756, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2784, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2785, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2786, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2786, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_take_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2734", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2755(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2757, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2758, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2781, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2782, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2758, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2782, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2757(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2759, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2760, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2760, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2759(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2761, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2762, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2779, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2780, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2762, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2780, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2761(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2763, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2764, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2765, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2766, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2764, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2766, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2767, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2768, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2777, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2778, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2768, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2778, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2763(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @660, align 8
  ret ptr @660
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2765(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @661, align 8
  ret ptr @661
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2767(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2769, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2770, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2771, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2772, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2770, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2772, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2773, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2774, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2775, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2776, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2774, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2776, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2769(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @662, align 8
  ret ptr @662
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2771(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @663, align 8
  ret ptr @663
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2773(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @664, align 8
  ret ptr @664
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2775(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2777(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2779(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @665, align 8
  ret ptr @665
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2781(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @666, align 8
  ret ptr @666
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2783(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @667, align 8
  ret ptr @667
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2785(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2787, align 8
  ret ptr @tag_More.2787
}

define ptr @Core_controlFlow_recursive_16.2789(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2791, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2792, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2792, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2735(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2791(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_take_27.2793(ptr %0) {
Core_iterator_take_27:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_equals_then.2795, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_take_27_1_equals_then.2796, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_equals_else.2813, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_27_1_equals_else.2814, align 8
  %10 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_then.2796, align 8
  %11 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_else.2814, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.2815, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_take_27_1_isMatch_else.2816, align 8
  %20 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_sqrt_then, Examples_sqrt_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %21 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2816, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_2, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %12, ptr %23)
  %25 = load ptr, ptr @num_12, align 8
  %26 = call ptr @Core_int_isLessThan(ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_take_27_1_equals_then.2795(ptr %0) {
Core_iterator_take_27_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_then.2797, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_27_1_hasKey_then.2798, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_else.2799, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_take_27_1_hasKey_else.2800, align 8
  %15 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.2798, align 8
  %16 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.2800, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_then.2801, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_take_27_1_isMatch_then.2802, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.2811, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_take_27_1_isMatch_else.2812, align 8
  %31 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.2802, align 8
  %32 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2812, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_take_27_1_hasKey_then.2797(ptr %0) {
Core_iterator_take_27_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @668, align 8
  ret ptr @668
}

define ptr @Core_iterator_take_27_1_hasKey_else.2799(ptr %0) {
Core_iterator_take_27_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @669, align 8
  ret ptr @669
}

define ptr @Core_iterator_take_27_1_isMatch_then.2801(ptr %0) {
Core_iterator_take_27_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_then.2803, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_take_27_1_hasKey_then.2804, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_else.2805, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_take_27_1_hasKey_else.2806, align 8
  %19 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.2804, align 8
  %20 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.2806, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_then.2807, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_take_27_1_isMatch_then.2808, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.2809, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_27_1_isMatch_else.2810, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.2808, align 8
  %34 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.2810, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_take_27_1_hasKey_then.2803(ptr %0) {
Core_iterator_take_27_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @670, align 8
  ret ptr @670
}

define ptr @Core_iterator_take_27_1_hasKey_else.2805(ptr %0) {
Core_iterator_take_27_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @671, align 8
  ret ptr @671
}

define ptr @Core_iterator_take_27_1_isMatch_then.2807(ptr %0) {
Core_iterator_take_27_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @672, align 8
  ret ptr @672
}

define ptr @Core_iterator_take_27_1_isMatch_else.2809(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_27_1_isMatch_else.2811(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_27_1_equals_else.2813(ptr %0) {
Core_iterator_take_27_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @673, align 8
  ret ptr @673
}

define ptr @Core_iterator_take_27_1_isMatch_else.2815(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_toList_2.2817() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2819"() {
"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2821(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2823, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2824, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2831, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2832, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2824, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2832, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2833, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2834, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2834, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2820", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2820", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2835, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2836, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2836, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2874, align 8
  ret ptr @tag_Iterator.2874
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2823(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2825, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2826, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2829, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2830, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2826, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2830, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2825(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2827, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2828, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2828, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2827(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @674, align 8
  ret ptr @674
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2829(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @675, align 8
  ret ptr @675
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2831(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @676, align 8
  ret ptr @676
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2833(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2835(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2837, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2838, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2838, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2839, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2840, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2840, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2837(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @677, align 8
  ret ptr @677
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2839(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2841, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2842, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2869, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2870, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2842, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2870, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2871, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2872, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2872, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2820", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2841(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2843, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2844, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2867, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2868, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2844, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2868, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2843(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2845, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2846, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2846, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2845(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2847, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2848, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2865, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2866, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2848, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2866, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2847(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2849, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2850, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2851, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2852, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2850, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2852, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2853, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2854, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2863, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2864, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2854, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2864, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2849(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @678, align 8
  ret ptr @678
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2851(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @679, align 8
  ret ptr @679
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2853(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2855, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2856, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2857, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2858, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2856, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2858, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2859, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2860, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2861, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2862, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2860, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2862, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2855(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @680, align 8
  ret ptr @680
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2857(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @681, align 8
  ret ptr @681
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2859(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @682, align 8
  ret ptr @682
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2861(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2863(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2865(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @683, align 8
  ret ptr @683
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2867(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @684, align 8
  ret ptr @684
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2869(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @685, align 8
  ret ptr @685
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2871(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2873, align 8
  ret ptr @tag_More.2873
}

define ptr @Core_controlFlow_recursive_16.2875(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2877, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2878, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2878, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2821(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2877(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_skip_26.2879(ptr %0) {
Core_iterator_skip_26:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_N, align 8
  %9 = load ptr, ptr @num_4, align 8
  %10 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %10, align 8
  %11 = getelementptr ptr, ptr %2, i64 1
  store ptr %9, ptr %11, align 8
  %12 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %12, align 8
  %13 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6, align 8
  %16 = call ptr @Core_controlFlow_recursive(ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_toList_2.2882() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2884"() {
"Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2886(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2888, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2889, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2896, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2897, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2889, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2897, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2898, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2899, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2899, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2885", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2885", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2900, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2901, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2901, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.2939, align 8
  ret ptr @tag_Iterator.2939
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2888(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2890, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2891, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2894, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2895, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2891, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2895, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2890(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2892, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2893, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2893, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2892(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @687, align 8
  ret ptr @687
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2894(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @688, align 8
  ret ptr @688
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2896(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @689, align 8
  ret ptr @689
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2898(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2900(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2902, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2903, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2903, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %3, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2904, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2905, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2905, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2902(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @690, align 8
  ret ptr @690
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2904(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2906, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2907, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2934, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2935, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2907, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2935, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2936, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2937, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.2937, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_skip_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch.2885", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2906(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2908, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2909, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2932, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2933, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2909, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2933, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2908(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2910, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2911, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2911, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2910(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2912, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2913, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2930, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2931, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2913, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2931, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2912(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2914, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2915, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2916, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2917, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2915, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2917, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2918, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2919, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2928, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2929, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2919, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2929, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2914(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @691, align 8
  ret ptr @691
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2916(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @692, align 8
  ret ptr @692
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2918(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2920, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2921, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2922, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2923, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2921, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2923, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2924, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2925, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2926, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2927, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2925, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2927, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2920(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @693, align 8
  ret ptr @693
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2922(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @694, align 8
  ret ptr @694
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2924(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @695, align 8
  ret ptr @695
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2926(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2928(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2930(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @696, align 8
  ret ptr @696
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2932(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @697, align 8
  ret ptr @697
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2934(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @698, align 8
  ret ptr @698
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2936(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.2938, align 8
  ret ptr @tag_More.2938
}

define ptr @Core_controlFlow_recursive_16.2940(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.2942, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.2943, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.2943, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2886(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.2942(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_skip_26.2944(ptr %0) {
Core_iterator_skip_26:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_N, align 8
  %9 = load ptr, ptr @num_40, align 8
  %10 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %10, align 8
  %11 = getelementptr ptr, ptr %2, i64 1
  store ptr %9, ptr %11, align 8
  %12 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %12, align 8
  %13 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6, align 8
  %16 = call ptr @Core_controlFlow_recursive(ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_toList_2.2947() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.2949(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2951, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2952, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2959, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2960, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2952, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2960, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2961, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2962, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.2962, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.2963, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.2964, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.2964, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.3002, align 8
  ret ptr @tag_Iterator.3002
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2951(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2953, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2954, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.2957, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2958, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2954, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.2958, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2953(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.2955, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2956, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.2956, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.2955(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @699, align 8
  ret ptr @699
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2957(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @700, align 8
  ret ptr @700
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.2959(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @701, align 8
  ret ptr @701
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.2961(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.2963(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2965, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2966, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2966, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2967, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2968, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2968, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2965(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @702, align 8
  ret ptr @702
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.2967(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2969, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2970, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2997, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2998, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2970, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2998, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2999, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.3000, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.3000, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_windowed_2, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2969(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2971, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2972, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2995, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2996, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2972, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2996, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2971(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2973, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2974, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2974, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2973(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2975, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2976, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2993, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2994, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.2976, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.2994, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.2975(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2977, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2978, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2979, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2980, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2978, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2980, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2981, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2982, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2991, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2992, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2982, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2992, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2977(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @703, align 8
  ret ptr @703
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2979(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @704, align 8
  ret ptr @704
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2981(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2983, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2984, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2985, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2986, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.2984, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.2986, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2987, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2988, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2989, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2990, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.2988, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.2990, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.2983(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @705, align 8
  ret ptr @705
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.2985(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @706, align 8
  ret ptr @706
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.2987(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @707, align 8
  ret ptr @707
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2989(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.2991(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2993(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @708, align 8
  ret ptr @708
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2995(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @709, align 8
  ret ptr @709
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.2997(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @710, align 8
  ret ptr @710
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.2999(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.3001, align 8
  ret ptr @tag_More.3001
}

define ptr @Core_controlFlow_recursive_16.3003(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.3005, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.3006, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.3006, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.2949(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.3005(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_windowed_57.3007(ptr %0) {
Core_iterator_windowed_57:
  %1 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1454, align 8
  %2 = call ptr @Core_controlFlow_recursive_16.1453(ptr %1, ptr %0)
  %3 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = alloca ptr, i64 3, align 8
  %7 = load ptr, ptr @tag_Iterator, align 8
  %8 = getelementptr ptr, ptr %5, i64 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr ptr, ptr %6, i64 0
  store ptr %4, ptr %9, align 8
  %10 = load ptr, ptr @tag_Index, align 8
  %11 = load ptr, ptr @num_0, align 8
  %12 = getelementptr ptr, ptr %5, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %6, i64 1
  store ptr %11, ptr %13, align 8
  %14 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %14, align 8
  %15 = getelementptr ptr, ptr %6, i64 2
  store ptr null, ptr %15, align 8
  %16 = call ptr @make_candy_struct(ptr %5, ptr %6)
  %17 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  %18 = call ptr @Core_iterator_generateWithState(ptr %16, ptr %17)
  %19 = load ptr, ptr @fun_Core_iterator_take_27.2708, align 8
  %20 = call ptr @Core_iterator_takeWhile(ptr %18, ptr %19)
  %21 = load ptr, ptr @fun_Core_iterator_take_30, align 8
  %22 = call ptr @Core_iterator_map(ptr %20, ptr %21)
  %23 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  %24 = call ptr @Core_iterator_wrapSafe(ptr %22, ptr %23)
  %25 = load ptr, ptr @356, align 8
  %26 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %27 = call ptr @Core_iterator_foldLeft(ptr %24, ptr %25, ptr %26)
  %28 = call ptr @candy_builtin_type_of(ptr %27)
  %29 = load ptr, ptr @tag_List, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:iterator:windowed:57:14", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = call ptr @candy_builtin_list_length(ptr %27)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %34, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_18.3009, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_windowed_57_18.3010, align 8
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr }, ptr %38, i32 0, i32 0
  store ptr %34, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_19.3011, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_iterator_windowed_57_19.3012, align 8
  %41 = load ptr, ptr @tag_False, align 8
  %42 = load ptr, ptr @fun_Core_iterator_windowed_57_18.3010, align 8
  %43 = load ptr, ptr @fun_Core_iterator_windowed_57_19.3012, align 8
  %44 = call ptr @Builtins__ifElse(ptr %41, ptr %42, ptr %43)
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %27, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %0, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_24.3013, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_iterator_windowed_57_24.3014, align 8
  %49 = load ptr, ptr @fun_Core_iterator_windowed_57_24.3014, align 8
  %50 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %51 = call ptr @Builtins__ifElse(ptr %44, ptr %49, ptr %50)
  ret ptr %51
}

define ptr @Core_iterator_windowed_57_18.3009(ptr %0) {
Core_iterator_windowed_57_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isPositive(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_windowed_57_19.3011(ptr %0) {
Core_iterator_windowed_57_19:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_4, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_windowed_57_24.3013(ptr %0) {
Core_iterator_windowed_57_24:
  %1 = load ptr, ptr @fun_Core_controlFlow_recursive_16.1512, align 8
  %2 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Core_controlFlow_recursive_16.1511(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %4, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_skip_26.3015, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_skip_26.3016, align 8
  %8 = load ptr, ptr @fun_Core_iterator_skip_26.3016, align 8
  %9 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %9, align 1
  %10 = call ptr @make_candy_tag(ptr %9, ptr %8)
  store ptr %10, ptr @tag_Iterator.3017, align 8
  %11 = alloca ptr, i64 3, align 8
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_State, align 8
  %14 = load ptr, ptr @tag_Iterator.3017, align 8
  %15 = getelementptr ptr, ptr %11, i64 0
  store ptr %13, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 0
  store ptr %14, ptr %16, align 8
  %17 = load ptr, ptr @tag_Item, align 8
  %18 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr ptr, ptr %11, i64 1
  store ptr %17, ptr %20, align 8
  %21 = getelementptr ptr, ptr %12, i64 1
  store ptr %19, ptr %21, align 8
  %22 = getelementptr ptr, ptr %11, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %11, ptr %12)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.3018, align 8
  ret ptr @tag_More.3018
}

define ptr @Core_iterator_skip_26.3015(ptr %0) {
Core_iterator_skip_26:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_N, align 8
  %9 = load ptr, ptr @num_3, align 8
  %10 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %10, align 8
  %11 = getelementptr ptr, ptr %2, i64 1
  store ptr %9, ptr %11, align 8
  %12 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %12, align 8
  %13 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6, align 8
  %16 = call ptr @Core_controlFlow_recursive(ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_toList_2.3019() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch"() {
"Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch":
  %0 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14.3021(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.3023, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3024, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.3031, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.3032, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3024, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.3032, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched.3033, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.3034, align 8
  %21 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched.3034, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = call ptr @Core_function_is0(ptr %23)
  %25 = call ptr @Core_bool_not(ptr %24)
  %26 = load ptr, ptr @"fun_Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %27 = call ptr @Core_controlFlow_if(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22.3035, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterator_wrapSafe_14_22.3036, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22.3036, align 8
  %33 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr %32)
  store ptr %34, ptr @tag_Iterator.3074, align 8
  ret ptr @tag_Iterator.3074
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.3023(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.3025, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3026, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.3029, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.3030, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3026, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.3030, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.3025(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.3027, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3028, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.3028, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.3027(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @714, align 8
  ret ptr @714
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.3029(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @715, align 8
  ret ptr @715
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.3031(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @716, align 8
  ret ptr @716
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched.3033(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22.3035(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.3037, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3038, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__ifElse_1_isMatch_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_is_1_isMatch_else, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3038, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.3039, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.3040, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.3040, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.3037(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @717, align 8
  ret ptr @717
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch.3039(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.3041, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3042, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.3069, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3070, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3042, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3070, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.3071, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.3072, align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched.3072, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_chunked_22, Core_iterator_wrapSafe_10, Core_iterator_wrapSafe_14_1_case-0_didNotMatch, Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch", align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.3041(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.3043, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3044, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.3067, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3068, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3044, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3068, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.3043(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.3045, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3046, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3046, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.3045(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.3047, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3048, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.3065, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3066, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.3048, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.3066, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.3047(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.3049, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.3050, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.3051, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.3052, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.3050, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.3052, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.3053, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.3054, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.3063, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.3064, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.3054, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.3064, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.3049(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @718, align 8
  ret ptr @718
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.3051(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @719, align 8
  ret ptr @719
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.3053(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.3055, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.3056, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.3057, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.3058, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.3056, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.3058, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.3059, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.3060, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.3061, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.3062, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.3060, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.3062, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.3055(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @720, align 8
  ret ptr @720
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.3057(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @721, align 8
  ret ptr @721
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.3059(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @722, align 8
  ret ptr @722
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.3061(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.3063(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.3065(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @723, align 8
  ret ptr @723
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.3067(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @724, align 8
  ret ptr @724
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.3069(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @725, align 8
  ret ptr @725
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched.3071(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.3073, align 8
  ret ptr @tag_More.3073
}

define ptr @Core_controlFlow_recursive_16.3075(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.3077, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.3078, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.3078, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14.3021(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.3077(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_toList_2.3079() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_controlFlow_recursive_16.3083(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.3085, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.3086, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.3086, align 8
  %6 = call ptr @Core_int_pow_21(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.3085(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Examples_sqrt_sqrt_68(ptr %0, ptr %1, ptr %2) {
Examples_sqrt_sqrt_68:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.3087, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_fixedDecimal_is_1_equals_then.3088, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.3115, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_fixedDecimal_is_1_equals_else.3116, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3088, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3116, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.3117, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3118, align 8
  %22 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3118, align 8
  %23 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  %26 = load ptr, ptr @"Examples:sqrt:sqrt:68:22", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3088, align 8
  %29 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3116, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %5, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_0, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %30, ptr %31)
  %33 = load ptr, ptr @tag_Match, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %30, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.3121, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3122, align 8
  %38 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3122, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %40 = call ptr @candy_builtin_if_else(ptr %34, ptr %38, ptr %39)
  %41 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %42 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr %42)
  %44 = call ptr @candy_builtin_type_of(ptr %1)
  %45 = load ptr, ptr @tag_Tag, align 8
  %46 = call ptr @candy_builtin_equals(ptr %44, ptr %45)
  %47 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %48 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %49 = call ptr @"anonymous_$generated__needs"(ptr %46, ptr %47, ptr %48)
  %50 = call ptr @candy_builtin_tag_has_value(ptr %1)
  %51 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %52 = load ptr, ptr @"Core:fixedDecimal:minorUnits:15", align 8
  %53 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %51, ptr %52)
  %54 = call ptr @candy_builtin_tag_get_value(ptr %1)
  %55 = call ptr @candy_builtin_type_of(ptr %54)
  %56 = load ptr, ptr @tag_Struct, align 8
  %57 = call ptr @candy_builtin_equals(ptr %55, ptr %56)
  %58 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %59 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %60 = call ptr @"anonymous_$generated__needs"(ptr %57, ptr %58, ptr %59)
  %61 = load ptr, ptr @tag_MinorUnits, align 8
  %62 = call ptr @candy_builtin_struct_has_key(ptr %54, ptr %61)
  %63 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %64 = load ptr, ptr @"Core:fixedDecimal:minorUnits:17", align 8
  %65 = call ptr @"anonymous_$generated__needs"(ptr %62, ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_MinorUnits, align 8
  %67 = call ptr @candy_builtin_struct_get(ptr %54, ptr %66)
  %68 = load ptr, ptr @num_0, align 8
  %69 = call ptr @candy_builtin_equals(ptr %67, ptr %68)
  %70 = call ptr @Core_bool_not(ptr %69)
  %71 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %72 = load ptr, ptr @"Examples:sqrt:sqrt:68:22", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3088, align 8
  %75 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3116, align 8
  %76 = call ptr @candy_builtin_if_else(ptr %5, ptr %74, ptr %75)
  %77 = load ptr, ptr @num_0, align 8
  %78 = call ptr @candy_builtin_list_get(ptr %76, ptr %77)
  %79 = load ptr, ptr @tag_Match, align 8
  %80 = call ptr @candy_builtin_equals(ptr %78, ptr %79)
  %81 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %82 = getelementptr inbounds { ptr }, ptr %81, i32 0, i32 0
  store ptr %76, ptr %82, align 8
  %83 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.3125, ptr %81, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %83, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3126, align 8
  %84 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3126, align 8
  %85 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %86 = call ptr @candy_builtin_if_else(ptr %80, ptr %84, ptr %85)
  %87 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %88 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:39", align 8
  %89 = call ptr @"anonymous_$generated__needs"(ptr %86, ptr %87, ptr %88)
  %90 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3088, align 8
  %91 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3116, align 8
  %92 = call ptr @candy_builtin_if_else(ptr %5, ptr %90, ptr %91)
  %93 = load ptr, ptr @num_0, align 8
  %94 = call ptr @candy_builtin_list_get(ptr %92, ptr %93)
  %95 = load ptr, ptr @tag_Match, align 8
  %96 = call ptr @candy_builtin_equals(ptr %94, ptr %95)
  %97 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %98 = getelementptr inbounds { ptr }, ptr %97, i32 0, i32 0
  store ptr %92, ptr %98, align 8
  %99 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched.3129, ptr %97, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %99, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3130, align 8
  %100 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched.3130, align 8
  %101 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %102 = call ptr @candy_builtin_if_else(ptr %96, ptr %100, ptr %101)
  %103 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %104 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:21", align 8
  %105 = call ptr @"anonymous_$generated__needs"(ptr %102, ptr %103, ptr %104)
  %106 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %107 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %108 = call ptr @"anonymous_$generated__needs"(ptr %46, ptr %106, ptr %107)
  %109 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %110 = load ptr, ptr @"Core:fixedDecimal:scale:15", align 8
  %111 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %109, ptr %110)
  %112 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %113 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %114 = call ptr @"anonymous_$generated__needs"(ptr %57, ptr %112, ptr %113)
  %115 = load ptr, ptr @tag_Scale, align 8
  %116 = call ptr @candy_builtin_struct_has_key(ptr %54, ptr %115)
  %117 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %118 = load ptr, ptr @"Core:fixedDecimal:scale:17", align 8
  %119 = call ptr @"anonymous_$generated__needs"(ptr %116, ptr %117, ptr %118)
  %120 = load ptr, ptr @tag_Scale, align 8
  %121 = call ptr @candy_builtin_struct_get(ptr %54, ptr %120)
  %122 = load ptr, ptr @num_0, align 8
  %123 = call ptr @Core_int_max(ptr %122, ptr %121)
  %124 = load ptr, ptr @tag_FixedDecimal.3081, align 8
  %125 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %124, ptr %123)
  %126 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %1, ptr %123)
  %127 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3084, align 8
  %128 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %129 = load ptr, ptr %128, align 8
  %130 = call ptr @Core_controlFlow_recursive_16.3083(ptr %127, ptr %129)
  %131 = call ptr @candy_builtin_type_of(ptr %125)
  %132 = load ptr, ptr @tag_Int, align 8
  %133 = call ptr @candy_builtin_equals(ptr %131, ptr %132)
  %134 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %135 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  %136 = call ptr @"anonymous_$generated__needs"(ptr %133, ptr %134, ptr %135)
  %137 = call ptr @candy_builtin_type_of(ptr %130)
  %138 = load ptr, ptr @tag_Int, align 8
  %139 = call ptr @candy_builtin_equals(ptr %137, ptr %138)
  %140 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %141 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  %142 = call ptr @"anonymous_$generated__needs"(ptr %139, ptr %140, ptr %141)
  %143 = call ptr @candy_builtin_int_multiply(ptr %125, ptr %130)
  %144 = call ptr @Builtins__intDivideTruncating(ptr %143, ptr %126)
  %145 = load ptr, ptr @num_65, align 8
  %146 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %144, ptr %145)
  %147 = call ptr @Core_fixedDecimal_add(ptr %1, ptr %146)
  %148 = load ptr, ptr @tag_FixedDecimal.3081, align 8
  %149 = load ptr, ptr @num_65, align 8
  %150 = call ptr @Core_fixedDecimal_divideTruncatingAtScale(ptr %147, ptr %148, ptr %149)
  %151 = load ptr, ptr @tag_FixedDecimal.3082, align 8
  %152 = call ptr @Core_fixedDecimal_approxEquals(ptr %1, ptr %150, ptr %151)
  %153 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %154 = getelementptr inbounds { ptr }, ptr %153, i32 0, i32 0
  store ptr %1, ptr %154, align 8
  %155 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_68_46, ptr %153, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %155, ptr @fun_Examples_sqrt_sqrt_68_46, align 8
  %156 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %157 = getelementptr inbounds { ptr, ptr }, ptr %156, i32 0, i32 0
  store ptr %150, ptr %157, align 8
  %158 = getelementptr inbounds { ptr, ptr }, ptr %156, i32 0, i32 1
  store ptr %0, ptr %158, align 8
  %159 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_68_47, ptr %156, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %159, ptr @fun_Examples_sqrt_sqrt_68_47, align 8
  %160 = load ptr, ptr @fun_Examples_sqrt_sqrt_68_46, align 8
  %161 = load ptr, ptr @fun_Examples_sqrt_sqrt_68_47, align 8
  %162 = call ptr @Builtins__ifElse(ptr %152, ptr %160, ptr %161)
  ret ptr %162
}

define ptr @Core_fixedDecimal_is_1_equals_then.3087(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.3089, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.3090, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.3113, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.3114, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3090, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3114, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.3089(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.3091, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.3092, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3092, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_iterator_foldLeft_21_5_equals_else, Core_iterator_generateWithState_12_1_3_equals_else, Core_iterator_map_17_3_equals_else, Core_iterator_next_6_equals_else, Core_iterator_reduceLeft_16_equals_else, Core_iterator_skip_26_6_8_3_equals_else, Core_iterator_takeWhile_7_3_equals_else, Core_iterator_where_17_2_3_equals_else, Core_iterator_where_17_2_3_6_5_equals_else, Core_iterator_withIndex_11_5_equals_else, Core_iterator_wrapSafe_14_1_equals_else, Core_iterator_wrapSafe_14_22_8_equals_else, Core_iterator_130_equals_else, Core_iterator_139_equals_else, Core_list_firstWhere_19_equals_else, Core_list_lastWhere_19_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_26_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_fixedDecimal_is_1_equals_then.3091(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.3093, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.3094, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.3111, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else.3112, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.3094, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.3112, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.3093(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.3095, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.3096, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.3097, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.3098, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.3096, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.3098, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.3099, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.3100, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.3109, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.3110, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.3100, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.3110, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.3095(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @730, align 8
  ret ptr @730
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.3097(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @731, align 8
  ret ptr @731
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.3099(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.3101, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.3102, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.3103, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.3104, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.3102, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.3104, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.3105, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.3106, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.3107, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.3108, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.3106, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.3108, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.3101(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @732, align 8
  ret ptr @732
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.3103(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @733, align 8
  ret ptr @733
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.3105(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @734, align 8
  ret ptr @734
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.3107(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.3109(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else.3111(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @735, align 8
  ret ptr @735
}

define ptr @Core_fixedDecimal_is_1_equals_else.3113(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @736, align 8
  ret ptr @736
}

define ptr @Core_fixedDecimal_is_1_equals_else.3115(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @737, align 8
  ret ptr @737
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.3117(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.3119, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.3120, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.3120, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.3119(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.3121(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.3123, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.3124, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.3124, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.3123(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.3125(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.3127, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.3128, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.3128, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.3127(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_matched.3129(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_14.3131, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_14.3132, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_14.3132, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_14.3131(ptr %0) {
Core_fixedDecimal_is_1_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_isScale(ptr %2)
  ret ptr %3
}

define ptr @Examples_sqrt_sqrt_68_46(ptr %0) {
Examples_sqrt_sqrt_68_46:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_sqrt_sqrt_68_47(ptr %0) {
Examples_sqrt_sqrt_68_47:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  ret ptr %7
}

define ptr @Examples_sqrt_main(ptr %0, ptr %1) {
Examples_sqrt_main:
  %2 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3084, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @Core_controlFlow_recursive_16.3083(ptr %2, ptr %4)
  %6 = call ptr @candy_builtin_type_of(ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:22", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_int_multiply(ptr %12, ptr %5)
  %14 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3084, align 8
  %15 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = call ptr @Core_controlFlow_recursive_16.3083(ptr %14, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %17)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23:22", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_2, align 8
  %25 = call ptr @candy_builtin_int_multiply(ptr %24, ptr %17)
  %26 = load ptr, ptr @fun_Core_controlFlow_recursive_16.3084, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = call ptr @Core_controlFlow_recursive_16.3083(ptr %26, ptr %28)
  %30 = call ptr @candy_builtin_type_of(ptr %29)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:53", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @candy_builtin_int_multiply(ptr %13, ptr %29)
  %37 = call ptr @Builtins__intDivideTruncating(ptr %36, ptr %25)
  %38 = load ptr, ptr @num_65, align 8
  %39 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %37, ptr %38)
  %40 = load ptr, ptr @fun_Examples_sqrt_sqrt_68, align 8
  %41 = call ptr @Core_controlFlow_recursive(ptr %39, ptr %40)
  %42 = call ptr @Core_fixedDecimal_toText(ptr %41)
  %43 = call ptr @candy_builtin_type_of(ptr %42)
  %44 = load ptr, ptr @tag_Text, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %47 = getelementptr inbounds { ptr }, ptr %46, i32 0, i32 0
  store ptr %42, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Examples_sqrt_main_44, ptr %46, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Examples_sqrt_main_44, align 8
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %50 = getelementptr inbounds { ptr }, ptr %49, i32 0, i32 0
  store ptr %42, ptr %50, align 8
  %51 = call ptr @make_candy_function(ptr @Examples_sqrt_main_45, ptr %49, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %51, ptr @fun_Examples_sqrt_main_45, align 8
  %52 = load ptr, ptr @fun_Examples_sqrt_main_44, align 8
  %53 = load ptr, ptr @fun_Examples_sqrt_main_45, align 8
  %54 = call ptr @candy_builtin_if_else(ptr %45, ptr %52, ptr %53)
  %55 = load ptr, ptr @"text_The root of 2 is ", align 8
  %56 = call ptr @candy_builtin_text_concatenate(ptr %55, ptr %54)
  %57 = call ptr @candy_builtin_print(ptr %56)
  ret ptr %57
}

define ptr @Examples_sqrt_main_44(ptr %0) {
Examples_sqrt_main_44:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_sqrt_main_45(ptr %0) {
Examples_sqrt_main_45:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}
