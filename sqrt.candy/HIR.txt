# HIR for module Examples:sqrt
$use = { (non-fuzzable) $use:relativePath ->
  $use:importedModule = relative to module Examples:sqrt, use $use:relativePath
}
$0 = $use
$1 = builtinTextConcatenate
$2 = builtinTypeOf
$3 = Text
$4 = builtinEquals
$5 = builtinIfElse
$6 = builtinToDebugText
$7 = "Builtins"
$8 = call $0 with $7
$9 = destructure $8 into p$0
$builtins = p$0
$10 = Nothing
$11 = $use
$12 = builtinTextConcatenate
$13 = builtinTypeOf
$14 = Text
$15 = builtinEquals
$16 = builtinIfElse
$17 = builtinToDebugText
$18 = "Core"
$19 = call $11 with $18
$20 = destructure $19 into [Equals: p$0, FixedDecimal: p$1, IfElse: p$2, Int: p$3, Recursive: p$4]
$equals = p$0
$fixedDecimal = p$1
$ifElse = p$2
$int = p$3
$recursive = p$4
$21 = Nothing
$sqrt = { (fuzzable) $sqrt:x $sqrt:precision ->
  $sqrt:0 = "Builtins"
  $sqrt:1 = call $use with $sqrt:0
  $sqrt:2 = builtinStructGet
  $sqrt:3 = StructGet
  $sqrt:4 = call $sqrt:2 with $sqrt:1 $sqrt:3
  $sqrt:5 = $fixedDecimal
  $sqrt:6 = Is
  $sqrt:7 = call $sqrt:4 with $sqrt:5 $sqrt:6
  $sqrt:8 = $sqrt:x
  $sqrt:9 = call $sqrt:7 with $sqrt:8
  $sqrt:10 = "`fixedDecimal.is x` was not satisfied"
  $sqrt:11 = needs $sqrt:9 with reason $sqrt:10
  $sqrt:12 = "Builtins"
  $sqrt:13 = call $use with $sqrt:12
  $sqrt:14 = builtinStructGet
  $sqrt:15 = StructGet
  $sqrt:16 = call $sqrt:14 with $sqrt:13 $sqrt:15
  $sqrt:17 = $fixedDecimal
  $sqrt:18 = IsNonNegative
  $sqrt:19 = call $sqrt:16 with $sqrt:17 $sqrt:18
  $sqrt:20 = $sqrt:x
  $sqrt:21 = call $sqrt:19 with $sqrt:20
  $sqrt:22 = "`fixedDecimal.isNonNegative x` was not satisfied"
  $sqrt:23 = needs $sqrt:21 with reason $sqrt:22
  $sqrt:24 = "Builtins"
  $sqrt:25 = call $use with $sqrt:24
  $sqrt:26 = builtinStructGet
  $sqrt:27 = StructGet
  $sqrt:28 = call $sqrt:26 with $sqrt:25 $sqrt:27
  $sqrt:29 = $int
  $sqrt:30 = Is
  $sqrt:31 = call $sqrt:28 with $sqrt:29 $sqrt:30
  $sqrt:32 = $sqrt:precision
  $sqrt:33 = call $sqrt:31 with $sqrt:32
  $sqrt:34 = "`int.is precision` was not satisfied"
  $sqrt:35 = needs $sqrt:33 with reason $sqrt:34
  $sqrt:36 = "Builtins"
  $sqrt:37 = call $use with $sqrt:36
  $sqrt:38 = builtinStructGet
  $sqrt:39 = StructGet
  $sqrt:40 = call $sqrt:38 with $sqrt:37 $sqrt:39
  $sqrt:41 = $int
  $sqrt:42 = IsNonNegative
  $sqrt:43 = call $sqrt:40 with $sqrt:41 $sqrt:42
  $sqrt:44 = $sqrt:precision
  $sqrt:45 = call $sqrt:43 with $sqrt:44
  $sqrt:46 = "`int.isNonNegative precision` was not satisfied"
  $sqrt:47 = needs $sqrt:45 with reason $sqrt:46
  $sqrt:48 = 10
  $sqrt:49 = "Builtins"
  $sqrt:50 = call $use with $sqrt:49
  $sqrt:51 = builtinStructGet
  $sqrt:52 = StructGet
  $sqrt:53 = call $sqrt:51 with $sqrt:50 $sqrt:52
  $sqrt:54 = $fixedDecimal
  $sqrt:55 = FromIntScaled
  $sqrt:56 = call $sqrt:53 with $sqrt:54 $sqrt:55
  $sqrt:57 = $sqrt:precision
  $sqrt:58 = call $sqrt:56 with $sqrt:48 $sqrt:57
  $sqrt:59 = destructure $sqrt:58 into p$0
  $sqrt:delta = p$0
  $sqrt:60 = Nothing
  $sqrt:61 = $recursive
  $sqrt:62 = $sqrt:x
  $sqrt:63 = "Builtins"
  $sqrt:64 = call $use with $sqrt:63
  $sqrt:65 = builtinStructGet
  $sqrt:66 = StructGet
  $sqrt:67 = call $sqrt:65 with $sqrt:64 $sqrt:66
  $sqrt:68 = $fixedDecimal
  $sqrt:69 = DivideTruncatingAtScale
  $sqrt:70 = call $sqrt:67 with $sqrt:68 $sqrt:69
  $sqrt:71 = 2
  $sqrt:72 = "Builtins"
  $sqrt:73 = call $use with $sqrt:72
  $sqrt:74 = builtinStructGet
  $sqrt:75 = StructGet
  $sqrt:76 = call $sqrt:74 with $sqrt:73 $sqrt:75
  $sqrt:77 = $fixedDecimal
  $sqrt:78 = FromInt
  $sqrt:79 = call $sqrt:76 with $sqrt:77 $sqrt:78
  $sqrt:80 = call $sqrt:79 with $sqrt:71
  $sqrt:81 = $sqrt:precision
  $sqrt:82 = call $sqrt:70 with $sqrt:62 $sqrt:80 $sqrt:81
  $sqrt:83 = { (non-fuzzable) $sqrt:83:recurse $sqrt:83:guess ->
    $sqrt:83:0 = "Builtins"
    $sqrt:83:1 = call $use with $sqrt:83:0
    $sqrt:83:2 = builtinStructGet
    $sqrt:83:3 = StructGet
    $sqrt:83:4 = call $sqrt:83:2 with $sqrt:83:1 $sqrt:83:3
    $sqrt:83:5 = $fixedDecimal
    $sqrt:83:6 = DivideTruncatingAtScale
    $sqrt:83:7 = call $sqrt:83:4 with $sqrt:83:5 $sqrt:83:6
    $sqrt:83:8 = $sqrt:83:guess
    $sqrt:83:9 = "Builtins"
    $sqrt:83:10 = call $use with $sqrt:83:9
    $sqrt:83:11 = builtinStructGet
    $sqrt:83:12 = StructGet
    $sqrt:83:13 = call $sqrt:83:11 with $sqrt:83:10 $sqrt:83:12
    $sqrt:83:14 = $fixedDecimal
    $sqrt:83:15 = Add
    $sqrt:83:16 = call $sqrt:83:13 with $sqrt:83:14 $sqrt:83:15
    $sqrt:83:17 = $sqrt:x
    $sqrt:83:18 = "Builtins"
    $sqrt:83:19 = call $use with $sqrt:83:18
    $sqrt:83:20 = builtinStructGet
    $sqrt:83:21 = StructGet
    $sqrt:83:22 = call $sqrt:83:20 with $sqrt:83:19 $sqrt:83:21
    $sqrt:83:23 = $fixedDecimal
    $sqrt:83:24 = DivideTruncatingAtScale
    $sqrt:83:25 = call $sqrt:83:22 with $sqrt:83:23 $sqrt:83:24
    $sqrt:83:26 = $sqrt:83:guess
    $sqrt:83:27 = $sqrt:precision
    $sqrt:83:28 = call $sqrt:83:25 with $sqrt:83:17 $sqrt:83:26 $sqrt:83:27
    $sqrt:83:29 = call $sqrt:83:16 with $sqrt:83:8 $sqrt:83:28
    $sqrt:83:30 = 2
    $sqrt:83:31 = "Builtins"
    $sqrt:83:32 = call $use with $sqrt:83:31
    $sqrt:83:33 = builtinStructGet
    $sqrt:83:34 = StructGet
    $sqrt:83:35 = call $sqrt:83:33 with $sqrt:83:32 $sqrt:83:34
    $sqrt:83:36 = $fixedDecimal
    $sqrt:83:37 = FromInt
    $sqrt:83:38 = call $sqrt:83:35 with $sqrt:83:36 $sqrt:83:37
    $sqrt:83:39 = call $sqrt:83:38 with $sqrt:83:30
    $sqrt:83:40 = $sqrt:precision
    $sqrt:83:41 = call $sqrt:83:7 with $sqrt:83:29 $sqrt:83:39 $sqrt:83:40
    $sqrt:83:42 = destructure $sqrt:83:41 into p$0
    $sqrt:83:refinedGuess = p$0
    $sqrt:83:43 = Nothing
    $sqrt:83:44 = $ifElse
    $sqrt:83:45 = "Builtins"
    $sqrt:83:46 = call $use with $sqrt:83:45
    $sqrt:83:47 = builtinStructGet
    $sqrt:83:48 = StructGet
    $sqrt:83:49 = call $sqrt:83:47 with $sqrt:83:46 $sqrt:83:48
    $sqrt:83:50 = $fixedDecimal
    $sqrt:83:51 = ApproxEquals
    $sqrt:83:52 = call $sqrt:83:49 with $sqrt:83:50 $sqrt:83:51
    $sqrt:83:53 = $sqrt:83:guess
    $sqrt:83:54 = $sqrt:83:refinedGuess
    $sqrt:83:55 = $sqrt:delta
    $sqrt:83:56 = call $sqrt:83:52 with $sqrt:83:53 $sqrt:83:54 $sqrt:83:55
    $sqrt:83:57 = { (non-fuzzable) ->
      $sqrt:83:57:0 = $sqrt:83:guess
    }
    $sqrt:83:58 = { (non-fuzzable) ->
      $sqrt:83:58:0 = $sqrt:83:recurse
      $sqrt:83:58:1 = $sqrt:83:refinedGuess
      $sqrt:83:58:2 = call $sqrt:83:58:0 with $sqrt:83:58:1
    }
    $sqrt:83:59 = call $sqrt:83:44 with $sqrt:83:56 $sqrt:83:57 $sqrt:83:58
  }
  $sqrt:84 = call $sqrt:61 with $sqrt:82 $sqrt:83
}
$sqrt#1 = $sqrt
$main = { (fuzzable) $main:_ ->
  $main:0 = 2
  $main:1 = destructure $main:0 into p$0
  $main:input = p$0
  $main:2 = Nothing
  $main:3 = $main:input
  $main:4 = "Builtins"
  $main:5 = call $use with $main:4
  $main:6 = builtinStructGet
  $main:7 = StructGet
  $main:8 = call $main:6 with $main:5 $main:7
  $main:9 = $fixedDecimal
  $main:10 = FromInt
  $main:11 = call $main:8 with $main:9 $main:10
  $main:12 = call $main:11 with $main:3
  $main:13 = $sqrt#1
  $main:14 = 65
  $main:15 = call $main:13 with $main:12 $main:14
  $main:16 = destructure $main:15 into p$0
  $main:result = p$0
  $main:17 = Nothing
  $main:18 = "Builtins"
  $main:19 = call $use with $main:18
  $main:20 = builtinStructGet
  $main:21 = StructGet
  $main:22 = call $main:20 with $main:19 $main:21
  $main:23 = $builtins
  $main:24 = Print
  $main:25 = call $main:22 with $main:23 $main:24
  $main:26 = builtinTextConcatenate
  $main:27 = builtinTypeOf
  $main:28 = Text
  $main:29 = builtinEquals
  $main:30 = builtinIfElse
  $main:31 = builtinToDebugText
  $main:32 = "The root of "
  $main:33 = $main:input
  $main:34 = call $main:27 with $main:33
  $main:35 = call $main:29 with $main:34 $main:28
  $main:36 = { (non-fuzzable) ->
    $main:36:0 = $main:33
  }
  $main:37 = { (non-fuzzable) ->
    $main:37:0 = call $main:31 with $main:33
  }
  $main:38 = call $main:30 with $main:35 $main:36 $main:37
  $main:39 = " is "
  $main:40 = $main:result
  $main:41 = "Builtins"
  $main:42 = call $use with $main:41
  $main:43 = builtinStructGet
  $main:44 = StructGet
  $main:45 = call $main:43 with $main:42 $main:44
  $main:46 = $fixedDecimal
  $main:47 = ToText
  $main:48 = call $main:45 with $main:46 $main:47
  $main:49 = call $main:48 with $main:40
  $main:50 = call $main:27 with $main:49
  $main:51 = call $main:29 with $main:50 $main:28
  $main:52 = { (non-fuzzable) ->
    $main:52:0 = $main:49
  }
  $main:53 = { (non-fuzzable) ->
    $main:53:0 = call $main:31 with $main:49
  }
  $main:54 = call $main:30 with $main:51 $main:52 $main:53
  $main:55 = call $main:26 with $main:32 $main:38
  $main:56 = call $main:26 with $main:55 $main:39
  $main:57 = call $main:26 with $main:56 $main:54
  $main:58 = call $main:25 with $main:57
}
$main#1 = $main
$22 = Main
$23 = Sqrt
$24 = [$23: $sqrt#1, $22: $main#1]
