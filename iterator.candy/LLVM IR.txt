; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intBitwiseAnd:18" = global ptr null
@"Builtins::intBitwiseAnd:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intMultiply:18" = global ptr null
@"Builtins::intMultiply:5" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::isLessThanOrEqualTo:11" = global ptr null
@"Builtins::isLessThanOrEqualTo:18" = global ptr null
@"Builtins::isLessThanOrEqualTo:19" = global ptr null
@"Builtins::isLessThanOrEqualTo:5" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:24" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listGet:5" = global ptr null
@"Builtins::listInsert:11" = global ptr null
@"Builtins::listInsert:14" = global ptr null
@"Builtins::listInsert:16" = global ptr null
@"Builtins::listInsert:24" = global ptr null
@"Builtins::listInsert:25" = global ptr null
@"Builtins::listInsert:27" = global ptr null
@"Builtins::listInsert:35" = global ptr null
@"Builtins::listInsert:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::textConcatenate:11" = global ptr null
@"Builtins::textConcatenate:18" = global ptr null
@"Builtins::textConcatenate:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:bool:and:13" = global ptr null
@"Core:bool:and:2" = global ptr null
@"Core:bool:and:4" = global ptr null
@"Core:bool:and:7" = global ptr null
@"Core:bool:and:9" = global ptr null
@"Core:bool:is:1" = global ptr null
@"Core:bool:lazyAnd:14" = global ptr null
@"Core:bool:lazyAnd:16" = global ptr null
@"Core:bool:lazyAnd:18" = global ptr null
@"Core:bool:lazyAnd:18:13" = global ptr null
@"Core:bool:lazyAnd:18:21" = global ptr null
@"Core:bool:lazyAnd:18:9" = global ptr null
@"Core:bool:lazyAnd:2" = global ptr null
@"Core:bool:lazyAnd:4" = global ptr null
@"Core:bool:lazyOr:14" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:18" = global ptr null
@"Core:bool:lazyOr:18:10" = global ptr null
@"Core:bool:lazyOr:18:14" = global ptr null
@"Core:bool:lazyOr:18:22" = global ptr null
@"Core:bool:lazyOr:2" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:not:2" = global ptr null
@"Core:bool:not:4" = global ptr null
@"Core:bool:not:6" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:or:2" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:7" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:check:checkEquals:12" = global ptr null
@"Core:check:checkEquals:13" = global ptr null
@"Core:check:checkEquals:15:0" = global ptr null
@"Core:check:checkEquals:16" = global ptr null
@"Core:check:checkEquals:19" = global ptr null
@"Core:check:checkEquals:20" = global ptr null
@"Core:check:checkEquals:22:0" = global ptr null
@"Core:check:checkEquals:23" = global ptr null
@"Core:check:checkEquals:25" = global ptr null
@"Core:check:checkEquals:26" = global ptr null
@"Core:check:checkEquals:27" = global ptr null
@"Core:check:checkEquals:28" = global ptr null
@"Core:check:checkEquals:29" = global ptr null
@"Core:controlFlow:if:11" = global ptr null
@"Core:controlFlow:if:21" = global ptr null
@"Core:controlFlow:if:23" = global ptr null
@"Core:controlFlow:if:28" = global ptr null
@"Core:controlFlow:if:9" = global ptr null
@"Core:controlFlow:recursive:17" = global ptr null
@"Core:controlFlow:recursive:18:0:3" = global ptr null
@"Core:controlFlow:recursive:18:5" = global ptr null
@"Core:controlFlow:recursive:23" = global ptr null
@"Core:controlFlow:recursive:9" = global ptr null
@"Core:fixedDecimal:fromInt:15" = global ptr null
@"Core:fixedDecimal:fromIntScaled:11" = global ptr null
@"Core:fixedDecimal:fromIntScaled:16" = global ptr null
@"Core:fixedDecimal:isScale:18:9" = global ptr null
@"Core:fixedDecimal:isScale:19" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:is2:11:3" = global ptr null
@"Core:function:is2:13" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:run:2" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:int:compareTo:20" = global ptr null
@"Core:int:compareTo:4" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:isGreaterThan:13" = global ptr null
@"Core:int:isGreaterThan:4" = global ptr null
@"Core:int:isGreaterThan:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:4" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:int:isNegative:4" = global ptr null
@"Core:int:isNegative:8" = global ptr null
@"Core:int:isNonNegative:16" = global ptr null
@"Core:int:isNonNegative:4" = global ptr null
@"Core:int:isNonNegative:7" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_bitwise_and = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_multiply = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_insert = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Equal = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_Greater = global ptr null
@tag_Int = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_Match = global ptr null
@tag_MinorUnits = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Scale = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_2 = global ptr null
@num_3 = global ptr null
@num_4 = global ptr null
@num_5 = global ptr null
@num_10 = global ptr null
@"text_ to be " = global ptr null
@text_. = global ptr null
@"text_A check failed: Expected " = global ptr null
@"text_Expected Equal, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected Greater, got " = global ptr null
@"text_Expected Less, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected a Struct, got `" = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_`." = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`a | typeIs Text` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Text` was not satisfied" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`factorA | typeIs Int` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"text_`function.is0 then` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`int.is minorUnits` was not satisfied" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"text_`is valueA` was not satisfied" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"text_`is value` was not satisfied" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"text_`isScale scale` was not satisfied" = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isValueTrue_then" = global ptr null
@"fun_anonymous_$generated__needs_isValueTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then" = global ptr null
@"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then" = global ptr null
@"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else" = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__isNonNegative = global ptr null
@fun_Builtins__isNonNegative_13_equals_then = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.2 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.4 = global ptr null
@2 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.6 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.8 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.10 = global ptr null
@3 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.12 = global ptr null
@4 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.14 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.16 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.18 = global ptr null
@5 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.20 = global ptr null
@6 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.22 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else = global ptr null
@7 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.24 = global ptr null
@8 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.26 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.28 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.30 = global ptr null
@9 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.32 = global ptr null
@10 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.34 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.36 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.38 = global ptr null
@11 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.40 = global ptr null
@12 = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.42 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@13 = global ptr null
@fun_Builtins__ifElse_1_equals_else.44 = global ptr null
@14 = global ptr null
@fun_Builtins__ifElse_1_equals_else.46 = global ptr null
@15 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.48 = global ptr null
@fun_Builtins__ifElse_1_equals_then.50 = global ptr null
@fun_Builtins__ifElse_1_equals_else.52 = global ptr null
@16 = global ptr null
@fun_Builtins__ifElse_1_equals_else.54 = global ptr null
@17 = global ptr null
@fun_Builtins__ifElse_1_equals_else.56 = global ptr null
@18 = global ptr null
@fun_Builtins__listGet = global ptr null
@fun_Builtins__listInsert = global ptr null
@"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText" = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_then = global ptr null
@fun_Core_bool_is_1_equals_then.58 = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@19 = global ptr null
@fun_Core_bool_is_1_equals_else.60 = global ptr null
@20 = global ptr null
@fun_Core_bool_is_1_equals_else.62 = global ptr null
@21 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_then.64 = global ptr null
@fun_Core_bool_is_1_equals_then.66 = global ptr null
@fun_Core_bool_is_1_equals_else.68 = global ptr null
@22 = global ptr null
@fun_Core_bool_is_1_equals_else.70 = global ptr null
@23 = global ptr null
@fun_Core_bool_is_1_equals_else.72 = global ptr null
@24 = global ptr null
@fun_Core_bool_not_6_case-1_didNotMatch = global ptr null
@fun_Core_bool_not = global ptr null
@fun_Core_bool_not_6_equals_then = global ptr null
@fun_Core_bool_not_6_equals_then.74 = global ptr null
@fun_Core_bool_not_6_equals_else = global ptr null
@25 = global ptr null
@fun_Core_bool_not_6_equals_else.76 = global ptr null
@26 = global ptr null
@fun_Core_bool_not_6_equals_else.78 = global ptr null
@27 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch = global ptr null
@fun_Core_bool_not_6_equals_then.80 = global ptr null
@fun_Core_bool_not_6_equals_then.82 = global ptr null
@fun_Core_bool_not_6_equals_else.84 = global ptr null
@28 = global ptr null
@fun_Core_bool_not_6_equals_else.86 = global ptr null
@29 = global ptr null
@fun_Core_bool_not_6_equals_else.88 = global ptr null
@30 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.90 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else = global ptr null
@31 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.92 = global ptr null
@32 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.94 = global ptr null
@33 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.96 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.98 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.100 = global ptr null
@34 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.102 = global ptr null
@35 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.104 = global ptr null
@36 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_patternMatch = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_lazyOr_18_equals_then = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.106 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else = global ptr null
@37 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.108 = global ptr null
@38 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.110 = global ptr null
@39 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.112 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.114 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.116 = global ptr null
@40 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.118 = global ptr null
@41 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.120 = global ptr null
@42 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_patternMatch = global ptr null
@fun_Core_check_checkEquals = global ptr null
@fun_Core_check_checkEquals_14 = global ptr null
@fun_Core_check_checkEquals_15 = global ptr null
@fun_Core_check_checkEquals_21 = global ptr null
@fun_Core_check_checkEquals_22 = global ptr null
@fun_Core_function_is2 = global ptr null
@fun_Core_function_is2_11 = global ptr null
@fun_Core_int_compareTo = global ptr null
@fun_Core_int_isLessThan = global ptr null
@fun_Core_int_isGreaterThan = global ptr null
@fun_Core_int_isNonNegative = global ptr null
@43 = global ptr null
@fun_Core_fixedDecimal_fromIntScaled = global ptr null
@fun_Core_fixedDecimal_isScale_18 = global ptr null
@tag_FixedDecimal = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:13" = global ptr null
@fun_Core_function_is1 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@"Core:int:fitsInRustU32:15" = global ptr null
@"Core:int:fitsInRustU32:4" = global ptr null
@"Core:int:fitsInRustU32:7" = global ptr null
@"Core:int:fitsInRustU32:9" = global ptr null
@"Core:int:isOdd:4" = global ptr null
@"Core:int:isOdd:8" = global ptr null
@"Core:int:isPositive:4" = global ptr null
@"Core:int:isPositive:8" = global ptr null
@num_4294967295 = global ptr null
@"text_`isNonNegative value` was not satisfied" = global ptr null
@fun_Core_int_isOdd = global ptr null
@"Core:iterator:109" = global ptr null
@"Core:iterator:all:11" = global ptr null
@"Core:iterator:all:15" = global ptr null
@"Core:iterator:all:18:13" = global ptr null
@"Core:iterator:all:18:15" = global ptr null
@"Core:iterator:all:18:2" = global ptr null
@"Core:iterator:all:18:26" = global ptr null
@"Core:iterator:all:19" = global ptr null
@"Core:iterator:all:9" = global ptr null
@"Core:iterator:any:11" = global ptr null
@"Core:iterator:any:15" = global ptr null
@"Core:iterator:any:18:13" = global ptr null
@"Core:iterator:any:18:15" = global ptr null
@"Core:iterator:any:18:2" = global ptr null
@"Core:iterator:any:18:26" = global ptr null
@"Core:iterator:any:19" = global ptr null
@"Core:iterator:any:9" = global ptr null
@"Core:iterator:chunked:11" = global ptr null
@"Core:iterator:chunked:21" = global ptr null
@"Core:iterator:chunked:23" = global ptr null
@"Core:iterator:chunked:27" = global ptr null
@"Core:iterator:chunked:32" = global ptr null
@"Core:iterator:ensure:11" = global ptr null
@"Core:iterator:ensure:15" = global ptr null
@"Core:iterator:ensure:19:2" = global ptr null
@"Core:iterator:ensure:20" = global ptr null
@"Core:iterator:ensure:9" = global ptr null
@"Core:iterator:foldLeft:14" = global ptr null
@"Core:iterator:foldLeft:16" = global ptr null
@"Core:iterator:foldLeft:23:1" = global ptr null
@"Core:iterator:foldLeft:23:4" = global ptr null
@"Core:iterator:foldLeft:23:5" = global ptr null
@"Core:iterator:foldLeft:23:5:10" = global ptr null
@"Core:iterator:foldLeft:23:5:8" = global ptr null
@"Core:iterator:foldLeft:23:5:item" = global ptr null
@"Core:iterator:foldLeft:23:5:rest" = global ptr null
@"Core:iterator:foldLeft:23:iterator" = global ptr null
@"Core:iterator:foldLeft:23:value" = global ptr null
@"Core:iterator:foldLeft:24" = global ptr null
@"Core:iterator:foldLeft:3" = global ptr null
@"Core:iterator:forEach:11" = global ptr null
@"Core:iterator:forEach:15" = global ptr null
@"Core:iterator:forEach:18:2" = global ptr null
@"Core:iterator:forEach:19" = global ptr null
@"Core:iterator:forEach:9" = global ptr null
@"Core:iterator:fromList:11" = global ptr null
@"Core:iterator:fromList:22" = global ptr null
@"Core:iterator:fromList:23:10" = global ptr null
@"Core:iterator:fromList:24" = global ptr null
@"Core:iterator:generate:11" = global ptr null
@"Core:iterator:generate:21" = global ptr null
@"Core:iterator:generate:23" = global ptr null
@"Core:iterator:generate:33" = global ptr null
@"Core:iterator:generate:35" = global ptr null
@"Core:iterator:generate:45" = global ptr null
@"Core:iterator:generate:47" = global ptr null
@"Core:iterator:generate:50:6:16" = global ptr null
@"Core:iterator:generate:50:6:4" = global ptr null
@"Core:iterator:generate:50:7" = global ptr null
@"Core:iterator:generate:51" = global ptr null
@"Core:iterator:generateWithState:11" = global ptr null
@"Core:iterator:generateWithState:14:1:2" = global ptr null
@"Core:iterator:generateWithState:14:1:3" = global ptr null
@"Core:iterator:generateWithState:14:1:3:19" = global ptr null
@"Core:iterator:generateWithState:14:1:3:20" = global ptr null
@"Core:iterator:generateWithState:14:1:3:22:0" = global ptr null
@"Core:iterator:generateWithState:14:1:3:23" = global ptr null
@"Core:iterator:generateWithState:14:1:3:25" = global ptr null
@"Core:iterator:generateWithState:14:1:3:26" = global ptr null
@"Core:iterator:generateWithState:14:1:3:27" = global ptr null
@"Core:iterator:generateWithState:14:1:3:6" = global ptr null
@"Core:iterator:generateWithState:14:1:3:item" = global ptr null
@"Core:iterator:generateWithState:14:1:3:state" = global ptr null
@"Core:iterator:generateWithState:15" = global ptr null
@"Core:iterator:generateWithState:9" = global ptr null
@"Core:iterator:isEmpty:3" = global ptr null
@"Core:iterator:isEmpty:7" = global ptr null
@"Core:iterator:joinToText:12:11" = global ptr null
@"Core:iterator:joinToText:12:22" = global ptr null
@"Core:iterator:joinToText:13" = global ptr null
@"Core:iterator:joinToText:3" = global ptr null
@"Core:iterator:length:3" = global ptr null
@"Core:iterator:length:6" = global ptr null
@"Core:iterator:length:8" = global ptr null
@"Core:iterator:map:14" = global ptr null
@"Core:iterator:map:16" = global ptr null
@"Core:iterator:map:19:2" = global ptr null
@"Core:iterator:map:19:3" = global ptr null
@"Core:iterator:map:19:3:5" = global ptr null
@"Core:iterator:map:19:3:item" = global ptr null
@"Core:iterator:map:19:3:rest" = global ptr null
@"Core:iterator:map:20" = global ptr null
@"Core:iterator:map:3" = global ptr null
@"Core:iterator:next:17" = global ptr null
@"Core:iterator:next:3" = global ptr null
@"Core:iterator:next:6" = global ptr null
@"Core:iterator:next:nextFunction" = global ptr null
@"Core:iterator:reduceLeft:11" = global ptr null
@"Core:iterator:reduceLeft:15" = global ptr null
@"Core:iterator:reduceLeft:17" = global ptr null
@"Core:iterator:reduceLeft:18" = global ptr null
@"Core:iterator:reduceLeft:18:14" = global ptr null
@"Core:iterator:reduceLeft:18:item" = global ptr null
@"Core:iterator:reduceLeft:18:rest" = global ptr null
@"Core:iterator:reduceLeft:9" = global ptr null
@"Core:iterator:skip:16" = global ptr null
@"Core:iterator:skip:26" = global ptr null
@"Core:iterator:skip:28" = global ptr null
@"Core:iterator:skip:3" = global ptr null
@"Core:iterator:skip:30:6:1" = global ptr null
@"Core:iterator:skip:30:6:7:2" = global ptr null
@"Core:iterator:skip:30:6:8:2" = global ptr null
@"Core:iterator:skip:30:6:8:3" = global ptr null
@"Core:iterator:skip:30:6:8:3:15" = global ptr null
@"Core:iterator:skip:30:6:8:3:17" = global ptr null
@"Core:iterator:skip:30:6:8:3:rest" = global ptr null
@"Core:iterator:skip:30:6:9" = global ptr null
@"Core:iterator:skip:30:6:iterator" = global ptr null
@"Core:iterator:skip:30:6:n" = global ptr null
@"Core:iterator:skip:30:7" = global ptr null
@"Core:iterator:sum:19" = global ptr null
@"Core:iterator:sum:3" = global ptr null
@"Core:iterator:sum:5:17" = global ptr null
@"Core:iterator:sum:6" = global ptr null
@"Core:iterator:sum:8:10" = global ptr null
@"Core:iterator:sum:9" = global ptr null
@"Core:iterator:take:11" = global ptr null
@"Core:iterator:take:21" = global ptr null
@"Core:iterator:take:23" = global ptr null
@"Core:iterator:take:27" = global ptr null
@"Core:iterator:take:29" = global ptr null
@"Core:iterator:take:31:1" = global ptr null
@"Core:iterator:take:31:12" = global ptr null
@"Core:iterator:take:31:index" = global ptr null
@"Core:iterator:take:31:item" = global ptr null
@"Core:iterator:take:32" = global ptr null
@"Core:iterator:take:34:7" = global ptr null
@"Core:iterator:take:35" = global ptr null
@"Core:iterator:takeWhile:3" = global ptr null
@"Core:iterator:takeWhile:7:2" = global ptr null
@"Core:iterator:takeWhile:7:3" = global ptr null
@"Core:iterator:takeWhile:7:3:4" = global ptr null
@"Core:iterator:takeWhile:7:3:7" = global ptr null
@"Core:iterator:takeWhile:7:3:item" = global ptr null
@"Core:iterator:takeWhile:7:3:rest" = global ptr null
@"Core:iterator:takeWhile:8" = global ptr null
@"Core:iterator:toList:3" = global ptr null
@"Core:iterator:toList:6:10" = global ptr null
@"Core:iterator:toList:7" = global ptr null
@"Core:iterator:where:14" = global ptr null
@"Core:iterator:where:16" = global ptr null
@"Core:iterator:where:19:2:2" = global ptr null
@"Core:iterator:where:19:2:3" = global ptr null
@"Core:iterator:where:19:2:3:4" = global ptr null
@"Core:iterator:where:19:2:3:6:2" = global ptr null
@"Core:iterator:where:19:2:3:6:4" = global ptr null
@"Core:iterator:where:19:2:3:6:5" = global ptr null
@"Core:iterator:where:19:2:3:6:5:item" = global ptr null
@"Core:iterator:where:19:2:3:6:5:rest" = global ptr null
@"Core:iterator:where:19:2:3:7" = global ptr null
@"Core:iterator:where:19:2:3:item" = global ptr null
@"Core:iterator:where:19:2:3:rest" = global ptr null
@"Core:iterator:where:19:3" = global ptr null
@"Core:iterator:where:20" = global ptr null
@"Core:iterator:where:3" = global ptr null
@"Core:iterator:windowed:16" = global ptr null
@"Core:iterator:windowed:26" = global ptr null
@"Core:iterator:windowed:28" = global ptr null
@"Core:iterator:windowed:3" = global ptr null
@"Core:iterator:windowed:40" = global ptr null
@"Core:iterator:windowed:50" = global ptr null
@"Core:iterator:windowed:52" = global ptr null
@"Core:iterator:windowed:62" = global ptr null
@"Core:iterator:windowed:64" = global ptr null
@"Core:iterator:windowed:67:16" = global ptr null
@"Core:iterator:windowed:67:22" = global ptr null
@"Core:iterator:windowed:67:26:7" = global ptr null
@"Core:iterator:windowed:67:28" = global ptr null
@"Core:iterator:windowed:67:3" = global ptr null
@"Core:iterator:windowed:67:5" = global ptr null
@"Core:iterator:windowed:68" = global ptr null
@"Core:iterator:withIndex:11:1" = global ptr null
@"Core:iterator:withIndex:11:4" = global ptr null
@"Core:iterator:withIndex:11:5" = global ptr null
@"Core:iterator:withIndex:11:5:22" = global ptr null
@"Core:iterator:withIndex:11:5:item" = global ptr null
@"Core:iterator:withIndex:11:5:rest" = global ptr null
@"Core:iterator:withIndex:11:index" = global ptr null
@"Core:iterator:withIndex:11:iterator" = global ptr null
@"Core:iterator:withIndex:12" = global ptr null
@"Core:iterator:withIndex:3" = global ptr null
@"Core:iterator:wrapSafe:11" = global ptr null
@"Core:iterator:wrapSafe:12:9" = global ptr null
@"Core:iterator:wrapSafe:16:1" = global ptr null
@"Core:iterator:wrapSafe:16:13" = global ptr null
@"Core:iterator:wrapSafe:16:1:10" = global ptr null
@"Core:iterator:wrapSafe:16:1:function" = global ptr null
@"Core:iterator:wrapSafe:16:22" = global ptr null
@"Core:iterator:wrapSafe:16:24" = global ptr null
@"Core:iterator:wrapSafe:16:26:10" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:19" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:7" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:item" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:rest" = global ptr null
@"Core:iterator:wrapSafe:16:26:9" = global ptr null
@"Core:iterator:wrapSafe:17" = global ptr null
@"Core:iterator:wrapSafe:9" = global ptr null
@"Core:list:append:11" = global ptr null
@"Core:list:append:4" = global ptr null
@"Core:list:append:9" = global ptr null
@"Core:result:is:1" = global ptr null
@"Core:result:is:1:_" = global ptr null
@"Core:result:mapOrElse:14" = global ptr null
@"Core:result:mapOrElse:16" = global ptr null
@"Core:result:mapOrElse:2" = global ptr null
@"Core:result:mapOrElse:26" = global ptr null
@"Core:result:mapOrElse:28" = global ptr null
@"Core:result:mapOrElse:30" = global ptr null
@"Core:result:mapOrElse:30:2" = global ptr null
@"Core:result:mapOrElse:30:5" = global ptr null
@"Core:result:mapOrElse:30:value" = global ptr null
@"Core:result:mapOrElse:30:value#1" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:result:unwrapOr:2" = global ptr null
@"Core:result:unwrapOr:4" = global ptr null
@"Core:result:unwrapOr:8" = global ptr null
@"Core:result:unwrapOrElse:14" = global ptr null
@"Core:result:unwrapOrElse:16" = global ptr null
@"Core:result:unwrapOrElse:2" = global ptr null
@"Core:result:unwrapOrElse:20:9" = global ptr null
@"Core:result:unwrapOrElse:21" = global ptr null
@"Core:result:unwrapOrElse:4" = global ptr null
@tag_Empty = global ptr null
@tag_Error = global ptr null
@tag_Index = global ptr null
@tag_Item = global ptr null
@tag_Iterator = global ptr null
@tag_More = global ptr null
@tag_N = global ptr null
@tag_Ok = global ptr null
@tag_Rest = global ptr null
@tag_State = global ptr null
@tag_Value = global ptr null
@text_ = global ptr null
@"text_Can't `reduceLeft` an empty iterator" = global ptr null
@"text_Expected Empty, got " = global ptr null
@"text_Expected Error, got " = global ptr null
@"text_Expected Iterator, got " = global ptr null
@"text_Expected More, got " = global ptr null
@"text_Expected Ok, got " = global ptr null
@"text_Iterator items need to be ints." = global ptr null
@"text_Struct doesn't contain key `Index`: `" = global ptr null
@"text_Struct doesn't contain key `Item`: `" = global ptr null
@"text_Struct doesn't contain key `Iterator`: `" = global ptr null
@"text_Struct doesn't contain key `N`: `" = global ptr null
@"text_Struct doesn't contain key `Rest`: `" = global ptr null
@"text_Struct doesn't contain key `State`: `" = global ptr null
@"text_Struct doesn't contain key `Value`: `" = global ptr null
@"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `" = global ptr null
@"text_The guard needs to panic." = global ptr null
@"text_`" = global ptr null
@"text_`all` needs an iterator." = global ptr null
@"text_`any` needs an iterator." = global ptr null
@"text_`bool.is allowPartialWindows` was not satisfied" = global ptr null
@"text_`bool.is itemResult` was not satisfied" = global ptr null
@"text_`chunked` needs an iterator." = global ptr null
@"text_`ensure` needs an iterator." = global ptr null
@"text_`foldLeft` needs an iterator." = global ptr null
@"text_`forEach` needs an iterator." = global ptr null
@"text_`function.is0 defaultGetter` was not satisfied" = global ptr null
@"text_`function.is0 notIteratorGuard` was not satisfied" = global ptr null
@"text_`function.is1 action` was not satisfied" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"text_`function.is1 guard` was not satisfied" = global ptr null
@"text_`function.is1 mapper` was not satisfied" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"text_`function.is1 tester` was not satisfied" = global ptr null
@"text_`function.is1 valueGetter` was not satisfied" = global ptr null
@"text_`function.is2 combine` was not satisfied" = global ptr null
@"text_`int.fitsInRustU32 length` was not satisfied" = global ptr null
@"text_`int.is length` was not satisfied" = global ptr null
@"text_`int.is n` was not satisfied" = global ptr null
@"text_`int.is size` was not satisfied" = global ptr null
@"text_`int.is step` was not satisfied" = global ptr null
@"text_`int.isNonNegative length` was not satisfied" = global ptr null
@"text_`int.isNonNegative n` was not satisfied" = global ptr null
@"text_`int.isPositive size` was not satisfied" = global ptr null
@"text_`int.isPositive step` was not satisfied" = global ptr null
@"text_`is list` was not satisfied" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"text_`isEmpty` needs an iterator." = global ptr null
@"text_`joinToText` needs an iterator." = global ptr null
@"text_`length` needs an iterator." = global ptr null
@"text_`list.is l` was not satisfied" = global ptr null
@"text_`map` needs an iterator." = global ptr null
@"text_`next` needs an iterator." = global ptr null
@"text_`reduceLeft` needs an iterator." = global ptr null
@"text_`skip` needs an iterator." = global ptr null
@"text_`sum` needs an iterator." = global ptr null
@"text_`takeWhile` needs an iterator." = global ptr null
@"text_`take` needs an iterator." = global ptr null
@"text_`text.is item` was not satisfied" = global ptr null
@"text_`toList` needs an iterator." = global ptr null
@"text_`where` needs an iterator." = global ptr null
@"text_`windowed` needs an iterator." = global ptr null
@"text_`withIndex` needs an iterator." = global ptr null
@fun_Core_result_is = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.122 = global ptr null
@fun_Core_result_is_1_equals_then.124 = global ptr null
@44 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@fun_Core_result_is_1_equals_else.126 = global ptr null
@45 = global ptr null
@fun_Core_result_is_1_equals_else.128 = global ptr null
@46 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.130 = global ptr null
@fun_Core_result_is_1_equals_then.132 = global ptr null
@fun_Core_result_is_1_equals_then.134 = global ptr null
@47 = global ptr null
@fun_Core_result_is_1_equals_else.136 = global ptr null
@fun_Core_result_is_1_equals_else.138 = global ptr null
@48 = global ptr null
@fun_Core_result_is_1_equals_else.140 = global ptr null
@49 = global ptr null
@fun_Core_result_is_1_case-0_patternMatch = global ptr null
@fun_Core_result_mapOrElse_30_case-1_didNotMatch = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_mapOrElse_30_equals_then = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.142 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.144 = global ptr null
@50 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.146 = global ptr null
@51 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.148 = global ptr null
@52 = global ptr null
@fun_Core_result_mapOrElse_30_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.150 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.152 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.154 = global ptr null
@53 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.156 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.158 = global ptr null
@54 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.160 = global ptr null
@55 = global ptr null
@fun_Core_result_mapOrElse_30_case-1_patternMatch = global ptr null
@fun_Core_result_mapOrElse_30_case-0_patternMatch = global ptr null
@"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19" = global ptr null
@fun_Core_result_unwrapOr = global ptr null
@fun_Core_result_unwrapOr_7 = global ptr null
@fun_Core_result_unwrapOrElse_20 = global ptr null
@fun_Core_list_append = global ptr null
@"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch" = global ptr null
@fun_Core_iterator_wrapSafe = global ptr null
@fun_Core_iterator_wrapSafe_12 = global ptr null
@fun_Core_iterator_wrapSafe_16 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then.162 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then.164 = global ptr null
@56 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else.166 = global ptr null
@57 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else.168 = global ptr null
@58 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_16_1_case-0_patternMatch = global ptr null
@fun_Core_iterator_wrapSafe_16_26 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.170 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else = global ptr null
@59 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.172 = global ptr null
@60 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.174 = global ptr null
@61 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.176 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.178 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.180 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.182 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_then = global ptr null
@62 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_else = global ptr null
@63 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_then = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.184 = global ptr null
@64 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.186 = global ptr null
@65 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.188 = global ptr null
@66 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_else = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.190 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.192 = global ptr null
@67 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.194 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.196 = global ptr null
@68 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.198 = global ptr null
@69 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-1_patternMatch = global ptr null
@tag_More.199 = global ptr null
@tag_Iterator.200 = global ptr null
@fun_Core_controlFlow_recursive_18 = global ptr null
@fun_Core_controlFlow_recursive_18_0 = global ptr null
@fun_Core_iterator_next = global ptr null
@fun_Core_iterator_next_2 = global ptr null
@fun_Core_iterator_next_6_equals_then = global ptr null
@fun_Core_iterator_next_6_equals_then.202 = global ptr null
@fun_Core_iterator_next_6_equals_then.204 = global ptr null
@70 = global ptr null
@fun_Core_iterator_next_6_equals_else = global ptr null
@fun_Core_iterator_next_6_equals_else.206 = global ptr null
@71 = global ptr null
@fun_Core_iterator_next_6_equals_else.208 = global ptr null
@72 = global ptr null
@fun_Core_iterator_next_6_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState = global ptr null
@fun_Core_iterator_generateWithState_14 = global ptr null
@fun_Core_iterator_generateWithState_14_1 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.210 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.212 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.214 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_then = global ptr null
@73 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_else = global ptr null
@74 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_then = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_then.216 = global ptr null
@75 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_else.218 = global ptr null
@76 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_then.220 = global ptr null
@77 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_else.222 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else = global ptr null
@78 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.224 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.226 = global ptr null
@79 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.228 = global ptr null
@80 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.230 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.232 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.234 = global ptr null
@81 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.236 = global ptr null
@82 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.238 = global ptr null
@83 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-2_patternMatch = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_21 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_22 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-0_patternMatch = global ptr null
@tag_More.239 = global ptr null
@tag_Iterator.240 = global ptr null
@fun_Core_controlFlow_recursive_18.242 = global ptr null
@fun_Core_controlFlow_recursive_18_0.244 = global ptr null
@fun_Core_iterator_generate = global ptr null
@fun_Core_iterator_generate_50 = global ptr null
@fun_Core_iterator_generate_50_6 = global ptr null
@tag_More.245 = global ptr null
@fun_Core_iterator_map_19_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_map = global ptr null
@fun_Core_iterator_map_2 = global ptr null
@fun_Core_iterator_map_19 = global ptr null
@fun_Core_iterator_map_19_3_equals_then = global ptr null
@fun_Core_iterator_map_19_3_equals_then.247 = global ptr null
@fun_Core_iterator_map_19_3_equals_else = global ptr null
@84 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.249 = global ptr null
@85 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.251 = global ptr null
@86 = global ptr null
@fun_Core_iterator_map_19_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_map_19_3_equals_then.253 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.255 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.257 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.259 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_then = global ptr null
@87 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_else = global ptr null
@88 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_then = global ptr null
@fun_Core_iterator_map_19_3_hasKey_then.261 = global ptr null
@89 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_else.263 = global ptr null
@90 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_then.265 = global ptr null
@91 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_else = global ptr null
@fun_Core_iterator_map_19_3_isMatch_else.267 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.269 = global ptr null
@92 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.271 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.273 = global ptr null
@93 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.275 = global ptr null
@94 = global ptr null
@fun_Core_iterator_map_19_3_case-1_patternMatch = global ptr null
@tag_More.276 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then = global ptr null
@95 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else = global ptr null
@96 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then.278 = global ptr null
@97 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else.280 = global ptr null
@98 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then.282 = global ptr null
@99 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.284 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_else = global ptr null
@100 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.286 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.288 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else = global ptr null
@101 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.290 = global ptr null
@102 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.292 = global ptr null
@103 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.294 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.296 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.298 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.300 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then = global ptr null
@104 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else = global ptr null
@105 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then.302 = global ptr null
@106 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else.304 = global ptr null
@107 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then.306 = global ptr null
@108 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else.308 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.310 = global ptr null
@109 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.312 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.314 = global ptr null
@110 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.316 = global ptr null
@111 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_patternMatch = global ptr null
@tag_More.317 = global ptr null
@fun_Core_iterator_ensure = global ptr null
@fun_Core_iterator_ensure_14 = global ptr null
@fun_Core_iterator_ensure_19 = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_foldLeft = global ptr null
@fun_Core_iterator_foldLeft_2 = global ptr null
@fun_Core_iterator_foldLeft_23 = global ptr null
@fun_Core_iterator_foldLeft_23_1_equals_then = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_then = global ptr null
@112 = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_else = global ptr null
@113 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_then.319 = global ptr null
@114 = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_else.321 = global ptr null
@115 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_then.323 = global ptr null
@116 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else.325 = global ptr null
@fun_Core_iterator_foldLeft_23_1_equals_else = global ptr null
@117 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else.327 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.329 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else = global ptr null
@118 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.331 = global ptr null
@119 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.333 = global ptr null
@120 = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.335 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.337 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.339 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.341 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_then = global ptr null
@121 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_else = global ptr null
@122 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_then.343 = global ptr null
@123 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_else.345 = global ptr null
@124 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_then.347 = global ptr null
@125 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_else.349 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.351 = global ptr null
@126 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.353 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.355 = global ptr null
@127 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.357 = global ptr null
@128 = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-1_patternMatch = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-0_patternMatch = global ptr null
@fun_Core_controlFlow_recursive_18.359 = global ptr null
@fun_Core_controlFlow_recursive_18_0.361 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-1_didNotMatch = global ptr null
@tag_Error.362 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-0_patternMatch = global ptr null
@fun_Core_iterator_reduceLeft = global ptr null
@fun_Core_iterator_reduceLeft_14 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.364 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else = global ptr null
@129 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.366 = global ptr null
@130 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.368 = global ptr null
@131 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-0_didNotMatch = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.370 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.372 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.374 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.376 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_then = global ptr null
@132 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_else = global ptr null
@133 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_then = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_then.378 = global ptr null
@134 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_else.380 = global ptr null
@135 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_then.382 = global ptr null
@136 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_else = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_else.384 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.386 = global ptr null
@137 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.388 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.390 = global ptr null
@138 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.392 = global ptr null
@139 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-1_patternMatch = global ptr null
@tag_Ok.393 = global ptr null
@fun_Core_iterator_sum_8 = global ptr null
@fun_Core_iterator_sum = global ptr null
@fun_Core_iterator_sum_2 = global ptr null
@fun_Core_iterator_sum_5 = global ptr null
@fun_Core_iterator_length_5 = global ptr null
@fun_Core_iterator_all = global ptr null
@fun_Core_iterator_all_14 = global ptr null
@fun_Core_iterator_all_18 = global ptr null
@fun_Core_bool_and_12 = global ptr null
@fun_Core_iterator_any = global ptr null
@fun_Core_iterator_any_14 = global ptr null
@fun_Core_iterator_any_18 = global ptr null
@fun_Core_bool_or_12 = global ptr null
@fun_Core_iterator_joinToText = global ptr null
@fun_Core_iterator_joinToText_2 = global ptr null
@fun_Core_iterator_joinToText_12 = global ptr null
@fun_Core_iterator_where_19_2_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_where = global ptr null
@fun_Core_iterator_where_2 = global ptr null
@fun_Core_iterator_where_19 = global ptr null
@fun_Core_iterator_where_19_2 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.395 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else = global ptr null
@140 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.397 = global ptr null
@141 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.399 = global ptr null
@142 = global ptr null
@fun_Core_iterator_where_19_2_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.401 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.403 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.405 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.407 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_then = global ptr null
@143 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_else = global ptr null
@144 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_then = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_then.409 = global ptr null
@145 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_else.411 = global ptr null
@146 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_then.413 = global ptr null
@147 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_else = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_else.415 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.417 = global ptr null
@148 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.419 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.421 = global ptr null
@149 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.423 = global ptr null
@150 = global ptr null
@fun_Core_iterator_where_19_2_3_case-1_patternMatch = global ptr null
@fun_Core_iterator_where_19_2_3_5 = global ptr null
@tag_More.424 = global ptr null
@fun_Core_iterator_where_19_2_3_6 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.426 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else = global ptr null
@151 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.428 = global ptr null
@152 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.430 = global ptr null
@153 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.432 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.434 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.436 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.438 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_then = global ptr null
@154 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_else = global ptr null
@155 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_then = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_then.440 = global ptr null
@156 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_else.442 = global ptr null
@157 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_then.444 = global ptr null
@158 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_else = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_else.446 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.448 = global ptr null
@159 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.450 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.452 = global ptr null
@160 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.454 = global ptr null
@161 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-1_patternMatch = global ptr null
@tag_More.455 = global ptr null
@fun_Core_controlFlow_recursive_18.457 = global ptr null
@fun_Core_controlFlow_recursive_18_0.459 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_takeWhile = global ptr null
@fun_Core_iterator_takeWhile_2 = global ptr null
@fun_Core_iterator_takeWhile_7 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.461 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else = global ptr null
@162 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.463 = global ptr null
@163 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.465 = global ptr null
@164 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.467 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.469 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.471 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.473 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then = global ptr null
@165 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else = global ptr null
@166 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then.475 = global ptr null
@167 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else.477 = global ptr null
@168 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then.479 = global ptr null
@169 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else.481 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.483 = global ptr null
@170 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.485 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.487 = global ptr null
@171 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.489 = global ptr null
@172 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_patternMatch = global ptr null
@fun_Core_iterator_takeWhile_7_3_5 = global ptr null
@tag_More.490 = global ptr null
@fun_Core_iterator_withIndex_2 = global ptr null
@fun_Core_iterator_take_34 = global ptr null
@fun_Core_iterator_take = global ptr null
@fun_Core_iterator_take_26 = global ptr null
@fun_Core_iterator_take_31 = global ptr null
@fun_Core_iterator_take_31_1_equals_then = global ptr null
@fun_Core_iterator_take_31_1_hasKey_then = global ptr null
@173 = global ptr null
@fun_Core_iterator_take_31_1_hasKey_else = global ptr null
@174 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_then = global ptr null
@fun_Core_iterator_take_31_1_hasKey_then.492 = global ptr null
@175 = global ptr null
@fun_Core_iterator_take_31_1_hasKey_else.494 = global ptr null
@176 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_then.496 = global ptr null
@177 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else.498 = global ptr null
@fun_Core_iterator_take_31_1_equals_else = global ptr null
@178 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else.500 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_skip_30_6 = global ptr null
@fun_Core_iterator_skip_30_6_1_equals_then = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_then = global ptr null
@179 = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_else = global ptr null
@180 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_then = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_then.502 = global ptr null
@181 = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_else.504 = global ptr null
@182 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_then.506 = global ptr null
@183 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else.508 = global ptr null
@fun_Core_iterator_skip_30_6_1_equals_else = global ptr null
@184 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else.510 = global ptr null
@fun_Core_iterator_skip_30_6_7 = global ptr null
@fun_Core_iterator_skip_30_6_8 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.512 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else = global ptr null
@185 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.514 = global ptr null
@186 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.516 = global ptr null
@187 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.518 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.520 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.522 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.524 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_hasKey_then = global ptr null
@188 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_hasKey_else = global ptr null
@189 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_isMatch_then = global ptr null
@190 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_isMatch_else = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.526 = global ptr null
@191 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.528 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.530 = global ptr null
@192 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.532 = global ptr null
@193 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-1_patternMatch = global ptr null
@fun_Core_controlFlow_recursive_18.534 = global ptr null
@fun_Core_controlFlow_recursive_18_0.536 = global ptr null
@fun_Core_iterator_skip = global ptr null
@fun_Core_iterator_skip_2 = global ptr null
@fun_Core_iterator_skip_30 = global ptr null
@tag_Iterator.537 = global ptr null
@fun_Core_iterator_forEach = global ptr null
@fun_Core_iterator_forEach_14 = global ptr null
@fun_Core_iterator_forEach_18 = global ptr null
@fun_Core_iterator_fromList = global ptr null
@fun_Core_iterator_fromList_23 = global ptr null
@194 = global ptr null
@fun_Core_iterator_toList_6 = global ptr null
@fun_Core_iterator_toList_2 = global ptr null
@fun_Core_iterator_windowed = global ptr null
@fun_Core_iterator_windowed_2 = global ptr null
@fun_Core_iterator_windowed_67 = global ptr null
@fun_Core_iterator_windowed_67_20 = global ptr null
@fun_Core_iterator_windowed_67_21 = global ptr null
@fun_Core_iterator_windowed_67_26 = global ptr null
@tag_More.538 = global ptr null
@fun_Core_iterator_chunked = global ptr null
@fun_Core_iterator_chunked_26 = global ptr null
@195 = global ptr null
@num_6 = global ptr null
@num_7 = global ptr null
@num_8 = global ptr null
@num_9 = global ptr null
@196 = global ptr null
@"Core:iterator:123" = global ptr null
@"Core:iterator:127" = global ptr null
@"Core:iterator:128" = global ptr null
@fun_Core_iterator_128_equals_then = global ptr null
@fun_Core_iterator_128_equals_then.540 = global ptr null
@fun_Core_iterator_128_equals_then.542 = global ptr null
@fun_Core_iterator_128_equals_then.544 = global ptr null
@fun_Core_iterator_128_hasKey_then = global ptr null
@197 = global ptr null
@fun_Core_iterator_128_hasKey_else = global ptr null
@198 = global ptr null
@fun_Core_iterator_128_isMatch_then = global ptr null
@fun_Core_iterator_128_hasKey_then.546 = global ptr null
@199 = global ptr null
@fun_Core_iterator_128_hasKey_else.548 = global ptr null
@200 = global ptr null
@fun_Core_iterator_128_isMatch_then.550 = global ptr null
@201 = global ptr null
@fun_Core_iterator_128_isMatch_else = global ptr null
@fun_Core_iterator_128_isMatch_else.552 = global ptr null
@fun_Core_iterator_128_equals_else = global ptr null
@202 = global ptr null
@fun_Core_iterator_128_equals_else.554 = global ptr null
@fun_Core_iterator_128_equals_else.556 = global ptr null
@203 = global ptr null
@fun_Core_iterator_128_equals_else.558 = global ptr null
@204 = global ptr null
@fun_Core_iterator_128_isMatch_else.560 = global ptr null
@"Core:iterator:item" = global ptr null
@"Core:iterator:rest" = global ptr null
@"Core:iterator:133" = global ptr null
@"Core:iterator:136" = global ptr null
@"Core:iterator:137" = global ptr null
@fun_Core_iterator_137_equals_then = global ptr null
@fun_Core_iterator_137_equals_then.562 = global ptr null
@fun_Core_iterator_137_equals_then.564 = global ptr null
@fun_Core_iterator_137_equals_then.566 = global ptr null
@fun_Core_iterator_137_hasKey_then = global ptr null
@205 = global ptr null
@fun_Core_iterator_137_hasKey_else = global ptr null
@206 = global ptr null
@fun_Core_iterator_137_isMatch_then = global ptr null
@fun_Core_iterator_137_hasKey_then.568 = global ptr null
@207 = global ptr null
@fun_Core_iterator_137_hasKey_else.570 = global ptr null
@208 = global ptr null
@fun_Core_iterator_137_isMatch_then.572 = global ptr null
@209 = global ptr null
@fun_Core_iterator_137_isMatch_else = global ptr null
@fun_Core_iterator_137_isMatch_else.574 = global ptr null
@fun_Core_iterator_137_equals_else = global ptr null
@210 = global ptr null
@fun_Core_iterator_137_equals_else.576 = global ptr null
@fun_Core_iterator_137_equals_else.578 = global ptr null
@211 = global ptr null
@fun_Core_iterator_137_equals_else.580 = global ptr null
@212 = global ptr null
@fun_Core_iterator_137_isMatch_else.582 = global ptr null
@"Core:iterator:item#1" = global ptr null
@"Core:iterator:rest#1" = global ptr null
@"Core:iterator:142" = global ptr null
@"Core:iterator:147" = global ptr null
@fun_Core_iterator_isEmpty_2 = global ptr null
@"Core:iterator:149" = global ptr null
@"Core:iterator:154" = global ptr null
@"Core:iterator:155" = global ptr null
@fun_Core_iterator_isEmpty_2.584 = global ptr null
@"Core:iterator:157" = global ptr null
@"Core:iterator:161:10" = global ptr null
@fun_Core_iterator_161 = global ptr null
@"Core:iterator:162" = global ptr null
@"Core:iterator:164" = global ptr null
@fun_Core_iterator_toList_2.586 = global ptr null
@213 = global ptr null
@"Core:iterator:169" = global ptr null
@"Core:iterator:173" = global ptr null
@"Core:iterator:175" = global ptr null
@"Core:iterator:179" = global ptr null
@fun_Core_iterator_length_2 = global ptr null
@"Core:iterator:181" = global ptr null
@"Core:iterator:185:9" = global ptr null
@fun_Core_iterator_185 = global ptr null
@"Core:iterator:186" = global ptr null
@"Core:iterator:188" = global ptr null
@fun_Core_iterator_192 = global ptr null
@"Core:iterator:193" = global ptr null
@"Core:iterator:195" = global ptr null
@"Core:iterator:200" = global ptr null
@"Core:iterator:202" = global ptr null
@text_123 = global ptr null
@"Core:iterator:210" = global ptr null
@"Core:iterator:214:9" = global ptr null
@fun_Core_iterator_214 = global ptr null
@"Core:iterator:215" = global ptr null
@"Core:iterator:217" = global ptr null
@fun_Core_iterator_toList_2.588 = global ptr null
@214 = global ptr null
@"Core:iterator:224" = global ptr null
@"Core:iterator:228:10" = global ptr null
@fun_Core_iterator_228 = global ptr null
@"Core:iterator:229" = global ptr null
@"Core:iterator:231" = global ptr null
@fun_Core_iterator_toList_2.590 = global ptr null
@"Core:iterator:236" = global ptr null
@"Core:iterator:241" = global ptr null
@"Core:iterator:243" = global ptr null
@fun_Core_iterator_toList_2.592 = global ptr null
@215 = global ptr null
@"Core:iterator:249" = global ptr null
@num_12 = global ptr null
@"Core:iterator:254" = global ptr null
@"Core:iterator:256" = global ptr null
@fun_Core_iterator_toList_2.594 = global ptr null
@"Core:iterator:268" = global ptr null
@"Core:iterator:273" = global ptr null
@"Core:iterator:275" = global ptr null
@fun_Core_iterator_toList_2.596 = global ptr null
@216 = global ptr null
@"Core:iterator:283" = global ptr null
@num_40 = global ptr null
@"Core:iterator:288" = global ptr null
@"Core:iterator:290" = global ptr null
@fun_Core_iterator_toList_2.598 = global ptr null
@"Core:iterator:292" = global ptr null
@"Core:iterator:299" = global ptr null
@"Core:iterator:301" = global ptr null
@fun_Core_iterator_toList_2.600 = global ptr null
@217 = global ptr null
@218 = global ptr null
@219 = global ptr null
@"Core:iterator:318" = global ptr null
@"Core:iterator:323" = global ptr null
@"Core:iterator:325" = global ptr null
@fun_Core_iterator_toList_2.602 = global ptr null
@220 = global ptr null
@221 = global ptr null
@222 = global ptr null
@223 = global ptr null
@"Core:iterator:341" = global ptr null
@tag_Stdout = global ptr null
@"Examples:iterator:21:print:7" = global ptr null
@"Examples:iterator:21:print:9" = global ptr null
@text_H = global ptr null
@text_e = global ptr null
@text_l = global ptr null
@text_o = global ptr null
@"text_," = global ptr null
@"text_ " = global ptr null
@text_w = global ptr null
@text_r = global ptr null
@text_d = global ptr null
@"text_!" = global ptr null
@text_T = global ptr null
@text_h = global ptr null
@text_i = global ptr null
@text_s = global ptr null
@text_m = global ptr null
@text_n = global ptr null
@text_g = global ptr null
@text_t = global ptr null
@text_x = global ptr null
@text_B = global ptr null
@text_a = global ptr null
@text_b = global ptr null
@text_u = global ptr null
@224 = global ptr null
@"Examples:iterator:21:24" = global ptr null
@"Examples:iterator:21:34" = global ptr null
@fun_Examples_iterator_21 = global ptr null
@"fun_Examples_iterator_21_print, Examples_iterator_21_33" = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::functionRun:11", align 8
  %4 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::functionRun:16", align 8
  %6 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::functionRun:22", align 8
  %8 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::functionRun:5", align 8
  %10 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::getArgumentCount:11", align 8
  %12 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::getArgumentCount:5", align 8
  %14 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::ifElse:1", align 8
  %16 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::ifElse:11", align 8
  %18 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::ifElse:14", align 8
  %20 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::ifElse:19", align 8
  %22 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:25", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:28", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:33", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:41", align 8
  %30 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:5", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::intAdd:11", align 8
  %34 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::intAdd:18", align 8
  %36 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::intAdd:5", align 8
  %38 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:18\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::intBitwiseAnd:18", align 8
  %40 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseAnd:5\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intBitwiseAnd:5", align 8
  %42 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intCompareTo:11", align 8
  %44 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::intCompareTo:18", align 8
  %46 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::intCompareTo:5", align 8
  %48 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:18\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::intMultiply:18", align 8
  %50 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intMultiply:5\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::intMultiply:5", align 8
  %52 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::intSubtract:18", align 8
  %54 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::intSubtract:5", align 8
  %56 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:11\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  %58 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:18\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  %60 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:19\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  %62 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::isLessThanOrEqualTo:5\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  %64 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::isNonNegative:12", align 8
  %66 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::isNonNegative:13", align 8
  %68 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::isNonNegative:5", align 8
  %70 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::listGet:11", align 8
  %72 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::listGet:14", align 8
  %74 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::listGet:16", align 8
  %76 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:24\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::listGet:24", align 8
  %78 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::listGet:25", align 8
  %80 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::listGet:30", align 8
  %82 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::listGet:37", align 8
  %84 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::listGet:5\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::listGet:5", align 8
  %86 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:11\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::listInsert:11", align 8
  %88 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:14\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Builtins::listInsert:14", align 8
  %90 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:16\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Builtins::listInsert:16", align 8
  %92 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:24\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Builtins::listInsert:24", align 8
  %94 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:25\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Builtins::listInsert:25", align 8
  %96 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:27\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Builtins::listInsert:27", align 8
  %98 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:35\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Builtins::listInsert:35", align 8
  %100 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listInsert:5\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Builtins::listInsert:5", align 8
  %102 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Builtins::listLength:11", align 8
  %104 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Builtins::listLength:5", align 8
  %106 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Builtins::structGet:12", align 8
  %108 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Builtins::structGet:14", align 8
  %110 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Builtins::structGet:21", align 8
  %112 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Builtins::structGet:5", align 8
  %114 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:11\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Builtins::textConcatenate:11", align 8
  %116 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:18\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Builtins::textConcatenate:18", align 8
  %118 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textConcatenate:5\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Builtins::textConcatenate:5", align 8
  %120 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Builtins::toDebugText:5", align 8
  %122 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Builtins::typeIs:19", align 8
  %124 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Builtins::typeIs:25", align 8
  %126 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Builtins::typeOf:5", align 8
  %128 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:and:13\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Core:bool:and:13", align 8
  %130 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:2\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Core:bool:and:2", align 8
  %132 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:4\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Core:bool:and:4", align 8
  %134 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:7\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Core:bool:and:7", align 8
  %136 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:9\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Core:bool:and:9", align 8
  %138 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Core:bool:is:1", align 8
  %140 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:14\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Core:bool:lazyAnd:14", align 8
  %142 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:16\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Core:bool:lazyAnd:16", align 8
  %144 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:18\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Core:bool:lazyAnd:18", align 8
  %146 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:13\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Core:bool:lazyAnd:18:13", align 8
  %148 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:21\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Core:bool:lazyAnd:18:21", align 8
  %150 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:18:9\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Core:bool:lazyAnd:18:9", align 8
  %152 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:2\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Core:bool:lazyAnd:2", align 8
  %154 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:4\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Core:bool:lazyAnd:4", align 8
  %156 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:14\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Core:bool:lazyOr:14", align 8
  %158 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Core:bool:lazyOr:16", align 8
  %160 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:18\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Core:bool:lazyOr:18", align 8
  %162 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:10\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Core:bool:lazyOr:18:10", align 8
  %164 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:14\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Core:bool:lazyOr:18:14", align 8
  %166 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:22\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Core:bool:lazyOr:18:22", align 8
  %168 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:2\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Core:bool:lazyOr:2", align 8
  %170 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Core:bool:lazyOr:4", align 8
  %172 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:2\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Core:bool:not:2", align 8
  %174 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:4\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Core:bool:not:4", align 8
  %176 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:6\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Core:bool:not:6", align 8
  %178 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Core:bool:or:13", align 8
  %180 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:2\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Core:bool:or:2", align 8
  %182 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Core:bool:or:4", align 8
  %184 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:7\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Core:bool:or:7", align 8
  %186 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Core:bool:or:9", align 8
  %188 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:12\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Core:check:checkEquals:12", align 8
  %190 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:13\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Core:check:checkEquals:13", align 8
  %192 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:15:0\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Core:check:checkEquals:15:0", align 8
  %194 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:16\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Core:check:checkEquals:16", align 8
  %196 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:19\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Core:check:checkEquals:19", align 8
  %198 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:20\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Core:check:checkEquals:20", align 8
  %200 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:22:0\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Core:check:checkEquals:22:0", align 8
  %202 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:23\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Core:check:checkEquals:23", align 8
  %204 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:25\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Core:check:checkEquals:25", align 8
  %206 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:26\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Core:check:checkEquals:26", align 8
  %208 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:27\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Core:check:checkEquals:27", align 8
  %210 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:28\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Core:check:checkEquals:28", align 8
  %212 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:29\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Core:check:checkEquals:29", align 8
  %214 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:11\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Core:controlFlow:if:11", align 8
  %216 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:21\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Core:controlFlow:if:21", align 8
  %218 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:23\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Core:controlFlow:if:23", align 8
  %220 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:28\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Core:controlFlow:if:28", align 8
  %222 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:controlFlow:if:9\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Core:controlFlow:if:9", align 8
  %224 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:17\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Core:controlFlow:recursive:17", align 8
  %226 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:18:0:3\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  %228 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:18:5\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Core:controlFlow:recursive:18:5", align 8
  %230 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:23\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Core:controlFlow:recursive:23", align 8
  %232 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:9\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Core:controlFlow:recursive:9", align 8
  %234 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:fromInt:15\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Core:fixedDecimal:fromInt:15", align 8
  %236 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:11\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Core:fixedDecimal:fromIntScaled:11", align 8
  %238 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:16\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Core:fixedDecimal:fromIntScaled:16", align 8
  %240 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isScale:18:9\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Core:fixedDecimal:isScale:18:9", align 8
  %242 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:isScale:19\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Core:fixedDecimal:isScale:19", align 8
  %244 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Core:function:is0:11:3", align 8
  %246 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Core:function:is0:13", align 8
  %248 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:3\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Core:function:is2:11:3", align 8
  %250 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:13\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Core:function:is2:13", align 8
  %252 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Core:function:run:14", align 8
  %254 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:2\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Core:function:run:2", align 8
  %256 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Core:function:run:4", align 8
  %258 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:20\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Core:int:compareTo:20", align 8
  %260 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:4\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Core:int:compareTo:4", align 8
  %262 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Core:int:compareTo:9", align 8
  %264 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:13\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Core:int:isGreaterThan:13", align 8
  %266 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:4\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Core:int:isGreaterThan:4", align 8
  %268 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:9\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Core:int:isGreaterThan:9", align 8
  %270 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Core:int:isLessThan:13", align 8
  %272 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:4\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Core:int:isLessThan:4", align 8
  %274 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Core:int:isLessThan:9", align 8
  %276 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:4\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Core:int:isNegative:4", align 8
  %278 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:8\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Core:int:isNegative:8", align 8
  %280 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:16\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Core:int:isNonNegative:16", align 8
  %282 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:4\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Core:int:isNonNegative:4", align 8
  %284 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:7\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Core:int:isNonNegative:7", align 8
  %286 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"anonymous:$generated::needs", align 8
  %288 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %288, ptr @fun_candy_builtin_equals, align 8
  %289 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %289, ptr @fun_candy_builtin_get_argument_count, align 8
  %290 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %290, ptr @fun_candy_builtin_if_else, align 8
  %291 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %291, ptr @fun_candy_builtin_int_add, align 8
  %292 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_and, ptr null, i64 0)
  store ptr %292, ptr @fun_candy_builtin_int_bitwise_and, align 8
  %293 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %293, ptr @fun_candy_builtin_int_compare_to, align 8
  %294 = call ptr @make_candy_function(ptr @candy_builtin_int_multiply, ptr null, i64 0)
  store ptr %294, ptr @fun_candy_builtin_int_multiply, align 8
  %295 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %295, ptr @fun_candy_builtin_int_subtract, align 8
  %296 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %296, ptr @fun_candy_builtin_list_get, align 8
  %297 = call ptr @make_candy_function(ptr @candy_builtin_list_insert, ptr null, i64 0)
  store ptr %297, ptr @fun_candy_builtin_list_insert, align 8
  %298 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %298, ptr @fun_candy_builtin_list_length, align 8
  %299 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %299, ptr @fun_candy_builtin_struct_get, align 8
  %300 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %300, ptr @fun_candy_builtin_struct_has_key, align 8
  %301 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %301, ptr @fun_candy_builtin_tag_get_value, align 8
  %302 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %302, ptr @fun_candy_builtin_tag_has_value, align 8
  %303 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %303, ptr @fun_candy_builtin_tag_without_value, align 8
  %304 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %304, ptr @fun_candy_builtin_text_concatenate, align 8
  %305 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %305, ptr @fun_candy_builtin_to_debug_text, align 8
  %306 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %306, ptr @fun_candy_builtin_type_of, align 8
  %307 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %307, align 1
  %308 = call ptr @make_candy_tag(ptr %307, ptr null)
  store ptr %308, ptr @tag_Equal, align 8
  %309 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %309, align 1
  %310 = call ptr @make_candy_tag(ptr %309, ptr null)
  store ptr %310, ptr @tag_False, align 8
  %311 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %311, align 1
  %312 = call ptr @make_candy_tag(ptr %311, ptr null)
  store ptr %312, ptr @tag_Function, align 8
  %313 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %313, align 1
  %314 = call ptr @make_candy_tag(ptr %313, ptr null)
  store ptr %314, ptr @tag_Greater, align 8
  %315 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %315, align 1
  %316 = call ptr @make_candy_tag(ptr %315, ptr null)
  store ptr %316, ptr @tag_Int, align 8
  %317 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %317, align 1
  %318 = call ptr @make_candy_tag(ptr %317, ptr null)
  store ptr %318, ptr @tag_Less, align 8
  %319 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %319, align 1
  %320 = call ptr @make_candy_tag(ptr %319, ptr null)
  store ptr %320, ptr @tag_List, align 8
  %321 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %321, align 1
  %322 = call ptr @make_candy_tag(ptr %321, ptr null)
  store ptr %322, ptr @tag_Match, align 8
  %323 = alloca i8, i64 11, align 1
  store [11 x i8] c"MinorUnits\00", ptr %323, align 1
  %324 = call ptr @make_candy_tag(ptr %323, ptr null)
  store ptr %324, ptr @tag_MinorUnits, align 8
  %325 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %325, align 1
  %326 = call ptr @make_candy_tag(ptr %325, ptr null)
  store ptr %326, ptr @tag_NoMatch, align 8
  %327 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %327, align 1
  %328 = call ptr @make_candy_tag(ptr %327, ptr null)
  store ptr %328, ptr @tag_Nothing, align 8
  %329 = alloca i8, i64 6, align 1
  store [6 x i8] c"Scale\00", ptr %329, align 1
  %330 = call ptr @make_candy_tag(ptr %329, ptr null)
  store ptr %330, ptr @tag_Scale, align 8
  %331 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %331, align 1
  %332 = call ptr @make_candy_tag(ptr %331, ptr null)
  store ptr %332, ptr @tag_Struct, align 8
  %333 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %333, align 1
  %334 = call ptr @make_candy_tag(ptr %333, ptr null)
  store ptr %334, ptr @tag_Tag, align 8
  %335 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %335, align 1
  %336 = call ptr @make_candy_tag(ptr %335, ptr null)
  store ptr %336, ptr @tag_Text, align 8
  %337 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %337, align 1
  %338 = call ptr @make_candy_tag(ptr %337, ptr null)
  store ptr %338, ptr @tag_True, align 8
  %339 = call ptr @make_candy_int(i64 0)
  store ptr %339, ptr @num_0, align 8
  %340 = call ptr @make_candy_int(i64 1)
  store ptr %340, ptr @num_1, align 8
  %341 = call ptr @make_candy_int(i64 2)
  store ptr %341, ptr @num_2, align 8
  %342 = call ptr @make_candy_int(i64 3)
  store ptr %342, ptr @num_3, align 8
  %343 = call ptr @make_candy_int(i64 4)
  store ptr %343, ptr @num_4, align 8
  %344 = call ptr @make_candy_int(i64 5)
  store ptr %344, ptr @num_5, align 8
  %345 = call ptr @make_candy_int(i64 10)
  store ptr %345, ptr @num_10, align 8
  %346 = alloca i8, i64 8, align 1
  store [8 x i8] c" to be \00", ptr %346, align 1
  %347 = call ptr @make_candy_text(ptr %346)
  store ptr %347, ptr @"text_ to be ", align 8
  %348 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %348, align 1
  %349 = call ptr @make_candy_text(ptr %348)
  store ptr %349, ptr @text_., align 8
  %350 = alloca i8, i64 26, align 1
  store [26 x i8] c"A check failed: Expected \00", ptr %350, align 1
  %351 = call ptr @make_candy_text(ptr %350)
  store ptr %351, ptr @"text_A check failed: Expected ", align 8
  %352 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Equal, got \00", ptr %352, align 1
  %353 = call ptr @make_candy_text(ptr %352)
  store ptr %353, ptr @"text_Expected Equal, got ", align 8
  %354 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %354, align 1
  %355 = call ptr @make_candy_text(ptr %354)
  store ptr %355, ptr @"text_Expected False, got ", align 8
  %356 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected Greater, got \00", ptr %356, align 1
  %357 = call ptr @make_candy_text(ptr %356)
  store ptr %357, ptr @"text_Expected Greater, got ", align 8
  %358 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected Less, got \00", ptr %358, align 1
  %359 = call ptr @make_candy_text(ptr %358)
  store ptr %359, ptr @"text_Expected Less, got ", align 8
  %360 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %360, align 1
  %361 = call ptr @make_candy_text(ptr %360)
  store ptr %361, ptr @"text_Expected True, got ", align 8
  %362 = alloca i8, i64 25, align 1
  store [25 x i8] c"Expected a Struct, got `\00", ptr %362, align 1
  %363 = call ptr @make_candy_text(ptr %362)
  store ptr %363, ptr @"text_Expected a Struct, got `", align 8
  %364 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %364, align 1
  %365 = call ptr @make_candy_text(ptr %364)
  store ptr %365, ptr @"text_Expected a Tag, got `", align 8
  %366 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %366, align 1
  %367 = call ptr @make_candy_text(ptr %366)
  store ptr %367, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %368 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %368, align 1
  %369 = call ptr @make_candy_text(ptr %368)
  store ptr %369, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %370 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %370, align 1
  %371 = call ptr @make_candy_text(ptr %370)
  store ptr %371, ptr @"text_No case matched the given expression.", align 8
  %372 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %372, align 1
  %373 = call ptr @make_candy_text(ptr %372)
  store ptr %373, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %374 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %374, align 1
  %375 = call ptr @make_candy_text(ptr %374)
  store ptr %375, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %376 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %376, align 1
  %377 = call ptr @make_candy_text(ptr %376)
  store ptr %377, ptr @"text_The `reason` must be a text.", align 8
  %378 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %378, align 1
  %379 = call ptr @make_candy_text(ptr %378)
  store ptr %379, ptr @"text_`.", align 8
  %380 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %380, align 1
  %381 = call ptr @make_candy_text(ptr %380)
  store ptr %381, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %382 = alloca i8, i64 36, align 1
  store [36 x i8] c"`a | typeIs Text` was not satisfied\00", ptr %382, align 1
  %383 = call ptr @make_candy_text(ptr %382)
  store ptr %383, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %384 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %384, align 1
  %385 = call ptr @make_candy_text(ptr %384)
  store ptr %385, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %386 = alloca i8, i64 36, align 1
  store [36 x i8] c"`b | typeIs Text` was not satisfied\00", ptr %386, align 1
  %387 = call ptr @make_candy_text(ptr %386)
  store ptr %387, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %388 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %388, align 1
  %389 = call ptr @make_candy_text(ptr %388)
  store ptr %389, ptr @"text_`b` didn't return a bool.", align 8
  %390 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %390, align 1
  %391 = call ptr @make_candy_text(ptr %390)
  store ptr %391, ptr @"text_`bool.is condition` was not satisfied", align 8
  %392 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %392, align 1
  %393 = call ptr @make_candy_text(ptr %392)
  store ptr %393, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %394 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %394, align 1
  %395 = call ptr @make_candy_text(ptr %394)
  store ptr %395, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %396 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %396, align 1
  %397 = call ptr @make_candy_text(ptr %396)
  store ptr %397, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %398 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorA | typeIs Int` was not satisfied\00", ptr %398, align 1
  %399 = call ptr @make_candy_text(ptr %398)
  store ptr %399, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %400 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %400, align 1
  %401 = call ptr @make_candy_text(ptr %400)
  store ptr %401, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %402 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %402, align 1
  %403 = call ptr @make_candy_text(ptr %402)
  store ptr %403, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %404 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %404, align 1
  %405 = call ptr @make_candy_text(ptr %404)
  store ptr %405, ptr @"text_`function.is0 b` was not satisfied", align 8
  %406 = alloca i8, i64 38, align 1
  store [38 x i8] c"`function.is0 then` was not satisfied\00", ptr %406, align 1
  %407 = call ptr @make_candy_text(ptr %406)
  store ptr %407, ptr @"text_`function.is0 then` was not satisfied", align 8
  %408 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %408, align 1
  %409 = call ptr @make_candy_text(ptr %408)
  store ptr %409, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %410 = alloca i8, i64 72, align 1
  store [70 x i8] c"`index | isLessThanOrEqualTo (list | (.listLength)` was not satisfied\00", ptr %410, align 1
  %411 = call ptr @make_candy_text(ptr %410)
  store ptr %411, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %412 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %412, align 1
  %413 = call ptr @make_candy_text(ptr %412)
  store ptr %413, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %414 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %414, align 1
  %415 = call ptr @make_candy_text(ptr %414)
  store ptr %415, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %416 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %416, align 1
  %417 = call ptr @make_candy_text(ptr %416)
  store ptr %417, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %418 = alloca i8, i64 38, align 1
  store [38 x i8] c"`int.is minorUnits` was not satisfied\00", ptr %418, align 1
  %419 = call ptr @make_candy_text(ptr %418)
  store ptr %419, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %420 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %420, align 1
  %421 = call ptr @make_candy_text(ptr %420)
  store ptr %421, ptr @"text_`is a` was not satisfied", align 8
  %422 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %422, align 1
  %423 = call ptr @make_candy_text(ptr %422)
  store ptr %423, ptr @"text_`is b` was not satisfied", align 8
  %424 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueA` was not satisfied\00", ptr %424, align 1
  %425 = call ptr @make_candy_text(ptr %424)
  store ptr %425, ptr @"text_`is valueA` was not satisfied", align 8
  %426 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %426, align 1
  %427 = call ptr @make_candy_text(ptr %426)
  store ptr %427, ptr @"text_`is valueB` was not satisfied", align 8
  %428 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is value` was not satisfied\00", ptr %428, align 1
  %429 = call ptr @make_candy_text(ptr %428)
  store ptr %429, ptr @"text_`is value` was not satisfied", align 8
  %430 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %430, align 1
  %431 = call ptr @make_candy_text(ptr %430)
  store ptr %431, ptr @"text_`is0 body` was not satisfied", align 8
  %432 = alloca i8, i64 34, align 1
  store [34 x i8] c"`isScale scale` was not satisfied\00", ptr %432, align 1
  %433 = call ptr @make_candy_text(ptr %432)
  store ptr %433, ptr @"text_`isScale scale` was not satisfied", align 8
  %434 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %434, align 1
  %435 = call ptr @make_candy_text(ptr %434)
  store ptr %435, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %436 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %436, align 1
  %437 = call ptr @make_candy_text(ptr %436)
  store ptr %437, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %438 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %438, align 1
  %439 = call ptr @make_candy_text(ptr %438)
  store ptr %439, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %440 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %440, align 1
  %441 = call ptr @make_candy_text(ptr %440)
  store ptr %441, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %442 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %442, align 1
  %443 = call ptr @make_candy_text(ptr %442)
  store ptr %443, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %444 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %444, align 1
  %445 = call ptr @make_candy_text(ptr %444)
  store ptr %445, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %446 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %447 = call ptr @make_candy_function(ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %446, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %447, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %448 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %449 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %448, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %449, ptr @"fun_anonymous_$generated__needs", align 8
  %450 = alloca ptr, i64 2, align 8
  %451 = load ptr, ptr @tag_Match, align 8
  %452 = getelementptr ptr, ptr %450, i64 0
  store ptr %451, ptr %452, align 8
  %453 = getelementptr ptr, ptr %450, i64 1
  store ptr null, ptr %453, align 8
  %454 = call ptr @make_candy_list(ptr %450)
  store ptr %454, ptr @0, align 8
  %455 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %456 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", ptr %455, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %456, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %457 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %458 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", ptr %457, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %458, ptr @"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", align 8
  %459 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %460 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", ptr %459, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %460, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %461 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %462 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %461, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %462, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %463 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %464 = call ptr @make_candy_function(ptr @Builtins__isNonNegative, ptr %463, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %464, ptr @fun_Builtins__isNonNegative, align 8
  %465 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %466 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, ptr %465, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %466, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %467 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %468 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo, ptr %467, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %468, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  %469 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %470 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %469, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %470, ptr @fun_Builtins__ifElse, align 8
  %471 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %472 = call ptr @make_candy_function(ptr @Builtins__listGet, ptr %471, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %472, ptr @fun_Builtins__listGet, align 8
  %473 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %474 = call ptr @make_candy_function(ptr @Builtins__listInsert, ptr %473, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %474, ptr @fun_Builtins__listInsert, align 8
  %475 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %476 = call ptr @make_candy_function(ptr @"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", ptr %475, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %476, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %477 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %478 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %477, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %478, ptr @fun_Core_function_is0, align 8
  %479 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %480 = call ptr @make_candy_function(ptr @Core_function_run, ptr %479, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %480, ptr @fun_Core_function_run, align 8
  %481 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %482 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %481, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %482, ptr @fun_Core_bool_is, align 8
  %483 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %484 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-1_didNotMatch, ptr %483, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %484, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %485 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %486 = call ptr @make_candy_function(ptr @Core_bool_not, ptr %485, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %486, ptr @fun_Core_bool_not, align 8
  %487 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %488 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch, ptr %487, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %488, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %489 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %490 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd, ptr %489, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %490, ptr @fun_Core_bool_lazyAnd, align 8
  %491 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %492 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch, ptr %491, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %492, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %493 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %494 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %493, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %494, ptr @fun_Core_bool_lazyOr, align 8
  %495 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %496 = call ptr @make_candy_function(ptr @Core_check_checkEquals, ptr %495, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %496, ptr @fun_Core_check_checkEquals, align 8
  %497 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %498 = call ptr @make_candy_function(ptr @Core_function_is2, ptr %497, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %498, ptr @fun_Core_function_is2, align 8
  %499 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %500 = call ptr @make_candy_function(ptr @Core_int_compareTo, ptr %499, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %500, ptr @fun_Core_int_compareTo, align 8
  %501 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %502 = call ptr @make_candy_function(ptr @Core_int_isLessThan, ptr %501, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %502, ptr @fun_Core_int_isLessThan, align 8
  %503 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %504 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan, ptr %503, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %504, ptr @fun_Core_int_isGreaterThan, align 8
  %505 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %506 = call ptr @make_candy_function(ptr @Core_int_isNonNegative, ptr %505, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %506, ptr @fun_Core_int_isNonNegative, align 8
  %507 = alloca ptr, i64 3, align 8
  %508 = load ptr, ptr @tag_NoMatch, align 8
  %509 = getelementptr ptr, ptr %507, i64 0
  store ptr %508, ptr %509, align 8
  %510 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %511 = getelementptr ptr, ptr %507, i64 1
  store ptr %510, ptr %511, align 8
  %512 = getelementptr ptr, ptr %507, i64 2
  store ptr null, ptr %512, align 8
  %513 = call ptr @make_candy_list(ptr %507)
  store ptr %513, ptr @43, align 8
  %514 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %515 = call ptr @make_candy_function(ptr @Core_fixedDecimal_fromIntScaled, ptr %514, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %515, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  %516 = load ptr, ptr @num_0, align 8
  %517 = load ptr, ptr @num_0, align 8
  %518 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %516, ptr %517)
  %519 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %519, align 1
  %520 = call ptr @make_candy_text(ptr %519)
  store ptr %520, ptr @"Core:function:is1:11:3", align 8
  %521 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %521, align 1
  %522 = call ptr @make_candy_text(ptr %521)
  store ptr %522, ptr @"Core:function:is1:13", align 8
  %523 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %524 = call ptr @make_candy_function(ptr @Core_function_is1, ptr %523, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %524, ptr @fun_Core_function_is1, align 8
  %525 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU32:15\00", ptr %525, align 1
  %526 = call ptr @make_candy_text(ptr %525)
  store ptr %526, ptr @"Core:int:fitsInRustU32:15", align 8
  %527 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:4\00", ptr %527, align 1
  %528 = call ptr @make_candy_text(ptr %527)
  store ptr %528, ptr @"Core:int:fitsInRustU32:4", align 8
  %529 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:7\00", ptr %529, align 1
  %530 = call ptr @make_candy_text(ptr %529)
  store ptr %530, ptr @"Core:int:fitsInRustU32:7", align 8
  %531 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:9\00", ptr %531, align 1
  %532 = call ptr @make_candy_text(ptr %531)
  store ptr %532, ptr @"Core:int:fitsInRustU32:9", align 8
  %533 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:4\00", ptr %533, align 1
  %534 = call ptr @make_candy_text(ptr %533)
  store ptr %534, ptr @"Core:int:isOdd:4", align 8
  %535 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:8\00", ptr %535, align 1
  %536 = call ptr @make_candy_text(ptr %535)
  store ptr %536, ptr @"Core:int:isOdd:8", align 8
  %537 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:4\00", ptr %537, align 1
  %538 = call ptr @make_candy_text(ptr %537)
  store ptr %538, ptr @"Core:int:isPositive:4", align 8
  %539 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:8\00", ptr %539, align 1
  %540 = call ptr @make_candy_text(ptr %539)
  store ptr %540, ptr @"Core:int:isPositive:8", align 8
  %541 = call ptr @make_candy_int(i64 4294967295)
  store ptr %541, ptr @num_4294967295, align 8
  %542 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative value` was not satisfied\00", ptr %542, align 1
  %543 = call ptr @make_candy_text(ptr %542)
  store ptr %543, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %544 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %545 = call ptr @make_candy_function(ptr @Core_int_isOdd, ptr %544, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %545, ptr @fun_Core_int_isOdd, align 8
  %546 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:109\00", ptr %546, align 1
  %547 = call ptr @make_candy_text(ptr %546)
  store ptr %547, ptr @"Core:iterator:109", align 8
  %548 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:11\00", ptr %548, align 1
  %549 = call ptr @make_candy_text(ptr %548)
  store ptr %549, ptr @"Core:iterator:all:11", align 8
  %550 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:15\00", ptr %550, align 1
  %551 = call ptr @make_candy_text(ptr %550)
  store ptr %551, ptr @"Core:iterator:all:15", align 8
  %552 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:13\00", ptr %552, align 1
  %553 = call ptr @make_candy_text(ptr %552)
  store ptr %553, ptr @"Core:iterator:all:18:13", align 8
  %554 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:15\00", ptr %554, align 1
  %555 = call ptr @make_candy_text(ptr %554)
  store ptr %555, ptr @"Core:iterator:all:18:15", align 8
  %556 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:all:18:2\00", ptr %556, align 1
  %557 = call ptr @make_candy_text(ptr %556)
  store ptr %557, ptr @"Core:iterator:all:18:2", align 8
  %558 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:26\00", ptr %558, align 1
  %559 = call ptr @make_candy_text(ptr %558)
  store ptr %559, ptr @"Core:iterator:all:18:26", align 8
  %560 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:19\00", ptr %560, align 1
  %561 = call ptr @make_candy_text(ptr %560)
  store ptr %561, ptr @"Core:iterator:all:19", align 8
  %562 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:all:9\00", ptr %562, align 1
  %563 = call ptr @make_candy_text(ptr %562)
  store ptr %563, ptr @"Core:iterator:all:9", align 8
  %564 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:11\00", ptr %564, align 1
  %565 = call ptr @make_candy_text(ptr %564)
  store ptr %565, ptr @"Core:iterator:any:11", align 8
  %566 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:15\00", ptr %566, align 1
  %567 = call ptr @make_candy_text(ptr %566)
  store ptr %567, ptr @"Core:iterator:any:15", align 8
  %568 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:13\00", ptr %568, align 1
  %569 = call ptr @make_candy_text(ptr %568)
  store ptr %569, ptr @"Core:iterator:any:18:13", align 8
  %570 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:15\00", ptr %570, align 1
  %571 = call ptr @make_candy_text(ptr %570)
  store ptr %571, ptr @"Core:iterator:any:18:15", align 8
  %572 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:any:18:2\00", ptr %572, align 1
  %573 = call ptr @make_candy_text(ptr %572)
  store ptr %573, ptr @"Core:iterator:any:18:2", align 8
  %574 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:26\00", ptr %574, align 1
  %575 = call ptr @make_candy_text(ptr %574)
  store ptr %575, ptr @"Core:iterator:any:18:26", align 8
  %576 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:19\00", ptr %576, align 1
  %577 = call ptr @make_candy_text(ptr %576)
  store ptr %577, ptr @"Core:iterator:any:19", align 8
  %578 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:any:9\00", ptr %578, align 1
  %579 = call ptr @make_candy_text(ptr %578)
  store ptr %579, ptr @"Core:iterator:any:9", align 8
  %580 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:11\00", ptr %580, align 1
  %581 = call ptr @make_candy_text(ptr %580)
  store ptr %581, ptr @"Core:iterator:chunked:11", align 8
  %582 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:21\00", ptr %582, align 1
  %583 = call ptr @make_candy_text(ptr %582)
  store ptr %583, ptr @"Core:iterator:chunked:21", align 8
  %584 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:23\00", ptr %584, align 1
  %585 = call ptr @make_candy_text(ptr %584)
  store ptr %585, ptr @"Core:iterator:chunked:23", align 8
  %586 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:27\00", ptr %586, align 1
  %587 = call ptr @make_candy_text(ptr %586)
  store ptr %587, ptr @"Core:iterator:chunked:27", align 8
  %588 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:32\00", ptr %588, align 1
  %589 = call ptr @make_candy_text(ptr %588)
  store ptr %589, ptr @"Core:iterator:chunked:32", align 8
  %590 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:11\00", ptr %590, align 1
  %591 = call ptr @make_candy_text(ptr %590)
  store ptr %591, ptr @"Core:iterator:ensure:11", align 8
  %592 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:15\00", ptr %592, align 1
  %593 = call ptr @make_candy_text(ptr %592)
  store ptr %593, ptr @"Core:iterator:ensure:15", align 8
  %594 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:ensure:19:2\00", ptr %594, align 1
  %595 = call ptr @make_candy_text(ptr %594)
  store ptr %595, ptr @"Core:iterator:ensure:19:2", align 8
  %596 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:20\00", ptr %596, align 1
  %597 = call ptr @make_candy_text(ptr %596)
  store ptr %597, ptr @"Core:iterator:ensure:20", align 8
  %598 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:ensure:9\00", ptr %598, align 1
  %599 = call ptr @make_candy_text(ptr %598)
  store ptr %599, ptr @"Core:iterator:ensure:9", align 8
  %600 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:14\00", ptr %600, align 1
  %601 = call ptr @make_candy_text(ptr %600)
  store ptr %601, ptr @"Core:iterator:foldLeft:14", align 8
  %602 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:16\00", ptr %602, align 1
  %603 = call ptr @make_candy_text(ptr %602)
  store ptr %603, ptr @"Core:iterator:foldLeft:16", align 8
  %604 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:1\00", ptr %604, align 1
  %605 = call ptr @make_candy_text(ptr %604)
  store ptr %605, ptr @"Core:iterator:foldLeft:23:1", align 8
  %606 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:4\00", ptr %606, align 1
  %607 = call ptr @make_candy_text(ptr %606)
  store ptr %607, ptr @"Core:iterator:foldLeft:23:4", align 8
  %608 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:5\00", ptr %608, align 1
  %609 = call ptr @make_candy_text(ptr %608)
  store ptr %609, ptr @"Core:iterator:foldLeft:23:5", align 8
  %610 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:foldLeft:23:5:10\00", ptr %610, align 1
  %611 = call ptr @make_candy_text(ptr %610)
  store ptr %611, ptr @"Core:iterator:foldLeft:23:5:10", align 8
  %612 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:foldLeft:23:5:8\00", ptr %612, align 1
  %613 = call ptr @make_candy_text(ptr %612)
  store ptr %613, ptr @"Core:iterator:foldLeft:23:5:8", align 8
  %614 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:23:5:item\00", ptr %614, align 1
  %615 = call ptr @make_candy_text(ptr %614)
  store ptr %615, ptr @"Core:iterator:foldLeft:23:5:item", align 8
  %616 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:23:5:rest\00", ptr %616, align 1
  %617 = call ptr @make_candy_text(ptr %616)
  store ptr %617, ptr @"Core:iterator:foldLeft:23:5:rest", align 8
  %618 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:foldLeft:23:iterator\00", ptr %618, align 1
  %619 = call ptr @make_candy_text(ptr %618)
  store ptr %619, ptr @"Core:iterator:foldLeft:23:iterator", align 8
  %620 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:foldLeft:23:value\00", ptr %620, align 1
  %621 = call ptr @make_candy_text(ptr %620)
  store ptr %621, ptr @"Core:iterator:foldLeft:23:value", align 8
  %622 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:24\00", ptr %622, align 1
  %623 = call ptr @make_candy_text(ptr %622)
  store ptr %623, ptr @"Core:iterator:foldLeft:24", align 8
  %624 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:foldLeft:3\00", ptr %624, align 1
  %625 = call ptr @make_candy_text(ptr %624)
  store ptr %625, ptr @"Core:iterator:foldLeft:3", align 8
  %626 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:forEach:11\00", ptr %626, align 1
  %627 = call ptr @make_candy_text(ptr %626)
  store ptr %627, ptr @"Core:iterator:forEach:11", align 8
  %628 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:forEach:15\00", ptr %628, align 1
  %629 = call ptr @make_candy_text(ptr %628)
  store ptr %629, ptr @"Core:iterator:forEach:15", align 8
  %630 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:forEach:18:2\00", ptr %630, align 1
  %631 = call ptr @make_candy_text(ptr %630)
  store ptr %631, ptr @"Core:iterator:forEach:18:2", align 8
  %632 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:forEach:19\00", ptr %632, align 1
  %633 = call ptr @make_candy_text(ptr %632)
  store ptr %633, ptr @"Core:iterator:forEach:19", align 8
  %634 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:forEach:9\00", ptr %634, align 1
  %635 = call ptr @make_candy_text(ptr %634)
  store ptr %635, ptr @"Core:iterator:forEach:9", align 8
  %636 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:11\00", ptr %636, align 1
  %637 = call ptr @make_candy_text(ptr %636)
  store ptr %637, ptr @"Core:iterator:fromList:11", align 8
  %638 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:22\00", ptr %638, align 1
  %639 = call ptr @make_candy_text(ptr %638)
  store ptr %639, ptr @"Core:iterator:fromList:22", align 8
  %640 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:fromList:23:10\00", ptr %640, align 1
  %641 = call ptr @make_candy_text(ptr %640)
  store ptr %641, ptr @"Core:iterator:fromList:23:10", align 8
  %642 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:24\00", ptr %642, align 1
  %643 = call ptr @make_candy_text(ptr %642)
  store ptr %643, ptr @"Core:iterator:fromList:24", align 8
  %644 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:11\00", ptr %644, align 1
  %645 = call ptr @make_candy_text(ptr %644)
  store ptr %645, ptr @"Core:iterator:generate:11", align 8
  %646 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:21\00", ptr %646, align 1
  %647 = call ptr @make_candy_text(ptr %646)
  store ptr %647, ptr @"Core:iterator:generate:21", align 8
  %648 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:23\00", ptr %648, align 1
  %649 = call ptr @make_candy_text(ptr %648)
  store ptr %649, ptr @"Core:iterator:generate:23", align 8
  %650 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:33\00", ptr %650, align 1
  %651 = call ptr @make_candy_text(ptr %650)
  store ptr %651, ptr @"Core:iterator:generate:33", align 8
  %652 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:35\00", ptr %652, align 1
  %653 = call ptr @make_candy_text(ptr %652)
  store ptr %653, ptr @"Core:iterator:generate:35", align 8
  %654 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:45\00", ptr %654, align 1
  %655 = call ptr @make_candy_text(ptr %654)
  store ptr %655, ptr @"Core:iterator:generate:45", align 8
  %656 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:47\00", ptr %656, align 1
  %657 = call ptr @make_candy_text(ptr %656)
  store ptr %657, ptr @"Core:iterator:generate:47", align 8
  %658 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:generate:50:6:16\00", ptr %658, align 1
  %659 = call ptr @make_candy_text(ptr %658)
  store ptr %659, ptr @"Core:iterator:generate:50:6:16", align 8
  %660 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:generate:50:6:4\00", ptr %660, align 1
  %661 = call ptr @make_candy_text(ptr %660)
  store ptr %661, ptr @"Core:iterator:generate:50:6:4", align 8
  %662 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:generate:50:7\00", ptr %662, align 1
  %663 = call ptr @make_candy_text(ptr %662)
  store ptr %663, ptr @"Core:iterator:generate:50:7", align 8
  %664 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:51\00", ptr %664, align 1
  %665 = call ptr @make_candy_text(ptr %664)
  store ptr %665, ptr @"Core:iterator:generate:51", align 8
  %666 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:generateWithState:11\00", ptr %666, align 1
  %667 = call ptr @make_candy_text(ptr %666)
  store ptr %667, ptr @"Core:iterator:generateWithState:11", align 8
  %668 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:14:1:2\00", ptr %668, align 1
  %669 = call ptr @make_candy_text(ptr %668)
  store ptr %669, ptr @"Core:iterator:generateWithState:14:1:2", align 8
  %670 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:14:1:3\00", ptr %670, align 1
  %671 = call ptr @make_candy_text(ptr %670)
  store ptr %671, ptr @"Core:iterator:generateWithState:14:1:3", align 8
  %672 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:19\00", ptr %672, align 1
  %673 = call ptr @make_candy_text(ptr %672)
  store ptr %673, ptr @"Core:iterator:generateWithState:14:1:3:19", align 8
  %674 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:20\00", ptr %674, align 1
  %675 = call ptr @make_candy_text(ptr %674)
  store ptr %675, ptr @"Core:iterator:generateWithState:14:1:3:20", align 8
  %676 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:14:1:3:22:0\00", ptr %676, align 1
  %677 = call ptr @make_candy_text(ptr %676)
  store ptr %677, ptr @"Core:iterator:generateWithState:14:1:3:22:0", align 8
  %678 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:23\00", ptr %678, align 1
  %679 = call ptr @make_candy_text(ptr %678)
  store ptr %679, ptr @"Core:iterator:generateWithState:14:1:3:23", align 8
  %680 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:25\00", ptr %680, align 1
  %681 = call ptr @make_candy_text(ptr %680)
  store ptr %681, ptr @"Core:iterator:generateWithState:14:1:3:25", align 8
  %682 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:26\00", ptr %682, align 1
  %683 = call ptr @make_candy_text(ptr %682)
  store ptr %683, ptr @"Core:iterator:generateWithState:14:1:3:26", align 8
  %684 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:27\00", ptr %684, align 1
  %685 = call ptr @make_candy_text(ptr %684)
  store ptr %685, ptr @"Core:iterator:generateWithState:14:1:3:27", align 8
  %686 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:iterator:generateWithState:14:1:3:6\00", ptr %686, align 1
  %687 = call ptr @make_candy_text(ptr %686)
  store ptr %687, ptr @"Core:iterator:generateWithState:14:1:3:6", align 8
  %688 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:14:1:3:item\00", ptr %688, align 1
  %689 = call ptr @make_candy_text(ptr %688)
  store ptr %689, ptr @"Core:iterator:generateWithState:14:1:3:item", align 8
  %690 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:iterator:generateWithState:14:1:3:state\00", ptr %690, align 1
  %691 = call ptr @make_candy_text(ptr %690)
  store ptr %691, ptr @"Core:iterator:generateWithState:14:1:3:state", align 8
  %692 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:generateWithState:15\00", ptr %692, align 1
  %693 = call ptr @make_candy_text(ptr %692)
  store ptr %693, ptr @"Core:iterator:generateWithState:15", align 8
  %694 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:generateWithState:9\00", ptr %694, align 1
  %695 = call ptr @make_candy_text(ptr %694)
  store ptr %695, ptr @"Core:iterator:generateWithState:9", align 8
  %696 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:3\00", ptr %696, align 1
  %697 = call ptr @make_candy_text(ptr %696)
  store ptr %697, ptr @"Core:iterator:isEmpty:3", align 8
  %698 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:7\00", ptr %698, align 1
  %699 = call ptr @make_candy_text(ptr %698)
  store ptr %699, ptr @"Core:iterator:isEmpty:7", align 8
  %700 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:joinToText:12:11\00", ptr %700, align 1
  %701 = call ptr @make_candy_text(ptr %700)
  store ptr %701, ptr @"Core:iterator:joinToText:12:11", align 8
  %702 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:joinToText:12:22\00", ptr %702, align 1
  %703 = call ptr @make_candy_text(ptr %702)
  store ptr %703, ptr @"Core:iterator:joinToText:12:22", align 8
  %704 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:joinToText:13\00", ptr %704, align 1
  %705 = call ptr @make_candy_text(ptr %704)
  store ptr %705, ptr @"Core:iterator:joinToText:13", align 8
  %706 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:joinToText:3\00", ptr %706, align 1
  %707 = call ptr @make_candy_text(ptr %706)
  store ptr %707, ptr @"Core:iterator:joinToText:3", align 8
  %708 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:3\00", ptr %708, align 1
  %709 = call ptr @make_candy_text(ptr %708)
  store ptr %709, ptr @"Core:iterator:length:3", align 8
  %710 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:6\00", ptr %710, align 1
  %711 = call ptr @make_candy_text(ptr %710)
  store ptr %711, ptr @"Core:iterator:length:6", align 8
  %712 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:8\00", ptr %712, align 1
  %713 = call ptr @make_candy_text(ptr %712)
  store ptr %713, ptr @"Core:iterator:length:8", align 8
  %714 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:14\00", ptr %714, align 1
  %715 = call ptr @make_candy_text(ptr %714)
  store ptr %715, ptr @"Core:iterator:map:14", align 8
  %716 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:16\00", ptr %716, align 1
  %717 = call ptr @make_candy_text(ptr %716)
  store ptr %717, ptr @"Core:iterator:map:16", align 8
  %718 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:19:2\00", ptr %718, align 1
  %719 = call ptr @make_candy_text(ptr %718)
  store ptr %719, ptr @"Core:iterator:map:19:2", align 8
  %720 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:19:3\00", ptr %720, align 1
  %721 = call ptr @make_candy_text(ptr %720)
  store ptr %721, ptr @"Core:iterator:map:19:3", align 8
  %722 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:map:19:3:5\00", ptr %722, align 1
  %723 = call ptr @make_candy_text(ptr %722)
  store ptr %723, ptr @"Core:iterator:map:19:3:5", align 8
  %724 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:19:3:item\00", ptr %724, align 1
  %725 = call ptr @make_candy_text(ptr %724)
  store ptr %725, ptr @"Core:iterator:map:19:3:item", align 8
  %726 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:19:3:rest\00", ptr %726, align 1
  %727 = call ptr @make_candy_text(ptr %726)
  store ptr %727, ptr @"Core:iterator:map:19:3:rest", align 8
  %728 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:20\00", ptr %728, align 1
  %729 = call ptr @make_candy_text(ptr %728)
  store ptr %729, ptr @"Core:iterator:map:20", align 8
  %730 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:map:3\00", ptr %730, align 1
  %731 = call ptr @make_candy_text(ptr %730)
  store ptr %731, ptr @"Core:iterator:map:3", align 8
  %732 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:next:17\00", ptr %732, align 1
  %733 = call ptr @make_candy_text(ptr %732)
  store ptr %733, ptr @"Core:iterator:next:17", align 8
  %734 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:3\00", ptr %734, align 1
  %735 = call ptr @make_candy_text(ptr %734)
  store ptr %735, ptr @"Core:iterator:next:3", align 8
  %736 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:6\00", ptr %736, align 1
  %737 = call ptr @make_candy_text(ptr %736)
  store ptr %737, ptr @"Core:iterator:next:6", align 8
  %738 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:next:nextFunction\00", ptr %738, align 1
  %739 = call ptr @make_candy_text(ptr %738)
  store ptr %739, ptr @"Core:iterator:next:nextFunction", align 8
  %740 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:11\00", ptr %740, align 1
  %741 = call ptr @make_candy_text(ptr %740)
  store ptr %741, ptr @"Core:iterator:reduceLeft:11", align 8
  %742 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:15\00", ptr %742, align 1
  %743 = call ptr @make_candy_text(ptr %742)
  store ptr %743, ptr @"Core:iterator:reduceLeft:15", align 8
  %744 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:17\00", ptr %744, align 1
  %745 = call ptr @make_candy_text(ptr %744)
  store ptr %745, ptr @"Core:iterator:reduceLeft:17", align 8
  %746 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:18\00", ptr %746, align 1
  %747 = call ptr @make_candy_text(ptr %746)
  store ptr %747, ptr @"Core:iterator:reduceLeft:18", align 8
  %748 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:reduceLeft:18:14\00", ptr %748, align 1
  %749 = call ptr @make_candy_text(ptr %748)
  store ptr %749, ptr @"Core:iterator:reduceLeft:18:14", align 8
  %750 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:18:item\00", ptr %750, align 1
  %751 = call ptr @make_candy_text(ptr %750)
  store ptr %751, ptr @"Core:iterator:reduceLeft:18:item", align 8
  %752 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:18:rest\00", ptr %752, align 1
  %753 = call ptr @make_candy_text(ptr %752)
  store ptr %753, ptr @"Core:iterator:reduceLeft:18:rest", align 8
  %754 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:reduceLeft:9\00", ptr %754, align 1
  %755 = call ptr @make_candy_text(ptr %754)
  store ptr %755, ptr @"Core:iterator:reduceLeft:9", align 8
  %756 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:16\00", ptr %756, align 1
  %757 = call ptr @make_candy_text(ptr %756)
  store ptr %757, ptr @"Core:iterator:skip:16", align 8
  %758 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:26\00", ptr %758, align 1
  %759 = call ptr @make_candy_text(ptr %758)
  store ptr %759, ptr @"Core:iterator:skip:26", align 8
  %760 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:28\00", ptr %760, align 1
  %761 = call ptr @make_candy_text(ptr %760)
  store ptr %761, ptr @"Core:iterator:skip:28", align 8
  %762 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:skip:3\00", ptr %762, align 1
  %763 = call ptr @make_candy_text(ptr %762)
  store ptr %763, ptr @"Core:iterator:skip:3", align 8
  %764 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:1\00", ptr %764, align 1
  %765 = call ptr @make_candy_text(ptr %764)
  store ptr %765, ptr @"Core:iterator:skip:30:6:1", align 8
  %766 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:7:2\00", ptr %766, align 1
  %767 = call ptr @make_candy_text(ptr %766)
  store ptr %767, ptr @"Core:iterator:skip:30:6:7:2", align 8
  %768 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:8:2\00", ptr %768, align 1
  %769 = call ptr @make_candy_text(ptr %768)
  store ptr %769, ptr @"Core:iterator:skip:30:6:8:2", align 8
  %770 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:8:3\00", ptr %770, align 1
  %771 = call ptr @make_candy_text(ptr %770)
  store ptr %771, ptr @"Core:iterator:skip:30:6:8:3", align 8
  %772 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:30:6:8:3:15\00", ptr %772, align 1
  %773 = call ptr @make_candy_text(ptr %772)
  store ptr %773, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  %774 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:30:6:8:3:17\00", ptr %774, align 1
  %775 = call ptr @make_candy_text(ptr %774)
  store ptr %775, ptr @"Core:iterator:skip:30:6:8:3:17", align 8
  %776 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:30:6:8:3:rest\00", ptr %776, align 1
  %777 = call ptr @make_candy_text(ptr %776)
  store ptr %777, ptr @"Core:iterator:skip:30:6:8:3:rest", align 8
  %778 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:9\00", ptr %778, align 1
  %779 = call ptr @make_candy_text(ptr %778)
  store ptr %779, ptr @"Core:iterator:skip:30:6:9", align 8
  %780 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:30:6:iterator\00", ptr %780, align 1
  %781 = call ptr @make_candy_text(ptr %780)
  store ptr %781, ptr @"Core:iterator:skip:30:6:iterator", align 8
  %782 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:n\00", ptr %782, align 1
  %783 = call ptr @make_candy_text(ptr %782)
  store ptr %783, ptr @"Core:iterator:skip:30:6:n", align 8
  %784 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:skip:30:7\00", ptr %784, align 1
  %785 = call ptr @make_candy_text(ptr %784)
  store ptr %785, ptr @"Core:iterator:skip:30:7", align 8
  %786 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:sum:19\00", ptr %786, align 1
  %787 = call ptr @make_candy_text(ptr %786)
  store ptr %787, ptr @"Core:iterator:sum:19", align 8
  %788 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:3\00", ptr %788, align 1
  %789 = call ptr @make_candy_text(ptr %788)
  store ptr %789, ptr @"Core:iterator:sum:3", align 8
  %790 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:sum:5:17\00", ptr %790, align 1
  %791 = call ptr @make_candy_text(ptr %790)
  store ptr %791, ptr @"Core:iterator:sum:5:17", align 8
  %792 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:6\00", ptr %792, align 1
  %793 = call ptr @make_candy_text(ptr %792)
  store ptr %793, ptr @"Core:iterator:sum:6", align 8
  %794 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:sum:8:10\00", ptr %794, align 1
  %795 = call ptr @make_candy_text(ptr %794)
  store ptr %795, ptr @"Core:iterator:sum:8:10", align 8
  %796 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:9\00", ptr %796, align 1
  %797 = call ptr @make_candy_text(ptr %796)
  store ptr %797, ptr @"Core:iterator:sum:9", align 8
  %798 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:11\00", ptr %798, align 1
  %799 = call ptr @make_candy_text(ptr %798)
  store ptr %799, ptr @"Core:iterator:take:11", align 8
  %800 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:21\00", ptr %800, align 1
  %801 = call ptr @make_candy_text(ptr %800)
  store ptr %801, ptr @"Core:iterator:take:21", align 8
  %802 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:23\00", ptr %802, align 1
  %803 = call ptr @make_candy_text(ptr %802)
  store ptr %803, ptr @"Core:iterator:take:23", align 8
  %804 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:27\00", ptr %804, align 1
  %805 = call ptr @make_candy_text(ptr %804)
  store ptr %805, ptr @"Core:iterator:take:27", align 8
  %806 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:29\00", ptr %806, align 1
  %807 = call ptr @make_candy_text(ptr %806)
  store ptr %807, ptr @"Core:iterator:take:29", align 8
  %808 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:31:1\00", ptr %808, align 1
  %809 = call ptr @make_candy_text(ptr %808)
  store ptr %809, ptr @"Core:iterator:take:31:1", align 8
  %810 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:take:31:12\00", ptr %810, align 1
  %811 = call ptr @make_candy_text(ptr %810)
  store ptr %811, ptr @"Core:iterator:take:31:12", align 8
  %812 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:take:31:index\00", ptr %812, align 1
  %813 = call ptr @make_candy_text(ptr %812)
  store ptr %813, ptr @"Core:iterator:take:31:index", align 8
  %814 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:take:31:item\00", ptr %814, align 1
  %815 = call ptr @make_candy_text(ptr %814)
  store ptr %815, ptr @"Core:iterator:take:31:item", align 8
  %816 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:32\00", ptr %816, align 1
  %817 = call ptr @make_candy_text(ptr %816)
  store ptr %817, ptr @"Core:iterator:take:32", align 8
  %818 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:34:7\00", ptr %818, align 1
  %819 = call ptr @make_candy_text(ptr %818)
  store ptr %819, ptr @"Core:iterator:take:34:7", align 8
  %820 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:35\00", ptr %820, align 1
  %821 = call ptr @make_candy_text(ptr %820)
  store ptr %821, ptr @"Core:iterator:take:35", align 8
  %822 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:3\00", ptr %822, align 1
  %823 = call ptr @make_candy_text(ptr %822)
  store ptr %823, ptr @"Core:iterator:takeWhile:3", align 8
  %824 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:2\00", ptr %824, align 1
  %825 = call ptr @make_candy_text(ptr %824)
  store ptr %825, ptr @"Core:iterator:takeWhile:7:2", align 8
  %826 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:3\00", ptr %826, align 1
  %827 = call ptr @make_candy_text(ptr %826)
  store ptr %827, ptr @"Core:iterator:takeWhile:7:3", align 8
  %828 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:4\00", ptr %828, align 1
  %829 = call ptr @make_candy_text(ptr %828)
  store ptr %829, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  %830 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:7\00", ptr %830, align 1
  %831 = call ptr @make_candy_text(ptr %830)
  store ptr %831, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  %832 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:item\00", ptr %832, align 1
  %833 = call ptr @make_candy_text(ptr %832)
  store ptr %833, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  %834 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:rest\00", ptr %834, align 1
  %835 = call ptr @make_candy_text(ptr %834)
  store ptr %835, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  %836 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:8\00", ptr %836, align 1
  %837 = call ptr @make_candy_text(ptr %836)
  store ptr %837, ptr @"Core:iterator:takeWhile:8", align 8
  %838 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:3\00", ptr %838, align 1
  %839 = call ptr @make_candy_text(ptr %838)
  store ptr %839, ptr @"Core:iterator:toList:3", align 8
  %840 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:toList:6:10\00", ptr %840, align 1
  %841 = call ptr @make_candy_text(ptr %840)
  store ptr %841, ptr @"Core:iterator:toList:6:10", align 8
  %842 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:7\00", ptr %842, align 1
  %843 = call ptr @make_candy_text(ptr %842)
  store ptr %843, ptr @"Core:iterator:toList:7", align 8
  %844 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:14\00", ptr %844, align 1
  %845 = call ptr @make_candy_text(ptr %844)
  store ptr %845, ptr @"Core:iterator:where:14", align 8
  %846 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:16\00", ptr %846, align 1
  %847 = call ptr @make_candy_text(ptr %846)
  store ptr %847, ptr @"Core:iterator:where:16", align 8
  %848 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:19:2:2\00", ptr %848, align 1
  %849 = call ptr @make_candy_text(ptr %848)
  store ptr %849, ptr @"Core:iterator:where:19:2:2", align 8
  %850 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:19:2:3\00", ptr %850, align 1
  %851 = call ptr @make_candy_text(ptr %850)
  store ptr %851, ptr @"Core:iterator:where:19:2:3", align 8
  %852 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:19:2:3:4\00", ptr %852, align 1
  %853 = call ptr @make_candy_text(ptr %852)
  store ptr %853, ptr @"Core:iterator:where:19:2:3:4", align 8
  %854 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:2\00", ptr %854, align 1
  %855 = call ptr @make_candy_text(ptr %854)
  store ptr %855, ptr @"Core:iterator:where:19:2:3:6:2", align 8
  %856 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:4\00", ptr %856, align 1
  %857 = call ptr @make_candy_text(ptr %856)
  store ptr %857, ptr @"Core:iterator:where:19:2:3:6:4", align 8
  %858 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:5\00", ptr %858, align 1
  %859 = call ptr @make_candy_text(ptr %858)
  store ptr %859, ptr @"Core:iterator:where:19:2:3:6:5", align 8
  %860 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:19:2:3:6:5:item\00", ptr %860, align 1
  %861 = call ptr @make_candy_text(ptr %860)
  store ptr %861, ptr @"Core:iterator:where:19:2:3:6:5:item", align 8
  %862 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:19:2:3:6:5:rest\00", ptr %862, align 1
  %863 = call ptr @make_candy_text(ptr %862)
  store ptr %863, ptr @"Core:iterator:where:19:2:3:6:5:rest", align 8
  %864 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:19:2:3:7\00", ptr %864, align 1
  %865 = call ptr @make_candy_text(ptr %864)
  store ptr %865, ptr @"Core:iterator:where:19:2:3:7", align 8
  %866 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:19:2:3:item\00", ptr %866, align 1
  %867 = call ptr @make_candy_text(ptr %866)
  store ptr %867, ptr @"Core:iterator:where:19:2:3:item", align 8
  %868 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:19:2:3:rest\00", ptr %868, align 1
  %869 = call ptr @make_candy_text(ptr %868)
  store ptr %869, ptr @"Core:iterator:where:19:2:3:rest", align 8
  %870 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:where:19:3\00", ptr %870, align 1
  %871 = call ptr @make_candy_text(ptr %870)
  store ptr %871, ptr @"Core:iterator:where:19:3", align 8
  %872 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:20\00", ptr %872, align 1
  %873 = call ptr @make_candy_text(ptr %872)
  store ptr %873, ptr @"Core:iterator:where:20", align 8
  %874 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:where:3\00", ptr %874, align 1
  %875 = call ptr @make_candy_text(ptr %874)
  store ptr %875, ptr @"Core:iterator:where:3", align 8
  %876 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:16\00", ptr %876, align 1
  %877 = call ptr @make_candy_text(ptr %876)
  store ptr %877, ptr @"Core:iterator:windowed:16", align 8
  %878 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:26\00", ptr %878, align 1
  %879 = call ptr @make_candy_text(ptr %878)
  store ptr %879, ptr @"Core:iterator:windowed:26", align 8
  %880 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:28\00", ptr %880, align 1
  %881 = call ptr @make_candy_text(ptr %880)
  store ptr %881, ptr @"Core:iterator:windowed:28", align 8
  %882 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:windowed:3\00", ptr %882, align 1
  %883 = call ptr @make_candy_text(ptr %882)
  store ptr %883, ptr @"Core:iterator:windowed:3", align 8
  %884 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:40\00", ptr %884, align 1
  %885 = call ptr @make_candy_text(ptr %884)
  store ptr %885, ptr @"Core:iterator:windowed:40", align 8
  %886 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:50\00", ptr %886, align 1
  %887 = call ptr @make_candy_text(ptr %886)
  store ptr %887, ptr @"Core:iterator:windowed:50", align 8
  %888 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:52\00", ptr %888, align 1
  %889 = call ptr @make_candy_text(ptr %888)
  store ptr %889, ptr @"Core:iterator:windowed:52", align 8
  %890 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:62\00", ptr %890, align 1
  %891 = call ptr @make_candy_text(ptr %890)
  store ptr %891, ptr @"Core:iterator:windowed:62", align 8
  %892 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:64\00", ptr %892, align 1
  %893 = call ptr @make_candy_text(ptr %892)
  store ptr %893, ptr @"Core:iterator:windowed:64", align 8
  %894 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:16\00", ptr %894, align 1
  %895 = call ptr @make_candy_text(ptr %894)
  store ptr %895, ptr @"Core:iterator:windowed:67:16", align 8
  %896 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:22\00", ptr %896, align 1
  %897 = call ptr @make_candy_text(ptr %896)
  store ptr %897, ptr @"Core:iterator:windowed:67:22", align 8
  %898 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:windowed:67:26:7\00", ptr %898, align 1
  %899 = call ptr @make_candy_text(ptr %898)
  store ptr %899, ptr @"Core:iterator:windowed:67:26:7", align 8
  %900 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:28\00", ptr %900, align 1
  %901 = call ptr @make_candy_text(ptr %900)
  store ptr %901, ptr @"Core:iterator:windowed:67:28", align 8
  %902 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:67:3\00", ptr %902, align 1
  %903 = call ptr @make_candy_text(ptr %902)
  store ptr %903, ptr @"Core:iterator:windowed:67:3", align 8
  %904 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:67:5\00", ptr %904, align 1
  %905 = call ptr @make_candy_text(ptr %904)
  store ptr %905, ptr @"Core:iterator:windowed:67:5", align 8
  %906 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:68\00", ptr %906, align 1
  %907 = call ptr @make_candy_text(ptr %906)
  store ptr %907, ptr @"Core:iterator:windowed:68", align 8
  %908 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:1\00", ptr %908, align 1
  %909 = call ptr @make_candy_text(ptr %908)
  store ptr %909, ptr @"Core:iterator:withIndex:11:1", align 8
  %910 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:4\00", ptr %910, align 1
  %911 = call ptr @make_candy_text(ptr %910)
  store ptr %911, ptr @"Core:iterator:withIndex:11:4", align 8
  %912 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:5\00", ptr %912, align 1
  %913 = call ptr @make_candy_text(ptr %912)
  store ptr %913, ptr @"Core:iterator:withIndex:11:5", align 8
  %914 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:withIndex:11:5:22\00", ptr %914, align 1
  %915 = call ptr @make_candy_text(ptr %914)
  store ptr %915, ptr @"Core:iterator:withIndex:11:5:22", align 8
  %916 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:item\00", ptr %916, align 1
  %917 = call ptr @make_candy_text(ptr %916)
  store ptr %917, ptr @"Core:iterator:withIndex:11:5:item", align 8
  %918 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:rest\00", ptr %918, align 1
  %919 = call ptr @make_candy_text(ptr %918)
  store ptr %919, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  %920 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:withIndex:11:index\00", ptr %920, align 1
  %921 = call ptr @make_candy_text(ptr %920)
  store ptr %921, ptr @"Core:iterator:withIndex:11:index", align 8
  %922 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:withIndex:11:iterator\00", ptr %922, align 1
  %923 = call ptr @make_candy_text(ptr %922)
  store ptr %923, ptr @"Core:iterator:withIndex:11:iterator", align 8
  %924 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:withIndex:12\00", ptr %924, align 1
  %925 = call ptr @make_candy_text(ptr %924)
  store ptr %925, ptr @"Core:iterator:withIndex:12", align 8
  %926 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:withIndex:3\00", ptr %926, align 1
  %927 = call ptr @make_candy_text(ptr %926)
  store ptr %927, ptr @"Core:iterator:withIndex:3", align 8
  %928 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:wrapSafe:11\00", ptr %928, align 1
  %929 = call ptr @make_candy_text(ptr %928)
  store ptr %929, ptr @"Core:iterator:wrapSafe:11", align 8
  %930 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:12:9\00", ptr %930, align 1
  %931 = call ptr @make_candy_text(ptr %930)
  store ptr %931, ptr @"Core:iterator:wrapSafe:12:9", align 8
  %932 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:16:1\00", ptr %932, align 1
  %933 = call ptr @make_candy_text(ptr %932)
  store ptr %933, ptr @"Core:iterator:wrapSafe:16:1", align 8
  %934 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:13\00", ptr %934, align 1
  %935 = call ptr @make_candy_text(ptr %934)
  store ptr %935, ptr @"Core:iterator:wrapSafe:16:13", align 8
  %936 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:16:1:10\00", ptr %936, align 1
  %937 = call ptr @make_candy_text(ptr %936)
  store ptr %937, ptr @"Core:iterator:wrapSafe:16:1:10", align 8
  %938 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:1:function\00", ptr %938, align 1
  %939 = call ptr @make_candy_text(ptr %938)
  store ptr %939, ptr @"Core:iterator:wrapSafe:16:1:function", align 8
  %940 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:22\00", ptr %940, align 1
  %941 = call ptr @make_candy_text(ptr %940)
  store ptr %941, ptr @"Core:iterator:wrapSafe:16:22", align 8
  %942 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:24\00", ptr %942, align 1
  %943 = call ptr @make_candy_text(ptr %942)
  store ptr %943, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %944 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:wrapSafe:16:26:10\00", ptr %944, align 1
  %945 = call ptr @make_candy_text(ptr %944)
  store ptr %945, ptr @"Core:iterator:wrapSafe:16:26:10", align 8
  %946 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:wrapSafe:16:26:10:19\00", ptr %946, align 1
  %947 = call ptr @make_candy_text(ptr %946)
  store ptr %947, ptr @"Core:iterator:wrapSafe:16:26:10:19", align 8
  %948 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:wrapSafe:16:26:10:7\00", ptr %948, align 1
  %949 = call ptr @make_candy_text(ptr %948)
  store ptr %949, ptr @"Core:iterator:wrapSafe:16:26:10:7", align 8
  %950 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:26:10:item\00", ptr %950, align 1
  %951 = call ptr @make_candy_text(ptr %950)
  store ptr %951, ptr @"Core:iterator:wrapSafe:16:26:10:item", align 8
  %952 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:26:10:rest\00", ptr %952, align 1
  %953 = call ptr @make_candy_text(ptr %952)
  store ptr %953, ptr @"Core:iterator:wrapSafe:16:26:10:rest", align 8
  %954 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:16:26:9\00", ptr %954, align 1
  %955 = call ptr @make_candy_text(ptr %954)
  store ptr %955, ptr @"Core:iterator:wrapSafe:16:26:9", align 8
  %956 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:wrapSafe:17\00", ptr %956, align 1
  %957 = call ptr @make_candy_text(ptr %956)
  store ptr %957, ptr @"Core:iterator:wrapSafe:17", align 8
  %958 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:wrapSafe:9\00", ptr %958, align 1
  %959 = call ptr @make_candy_text(ptr %958)
  store ptr %959, ptr @"Core:iterator:wrapSafe:9", align 8
  %960 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:append:11\00", ptr %960, align 1
  %961 = call ptr @make_candy_text(ptr %960)
  store ptr %961, ptr @"Core:list:append:11", align 8
  %962 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:4\00", ptr %962, align 1
  %963 = call ptr @make_candy_text(ptr %962)
  store ptr %963, ptr @"Core:list:append:4", align 8
  %964 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:9\00", ptr %964, align 1
  %965 = call ptr @make_candy_text(ptr %964)
  store ptr %965, ptr @"Core:list:append:9", align 8
  %966 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %966, align 1
  %967 = call ptr @make_candy_text(ptr %966)
  store ptr %967, ptr @"Core:result:is:1", align 8
  %968 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:is:1:_\00", ptr %968, align 1
  %969 = call ptr @make_candy_text(ptr %968)
  store ptr %969, ptr @"Core:result:is:1:_", align 8
  %970 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:14\00", ptr %970, align 1
  %971 = call ptr @make_candy_text(ptr %970)
  store ptr %971, ptr @"Core:result:mapOrElse:14", align 8
  %972 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:16\00", ptr %972, align 1
  %973 = call ptr @make_candy_text(ptr %972)
  store ptr %973, ptr @"Core:result:mapOrElse:16", align 8
  %974 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:2\00", ptr %974, align 1
  %975 = call ptr @make_candy_text(ptr %974)
  store ptr %975, ptr @"Core:result:mapOrElse:2", align 8
  %976 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:26\00", ptr %976, align 1
  %977 = call ptr @make_candy_text(ptr %976)
  store ptr %977, ptr @"Core:result:mapOrElse:26", align 8
  %978 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:28\00", ptr %978, align 1
  %979 = call ptr @make_candy_text(ptr %978)
  store ptr %979, ptr @"Core:result:mapOrElse:28", align 8
  %980 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:30\00", ptr %980, align 1
  %981 = call ptr @make_candy_text(ptr %980)
  store ptr %981, ptr @"Core:result:mapOrElse:30", align 8
  %982 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:2\00", ptr %982, align 1
  %983 = call ptr @make_candy_text(ptr %982)
  store ptr %983, ptr @"Core:result:mapOrElse:30:2", align 8
  %984 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:5\00", ptr %984, align 1
  %985 = call ptr @make_candy_text(ptr %984)
  store ptr %985, ptr @"Core:result:mapOrElse:30:5", align 8
  %986 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:30:value\00", ptr %986, align 1
  %987 = call ptr @make_candy_text(ptr %986)
  store ptr %987, ptr @"Core:result:mapOrElse:30:value", align 8
  %988 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:30:value#1\00", ptr %988, align 1
  %989 = call ptr @make_candy_text(ptr %988)
  store ptr %989, ptr @"Core:result:mapOrElse:30:value#1", align 8
  %990 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %990, align 1
  %991 = call ptr @make_candy_text(ptr %990)
  store ptr %991, ptr @"Core:result:mapOrElse:4", align 8
  %992 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:2\00", ptr %992, align 1
  %993 = call ptr @make_candy_text(ptr %992)
  store ptr %993, ptr @"Core:result:unwrapOr:2", align 8
  %994 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:4\00", ptr %994, align 1
  %995 = call ptr @make_candy_text(ptr %994)
  store ptr %995, ptr @"Core:result:unwrapOr:4", align 8
  %996 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:8\00", ptr %996, align 1
  %997 = call ptr @make_candy_text(ptr %996)
  store ptr %997, ptr @"Core:result:unwrapOr:8", align 8
  %998 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:14\00", ptr %998, align 1
  %999 = call ptr @make_candy_text(ptr %998)
  store ptr %999, ptr @"Core:result:unwrapOrElse:14", align 8
  %1000 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:16\00", ptr %1000, align 1
  %1001 = call ptr @make_candy_text(ptr %1000)
  store ptr %1001, ptr @"Core:result:unwrapOrElse:16", align 8
  %1002 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:2\00", ptr %1002, align 1
  %1003 = call ptr @make_candy_text(ptr %1002)
  store ptr %1003, ptr @"Core:result:unwrapOrElse:2", align 8
  %1004 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:20:9\00", ptr %1004, align 1
  %1005 = call ptr @make_candy_text(ptr %1004)
  store ptr %1005, ptr @"Core:result:unwrapOrElse:20:9", align 8
  %1006 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:21\00", ptr %1006, align 1
  %1007 = call ptr @make_candy_text(ptr %1006)
  store ptr %1007, ptr @"Core:result:unwrapOrElse:21", align 8
  %1008 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:4\00", ptr %1008, align 1
  %1009 = call ptr @make_candy_text(ptr %1008)
  store ptr %1009, ptr @"Core:result:unwrapOrElse:4", align 8
  %1010 = alloca i8, i64 6, align 1
  store [6 x i8] c"Empty\00", ptr %1010, align 1
  %1011 = call ptr @make_candy_tag(ptr %1010, ptr null)
  store ptr %1011, ptr @tag_Empty, align 8
  %1012 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1012, align 1
  %1013 = call ptr @make_candy_tag(ptr %1012, ptr null)
  store ptr %1013, ptr @tag_Error, align 8
  %1014 = alloca i8, i64 6, align 1
  store [6 x i8] c"Index\00", ptr %1014, align 1
  %1015 = call ptr @make_candy_tag(ptr %1014, ptr null)
  store ptr %1015, ptr @tag_Index, align 8
  %1016 = alloca i8, i64 5, align 1
  store [5 x i8] c"Item\00", ptr %1016, align 1
  %1017 = call ptr @make_candy_tag(ptr %1016, ptr null)
  store ptr %1017, ptr @tag_Item, align 8
  %1018 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %1018, align 1
  %1019 = call ptr @make_candy_tag(ptr %1018, ptr null)
  store ptr %1019, ptr @tag_Iterator, align 8
  %1020 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %1020, align 1
  %1021 = call ptr @make_candy_tag(ptr %1020, ptr null)
  store ptr %1021, ptr @tag_More, align 8
  %1022 = alloca i8, i64 2, align 1
  store [2 x i8] c"N\00", ptr %1022, align 1
  %1023 = call ptr @make_candy_tag(ptr %1022, ptr null)
  store ptr %1023, ptr @tag_N, align 8
  %1024 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %1024, align 1
  %1025 = call ptr @make_candy_tag(ptr %1024, ptr null)
  store ptr %1025, ptr @tag_Ok, align 8
  %1026 = alloca i8, i64 5, align 1
  store [5 x i8] c"Rest\00", ptr %1026, align 1
  %1027 = call ptr @make_candy_tag(ptr %1026, ptr null)
  store ptr %1027, ptr @tag_Rest, align 8
  %1028 = alloca i8, i64 6, align 1
  store [6 x i8] c"State\00", ptr %1028, align 1
  %1029 = call ptr @make_candy_tag(ptr %1028, ptr null)
  store ptr %1029, ptr @tag_State, align 8
  %1030 = alloca i8, i64 6, align 1
  store [6 x i8] c"Value\00", ptr %1030, align 1
  %1031 = call ptr @make_candy_tag(ptr %1030, ptr null)
  store ptr %1031, ptr @tag_Value, align 8
  %1032 = alloca i8, i64 1, align 1
  store [1 x i8] zeroinitializer, ptr %1032, align 1
  %1033 = call ptr @make_candy_text(ptr %1032)
  store ptr %1033, ptr @text_, align 8
  %1034 = alloca i8, i64 37, align 1
  store [37 x i8] c"Can't `reduceLeft` an empty iterator\00", ptr %1034, align 1
  %1035 = call ptr @make_candy_text(ptr %1034)
  store ptr %1035, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1036 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Empty, got \00", ptr %1036, align 1
  %1037 = call ptr @make_candy_text(ptr %1036)
  store ptr %1037, ptr @"text_Expected Empty, got ", align 8
  %1038 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %1038, align 1
  %1039 = call ptr @make_candy_text(ptr %1038)
  store ptr %1039, ptr @"text_Expected Error, got ", align 8
  %1040 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected Iterator, got \00", ptr %1040, align 1
  %1041 = call ptr @make_candy_text(ptr %1040)
  store ptr %1041, ptr @"text_Expected Iterator, got ", align 8
  %1042 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected More, got \00", ptr %1042, align 1
  %1043 = call ptr @make_candy_text(ptr %1042)
  store ptr %1043, ptr @"text_Expected More, got ", align 8
  %1044 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %1044, align 1
  %1045 = call ptr @make_candy_text(ptr %1044)
  store ptr %1045, ptr @"text_Expected Ok, got ", align 8
  %1046 = alloca i8, i64 32, align 1
  store [32 x i8] c"Iterator items need to be ints.\00", ptr %1046, align 1
  %1047 = call ptr @make_candy_text(ptr %1046)
  store ptr %1047, ptr @"text_Iterator items need to be ints.", align 8
  %1048 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Index`: `\00", ptr %1048, align 1
  %1049 = call ptr @make_candy_text(ptr %1048)
  store ptr %1049, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %1050 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Item`: `\00", ptr %1050, align 1
  %1051 = call ptr @make_candy_text(ptr %1050)
  store ptr %1051, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %1052 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Iterator`: `\00", ptr %1052, align 1
  %1053 = call ptr @make_candy_text(ptr %1052)
  store ptr %1053, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %1054 = alloca i8, i64 34, align 1
  store [34 x i8] c"Struct doesn't contain key `N`: `\00", ptr %1054, align 1
  %1055 = call ptr @make_candy_text(ptr %1054)
  store ptr %1055, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %1056 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Rest`: `\00", ptr %1056, align 1
  %1057 = call ptr @make_candy_text(ptr %1056)
  store ptr %1057, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %1058 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `State`: `\00", ptr %1058, align 1
  %1059 = call ptr @make_candy_text(ptr %1058)
  store ptr %1059, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %1060 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Value`: `\00", ptr %1060, align 1
  %1061 = call ptr @make_candy_text(ptr %1060)
  store ptr %1061, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %1062 = alloca i8, i64 95, align 1
  store [95 x i8] c"The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `\00", ptr %1062, align 1
  %1063 = call ptr @make_candy_text(ptr %1062)
  store ptr %1063, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %1064 = alloca i8, i64 26, align 1
  store [26 x i8] c"The guard needs to panic.\00", ptr %1064, align 1
  %1065 = call ptr @make_candy_text(ptr %1064)
  store ptr %1065, ptr @"text_The guard needs to panic.", align 8
  %1066 = alloca i8, i64 2, align 1
  store [2 x i8] c"`\00", ptr %1066, align 1
  %1067 = call ptr @make_candy_text(ptr %1066)
  store ptr %1067, ptr @"text_`", align 8
  %1068 = alloca i8, i64 25, align 1
  store [25 x i8] c"`all` needs an iterator.\00", ptr %1068, align 1
  %1069 = call ptr @make_candy_text(ptr %1068)
  store ptr %1069, ptr @"text_`all` needs an iterator.", align 8
  %1070 = alloca i8, i64 25, align 1
  store [25 x i8] c"`any` needs an iterator.\00", ptr %1070, align 1
  %1071 = call ptr @make_candy_text(ptr %1070)
  store ptr %1071, ptr @"text_`any` needs an iterator.", align 8
  %1072 = alloca i8, i64 48, align 1
  store [48 x i8] c"`bool.is allowPartialWindows` was not satisfied\00", ptr %1072, align 1
  %1073 = call ptr @make_candy_text(ptr %1072)
  store ptr %1073, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %1074 = alloca i8, i64 39, align 1
  store [39 x i8] c"`bool.is itemResult` was not satisfied\00", ptr %1074, align 1
  %1075 = call ptr @make_candy_text(ptr %1074)
  store ptr %1075, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %1076 = alloca i8, i64 29, align 1
  store [29 x i8] c"`chunked` needs an iterator.\00", ptr %1076, align 1
  %1077 = call ptr @make_candy_text(ptr %1076)
  store ptr %1077, ptr @"text_`chunked` needs an iterator.", align 8
  %1078 = alloca i8, i64 28, align 1
  store [28 x i8] c"`ensure` needs an iterator.\00", ptr %1078, align 1
  %1079 = call ptr @make_candy_text(ptr %1078)
  store ptr %1079, ptr @"text_`ensure` needs an iterator.", align 8
  %1080 = alloca i8, i64 30, align 1
  store [30 x i8] c"`foldLeft` needs an iterator.\00", ptr %1080, align 1
  %1081 = call ptr @make_candy_text(ptr %1080)
  store ptr %1081, ptr @"text_`foldLeft` needs an iterator.", align 8
  %1082 = alloca i8, i64 29, align 1
  store [29 x i8] c"`forEach` needs an iterator.\00", ptr %1082, align 1
  %1083 = call ptr @make_candy_text(ptr %1082)
  store ptr %1083, ptr @"text_`forEach` needs an iterator.", align 8
  %1084 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function.is0 defaultGetter` was not satisfied\00", ptr %1084, align 1
  %1085 = call ptr @make_candy_text(ptr %1084)
  store ptr %1085, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %1086 = alloca i8, i64 50, align 1
  store [50 x i8] c"`function.is0 notIteratorGuard` was not satisfied\00", ptr %1086, align 1
  %1087 = call ptr @make_candy_text(ptr %1086)
  store ptr %1087, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %1088 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 action` was not satisfied\00", ptr %1088, align 1
  %1089 = call ptr @make_candy_text(ptr %1088)
  store ptr %1089, ptr @"text_`function.is1 action` was not satisfied", align 8
  %1090 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %1090, align 1
  %1091 = call ptr @make_candy_text(ptr %1090)
  store ptr %1091, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %1092 = alloca i8, i64 39, align 1
  store [39 x i8] c"`function.is1 guard` was not satisfied\00", ptr %1092, align 1
  %1093 = call ptr @make_candy_text(ptr %1092)
  store ptr %1093, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %1094 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 mapper` was not satisfied\00", ptr %1094, align 1
  %1095 = call ptr @make_candy_text(ptr %1094)
  store ptr %1095, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %1096 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %1096, align 1
  %1097 = call ptr @make_candy_text(ptr %1096)
  store ptr %1097, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %1098 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 tester` was not satisfied\00", ptr %1098, align 1
  %1099 = call ptr @make_candy_text(ptr %1098)
  store ptr %1099, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %1100 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 valueGetter` was not satisfied\00", ptr %1100, align 1
  %1101 = call ptr @make_candy_text(ptr %1100)
  store ptr %1101, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %1102 = alloca i8, i64 41, align 1
  store [41 x i8] c"`function.is2 combine` was not satisfied\00", ptr %1102, align 1
  %1103 = call ptr @make_candy_text(ptr %1102)
  store ptr %1103, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %1104 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.fitsInRustU32 length` was not satisfied\00", ptr %1104, align 1
  %1105 = call ptr @make_candy_text(ptr %1104)
  store ptr %1105, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %1106 = alloca i8, i64 34, align 1
  store [34 x i8] c"`int.is length` was not satisfied\00", ptr %1106, align 1
  %1107 = call ptr @make_candy_text(ptr %1106)
  store ptr %1107, ptr @"text_`int.is length` was not satisfied", align 8
  %1108 = alloca i8, i64 29, align 1
  store [29 x i8] c"`int.is n` was not satisfied\00", ptr %1108, align 1
  %1109 = call ptr @make_candy_text(ptr %1108)
  store ptr %1109, ptr @"text_`int.is n` was not satisfied", align 8
  %1110 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is size` was not satisfied\00", ptr %1110, align 1
  %1111 = call ptr @make_candy_text(ptr %1110)
  store ptr %1111, ptr @"text_`int.is size` was not satisfied", align 8
  %1112 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is step` was not satisfied\00", ptr %1112, align 1
  %1113 = call ptr @make_candy_text(ptr %1112)
  store ptr %1113, ptr @"text_`int.is step` was not satisfied", align 8
  %1114 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.isNonNegative length` was not satisfied\00", ptr %1114, align 1
  %1115 = call ptr @make_candy_text(ptr %1114)
  store ptr %1115, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %1116 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isNonNegative n` was not satisfied\00", ptr %1116, align 1
  %1117 = call ptr @make_candy_text(ptr %1116)
  store ptr %1117, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %1118 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive size` was not satisfied\00", ptr %1118, align 1
  %1119 = call ptr @make_candy_text(ptr %1118)
  store ptr %1119, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %1120 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive step` was not satisfied\00", ptr %1120, align 1
  %1121 = call ptr @make_candy_text(ptr %1120)
  store ptr %1121, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %1122 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is list` was not satisfied\00", ptr %1122, align 1
  %1123 = call ptr @make_candy_text(ptr %1122)
  store ptr %1123, ptr @"text_`is list` was not satisfied", align 8
  %1124 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %1124, align 1
  %1125 = call ptr @make_candy_text(ptr %1124)
  store ptr %1125, ptr @"text_`is result` was not satisfied", align 8
  %1126 = alloca i8, i64 29, align 1
  store [29 x i8] c"`isEmpty` needs an iterator.\00", ptr %1126, align 1
  %1127 = call ptr @make_candy_text(ptr %1126)
  store ptr %1127, ptr @"text_`isEmpty` needs an iterator.", align 8
  %1128 = alloca i8, i64 32, align 1
  store [32 x i8] c"`joinToText` needs an iterator.\00", ptr %1128, align 1
  %1129 = call ptr @make_candy_text(ptr %1128)
  store ptr %1129, ptr @"text_`joinToText` needs an iterator.", align 8
  %1130 = alloca i8, i64 28, align 1
  store [28 x i8] c"`length` needs an iterator.\00", ptr %1130, align 1
  %1131 = call ptr @make_candy_text(ptr %1130)
  store ptr %1131, ptr @"text_`length` needs an iterator.", align 8
  %1132 = alloca i8, i64 30, align 1
  store [30 x i8] c"`list.is l` was not satisfied\00", ptr %1132, align 1
  %1133 = call ptr @make_candy_text(ptr %1132)
  store ptr %1133, ptr @"text_`list.is l` was not satisfied", align 8
  %1134 = alloca i8, i64 25, align 1
  store [25 x i8] c"`map` needs an iterator.\00", ptr %1134, align 1
  %1135 = call ptr @make_candy_text(ptr %1134)
  store ptr %1135, ptr @"text_`map` needs an iterator.", align 8
  %1136 = alloca i8, i64 26, align 1
  store [26 x i8] c"`next` needs an iterator.\00", ptr %1136, align 1
  %1137 = call ptr @make_candy_text(ptr %1136)
  store ptr %1137, ptr @"text_`next` needs an iterator.", align 8
  %1138 = alloca i8, i64 32, align 1
  store [32 x i8] c"`reduceLeft` needs an iterator.\00", ptr %1138, align 1
  %1139 = call ptr @make_candy_text(ptr %1138)
  store ptr %1139, ptr @"text_`reduceLeft` needs an iterator.", align 8
  %1140 = alloca i8, i64 26, align 1
  store [26 x i8] c"`skip` needs an iterator.\00", ptr %1140, align 1
  %1141 = call ptr @make_candy_text(ptr %1140)
  store ptr %1141, ptr @"text_`skip` needs an iterator.", align 8
  %1142 = alloca i8, i64 25, align 1
  store [25 x i8] c"`sum` needs an iterator.\00", ptr %1142, align 1
  %1143 = call ptr @make_candy_text(ptr %1142)
  store ptr %1143, ptr @"text_`sum` needs an iterator.", align 8
  %1144 = alloca i8, i64 31, align 1
  store [31 x i8] c"`takeWhile` needs an iterator.\00", ptr %1144, align 1
  %1145 = call ptr @make_candy_text(ptr %1144)
  store ptr %1145, ptr @"text_`takeWhile` needs an iterator.", align 8
  %1146 = alloca i8, i64 26, align 1
  store [26 x i8] c"`take` needs an iterator.\00", ptr %1146, align 1
  %1147 = call ptr @make_candy_text(ptr %1146)
  store ptr %1147, ptr @"text_`take` needs an iterator.", align 8
  %1148 = alloca i8, i64 33, align 1
  store [33 x i8] c"`text.is item` was not satisfied\00", ptr %1148, align 1
  %1149 = call ptr @make_candy_text(ptr %1148)
  store ptr %1149, ptr @"text_`text.is item` was not satisfied", align 8
  %1150 = alloca i8, i64 28, align 1
  store [28 x i8] c"`toList` needs an iterator.\00", ptr %1150, align 1
  %1151 = call ptr @make_candy_text(ptr %1150)
  store ptr %1151, ptr @"text_`toList` needs an iterator.", align 8
  %1152 = alloca i8, i64 27, align 1
  store [27 x i8] c"`where` needs an iterator.\00", ptr %1152, align 1
  %1153 = call ptr @make_candy_text(ptr %1152)
  store ptr %1153, ptr @"text_`where` needs an iterator.", align 8
  %1154 = alloca i8, i64 30, align 1
  store [30 x i8] c"`windowed` needs an iterator.\00", ptr %1154, align 1
  %1155 = call ptr @make_candy_text(ptr %1154)
  store ptr %1155, ptr @"text_`windowed` needs an iterator.", align 8
  %1156 = alloca i8, i64 31, align 1
  store [31 x i8] c"`withIndex` needs an iterator.\00", ptr %1156, align 1
  %1157 = call ptr @make_candy_text(ptr %1156)
  store ptr %1157, ptr @"text_`withIndex` needs an iterator.", align 8
  %1158 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1159 = call ptr @make_candy_function(ptr @Core_result_is, ptr %1158, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1159, ptr @fun_Core_result_is, align 8
  %1160 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1161 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_didNotMatch, ptr %1160, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1161, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %1162 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1163 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %1162, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1163, ptr @fun_Core_result_mapOrElse, align 8
  %1164 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1165 = call ptr @make_candy_function(ptr @"Core_iterator_range_38, Core_result_unwrapOrElse_19", ptr %1164, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1165, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  %1166 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1167 = call ptr @make_candy_function(ptr @Core_result_unwrapOr, ptr %1166, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1167, ptr @fun_Core_result_unwrapOr, align 8
  %1168 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1169 = call ptr @make_candy_function(ptr @Core_list_append, ptr %1168, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1169, ptr @fun_Core_list_append, align 8
  %1170 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1171 = call ptr @make_candy_function(ptr @"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", ptr %1170, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1171, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %1172 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1173 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe, ptr %1172, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1173, ptr @fun_Core_iterator_wrapSafe, align 8
  %1174 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1175 = call ptr @make_candy_function(ptr @Core_iterator_next, ptr %1174, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1175, ptr @fun_Core_iterator_next, align 8
  %1176 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1177 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState, ptr %1176, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1177, ptr @fun_Core_iterator_generateWithState, align 8
  %1178 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1179 = call ptr @make_candy_function(ptr @Core_iterator_generate, ptr %1178, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1179, ptr @fun_Core_iterator_generate, align 8
  %1180 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1181 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-1_didNotMatch, ptr %1180, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1181, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  %1182 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1183 = call ptr @make_candy_function(ptr @Core_iterator_map, ptr %1182, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1183, ptr @fun_Core_iterator_map, align 8
  %1184 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1185 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch, ptr %1184, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1185, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %1186 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1187 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11, ptr %1186, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1187, ptr @fun_Core_iterator_withIndex_11, align 8
  %1188 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1189 = call ptr @make_candy_function(ptr @Core_iterator_ensure, ptr %1188, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1189, ptr @fun_Core_iterator_ensure, align 8
  %1190 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1191 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-1_didNotMatch, ptr %1190, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1191, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  %1192 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1193 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft, ptr %1192, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1193, ptr @fun_Core_iterator_foldLeft, align 8
  %1194 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1195 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-1_didNotMatch, ptr %1194, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1195, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  %1196 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1197 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1197, align 1
  %1198 = call ptr @make_candy_tag(ptr %1197, ptr %1196)
  store ptr %1198, ptr @tag_Error.362, align 8
  %1199 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1200 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-0_patternMatch, ptr %1199, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1200, ptr @fun_Core_iterator_reduceLeft_18_case-0_patternMatch, align 8
  %1201 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1202 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft, ptr %1201, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1202, ptr @fun_Core_iterator_reduceLeft, align 8
  %1203 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1204 = call ptr @make_candy_function(ptr @Core_iterator_sum_8, ptr %1203, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1204, ptr @fun_Core_iterator_sum_8, align 8
  %1205 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1206 = call ptr @make_candy_function(ptr @Core_iterator_sum, ptr %1205, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1206, ptr @fun_Core_iterator_sum, align 8
  %1207 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1208 = call ptr @make_candy_function(ptr @Core_iterator_length_5, ptr %1207, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1208, ptr @fun_Core_iterator_length_5, align 8
  %1209 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1210 = call ptr @make_candy_function(ptr @Core_iterator_all, ptr %1209, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1210, ptr @fun_Core_iterator_all, align 8
  %1211 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1212 = call ptr @make_candy_function(ptr @Core_iterator_any, ptr %1211, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1212, ptr @fun_Core_iterator_any, align 8
  %1213 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1214 = call ptr @make_candy_function(ptr @Core_iterator_joinToText, ptr %1213, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1214, ptr @fun_Core_iterator_joinToText, align 8
  %1215 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1216 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-1_didNotMatch, ptr %1215, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1216, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  %1217 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1218 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, ptr %1217, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1218, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  %1219 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1220 = call ptr @make_candy_function(ptr @Core_iterator_where, ptr %1219, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1220, ptr @fun_Core_iterator_where, align 8
  %1221 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1222 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch, ptr %1221, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1222, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %1223 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1224 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile, ptr %1223, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1224, ptr @fun_Core_iterator_takeWhile, align 8
  %1225 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1226 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_2, ptr %1225, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1226, ptr @fun_Core_iterator_withIndex_2, align 8
  %1227 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1228 = call ptr @make_candy_function(ptr @Core_iterator_take_34, ptr %1227, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1228, ptr @fun_Core_iterator_take_34, align 8
  %1229 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1230 = call ptr @make_candy_function(ptr @Core_iterator_take, ptr %1229, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1230, ptr @fun_Core_iterator_take, align 8
  %1231 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1232 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-1_didNotMatch, ptr %1231, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1232, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  %1233 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1234 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6, ptr %1233, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1234, ptr @fun_Core_iterator_skip_30_6, align 8
  %1235 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1236 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.533, ptr %1235, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1236, ptr @fun_Core_controlFlow_recursive_18.534, align 8
  %1237 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1238 = call ptr @make_candy_function(ptr @Core_iterator_skip, ptr %1237, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1238, ptr @fun_Core_iterator_skip, align 8
  %1239 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1240 = call ptr @make_candy_function(ptr @Core_iterator_forEach, ptr %1239, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1240, ptr @fun_Core_iterator_forEach, align 8
  %1241 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1242 = call ptr @make_candy_function(ptr @Core_iterator_fromList, ptr %1241, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1242, ptr @fun_Core_iterator_fromList, align 8
  %1243 = alloca ptr, i64 1, align 8
  %1244 = getelementptr ptr, ptr %1243, i64 0
  store ptr null, ptr %1244, align 8
  %1245 = call ptr @make_candy_list(ptr %1243)
  store ptr %1245, ptr @194, align 8
  %1246 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1247 = call ptr @make_candy_function(ptr @Core_iterator_toList_6, ptr %1246, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1247, ptr @fun_Core_iterator_toList_6, align 8
  %1248 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1249 = call ptr @make_candy_function(ptr @Core_iterator_toList_2, ptr %1248, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1249, ptr @fun_Core_iterator_toList_2, align 8
  %1250 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1251 = call ptr @make_candy_function(ptr @Core_iterator_windowed, ptr %1250, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1251, ptr @fun_Core_iterator_windowed, align 8
  %1252 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1253 = call ptr @make_candy_function(ptr @Core_iterator_chunked, ptr %1252, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1253, ptr @fun_Core_iterator_chunked, align 8
  %1254 = alloca ptr, i64 4, align 8
  %1255 = load ptr, ptr @num_1, align 8
  %1256 = getelementptr ptr, ptr %1254, i64 0
  store ptr %1255, ptr %1256, align 8
  %1257 = load ptr, ptr @num_2, align 8
  %1258 = getelementptr ptr, ptr %1254, i64 1
  store ptr %1257, ptr %1258, align 8
  %1259 = load ptr, ptr @num_3, align 8
  %1260 = getelementptr ptr, ptr %1254, i64 2
  store ptr %1259, ptr %1260, align 8
  %1261 = getelementptr ptr, ptr %1254, i64 3
  store ptr null, ptr %1261, align 8
  %1262 = call ptr @make_candy_list(ptr %1254)
  store ptr %1262, ptr @195, align 8
  %1263 = load ptr, ptr @195, align 8
  %1264 = call ptr @Core_iterator_fromList(ptr %1263)
  %1265 = call ptr @make_candy_int(i64 6)
  store ptr %1265, ptr @num_6, align 8
  %1266 = call ptr @make_candy_int(i64 7)
  store ptr %1266, ptr @num_7, align 8
  %1267 = call ptr @make_candy_int(i64 8)
  store ptr %1267, ptr @num_8, align 8
  %1268 = call ptr @make_candy_int(i64 9)
  store ptr %1268, ptr @num_9, align 8
  %1269 = alloca ptr, i64 11, align 8
  %1270 = load ptr, ptr @num_1, align 8
  %1271 = getelementptr ptr, ptr %1269, i64 0
  store ptr %1270, ptr %1271, align 8
  %1272 = load ptr, ptr @num_2, align 8
  %1273 = getelementptr ptr, ptr %1269, i64 1
  store ptr %1272, ptr %1273, align 8
  %1274 = load ptr, ptr @num_3, align 8
  %1275 = getelementptr ptr, ptr %1269, i64 2
  store ptr %1274, ptr %1275, align 8
  %1276 = load ptr, ptr @num_4, align 8
  %1277 = getelementptr ptr, ptr %1269, i64 3
  store ptr %1276, ptr %1277, align 8
  %1278 = load ptr, ptr @num_5, align 8
  %1279 = getelementptr ptr, ptr %1269, i64 4
  store ptr %1278, ptr %1279, align 8
  %1280 = load ptr, ptr @num_6, align 8
  %1281 = getelementptr ptr, ptr %1269, i64 5
  store ptr %1280, ptr %1281, align 8
  %1282 = load ptr, ptr @num_7, align 8
  %1283 = getelementptr ptr, ptr %1269, i64 6
  store ptr %1282, ptr %1283, align 8
  %1284 = load ptr, ptr @num_8, align 8
  %1285 = getelementptr ptr, ptr %1269, i64 7
  store ptr %1284, ptr %1285, align 8
  %1286 = load ptr, ptr @num_9, align 8
  %1287 = getelementptr ptr, ptr %1269, i64 8
  store ptr %1286, ptr %1287, align 8
  %1288 = load ptr, ptr @num_10, align 8
  %1289 = getelementptr ptr, ptr %1269, i64 9
  store ptr %1288, ptr %1289, align 8
  %1290 = getelementptr ptr, ptr %1269, i64 10
  store ptr null, ptr %1290, align 8
  %1291 = call ptr @make_candy_list(ptr %1269)
  store ptr %1291, ptr @196, align 8
  %1292 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:123\00", ptr %1292, align 1
  %1293 = call ptr @make_candy_text(ptr %1292)
  store ptr %1293, ptr @"Core:iterator:123", align 8
  %1294 = load ptr, ptr @196, align 8
  %1295 = call ptr @Core_iterator_fromList(ptr %1294)
  %1296 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:127\00", ptr %1296, align 1
  %1297 = call ptr @make_candy_text(ptr %1296)
  store ptr %1297, ptr @"Core:iterator:127", align 8
  %1298 = call ptr @Core_iterator_next(ptr %1264)
  %1299 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:128\00", ptr %1299, align 1
  %1300 = call ptr @make_candy_text(ptr %1299)
  store ptr %1300, ptr @"Core:iterator:128", align 8
  %1301 = call ptr @candy_builtin_type_of(ptr %1298)
  %1302 = load ptr, ptr @tag_Tag, align 8
  %1303 = call ptr @candy_builtin_equals(ptr %1302, ptr %1301)
  %1304 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1305 = getelementptr inbounds { ptr }, ptr %1304, i32 0, i32 0
  store ptr %1298, ptr %1305, align 8
  %1306 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then, ptr %1304, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1306, ptr @fun_Core_iterator_128_equals_then, align 8
  %1307 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1308 = getelementptr inbounds { ptr }, ptr %1307, i32 0, i32 0
  store ptr %1301, ptr %1308, align 8
  %1309 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.557, ptr %1307, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1309, ptr @fun_Core_iterator_128_equals_else.558, align 8
  %1310 = load ptr, ptr @fun_Core_iterator_128_equals_then, align 8
  %1311 = load ptr, ptr @fun_Core_iterator_128_equals_else.558, align 8
  %1312 = call ptr @candy_builtin_if_else(ptr %1303, ptr %1310, ptr %1311)
  %1313 = load ptr, ptr @num_0, align 8
  %1314 = call ptr @candy_builtin_list_get(ptr %1312, ptr %1313)
  %1315 = load ptr, ptr @tag_Match, align 8
  %1316 = call ptr @candy_builtin_equals(ptr %1314, ptr %1315)
  %1317 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1318 = getelementptr inbounds { ptr }, ptr %1317, i32 0, i32 0
  store ptr %1312, ptr %1318, align 8
  %1319 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.559, ptr %1317, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1319, ptr @fun_Core_iterator_128_isMatch_else.560, align 8
  %1320 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1321 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.560, align 8
  %1322 = call ptr @candy_builtin_if_else(ptr %1316, ptr %1320, ptr %1321)
  %1323 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:item\00", ptr %1323, align 1
  %1324 = call ptr @make_candy_text(ptr %1323)
  store ptr %1324, ptr @"Core:iterator:item", align 8
  %1325 = load ptr, ptr @num_1, align 8
  %1326 = call ptr @candy_builtin_list_get(ptr %1312, ptr %1325)
  %1327 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:rest\00", ptr %1327, align 1
  %1328 = call ptr @make_candy_text(ptr %1327)
  store ptr %1328, ptr @"Core:iterator:rest", align 8
  %1329 = load ptr, ptr @num_2, align 8
  %1330 = call ptr @candy_builtin_list_get(ptr %1312, ptr %1329)
  %1331 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:133\00", ptr %1331, align 1
  %1332 = call ptr @make_candy_text(ptr %1331)
  store ptr %1332, ptr @"Core:iterator:133", align 8
  %1333 = load ptr, ptr @num_1, align 8
  %1334 = call ptr @Core_check_checkEquals(ptr %1326, ptr %1333)
  %1335 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:136\00", ptr %1335, align 1
  %1336 = call ptr @make_candy_text(ptr %1335)
  store ptr %1336, ptr @"Core:iterator:136", align 8
  %1337 = call ptr @Core_iterator_next(ptr %1330)
  %1338 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:137\00", ptr %1338, align 1
  %1339 = call ptr @make_candy_text(ptr %1338)
  store ptr %1339, ptr @"Core:iterator:137", align 8
  %1340 = call ptr @candy_builtin_type_of(ptr %1337)
  %1341 = load ptr, ptr @tag_Tag, align 8
  %1342 = call ptr @candy_builtin_equals(ptr %1341, ptr %1340)
  %1343 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1344 = getelementptr inbounds { ptr }, ptr %1343, i32 0, i32 0
  store ptr %1337, ptr %1344, align 8
  %1345 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then, ptr %1343, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1345, ptr @fun_Core_iterator_137_equals_then, align 8
  %1346 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1347 = getelementptr inbounds { ptr }, ptr %1346, i32 0, i32 0
  store ptr %1340, ptr %1347, align 8
  %1348 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.579, ptr %1346, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1348, ptr @fun_Core_iterator_137_equals_else.580, align 8
  %1349 = load ptr, ptr @fun_Core_iterator_137_equals_then, align 8
  %1350 = load ptr, ptr @fun_Core_iterator_137_equals_else.580, align 8
  %1351 = call ptr @candy_builtin_if_else(ptr %1342, ptr %1349, ptr %1350)
  %1352 = load ptr, ptr @num_0, align 8
  %1353 = call ptr @candy_builtin_list_get(ptr %1351, ptr %1352)
  %1354 = load ptr, ptr @tag_Match, align 8
  %1355 = call ptr @candy_builtin_equals(ptr %1353, ptr %1354)
  %1356 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1357 = getelementptr inbounds { ptr }, ptr %1356, i32 0, i32 0
  store ptr %1351, ptr %1357, align 8
  %1358 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.581, ptr %1356, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1358, ptr @fun_Core_iterator_137_isMatch_else.582, align 8
  %1359 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1360 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.582, align 8
  %1361 = call ptr @candy_builtin_if_else(ptr %1355, ptr %1359, ptr %1360)
  %1362 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:item#1\00", ptr %1362, align 1
  %1363 = call ptr @make_candy_text(ptr %1362)
  store ptr %1363, ptr @"Core:iterator:item#1", align 8
  %1364 = load ptr, ptr @num_1, align 8
  %1365 = call ptr @candy_builtin_list_get(ptr %1351, ptr %1364)
  %1366 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:rest#1\00", ptr %1366, align 1
  %1367 = call ptr @make_candy_text(ptr %1366)
  store ptr %1367, ptr @"Core:iterator:rest#1", align 8
  %1368 = load ptr, ptr @num_2, align 8
  %1369 = call ptr @candy_builtin_list_get(ptr %1351, ptr %1368)
  %1370 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:142\00", ptr %1370, align 1
  %1371 = call ptr @make_candy_text(ptr %1370)
  store ptr %1371, ptr @"Core:iterator:142", align 8
  %1372 = load ptr, ptr @num_2, align 8
  %1373 = call ptr @Core_check_checkEquals(ptr %1365, ptr %1372)
  %1374 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:147\00", ptr %1374, align 1
  %1375 = call ptr @make_candy_text(ptr %1374)
  store ptr %1375, ptr @"Core:iterator:147", align 8
  %1376 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1377 = call ptr @make_candy_function(ptr @Core_iterator_isEmpty_2, ptr %1376, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1377, ptr @fun_Core_iterator_isEmpty_2, align 8
  %1378 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %1379 = call ptr @Core_iterator_wrapSafe(ptr %1264, ptr %1378)
  %1380 = call ptr @Core_iterator_next(ptr %1379)
  %1381 = load ptr, ptr @tag_Empty, align 8
  %1382 = call ptr @candy_builtin_equals(ptr %1380, ptr %1381)
  %1383 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:149\00", ptr %1383, align 1
  %1384 = call ptr @make_candy_text(ptr %1383)
  store ptr %1384, ptr @"Core:iterator:149", align 8
  %1385 = load ptr, ptr @tag_False, align 8
  %1386 = call ptr @Core_check_checkEquals(ptr %1382, ptr %1385)
  %1387 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:154\00", ptr %1387, align 1
  %1388 = call ptr @make_candy_text(ptr %1387)
  store ptr %1388, ptr @"Core:iterator:154", align 8
  %1389 = load ptr, ptr @194, align 8
  %1390 = call ptr @Core_iterator_fromList(ptr %1389)
  %1391 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:155\00", ptr %1391, align 1
  %1392 = call ptr @make_candy_text(ptr %1391)
  store ptr %1392, ptr @"Core:iterator:155", align 8
  %1393 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1394 = call ptr @make_candy_function(ptr @Core_iterator_isEmpty_2.583, ptr %1393, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1394, ptr @fun_Core_iterator_isEmpty_2.584, align 8
  %1395 = load ptr, ptr @fun_Core_iterator_isEmpty_2.584, align 8
  %1396 = call ptr @Core_iterator_wrapSafe(ptr %1390, ptr %1395)
  %1397 = call ptr @Core_iterator_next(ptr %1396)
  %1398 = load ptr, ptr @tag_Empty, align 8
  %1399 = call ptr @candy_builtin_equals(ptr %1397, ptr %1398)
  %1400 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:157\00", ptr %1400, align 1
  %1401 = call ptr @make_candy_text(ptr %1400)
  store ptr %1401, ptr @"Core:iterator:157", align 8
  %1402 = load ptr, ptr @tag_True, align 8
  %1403 = call ptr @Core_check_checkEquals(ptr %1399, ptr %1402)
  %1404 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:161:10\00", ptr %1404, align 1
  %1405 = call ptr @make_candy_text(ptr %1404)
  store ptr %1405, ptr @"Core:iterator:161:10", align 8
  %1406 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1407 = call ptr @make_candy_function(ptr @Core_iterator_161, ptr %1406, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1407, ptr @fun_Core_iterator_161, align 8
  %1408 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:162\00", ptr %1408, align 1
  %1409 = call ptr @make_candy_text(ptr %1408)
  store ptr %1409, ptr @"Core:iterator:162", align 8
  %1410 = load ptr, ptr @fun_Core_iterator_161, align 8
  %1411 = call ptr @Core_iterator_map(ptr %1264, ptr %1410)
  %1412 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:164\00", ptr %1412, align 1
  %1413 = call ptr @make_candy_text(ptr %1412)
  store ptr %1413, ptr @"Core:iterator:164", align 8
  %1414 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1415 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.585, ptr %1414, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1415, ptr @fun_Core_iterator_toList_2.586, align 8
  %1416 = load ptr, ptr @fun_Core_iterator_toList_2.586, align 8
  %1417 = call ptr @Core_iterator_wrapSafe(ptr %1411, ptr %1416)
  %1418 = load ptr, ptr @194, align 8
  %1419 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1420 = call ptr @Core_iterator_foldLeft(ptr %1417, ptr %1418, ptr %1419)
  %1421 = alloca ptr, i64 4, align 8
  %1422 = load ptr, ptr @num_2, align 8
  %1423 = getelementptr ptr, ptr %1421, i64 0
  store ptr %1422, ptr %1423, align 8
  %1424 = load ptr, ptr @num_4, align 8
  %1425 = getelementptr ptr, ptr %1421, i64 1
  store ptr %1424, ptr %1425, align 8
  %1426 = load ptr, ptr @num_6, align 8
  %1427 = getelementptr ptr, ptr %1421, i64 2
  store ptr %1426, ptr %1427, align 8
  %1428 = getelementptr ptr, ptr %1421, i64 3
  store ptr null, ptr %1428, align 8
  %1429 = call ptr @make_candy_list(ptr %1421)
  store ptr %1429, ptr @213, align 8
  %1430 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:169\00", ptr %1430, align 1
  %1431 = call ptr @make_candy_text(ptr %1430)
  store ptr %1431, ptr @"Core:iterator:169", align 8
  %1432 = load ptr, ptr @213, align 8
  %1433 = call ptr @Core_check_checkEquals(ptr %1420, ptr %1432)
  %1434 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:173\00", ptr %1434, align 1
  %1435 = call ptr @make_candy_text(ptr %1434)
  store ptr %1435, ptr @"Core:iterator:173", align 8
  %1436 = call ptr @Core_iterator_sum(ptr %1264)
  %1437 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:175\00", ptr %1437, align 1
  %1438 = call ptr @make_candy_text(ptr %1437)
  store ptr %1438, ptr @"Core:iterator:175", align 8
  %1439 = load ptr, ptr @num_6, align 8
  %1440 = call ptr @Core_check_checkEquals(ptr %1436, ptr %1439)
  %1441 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:179\00", ptr %1441, align 1
  %1442 = call ptr @make_candy_text(ptr %1441)
  store ptr %1442, ptr @"Core:iterator:179", align 8
  %1443 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1444 = call ptr @make_candy_function(ptr @Core_iterator_length_2, ptr %1443, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1444, ptr @fun_Core_iterator_length_2, align 8
  %1445 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %1446 = call ptr @Core_iterator_wrapSafe(ptr %1264, ptr %1445)
  %1447 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %1448 = call ptr @Core_iterator_map(ptr %1446, ptr %1447)
  %1449 = call ptr @Core_iterator_sum(ptr %1448)
  %1450 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:181\00", ptr %1450, align 1
  %1451 = call ptr @make_candy_text(ptr %1450)
  store ptr %1451, ptr @"Core:iterator:181", align 8
  %1452 = load ptr, ptr @num_3, align 8
  %1453 = call ptr @Core_check_checkEquals(ptr %1449, ptr %1452)
  %1454 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:185:9\00", ptr %1454, align 1
  %1455 = call ptr @make_candy_text(ptr %1454)
  store ptr %1455, ptr @"Core:iterator:185:9", align 8
  %1456 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1457 = call ptr @make_candy_function(ptr @Core_iterator_185, ptr %1456, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1457, ptr @fun_Core_iterator_185, align 8
  %1458 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:186\00", ptr %1458, align 1
  %1459 = call ptr @make_candy_text(ptr %1458)
  store ptr %1459, ptr @"Core:iterator:186", align 8
  %1460 = load ptr, ptr @fun_Core_iterator_185, align 8
  %1461 = call ptr @Core_iterator_all(ptr %1264, ptr %1460)
  %1462 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:188\00", ptr %1462, align 1
  %1463 = call ptr @make_candy_text(ptr %1462)
  store ptr %1463, ptr @"Core:iterator:188", align 8
  %1464 = load ptr, ptr @tag_True, align 8
  %1465 = call ptr @Core_check_checkEquals(ptr %1461, ptr %1464)
  %1466 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1467 = call ptr @make_candy_function(ptr @Core_iterator_192, ptr %1466, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1467, ptr @fun_Core_iterator_192, align 8
  %1468 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:193\00", ptr %1468, align 1
  %1469 = call ptr @make_candy_text(ptr %1468)
  store ptr %1469, ptr @"Core:iterator:193", align 8
  %1470 = load ptr, ptr @fun_Core_iterator_192, align 8
  %1471 = call ptr @Core_iterator_any(ptr %1264, ptr %1470)
  %1472 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:195\00", ptr %1472, align 1
  %1473 = call ptr @make_candy_text(ptr %1472)
  store ptr %1473, ptr @"Core:iterator:195", align 8
  %1474 = load ptr, ptr @tag_True, align 8
  %1475 = call ptr @Core_check_checkEquals(ptr %1471, ptr %1474)
  %1476 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:200\00", ptr %1476, align 1
  %1477 = call ptr @make_candy_text(ptr %1476)
  store ptr %1477, ptr @"Core:iterator:200", align 8
  %1478 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %1479 = call ptr @Core_iterator_map(ptr %1264, ptr %1478)
  %1480 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:202\00", ptr %1480, align 1
  %1481 = call ptr @make_candy_text(ptr %1480)
  store ptr %1481, ptr @"Core:iterator:202", align 8
  %1482 = call ptr @Core_iterator_joinToText(ptr %1479)
  %1483 = alloca i8, i64 4, align 1
  store [4 x i8] c"123\00", ptr %1483, align 1
  %1484 = call ptr @make_candy_text(ptr %1483)
  store ptr %1484, ptr @text_123, align 8
  %1485 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:210\00", ptr %1485, align 1
  %1486 = call ptr @make_candy_text(ptr %1485)
  store ptr %1486, ptr @"Core:iterator:210", align 8
  %1487 = load ptr, ptr @text_123, align 8
  %1488 = call ptr @Core_check_checkEquals(ptr %1482, ptr %1487)
  %1489 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:214:9\00", ptr %1489, align 1
  %1490 = call ptr @make_candy_text(ptr %1489)
  store ptr %1490, ptr @"Core:iterator:214:9", align 8
  %1491 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1492 = call ptr @make_candy_function(ptr @Core_iterator_214, ptr %1491, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1492, ptr @fun_Core_iterator_214, align 8
  %1493 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:215\00", ptr %1493, align 1
  %1494 = call ptr @make_candy_text(ptr %1493)
  store ptr %1494, ptr @"Core:iterator:215", align 8
  %1495 = load ptr, ptr @fun_Core_iterator_214, align 8
  %1496 = call ptr @Core_iterator_where(ptr %1295, ptr %1495)
  %1497 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:217\00", ptr %1497, align 1
  %1498 = call ptr @make_candy_text(ptr %1497)
  store ptr %1498, ptr @"Core:iterator:217", align 8
  %1499 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1500 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.587, ptr %1499, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1500, ptr @fun_Core_iterator_toList_2.588, align 8
  %1501 = load ptr, ptr @fun_Core_iterator_toList_2.588, align 8
  %1502 = call ptr @Core_iterator_wrapSafe(ptr %1496, ptr %1501)
  %1503 = load ptr, ptr @194, align 8
  %1504 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1505 = call ptr @Core_iterator_foldLeft(ptr %1502, ptr %1503, ptr %1504)
  %1506 = alloca ptr, i64 6, align 8
  %1507 = load ptr, ptr @num_1, align 8
  %1508 = getelementptr ptr, ptr %1506, i64 0
  store ptr %1507, ptr %1508, align 8
  %1509 = load ptr, ptr @num_3, align 8
  %1510 = getelementptr ptr, ptr %1506, i64 1
  store ptr %1509, ptr %1510, align 8
  %1511 = load ptr, ptr @num_5, align 8
  %1512 = getelementptr ptr, ptr %1506, i64 2
  store ptr %1511, ptr %1512, align 8
  %1513 = load ptr, ptr @num_7, align 8
  %1514 = getelementptr ptr, ptr %1506, i64 3
  store ptr %1513, ptr %1514, align 8
  %1515 = load ptr, ptr @num_9, align 8
  %1516 = getelementptr ptr, ptr %1506, i64 4
  store ptr %1515, ptr %1516, align 8
  %1517 = getelementptr ptr, ptr %1506, i64 5
  store ptr null, ptr %1517, align 8
  %1518 = call ptr @make_candy_list(ptr %1506)
  store ptr %1518, ptr @214, align 8
  %1519 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:224\00", ptr %1519, align 1
  %1520 = call ptr @make_candy_text(ptr %1519)
  store ptr %1520, ptr @"Core:iterator:224", align 8
  %1521 = load ptr, ptr @214, align 8
  %1522 = call ptr @Core_check_checkEquals(ptr %1505, ptr %1521)
  %1523 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:228:10\00", ptr %1523, align 1
  %1524 = call ptr @make_candy_text(ptr %1523)
  store ptr %1524, ptr @"Core:iterator:228:10", align 8
  %1525 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1526 = call ptr @make_candy_function(ptr @Core_iterator_228, ptr %1525, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1526, ptr @fun_Core_iterator_228, align 8
  %1527 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:229\00", ptr %1527, align 1
  %1528 = call ptr @make_candy_text(ptr %1527)
  store ptr %1528, ptr @"Core:iterator:229", align 8
  %1529 = load ptr, ptr @fun_Core_iterator_228, align 8
  %1530 = call ptr @Core_iterator_takeWhile(ptr %1295, ptr %1529)
  %1531 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:231\00", ptr %1531, align 1
  %1532 = call ptr @make_candy_text(ptr %1531)
  store ptr %1532, ptr @"Core:iterator:231", align 8
  %1533 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1534 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.589, ptr %1533, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1534, ptr @fun_Core_iterator_toList_2.590, align 8
  %1535 = load ptr, ptr @fun_Core_iterator_toList_2.590, align 8
  %1536 = call ptr @Core_iterator_wrapSafe(ptr %1530, ptr %1535)
  %1537 = load ptr, ptr @194, align 8
  %1538 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1539 = call ptr @Core_iterator_foldLeft(ptr %1536, ptr %1537, ptr %1538)
  %1540 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:236\00", ptr %1540, align 1
  %1541 = call ptr @make_candy_text(ptr %1540)
  store ptr %1541, ptr @"Core:iterator:236", align 8
  %1542 = load ptr, ptr @195, align 8
  %1543 = call ptr @Core_check_checkEquals(ptr %1539, ptr %1542)
  %1544 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:241\00", ptr %1544, align 1
  %1545 = call ptr @make_candy_text(ptr %1544)
  store ptr %1545, ptr @"Core:iterator:241", align 8
  %1546 = load ptr, ptr @num_4, align 8
  %1547 = call ptr @Core_iterator_take(ptr %1295, ptr %1546)
  %1548 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:243\00", ptr %1548, align 1
  %1549 = call ptr @make_candy_text(ptr %1548)
  store ptr %1549, ptr @"Core:iterator:243", align 8
  %1550 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1551 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.591, ptr %1550, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1551, ptr @fun_Core_iterator_toList_2.592, align 8
  %1552 = load ptr, ptr @fun_Core_iterator_toList_2.592, align 8
  %1553 = call ptr @Core_iterator_wrapSafe(ptr %1547, ptr %1552)
  %1554 = load ptr, ptr @194, align 8
  %1555 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1556 = call ptr @Core_iterator_foldLeft(ptr %1553, ptr %1554, ptr %1555)
  %1557 = alloca ptr, i64 5, align 8
  %1558 = load ptr, ptr @num_1, align 8
  %1559 = getelementptr ptr, ptr %1557, i64 0
  store ptr %1558, ptr %1559, align 8
  %1560 = load ptr, ptr @num_2, align 8
  %1561 = getelementptr ptr, ptr %1557, i64 1
  store ptr %1560, ptr %1561, align 8
  %1562 = load ptr, ptr @num_3, align 8
  %1563 = getelementptr ptr, ptr %1557, i64 2
  store ptr %1562, ptr %1563, align 8
  %1564 = load ptr, ptr @num_4, align 8
  %1565 = getelementptr ptr, ptr %1557, i64 3
  store ptr %1564, ptr %1565, align 8
  %1566 = getelementptr ptr, ptr %1557, i64 4
  store ptr null, ptr %1566, align 8
  %1567 = call ptr @make_candy_list(ptr %1557)
  store ptr %1567, ptr @215, align 8
  %1568 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:249\00", ptr %1568, align 1
  %1569 = call ptr @make_candy_text(ptr %1568)
  store ptr %1569, ptr @"Core:iterator:249", align 8
  %1570 = load ptr, ptr @215, align 8
  %1571 = call ptr @Core_check_checkEquals(ptr %1556, ptr %1570)
  %1572 = call ptr @make_candy_int(i64 12)
  store ptr %1572, ptr @num_12, align 8
  %1573 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:254\00", ptr %1573, align 1
  %1574 = call ptr @make_candy_text(ptr %1573)
  store ptr %1574, ptr @"Core:iterator:254", align 8
  %1575 = load ptr, ptr @num_12, align 8
  %1576 = call ptr @Core_iterator_take(ptr %1295, ptr %1575)
  %1577 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:256\00", ptr %1577, align 1
  %1578 = call ptr @make_candy_text(ptr %1577)
  store ptr %1578, ptr @"Core:iterator:256", align 8
  %1579 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1580 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.593, ptr %1579, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1580, ptr @fun_Core_iterator_toList_2.594, align 8
  %1581 = load ptr, ptr @fun_Core_iterator_toList_2.594, align 8
  %1582 = call ptr @Core_iterator_wrapSafe(ptr %1576, ptr %1581)
  %1583 = load ptr, ptr @194, align 8
  %1584 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1585 = call ptr @Core_iterator_foldLeft(ptr %1582, ptr %1583, ptr %1584)
  %1586 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:268\00", ptr %1586, align 1
  %1587 = call ptr @make_candy_text(ptr %1586)
  store ptr %1587, ptr @"Core:iterator:268", align 8
  %1588 = load ptr, ptr @196, align 8
  %1589 = call ptr @Core_check_checkEquals(ptr %1585, ptr %1588)
  %1590 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:273\00", ptr %1590, align 1
  %1591 = call ptr @make_candy_text(ptr %1590)
  store ptr %1591, ptr @"Core:iterator:273", align 8
  %1592 = load ptr, ptr @num_4, align 8
  %1593 = call ptr @Core_iterator_skip(ptr %1295, ptr %1592)
  %1594 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:275\00", ptr %1594, align 1
  %1595 = call ptr @make_candy_text(ptr %1594)
  store ptr %1595, ptr @"Core:iterator:275", align 8
  %1596 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1597 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.595, ptr %1596, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1597, ptr @fun_Core_iterator_toList_2.596, align 8
  %1598 = load ptr, ptr @fun_Core_iterator_toList_2.596, align 8
  %1599 = call ptr @Core_iterator_wrapSafe(ptr %1593, ptr %1598)
  %1600 = load ptr, ptr @194, align 8
  %1601 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1602 = call ptr @Core_iterator_foldLeft(ptr %1599, ptr %1600, ptr %1601)
  %1603 = alloca ptr, i64 7, align 8
  %1604 = load ptr, ptr @num_5, align 8
  %1605 = getelementptr ptr, ptr %1603, i64 0
  store ptr %1604, ptr %1605, align 8
  %1606 = load ptr, ptr @num_6, align 8
  %1607 = getelementptr ptr, ptr %1603, i64 1
  store ptr %1606, ptr %1607, align 8
  %1608 = load ptr, ptr @num_7, align 8
  %1609 = getelementptr ptr, ptr %1603, i64 2
  store ptr %1608, ptr %1609, align 8
  %1610 = load ptr, ptr @num_8, align 8
  %1611 = getelementptr ptr, ptr %1603, i64 3
  store ptr %1610, ptr %1611, align 8
  %1612 = load ptr, ptr @num_9, align 8
  %1613 = getelementptr ptr, ptr %1603, i64 4
  store ptr %1612, ptr %1613, align 8
  %1614 = load ptr, ptr @num_10, align 8
  %1615 = getelementptr ptr, ptr %1603, i64 5
  store ptr %1614, ptr %1615, align 8
  %1616 = getelementptr ptr, ptr %1603, i64 6
  store ptr null, ptr %1616, align 8
  %1617 = call ptr @make_candy_list(ptr %1603)
  store ptr %1617, ptr @216, align 8
  %1618 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:283\00", ptr %1618, align 1
  %1619 = call ptr @make_candy_text(ptr %1618)
  store ptr %1619, ptr @"Core:iterator:283", align 8
  %1620 = load ptr, ptr @216, align 8
  %1621 = call ptr @Core_check_checkEquals(ptr %1602, ptr %1620)
  %1622 = call ptr @make_candy_int(i64 40)
  store ptr %1622, ptr @num_40, align 8
  %1623 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:288\00", ptr %1623, align 1
  %1624 = call ptr @make_candy_text(ptr %1623)
  store ptr %1624, ptr @"Core:iterator:288", align 8
  %1625 = load ptr, ptr @num_40, align 8
  %1626 = call ptr @Core_iterator_skip(ptr %1295, ptr %1625)
  %1627 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:290\00", ptr %1627, align 1
  %1628 = call ptr @make_candy_text(ptr %1627)
  store ptr %1628, ptr @"Core:iterator:290", align 8
  %1629 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1630 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.597, ptr %1629, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1630, ptr @fun_Core_iterator_toList_2.598, align 8
  %1631 = load ptr, ptr @fun_Core_iterator_toList_2.598, align 8
  %1632 = call ptr @Core_iterator_wrapSafe(ptr %1626, ptr %1631)
  %1633 = load ptr, ptr @194, align 8
  %1634 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1635 = call ptr @Core_iterator_foldLeft(ptr %1632, ptr %1633, ptr %1634)
  %1636 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:292\00", ptr %1636, align 1
  %1637 = call ptr @make_candy_text(ptr %1636)
  store ptr %1637, ptr @"Core:iterator:292", align 8
  %1638 = load ptr, ptr @194, align 8
  %1639 = call ptr @Core_check_checkEquals(ptr %1635, ptr %1638)
  %1640 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:299\00", ptr %1640, align 1
  %1641 = call ptr @make_candy_text(ptr %1640)
  store ptr %1641, ptr @"Core:iterator:299", align 8
  %1642 = load ptr, ptr @num_4, align 8
  %1643 = load ptr, ptr @num_3, align 8
  %1644 = load ptr, ptr @tag_False, align 8
  %1645 = call ptr @Core_iterator_windowed(ptr %1295, ptr %1642, ptr %1643, ptr %1644)
  %1646 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:301\00", ptr %1646, align 1
  %1647 = call ptr @make_candy_text(ptr %1646)
  store ptr %1647, ptr @"Core:iterator:301", align 8
  %1648 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1649 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.599, ptr %1648, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1649, ptr @fun_Core_iterator_toList_2.600, align 8
  %1650 = load ptr, ptr @fun_Core_iterator_toList_2.600, align 8
  %1651 = call ptr @Core_iterator_wrapSafe(ptr %1645, ptr %1650)
  %1652 = load ptr, ptr @194, align 8
  %1653 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1654 = call ptr @Core_iterator_foldLeft(ptr %1651, ptr %1652, ptr %1653)
  %1655 = alloca ptr, i64 5, align 8
  %1656 = load ptr, ptr @num_4, align 8
  %1657 = getelementptr ptr, ptr %1655, i64 0
  store ptr %1656, ptr %1657, align 8
  %1658 = load ptr, ptr @num_5, align 8
  %1659 = getelementptr ptr, ptr %1655, i64 1
  store ptr %1658, ptr %1659, align 8
  %1660 = load ptr, ptr @num_6, align 8
  %1661 = getelementptr ptr, ptr %1655, i64 2
  store ptr %1660, ptr %1661, align 8
  %1662 = load ptr, ptr @num_7, align 8
  %1663 = getelementptr ptr, ptr %1655, i64 3
  store ptr %1662, ptr %1663, align 8
  %1664 = getelementptr ptr, ptr %1655, i64 4
  store ptr null, ptr %1664, align 8
  %1665 = call ptr @make_candy_list(ptr %1655)
  store ptr %1665, ptr @217, align 8
  %1666 = alloca ptr, i64 5, align 8
  %1667 = load ptr, ptr @num_7, align 8
  %1668 = getelementptr ptr, ptr %1666, i64 0
  store ptr %1667, ptr %1668, align 8
  %1669 = load ptr, ptr @num_8, align 8
  %1670 = getelementptr ptr, ptr %1666, i64 1
  store ptr %1669, ptr %1670, align 8
  %1671 = load ptr, ptr @num_9, align 8
  %1672 = getelementptr ptr, ptr %1666, i64 2
  store ptr %1671, ptr %1672, align 8
  %1673 = load ptr, ptr @num_10, align 8
  %1674 = getelementptr ptr, ptr %1666, i64 3
  store ptr %1673, ptr %1674, align 8
  %1675 = getelementptr ptr, ptr %1666, i64 4
  store ptr null, ptr %1675, align 8
  %1676 = call ptr @make_candy_list(ptr %1666)
  store ptr %1676, ptr @218, align 8
  %1677 = alloca ptr, i64 4, align 8
  %1678 = load ptr, ptr @215, align 8
  %1679 = getelementptr ptr, ptr %1677, i64 0
  store ptr %1678, ptr %1679, align 8
  %1680 = load ptr, ptr @217, align 8
  %1681 = getelementptr ptr, ptr %1677, i64 1
  store ptr %1680, ptr %1681, align 8
  %1682 = load ptr, ptr @218, align 8
  %1683 = getelementptr ptr, ptr %1677, i64 2
  store ptr %1682, ptr %1683, align 8
  %1684 = getelementptr ptr, ptr %1677, i64 3
  store ptr null, ptr %1684, align 8
  %1685 = call ptr @make_candy_list(ptr %1677)
  store ptr %1685, ptr @219, align 8
  %1686 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:318\00", ptr %1686, align 1
  %1687 = call ptr @make_candy_text(ptr %1686)
  store ptr %1687, ptr @"Core:iterator:318", align 8
  %1688 = load ptr, ptr @219, align 8
  %1689 = call ptr @Core_check_checkEquals(ptr %1654, ptr %1688)
  %1690 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:323\00", ptr %1690, align 1
  %1691 = call ptr @make_candy_text(ptr %1690)
  store ptr %1691, ptr @"Core:iterator:323", align 8
  %1692 = load ptr, ptr @num_3, align 8
  %1693 = call ptr @Core_iterator_chunked(ptr %1295, ptr %1692)
  %1694 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:325\00", ptr %1694, align 1
  %1695 = call ptr @make_candy_text(ptr %1694)
  store ptr %1695, ptr @"Core:iterator:325", align 8
  %1696 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1697 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.601, ptr %1696, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1697, ptr @fun_Core_iterator_toList_2.602, align 8
  %1698 = load ptr, ptr @fun_Core_iterator_toList_2.602, align 8
  %1699 = call ptr @Core_iterator_wrapSafe(ptr %1693, ptr %1698)
  %1700 = load ptr, ptr @194, align 8
  %1701 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1702 = call ptr @Core_iterator_foldLeft(ptr %1699, ptr %1700, ptr %1701)
  %1703 = alloca ptr, i64 4, align 8
  %1704 = load ptr, ptr @num_4, align 8
  %1705 = getelementptr ptr, ptr %1703, i64 0
  store ptr %1704, ptr %1705, align 8
  %1706 = load ptr, ptr @num_5, align 8
  %1707 = getelementptr ptr, ptr %1703, i64 1
  store ptr %1706, ptr %1707, align 8
  %1708 = load ptr, ptr @num_6, align 8
  %1709 = getelementptr ptr, ptr %1703, i64 2
  store ptr %1708, ptr %1709, align 8
  %1710 = getelementptr ptr, ptr %1703, i64 3
  store ptr null, ptr %1710, align 8
  %1711 = call ptr @make_candy_list(ptr %1703)
  store ptr %1711, ptr @220, align 8
  %1712 = alloca ptr, i64 4, align 8
  %1713 = load ptr, ptr @num_7, align 8
  %1714 = getelementptr ptr, ptr %1712, i64 0
  store ptr %1713, ptr %1714, align 8
  %1715 = load ptr, ptr @num_8, align 8
  %1716 = getelementptr ptr, ptr %1712, i64 1
  store ptr %1715, ptr %1716, align 8
  %1717 = load ptr, ptr @num_9, align 8
  %1718 = getelementptr ptr, ptr %1712, i64 2
  store ptr %1717, ptr %1718, align 8
  %1719 = getelementptr ptr, ptr %1712, i64 3
  store ptr null, ptr %1719, align 8
  %1720 = call ptr @make_candy_list(ptr %1712)
  store ptr %1720, ptr @221, align 8
  %1721 = alloca ptr, i64 2, align 8
  %1722 = load ptr, ptr @num_10, align 8
  %1723 = getelementptr ptr, ptr %1721, i64 0
  store ptr %1722, ptr %1723, align 8
  %1724 = getelementptr ptr, ptr %1721, i64 1
  store ptr null, ptr %1724, align 8
  %1725 = call ptr @make_candy_list(ptr %1721)
  store ptr %1725, ptr @222, align 8
  %1726 = alloca ptr, i64 5, align 8
  %1727 = load ptr, ptr @195, align 8
  %1728 = getelementptr ptr, ptr %1726, i64 0
  store ptr %1727, ptr %1728, align 8
  %1729 = load ptr, ptr @220, align 8
  %1730 = getelementptr ptr, ptr %1726, i64 1
  store ptr %1729, ptr %1730, align 8
  %1731 = load ptr, ptr @221, align 8
  %1732 = getelementptr ptr, ptr %1726, i64 2
  store ptr %1731, ptr %1732, align 8
  %1733 = load ptr, ptr @222, align 8
  %1734 = getelementptr ptr, ptr %1726, i64 3
  store ptr %1733, ptr %1734, align 8
  %1735 = getelementptr ptr, ptr %1726, i64 4
  store ptr null, ptr %1735, align 8
  %1736 = call ptr @make_candy_list(ptr %1726)
  store ptr %1736, ptr @223, align 8
  %1737 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:341\00", ptr %1737, align 1
  %1738 = call ptr @make_candy_text(ptr %1737)
  store ptr %1738, ptr @"Core:iterator:341", align 8
  %1739 = load ptr, ptr @223, align 8
  %1740 = call ptr @Core_check_checkEquals(ptr %1702, ptr %1739)
  %1741 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %1741, align 1
  %1742 = call ptr @make_candy_tag(ptr %1741, ptr null)
  store ptr %1742, ptr @tag_Stdout, align 8
  %1743 = alloca i8, i64 29, align 1
  store [29 x i8] c"Examples:iterator:21:print:7\00", ptr %1743, align 1
  %1744 = call ptr @make_candy_text(ptr %1743)
  store ptr %1744, ptr @"Examples:iterator:21:print:7", align 8
  %1745 = alloca i8, i64 29, align 1
  store [29 x i8] c"Examples:iterator:21:print:9\00", ptr %1745, align 1
  %1746 = call ptr @make_candy_text(ptr %1745)
  store ptr %1746, ptr @"Examples:iterator:21:print:9", align 8
  %1747 = alloca i8, i64 2, align 1
  store [2 x i8] c"H\00", ptr %1747, align 1
  %1748 = call ptr @make_candy_text(ptr %1747)
  store ptr %1748, ptr @text_H, align 8
  %1749 = alloca i8, i64 2, align 1
  store [2 x i8] c"e\00", ptr %1749, align 1
  %1750 = call ptr @make_candy_text(ptr %1749)
  store ptr %1750, ptr @text_e, align 8
  %1751 = alloca i8, i64 2, align 1
  store [2 x i8] c"l\00", ptr %1751, align 1
  %1752 = call ptr @make_candy_text(ptr %1751)
  store ptr %1752, ptr @text_l, align 8
  %1753 = alloca i8, i64 2, align 1
  store [2 x i8] c"o\00", ptr %1753, align 1
  %1754 = call ptr @make_candy_text(ptr %1753)
  store ptr %1754, ptr @text_o, align 8
  %1755 = alloca i8, i64 2, align 1
  store [2 x i8] c",\00", ptr %1755, align 1
  %1756 = call ptr @make_candy_text(ptr %1755)
  store ptr %1756, ptr @"text_,", align 8
  %1757 = alloca i8, i64 2, align 1
  store [2 x i8] c" \00", ptr %1757, align 1
  %1758 = call ptr @make_candy_text(ptr %1757)
  store ptr %1758, ptr @"text_ ", align 8
  %1759 = alloca i8, i64 2, align 1
  store [2 x i8] c"w\00", ptr %1759, align 1
  %1760 = call ptr @make_candy_text(ptr %1759)
  store ptr %1760, ptr @text_w, align 8
  %1761 = alloca i8, i64 2, align 1
  store [2 x i8] c"r\00", ptr %1761, align 1
  %1762 = call ptr @make_candy_text(ptr %1761)
  store ptr %1762, ptr @text_r, align 8
  %1763 = alloca i8, i64 2, align 1
  store [2 x i8] c"d\00", ptr %1763, align 1
  %1764 = call ptr @make_candy_text(ptr %1763)
  store ptr %1764, ptr @text_d, align 8
  %1765 = alloca i8, i64 2, align 1
  store [2 x i8] c"!\00", ptr %1765, align 1
  %1766 = call ptr @make_candy_text(ptr %1765)
  store ptr %1766, ptr @"text_!", align 8
  %1767 = alloca i8, i64 2, align 1
  store [2 x i8] c"T\00", ptr %1767, align 1
  %1768 = call ptr @make_candy_text(ptr %1767)
  store ptr %1768, ptr @text_T, align 8
  %1769 = alloca i8, i64 2, align 1
  store [2 x i8] c"h\00", ptr %1769, align 1
  %1770 = call ptr @make_candy_text(ptr %1769)
  store ptr %1770, ptr @text_h, align 8
  %1771 = alloca i8, i64 2, align 1
  store [2 x i8] c"i\00", ptr %1771, align 1
  %1772 = call ptr @make_candy_text(ptr %1771)
  store ptr %1772, ptr @text_i, align 8
  %1773 = alloca i8, i64 2, align 1
  store [2 x i8] c"s\00", ptr %1773, align 1
  %1774 = call ptr @make_candy_text(ptr %1773)
  store ptr %1774, ptr @text_s, align 8
  %1775 = alloca i8, i64 2, align 1
  store [2 x i8] c"m\00", ptr %1775, align 1
  %1776 = call ptr @make_candy_text(ptr %1775)
  store ptr %1776, ptr @text_m, align 8
  %1777 = alloca i8, i64 2, align 1
  store [2 x i8] c"n\00", ptr %1777, align 1
  %1778 = call ptr @make_candy_text(ptr %1777)
  store ptr %1778, ptr @text_n, align 8
  %1779 = alloca i8, i64 2, align 1
  store [2 x i8] c"g\00", ptr %1779, align 1
  %1780 = call ptr @make_candy_text(ptr %1779)
  store ptr %1780, ptr @text_g, align 8
  %1781 = alloca i8, i64 2, align 1
  store [2 x i8] c"t\00", ptr %1781, align 1
  %1782 = call ptr @make_candy_text(ptr %1781)
  store ptr %1782, ptr @text_t, align 8
  %1783 = alloca i8, i64 2, align 1
  store [2 x i8] c"x\00", ptr %1783, align 1
  %1784 = call ptr @make_candy_text(ptr %1783)
  store ptr %1784, ptr @text_x, align 8
  %1785 = alloca i8, i64 2, align 1
  store [2 x i8] c"B\00", ptr %1785, align 1
  %1786 = call ptr @make_candy_text(ptr %1785)
  store ptr %1786, ptr @text_B, align 8
  %1787 = alloca i8, i64 2, align 1
  store [2 x i8] c"a\00", ptr %1787, align 1
  %1788 = call ptr @make_candy_text(ptr %1787)
  store ptr %1788, ptr @text_a, align 8
  %1789 = alloca i8, i64 2, align 1
  store [2 x i8] c"b\00", ptr %1789, align 1
  %1790 = call ptr @make_candy_text(ptr %1789)
  store ptr %1790, ptr @text_b, align 8
  %1791 = alloca i8, i64 2, align 1
  store [2 x i8] c"u\00", ptr %1791, align 1
  %1792 = call ptr @make_candy_text(ptr %1791)
  store ptr %1792, ptr @text_u, align 8
  %1793 = alloca ptr, i64 52, align 8
  %1794 = load ptr, ptr @text_H, align 8
  %1795 = getelementptr ptr, ptr %1793, i64 0
  store ptr %1794, ptr %1795, align 8
  %1796 = load ptr, ptr @text_e, align 8
  %1797 = getelementptr ptr, ptr %1793, i64 1
  store ptr %1796, ptr %1797, align 8
  %1798 = load ptr, ptr @text_l, align 8
  %1799 = getelementptr ptr, ptr %1793, i64 2
  store ptr %1798, ptr %1799, align 8
  %1800 = load ptr, ptr @text_l, align 8
  %1801 = getelementptr ptr, ptr %1793, i64 3
  store ptr %1800, ptr %1801, align 8
  %1802 = load ptr, ptr @text_o, align 8
  %1803 = getelementptr ptr, ptr %1793, i64 4
  store ptr %1802, ptr %1803, align 8
  %1804 = load ptr, ptr @"text_,", align 8
  %1805 = getelementptr ptr, ptr %1793, i64 5
  store ptr %1804, ptr %1805, align 8
  %1806 = load ptr, ptr @"text_ ", align 8
  %1807 = getelementptr ptr, ptr %1793, i64 6
  store ptr %1806, ptr %1807, align 8
  %1808 = load ptr, ptr @text_w, align 8
  %1809 = getelementptr ptr, ptr %1793, i64 7
  store ptr %1808, ptr %1809, align 8
  %1810 = load ptr, ptr @text_o, align 8
  %1811 = getelementptr ptr, ptr %1793, i64 8
  store ptr %1810, ptr %1811, align 8
  %1812 = load ptr, ptr @text_r, align 8
  %1813 = getelementptr ptr, ptr %1793, i64 9
  store ptr %1812, ptr %1813, align 8
  %1814 = load ptr, ptr @text_l, align 8
  %1815 = getelementptr ptr, ptr %1793, i64 10
  store ptr %1814, ptr %1815, align 8
  %1816 = load ptr, ptr @text_d, align 8
  %1817 = getelementptr ptr, ptr %1793, i64 11
  store ptr %1816, ptr %1817, align 8
  %1818 = load ptr, ptr @"text_!", align 8
  %1819 = getelementptr ptr, ptr %1793, i64 12
  store ptr %1818, ptr %1819, align 8
  %1820 = load ptr, ptr @"text_ ", align 8
  %1821 = getelementptr ptr, ptr %1793, i64 13
  store ptr %1820, ptr %1821, align 8
  %1822 = load ptr, ptr @text_T, align 8
  %1823 = getelementptr ptr, ptr %1793, i64 14
  store ptr %1822, ptr %1823, align 8
  %1824 = load ptr, ptr @text_h, align 8
  %1825 = getelementptr ptr, ptr %1793, i64 15
  store ptr %1824, ptr %1825, align 8
  %1826 = load ptr, ptr @text_i, align 8
  %1827 = getelementptr ptr, ptr %1793, i64 16
  store ptr %1826, ptr %1827, align 8
  %1828 = load ptr, ptr @text_s, align 8
  %1829 = getelementptr ptr, ptr %1793, i64 17
  store ptr %1828, ptr %1829, align 8
  %1830 = load ptr, ptr @"text_ ", align 8
  %1831 = getelementptr ptr, ptr %1793, i64 18
  store ptr %1830, ptr %1831, align 8
  %1832 = load ptr, ptr @text_i, align 8
  %1833 = getelementptr ptr, ptr %1793, i64 19
  store ptr %1832, ptr %1833, align 8
  %1834 = load ptr, ptr @text_s, align 8
  %1835 = getelementptr ptr, ptr %1793, i64 20
  store ptr %1834, ptr %1835, align 8
  %1836 = load ptr, ptr @"text_ ", align 8
  %1837 = getelementptr ptr, ptr %1793, i64 21
  store ptr %1836, ptr %1837, align 8
  %1838 = load ptr, ptr @text_s, align 8
  %1839 = getelementptr ptr, ptr %1793, i64 22
  store ptr %1838, ptr %1839, align 8
  %1840 = load ptr, ptr @text_o, align 8
  %1841 = getelementptr ptr, ptr %1793, i64 23
  store ptr %1840, ptr %1841, align 8
  %1842 = load ptr, ptr @text_m, align 8
  %1843 = getelementptr ptr, ptr %1793, i64 24
  store ptr %1842, ptr %1843, align 8
  %1844 = load ptr, ptr @text_e, align 8
  %1845 = getelementptr ptr, ptr %1793, i64 25
  store ptr %1844, ptr %1845, align 8
  %1846 = load ptr, ptr @"text_ ", align 8
  %1847 = getelementptr ptr, ptr %1793, i64 26
  store ptr %1846, ptr %1847, align 8
  %1848 = load ptr, ptr @text_l, align 8
  %1849 = getelementptr ptr, ptr %1793, i64 27
  store ptr %1848, ptr %1849, align 8
  %1850 = load ptr, ptr @text_o, align 8
  %1851 = getelementptr ptr, ptr %1793, i64 28
  store ptr %1850, ptr %1851, align 8
  %1852 = load ptr, ptr @text_n, align 8
  %1853 = getelementptr ptr, ptr %1793, i64 29
  store ptr %1852, ptr %1853, align 8
  %1854 = load ptr, ptr @text_g, align 8
  %1855 = getelementptr ptr, ptr %1793, i64 30
  store ptr %1854, ptr %1855, align 8
  %1856 = load ptr, ptr @"text_ ", align 8
  %1857 = getelementptr ptr, ptr %1793, i64 31
  store ptr %1856, ptr %1857, align 8
  %1858 = load ptr, ptr @text_t, align 8
  %1859 = getelementptr ptr, ptr %1793, i64 32
  store ptr %1858, ptr %1859, align 8
  %1860 = load ptr, ptr @text_e, align 8
  %1861 = getelementptr ptr, ptr %1793, i64 33
  store ptr %1860, ptr %1861, align 8
  %1862 = load ptr, ptr @text_x, align 8
  %1863 = getelementptr ptr, ptr %1793, i64 34
  store ptr %1862, ptr %1863, align 8
  %1864 = load ptr, ptr @text_t, align 8
  %1865 = getelementptr ptr, ptr %1793, i64 35
  store ptr %1864, ptr %1865, align 8
  %1866 = load ptr, ptr @text_., align 8
  %1867 = getelementptr ptr, ptr %1793, i64 36
  store ptr %1866, ptr %1867, align 8
  %1868 = load ptr, ptr @"text_ ", align 8
  %1869 = getelementptr ptr, ptr %1793, i64 37
  store ptr %1868, ptr %1869, align 8
  %1870 = load ptr, ptr @text_B, align 8
  %1871 = getelementptr ptr, ptr %1793, i64 38
  store ptr %1870, ptr %1871, align 8
  %1872 = load ptr, ptr @text_l, align 8
  %1873 = getelementptr ptr, ptr %1793, i64 39
  store ptr %1872, ptr %1873, align 8
  %1874 = load ptr, ptr @text_a, align 8
  %1875 = getelementptr ptr, ptr %1793, i64 40
  store ptr %1874, ptr %1875, align 8
  %1876 = load ptr, ptr @"text_ ", align 8
  %1877 = getelementptr ptr, ptr %1793, i64 41
  store ptr %1876, ptr %1877, align 8
  %1878 = load ptr, ptr @text_b, align 8
  %1879 = getelementptr ptr, ptr %1793, i64 42
  store ptr %1878, ptr %1879, align 8
  %1880 = load ptr, ptr @text_l, align 8
  %1881 = getelementptr ptr, ptr %1793, i64 43
  store ptr %1880, ptr %1881, align 8
  %1882 = load ptr, ptr @text_a, align 8
  %1883 = getelementptr ptr, ptr %1793, i64 44
  store ptr %1882, ptr %1883, align 8
  %1884 = load ptr, ptr @"text_ ", align 8
  %1885 = getelementptr ptr, ptr %1793, i64 45
  store ptr %1884, ptr %1885, align 8
  %1886 = load ptr, ptr @text_b, align 8
  %1887 = getelementptr ptr, ptr %1793, i64 46
  store ptr %1886, ptr %1887, align 8
  %1888 = load ptr, ptr @text_l, align 8
  %1889 = getelementptr ptr, ptr %1793, i64 47
  store ptr %1888, ptr %1889, align 8
  %1890 = load ptr, ptr @text_u, align 8
  %1891 = getelementptr ptr, ptr %1793, i64 48
  store ptr %1890, ptr %1891, align 8
  %1892 = load ptr, ptr @text_b, align 8
  %1893 = getelementptr ptr, ptr %1793, i64 49
  store ptr %1892, ptr %1893, align 8
  %1894 = load ptr, ptr @text_., align 8
  %1895 = getelementptr ptr, ptr %1793, i64 50
  store ptr %1894, ptr %1895, align 8
  %1896 = getelementptr ptr, ptr %1793, i64 51
  store ptr null, ptr %1896, align 8
  %1897 = call ptr @make_candy_list(ptr %1793)
  store ptr %1897, ptr @224, align 8
  %1898 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:iterator:21:24\00", ptr %1898, align 1
  %1899 = call ptr @make_candy_text(ptr %1898)
  store ptr %1899, ptr @"Examples:iterator:21:24", align 8
  %1900 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:iterator:21:34\00", ptr %1900, align 1
  %1901 = call ptr @make_candy_text(ptr %1900)
  store ptr %1901, ptr @"Examples:iterator:21:34", align 8
  %1902 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1903 = call ptr @make_candy_function(ptr @Examples_iterator_21, ptr %1902, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1903, ptr @fun_Examples_iterator_21, align 8
  %1904 = call ptr @run_candy_main(ptr @fun_Examples_iterator_21, ptr @candy_environment)
  call void @print_candy_value(ptr %1904)
  %1905 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %1905)
  %1906 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %1906)
  %1907 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %1907)
  %1908 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %1908)
  %1909 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %1909)
  %1910 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %1910)
  %1911 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %1911)
  %1912 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %1912)
  %1913 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %1913)
  %1914 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %1914)
  %1915 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %1915)
  %1916 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %1916)
  %1917 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %1917)
  %1918 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %1918)
  %1919 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %1919)
  %1920 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %1920)
  %1921 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %1921)
  %1922 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %1922)
  %1923 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %1923)
  %1924 = load ptr, ptr @"Builtins::intBitwiseAnd:18", align 8
  call void @free_candy_value(ptr %1924)
  %1925 = load ptr, ptr @"Builtins::intBitwiseAnd:5", align 8
  call void @free_candy_value(ptr %1925)
  %1926 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %1926)
  %1927 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %1927)
  %1928 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %1928)
  %1929 = load ptr, ptr @"Builtins::intMultiply:18", align 8
  call void @free_candy_value(ptr %1929)
  %1930 = load ptr, ptr @"Builtins::intMultiply:5", align 8
  call void @free_candy_value(ptr %1930)
  %1931 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %1931)
  %1932 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %1932)
  %1933 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  call void @free_candy_value(ptr %1933)
  %1934 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  call void @free_candy_value(ptr %1934)
  %1935 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  call void @free_candy_value(ptr %1935)
  %1936 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  call void @free_candy_value(ptr %1936)
  %1937 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %1937)
  %1938 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %1938)
  %1939 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %1939)
  %1940 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %1940)
  %1941 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %1941)
  %1942 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %1942)
  %1943 = load ptr, ptr @"Builtins::listGet:24", align 8
  call void @free_candy_value(ptr %1943)
  %1944 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %1944)
  %1945 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %1945)
  %1946 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %1946)
  %1947 = load ptr, ptr @"Builtins::listGet:5", align 8
  call void @free_candy_value(ptr %1947)
  %1948 = load ptr, ptr @"Builtins::listInsert:11", align 8
  call void @free_candy_value(ptr %1948)
  %1949 = load ptr, ptr @"Builtins::listInsert:14", align 8
  call void @free_candy_value(ptr %1949)
  %1950 = load ptr, ptr @"Builtins::listInsert:16", align 8
  call void @free_candy_value(ptr %1950)
  %1951 = load ptr, ptr @"Builtins::listInsert:24", align 8
  call void @free_candy_value(ptr %1951)
  %1952 = load ptr, ptr @"Builtins::listInsert:25", align 8
  call void @free_candy_value(ptr %1952)
  %1953 = load ptr, ptr @"Builtins::listInsert:27", align 8
  call void @free_candy_value(ptr %1953)
  %1954 = load ptr, ptr @"Builtins::listInsert:35", align 8
  call void @free_candy_value(ptr %1954)
  %1955 = load ptr, ptr @"Builtins::listInsert:5", align 8
  call void @free_candy_value(ptr %1955)
  %1956 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %1956)
  %1957 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %1957)
  %1958 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %1958)
  %1959 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %1959)
  %1960 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %1960)
  %1961 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %1961)
  %1962 = load ptr, ptr @"Builtins::textConcatenate:11", align 8
  call void @free_candy_value(ptr %1962)
  %1963 = load ptr, ptr @"Builtins::textConcatenate:18", align 8
  call void @free_candy_value(ptr %1963)
  %1964 = load ptr, ptr @"Builtins::textConcatenate:5", align 8
  call void @free_candy_value(ptr %1964)
  %1965 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %1965)
  %1966 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %1966)
  %1967 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %1967)
  %1968 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %1968)
  %1969 = load ptr, ptr @"Core:bool:and:13", align 8
  call void @free_candy_value(ptr %1969)
  %1970 = load ptr, ptr @"Core:bool:and:2", align 8
  call void @free_candy_value(ptr %1970)
  %1971 = load ptr, ptr @"Core:bool:and:4", align 8
  call void @free_candy_value(ptr %1971)
  %1972 = load ptr, ptr @"Core:bool:and:7", align 8
  call void @free_candy_value(ptr %1972)
  %1973 = load ptr, ptr @"Core:bool:and:9", align 8
  call void @free_candy_value(ptr %1973)
  %1974 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %1974)
  %1975 = load ptr, ptr @"Core:bool:lazyAnd:14", align 8
  call void @free_candy_value(ptr %1975)
  %1976 = load ptr, ptr @"Core:bool:lazyAnd:16", align 8
  call void @free_candy_value(ptr %1976)
  %1977 = load ptr, ptr @"Core:bool:lazyAnd:18", align 8
  call void @free_candy_value(ptr %1977)
  %1978 = load ptr, ptr @"Core:bool:lazyAnd:18:13", align 8
  call void @free_candy_value(ptr %1978)
  %1979 = load ptr, ptr @"Core:bool:lazyAnd:18:21", align 8
  call void @free_candy_value(ptr %1979)
  %1980 = load ptr, ptr @"Core:bool:lazyAnd:18:9", align 8
  call void @free_candy_value(ptr %1980)
  %1981 = load ptr, ptr @"Core:bool:lazyAnd:2", align 8
  call void @free_candy_value(ptr %1981)
  %1982 = load ptr, ptr @"Core:bool:lazyAnd:4", align 8
  call void @free_candy_value(ptr %1982)
  %1983 = load ptr, ptr @"Core:bool:lazyOr:14", align 8
  call void @free_candy_value(ptr %1983)
  %1984 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %1984)
  %1985 = load ptr, ptr @"Core:bool:lazyOr:18", align 8
  call void @free_candy_value(ptr %1985)
  %1986 = load ptr, ptr @"Core:bool:lazyOr:18:10", align 8
  call void @free_candy_value(ptr %1986)
  %1987 = load ptr, ptr @"Core:bool:lazyOr:18:14", align 8
  call void @free_candy_value(ptr %1987)
  %1988 = load ptr, ptr @"Core:bool:lazyOr:18:22", align 8
  call void @free_candy_value(ptr %1988)
  %1989 = load ptr, ptr @"Core:bool:lazyOr:2", align 8
  call void @free_candy_value(ptr %1989)
  %1990 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %1990)
  %1991 = load ptr, ptr @"Core:bool:not:2", align 8
  call void @free_candy_value(ptr %1991)
  %1992 = load ptr, ptr @"Core:bool:not:4", align 8
  call void @free_candy_value(ptr %1992)
  %1993 = load ptr, ptr @"Core:bool:not:6", align 8
  call void @free_candy_value(ptr %1993)
  %1994 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %1994)
  %1995 = load ptr, ptr @"Core:bool:or:2", align 8
  call void @free_candy_value(ptr %1995)
  %1996 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %1996)
  %1997 = load ptr, ptr @"Core:bool:or:7", align 8
  call void @free_candy_value(ptr %1997)
  %1998 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %1998)
  %1999 = load ptr, ptr @"Core:check:checkEquals:12", align 8
  call void @free_candy_value(ptr %1999)
  %2000 = load ptr, ptr @"Core:check:checkEquals:13", align 8
  call void @free_candy_value(ptr %2000)
  %2001 = load ptr, ptr @"Core:check:checkEquals:15:0", align 8
  call void @free_candy_value(ptr %2001)
  %2002 = load ptr, ptr @"Core:check:checkEquals:16", align 8
  call void @free_candy_value(ptr %2002)
  %2003 = load ptr, ptr @"Core:check:checkEquals:19", align 8
  call void @free_candy_value(ptr %2003)
  %2004 = load ptr, ptr @"Core:check:checkEquals:20", align 8
  call void @free_candy_value(ptr %2004)
  %2005 = load ptr, ptr @"Core:check:checkEquals:22:0", align 8
  call void @free_candy_value(ptr %2005)
  %2006 = load ptr, ptr @"Core:check:checkEquals:23", align 8
  call void @free_candy_value(ptr %2006)
  %2007 = load ptr, ptr @"Core:check:checkEquals:25", align 8
  call void @free_candy_value(ptr %2007)
  %2008 = load ptr, ptr @"Core:check:checkEquals:26", align 8
  call void @free_candy_value(ptr %2008)
  %2009 = load ptr, ptr @"Core:check:checkEquals:27", align 8
  call void @free_candy_value(ptr %2009)
  %2010 = load ptr, ptr @"Core:check:checkEquals:28", align 8
  call void @free_candy_value(ptr %2010)
  %2011 = load ptr, ptr @"Core:check:checkEquals:29", align 8
  call void @free_candy_value(ptr %2011)
  %2012 = load ptr, ptr @"Core:controlFlow:if:11", align 8
  call void @free_candy_value(ptr %2012)
  %2013 = load ptr, ptr @"Core:controlFlow:if:21", align 8
  call void @free_candy_value(ptr %2013)
  %2014 = load ptr, ptr @"Core:controlFlow:if:23", align 8
  call void @free_candy_value(ptr %2014)
  %2015 = load ptr, ptr @"Core:controlFlow:if:28", align 8
  call void @free_candy_value(ptr %2015)
  %2016 = load ptr, ptr @"Core:controlFlow:if:9", align 8
  call void @free_candy_value(ptr %2016)
  %2017 = load ptr, ptr @"Core:controlFlow:recursive:17", align 8
  call void @free_candy_value(ptr %2017)
  %2018 = load ptr, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  call void @free_candy_value(ptr %2018)
  %2019 = load ptr, ptr @"Core:controlFlow:recursive:18:5", align 8
  call void @free_candy_value(ptr %2019)
  %2020 = load ptr, ptr @"Core:controlFlow:recursive:23", align 8
  call void @free_candy_value(ptr %2020)
  %2021 = load ptr, ptr @"Core:controlFlow:recursive:9", align 8
  call void @free_candy_value(ptr %2021)
  %2022 = load ptr, ptr @"Core:fixedDecimal:fromInt:15", align 8
  call void @free_candy_value(ptr %2022)
  %2023 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:11", align 8
  call void @free_candy_value(ptr %2023)
  %2024 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:16", align 8
  call void @free_candy_value(ptr %2024)
  %2025 = load ptr, ptr @"Core:fixedDecimal:isScale:18:9", align 8
  call void @free_candy_value(ptr %2025)
  %2026 = load ptr, ptr @"Core:fixedDecimal:isScale:19", align 8
  call void @free_candy_value(ptr %2026)
  %2027 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %2027)
  %2028 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %2028)
  %2029 = load ptr, ptr @"Core:function:is2:11:3", align 8
  call void @free_candy_value(ptr %2029)
  %2030 = load ptr, ptr @"Core:function:is2:13", align 8
  call void @free_candy_value(ptr %2030)
  %2031 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %2031)
  %2032 = load ptr, ptr @"Core:function:run:2", align 8
  call void @free_candy_value(ptr %2032)
  %2033 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %2033)
  %2034 = load ptr, ptr @"Core:int:compareTo:20", align 8
  call void @free_candy_value(ptr %2034)
  %2035 = load ptr, ptr @"Core:int:compareTo:4", align 8
  call void @free_candy_value(ptr %2035)
  %2036 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %2036)
  %2037 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  call void @free_candy_value(ptr %2037)
  %2038 = load ptr, ptr @"Core:int:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %2038)
  %2039 = load ptr, ptr @"Core:int:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %2039)
  %2040 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %2040)
  %2041 = load ptr, ptr @"Core:int:isLessThan:4", align 8
  call void @free_candy_value(ptr %2041)
  %2042 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %2042)
  %2043 = load ptr, ptr @"Core:int:isNegative:4", align 8
  call void @free_candy_value(ptr %2043)
  %2044 = load ptr, ptr @"Core:int:isNegative:8", align 8
  call void @free_candy_value(ptr %2044)
  %2045 = load ptr, ptr @"Core:int:isNonNegative:16", align 8
  call void @free_candy_value(ptr %2045)
  %2046 = load ptr, ptr @"Core:int:isNonNegative:4", align 8
  call void @free_candy_value(ptr %2046)
  %2047 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  call void @free_candy_value(ptr %2047)
  %2048 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %2048)
  %2049 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %2049)
  %2050 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %2050)
  %2051 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %2051)
  %2052 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %2052)
  %2053 = load ptr, ptr @fun_candy_builtin_int_bitwise_and, align 8
  call void @free_candy_value(ptr %2053)
  %2054 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %2054)
  %2055 = load ptr, ptr @fun_candy_builtin_int_multiply, align 8
  call void @free_candy_value(ptr %2055)
  %2056 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %2056)
  %2057 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %2057)
  %2058 = load ptr, ptr @fun_candy_builtin_list_insert, align 8
  call void @free_candy_value(ptr %2058)
  %2059 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %2059)
  %2060 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %2060)
  %2061 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %2061)
  %2062 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %2062)
  %2063 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %2063)
  %2064 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %2064)
  %2065 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %2065)
  %2066 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %2066)
  %2067 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %2067)
  %2068 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %2068)
  %2069 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %2069)
  %2070 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %2070)
  %2071 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %2071)
  %2072 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %2072)
  %2073 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %2073)
  %2074 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %2074)
  %2075 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %2075)
  %2076 = load ptr, ptr @tag_MinorUnits, align 8
  call void @free_candy_value(ptr %2076)
  %2077 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %2077)
  %2078 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %2078)
  %2079 = load ptr, ptr @tag_Scale, align 8
  call void @free_candy_value(ptr %2079)
  %2080 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %2080)
  %2081 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %2081)
  %2082 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %2082)
  %2083 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %2083)
  %2084 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %2084)
  %2085 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %2085)
  %2086 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %2086)
  %2087 = load ptr, ptr @num_3, align 8
  call void @free_candy_value(ptr %2087)
  %2088 = load ptr, ptr @num_4, align 8
  call void @free_candy_value(ptr %2088)
  %2089 = load ptr, ptr @num_5, align 8
  call void @free_candy_value(ptr %2089)
  %2090 = load ptr, ptr @num_10, align 8
  call void @free_candy_value(ptr %2090)
  %2091 = load ptr, ptr @"text_ to be ", align 8
  call void @free_candy_value(ptr %2091)
  %2092 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %2092)
  %2093 = load ptr, ptr @"text_A check failed: Expected ", align 8
  call void @free_candy_value(ptr %2093)
  %2094 = load ptr, ptr @"text_Expected Equal, got ", align 8
  call void @free_candy_value(ptr %2094)
  %2095 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %2095)
  %2096 = load ptr, ptr @"text_Expected Greater, got ", align 8
  call void @free_candy_value(ptr %2096)
  %2097 = load ptr, ptr @"text_Expected Less, got ", align 8
  call void @free_candy_value(ptr %2097)
  %2098 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %2098)
  %2099 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  call void @free_candy_value(ptr %2099)
  %2100 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %2100)
  %2101 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %2101)
  %2102 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %2102)
  %2103 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %2103)
  %2104 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %2104)
  %2105 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %2105)
  %2106 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %2106)
  %2107 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %2107)
  %2108 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2108)
  %2109 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2109)
  %2110 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2110)
  %2111 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2111)
  %2112 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %2112)
  %2113 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %2113)
  %2114 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %2114)
  %2115 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2115)
  %2116 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2116)
  %2117 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2117)
  %2118 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2118)
  %2119 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2119)
  %2120 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %2120)
  %2121 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  call void @free_candy_value(ptr %2121)
  %2122 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %2122)
  %2123 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %2123)
  %2124 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %2124)
  %2125 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2125)
  %2126 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2126)
  %2127 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  call void @free_candy_value(ptr %2127)
  %2128 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %2128)
  %2129 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %2129)
  %2130 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  call void @free_candy_value(ptr %2130)
  %2131 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %2131)
  %2132 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  call void @free_candy_value(ptr %2132)
  %2133 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %2133)
  %2134 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  call void @free_candy_value(ptr %2134)
  %2135 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %2135)
  %2136 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2136)
  %2137 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %2137)
  %2138 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %2138)
  %2139 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2139)
  %2140 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2140)
  %2141 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %2141)
  %2142 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %2142)
  %2143 = load ptr, ptr @"fun_anonymous_$generated__needs_isValueTrue_then", align 8
  call void @free_candy_value(ptr %2143)
  %2144 = load ptr, ptr @"fun_anonymous_$generated__needs_isValueTrue_else", align 8
  call void @free_candy_value(ptr %2144)
  %2145 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %2145)
  %2146 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %2146)
  %2147 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %2147)
  %2148 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %2148)
  %2149 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  call void @free_candy_value(ptr %2149)
  %2150 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", align 8
  call void @free_candy_value(ptr %2150)
  %2151 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  call void @free_candy_value(ptr %2151)
  %2152 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2152)
  %2153 = load ptr, ptr @fun_Builtins__isNonNegative, align 8
  call void @free_candy_value(ptr %2153)
  %2154 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  call void @free_candy_value(ptr %2154)
  %2155 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.2, align 8
  call void @free_candy_value(ptr %2155)
  %2156 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %2156)
  %2157 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %2157)
  %2158 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.4, align 8
  call void @free_candy_value(ptr %2158)
  %2159 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %2159)
  %2160 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %2160)
  %2161 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %2161)
  %2162 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.6, align 8
  call void @free_candy_value(ptr %2162)
  %2163 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.8, align 8
  call void @free_candy_value(ptr %2163)
  %2164 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.10, align 8
  call void @free_candy_value(ptr %2164)
  %2165 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %2165)
  %2166 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.12, align 8
  call void @free_candy_value(ptr %2166)
  %2167 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %2167)
  %2168 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2168)
  %2169 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.14, align 8
  call void @free_candy_value(ptr %2169)
  %2170 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.16, align 8
  call void @free_candy_value(ptr %2170)
  %2171 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.18, align 8
  call void @free_candy_value(ptr %2171)
  %2172 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %2172)
  %2173 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.20, align 8
  call void @free_candy_value(ptr %2173)
  %2174 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %2174)
  %2175 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2175)
  %2176 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %2176)
  %2177 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  call void @free_candy_value(ptr %2177)
  %2178 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.22, align 8
  call void @free_candy_value(ptr %2178)
  %2179 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  call void @free_candy_value(ptr %2179)
  %2180 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %2180)
  %2181 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.24, align 8
  call void @free_candy_value(ptr %2181)
  %2182 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %2182)
  %2183 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  call void @free_candy_value(ptr %2183)
  %2184 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  call void @free_candy_value(ptr %2184)
  %2185 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.26, align 8
  call void @free_candy_value(ptr %2185)
  %2186 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.28, align 8
  call void @free_candy_value(ptr %2186)
  %2187 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.30, align 8
  call void @free_candy_value(ptr %2187)
  %2188 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %2188)
  %2189 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.32, align 8
  call void @free_candy_value(ptr %2189)
  %2190 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %2190)
  %2191 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2191)
  %2192 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.34, align 8
  call void @free_candy_value(ptr %2192)
  %2193 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.36, align 8
  call void @free_candy_value(ptr %2193)
  %2194 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.38, align 8
  call void @free_candy_value(ptr %2194)
  %2195 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %2195)
  %2196 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.40, align 8
  call void @free_candy_value(ptr %2196)
  %2197 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %2197)
  %2198 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %2198)
  %2199 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %2199)
  %2200 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.42, align 8
  call void @free_candy_value(ptr %2200)
  %2201 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %2201)
  %2202 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %2202)
  %2203 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.44, align 8
  call void @free_candy_value(ptr %2203)
  %2204 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %2204)
  %2205 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.46, align 8
  call void @free_candy_value(ptr %2205)
  %2206 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %2206)
  %2207 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2207)
  %2208 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2208)
  %2209 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.48, align 8
  call void @free_candy_value(ptr %2209)
  %2210 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.50, align 8
  call void @free_candy_value(ptr %2210)
  %2211 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.52, align 8
  call void @free_candy_value(ptr %2211)
  %2212 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %2212)
  %2213 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.54, align 8
  call void @free_candy_value(ptr %2213)
  %2214 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %2214)
  %2215 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.56, align 8
  call void @free_candy_value(ptr %2215)
  %2216 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %2216)
  %2217 = load ptr, ptr @fun_Builtins__listGet, align 8
  call void @free_candy_value(ptr %2217)
  %2218 = load ptr, ptr @fun_Builtins__listInsert, align 8
  call void @free_candy_value(ptr %2218)
  %2219 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  call void @free_candy_value(ptr %2219)
  %2220 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %2220)
  %2221 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %2221)
  %2222 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %2222)
  %2223 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %2223)
  %2224 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  call void @free_candy_value(ptr %2224)
  %2225 = load ptr, ptr @fun_Core_bool_is_1_equals_then.58, align 8
  call void @free_candy_value(ptr %2225)
  %2226 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %2226)
  %2227 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %2227)
  %2228 = load ptr, ptr @fun_Core_bool_is_1_equals_else.60, align 8
  call void @free_candy_value(ptr %2228)
  %2229 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %2229)
  %2230 = load ptr, ptr @fun_Core_bool_is_1_equals_else.62, align 8
  call void @free_candy_value(ptr %2230)
  %2231 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %2231)
  %2232 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2232)
  %2233 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2233)
  %2234 = load ptr, ptr @fun_Core_bool_is_1_equals_then.64, align 8
  call void @free_candy_value(ptr %2234)
  %2235 = load ptr, ptr @fun_Core_bool_is_1_equals_then.66, align 8
  call void @free_candy_value(ptr %2235)
  %2236 = load ptr, ptr @fun_Core_bool_is_1_equals_else.68, align 8
  call void @free_candy_value(ptr %2236)
  %2237 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %2237)
  %2238 = load ptr, ptr @fun_Core_bool_is_1_equals_else.70, align 8
  call void @free_candy_value(ptr %2238)
  %2239 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %2239)
  %2240 = load ptr, ptr @fun_Core_bool_is_1_equals_else.72, align 8
  call void @free_candy_value(ptr %2240)
  %2241 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %2241)
  %2242 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2242)
  %2243 = load ptr, ptr @fun_Core_bool_not, align 8
  call void @free_candy_value(ptr %2243)
  %2244 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  call void @free_candy_value(ptr %2244)
  %2245 = load ptr, ptr @fun_Core_bool_not_6_equals_then.74, align 8
  call void @free_candy_value(ptr %2245)
  %2246 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  call void @free_candy_value(ptr %2246)
  %2247 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %2247)
  %2248 = load ptr, ptr @fun_Core_bool_not_6_equals_else.76, align 8
  call void @free_candy_value(ptr %2248)
  %2249 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %2249)
  %2250 = load ptr, ptr @fun_Core_bool_not_6_equals_else.78, align 8
  call void @free_candy_value(ptr %2250)
  %2251 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %2251)
  %2252 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2252)
  %2253 = load ptr, ptr @fun_Core_bool_not_6_equals_then.80, align 8
  call void @free_candy_value(ptr %2253)
  %2254 = load ptr, ptr @fun_Core_bool_not_6_equals_then.82, align 8
  call void @free_candy_value(ptr %2254)
  %2255 = load ptr, ptr @fun_Core_bool_not_6_equals_else.84, align 8
  call void @free_candy_value(ptr %2255)
  %2256 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %2256)
  %2257 = load ptr, ptr @fun_Core_bool_not_6_equals_else.86, align 8
  call void @free_candy_value(ptr %2257)
  %2258 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %2258)
  %2259 = load ptr, ptr @fun_Core_bool_not_6_equals_else.88, align 8
  call void @free_candy_value(ptr %2259)
  %2260 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %2260)
  %2261 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2261)
  %2262 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  call void @free_candy_value(ptr %2262)
  %2263 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  call void @free_candy_value(ptr %2263)
  %2264 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.90, align 8
  call void @free_candy_value(ptr %2264)
  %2265 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  call void @free_candy_value(ptr %2265)
  %2266 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %2266)
  %2267 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.92, align 8
  call void @free_candy_value(ptr %2267)
  %2268 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %2268)
  %2269 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.94, align 8
  call void @free_candy_value(ptr %2269)
  %2270 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %2270)
  %2271 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2271)
  %2272 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.96, align 8
  call void @free_candy_value(ptr %2272)
  %2273 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.98, align 8
  call void @free_candy_value(ptr %2273)
  %2274 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.100, align 8
  call void @free_candy_value(ptr %2274)
  %2275 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %2275)
  %2276 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.102, align 8
  call void @free_candy_value(ptr %2276)
  %2277 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %2277)
  %2278 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.104, align 8
  call void @free_candy_value(ptr %2278)
  %2279 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %2279)
  %2280 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_patternMatch, align 8
  call void @free_candy_value(ptr %2280)
  %2281 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2281)
  %2282 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %2282)
  %2283 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  call void @free_candy_value(ptr %2283)
  %2284 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.106, align 8
  call void @free_candy_value(ptr %2284)
  %2285 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  call void @free_candy_value(ptr %2285)
  %2286 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %2286)
  %2287 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.108, align 8
  call void @free_candy_value(ptr %2287)
  %2288 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %2288)
  %2289 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.110, align 8
  call void @free_candy_value(ptr %2289)
  %2290 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %2290)
  %2291 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2291)
  %2292 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.112, align 8
  call void @free_candy_value(ptr %2292)
  %2293 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.114, align 8
  call void @free_candy_value(ptr %2293)
  %2294 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.116, align 8
  call void @free_candy_value(ptr %2294)
  %2295 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %2295)
  %2296 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.118, align 8
  call void @free_candy_value(ptr %2296)
  %2297 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %2297)
  %2298 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.120, align 8
  call void @free_candy_value(ptr %2298)
  %2299 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %2299)
  %2300 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %2300)
  %2301 = load ptr, ptr @fun_Core_check_checkEquals, align 8
  call void @free_candy_value(ptr %2301)
  %2302 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  call void @free_candy_value(ptr %2302)
  %2303 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  call void @free_candy_value(ptr %2303)
  %2304 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  call void @free_candy_value(ptr %2304)
  %2305 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  call void @free_candy_value(ptr %2305)
  %2306 = load ptr, ptr @fun_Core_function_is2, align 8
  call void @free_candy_value(ptr %2306)
  %2307 = load ptr, ptr @fun_Core_function_is2_11, align 8
  call void @free_candy_value(ptr %2307)
  %2308 = load ptr, ptr @fun_Core_int_compareTo, align 8
  call void @free_candy_value(ptr %2308)
  %2309 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  call void @free_candy_value(ptr %2309)
  %2310 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  call void @free_candy_value(ptr %2310)
  %2311 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  call void @free_candy_value(ptr %2311)
  %2312 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %2312)
  %2313 = load ptr, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  call void @free_candy_value(ptr %2313)
  %2314 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  call void @free_candy_value(ptr %2314)
  %2315 = load ptr, ptr @tag_FixedDecimal, align 8
  call void @free_candy_value(ptr %2315)
  %2316 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %2316)
  %2317 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %2317)
  %2318 = load ptr, ptr @fun_Core_function_is1, align 8
  call void @free_candy_value(ptr %2318)
  %2319 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %2319)
  %2320 = load ptr, ptr @"Core:int:fitsInRustU32:15", align 8
  call void @free_candy_value(ptr %2320)
  %2321 = load ptr, ptr @"Core:int:fitsInRustU32:4", align 8
  call void @free_candy_value(ptr %2321)
  %2322 = load ptr, ptr @"Core:int:fitsInRustU32:7", align 8
  call void @free_candy_value(ptr %2322)
  %2323 = load ptr, ptr @"Core:int:fitsInRustU32:9", align 8
  call void @free_candy_value(ptr %2323)
  %2324 = load ptr, ptr @"Core:int:isOdd:4", align 8
  call void @free_candy_value(ptr %2324)
  %2325 = load ptr, ptr @"Core:int:isOdd:8", align 8
  call void @free_candy_value(ptr %2325)
  %2326 = load ptr, ptr @"Core:int:isPositive:4", align 8
  call void @free_candy_value(ptr %2326)
  %2327 = load ptr, ptr @"Core:int:isPositive:8", align 8
  call void @free_candy_value(ptr %2327)
  %2328 = load ptr, ptr @num_4294967295, align 8
  call void @free_candy_value(ptr %2328)
  %2329 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  call void @free_candy_value(ptr %2329)
  %2330 = load ptr, ptr @fun_Core_int_isOdd, align 8
  call void @free_candy_value(ptr %2330)
  %2331 = load ptr, ptr @"Core:iterator:109", align 8
  call void @free_candy_value(ptr %2331)
  %2332 = load ptr, ptr @"Core:iterator:all:11", align 8
  call void @free_candy_value(ptr %2332)
  %2333 = load ptr, ptr @"Core:iterator:all:15", align 8
  call void @free_candy_value(ptr %2333)
  %2334 = load ptr, ptr @"Core:iterator:all:18:13", align 8
  call void @free_candy_value(ptr %2334)
  %2335 = load ptr, ptr @"Core:iterator:all:18:15", align 8
  call void @free_candy_value(ptr %2335)
  %2336 = load ptr, ptr @"Core:iterator:all:18:2", align 8
  call void @free_candy_value(ptr %2336)
  %2337 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  call void @free_candy_value(ptr %2337)
  %2338 = load ptr, ptr @"Core:iterator:all:19", align 8
  call void @free_candy_value(ptr %2338)
  %2339 = load ptr, ptr @"Core:iterator:all:9", align 8
  call void @free_candy_value(ptr %2339)
  %2340 = load ptr, ptr @"Core:iterator:any:11", align 8
  call void @free_candy_value(ptr %2340)
  %2341 = load ptr, ptr @"Core:iterator:any:15", align 8
  call void @free_candy_value(ptr %2341)
  %2342 = load ptr, ptr @"Core:iterator:any:18:13", align 8
  call void @free_candy_value(ptr %2342)
  %2343 = load ptr, ptr @"Core:iterator:any:18:15", align 8
  call void @free_candy_value(ptr %2343)
  %2344 = load ptr, ptr @"Core:iterator:any:18:2", align 8
  call void @free_candy_value(ptr %2344)
  %2345 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  call void @free_candy_value(ptr %2345)
  %2346 = load ptr, ptr @"Core:iterator:any:19", align 8
  call void @free_candy_value(ptr %2346)
  %2347 = load ptr, ptr @"Core:iterator:any:9", align 8
  call void @free_candy_value(ptr %2347)
  %2348 = load ptr, ptr @"Core:iterator:chunked:11", align 8
  call void @free_candy_value(ptr %2348)
  %2349 = load ptr, ptr @"Core:iterator:chunked:21", align 8
  call void @free_candy_value(ptr %2349)
  %2350 = load ptr, ptr @"Core:iterator:chunked:23", align 8
  call void @free_candy_value(ptr %2350)
  %2351 = load ptr, ptr @"Core:iterator:chunked:27", align 8
  call void @free_candy_value(ptr %2351)
  %2352 = load ptr, ptr @"Core:iterator:chunked:32", align 8
  call void @free_candy_value(ptr %2352)
  %2353 = load ptr, ptr @"Core:iterator:ensure:11", align 8
  call void @free_candy_value(ptr %2353)
  %2354 = load ptr, ptr @"Core:iterator:ensure:15", align 8
  call void @free_candy_value(ptr %2354)
  %2355 = load ptr, ptr @"Core:iterator:ensure:19:2", align 8
  call void @free_candy_value(ptr %2355)
  %2356 = load ptr, ptr @"Core:iterator:ensure:20", align 8
  call void @free_candy_value(ptr %2356)
  %2357 = load ptr, ptr @"Core:iterator:ensure:9", align 8
  call void @free_candy_value(ptr %2357)
  %2358 = load ptr, ptr @"Core:iterator:foldLeft:14", align 8
  call void @free_candy_value(ptr %2358)
  %2359 = load ptr, ptr @"Core:iterator:foldLeft:16", align 8
  call void @free_candy_value(ptr %2359)
  %2360 = load ptr, ptr @"Core:iterator:foldLeft:23:1", align 8
  call void @free_candy_value(ptr %2360)
  %2361 = load ptr, ptr @"Core:iterator:foldLeft:23:4", align 8
  call void @free_candy_value(ptr %2361)
  %2362 = load ptr, ptr @"Core:iterator:foldLeft:23:5", align 8
  call void @free_candy_value(ptr %2362)
  %2363 = load ptr, ptr @"Core:iterator:foldLeft:23:5:10", align 8
  call void @free_candy_value(ptr %2363)
  %2364 = load ptr, ptr @"Core:iterator:foldLeft:23:5:8", align 8
  call void @free_candy_value(ptr %2364)
  %2365 = load ptr, ptr @"Core:iterator:foldLeft:23:5:item", align 8
  call void @free_candy_value(ptr %2365)
  %2366 = load ptr, ptr @"Core:iterator:foldLeft:23:5:rest", align 8
  call void @free_candy_value(ptr %2366)
  %2367 = load ptr, ptr @"Core:iterator:foldLeft:23:iterator", align 8
  call void @free_candy_value(ptr %2367)
  %2368 = load ptr, ptr @"Core:iterator:foldLeft:23:value", align 8
  call void @free_candy_value(ptr %2368)
  %2369 = load ptr, ptr @"Core:iterator:foldLeft:24", align 8
  call void @free_candy_value(ptr %2369)
  %2370 = load ptr, ptr @"Core:iterator:foldLeft:3", align 8
  call void @free_candy_value(ptr %2370)
  %2371 = load ptr, ptr @"Core:iterator:forEach:11", align 8
  call void @free_candy_value(ptr %2371)
  %2372 = load ptr, ptr @"Core:iterator:forEach:15", align 8
  call void @free_candy_value(ptr %2372)
  %2373 = load ptr, ptr @"Core:iterator:forEach:18:2", align 8
  call void @free_candy_value(ptr %2373)
  %2374 = load ptr, ptr @"Core:iterator:forEach:19", align 8
  call void @free_candy_value(ptr %2374)
  %2375 = load ptr, ptr @"Core:iterator:forEach:9", align 8
  call void @free_candy_value(ptr %2375)
  %2376 = load ptr, ptr @"Core:iterator:fromList:11", align 8
  call void @free_candy_value(ptr %2376)
  %2377 = load ptr, ptr @"Core:iterator:fromList:22", align 8
  call void @free_candy_value(ptr %2377)
  %2378 = load ptr, ptr @"Core:iterator:fromList:23:10", align 8
  call void @free_candy_value(ptr %2378)
  %2379 = load ptr, ptr @"Core:iterator:fromList:24", align 8
  call void @free_candy_value(ptr %2379)
  %2380 = load ptr, ptr @"Core:iterator:generate:11", align 8
  call void @free_candy_value(ptr %2380)
  %2381 = load ptr, ptr @"Core:iterator:generate:21", align 8
  call void @free_candy_value(ptr %2381)
  %2382 = load ptr, ptr @"Core:iterator:generate:23", align 8
  call void @free_candy_value(ptr %2382)
  %2383 = load ptr, ptr @"Core:iterator:generate:33", align 8
  call void @free_candy_value(ptr %2383)
  %2384 = load ptr, ptr @"Core:iterator:generate:35", align 8
  call void @free_candy_value(ptr %2384)
  %2385 = load ptr, ptr @"Core:iterator:generate:45", align 8
  call void @free_candy_value(ptr %2385)
  %2386 = load ptr, ptr @"Core:iterator:generate:47", align 8
  call void @free_candy_value(ptr %2386)
  %2387 = load ptr, ptr @"Core:iterator:generate:50:6:16", align 8
  call void @free_candy_value(ptr %2387)
  %2388 = load ptr, ptr @"Core:iterator:generate:50:6:4", align 8
  call void @free_candy_value(ptr %2388)
  %2389 = load ptr, ptr @"Core:iterator:generate:50:7", align 8
  call void @free_candy_value(ptr %2389)
  %2390 = load ptr, ptr @"Core:iterator:generate:51", align 8
  call void @free_candy_value(ptr %2390)
  %2391 = load ptr, ptr @"Core:iterator:generateWithState:11", align 8
  call void @free_candy_value(ptr %2391)
  %2392 = load ptr, ptr @"Core:iterator:generateWithState:14:1:2", align 8
  call void @free_candy_value(ptr %2392)
  %2393 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3", align 8
  call void @free_candy_value(ptr %2393)
  %2394 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:19", align 8
  call void @free_candy_value(ptr %2394)
  %2395 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:20", align 8
  call void @free_candy_value(ptr %2395)
  %2396 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:22:0", align 8
  call void @free_candy_value(ptr %2396)
  %2397 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:23", align 8
  call void @free_candy_value(ptr %2397)
  %2398 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:25", align 8
  call void @free_candy_value(ptr %2398)
  %2399 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:26", align 8
  call void @free_candy_value(ptr %2399)
  %2400 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:27", align 8
  call void @free_candy_value(ptr %2400)
  %2401 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:6", align 8
  call void @free_candy_value(ptr %2401)
  %2402 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:item", align 8
  call void @free_candy_value(ptr %2402)
  %2403 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:state", align 8
  call void @free_candy_value(ptr %2403)
  %2404 = load ptr, ptr @"Core:iterator:generateWithState:15", align 8
  call void @free_candy_value(ptr %2404)
  %2405 = load ptr, ptr @"Core:iterator:generateWithState:9", align 8
  call void @free_candy_value(ptr %2405)
  %2406 = load ptr, ptr @"Core:iterator:isEmpty:3", align 8
  call void @free_candy_value(ptr %2406)
  %2407 = load ptr, ptr @"Core:iterator:isEmpty:7", align 8
  call void @free_candy_value(ptr %2407)
  %2408 = load ptr, ptr @"Core:iterator:joinToText:12:11", align 8
  call void @free_candy_value(ptr %2408)
  %2409 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  call void @free_candy_value(ptr %2409)
  %2410 = load ptr, ptr @"Core:iterator:joinToText:13", align 8
  call void @free_candy_value(ptr %2410)
  %2411 = load ptr, ptr @"Core:iterator:joinToText:3", align 8
  call void @free_candy_value(ptr %2411)
  %2412 = load ptr, ptr @"Core:iterator:length:3", align 8
  call void @free_candy_value(ptr %2412)
  %2413 = load ptr, ptr @"Core:iterator:length:6", align 8
  call void @free_candy_value(ptr %2413)
  %2414 = load ptr, ptr @"Core:iterator:length:8", align 8
  call void @free_candy_value(ptr %2414)
  %2415 = load ptr, ptr @"Core:iterator:map:14", align 8
  call void @free_candy_value(ptr %2415)
  %2416 = load ptr, ptr @"Core:iterator:map:16", align 8
  call void @free_candy_value(ptr %2416)
  %2417 = load ptr, ptr @"Core:iterator:map:19:2", align 8
  call void @free_candy_value(ptr %2417)
  %2418 = load ptr, ptr @"Core:iterator:map:19:3", align 8
  call void @free_candy_value(ptr %2418)
  %2419 = load ptr, ptr @"Core:iterator:map:19:3:5", align 8
  call void @free_candy_value(ptr %2419)
  %2420 = load ptr, ptr @"Core:iterator:map:19:3:item", align 8
  call void @free_candy_value(ptr %2420)
  %2421 = load ptr, ptr @"Core:iterator:map:19:3:rest", align 8
  call void @free_candy_value(ptr %2421)
  %2422 = load ptr, ptr @"Core:iterator:map:20", align 8
  call void @free_candy_value(ptr %2422)
  %2423 = load ptr, ptr @"Core:iterator:map:3", align 8
  call void @free_candy_value(ptr %2423)
  %2424 = load ptr, ptr @"Core:iterator:next:17", align 8
  call void @free_candy_value(ptr %2424)
  %2425 = load ptr, ptr @"Core:iterator:next:3", align 8
  call void @free_candy_value(ptr %2425)
  %2426 = load ptr, ptr @"Core:iterator:next:6", align 8
  call void @free_candy_value(ptr %2426)
  %2427 = load ptr, ptr @"Core:iterator:next:nextFunction", align 8
  call void @free_candy_value(ptr %2427)
  %2428 = load ptr, ptr @"Core:iterator:reduceLeft:11", align 8
  call void @free_candy_value(ptr %2428)
  %2429 = load ptr, ptr @"Core:iterator:reduceLeft:15", align 8
  call void @free_candy_value(ptr %2429)
  %2430 = load ptr, ptr @"Core:iterator:reduceLeft:17", align 8
  call void @free_candy_value(ptr %2430)
  %2431 = load ptr, ptr @"Core:iterator:reduceLeft:18", align 8
  call void @free_candy_value(ptr %2431)
  %2432 = load ptr, ptr @"Core:iterator:reduceLeft:18:14", align 8
  call void @free_candy_value(ptr %2432)
  %2433 = load ptr, ptr @"Core:iterator:reduceLeft:18:item", align 8
  call void @free_candy_value(ptr %2433)
  %2434 = load ptr, ptr @"Core:iterator:reduceLeft:18:rest", align 8
  call void @free_candy_value(ptr %2434)
  %2435 = load ptr, ptr @"Core:iterator:reduceLeft:9", align 8
  call void @free_candy_value(ptr %2435)
  %2436 = load ptr, ptr @"Core:iterator:skip:16", align 8
  call void @free_candy_value(ptr %2436)
  %2437 = load ptr, ptr @"Core:iterator:skip:26", align 8
  call void @free_candy_value(ptr %2437)
  %2438 = load ptr, ptr @"Core:iterator:skip:28", align 8
  call void @free_candy_value(ptr %2438)
  %2439 = load ptr, ptr @"Core:iterator:skip:3", align 8
  call void @free_candy_value(ptr %2439)
  %2440 = load ptr, ptr @"Core:iterator:skip:30:6:1", align 8
  call void @free_candy_value(ptr %2440)
  %2441 = load ptr, ptr @"Core:iterator:skip:30:6:7:2", align 8
  call void @free_candy_value(ptr %2441)
  %2442 = load ptr, ptr @"Core:iterator:skip:30:6:8:2", align 8
  call void @free_candy_value(ptr %2442)
  %2443 = load ptr, ptr @"Core:iterator:skip:30:6:8:3", align 8
  call void @free_candy_value(ptr %2443)
  %2444 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  call void @free_candy_value(ptr %2444)
  %2445 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:17", align 8
  call void @free_candy_value(ptr %2445)
  %2446 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:rest", align 8
  call void @free_candy_value(ptr %2446)
  %2447 = load ptr, ptr @"Core:iterator:skip:30:6:9", align 8
  call void @free_candy_value(ptr %2447)
  %2448 = load ptr, ptr @"Core:iterator:skip:30:6:iterator", align 8
  call void @free_candy_value(ptr %2448)
  %2449 = load ptr, ptr @"Core:iterator:skip:30:6:n", align 8
  call void @free_candy_value(ptr %2449)
  %2450 = load ptr, ptr @"Core:iterator:skip:30:7", align 8
  call void @free_candy_value(ptr %2450)
  %2451 = load ptr, ptr @"Core:iterator:sum:19", align 8
  call void @free_candy_value(ptr %2451)
  %2452 = load ptr, ptr @"Core:iterator:sum:3", align 8
  call void @free_candy_value(ptr %2452)
  %2453 = load ptr, ptr @"Core:iterator:sum:5:17", align 8
  call void @free_candy_value(ptr %2453)
  %2454 = load ptr, ptr @"Core:iterator:sum:6", align 8
  call void @free_candy_value(ptr %2454)
  %2455 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  call void @free_candy_value(ptr %2455)
  %2456 = load ptr, ptr @"Core:iterator:sum:9", align 8
  call void @free_candy_value(ptr %2456)
  %2457 = load ptr, ptr @"Core:iterator:take:11", align 8
  call void @free_candy_value(ptr %2457)
  %2458 = load ptr, ptr @"Core:iterator:take:21", align 8
  call void @free_candy_value(ptr %2458)
  %2459 = load ptr, ptr @"Core:iterator:take:23", align 8
  call void @free_candy_value(ptr %2459)
  %2460 = load ptr, ptr @"Core:iterator:take:27", align 8
  call void @free_candy_value(ptr %2460)
  %2461 = load ptr, ptr @"Core:iterator:take:29", align 8
  call void @free_candy_value(ptr %2461)
  %2462 = load ptr, ptr @"Core:iterator:take:31:1", align 8
  call void @free_candy_value(ptr %2462)
  %2463 = load ptr, ptr @"Core:iterator:take:31:12", align 8
  call void @free_candy_value(ptr %2463)
  %2464 = load ptr, ptr @"Core:iterator:take:31:index", align 8
  call void @free_candy_value(ptr %2464)
  %2465 = load ptr, ptr @"Core:iterator:take:31:item", align 8
  call void @free_candy_value(ptr %2465)
  %2466 = load ptr, ptr @"Core:iterator:take:32", align 8
  call void @free_candy_value(ptr %2466)
  %2467 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  call void @free_candy_value(ptr %2467)
  %2468 = load ptr, ptr @"Core:iterator:take:35", align 8
  call void @free_candy_value(ptr %2468)
  %2469 = load ptr, ptr @"Core:iterator:takeWhile:3", align 8
  call void @free_candy_value(ptr %2469)
  %2470 = load ptr, ptr @"Core:iterator:takeWhile:7:2", align 8
  call void @free_candy_value(ptr %2470)
  %2471 = load ptr, ptr @"Core:iterator:takeWhile:7:3", align 8
  call void @free_candy_value(ptr %2471)
  %2472 = load ptr, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  call void @free_candy_value(ptr %2472)
  %2473 = load ptr, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  call void @free_candy_value(ptr %2473)
  %2474 = load ptr, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  call void @free_candy_value(ptr %2474)
  %2475 = load ptr, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  call void @free_candy_value(ptr %2475)
  %2476 = load ptr, ptr @"Core:iterator:takeWhile:8", align 8
  call void @free_candy_value(ptr %2476)
  %2477 = load ptr, ptr @"Core:iterator:toList:3", align 8
  call void @free_candy_value(ptr %2477)
  %2478 = load ptr, ptr @"Core:iterator:toList:6:10", align 8
  call void @free_candy_value(ptr %2478)
  %2479 = load ptr, ptr @"Core:iterator:toList:7", align 8
  call void @free_candy_value(ptr %2479)
  %2480 = load ptr, ptr @"Core:iterator:where:14", align 8
  call void @free_candy_value(ptr %2480)
  %2481 = load ptr, ptr @"Core:iterator:where:16", align 8
  call void @free_candy_value(ptr %2481)
  %2482 = load ptr, ptr @"Core:iterator:where:19:2:2", align 8
  call void @free_candy_value(ptr %2482)
  %2483 = load ptr, ptr @"Core:iterator:where:19:2:3", align 8
  call void @free_candy_value(ptr %2483)
  %2484 = load ptr, ptr @"Core:iterator:where:19:2:3:4", align 8
  call void @free_candy_value(ptr %2484)
  %2485 = load ptr, ptr @"Core:iterator:where:19:2:3:6:2", align 8
  call void @free_candy_value(ptr %2485)
  %2486 = load ptr, ptr @"Core:iterator:where:19:2:3:6:4", align 8
  call void @free_candy_value(ptr %2486)
  %2487 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5", align 8
  call void @free_candy_value(ptr %2487)
  %2488 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5:item", align 8
  call void @free_candy_value(ptr %2488)
  %2489 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5:rest", align 8
  call void @free_candy_value(ptr %2489)
  %2490 = load ptr, ptr @"Core:iterator:where:19:2:3:7", align 8
  call void @free_candy_value(ptr %2490)
  %2491 = load ptr, ptr @"Core:iterator:where:19:2:3:item", align 8
  call void @free_candy_value(ptr %2491)
  %2492 = load ptr, ptr @"Core:iterator:where:19:2:3:rest", align 8
  call void @free_candy_value(ptr %2492)
  %2493 = load ptr, ptr @"Core:iterator:where:19:3", align 8
  call void @free_candy_value(ptr %2493)
  %2494 = load ptr, ptr @"Core:iterator:where:20", align 8
  call void @free_candy_value(ptr %2494)
  %2495 = load ptr, ptr @"Core:iterator:where:3", align 8
  call void @free_candy_value(ptr %2495)
  %2496 = load ptr, ptr @"Core:iterator:windowed:16", align 8
  call void @free_candy_value(ptr %2496)
  %2497 = load ptr, ptr @"Core:iterator:windowed:26", align 8
  call void @free_candy_value(ptr %2497)
  %2498 = load ptr, ptr @"Core:iterator:windowed:28", align 8
  call void @free_candy_value(ptr %2498)
  %2499 = load ptr, ptr @"Core:iterator:windowed:3", align 8
  call void @free_candy_value(ptr %2499)
  %2500 = load ptr, ptr @"Core:iterator:windowed:40", align 8
  call void @free_candy_value(ptr %2500)
  %2501 = load ptr, ptr @"Core:iterator:windowed:50", align 8
  call void @free_candy_value(ptr %2501)
  %2502 = load ptr, ptr @"Core:iterator:windowed:52", align 8
  call void @free_candy_value(ptr %2502)
  %2503 = load ptr, ptr @"Core:iterator:windowed:62", align 8
  call void @free_candy_value(ptr %2503)
  %2504 = load ptr, ptr @"Core:iterator:windowed:64", align 8
  call void @free_candy_value(ptr %2504)
  %2505 = load ptr, ptr @"Core:iterator:windowed:67:16", align 8
  call void @free_candy_value(ptr %2505)
  %2506 = load ptr, ptr @"Core:iterator:windowed:67:22", align 8
  call void @free_candy_value(ptr %2506)
  %2507 = load ptr, ptr @"Core:iterator:windowed:67:26:7", align 8
  call void @free_candy_value(ptr %2507)
  %2508 = load ptr, ptr @"Core:iterator:windowed:67:28", align 8
  call void @free_candy_value(ptr %2508)
  %2509 = load ptr, ptr @"Core:iterator:windowed:67:3", align 8
  call void @free_candy_value(ptr %2509)
  %2510 = load ptr, ptr @"Core:iterator:windowed:67:5", align 8
  call void @free_candy_value(ptr %2510)
  %2511 = load ptr, ptr @"Core:iterator:windowed:68", align 8
  call void @free_candy_value(ptr %2511)
  %2512 = load ptr, ptr @"Core:iterator:withIndex:11:1", align 8
  call void @free_candy_value(ptr %2512)
  %2513 = load ptr, ptr @"Core:iterator:withIndex:11:4", align 8
  call void @free_candy_value(ptr %2513)
  %2514 = load ptr, ptr @"Core:iterator:withIndex:11:5", align 8
  call void @free_candy_value(ptr %2514)
  %2515 = load ptr, ptr @"Core:iterator:withIndex:11:5:22", align 8
  call void @free_candy_value(ptr %2515)
  %2516 = load ptr, ptr @"Core:iterator:withIndex:11:5:item", align 8
  call void @free_candy_value(ptr %2516)
  %2517 = load ptr, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  call void @free_candy_value(ptr %2517)
  %2518 = load ptr, ptr @"Core:iterator:withIndex:11:index", align 8
  call void @free_candy_value(ptr %2518)
  %2519 = load ptr, ptr @"Core:iterator:withIndex:11:iterator", align 8
  call void @free_candy_value(ptr %2519)
  %2520 = load ptr, ptr @"Core:iterator:withIndex:12", align 8
  call void @free_candy_value(ptr %2520)
  %2521 = load ptr, ptr @"Core:iterator:withIndex:3", align 8
  call void @free_candy_value(ptr %2521)
  %2522 = load ptr, ptr @"Core:iterator:wrapSafe:11", align 8
  call void @free_candy_value(ptr %2522)
  %2523 = load ptr, ptr @"Core:iterator:wrapSafe:12:9", align 8
  call void @free_candy_value(ptr %2523)
  %2524 = load ptr, ptr @"Core:iterator:wrapSafe:16:1", align 8
  call void @free_candy_value(ptr %2524)
  %2525 = load ptr, ptr @"Core:iterator:wrapSafe:16:13", align 8
  call void @free_candy_value(ptr %2525)
  %2526 = load ptr, ptr @"Core:iterator:wrapSafe:16:1:10", align 8
  call void @free_candy_value(ptr %2526)
  %2527 = load ptr, ptr @"Core:iterator:wrapSafe:16:1:function", align 8
  call void @free_candy_value(ptr %2527)
  %2528 = load ptr, ptr @"Core:iterator:wrapSafe:16:22", align 8
  call void @free_candy_value(ptr %2528)
  %2529 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  call void @free_candy_value(ptr %2529)
  %2530 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10", align 8
  call void @free_candy_value(ptr %2530)
  %2531 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:19", align 8
  call void @free_candy_value(ptr %2531)
  %2532 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:7", align 8
  call void @free_candy_value(ptr %2532)
  %2533 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:item", align 8
  call void @free_candy_value(ptr %2533)
  %2534 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:rest", align 8
  call void @free_candy_value(ptr %2534)
  %2535 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:9", align 8
  call void @free_candy_value(ptr %2535)
  %2536 = load ptr, ptr @"Core:iterator:wrapSafe:17", align 8
  call void @free_candy_value(ptr %2536)
  %2537 = load ptr, ptr @"Core:iterator:wrapSafe:9", align 8
  call void @free_candy_value(ptr %2537)
  %2538 = load ptr, ptr @"Core:list:append:11", align 8
  call void @free_candy_value(ptr %2538)
  %2539 = load ptr, ptr @"Core:list:append:4", align 8
  call void @free_candy_value(ptr %2539)
  %2540 = load ptr, ptr @"Core:list:append:9", align 8
  call void @free_candy_value(ptr %2540)
  %2541 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %2541)
  %2542 = load ptr, ptr @"Core:result:is:1:_", align 8
  call void @free_candy_value(ptr %2542)
  %2543 = load ptr, ptr @"Core:result:mapOrElse:14", align 8
  call void @free_candy_value(ptr %2543)
  %2544 = load ptr, ptr @"Core:result:mapOrElse:16", align 8
  call void @free_candy_value(ptr %2544)
  %2545 = load ptr, ptr @"Core:result:mapOrElse:2", align 8
  call void @free_candy_value(ptr %2545)
  %2546 = load ptr, ptr @"Core:result:mapOrElse:26", align 8
  call void @free_candy_value(ptr %2546)
  %2547 = load ptr, ptr @"Core:result:mapOrElse:28", align 8
  call void @free_candy_value(ptr %2547)
  %2548 = load ptr, ptr @"Core:result:mapOrElse:30", align 8
  call void @free_candy_value(ptr %2548)
  %2549 = load ptr, ptr @"Core:result:mapOrElse:30:2", align 8
  call void @free_candy_value(ptr %2549)
  %2550 = load ptr, ptr @"Core:result:mapOrElse:30:5", align 8
  call void @free_candy_value(ptr %2550)
  %2551 = load ptr, ptr @"Core:result:mapOrElse:30:value", align 8
  call void @free_candy_value(ptr %2551)
  %2552 = load ptr, ptr @"Core:result:mapOrElse:30:value#1", align 8
  call void @free_candy_value(ptr %2552)
  %2553 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %2553)
  %2554 = load ptr, ptr @"Core:result:unwrapOr:2", align 8
  call void @free_candy_value(ptr %2554)
  %2555 = load ptr, ptr @"Core:result:unwrapOr:4", align 8
  call void @free_candy_value(ptr %2555)
  %2556 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  call void @free_candy_value(ptr %2556)
  %2557 = load ptr, ptr @"Core:result:unwrapOrElse:14", align 8
  call void @free_candy_value(ptr %2557)
  %2558 = load ptr, ptr @"Core:result:unwrapOrElse:16", align 8
  call void @free_candy_value(ptr %2558)
  %2559 = load ptr, ptr @"Core:result:unwrapOrElse:2", align 8
  call void @free_candy_value(ptr %2559)
  %2560 = load ptr, ptr @"Core:result:unwrapOrElse:20:9", align 8
  call void @free_candy_value(ptr %2560)
  %2561 = load ptr, ptr @"Core:result:unwrapOrElse:21", align 8
  call void @free_candy_value(ptr %2561)
  %2562 = load ptr, ptr @"Core:result:unwrapOrElse:4", align 8
  call void @free_candy_value(ptr %2562)
  %2563 = load ptr, ptr @tag_Empty, align 8
  call void @free_candy_value(ptr %2563)
  %2564 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %2564)
  %2565 = load ptr, ptr @tag_Index, align 8
  call void @free_candy_value(ptr %2565)
  %2566 = load ptr, ptr @tag_Item, align 8
  call void @free_candy_value(ptr %2566)
  %2567 = load ptr, ptr @tag_Iterator, align 8
  call void @free_candy_value(ptr %2567)
  %2568 = load ptr, ptr @tag_More, align 8
  call void @free_candy_value(ptr %2568)
  %2569 = load ptr, ptr @tag_N, align 8
  call void @free_candy_value(ptr %2569)
  %2570 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %2570)
  %2571 = load ptr, ptr @tag_Rest, align 8
  call void @free_candy_value(ptr %2571)
  %2572 = load ptr, ptr @tag_State, align 8
  call void @free_candy_value(ptr %2572)
  %2573 = load ptr, ptr @tag_Value, align 8
  call void @free_candy_value(ptr %2573)
  %2574 = load ptr, ptr @text_, align 8
  call void @free_candy_value(ptr %2574)
  %2575 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  call void @free_candy_value(ptr %2575)
  %2576 = load ptr, ptr @"text_Expected Empty, got ", align 8
  call void @free_candy_value(ptr %2576)
  %2577 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %2577)
  %2578 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  call void @free_candy_value(ptr %2578)
  %2579 = load ptr, ptr @"text_Expected More, got ", align 8
  call void @free_candy_value(ptr %2579)
  %2580 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %2580)
  %2581 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  call void @free_candy_value(ptr %2581)
  %2582 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  call void @free_candy_value(ptr %2582)
  %2583 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  call void @free_candy_value(ptr %2583)
  %2584 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  call void @free_candy_value(ptr %2584)
  %2585 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  call void @free_candy_value(ptr %2585)
  %2586 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  call void @free_candy_value(ptr %2586)
  %2587 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  call void @free_candy_value(ptr %2587)
  %2588 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  call void @free_candy_value(ptr %2588)
  %2589 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  call void @free_candy_value(ptr %2589)
  %2590 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @free_candy_value(ptr %2590)
  %2591 = load ptr, ptr @"text_`", align 8
  call void @free_candy_value(ptr %2591)
  %2592 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @free_candy_value(ptr %2592)
  %2593 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @free_candy_value(ptr %2593)
  %2594 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  call void @free_candy_value(ptr %2594)
  %2595 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  call void @free_candy_value(ptr %2595)
  %2596 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @free_candy_value(ptr %2596)
  %2597 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @free_candy_value(ptr %2597)
  %2598 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %2598)
  %2599 = load ptr, ptr @"text_`forEach` needs an iterator.", align 8
  call void @free_candy_value(ptr %2599)
  %2600 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %2600)
  %2601 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  call void @free_candy_value(ptr %2601)
  %2602 = load ptr, ptr @"text_`function.is1 action` was not satisfied", align 8
  call void @free_candy_value(ptr %2602)
  %2603 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %2603)
  %2604 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  call void @free_candy_value(ptr %2604)
  %2605 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  call void @free_candy_value(ptr %2605)
  %2606 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %2606)
  %2607 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  call void @free_candy_value(ptr %2607)
  %2608 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %2608)
  %2609 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  call void @free_candy_value(ptr %2609)
  %2610 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  call void @free_candy_value(ptr %2610)
  %2611 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  call void @free_candy_value(ptr %2611)
  %2612 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  call void @free_candy_value(ptr %2612)
  %2613 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  call void @free_candy_value(ptr %2613)
  %2614 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  call void @free_candy_value(ptr %2614)
  %2615 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  call void @free_candy_value(ptr %2615)
  %2616 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  call void @free_candy_value(ptr %2616)
  %2617 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  call void @free_candy_value(ptr %2617)
  %2618 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  call void @free_candy_value(ptr %2618)
  %2619 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  call void @free_candy_value(ptr %2619)
  %2620 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %2620)
  %2621 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @free_candy_value(ptr %2621)
  %2622 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @free_candy_value(ptr %2622)
  %2623 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @free_candy_value(ptr %2623)
  %2624 = load ptr, ptr @"text_`list.is l` was not satisfied", align 8
  call void @free_candy_value(ptr %2624)
  %2625 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @free_candy_value(ptr %2625)
  %2626 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @free_candy_value(ptr %2626)
  %2627 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %2627)
  %2628 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @free_candy_value(ptr %2628)
  %2629 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @free_candy_value(ptr %2629)
  %2630 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @free_candy_value(ptr %2630)
  %2631 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @free_candy_value(ptr %2631)
  %2632 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  call void @free_candy_value(ptr %2632)
  %2633 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @free_candy_value(ptr %2633)
  %2634 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @free_candy_value(ptr %2634)
  %2635 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @free_candy_value(ptr %2635)
  %2636 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @free_candy_value(ptr %2636)
  %2637 = load ptr, ptr @fun_Core_result_is, align 8
  call void @free_candy_value(ptr %2637)
  %2638 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %2638)
  %2639 = load ptr, ptr @fun_Core_result_is_1_equals_then.122, align 8
  call void @free_candy_value(ptr %2639)
  %2640 = load ptr, ptr @fun_Core_result_is_1_equals_then.124, align 8
  call void @free_candy_value(ptr %2640)
  %2641 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %2641)
  %2642 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %2642)
  %2643 = load ptr, ptr @fun_Core_result_is_1_equals_else.126, align 8
  call void @free_candy_value(ptr %2643)
  %2644 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %2644)
  %2645 = load ptr, ptr @fun_Core_result_is_1_equals_else.128, align 8
  call void @free_candy_value(ptr %2645)
  %2646 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %2646)
  %2647 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2647)
  %2648 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2648)
  %2649 = load ptr, ptr @fun_Core_result_is_1_equals_then.130, align 8
  call void @free_candy_value(ptr %2649)
  %2650 = load ptr, ptr @fun_Core_result_is_1_equals_then.132, align 8
  call void @free_candy_value(ptr %2650)
  %2651 = load ptr, ptr @fun_Core_result_is_1_equals_then.134, align 8
  call void @free_candy_value(ptr %2651)
  %2652 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %2652)
  %2653 = load ptr, ptr @fun_Core_result_is_1_equals_else.136, align 8
  call void @free_candy_value(ptr %2653)
  %2654 = load ptr, ptr @fun_Core_result_is_1_equals_else.138, align 8
  call void @free_candy_value(ptr %2654)
  %2655 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %2655)
  %2656 = load ptr, ptr @fun_Core_result_is_1_equals_else.140, align 8
  call void @free_candy_value(ptr %2656)
  %2657 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %2657)
  %2658 = load ptr, ptr @fun_Core_result_is_1_case-0_patternMatch, align 8
  call void @free_candy_value(ptr %2658)
  %2659 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2659)
  %2660 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %2660)
  %2661 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  call void @free_candy_value(ptr %2661)
  %2662 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.142, align 8
  call void @free_candy_value(ptr %2662)
  %2663 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.144, align 8
  call void @free_candy_value(ptr %2663)
  %2664 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %2664)
  %2665 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  call void @free_candy_value(ptr %2665)
  %2666 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.146, align 8
  call void @free_candy_value(ptr %2666)
  %2667 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %2667)
  %2668 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.148, align 8
  call void @free_candy_value(ptr %2668)
  %2669 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %2669)
  %2670 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2670)
  %2671 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.150, align 8
  call void @free_candy_value(ptr %2671)
  %2672 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.152, align 8
  call void @free_candy_value(ptr %2672)
  %2673 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.154, align 8
  call void @free_candy_value(ptr %2673)
  %2674 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %2674)
  %2675 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.156, align 8
  call void @free_candy_value(ptr %2675)
  %2676 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.158, align 8
  call void @free_candy_value(ptr %2676)
  %2677 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %2677)
  %2678 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.160, align 8
  call void @free_candy_value(ptr %2678)
  %2679 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %2679)
  %2680 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %2680)
  %2681 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_patternMatch, align 8
  call void @free_candy_value(ptr %2681)
  %2682 = load ptr, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  call void @free_candy_value(ptr %2682)
  %2683 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  call void @free_candy_value(ptr %2683)
  %2684 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  call void @free_candy_value(ptr %2684)
  %2685 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  call void @free_candy_value(ptr %2685)
  %2686 = load ptr, ptr @fun_Core_list_append, align 8
  call void @free_candy_value(ptr %2686)
  %2687 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  call void @free_candy_value(ptr %2687)
  %2688 = load ptr, ptr @fun_Core_iterator_wrapSafe, align 8
  call void @free_candy_value(ptr %2688)
  %2689 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  call void @free_candy_value(ptr %2689)
  %2690 = load ptr, ptr @fun_Core_iterator_wrapSafe_16, align 8
  call void @free_candy_value(ptr %2690)
  %2691 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  call void @free_candy_value(ptr %2691)
  %2692 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.162, align 8
  call void @free_candy_value(ptr %2692)
  %2693 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.164, align 8
  call void @free_candy_value(ptr %2693)
  %2694 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %2694)
  %2695 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  call void @free_candy_value(ptr %2695)
  %2696 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.166, align 8
  call void @free_candy_value(ptr %2696)
  %2697 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %2697)
  %2698 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.168, align 8
  call void @free_candy_value(ptr %2698)
  %2699 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %2699)
  %2700 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2700)
  %2701 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_patternMatch, align 8
  call void @free_candy_value(ptr %2701)
  %2702 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  call void @free_candy_value(ptr %2702)
  %2703 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  call void @free_candy_value(ptr %2703)
  %2704 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.170, align 8
  call void @free_candy_value(ptr %2704)
  %2705 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  call void @free_candy_value(ptr %2705)
  %2706 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %2706)
  %2707 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.172, align 8
  call void @free_candy_value(ptr %2707)
  %2708 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %2708)
  %2709 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.174, align 8
  call void @free_candy_value(ptr %2709)
  %2710 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %2710)
  %2711 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2711)
  %2712 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.176, align 8
  call void @free_candy_value(ptr %2712)
  %2713 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.178, align 8
  call void @free_candy_value(ptr %2713)
  %2714 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.180, align 8
  call void @free_candy_value(ptr %2714)
  %2715 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.182, align 8
  call void @free_candy_value(ptr %2715)
  %2716 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  call void @free_candy_value(ptr %2716)
  %2717 = load ptr, ptr @62, align 8
  call void @free_candy_value(ptr %2717)
  %2718 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  call void @free_candy_value(ptr %2718)
  %2719 = load ptr, ptr @63, align 8
  call void @free_candy_value(ptr %2719)
  %2720 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  call void @free_candy_value(ptr %2720)
  %2721 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.184, align 8
  call void @free_candy_value(ptr %2721)
  %2722 = load ptr, ptr @64, align 8
  call void @free_candy_value(ptr %2722)
  %2723 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.186, align 8
  call void @free_candy_value(ptr %2723)
  %2724 = load ptr, ptr @65, align 8
  call void @free_candy_value(ptr %2724)
  %2725 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.188, align 8
  call void @free_candy_value(ptr %2725)
  %2726 = load ptr, ptr @66, align 8
  call void @free_candy_value(ptr %2726)
  %2727 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  call void @free_candy_value(ptr %2727)
  %2728 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.190, align 8
  call void @free_candy_value(ptr %2728)
  %2729 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.192, align 8
  call void @free_candy_value(ptr %2729)
  %2730 = load ptr, ptr @67, align 8
  call void @free_candy_value(ptr %2730)
  %2731 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.194, align 8
  call void @free_candy_value(ptr %2731)
  %2732 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.196, align 8
  call void @free_candy_value(ptr %2732)
  %2733 = load ptr, ptr @68, align 8
  call void @free_candy_value(ptr %2733)
  %2734 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.198, align 8
  call void @free_candy_value(ptr %2734)
  %2735 = load ptr, ptr @69, align 8
  call void @free_candy_value(ptr %2735)
  %2736 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2736)
  %2737 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %2737)
  %2738 = load ptr, ptr @tag_More.199, align 8
  call void @free_candy_value(ptr %2738)
  %2739 = load ptr, ptr @tag_Iterator.200, align 8
  call void @free_candy_value(ptr %2739)
  %2740 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  call void @free_candy_value(ptr %2740)
  %2741 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  call void @free_candy_value(ptr %2741)
  %2742 = load ptr, ptr @fun_Core_iterator_next, align 8
  call void @free_candy_value(ptr %2742)
  %2743 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  call void @free_candy_value(ptr %2743)
  %2744 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  call void @free_candy_value(ptr %2744)
  %2745 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.202, align 8
  call void @free_candy_value(ptr %2745)
  %2746 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.204, align 8
  call void @free_candy_value(ptr %2746)
  %2747 = load ptr, ptr @70, align 8
  call void @free_candy_value(ptr %2747)
  %2748 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  call void @free_candy_value(ptr %2748)
  %2749 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.206, align 8
  call void @free_candy_value(ptr %2749)
  %2750 = load ptr, ptr @71, align 8
  call void @free_candy_value(ptr %2750)
  %2751 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.208, align 8
  call void @free_candy_value(ptr %2751)
  %2752 = load ptr, ptr @72, align 8
  call void @free_candy_value(ptr %2752)
  %2753 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  call void @free_candy_value(ptr %2753)
  %2754 = load ptr, ptr @fun_Core_iterator_generateWithState, align 8
  call void @free_candy_value(ptr %2754)
  %2755 = load ptr, ptr @fun_Core_iterator_generateWithState_14, align 8
  call void @free_candy_value(ptr %2755)
  %2756 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  call void @free_candy_value(ptr %2756)
  %2757 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  call void @free_candy_value(ptr %2757)
  %2758 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.210, align 8
  call void @free_candy_value(ptr %2758)
  %2759 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.212, align 8
  call void @free_candy_value(ptr %2759)
  %2760 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.214, align 8
  call void @free_candy_value(ptr %2760)
  %2761 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  call void @free_candy_value(ptr %2761)
  %2762 = load ptr, ptr @73, align 8
  call void @free_candy_value(ptr %2762)
  %2763 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  call void @free_candy_value(ptr %2763)
  %2764 = load ptr, ptr @74, align 8
  call void @free_candy_value(ptr %2764)
  %2765 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  call void @free_candy_value(ptr %2765)
  %2766 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.216, align 8
  call void @free_candy_value(ptr %2766)
  %2767 = load ptr, ptr @75, align 8
  call void @free_candy_value(ptr %2767)
  %2768 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.218, align 8
  call void @free_candy_value(ptr %2768)
  %2769 = load ptr, ptr @76, align 8
  call void @free_candy_value(ptr %2769)
  %2770 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.220, align 8
  call void @free_candy_value(ptr %2770)
  %2771 = load ptr, ptr @77, align 8
  call void @free_candy_value(ptr %2771)
  %2772 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  call void @free_candy_value(ptr %2772)
  %2773 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.222, align 8
  call void @free_candy_value(ptr %2773)
  %2774 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  call void @free_candy_value(ptr %2774)
  %2775 = load ptr, ptr @78, align 8
  call void @free_candy_value(ptr %2775)
  %2776 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.224, align 8
  call void @free_candy_value(ptr %2776)
  %2777 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.226, align 8
  call void @free_candy_value(ptr %2777)
  %2778 = load ptr, ptr @79, align 8
  call void @free_candy_value(ptr %2778)
  %2779 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.228, align 8
  call void @free_candy_value(ptr %2779)
  %2780 = load ptr, ptr @80, align 8
  call void @free_candy_value(ptr %2780)
  %2781 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2781)
  %2782 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.230, align 8
  call void @free_candy_value(ptr %2782)
  %2783 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.232, align 8
  call void @free_candy_value(ptr %2783)
  %2784 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.234, align 8
  call void @free_candy_value(ptr %2784)
  %2785 = load ptr, ptr @81, align 8
  call void @free_candy_value(ptr %2785)
  %2786 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.236, align 8
  call void @free_candy_value(ptr %2786)
  %2787 = load ptr, ptr @82, align 8
  call void @free_candy_value(ptr %2787)
  %2788 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.238, align 8
  call void @free_candy_value(ptr %2788)
  %2789 = load ptr, ptr @83, align 8
  call void @free_candy_value(ptr %2789)
  %2790 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2790)
  %2791 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_patternMatch, align 8
  call void @free_candy_value(ptr %2791)
  %2792 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  call void @free_candy_value(ptr %2792)
  %2793 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  call void @free_candy_value(ptr %2793)
  %2794 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_patternMatch, align 8
  call void @free_candy_value(ptr %2794)
  %2795 = load ptr, ptr @tag_More.239, align 8
  call void @free_candy_value(ptr %2795)
  %2796 = load ptr, ptr @tag_Iterator.240, align 8
  call void @free_candy_value(ptr %2796)
  %2797 = load ptr, ptr @fun_Core_controlFlow_recursive_18.242, align 8
  call void @free_candy_value(ptr %2797)
  %2798 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.244, align 8
  call void @free_candy_value(ptr %2798)
  %2799 = load ptr, ptr @fun_Core_iterator_generate, align 8
  call void @free_candy_value(ptr %2799)
  %2800 = load ptr, ptr @fun_Core_iterator_generate_50, align 8
  call void @free_candy_value(ptr %2800)
  %2801 = load ptr, ptr @fun_Core_iterator_generate_50_6, align 8
  call void @free_candy_value(ptr %2801)
  %2802 = load ptr, ptr @tag_More.245, align 8
  call void @free_candy_value(ptr %2802)
  %2803 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2803)
  %2804 = load ptr, ptr @fun_Core_iterator_map, align 8
  call void @free_candy_value(ptr %2804)
  %2805 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  call void @free_candy_value(ptr %2805)
  %2806 = load ptr, ptr @fun_Core_iterator_map_19, align 8
  call void @free_candy_value(ptr %2806)
  %2807 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  call void @free_candy_value(ptr %2807)
  %2808 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.247, align 8
  call void @free_candy_value(ptr %2808)
  %2809 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  call void @free_candy_value(ptr %2809)
  %2810 = load ptr, ptr @84, align 8
  call void @free_candy_value(ptr %2810)
  %2811 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.249, align 8
  call void @free_candy_value(ptr %2811)
  %2812 = load ptr, ptr @85, align 8
  call void @free_candy_value(ptr %2812)
  %2813 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.251, align 8
  call void @free_candy_value(ptr %2813)
  %2814 = load ptr, ptr @86, align 8
  call void @free_candy_value(ptr %2814)
  %2815 = load ptr, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2815)
  %2816 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.253, align 8
  call void @free_candy_value(ptr %2816)
  %2817 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.255, align 8
  call void @free_candy_value(ptr %2817)
  %2818 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.257, align 8
  call void @free_candy_value(ptr %2818)
  %2819 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.259, align 8
  call void @free_candy_value(ptr %2819)
  %2820 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  call void @free_candy_value(ptr %2820)
  %2821 = load ptr, ptr @87, align 8
  call void @free_candy_value(ptr %2821)
  %2822 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  call void @free_candy_value(ptr %2822)
  %2823 = load ptr, ptr @88, align 8
  call void @free_candy_value(ptr %2823)
  %2824 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  call void @free_candy_value(ptr %2824)
  %2825 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then.261, align 8
  call void @free_candy_value(ptr %2825)
  %2826 = load ptr, ptr @89, align 8
  call void @free_candy_value(ptr %2826)
  %2827 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else.263, align 8
  call void @free_candy_value(ptr %2827)
  %2828 = load ptr, ptr @90, align 8
  call void @free_candy_value(ptr %2828)
  %2829 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then.265, align 8
  call void @free_candy_value(ptr %2829)
  %2830 = load ptr, ptr @91, align 8
  call void @free_candy_value(ptr %2830)
  %2831 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  call void @free_candy_value(ptr %2831)
  %2832 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else.267, align 8
  call void @free_candy_value(ptr %2832)
  %2833 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.269, align 8
  call void @free_candy_value(ptr %2833)
  %2834 = load ptr, ptr @92, align 8
  call void @free_candy_value(ptr %2834)
  %2835 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.271, align 8
  call void @free_candy_value(ptr %2835)
  %2836 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.273, align 8
  call void @free_candy_value(ptr %2836)
  %2837 = load ptr, ptr @93, align 8
  call void @free_candy_value(ptr %2837)
  %2838 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.275, align 8
  call void @free_candy_value(ptr %2838)
  %2839 = load ptr, ptr @94, align 8
  call void @free_candy_value(ptr %2839)
  %2840 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %2840)
  %2841 = load ptr, ptr @tag_More.276, align 8
  call void @free_candy_value(ptr %2841)
  %2842 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2842)
  %2843 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  call void @free_candy_value(ptr %2843)
  %2844 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  call void @free_candy_value(ptr %2844)
  %2845 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  call void @free_candy_value(ptr %2845)
  %2846 = load ptr, ptr @95, align 8
  call void @free_candy_value(ptr %2846)
  %2847 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  call void @free_candy_value(ptr %2847)
  %2848 = load ptr, ptr @96, align 8
  call void @free_candy_value(ptr %2848)
  %2849 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2849)
  %2850 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.278, align 8
  call void @free_candy_value(ptr %2850)
  %2851 = load ptr, ptr @97, align 8
  call void @free_candy_value(ptr %2851)
  %2852 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.280, align 8
  call void @free_candy_value(ptr %2852)
  %2853 = load ptr, ptr @98, align 8
  call void @free_candy_value(ptr %2853)
  %2854 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.282, align 8
  call void @free_candy_value(ptr %2854)
  %2855 = load ptr, ptr @99, align 8
  call void @free_candy_value(ptr %2855)
  %2856 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2856)
  %2857 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.284, align 8
  call void @free_candy_value(ptr %2857)
  %2858 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  call void @free_candy_value(ptr %2858)
  %2859 = load ptr, ptr @100, align 8
  call void @free_candy_value(ptr %2859)
  %2860 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.286, align 8
  call void @free_candy_value(ptr %2860)
  %2861 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  call void @free_candy_value(ptr %2861)
  %2862 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.288, align 8
  call void @free_candy_value(ptr %2862)
  %2863 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  call void @free_candy_value(ptr %2863)
  %2864 = load ptr, ptr @101, align 8
  call void @free_candy_value(ptr %2864)
  %2865 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.290, align 8
  call void @free_candy_value(ptr %2865)
  %2866 = load ptr, ptr @102, align 8
  call void @free_candy_value(ptr %2866)
  %2867 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.292, align 8
  call void @free_candy_value(ptr %2867)
  %2868 = load ptr, ptr @103, align 8
  call void @free_candy_value(ptr %2868)
  %2869 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2869)
  %2870 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.294, align 8
  call void @free_candy_value(ptr %2870)
  %2871 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.296, align 8
  call void @free_candy_value(ptr %2871)
  %2872 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.298, align 8
  call void @free_candy_value(ptr %2872)
  %2873 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.300, align 8
  call void @free_candy_value(ptr %2873)
  %2874 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  call void @free_candy_value(ptr %2874)
  %2875 = load ptr, ptr @104, align 8
  call void @free_candy_value(ptr %2875)
  %2876 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  call void @free_candy_value(ptr %2876)
  %2877 = load ptr, ptr @105, align 8
  call void @free_candy_value(ptr %2877)
  %2878 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  call void @free_candy_value(ptr %2878)
  %2879 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.302, align 8
  call void @free_candy_value(ptr %2879)
  %2880 = load ptr, ptr @106, align 8
  call void @free_candy_value(ptr %2880)
  %2881 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.304, align 8
  call void @free_candy_value(ptr %2881)
  %2882 = load ptr, ptr @107, align 8
  call void @free_candy_value(ptr %2882)
  %2883 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.306, align 8
  call void @free_candy_value(ptr %2883)
  %2884 = load ptr, ptr @108, align 8
  call void @free_candy_value(ptr %2884)
  %2885 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  call void @free_candy_value(ptr %2885)
  %2886 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.308, align 8
  call void @free_candy_value(ptr %2886)
  %2887 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.310, align 8
  call void @free_candy_value(ptr %2887)
  %2888 = load ptr, ptr @109, align 8
  call void @free_candy_value(ptr %2888)
  %2889 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.312, align 8
  call void @free_candy_value(ptr %2889)
  %2890 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.314, align 8
  call void @free_candy_value(ptr %2890)
  %2891 = load ptr, ptr @110, align 8
  call void @free_candy_value(ptr %2891)
  %2892 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.316, align 8
  call void @free_candy_value(ptr %2892)
  %2893 = load ptr, ptr @111, align 8
  call void @free_candy_value(ptr %2893)
  %2894 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %2894)
  %2895 = load ptr, ptr @tag_More.317, align 8
  call void @free_candy_value(ptr %2895)
  %2896 = load ptr, ptr @fun_Core_iterator_ensure, align 8
  call void @free_candy_value(ptr %2896)
  %2897 = load ptr, ptr @fun_Core_iterator_ensure_14, align 8
  call void @free_candy_value(ptr %2897)
  %2898 = load ptr, ptr @fun_Core_iterator_ensure_19, align 8
  call void @free_candy_value(ptr %2898)
  %2899 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2899)
  %2900 = load ptr, ptr @fun_Core_iterator_foldLeft, align 8
  call void @free_candy_value(ptr %2900)
  %2901 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  call void @free_candy_value(ptr %2901)
  %2902 = load ptr, ptr @fun_Core_iterator_foldLeft_23, align 8
  call void @free_candy_value(ptr %2902)
  %2903 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  call void @free_candy_value(ptr %2903)
  %2904 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  call void @free_candy_value(ptr %2904)
  %2905 = load ptr, ptr @112, align 8
  call void @free_candy_value(ptr %2905)
  %2906 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  call void @free_candy_value(ptr %2906)
  %2907 = load ptr, ptr @113, align 8
  call void @free_candy_value(ptr %2907)
  %2908 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2908)
  %2909 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.319, align 8
  call void @free_candy_value(ptr %2909)
  %2910 = load ptr, ptr @114, align 8
  call void @free_candy_value(ptr %2910)
  %2911 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.321, align 8
  call void @free_candy_value(ptr %2911)
  %2912 = load ptr, ptr @115, align 8
  call void @free_candy_value(ptr %2912)
  %2913 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.323, align 8
  call void @free_candy_value(ptr %2913)
  %2914 = load ptr, ptr @116, align 8
  call void @free_candy_value(ptr %2914)
  %2915 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2915)
  %2916 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.325, align 8
  call void @free_candy_value(ptr %2916)
  %2917 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  call void @free_candy_value(ptr %2917)
  %2918 = load ptr, ptr @117, align 8
  call void @free_candy_value(ptr %2918)
  %2919 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.327, align 8
  call void @free_candy_value(ptr %2919)
  %2920 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  call void @free_candy_value(ptr %2920)
  %2921 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.329, align 8
  call void @free_candy_value(ptr %2921)
  %2922 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  call void @free_candy_value(ptr %2922)
  %2923 = load ptr, ptr @118, align 8
  call void @free_candy_value(ptr %2923)
  %2924 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.331, align 8
  call void @free_candy_value(ptr %2924)
  %2925 = load ptr, ptr @119, align 8
  call void @free_candy_value(ptr %2925)
  %2926 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.333, align 8
  call void @free_candy_value(ptr %2926)
  %2927 = load ptr, ptr @120, align 8
  call void @free_candy_value(ptr %2927)
  %2928 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2928)
  %2929 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.335, align 8
  call void @free_candy_value(ptr %2929)
  %2930 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.337, align 8
  call void @free_candy_value(ptr %2930)
  %2931 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.339, align 8
  call void @free_candy_value(ptr %2931)
  %2932 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.341, align 8
  call void @free_candy_value(ptr %2932)
  %2933 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  call void @free_candy_value(ptr %2933)
  %2934 = load ptr, ptr @121, align 8
  call void @free_candy_value(ptr %2934)
  %2935 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  call void @free_candy_value(ptr %2935)
  %2936 = load ptr, ptr @122, align 8
  call void @free_candy_value(ptr %2936)
  %2937 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  call void @free_candy_value(ptr %2937)
  %2938 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.343, align 8
  call void @free_candy_value(ptr %2938)
  %2939 = load ptr, ptr @123, align 8
  call void @free_candy_value(ptr %2939)
  %2940 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.345, align 8
  call void @free_candy_value(ptr %2940)
  %2941 = load ptr, ptr @124, align 8
  call void @free_candy_value(ptr %2941)
  %2942 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.347, align 8
  call void @free_candy_value(ptr %2942)
  %2943 = load ptr, ptr @125, align 8
  call void @free_candy_value(ptr %2943)
  %2944 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  call void @free_candy_value(ptr %2944)
  %2945 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.349, align 8
  call void @free_candy_value(ptr %2945)
  %2946 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.351, align 8
  call void @free_candy_value(ptr %2946)
  %2947 = load ptr, ptr @126, align 8
  call void @free_candy_value(ptr %2947)
  %2948 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.353, align 8
  call void @free_candy_value(ptr %2948)
  %2949 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.355, align 8
  call void @free_candy_value(ptr %2949)
  %2950 = load ptr, ptr @127, align 8
  call void @free_candy_value(ptr %2950)
  %2951 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.357, align 8
  call void @free_candy_value(ptr %2951)
  %2952 = load ptr, ptr @128, align 8
  call void @free_candy_value(ptr %2952)
  %2953 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %2953)
  %2954 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_patternMatch, align 8
  call void @free_candy_value(ptr %2954)
  %2955 = load ptr, ptr @fun_Core_controlFlow_recursive_18.359, align 8
  call void @free_candy_value(ptr %2955)
  %2956 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.361, align 8
  call void @free_candy_value(ptr %2956)
  %2957 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2957)
  %2958 = load ptr, ptr @tag_Error.362, align 8
  call void @free_candy_value(ptr %2958)
  %2959 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_patternMatch, align 8
  call void @free_candy_value(ptr %2959)
  %2960 = load ptr, ptr @fun_Core_iterator_reduceLeft, align 8
  call void @free_candy_value(ptr %2960)
  %2961 = load ptr, ptr @fun_Core_iterator_reduceLeft_14, align 8
  call void @free_candy_value(ptr %2961)
  %2962 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  call void @free_candy_value(ptr %2962)
  %2963 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.364, align 8
  call void @free_candy_value(ptr %2963)
  %2964 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  call void @free_candy_value(ptr %2964)
  %2965 = load ptr, ptr @129, align 8
  call void @free_candy_value(ptr %2965)
  %2966 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.366, align 8
  call void @free_candy_value(ptr %2966)
  %2967 = load ptr, ptr @130, align 8
  call void @free_candy_value(ptr %2967)
  %2968 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.368, align 8
  call void @free_candy_value(ptr %2968)
  %2969 = load ptr, ptr @131, align 8
  call void @free_candy_value(ptr %2969)
  %2970 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2970)
  %2971 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.370, align 8
  call void @free_candy_value(ptr %2971)
  %2972 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.372, align 8
  call void @free_candy_value(ptr %2972)
  %2973 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.374, align 8
  call void @free_candy_value(ptr %2973)
  %2974 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.376, align 8
  call void @free_candy_value(ptr %2974)
  %2975 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  call void @free_candy_value(ptr %2975)
  %2976 = load ptr, ptr @132, align 8
  call void @free_candy_value(ptr %2976)
  %2977 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  call void @free_candy_value(ptr %2977)
  %2978 = load ptr, ptr @133, align 8
  call void @free_candy_value(ptr %2978)
  %2979 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  call void @free_candy_value(ptr %2979)
  %2980 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.378, align 8
  call void @free_candy_value(ptr %2980)
  %2981 = load ptr, ptr @134, align 8
  call void @free_candy_value(ptr %2981)
  %2982 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.380, align 8
  call void @free_candy_value(ptr %2982)
  %2983 = load ptr, ptr @135, align 8
  call void @free_candy_value(ptr %2983)
  %2984 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.382, align 8
  call void @free_candy_value(ptr %2984)
  %2985 = load ptr, ptr @136, align 8
  call void @free_candy_value(ptr %2985)
  %2986 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  call void @free_candy_value(ptr %2986)
  %2987 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.384, align 8
  call void @free_candy_value(ptr %2987)
  %2988 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.386, align 8
  call void @free_candy_value(ptr %2988)
  %2989 = load ptr, ptr @137, align 8
  call void @free_candy_value(ptr %2989)
  %2990 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.388, align 8
  call void @free_candy_value(ptr %2990)
  %2991 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.390, align 8
  call void @free_candy_value(ptr %2991)
  %2992 = load ptr, ptr @138, align 8
  call void @free_candy_value(ptr %2992)
  %2993 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.392, align 8
  call void @free_candy_value(ptr %2993)
  %2994 = load ptr, ptr @139, align 8
  call void @free_candy_value(ptr %2994)
  %2995 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %2995)
  %2996 = load ptr, ptr @tag_Ok.393, align 8
  call void @free_candy_value(ptr %2996)
  %2997 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  call void @free_candy_value(ptr %2997)
  %2998 = load ptr, ptr @fun_Core_iterator_sum, align 8
  call void @free_candy_value(ptr %2998)
  %2999 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  call void @free_candy_value(ptr %2999)
  %3000 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  call void @free_candy_value(ptr %3000)
  %3001 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  call void @free_candy_value(ptr %3001)
  %3002 = load ptr, ptr @fun_Core_iterator_all, align 8
  call void @free_candy_value(ptr %3002)
  %3003 = load ptr, ptr @fun_Core_iterator_all_14, align 8
  call void @free_candy_value(ptr %3003)
  %3004 = load ptr, ptr @fun_Core_iterator_all_18, align 8
  call void @free_candy_value(ptr %3004)
  %3005 = load ptr, ptr @fun_Core_bool_and_12, align 8
  call void @free_candy_value(ptr %3005)
  %3006 = load ptr, ptr @fun_Core_iterator_any, align 8
  call void @free_candy_value(ptr %3006)
  %3007 = load ptr, ptr @fun_Core_iterator_any_14, align 8
  call void @free_candy_value(ptr %3007)
  %3008 = load ptr, ptr @fun_Core_iterator_any_18, align 8
  call void @free_candy_value(ptr %3008)
  %3009 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %3009)
  %3010 = load ptr, ptr @fun_Core_iterator_joinToText, align 8
  call void @free_candy_value(ptr %3010)
  %3011 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  call void @free_candy_value(ptr %3011)
  %3012 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  call void @free_candy_value(ptr %3012)
  %3013 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3013)
  %3014 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3014)
  %3015 = load ptr, ptr @fun_Core_iterator_where, align 8
  call void @free_candy_value(ptr %3015)
  %3016 = load ptr, ptr @fun_Core_iterator_where_2, align 8
  call void @free_candy_value(ptr %3016)
  %3017 = load ptr, ptr @fun_Core_iterator_where_19, align 8
  call void @free_candy_value(ptr %3017)
  %3018 = load ptr, ptr @fun_Core_iterator_where_19_2, align 8
  call void @free_candy_value(ptr %3018)
  %3019 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  call void @free_candy_value(ptr %3019)
  %3020 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.395, align 8
  call void @free_candy_value(ptr %3020)
  %3021 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  call void @free_candy_value(ptr %3021)
  %3022 = load ptr, ptr @140, align 8
  call void @free_candy_value(ptr %3022)
  %3023 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.397, align 8
  call void @free_candy_value(ptr %3023)
  %3024 = load ptr, ptr @141, align 8
  call void @free_candy_value(ptr %3024)
  %3025 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.399, align 8
  call void @free_candy_value(ptr %3025)
  %3026 = load ptr, ptr @142, align 8
  call void @free_candy_value(ptr %3026)
  %3027 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3027)
  %3028 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.401, align 8
  call void @free_candy_value(ptr %3028)
  %3029 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.403, align 8
  call void @free_candy_value(ptr %3029)
  %3030 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.405, align 8
  call void @free_candy_value(ptr %3030)
  %3031 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.407, align 8
  call void @free_candy_value(ptr %3031)
  %3032 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  call void @free_candy_value(ptr %3032)
  %3033 = load ptr, ptr @143, align 8
  call void @free_candy_value(ptr %3033)
  %3034 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  call void @free_candy_value(ptr %3034)
  %3035 = load ptr, ptr @144, align 8
  call void @free_candy_value(ptr %3035)
  %3036 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  call void @free_candy_value(ptr %3036)
  %3037 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.409, align 8
  call void @free_candy_value(ptr %3037)
  %3038 = load ptr, ptr @145, align 8
  call void @free_candy_value(ptr %3038)
  %3039 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.411, align 8
  call void @free_candy_value(ptr %3039)
  %3040 = load ptr, ptr @146, align 8
  call void @free_candy_value(ptr %3040)
  %3041 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.413, align 8
  call void @free_candy_value(ptr %3041)
  %3042 = load ptr, ptr @147, align 8
  call void @free_candy_value(ptr %3042)
  %3043 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  call void @free_candy_value(ptr %3043)
  %3044 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.415, align 8
  call void @free_candy_value(ptr %3044)
  %3045 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.417, align 8
  call void @free_candy_value(ptr %3045)
  %3046 = load ptr, ptr @148, align 8
  call void @free_candy_value(ptr %3046)
  %3047 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.419, align 8
  call void @free_candy_value(ptr %3047)
  %3048 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.421, align 8
  call void @free_candy_value(ptr %3048)
  %3049 = load ptr, ptr @149, align 8
  call void @free_candy_value(ptr %3049)
  %3050 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.423, align 8
  call void @free_candy_value(ptr %3050)
  %3051 = load ptr, ptr @150, align 8
  call void @free_candy_value(ptr %3051)
  %3052 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %3052)
  %3053 = load ptr, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  call void @free_candy_value(ptr %3053)
  %3054 = load ptr, ptr @tag_More.424, align 8
  call void @free_candy_value(ptr %3054)
  %3055 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  call void @free_candy_value(ptr %3055)
  %3056 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  call void @free_candy_value(ptr %3056)
  %3057 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.426, align 8
  call void @free_candy_value(ptr %3057)
  %3058 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  call void @free_candy_value(ptr %3058)
  %3059 = load ptr, ptr @151, align 8
  call void @free_candy_value(ptr %3059)
  %3060 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.428, align 8
  call void @free_candy_value(ptr %3060)
  %3061 = load ptr, ptr @152, align 8
  call void @free_candy_value(ptr %3061)
  %3062 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.430, align 8
  call void @free_candy_value(ptr %3062)
  %3063 = load ptr, ptr @153, align 8
  call void @free_candy_value(ptr %3063)
  %3064 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3064)
  %3065 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.432, align 8
  call void @free_candy_value(ptr %3065)
  %3066 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.434, align 8
  call void @free_candy_value(ptr %3066)
  %3067 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.436, align 8
  call void @free_candy_value(ptr %3067)
  %3068 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.438, align 8
  call void @free_candy_value(ptr %3068)
  %3069 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  call void @free_candy_value(ptr %3069)
  %3070 = load ptr, ptr @154, align 8
  call void @free_candy_value(ptr %3070)
  %3071 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  call void @free_candy_value(ptr %3071)
  %3072 = load ptr, ptr @155, align 8
  call void @free_candy_value(ptr %3072)
  %3073 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  call void @free_candy_value(ptr %3073)
  %3074 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.440, align 8
  call void @free_candy_value(ptr %3074)
  %3075 = load ptr, ptr @156, align 8
  call void @free_candy_value(ptr %3075)
  %3076 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.442, align 8
  call void @free_candy_value(ptr %3076)
  %3077 = load ptr, ptr @157, align 8
  call void @free_candy_value(ptr %3077)
  %3078 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.444, align 8
  call void @free_candy_value(ptr %3078)
  %3079 = load ptr, ptr @158, align 8
  call void @free_candy_value(ptr %3079)
  %3080 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  call void @free_candy_value(ptr %3080)
  %3081 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.446, align 8
  call void @free_candy_value(ptr %3081)
  %3082 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.448, align 8
  call void @free_candy_value(ptr %3082)
  %3083 = load ptr, ptr @159, align 8
  call void @free_candy_value(ptr %3083)
  %3084 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.450, align 8
  call void @free_candy_value(ptr %3084)
  %3085 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.452, align 8
  call void @free_candy_value(ptr %3085)
  %3086 = load ptr, ptr @160, align 8
  call void @free_candy_value(ptr %3086)
  %3087 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.454, align 8
  call void @free_candy_value(ptr %3087)
  %3088 = load ptr, ptr @161, align 8
  call void @free_candy_value(ptr %3088)
  %3089 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %3089)
  %3090 = load ptr, ptr @tag_More.455, align 8
  call void @free_candy_value(ptr %3090)
  %3091 = load ptr, ptr @fun_Core_controlFlow_recursive_18.457, align 8
  call void @free_candy_value(ptr %3091)
  %3092 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.459, align 8
  call void @free_candy_value(ptr %3092)
  %3093 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3093)
  %3094 = load ptr, ptr @fun_Core_iterator_takeWhile, align 8
  call void @free_candy_value(ptr %3094)
  %3095 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  call void @free_candy_value(ptr %3095)
  %3096 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  call void @free_candy_value(ptr %3096)
  %3097 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  call void @free_candy_value(ptr %3097)
  %3098 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.461, align 8
  call void @free_candy_value(ptr %3098)
  %3099 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  call void @free_candy_value(ptr %3099)
  %3100 = load ptr, ptr @162, align 8
  call void @free_candy_value(ptr %3100)
  %3101 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.463, align 8
  call void @free_candy_value(ptr %3101)
  %3102 = load ptr, ptr @163, align 8
  call void @free_candy_value(ptr %3102)
  %3103 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.465, align 8
  call void @free_candy_value(ptr %3103)
  %3104 = load ptr, ptr @164, align 8
  call void @free_candy_value(ptr %3104)
  %3105 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3105)
  %3106 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.467, align 8
  call void @free_candy_value(ptr %3106)
  %3107 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.469, align 8
  call void @free_candy_value(ptr %3107)
  %3108 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.471, align 8
  call void @free_candy_value(ptr %3108)
  %3109 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.473, align 8
  call void @free_candy_value(ptr %3109)
  %3110 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  call void @free_candy_value(ptr %3110)
  %3111 = load ptr, ptr @165, align 8
  call void @free_candy_value(ptr %3111)
  %3112 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  call void @free_candy_value(ptr %3112)
  %3113 = load ptr, ptr @166, align 8
  call void @free_candy_value(ptr %3113)
  %3114 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  call void @free_candy_value(ptr %3114)
  %3115 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.475, align 8
  call void @free_candy_value(ptr %3115)
  %3116 = load ptr, ptr @167, align 8
  call void @free_candy_value(ptr %3116)
  %3117 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.477, align 8
  call void @free_candy_value(ptr %3117)
  %3118 = load ptr, ptr @168, align 8
  call void @free_candy_value(ptr %3118)
  %3119 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.479, align 8
  call void @free_candy_value(ptr %3119)
  %3120 = load ptr, ptr @169, align 8
  call void @free_candy_value(ptr %3120)
  %3121 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  call void @free_candy_value(ptr %3121)
  %3122 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.481, align 8
  call void @free_candy_value(ptr %3122)
  %3123 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.483, align 8
  call void @free_candy_value(ptr %3123)
  %3124 = load ptr, ptr @170, align 8
  call void @free_candy_value(ptr %3124)
  %3125 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.485, align 8
  call void @free_candy_value(ptr %3125)
  %3126 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.487, align 8
  call void @free_candy_value(ptr %3126)
  %3127 = load ptr, ptr @171, align 8
  call void @free_candy_value(ptr %3127)
  %3128 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.489, align 8
  call void @free_candy_value(ptr %3128)
  %3129 = load ptr, ptr @172, align 8
  call void @free_candy_value(ptr %3129)
  %3130 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %3130)
  %3131 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  call void @free_candy_value(ptr %3131)
  %3132 = load ptr, ptr @tag_More.490, align 8
  call void @free_candy_value(ptr %3132)
  %3133 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  call void @free_candy_value(ptr %3133)
  %3134 = load ptr, ptr @fun_Core_iterator_take_34, align 8
  call void @free_candy_value(ptr %3134)
  %3135 = load ptr, ptr @fun_Core_iterator_take, align 8
  call void @free_candy_value(ptr %3135)
  %3136 = load ptr, ptr @fun_Core_iterator_take_26, align 8
  call void @free_candy_value(ptr %3136)
  %3137 = load ptr, ptr @fun_Core_iterator_take_31, align 8
  call void @free_candy_value(ptr %3137)
  %3138 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  call void @free_candy_value(ptr %3138)
  %3139 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  call void @free_candy_value(ptr %3139)
  %3140 = load ptr, ptr @173, align 8
  call void @free_candy_value(ptr %3140)
  %3141 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  call void @free_candy_value(ptr %3141)
  %3142 = load ptr, ptr @174, align 8
  call void @free_candy_value(ptr %3142)
  %3143 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3143)
  %3144 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then.492, align 8
  call void @free_candy_value(ptr %3144)
  %3145 = load ptr, ptr @175, align 8
  call void @free_candy_value(ptr %3145)
  %3146 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else.494, align 8
  call void @free_candy_value(ptr %3146)
  %3147 = load ptr, ptr @176, align 8
  call void @free_candy_value(ptr %3147)
  %3148 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then.496, align 8
  call void @free_candy_value(ptr %3148)
  %3149 = load ptr, ptr @177, align 8
  call void @free_candy_value(ptr %3149)
  %3150 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3150)
  %3151 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.498, align 8
  call void @free_candy_value(ptr %3151)
  %3152 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  call void @free_candy_value(ptr %3152)
  %3153 = load ptr, ptr @178, align 8
  call void @free_candy_value(ptr %3153)
  %3154 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.500, align 8
  call void @free_candy_value(ptr %3154)
  %3155 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3155)
  %3156 = load ptr, ptr @fun_Core_iterator_skip_30_6, align 8
  call void @free_candy_value(ptr %3156)
  %3157 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  call void @free_candy_value(ptr %3157)
  %3158 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  call void @free_candy_value(ptr %3158)
  %3159 = load ptr, ptr @179, align 8
  call void @free_candy_value(ptr %3159)
  %3160 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  call void @free_candy_value(ptr %3160)
  %3161 = load ptr, ptr @180, align 8
  call void @free_candy_value(ptr %3161)
  %3162 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3162)
  %3163 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.502, align 8
  call void @free_candy_value(ptr %3163)
  %3164 = load ptr, ptr @181, align 8
  call void @free_candy_value(ptr %3164)
  %3165 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.504, align 8
  call void @free_candy_value(ptr %3165)
  %3166 = load ptr, ptr @182, align 8
  call void @free_candy_value(ptr %3166)
  %3167 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.506, align 8
  call void @free_candy_value(ptr %3167)
  %3168 = load ptr, ptr @183, align 8
  call void @free_candy_value(ptr %3168)
  %3169 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3169)
  %3170 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.508, align 8
  call void @free_candy_value(ptr %3170)
  %3171 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  call void @free_candy_value(ptr %3171)
  %3172 = load ptr, ptr @184, align 8
  call void @free_candy_value(ptr %3172)
  %3173 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.510, align 8
  call void @free_candy_value(ptr %3173)
  %3174 = load ptr, ptr @fun_Core_iterator_skip_30_6_7, align 8
  call void @free_candy_value(ptr %3174)
  %3175 = load ptr, ptr @fun_Core_iterator_skip_30_6_8, align 8
  call void @free_candy_value(ptr %3175)
  %3176 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  call void @free_candy_value(ptr %3176)
  %3177 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.512, align 8
  call void @free_candy_value(ptr %3177)
  %3178 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  call void @free_candy_value(ptr %3178)
  %3179 = load ptr, ptr @185, align 8
  call void @free_candy_value(ptr %3179)
  %3180 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.514, align 8
  call void @free_candy_value(ptr %3180)
  %3181 = load ptr, ptr @186, align 8
  call void @free_candy_value(ptr %3181)
  %3182 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.516, align 8
  call void @free_candy_value(ptr %3182)
  %3183 = load ptr, ptr @187, align 8
  call void @free_candy_value(ptr %3183)
  %3184 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3184)
  %3185 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.518, align 8
  call void @free_candy_value(ptr %3185)
  %3186 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.520, align 8
  call void @free_candy_value(ptr %3186)
  %3187 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.522, align 8
  call void @free_candy_value(ptr %3187)
  %3188 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.524, align 8
  call void @free_candy_value(ptr %3188)
  %3189 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  call void @free_candy_value(ptr %3189)
  %3190 = load ptr, ptr @188, align 8
  call void @free_candy_value(ptr %3190)
  %3191 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  call void @free_candy_value(ptr %3191)
  %3192 = load ptr, ptr @189, align 8
  call void @free_candy_value(ptr %3192)
  %3193 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  call void @free_candy_value(ptr %3193)
  %3194 = load ptr, ptr @190, align 8
  call void @free_candy_value(ptr %3194)
  %3195 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  call void @free_candy_value(ptr %3195)
  %3196 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.526, align 8
  call void @free_candy_value(ptr %3196)
  %3197 = load ptr, ptr @191, align 8
  call void @free_candy_value(ptr %3197)
  %3198 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.528, align 8
  call void @free_candy_value(ptr %3198)
  %3199 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.530, align 8
  call void @free_candy_value(ptr %3199)
  %3200 = load ptr, ptr @192, align 8
  call void @free_candy_value(ptr %3200)
  %3201 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.532, align 8
  call void @free_candy_value(ptr %3201)
  %3202 = load ptr, ptr @193, align 8
  call void @free_candy_value(ptr %3202)
  %3203 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_patternMatch, align 8
  call void @free_candy_value(ptr %3203)
  %3204 = load ptr, ptr @fun_Core_controlFlow_recursive_18.534, align 8
  call void @free_candy_value(ptr %3204)
  %3205 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.536, align 8
  call void @free_candy_value(ptr %3205)
  %3206 = load ptr, ptr @fun_Core_iterator_skip, align 8
  call void @free_candy_value(ptr %3206)
  %3207 = load ptr, ptr @fun_Core_iterator_skip_2, align 8
  call void @free_candy_value(ptr %3207)
  %3208 = load ptr, ptr @fun_Core_iterator_skip_30, align 8
  call void @free_candy_value(ptr %3208)
  %3209 = load ptr, ptr @tag_Iterator.537, align 8
  call void @free_candy_value(ptr %3209)
  %3210 = load ptr, ptr @fun_Core_iterator_forEach, align 8
  call void @free_candy_value(ptr %3210)
  %3211 = load ptr, ptr @fun_Core_iterator_forEach_14, align 8
  call void @free_candy_value(ptr %3211)
  %3212 = load ptr, ptr @fun_Core_iterator_forEach_18, align 8
  call void @free_candy_value(ptr %3212)
  %3213 = load ptr, ptr @fun_Core_iterator_fromList, align 8
  call void @free_candy_value(ptr %3213)
  %3214 = load ptr, ptr @fun_Core_iterator_fromList_23, align 8
  call void @free_candy_value(ptr %3214)
  %3215 = load ptr, ptr @194, align 8
  call void @free_candy_value(ptr %3215)
  %3216 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  call void @free_candy_value(ptr %3216)
  %3217 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  call void @free_candy_value(ptr %3217)
  %3218 = load ptr, ptr @fun_Core_iterator_windowed, align 8
  call void @free_candy_value(ptr %3218)
  %3219 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  call void @free_candy_value(ptr %3219)
  %3220 = load ptr, ptr @fun_Core_iterator_windowed_67, align 8
  call void @free_candy_value(ptr %3220)
  %3221 = load ptr, ptr @fun_Core_iterator_windowed_67_20, align 8
  call void @free_candy_value(ptr %3221)
  %3222 = load ptr, ptr @fun_Core_iterator_windowed_67_21, align 8
  call void @free_candy_value(ptr %3222)
  %3223 = load ptr, ptr @fun_Core_iterator_windowed_67_26, align 8
  call void @free_candy_value(ptr %3223)
  %3224 = load ptr, ptr @tag_More.538, align 8
  call void @free_candy_value(ptr %3224)
  %3225 = load ptr, ptr @fun_Core_iterator_chunked, align 8
  call void @free_candy_value(ptr %3225)
  %3226 = load ptr, ptr @fun_Core_iterator_chunked_26, align 8
  call void @free_candy_value(ptr %3226)
  %3227 = load ptr, ptr @195, align 8
  call void @free_candy_value(ptr %3227)
  %3228 = load ptr, ptr @num_6, align 8
  call void @free_candy_value(ptr %3228)
  %3229 = load ptr, ptr @num_7, align 8
  call void @free_candy_value(ptr %3229)
  %3230 = load ptr, ptr @num_8, align 8
  call void @free_candy_value(ptr %3230)
  %3231 = load ptr, ptr @num_9, align 8
  call void @free_candy_value(ptr %3231)
  %3232 = load ptr, ptr @196, align 8
  call void @free_candy_value(ptr %3232)
  %3233 = load ptr, ptr @"Core:iterator:123", align 8
  call void @free_candy_value(ptr %3233)
  %3234 = load ptr, ptr @"Core:iterator:127", align 8
  call void @free_candy_value(ptr %3234)
  %3235 = load ptr, ptr @"Core:iterator:128", align 8
  call void @free_candy_value(ptr %3235)
  %3236 = load ptr, ptr @fun_Core_iterator_128_equals_then, align 8
  call void @free_candy_value(ptr %3236)
  %3237 = load ptr, ptr @fun_Core_iterator_128_equals_then.540, align 8
  call void @free_candy_value(ptr %3237)
  %3238 = load ptr, ptr @fun_Core_iterator_128_equals_then.542, align 8
  call void @free_candy_value(ptr %3238)
  %3239 = load ptr, ptr @fun_Core_iterator_128_equals_then.544, align 8
  call void @free_candy_value(ptr %3239)
  %3240 = load ptr, ptr @fun_Core_iterator_128_hasKey_then, align 8
  call void @free_candy_value(ptr %3240)
  %3241 = load ptr, ptr @197, align 8
  call void @free_candy_value(ptr %3241)
  %3242 = load ptr, ptr @fun_Core_iterator_128_hasKey_else, align 8
  call void @free_candy_value(ptr %3242)
  %3243 = load ptr, ptr @198, align 8
  call void @free_candy_value(ptr %3243)
  %3244 = load ptr, ptr @fun_Core_iterator_128_isMatch_then, align 8
  call void @free_candy_value(ptr %3244)
  %3245 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.546, align 8
  call void @free_candy_value(ptr %3245)
  %3246 = load ptr, ptr @199, align 8
  call void @free_candy_value(ptr %3246)
  %3247 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.548, align 8
  call void @free_candy_value(ptr %3247)
  %3248 = load ptr, ptr @200, align 8
  call void @free_candy_value(ptr %3248)
  %3249 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.550, align 8
  call void @free_candy_value(ptr %3249)
  %3250 = load ptr, ptr @201, align 8
  call void @free_candy_value(ptr %3250)
  %3251 = load ptr, ptr @fun_Core_iterator_128_isMatch_else, align 8
  call void @free_candy_value(ptr %3251)
  %3252 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.552, align 8
  call void @free_candy_value(ptr %3252)
  %3253 = load ptr, ptr @fun_Core_iterator_128_equals_else, align 8
  call void @free_candy_value(ptr %3253)
  %3254 = load ptr, ptr @202, align 8
  call void @free_candy_value(ptr %3254)
  %3255 = load ptr, ptr @fun_Core_iterator_128_equals_else.554, align 8
  call void @free_candy_value(ptr %3255)
  %3256 = load ptr, ptr @fun_Core_iterator_128_equals_else.556, align 8
  call void @free_candy_value(ptr %3256)
  %3257 = load ptr, ptr @203, align 8
  call void @free_candy_value(ptr %3257)
  %3258 = load ptr, ptr @fun_Core_iterator_128_equals_else.558, align 8
  call void @free_candy_value(ptr %3258)
  %3259 = load ptr, ptr @204, align 8
  call void @free_candy_value(ptr %3259)
  %3260 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.560, align 8
  call void @free_candy_value(ptr %3260)
  %3261 = load ptr, ptr @"Core:iterator:item", align 8
  call void @free_candy_value(ptr %3261)
  %3262 = load ptr, ptr @"Core:iterator:rest", align 8
  call void @free_candy_value(ptr %3262)
  %3263 = load ptr, ptr @"Core:iterator:133", align 8
  call void @free_candy_value(ptr %3263)
  %3264 = load ptr, ptr @"Core:iterator:136", align 8
  call void @free_candy_value(ptr %3264)
  %3265 = load ptr, ptr @"Core:iterator:137", align 8
  call void @free_candy_value(ptr %3265)
  %3266 = load ptr, ptr @fun_Core_iterator_137_equals_then, align 8
  call void @free_candy_value(ptr %3266)
  %3267 = load ptr, ptr @fun_Core_iterator_137_equals_then.562, align 8
  call void @free_candy_value(ptr %3267)
  %3268 = load ptr, ptr @fun_Core_iterator_137_equals_then.564, align 8
  call void @free_candy_value(ptr %3268)
  %3269 = load ptr, ptr @fun_Core_iterator_137_equals_then.566, align 8
  call void @free_candy_value(ptr %3269)
  %3270 = load ptr, ptr @fun_Core_iterator_137_hasKey_then, align 8
  call void @free_candy_value(ptr %3270)
  %3271 = load ptr, ptr @205, align 8
  call void @free_candy_value(ptr %3271)
  %3272 = load ptr, ptr @fun_Core_iterator_137_hasKey_else, align 8
  call void @free_candy_value(ptr %3272)
  %3273 = load ptr, ptr @206, align 8
  call void @free_candy_value(ptr %3273)
  %3274 = load ptr, ptr @fun_Core_iterator_137_isMatch_then, align 8
  call void @free_candy_value(ptr %3274)
  %3275 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.568, align 8
  call void @free_candy_value(ptr %3275)
  %3276 = load ptr, ptr @207, align 8
  call void @free_candy_value(ptr %3276)
  %3277 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.570, align 8
  call void @free_candy_value(ptr %3277)
  %3278 = load ptr, ptr @208, align 8
  call void @free_candy_value(ptr %3278)
  %3279 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.572, align 8
  call void @free_candy_value(ptr %3279)
  %3280 = load ptr, ptr @209, align 8
  call void @free_candy_value(ptr %3280)
  %3281 = load ptr, ptr @fun_Core_iterator_137_isMatch_else, align 8
  call void @free_candy_value(ptr %3281)
  %3282 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.574, align 8
  call void @free_candy_value(ptr %3282)
  %3283 = load ptr, ptr @fun_Core_iterator_137_equals_else, align 8
  call void @free_candy_value(ptr %3283)
  %3284 = load ptr, ptr @210, align 8
  call void @free_candy_value(ptr %3284)
  %3285 = load ptr, ptr @fun_Core_iterator_137_equals_else.576, align 8
  call void @free_candy_value(ptr %3285)
  %3286 = load ptr, ptr @fun_Core_iterator_137_equals_else.578, align 8
  call void @free_candy_value(ptr %3286)
  %3287 = load ptr, ptr @211, align 8
  call void @free_candy_value(ptr %3287)
  %3288 = load ptr, ptr @fun_Core_iterator_137_equals_else.580, align 8
  call void @free_candy_value(ptr %3288)
  %3289 = load ptr, ptr @212, align 8
  call void @free_candy_value(ptr %3289)
  %3290 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.582, align 8
  call void @free_candy_value(ptr %3290)
  %3291 = load ptr, ptr @"Core:iterator:item#1", align 8
  call void @free_candy_value(ptr %3291)
  %3292 = load ptr, ptr @"Core:iterator:rest#1", align 8
  call void @free_candy_value(ptr %3292)
  %3293 = load ptr, ptr @"Core:iterator:142", align 8
  call void @free_candy_value(ptr %3293)
  %3294 = load ptr, ptr @"Core:iterator:147", align 8
  call void @free_candy_value(ptr %3294)
  %3295 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  call void @free_candy_value(ptr %3295)
  %3296 = load ptr, ptr @"Core:iterator:149", align 8
  call void @free_candy_value(ptr %3296)
  %3297 = load ptr, ptr @"Core:iterator:154", align 8
  call void @free_candy_value(ptr %3297)
  %3298 = load ptr, ptr @"Core:iterator:155", align 8
  call void @free_candy_value(ptr %3298)
  %3299 = load ptr, ptr @fun_Core_iterator_isEmpty_2.584, align 8
  call void @free_candy_value(ptr %3299)
  %3300 = load ptr, ptr @"Core:iterator:157", align 8
  call void @free_candy_value(ptr %3300)
  %3301 = load ptr, ptr @"Core:iterator:161:10", align 8
  call void @free_candy_value(ptr %3301)
  %3302 = load ptr, ptr @fun_Core_iterator_161, align 8
  call void @free_candy_value(ptr %3302)
  %3303 = load ptr, ptr @"Core:iterator:162", align 8
  call void @free_candy_value(ptr %3303)
  %3304 = load ptr, ptr @"Core:iterator:164", align 8
  call void @free_candy_value(ptr %3304)
  %3305 = load ptr, ptr @fun_Core_iterator_toList_2.586, align 8
  call void @free_candy_value(ptr %3305)
  %3306 = load ptr, ptr @213, align 8
  call void @free_candy_value(ptr %3306)
  %3307 = load ptr, ptr @"Core:iterator:169", align 8
  call void @free_candy_value(ptr %3307)
  %3308 = load ptr, ptr @"Core:iterator:173", align 8
  call void @free_candy_value(ptr %3308)
  %3309 = load ptr, ptr @"Core:iterator:175", align 8
  call void @free_candy_value(ptr %3309)
  %3310 = load ptr, ptr @"Core:iterator:179", align 8
  call void @free_candy_value(ptr %3310)
  %3311 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  call void @free_candy_value(ptr %3311)
  %3312 = load ptr, ptr @"Core:iterator:181", align 8
  call void @free_candy_value(ptr %3312)
  %3313 = load ptr, ptr @"Core:iterator:185:9", align 8
  call void @free_candy_value(ptr %3313)
  %3314 = load ptr, ptr @fun_Core_iterator_185, align 8
  call void @free_candy_value(ptr %3314)
  %3315 = load ptr, ptr @"Core:iterator:186", align 8
  call void @free_candy_value(ptr %3315)
  %3316 = load ptr, ptr @"Core:iterator:188", align 8
  call void @free_candy_value(ptr %3316)
  %3317 = load ptr, ptr @fun_Core_iterator_192, align 8
  call void @free_candy_value(ptr %3317)
  %3318 = load ptr, ptr @"Core:iterator:193", align 8
  call void @free_candy_value(ptr %3318)
  %3319 = load ptr, ptr @"Core:iterator:195", align 8
  call void @free_candy_value(ptr %3319)
  %3320 = load ptr, ptr @"Core:iterator:200", align 8
  call void @free_candy_value(ptr %3320)
  %3321 = load ptr, ptr @"Core:iterator:202", align 8
  call void @free_candy_value(ptr %3321)
  %3322 = load ptr, ptr @text_123, align 8
  call void @free_candy_value(ptr %3322)
  %3323 = load ptr, ptr @"Core:iterator:210", align 8
  call void @free_candy_value(ptr %3323)
  %3324 = load ptr, ptr @"Core:iterator:214:9", align 8
  call void @free_candy_value(ptr %3324)
  %3325 = load ptr, ptr @fun_Core_iterator_214, align 8
  call void @free_candy_value(ptr %3325)
  %3326 = load ptr, ptr @"Core:iterator:215", align 8
  call void @free_candy_value(ptr %3326)
  %3327 = load ptr, ptr @"Core:iterator:217", align 8
  call void @free_candy_value(ptr %3327)
  %3328 = load ptr, ptr @fun_Core_iterator_toList_2.588, align 8
  call void @free_candy_value(ptr %3328)
  %3329 = load ptr, ptr @214, align 8
  call void @free_candy_value(ptr %3329)
  %3330 = load ptr, ptr @"Core:iterator:224", align 8
  call void @free_candy_value(ptr %3330)
  %3331 = load ptr, ptr @"Core:iterator:228:10", align 8
  call void @free_candy_value(ptr %3331)
  %3332 = load ptr, ptr @fun_Core_iterator_228, align 8
  call void @free_candy_value(ptr %3332)
  %3333 = load ptr, ptr @"Core:iterator:229", align 8
  call void @free_candy_value(ptr %3333)
  %3334 = load ptr, ptr @"Core:iterator:231", align 8
  call void @free_candy_value(ptr %3334)
  %3335 = load ptr, ptr @fun_Core_iterator_toList_2.590, align 8
  call void @free_candy_value(ptr %3335)
  %3336 = load ptr, ptr @"Core:iterator:236", align 8
  call void @free_candy_value(ptr %3336)
  %3337 = load ptr, ptr @"Core:iterator:241", align 8
  call void @free_candy_value(ptr %3337)
  %3338 = load ptr, ptr @"Core:iterator:243", align 8
  call void @free_candy_value(ptr %3338)
  %3339 = load ptr, ptr @fun_Core_iterator_toList_2.592, align 8
  call void @free_candy_value(ptr %3339)
  %3340 = load ptr, ptr @215, align 8
  call void @free_candy_value(ptr %3340)
  %3341 = load ptr, ptr @"Core:iterator:249", align 8
  call void @free_candy_value(ptr %3341)
  %3342 = load ptr, ptr @num_12, align 8
  call void @free_candy_value(ptr %3342)
  %3343 = load ptr, ptr @"Core:iterator:254", align 8
  call void @free_candy_value(ptr %3343)
  %3344 = load ptr, ptr @"Core:iterator:256", align 8
  call void @free_candy_value(ptr %3344)
  %3345 = load ptr, ptr @fun_Core_iterator_toList_2.594, align 8
  call void @free_candy_value(ptr %3345)
  %3346 = load ptr, ptr @"Core:iterator:268", align 8
  call void @free_candy_value(ptr %3346)
  %3347 = load ptr, ptr @"Core:iterator:273", align 8
  call void @free_candy_value(ptr %3347)
  %3348 = load ptr, ptr @"Core:iterator:275", align 8
  call void @free_candy_value(ptr %3348)
  %3349 = load ptr, ptr @fun_Core_iterator_toList_2.596, align 8
  call void @free_candy_value(ptr %3349)
  %3350 = load ptr, ptr @216, align 8
  call void @free_candy_value(ptr %3350)
  %3351 = load ptr, ptr @"Core:iterator:283", align 8
  call void @free_candy_value(ptr %3351)
  %3352 = load ptr, ptr @num_40, align 8
  call void @free_candy_value(ptr %3352)
  %3353 = load ptr, ptr @"Core:iterator:288", align 8
  call void @free_candy_value(ptr %3353)
  %3354 = load ptr, ptr @"Core:iterator:290", align 8
  call void @free_candy_value(ptr %3354)
  %3355 = load ptr, ptr @fun_Core_iterator_toList_2.598, align 8
  call void @free_candy_value(ptr %3355)
  %3356 = load ptr, ptr @"Core:iterator:292", align 8
  call void @free_candy_value(ptr %3356)
  %3357 = load ptr, ptr @"Core:iterator:299", align 8
  call void @free_candy_value(ptr %3357)
  %3358 = load ptr, ptr @"Core:iterator:301", align 8
  call void @free_candy_value(ptr %3358)
  %3359 = load ptr, ptr @fun_Core_iterator_toList_2.600, align 8
  call void @free_candy_value(ptr %3359)
  %3360 = load ptr, ptr @217, align 8
  call void @free_candy_value(ptr %3360)
  %3361 = load ptr, ptr @218, align 8
  call void @free_candy_value(ptr %3361)
  %3362 = load ptr, ptr @219, align 8
  call void @free_candy_value(ptr %3362)
  %3363 = load ptr, ptr @"Core:iterator:318", align 8
  call void @free_candy_value(ptr %3363)
  %3364 = load ptr, ptr @"Core:iterator:323", align 8
  call void @free_candy_value(ptr %3364)
  %3365 = load ptr, ptr @"Core:iterator:325", align 8
  call void @free_candy_value(ptr %3365)
  %3366 = load ptr, ptr @fun_Core_iterator_toList_2.602, align 8
  call void @free_candy_value(ptr %3366)
  %3367 = load ptr, ptr @220, align 8
  call void @free_candy_value(ptr %3367)
  %3368 = load ptr, ptr @221, align 8
  call void @free_candy_value(ptr %3368)
  %3369 = load ptr, ptr @222, align 8
  call void @free_candy_value(ptr %3369)
  %3370 = load ptr, ptr @223, align 8
  call void @free_candy_value(ptr %3370)
  %3371 = load ptr, ptr @"Core:iterator:341", align 8
  call void @free_candy_value(ptr %3371)
  %3372 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %3372)
  %3373 = load ptr, ptr @"Examples:iterator:21:print:7", align 8
  call void @free_candy_value(ptr %3373)
  %3374 = load ptr, ptr @"Examples:iterator:21:print:9", align 8
  call void @free_candy_value(ptr %3374)
  %3375 = load ptr, ptr @text_H, align 8
  call void @free_candy_value(ptr %3375)
  %3376 = load ptr, ptr @text_e, align 8
  call void @free_candy_value(ptr %3376)
  %3377 = load ptr, ptr @text_l, align 8
  call void @free_candy_value(ptr %3377)
  %3378 = load ptr, ptr @text_o, align 8
  call void @free_candy_value(ptr %3378)
  %3379 = load ptr, ptr @"text_,", align 8
  call void @free_candy_value(ptr %3379)
  %3380 = load ptr, ptr @"text_ ", align 8
  call void @free_candy_value(ptr %3380)
  %3381 = load ptr, ptr @text_w, align 8
  call void @free_candy_value(ptr %3381)
  %3382 = load ptr, ptr @text_r, align 8
  call void @free_candy_value(ptr %3382)
  %3383 = load ptr, ptr @text_d, align 8
  call void @free_candy_value(ptr %3383)
  %3384 = load ptr, ptr @"text_!", align 8
  call void @free_candy_value(ptr %3384)
  %3385 = load ptr, ptr @text_T, align 8
  call void @free_candy_value(ptr %3385)
  %3386 = load ptr, ptr @text_h, align 8
  call void @free_candy_value(ptr %3386)
  %3387 = load ptr, ptr @text_i, align 8
  call void @free_candy_value(ptr %3387)
  %3388 = load ptr, ptr @text_s, align 8
  call void @free_candy_value(ptr %3388)
  %3389 = load ptr, ptr @text_m, align 8
  call void @free_candy_value(ptr %3389)
  %3390 = load ptr, ptr @text_n, align 8
  call void @free_candy_value(ptr %3390)
  %3391 = load ptr, ptr @text_g, align 8
  call void @free_candy_value(ptr %3391)
  %3392 = load ptr, ptr @text_t, align 8
  call void @free_candy_value(ptr %3392)
  %3393 = load ptr, ptr @text_x, align 8
  call void @free_candy_value(ptr %3393)
  %3394 = load ptr, ptr @text_B, align 8
  call void @free_candy_value(ptr %3394)
  %3395 = load ptr, ptr @text_a, align 8
  call void @free_candy_value(ptr %3395)
  %3396 = load ptr, ptr @text_b, align 8
  call void @free_candy_value(ptr %3396)
  %3397 = load ptr, ptr @text_u, align 8
  call void @free_candy_value(ptr %3397)
  %3398 = load ptr, ptr @224, align 8
  call void @free_candy_value(ptr %3398)
  %3399 = load ptr, ptr @"Examples:iterator:21:24", align 8
  call void @free_candy_value(ptr %3399)
  %3400 = load ptr, ptr @"Examples:iterator:21:34", align 8
  call void @free_candy_value(ptr %3400)
  %3401 = load ptr, ptr @fun_Examples_iterator_21, align 8
  call void @free_candy_value(ptr %3401)
  %3402 = load ptr, ptr @"fun_Examples_iterator_21_print, Examples_iterator_21_33", align 8
  call void @free_candy_value(ptr %3402)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_and(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_multiply(ptr, ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_insert(ptr, ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_itera":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %4, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isValueTrue_then", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isValueTrue_then", align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %0, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isValueTrue_else", ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @"fun_anonymous_$generated__needs_isValueTrue_else", align 8
  %11 = load ptr, ptr @"fun_anonymous_$generated__needs_isValueTrue_then", align 8
  %12 = load ptr, ptr @"fun_anonymous_$generated__needs_isValueTrue_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %15 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %14, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %15, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %16 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %17 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %18 = call ptr @candy_builtin_if_else(ptr %13, ptr %16, ptr %17)
  %19 = call ptr @candy_builtin_type_of(ptr %1)
  %20 = load ptr, ptr @tag_Text, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %23 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %22, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %23, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %21, ptr %24, ptr %25)
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %1, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %2, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %31 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %32 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %33 = call ptr @candy_builtin_if_else(ptr %0, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @"anonymous_$generated__needs_isValueTrue_then"(ptr %0) {
"anonymous_$generated__needs_isValueTrue_then":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @"anonymous_$generated__needs_isValueTrue_else"(ptr %0) {
"anonymous_$generated__needs_isValueTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then"() {
"Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else"() {
"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch() {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Builtins__isNonNegative(ptr %0) {
Builtins__isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @num_0, align 8
  %7 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %7, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  %11 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then)
  %12 = call ptr @Builtins__isNonNegative_13_equals_then(ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %7, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", align 8
  %34 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Builtins__isNonNegative_13_equals_then(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.1, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.2, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.3, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.4, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.2, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.4, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.1(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__isNonNegative_13_equals_else.3(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.5, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isNonNegative_13_equals_then.6, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.6)
  %7 = call ptr @Builtins__isNonNegative_13_equals_then.5(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isNonNegative_13_equals_then.5(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.8, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.11, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.12, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.8, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.12, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.7(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.9, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.10, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.10, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.9(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__isNonNegative_13_equals_else.11(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.13, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isNonNegative_13_equals_then.14, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.14)
  %7 = call ptr @Builtins__isNonNegative_13_equals_then.13(ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = call ptr @candy_builtin_list_get(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Match, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %11, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_then.13(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.15, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.16, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.19, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.20, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.16, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.20, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.15(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.17, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.18, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.18, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.17(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__isNonNegative_13_equals_else.19(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch() {
Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo(ptr %0, ptr %1) {
Builtins__isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %12, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then)
  %17 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %12, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_0, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %30, ptr %31)
  %33 = load ptr, ptr @tag_Match, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %38 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", align 8
  %39 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %40 = call ptr @candy_builtin_if_else(ptr %34, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.21, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.22, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.23, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.24, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.22, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.24, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.21(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @7, align 8
  ret ptr @7
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.23(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.25, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.26, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.26)
  %7 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.25(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.25(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.27, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.28, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.31, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.32, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.28, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.32, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.27(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.29, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.30, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.30, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.29(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @9, align 8
  ret ptr @9
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.31(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @10, align 8
  ret ptr @10
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.33, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.34, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.34)
  %7 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.33(ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = call ptr @candy_builtin_list_get(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Match, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %11, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.33(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.35, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.36, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.39, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.40, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.36, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.40, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.35(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.37, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.38, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.38, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.37(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @11, align 8
  ret ptr @11
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.39(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.45, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.46, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.46, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %34 = call ptr @candy_builtin_if_else(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = call ptr @candy_builtin_type_of(ptr %1)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %41 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr null)
  %42 = call ptr @candy_builtin_type_of(ptr %1)
  %43 = load ptr, ptr @tag_Function, align 8
  %44 = call ptr @candy_builtin_equals(ptr %42, ptr %43)
  %45 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %46 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %47 = call ptr @"anonymous_$generated__needs"(ptr %44, ptr %45, ptr %46)
  %48 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %49 = load ptr, ptr @num_0, align 8
  %50 = call ptr @candy_builtin_equals(ptr %48, ptr %49)
  %51 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %52 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %51, ptr null)
  %53 = call ptr @candy_builtin_type_of(ptr %2)
  %54 = load ptr, ptr @tag_Function, align 8
  %55 = call ptr @candy_builtin_equals(ptr %53, ptr %54)
  %56 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %57 = call ptr @"anonymous_$generated__needs"(ptr %55, ptr %56, ptr null)
  %58 = call ptr @candy_builtin_type_of(ptr %2)
  %59 = load ptr, ptr @tag_Function, align 8
  %60 = call ptr @candy_builtin_equals(ptr %58, ptr %59)
  %61 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %62 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %63 = call ptr @"anonymous_$generated__needs"(ptr %60, ptr %61, ptr %62)
  %64 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %65 = load ptr, ptr @num_0, align 8
  %66 = call ptr @candy_builtin_equals(ptr %64, ptr %65)
  %67 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %68 = call ptr @"anonymous_$generated__needs"(ptr %66, ptr %67, ptr null)
  %69 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %69
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.41, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.42, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.43, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.44, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.42, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.44, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.41(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @13, align 8
  ret ptr @13
}

define ptr @Builtins__ifElse_1_equals_else.43(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Builtins__ifElse_1_equals_else.45(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @15, align 8
  ret ptr @15
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.47, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.48, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.55, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.56, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.48, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.56, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.47(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.49, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.50, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.53, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.54, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.50, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.54, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.49(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.51, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.52, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.52, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else.51(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @16, align 8
  ret ptr @16
}

define ptr @Builtins__ifElse_1_equals_else.53(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @17, align 8
  ret ptr @17
}

define ptr @Builtins__ifElse_1_equals_else.55(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Builtins__listGet(ptr %0, ptr %1) {
Builtins__listGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_list_length(ptr %0)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listGet:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %15)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_list_get(ptr %0, ptr %1)
  ret ptr %27
}

define ptr @Builtins__listInsert(ptr %0, ptr %1, ptr %2) {
Builtins__listInsert:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_list_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_list_insert(ptr %0, ptr %1, ptr %2)
  ret ptr %20
}

define ptr @"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText"(ptr %0) {
"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText":
  %1 = call ptr @candy_builtin_to_debug_text(ptr %0)
  ret ptr %1
}

define ptr @Core_function_is0(ptr %0) {
Core_function_is0:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0) {
Core_function_run:
  %1 = call ptr @Core_function_is0(ptr %0)
  %2 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Function, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:function:run:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:function:run:14", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %0)
  %17 = call ptr @get_candy_function_environment(ptr %0)
  %18 = call ptr (...) %16(ptr %17)
  ret ptr %18
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.61, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.62, align 8
  %10 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.62, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", align 8
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %32 = call ptr @candy_builtin_if_else(ptr %29, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_bool_is_1_equals_then(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.57, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.58, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.59, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.60, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.58, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.60, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.57(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @19, align 8
  ret ptr @19
}

define ptr @Core_bool_is_1_equals_else.59(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Core_bool_is_1_equals_else.61(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.63, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.64, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.71, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.72, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.64, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.72, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.63(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.65, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.66, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.69, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.70, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.66, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.70, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.65(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.67, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else.68, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else.68, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else.67(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @22, align 8
  ret ptr @22
}

define ptr @Core_bool_is_1_equals_else.69(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Core_bool_is_1_equals_else.71(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Core_bool_not_6_case-1_didNotMatch() {
Core_bool_not_6_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_bool_not(ptr %0) {
Core_bool_not:
  %1 = call ptr @Core_bool_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %0, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_not_6_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.77, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_bool_not_6_equals_else.78, align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_else.78, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %23 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %24 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %19, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Core_bool_not_6_equals_then(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.73, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.74, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.75, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.76, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.74, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.76, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.73(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_bool_not_6_equals_else.75(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_bool_not_6_equals_else.77(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_bool_not_6_case-0_didNotMatch(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.79, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.80, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.87, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.88, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.80, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.88, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", align 8
  %22 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %20, ptr %21, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_not_6_equals_then.79(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.81, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.82, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.85, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.86, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.82, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.86, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.81(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.83, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else.84, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else.84, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else.83(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_bool_not_6_equals_else.85(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_bool_not_6_equals_else.87(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch() {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_bool_lazyAnd(ptr %0, ptr %1) {
Core_bool_lazyAnd:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.93, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_lazyAnd_18_equals_else.94, align 8
  %17 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.94, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %0, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr }, ptr %27, i32 0, i32 0
  store ptr %1, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_patternMatch, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_bool_lazyAnd_18_case-0_patternMatch, align 8
  %30 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_patternMatch, align 8
  %31 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %23, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_bool_lazyAnd_18_equals_then(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.89, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.90, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.91, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.92, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.90, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.92, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.89(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_bool_lazyAnd_18_equals_else.91(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_bool_lazyAnd_18_equals_else.93(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.95, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.96, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.103, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.104, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.96, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.104, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %22 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %20, ptr %21, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_lazyAnd_18_equals_then.95(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.97, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.98, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.101, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.102, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.98, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.102, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.97(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.99, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.100, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.100, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.99(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_bool_lazyAnd_18_equals_else.101(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_bool_lazyAnd_18_equals_else.103(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_bool_lazyAnd_18_case-0_patternMatch(ptr %0) {
Core_bool_lazyAnd_18_case-0_patternMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch() {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1) {
Core_bool_lazyOr:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.109, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_lazyOr_18_equals_else.110, align 8
  %17 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.110, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %0, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %1, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_patternMatch, Builtins__isLessThanOrEqualTo_19_case-0_patternMatch, Builtins__isNonNegative_13_case-0_patternMatch, Builtins__not_1_case-1_patternMatch, Core_bool_is_1_case-0_patternMatch, Core_bool_lazyOr_18_case-0_patternMatch, Core_bool_not_6_case-1_patternMatch, Core_check_check_1_case-0_patternMatch, Core_text_isAsciiDigit_14_case-0_patternMatch, anonymous_$generated__needs_isValueTrue_then", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %23, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyOr_18_equals_then(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.105, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.106, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.107, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.108, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.106, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.108, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.105(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @37, align 8
  ret ptr @37
}

define ptr @Core_bool_lazyOr_18_equals_else.107(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_bool_lazyOr_18_equals_else.109(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.111, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.112, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.119, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.120, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.112, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.120, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_bool_lazyOr_18_case-1_patternMatch, align 8
  %26 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_patternMatch, align 8
  %27 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %20, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_bool_lazyOr_18_equals_then.111(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.113, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.114, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.117, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.118, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.114, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.118, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.113(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.115, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.116, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.116, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.115(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_bool_lazyOr_18_equals_else.117(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_bool_lazyOr_18_equals_else.119(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_bool_lazyOr_18_case-1_patternMatch(ptr %0) {
Core_bool_lazyOr_18_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_check_checkEquals(ptr %0, ptr %1) {
Core_check_checkEquals:
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_check_checkEquals_14, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_check_checkEquals_14, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %0, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_check_checkEquals_15, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_check_checkEquals_15, align 8
  %12 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  %13 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = call ptr @candy_builtin_type_of(ptr %1)
  %16 = load ptr, ptr @tag_Text, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_check_checkEquals_21, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_check_checkEquals_21, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %1, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_check_checkEquals_22, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_check_checkEquals_22, align 8
  %24 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  %25 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_A check failed: Expected ", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %27, ptr %14)
  %29 = load ptr, ptr @"text_ to be ", align 8
  %30 = call ptr @candy_builtin_text_concatenate(ptr %28, ptr %29)
  %31 = call ptr @candy_builtin_text_concatenate(ptr %30, ptr %26)
  %32 = load ptr, ptr @text_., align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %31, ptr %32)
  %34 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %33, ptr null)
  ret ptr %34
}

define ptr @Core_check_checkEquals_14(ptr %0) {
Core_check_checkEquals_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_15(ptr %0) {
Core_check_checkEquals_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_check_checkEquals_21(ptr %0) {
Core_check_checkEquals_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_22(ptr %0) {
Core_check_checkEquals_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is2(ptr %0) {
Core_function_is2:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is2_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is2_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is2_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is2_11(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_compareTo(ptr %0, ptr %1) {
Core_int_compareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  ret ptr %24
}

define ptr @Core_int_isLessThan(ptr %0, ptr %1) {
Core_int_isLessThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Less, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isGreaterThan(ptr %0, ptr %1) {
Core_int_isGreaterThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Greater, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonNegative(ptr %0) {
Core_int_isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @Core_int_isLessThan(ptr %0, ptr %12)
  %14 = call ptr @Core_bool_not(ptr %13)
  ret ptr %14
}

define ptr @Core_fixedDecimal_fromIntScaled(ptr %0, ptr %1) {
Core_fixedDecimal_fromIntScaled:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %1, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  %14 = call ptr @Core_bool_lazyAnd(ptr %9, ptr %13)
  %15 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_Scale, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %1, ptr %21, align 8
  %22 = load ptr, ptr @tag_MinorUnits, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %0, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %28, align 1
  %29 = call ptr @make_candy_tag(ptr %28, ptr %27)
  store ptr %29, ptr @tag_FixedDecimal, align 8
  ret ptr @tag_FixedDecimal
}

define ptr @Core_fixedDecimal_isScale_18(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is1(ptr %0) {
Core_function_is1:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is1_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_isOdd(ptr %0) {
Core_int_isOdd:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isOdd:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %12)
  %14 = load ptr, ptr @num_1, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_result_is(ptr %0) {
Core_result_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_result_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.127, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_result_is_1_equals_else.128, align 8
  %10 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_else.128, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_patternMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_result_is_1_case-0_patternMatch, align 8
  %33 = load ptr, ptr @fun_Core_result_is_1_case-0_patternMatch, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_patternMatch, Builtins__isNonNegative_13_case-1_patternMatch, Builtins__not_1_case-0_patternMatch, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_patternMatch, Core_bool_not_6_case-0_patternMatch, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, Core_text_isAsciiDigit_14_case-0_didNotMatch, anonymous_$generated__needs_isValueTrue_else", align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.121, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.122, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.125, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.126, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.122, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.126, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.121(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.123, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.124, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.124, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.123(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @44, align 8
  ret ptr @44
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.125(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @45, align 8
  ret ptr @45
}

define ptr @Core_result_is_1_equals_else.127(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @46, align 8
  ret ptr @46
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.129, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.130, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.139, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.140, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.130, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.140, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.129(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.131, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.132, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.137, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.138, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.132, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.138, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.131(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.133, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.134, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.135, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.136, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.134, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.136, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.133(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @47, align 8
  ret ptr @47
}

define ptr @Core_result_is_1_equals_else.135(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.137(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Core_result_is_1_equals_else.139(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @49, align 8
  ret ptr @49
}

define ptr @Core_result_is_1_case-0_patternMatch(ptr %0) {
Core_result_is_1_case-0_patternMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_True, align 8
  ret ptr %5
}

define ptr @Core_result_mapOrElse_30_case-1_didNotMatch() {
Core_result_mapOrElse_30_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_mapOrElse:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_function_is1(ptr %2)
  %10 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Tag, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.147, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_mapOrElse_30_equals_else.148, align 8
  %21 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %22 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.148, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %2, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_didNotMatch, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr, ptr }, ptr %32, i32 0, i32 0
  store ptr %23, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %32, i32 0, i32 1
  store ptr %1, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_patternMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_result_mapOrElse_30_case-0_patternMatch, align 8
  %36 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_patternMatch, align 8
  %37 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %27, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_result_mapOrElse_30_equals_then(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.141, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.142, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.145, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.146, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.142, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.146, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.141(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.143, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.144, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.144, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.143(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_result_mapOrElse_30_equals_else(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.145(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_result_mapOrElse_30_equals_else.147(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_result_mapOrElse_30_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.149, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.150, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.159, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.160, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.150, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.160, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_result_mapOrElse_30_case-1_patternMatch, align 8
  %27 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_patternMatch, align 8
  %28 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_result_mapOrElse_30_equals_then.149(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.151, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.152, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.157, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.158, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.152, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.158, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.151(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.153, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.154, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.155, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.156, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.154, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.156, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.153(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @53, align 8
  ret ptr @53
}

define ptr @Core_result_mapOrElse_30_equals_else.155(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.157(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_result_mapOrElse_30_equals_else.159(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @55, align 8
  ret ptr @55
}

define ptr @Core_result_mapOrElse_30_case-1_patternMatch(ptr %0) {
Core_result_mapOrElse_30_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-0_patternMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @"Core_iterator_range_38, Core_result_unwrapOrElse_19"(ptr %0) {
"Core_iterator_range_38, Core_result_unwrapOrElse_19":
  ret ptr %0
}

define ptr @Core_result_unwrapOr(ptr %0, ptr %1) {
Core_result_unwrapOr:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_unwrapOr_7, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_unwrapOr_7, align 8
  %8 = call ptr @Core_result_is(ptr %0)
  %9 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %13 = call ptr @Core_function_is0(ptr %12)
  %14 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_20, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  %20 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %21 = call ptr @Core_result_mapOrElse(ptr %0, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_result_unwrapOr_7(ptr %0) {
Core_result_unwrapOr_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_unwrapOrElse_20(ptr %0) {
Core_result_unwrapOrElse_20:
  %1 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %2 = call ptr @Core_function_run(ptr %1)
  ret ptr %2
}

define ptr @Core_list_append(ptr %0, ptr %1) {
Core_list_append:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_List, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:list:append:9", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_list_length(ptr %0)
  %14 = call ptr @Builtins__listInsert(ptr %0, ptr %13, ptr %1)
  ret ptr %14
}

define ptr @"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch"() {
"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch":
  %0 = load ptr, ptr @tag_Empty, align 8
  ret ptr %0
}

define ptr @Core_iterator_wrapSafe(ptr %0, ptr %1) {
Core_iterator_wrapSafe:
  %2 = call ptr @Core_function_is0(ptr %1)
  %3 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_12, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16, ptr %8, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16, align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_16, align 8
  %11 = call ptr @Core_function_is2(ptr %10)
  %12 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %13 = load ptr, ptr @"Core:iterator:wrapSafe:17", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %16 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18, ptr %15, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_controlFlow_recursive_18, align 8
  %17 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  %18 = call ptr @Core_controlFlow_recursive_18(ptr %17, ptr %0)
  ret ptr %18
}

define ptr @Core_iterator_wrapSafe_12(ptr %0) {
Core_iterator_wrapSafe_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_wrapSafe_16(ptr %0, ptr %1) {
Core_iterator_wrapSafe_16:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else.167, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.168, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.168, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %19 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_case-0_didNotMatch, ptr %18, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %13, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_case-0_patternMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_patternMatch, align 8
  %23 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_patternMatch, align 8
  %24 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %17, ptr %23, ptr %24)
  %26 = call ptr @Core_function_is0(ptr %25)
  %27 = call ptr @Core_bool_not(ptr %26)
  %28 = call ptr @Core_bool_is(ptr %27)
  %29 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %30 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %28, ptr %29, ptr %30)
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %33 = call ptr @Core_function_is0(ptr %32)
  %34 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  %35 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr %35)
  %37 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %38 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %39 = call ptr @Builtins__ifElse(ptr %27, ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %25, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %0, ptr %42, align 8
  %43 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %43, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  %44 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  %45 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %45, align 1
  %46 = call ptr @make_candy_tag(ptr %45, ptr %44)
  store ptr %46, ptr @tag_Iterator.200, align 8
  ret ptr @tag_Iterator.200
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then.161, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.162, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else.165, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.166, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.162, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.166, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then.161(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then.163, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.164, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.164, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then.163(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @56, align 8
  ret ptr @56
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else.165(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else.167(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @58, align 8
  ret ptr @58
}

define ptr @Core_iterator_wrapSafe_16_1_case-0_didNotMatch() {
Core_iterator_wrapSafe_16_1_case-0_didNotMatch:
  %0 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %1 = call ptr @Core_function_run(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_wrapSafe_16_1_case-0_patternMatch(ptr %0) {
Core_iterator_wrapSafe_16_1_case-0_patternMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_26(ptr %0) {
Core_iterator_wrapSafe_16_26:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.173, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.174, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.174, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %3, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  %26 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %27 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %19, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.169, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.170, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.171, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.172, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.170, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.172, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.169(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.171(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.173(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.175, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.176, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.197, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.198, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.176, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.198, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %22 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 0
  store ptr %25, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 1
  store ptr %16, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-1_patternMatch, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_patternMatch, align 8
  %29 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_patternMatch, align 8
  %30 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %20, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.175(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.177, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.178, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.195, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.196, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.178, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.196, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.177(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.179, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.180, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.193, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.194, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.180, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.194, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.179(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.181, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.182, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.191, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.192, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.182, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.192, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.181(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else.189, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.190, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.190, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @62, align 8
  ret ptr @62
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @63, align 8
  ret ptr @63
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then.183, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.184, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else.185, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.186, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.184, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.186, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then.187, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.188, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.188, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then.183(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @64, align 8
  ret ptr @64
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else.185(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @65, align 8
  ret ptr @65
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then.187(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @66, align 8
  ret ptr @66
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else.189(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.191(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @67, align 8
  ret ptr @67
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.193(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.195(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @68, align 8
  ret ptr @68
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.197(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @69, align 8
  ret ptr @69
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch() {
Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch:
  %0 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %1 = call ptr @Core_function_run(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-1_patternMatch(ptr %0) {
Core_iterator_wrapSafe_16_26_10_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.199, align 8
  ret ptr @tag_More.199
}

define ptr @Core_controlFlow_recursive_18(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %6 = call ptr @Core_iterator_wrapSafe_16(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_next(ptr %0) {
Core_iterator_next:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_next_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_next_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Tag, align 8
  %7 = call ptr @candy_builtin_equals(ptr %6, ptr %5)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %4, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %5, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.207, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.208, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.208, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %7, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_1, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %16, ptr %27)
  %29 = call ptr @Core_function_run(ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_next_2() {
Core_iterator_next_2:
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_next_6_equals_then(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.201, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.202, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.205, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.206, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.202, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.206, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.201(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.203, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.204, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.204, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.203(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @70, align 8
  ret ptr @70
}

define ptr @Core_iterator_next_6_equals_else(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_next_6_equals_else.205(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @71, align 8
  ret ptr @71
}

define ptr @Core_iterator_next_6_equals_else.207(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @72, align 8
  ret ptr @72
}

define ptr @Core_iterator_next_6_isMatch_else(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_generateWithState(ptr %0, ptr %1) {
Core_iterator_generateWithState:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_generateWithState_14, align 8
  %8 = load ptr, ptr @fun_Core_iterator_generateWithState_14, align 8
  %9 = call ptr @Core_function_is2(ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = load ptr, ptr @"Core:iterator:generateWithState:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.241, ptr %13, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18.242, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18.242, align 8
  %16 = call ptr @Core_controlFlow_recursive_18.241(ptr %15, ptr %0)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14(ptr %0, ptr %1, ptr %2) {
Core_iterator_generateWithState_14:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  %10 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  %11 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %11, align 1
  %12 = call ptr @make_candy_tag(ptr %11, ptr %10)
  store ptr %12, ptr @tag_Iterator.240, align 8
  ret ptr @tag_Iterator.240
}

define ptr @Core_iterator_generateWithState_14_1(ptr %0) {
Core_iterator_generateWithState_14_1:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %7)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %7, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.227, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.228, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.228, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %7, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %19, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-0_patternMatch, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_patternMatch, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_patternMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %23, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.209, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.210, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.225, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.226, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.210, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.226, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.209(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.211, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.212, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.223, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.224, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.212, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.224, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.211(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.213, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.214, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.214, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.213(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_else.221, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.222, align 8
  %31 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.222, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @73, align 8
  ret ptr @73
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @74, align 8
  ret ptr @74
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_then.215, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.216, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_else.217, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.218, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.216, align 8
  %20 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.218, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_then.219, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.220, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.220, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_then.215(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @75, align 8
  ret ptr @75
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_else.217(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @76, align 8
  ret ptr @76
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_then.219(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @77, align 8
  ret ptr @77
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_else.221(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @78, align 8
  ret ptr @78
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.223(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.225(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @79, align 8
  ret ptr @79
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.227(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @80, align 8
  ret ptr @80
}

define ptr @Core_iterator_generateWithState_14_1_3_case-0_didNotMatch(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.229, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.230, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.237, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.238, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.230, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.238, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  %26 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %27 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %20, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.229(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.231, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.232, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.235, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.236, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.232, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.236, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.231(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.233, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.234, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.234, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.233(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @81, align 8
  ret ptr @81
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.235(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @82, align 8
  ret ptr @82
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.237(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @83, align 8
  ret ptr @83
}

define ptr @Core_iterator_generateWithState_14_1_3_case-1_didNotMatch(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-1_didNotMatch:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-2_patternMatch, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_patternMatch, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_patternMatch)
  %7 = call ptr @Core_iterator_generateWithState_14_1_3_case-2_patternMatch(ptr %6)
  ret ptr %7
}

define ptr @Core_iterator_generateWithState_14_1_3_case-2_patternMatch(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-2_patternMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_21, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_22, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %5, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = load ptr, ptr @"text_`", align 8
  %22 = call ptr @candy_builtin_text_concatenate(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_False, align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %22, ptr null)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_14_1_3_21(ptr %0) {
Core_iterator_generateWithState_14_1_3_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_22(ptr %0) {
Core_iterator_generateWithState_14_1_3_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_generateWithState_14_1_3_case-0_patternMatch(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-0_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.239, align 8
  ret ptr @tag_More.239
}

define ptr @Core_controlFlow_recursive_18.241(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.243, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.244, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.244, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_generateWithState_14)
  %7 = call ptr @Core_iterator_generateWithState_14(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.243(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_generate(ptr %0, ptr %1) {
Core_iterator_generate:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_int_isNonNegative(ptr %0)
  %8 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @candy_builtin_type_of(ptr %0)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:generate:33", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @Core_int_isNonNegative(ptr %0)
  %17 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:iterator:generate:33", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_4294967295, align 8
  %21 = call ptr @Core_int_isLessThan(ptr %0, ptr %20)
  %22 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_function_is1(ptr %1)
  %25 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %0, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generate_50, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generate_50, align 8
  %31 = load ptr, ptr @num_0, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generate_50, align 8
  %33 = call ptr @Core_iterator_generateWithState(ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generate_50(ptr %0, ptr %1) {
Core_iterator_generate_50:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %0, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generate_50_6, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generate_50_6, align 8
  %11 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %12 = load ptr, ptr @fun_Core_iterator_generate_50_6, align 8
  %13 = call ptr @Builtins__ifElse(ptr %4, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generate_50_6(ptr %0) {
Core_iterator_generate_50_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:generate:50:6:16", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @num_1, align 8
  %19 = call ptr @candy_builtin_int_add(ptr %17, ptr %18)
  %20 = alloca ptr, i64 3, align 8
  %21 = alloca ptr, i64 3, align 8
  %22 = load ptr, ptr @tag_State, align 8
  %23 = getelementptr ptr, ptr %20, i64 0
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %21, i64 0
  store ptr %19, ptr %24, align 8
  %25 = load ptr, ptr @tag_Item, align 8
  %26 = getelementptr ptr, ptr %20, i64 1
  store ptr %25, ptr %26, align 8
  %27 = getelementptr ptr, ptr %21, i64 1
  store ptr %7, ptr %27, align 8
  %28 = getelementptr ptr, ptr %20, i64 2
  store ptr null, ptr %28, align 8
  %29 = getelementptr ptr, ptr %21, i64 2
  store ptr null, ptr %29, align 8
  %30 = call ptr @make_candy_struct(ptr %20, ptr %21)
  %31 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %31, align 1
  %32 = call ptr @make_candy_tag(ptr %31, ptr %30)
  store ptr %32, ptr @tag_More.245, align 8
  ret ptr @tag_More.245
}

define ptr @Core_iterator_map_19_3_case-1_didNotMatch() {
Core_iterator_map_19_3_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_map(ptr %0, ptr %1) {
Core_iterator_map:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_map_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_map_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_map_19, align 8
  %13 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_map_2() {
Core_iterator_map_2:
  %0 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_map_19(ptr %0, ptr %1) {
Core_iterator_map_19:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.250, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19_3_equals_else.251, align 8
  %12 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.251, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %2, ptr %20, align 8
  %21 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %22, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  %25 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %26 = load ptr, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Core_iterator_map_19_3_equals_then(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.246, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.247, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.248, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.249, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.247, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.249, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.246(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_map_19_3_equals_else(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @84, align 8
  ret ptr @84
}

define ptr @Core_iterator_map_19_3_equals_else.248(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @85, align 8
  ret ptr @85
}

define ptr @Core_iterator_map_19_3_equals_else.250(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @86, align 8
  ret ptr @86
}

define ptr @Core_iterator_map_19_3_case-0_didNotMatch(ptr %0) {
Core_iterator_map_19_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.252, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.253, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.274, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.275, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.253, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.275, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_map_19_3_case-1_patternMatch, align 8
  %27 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_patternMatch, align 8
  %28 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_map_19_3_equals_then.252(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.254, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.255, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.272, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.273, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.255, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.273, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.254(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.256, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.257, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.270, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.271, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.257, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.271, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.256(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.258, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_19_3_equals_then.259, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.268, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_map_19_3_equals_else.269, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.259, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.269, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_map_19_3_equals_then.258(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_else.266, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_19_3_isMatch_else.267, align 8
  %31 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else.267, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_map_19_3_hasKey_then(ptr %0) {
Core_iterator_map_19_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @87, align 8
  ret ptr @87
}

define ptr @Core_iterator_map_19_3_hasKey_else(ptr %0) {
Core_iterator_map_19_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @88, align 8
  ret ptr @88
}

define ptr @Core_iterator_map_19_3_isMatch_then(ptr %0) {
Core_iterator_map_19_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_then.260, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_hasKey_then.261, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_else.262, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_map_19_3_hasKey_else.263, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then.261, align 8
  %20 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else.263, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_then.264, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_map_19_3_isMatch_then.265, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then.265, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_map_19_3_hasKey_then.260(ptr %0) {
Core_iterator_map_19_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @89, align 8
  ret ptr @89
}

define ptr @Core_iterator_map_19_3_hasKey_else.262(ptr %0) {
Core_iterator_map_19_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @90, align 8
  ret ptr @90
}

define ptr @Core_iterator_map_19_3_isMatch_then.264(ptr %0) {
Core_iterator_map_19_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @91, align 8
  ret ptr @91
}

define ptr @Core_iterator_map_19_3_isMatch_else(ptr %0) {
Core_iterator_map_19_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_19_3_isMatch_else.266(ptr %0) {
Core_iterator_map_19_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_19_3_equals_else.268(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @92, align 8
  ret ptr @92
}

define ptr @Core_iterator_map_19_3_equals_else.270(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_map_19_3_equals_else.272(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @93, align 8
  ret ptr @93
}

define ptr @Core_iterator_map_19_3_equals_else.274(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @94, align 8
  ret ptr @94
}

define ptr @Core_iterator_map_19_3_case-1_patternMatch(ptr %0) {
Core_iterator_map_19_3_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_State, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %8, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %13, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.276, align 8
  ret ptr @tag_More.276
}

define ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch() {
Core_iterator_withIndex_11_5_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_withIndex_11(ptr %0) {
Core_iterator_withIndex_11:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_else, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %10 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.285, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.286, align 8
  %20 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %21 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.286, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_1, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %12, ptr %23)
  %25 = load ptr, ptr @num_2, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %12, ptr %25)
  %27 = call ptr @Core_iterator_next(ptr %24)
  %28 = call ptr @candy_builtin_type_of(ptr %27)
  %29 = load ptr, ptr @tag_Tag, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %27, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %28, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.291, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_withIndex_11_5_equals_else.292, align 8
  %37 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %38 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.292, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %30, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_0, align 8
  %41 = call ptr @candy_builtin_list_get(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Match, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr, ptr }, ptr %44, i32 0, i32 0
  store ptr %27, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr }, ptr %44, i32 0, i32 1
  store ptr %26, ptr %46, align 8
  %47 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %47, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %48 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %49 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %50 = call ptr @candy_builtin_if_else(ptr %43, ptr %48, ptr %49)
  ret ptr %50
}

define ptr @Core_iterator_withIndex_11_1_equals_then(ptr %0) {
Core_iterator_withIndex_11_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.283, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.284, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.284, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @95, align 8
  ret ptr @95
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @96, align 8
  ret ptr @96
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then.277, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.278, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else.279, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.280, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.278, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.280, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then.281, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.282, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.282, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then.277(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @97, align 8
  ret ptr @97
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else.279(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @98, align 8
  ret ptr @98
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then.281(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @99, align 8
  ret ptr @99
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.283(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_equals_else(ptr %0) {
Core_iterator_withIndex_11_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @100, align 8
  ret ptr @100
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.285(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_withIndex_11_5_equals_then(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.287, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.288, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.289, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.290, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.288, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.290, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.287(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_withIndex_11_5_equals_else(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @101, align 8
  ret ptr @101
}

define ptr @Core_iterator_withIndex_11_5_equals_else.289(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @102, align 8
  ret ptr @102
}

define ptr @Core_iterator_withIndex_11_5_equals_else.291(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @103, align 8
  ret ptr @103
}

define ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.293, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.294, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.315, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.316, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.294, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.316, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_withIndex_11_5_case-1_patternMatch, align 8
  %27 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_patternMatch, align 8
  %28 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_withIndex_11_5_equals_then.293(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.295, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.296, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.313, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.314, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.296, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.314, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.295(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.297, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.298, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.311, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.312, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.298, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.312, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.297(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.299, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_equals_then.300, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.309, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_withIndex_11_5_equals_else.310, align 8
  %13 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.300, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.310, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_withIndex_11_5_equals_then.299(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else.307, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.308, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.308, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @104, align 8
  ret ptr @104
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @105, align 8
  ret ptr @105
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then.301, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.302, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else.303, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.304, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.302, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.304, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then.305, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.306, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.306, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then.301(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @106, align 8
  ret ptr @106
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else.303(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @107, align 8
  ret ptr @107
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then.305(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @108, align 8
  ret ptr @108
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else.307(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_equals_else.309(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @109, align 8
  ret ptr @109
}

define ptr @Core_iterator_withIndex_11_5_equals_else.311(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_withIndex_11_5_equals_else.313(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @110, align 8
  ret ptr @110
}

define ptr @Core_iterator_withIndex_11_5_equals_else.315(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @111, align 8
  ret ptr @111
}

define ptr @Core_iterator_withIndex_11_5_case-1_patternMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_Index, align 8
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 1
  store ptr %16, ptr %18, align 8
  %19 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %19, align 8
  %20 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %20, align 8
  %21 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:iterator:withIndex:11:5:22", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_1, align 8
  %33 = call ptr @candy_builtin_int_add(ptr %31, ptr %32)
  %34 = alloca ptr, i64 3, align 8
  %35 = alloca ptr, i64 3, align 8
  %36 = load ptr, ptr @tag_Index, align 8
  %37 = getelementptr ptr, ptr %34, i64 0
  store ptr %36, ptr %37, align 8
  %38 = getelementptr ptr, ptr %35, i64 0
  store ptr %33, ptr %38, align 8
  %39 = load ptr, ptr @tag_Iterator, align 8
  %40 = getelementptr ptr, ptr %34, i64 1
  store ptr %39, ptr %40, align 8
  %41 = getelementptr ptr, ptr %35, i64 1
  store ptr %8, ptr %41, align 8
  %42 = getelementptr ptr, ptr %34, i64 2
  store ptr null, ptr %42, align 8
  %43 = getelementptr ptr, ptr %35, i64 2
  store ptr null, ptr %43, align 8
  %44 = call ptr @make_candy_struct(ptr %34, ptr %35)
  %45 = alloca ptr, i64 3, align 8
  %46 = alloca ptr, i64 3, align 8
  %47 = load ptr, ptr @tag_Item, align 8
  %48 = getelementptr ptr, ptr %45, i64 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr ptr, ptr %46, i64 0
  store ptr %21, ptr %49, align 8
  %50 = load ptr, ptr @tag_State, align 8
  %51 = getelementptr ptr, ptr %45, i64 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr ptr, ptr %46, i64 1
  store ptr %44, ptr %52, align 8
  %53 = getelementptr ptr, ptr %45, i64 2
  store ptr null, ptr %53, align 8
  %54 = getelementptr ptr, ptr %46, i64 2
  store ptr null, ptr %54, align 8
  %55 = call ptr @make_candy_struct(ptr %45, ptr %46)
  %56 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %56, align 1
  %57 = call ptr @make_candy_tag(ptr %56, ptr %55)
  store ptr %57, ptr @tag_More.317, align 8
  ret ptr @tag_More.317
}

define ptr @Core_iterator_ensure(ptr %0, ptr %1) {
Core_iterator_ensure:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_ensure_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_ensure_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_ensure_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_ensure_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_ensure_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_ensure_19, align 8
  %13 = call ptr @Core_iterator_map(ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_ensure_14() {
Core_iterator_ensure_14:
  %0 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_ensure_19(ptr %0, ptr %1) {
Core_iterator_ensure_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %0
}

define ptr @Core_iterator_foldLeft_23_5_case-1_didNotMatch() {
Core_iterator_foldLeft_23_5_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_foldLeft(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_2, ptr %3, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_iterator_foldLeft_2, align 8
  %5 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %5)
  %7 = call ptr @Core_function_is2(ptr %2)
  %8 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = alloca ptr, i64 3, align 8
  %11 = alloca ptr, i64 3, align 8
  %12 = load ptr, ptr @tag_Value, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %11, i64 0
  store ptr %1, ptr %14, align 8
  %15 = load ptr, ptr @tag_Iterator, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %15, ptr %16, align 8
  %17 = getelementptr ptr, ptr %11, i64 1
  store ptr %6, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = getelementptr ptr, ptr %11, i64 2
  store ptr null, ptr %19, align 8
  %20 = call ptr @make_candy_struct(ptr %10, ptr %11)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %2, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_foldLeft_23, align 8
  %24 = load ptr, ptr @fun_Core_iterator_foldLeft_23, align 8
  %25 = call ptr @Core_function_is2(ptr %24)
  %26 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %27 = load ptr, ptr @"Core:iterator:foldLeft:24", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %30 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.358, ptr %29, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_controlFlow_recursive_18.359, align 8
  %31 = load ptr, ptr @fun_Core_controlFlow_recursive_18.359, align 8
  %32 = call ptr @Core_controlFlow_recursive_18.358(ptr %31, ptr %20)
  ret ptr %32
}

define ptr @Core_iterator_foldLeft_2() {
Core_iterator_foldLeft_2:
  %0 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_foldLeft_23(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft_23:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else.326, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.327, align 8
  %22 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.327, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = call ptr @Core_iterator_next(ptr %26)
  %30 = call ptr @candy_builtin_type_of(ptr %29)
  %31 = load ptr, ptr @tag_Tag, align 8
  %32 = call ptr @candy_builtin_equals(ptr %31, ptr %30)
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %29, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  %36 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %37 = getelementptr inbounds { ptr }, ptr %36, i32 0, i32 0
  store ptr %30, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.332, ptr %36, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.333, align 8
  %39 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  %40 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.333, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %32, ptr %39, ptr %40)
  %42 = load ptr, ptr @num_0, align 8
  %43 = call ptr @candy_builtin_list_get(ptr %41, ptr %42)
  %44 = load ptr, ptr @tag_Match, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %46, i32 0, i32 0
  store ptr %0, ptr %47, align 8
  %48 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %46, i32 0, i32 1
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %46, i32 0, i32 2
  store ptr %28, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %46, i32 0, i32 3
  store ptr %29, ptr %52, align 8
  %53 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-0_didNotMatch, ptr %46, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %53, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  %54 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %55 = getelementptr inbounds { ptr }, ptr %54, i32 0, i32 0
  store ptr %28, ptr %55, align 8
  %56 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-0_patternMatch, ptr %54, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %56, ptr @fun_Core_iterator_foldLeft_23_5_case-0_patternMatch, align 8
  %57 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_patternMatch, align 8
  %58 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  %59 = call ptr @candy_builtin_if_else(ptr %45, ptr %57, ptr %58)
  ret ptr %59
}

define ptr @Core_iterator_foldLeft_23_1_equals_then(ptr %0) {
Core_iterator_foldLeft_23_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else.324, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.325, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.325, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_then(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @112, align 8
  ret ptr @112
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_else(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @113, align 8
  ret ptr @113
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_then(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Value, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_then.318, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.319, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_else.320, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.321, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.319, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.321, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_then.322, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.323, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.323, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_then.318(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Value, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @114, align 8
  ret ptr @114
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_else.320(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @115, align 8
  ret ptr @115
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_then.322(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @116, align 8
  ret ptr @116
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else.324(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_1_equals_else(ptr %0) {
Core_iterator_foldLeft_23_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @117, align 8
  ret ptr @117
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else.326(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_foldLeft_23_5_equals_then(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.328, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.329, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.330, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.331, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.329, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.331, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.328(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_foldLeft_23_5_equals_else(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @118, align 8
  ret ptr @118
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.330(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @119, align 8
  ret ptr @119
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.332(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @120, align 8
  ret ptr @120
}

define ptr @Core_iterator_foldLeft_23_5_case-0_didNotMatch(ptr %0) {
Core_iterator_foldLeft_23_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.334, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.335, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.356, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.357, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.335, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.357, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %21, i32 0, i32 2
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %21, i32 0, i32 3
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_23_5_case-1_patternMatch, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_patternMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %20, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.334(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.336, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.337, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.354, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.355, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.337, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.355, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.336(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.338, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.339, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.352, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.353, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.339, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.353, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.338(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.340, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.341, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.350, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.351, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.341, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.351, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.340(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_else.348, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.349, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.349, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_then(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @121, align 8
  ret ptr @121
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_else(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @122, align 8
  ret ptr @122
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_then(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_then.342, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.343, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_else.344, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.345, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.343, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.345, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_then.346, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.347, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.347, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_then.342(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @123, align 8
  ret ptr @123
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_else.344(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @124, align 8
  ret ptr @124
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_then.346(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @125, align 8
  ret ptr @125
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_else(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_else.348(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.350(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @126, align 8
  ret ptr @126
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.352(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.354(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @127, align 8
  ret ptr @127
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.356(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @128, align 8
  ret ptr @128
}

define ptr @Core_iterator_foldLeft_23_5_case-1_patternMatch(ptr %0) {
Core_iterator_foldLeft_23_5_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %10, ptr %4, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %8, ptr %20, align 8
  %21 = load ptr, ptr @tag_Value, align 8
  %22 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %22, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %15, ptr %23, align 8
  %24 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %26, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_foldLeft_23_5_case-0_patternMatch(ptr %0) {
Core_iterator_foldLeft_23_5_case-0_patternMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_controlFlow_recursive_18.358(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.360, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.361, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.361, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_foldLeft_23)
  %7 = call ptr @Core_iterator_foldLeft_23(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.360(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_reduceLeft_18_case-1_didNotMatch() {
Core_iterator_reduceLeft_18_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_reduceLeft_18_case-0_patternMatch() {
Core_iterator_reduceLeft_18_case-0_patternMatch:
  %0 = load ptr, ptr @tag_Error.362, align 8
  ret ptr %0
}

define ptr @Core_iterator_reduceLeft(ptr %0, ptr %1) {
Core_iterator_reduceLeft:
  %2 = call ptr @Core_function_is2(ptr %1)
  %3 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_reduceLeft_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_reduceLeft_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = call ptr @Core_iterator_next(ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_Tag, align 8
  %12 = call ptr @candy_builtin_equals(ptr %11, ptr %10)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %9, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %10, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.367, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_reduceLeft_18_equals_else.368, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  %20 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.368, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %1, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %9, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-0_didNotMatch, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  %30 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_patternMatch, align 8
  %31 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %25, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_reduceLeft_14() {
Core_iterator_reduceLeft_14:
  %0 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_reduceLeft_18_equals_then(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.363, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.364, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.365, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.366, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.364, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.366, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.363(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_reduceLeft_18_equals_else(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @129, align 8
  ret ptr @129
}

define ptr @Core_iterator_reduceLeft_18_equals_else.365(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @130, align 8
  ret ptr @130
}

define ptr @Core_iterator_reduceLeft_18_equals_else.367(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @131, align 8
  ret ptr @131
}

define ptr @Core_iterator_reduceLeft_18_case-0_didNotMatch(ptr %0) {
Core_iterator_reduceLeft_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.369, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.370, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.391, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.392, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.370, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.392, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_reduceLeft_18_case-1_patternMatch, align 8
  %27 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_patternMatch, align 8
  %28 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_reduceLeft_18_equals_then.369(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.371, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.372, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.389, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.390, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.372, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.390, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.371(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.373, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.374, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.387, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.388, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.374, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.388, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.373(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.375, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_18_equals_then.376, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.385, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_reduceLeft_18_equals_else.386, align 8
  %13 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.376, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.386, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_reduceLeft_18_equals_then.375(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_else.383, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.384, align 8
  %31 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.384, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_reduceLeft_18_hasKey_then(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @132, align 8
  ret ptr @132
}

define ptr @Core_iterator_reduceLeft_18_hasKey_else(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @133, align 8
  ret ptr @133
}

define ptr @Core_iterator_reduceLeft_18_isMatch_then(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_then.377, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.378, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_else.379, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.380, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.378, align 8
  %20 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.380, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_then.381, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.382, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.382, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_reduceLeft_18_hasKey_then.377(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @134, align 8
  ret ptr @134
}

define ptr @Core_iterator_reduceLeft_18_hasKey_else.379(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @135, align 8
  ret ptr @135
}

define ptr @Core_iterator_reduceLeft_18_isMatch_then.381(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @136, align 8
  ret ptr @136
}

define ptr @Core_iterator_reduceLeft_18_isMatch_else(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_18_isMatch_else.383(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_18_equals_else.385(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @137, align 8
  ret ptr @137
}

define ptr @Core_iterator_reduceLeft_18_equals_else.387(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_reduceLeft_18_equals_else.389(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @138, align 8
  ret ptr @138
}

define ptr @Core_iterator_reduceLeft_18_equals_else.391(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @139, align 8
  ret ptr @139
}

define ptr @Core_iterator_reduceLeft_18_case-1_patternMatch(ptr %0) {
Core_iterator_reduceLeft_18_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %4, ptr %10)
  %12 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %12, align 1
  %13 = call ptr @make_candy_tag(ptr %12, ptr %11)
  store ptr %13, ptr @tag_Ok.393, align 8
  ret ptr @tag_Ok.393
}

define ptr @Core_iterator_sum_8(ptr %0, ptr %1) {
Core_iterator_sum_8:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_int_add(ptr %0, ptr %1)
  ret ptr %14
}

define ptr @Core_iterator_sum(ptr %0) {
Core_iterator_sum:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_sum_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_sum_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_sum_5, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_sum_5, align 8
  %7 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  %8 = call ptr @Core_iterator_ensure(ptr %4, ptr %7)
  %9 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  %10 = call ptr @Core_iterator_reduceLeft(ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @Core_result_unwrapOr(ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_iterator_sum_2() {
Core_iterator_sum_2:
  %0 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_sum_5(ptr %0) {
Core_iterator_sum_5:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  ret ptr %5
}

define ptr @Core_iterator_length_5(ptr %0) {
Core_iterator_length_5:
  %1 = load ptr, ptr @num_1, align 8
  ret ptr %1
}

define ptr @Core_iterator_all(ptr %0, ptr %1) {
Core_iterator_all:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_all_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_all_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_all_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_all_18, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_all_18, align 8
  %12 = load ptr, ptr @tag_True, align 8
  %13 = load ptr, ptr @fun_Core_iterator_all_18, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_all_14() {
Core_iterator_all_14:
  %0 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_all_18(ptr %0, ptr %1, ptr %2) {
Core_iterator_all_18:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = call ptr @Core_bool_is(ptr %7)
  %9 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_bool_is(ptr %0)
  %12 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @Core_bool_is(ptr %7)
  %16 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %7, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_and_12, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_and_12, align 8
  %22 = load ptr, ptr @fun_Core_bool_and_12, align 8
  %23 = call ptr @Core_bool_lazyAnd(ptr %0, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_and_12(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_any(ptr %0, ptr %1) {
Core_iterator_any:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_any_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_any_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_any_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_any_18, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_any_18, align 8
  %12 = load ptr, ptr @tag_False, align 8
  %13 = load ptr, ptr @fun_Core_iterator_any_18, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_any_14() {
Core_iterator_any_14:
  %0 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_any_18(ptr %0, ptr %1, ptr %2) {
Core_iterator_any_18:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = call ptr @Core_bool_is(ptr %7)
  %9 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_bool_is(ptr %0)
  %12 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @Core_bool_is(ptr %7)
  %16 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %7, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_or_12, align 8
  %22 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %23 = call ptr @Core_bool_lazyOr(ptr %0, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_joinToText(ptr %0) {
Core_iterator_joinToText:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_joinToText_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_joinToText_12, align 8
  %7 = load ptr, ptr @text_, align 8
  %8 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %4, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_iterator_joinToText_2() {
Core_iterator_joinToText_2:
  %0 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_joinToText_12(ptr %0, ptr %1) {
Core_iterator_joinToText_12:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = call ptr @candy_builtin_text_concatenate(ptr %0, ptr %1)
  ret ptr %19
}

define ptr @Core_iterator_where_19_2_3_case-1_didNotMatch() {
Core_iterator_where_19_2_3_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_where_19_2_3_6_5_case-1_didNotMatch() {
Core_iterator_where_19_2_3_6_5_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_where(ptr %0, ptr %1) {
Core_iterator_where:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_where_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_where_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_where_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_where_19, align 8
  %13 = call ptr @Core_function_is2(ptr %12)
  %14 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %15 = load ptr, ptr @"Core:iterator:where:20", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.456, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_controlFlow_recursive_18.457, align 8
  %19 = load ptr, ptr @fun_Core_controlFlow_recursive_18.457, align 8
  %20 = call ptr @Core_controlFlow_recursive_18.456(ptr %19, ptr %5)
  ret ptr %20
}

define ptr @Core_iterator_where_2() {
Core_iterator_where_2:
  %0 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_where_19(ptr %0, ptr %1, ptr %2) {
Core_iterator_where_19:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %6, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_where_19_2, align 8
  %9 = load ptr, ptr @fun_Core_iterator_where_19_2, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %1, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_where_19_2(ptr %0, ptr %1) {
Core_iterator_where_19_2:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.398, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_equals_else.399, align 8
  %12 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.399, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %2, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 2
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %29 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %18, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_where_19_2_3_equals_then(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.394, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.395, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.396, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.397, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.395, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.397, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.394(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_where_19_2_3_equals_else(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @140, align 8
  ret ptr @140
}

define ptr @Core_iterator_where_19_2_3_equals_else.396(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @141, align 8
  ret ptr @141
}

define ptr @Core_iterator_where_19_2_3_equals_else.398(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @142, align 8
  ret ptr @142
}

define ptr @Core_iterator_where_19_2_3_case-0_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.400, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.401, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.422, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.423, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.401, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.423, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %26, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 2
  store ptr %16, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_19_2_3_case-1_patternMatch, align 8
  %30 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_patternMatch, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %20, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_where_19_2_3_equals_then.400(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.402, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.403, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.420, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.421, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.403, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.421, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.402(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.404, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.405, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.418, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.419, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.405, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.419, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.404(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.406, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_equals_then.407, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.416, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_19_2_3_equals_else.417, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.407, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.417, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_19_2_3_equals_then.406(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_else.414, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.415, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.415, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_19_2_3_hasKey_then(ptr %0) {
Core_iterator_where_19_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @143, align 8
  ret ptr @143
}

define ptr @Core_iterator_where_19_2_3_hasKey_else(ptr %0) {
Core_iterator_where_19_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @144, align 8
  ret ptr @144
}

define ptr @Core_iterator_where_19_2_3_isMatch_then(ptr %0) {
Core_iterator_where_19_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_then.408, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.409, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_else.410, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.411, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.409, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.411, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_then.412, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.413, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.413, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_19_2_3_hasKey_then.408(ptr %0) {
Core_iterator_where_19_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @145, align 8
  ret ptr @145
}

define ptr @Core_iterator_where_19_2_3_hasKey_else.410(ptr %0) {
Core_iterator_where_19_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @146, align 8
  ret ptr @146
}

define ptr @Core_iterator_where_19_2_3_isMatch_then.412(ptr %0) {
Core_iterator_where_19_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @147, align 8
  ret ptr @147
}

define ptr @Core_iterator_where_19_2_3_isMatch_else(ptr %0) {
Core_iterator_where_19_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_isMatch_else.414(ptr %0) {
Core_iterator_where_19_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_equals_else.416(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @148, align 8
  ret ptr @148
}

define ptr @Core_iterator_where_19_2_3_equals_else.418(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_where_19_2_3_equals_else.420(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @149, align 8
  ret ptr @149
}

define ptr @Core_iterator_where_19_2_3_equals_else.422(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @150, align 8
  ret ptr @150
}

define ptr @Core_iterator_where_19_2_3_case-1_patternMatch(ptr %0) {
Core_iterator_where_19_2_3_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %4, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 0
  store ptr %8, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 1
  store ptr %21, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  %24 = load ptr, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  %25 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  %26 = call ptr @Builtins__ifElse(ptr %13, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_where_19_2_3_5(ptr %0) {
Core_iterator_where_19_2_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.424, align 8
  ret ptr @tag_More.424
}

define ptr @Core_iterator_where_19_2_3_6(ptr %0) {
Core_iterator_where_19_2_3_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @Core_iterator_next(ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Tag, align 8
  %11 = call ptr @candy_builtin_equals(ptr %10, ptr %9)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %9, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.429, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.430, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.430, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %11, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %8, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %29 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.425, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.426, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.427, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.428, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.426, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.428, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.425(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @151, align 8
  ret ptr @151
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.427(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @152, align 8
  ret ptr @152
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.429(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @153, align 8
  ret ptr @153
}

define ptr @Core_iterator_where_19_2_3_6_5_case-0_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_6_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.431, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.432, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.453, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.454, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.432, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.454, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_patternMatch, align 8
  %24 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_patternMatch, align 8
  %25 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.431(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.433, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.434, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.451, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.452, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.434, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.452, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.433(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.435, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.436, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.449, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.450, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.436, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.450, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.435(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.437, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.438, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.447, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.448, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.438, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.448, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.437(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_else.445, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.446, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.446, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @154, align 8
  ret ptr @154
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @155, align 8
  ret ptr @155
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_then.439, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.440, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_else.441, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.442, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.440, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.442, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_then.443, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.444, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.444, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_then.439(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @156, align 8
  ret ptr @156
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_else.441(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @157, align 8
  ret ptr @157
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_then.443(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @158, align 8
  ret ptr @158
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_else.445(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.447(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @159, align 8
  ret ptr @159
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.449(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.451(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @160, align 8
  ret ptr @160
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.453(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @161, align 8
  ret ptr @161
}

define ptr @Core_iterator_where_19_2_3_6_5_case-1_patternMatch(ptr %0) {
Core_iterator_where_19_2_3_6_5_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_State, align 8
  %15 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %15, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %8, ptr %16, align 8
  %17 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %20 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %20, align 1
  %21 = call ptr @make_candy_tag(ptr %20, ptr %19)
  store ptr %21, ptr @tag_More.455, align 8
  ret ptr @tag_More.455
}

define ptr @Core_controlFlow_recursive_18.456(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.458, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.459, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.459, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_where_19)
  %7 = call ptr @Core_iterator_where_19(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.458(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch() {
Core_iterator_takeWhile_7_3_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_takeWhile(ptr %0, ptr %1) {
Core_iterator_takeWhile:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_takeWhile_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_takeWhile_7, align 8
  %9 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_takeWhile_2() {
Core_iterator_takeWhile_2:
  %0 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_takeWhile_7(ptr %0, ptr %1) {
Core_iterator_takeWhile_7:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.464, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.465, align 8
  %12 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.465, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %21, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %2, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %25 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %26 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Core_iterator_takeWhile_7_3_equals_then(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.460, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.461, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.462, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.463, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.461, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.463, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.460(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_takeWhile_7_3_equals_else(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @162, align 8
  ret ptr @162
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.462(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @163, align 8
  ret ptr @163
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.464(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @164, align 8
  ret ptr @164
}

define ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.466, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.467, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.488, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.489, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.467, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.489, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_takeWhile_7_3_case-1_patternMatch, align 8
  %27 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_patternMatch, align 8
  %28 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.466(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.468, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.469, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.486, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.487, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.469, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.487, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.468(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.470, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.471, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.484, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.485, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.471, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.485, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.470(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.472, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.473, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.482, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.483, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.473, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.483, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.472(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else.480, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.481, align 8
  %31 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.481, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @165, align 8
  ret ptr @165
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @166, align 8
  ret ptr @166
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then.474, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.475, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else.476, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.477, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.475, align 8
  %20 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.477, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then.478, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.479, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.479, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then.474(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @167, align 8
  ret ptr @167
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else.476(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @168, align 8
  ret ptr @168
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then.478(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @169, align 8
  ret ptr @169
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else.480(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.482(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @170, align 8
  ret ptr @170
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.484(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.486(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @171, align 8
  ret ptr @171
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.488(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @172, align 8
  ret ptr @172
}

define ptr @Core_iterator_takeWhile_7_3_case-1_patternMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %4, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %8, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %18 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %20 = call ptr @Builtins__ifElse(ptr %13, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_iterator_takeWhile_7_3_5(ptr %0) {
Core_iterator_takeWhile_7_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.490, align 8
  ret ptr @tag_More.490
}

define ptr @Core_iterator_withIndex_2() {
Core_iterator_withIndex_2:
  %0 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_34(ptr %0) {
Core_iterator_take_34:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Item, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Item, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_take(ptr %0, ptr %1) {
Core_iterator_take:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_int_isNonNegative(ptr %1)
  %8 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %11 = call ptr @make_candy_function(ptr @Core_iterator_take_26, ptr %10, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_take_26, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_26, align 8
  %13 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %12)
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  %15 = call ptr @Core_iterator_wrapSafe(ptr %13, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %15, ptr %20, align 8
  %21 = load ptr, ptr @tag_Index, align 8
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %23, align 8
  %24 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %24, align 8
  %25 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %28 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  %29 = call ptr @Core_iterator_generateWithState(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %1, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_31, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_31, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_31, align 8
  %34 = call ptr @Core_iterator_takeWhile(ptr %29, ptr %33)
  %35 = load ptr, ptr @fun_Core_iterator_take_34, align 8
  %36 = call ptr @Core_iterator_map(ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_take_26() {
Core_iterator_take_26:
  %0 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_31(ptr %0, ptr %1) {
Core_iterator_take_31:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else.499, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_take_31_1_isMatch_else.500, align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.500, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @Core_int_isLessThan(ptr %27, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_take_31_1_equals_then(ptr %0) {
Core_iterator_take_31_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else.497, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_take_31_1_isMatch_else.498, align 8
  %31 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.498, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_take_31_1_hasKey_then(ptr %0) {
Core_iterator_take_31_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @173, align 8
  ret ptr @173
}

define ptr @Core_iterator_take_31_1_hasKey_else(ptr %0) {
Core_iterator_take_31_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @174, align 8
  ret ptr @174
}

define ptr @Core_iterator_take_31_1_isMatch_then(ptr %0) {
Core_iterator_take_31_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_then.491, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_take_31_1_hasKey_then.492, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_else.493, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_take_31_1_hasKey_else.494, align 8
  %19 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then.492, align 8
  %20 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else.494, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_then.495, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_take_31_1_isMatch_then.496, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then.496, align 8
  %34 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_take_31_1_hasKey_then.491(ptr %0) {
Core_iterator_take_31_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @175, align 8
  ret ptr @175
}

define ptr @Core_iterator_take_31_1_hasKey_else.493(ptr %0) {
Core_iterator_take_31_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @176, align 8
  ret ptr @176
}

define ptr @Core_iterator_take_31_1_isMatch_then.495(ptr %0) {
Core_iterator_take_31_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @177, align 8
  ret ptr @177
}

define ptr @Core_iterator_take_31_1_isMatch_else(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_31_1_isMatch_else.497(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_31_1_equals_else(ptr %0) {
Core_iterator_take_31_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @178, align 8
  ret ptr @178
}

define ptr @Core_iterator_take_31_1_isMatch_else.499(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_30_6_8_3_case-1_didNotMatch() {
Core_iterator_skip_30_6_8_3_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_skip_30_6(ptr %0, ptr %1) {
Core_iterator_skip_30_6:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else.509, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.510, align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterator_split_9_29, Examples_iterator_then, Examples_iterator_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.510, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_7, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_30_6_7, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 0
  store ptr %27, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 1
  store ptr %0, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 2
  store ptr %25, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_skip_30_6_8, align 8
  %38 = load ptr, ptr @fun_Core_iterator_skip_30_6_7, align 8
  %39 = load ptr, ptr @fun_Core_iterator_skip_30_6_8, align 8
  %40 = call ptr @Builtins__ifElse(ptr %29, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_skip_30_6_1_equals_then(ptr %0) {
Core_iterator_skip_30_6_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else.507, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.508, align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.508, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_skip_30_6_1_hasKey_then(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @179, align 8
  ret ptr @179
}

define ptr @Core_iterator_skip_30_6_1_hasKey_else(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @180, align 8
  ret ptr @180
}

define ptr @Core_iterator_skip_30_6_1_isMatch_then(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_N, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_then.501, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.502, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_else.503, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.504, align 8
  %19 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.502, align 8
  %20 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.504, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_then.505, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.506, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.506, align 8
  %34 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_skip_30_6_1_hasKey_then.501(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_N, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @181, align 8
  ret ptr @181
}

define ptr @Core_iterator_skip_30_6_1_hasKey_else.503(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @182, align 8
  ret ptr @182
}

define ptr @Core_iterator_skip_30_6_1_isMatch_then.505(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @183, align 8
  ret ptr @183
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else.507(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_1_equals_else(ptr %0) {
Core_iterator_skip_30_6_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @184, align 8
  ret ptr @184
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else.509(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_30_6_7(ptr %0) {
Core_iterator_skip_30_6_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_skip_30_6_8(ptr %0) {
Core_iterator_skip_30_6_8:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.515, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.516, align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.516, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %3, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 2
  store ptr %26, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %30 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %19, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.511, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.512, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.513, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.514, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.512, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.514, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.511(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @185, align 8
  ret ptr @185
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.513(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @186, align 8
  ret ptr @186
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.515(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @187, align 8
  ret ptr @187
}

define ptr @Core_iterator_skip_30_6_8_3_case-0_didNotMatch(ptr %0) {
Core_iterator_skip_30_6_8_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.517, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.518, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.531, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.532, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.518, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.532, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %26, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %21, i32 0, i32 2
  store ptr %16, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-1_patternMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_patternMatch, align 8
  %30 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_patternMatch, align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %20, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.517(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.519, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.520, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.529, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.530, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.520, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.530, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.519(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.521, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.522, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.527, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.528, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.522, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.528, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.521(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.523, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.524, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.525, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.526, align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.524, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.526, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.523(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_skip_30_6_8_3_hasKey_then(ptr %0) {
Core_iterator_skip_30_6_8_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @188, align 8
  ret ptr @188
}

define ptr @Core_iterator_skip_30_6_8_3_hasKey_else(ptr %0) {
Core_iterator_skip_30_6_8_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @189, align 8
  ret ptr @189
}

define ptr @Core_iterator_skip_30_6_8_3_isMatch_then(ptr %0) {
Core_iterator_skip_30_6_8_3_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @190, align 8
  ret ptr @190
}

define ptr @Core_iterator_skip_30_6_8_3_isMatch_else(ptr %0) {
Core_iterator_skip_30_6_8_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.525(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @191, align 8
  ret ptr @191
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.527(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.529(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @192, align 8
  ret ptr @192
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.531(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @193, align 8
  ret ptr @193
}

define ptr @Core_iterator_skip_30_6_8_3_case-1_patternMatch(ptr %0) {
Core_iterator_skip_30_6_8_3_case-1_patternMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @num_1, align 8
  %16 = call ptr @candy_builtin_int_subtract(ptr %14, ptr %15)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_N, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %16, ptr %21, align 8
  %22 = load ptr, ptr @tag_Iterator, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %4, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %27, ptr %31)
  ret ptr %32
}

define ptr @Core_controlFlow_recursive_18.533(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.535, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.536, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.536, align 8
  %6 = call ptr @Core_iterator_skip_30_6(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18_0.535(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_skip(ptr %0, ptr %1) {
Core_iterator_skip:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_skip_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_skip_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_skip_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @candy_builtin_type_of(ptr %1)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_int_isNonNegative(ptr %1)
  %12 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %1, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %5, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_skip_30, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_skip_30, align 8
  %18 = load ptr, ptr @fun_Core_iterator_skip_30, align 8
  %19 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %19, align 1
  %20 = call ptr @make_candy_tag(ptr %19, ptr %18)
  store ptr %20, ptr @tag_Iterator.537, align 8
  ret ptr @tag_Iterator.537
}

define ptr @Core_iterator_skip_2() {
Core_iterator_skip_2:
  %0 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_skip_30(ptr %0) {
Core_iterator_skip_30:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_N, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6, align 8
  %17 = call ptr @Core_function_is2(ptr %16)
  %18 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %19 = load ptr, ptr @"Core:iterator:skip:30:7", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @fun_Core_controlFlow_recursive_18.534, align 8
  %22 = call ptr @Core_controlFlow_recursive_18.533(ptr %21, ptr %15)
  ret ptr %22
}

define ptr @Core_iterator_forEach(ptr %0, ptr %1) {
Core_iterator_forEach:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 action` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_forEach_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_forEach_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_forEach_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_forEach_18, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_forEach_18, align 8
  %12 = load ptr, ptr @tag_Nothing, align 8
  %13 = load ptr, ptr @fun_Core_iterator_forEach_18, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_forEach_14() {
Core_iterator_forEach_14:
  %0 = load ptr, ptr @"text_`forEach` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_forEach_18(ptr %0, ptr %1, ptr %2) {
Core_iterator_forEach_18:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %8
}

define ptr @Core_iterator_fromList(ptr %0) {
Core_iterator_fromList:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`list.is l` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:fromList:22", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = call ptr @candy_builtin_list_length(ptr %0)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_fromList_23, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_fromList_23, align 8
  %16 = load ptr, ptr @fun_Core_iterator_fromList_23, align 8
  %17 = call ptr @Core_iterator_generate(ptr %12, ptr %16)
  ret ptr %17
}

define ptr @Core_iterator_fromList_23(ptr %0, ptr %1) {
Core_iterator_fromList_23:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Builtins__listGet(ptr %3, ptr %0)
  ret ptr %4
}

define ptr @Core_iterator_toList_6(ptr %0, ptr %1) {
Core_iterator_toList_6:
  %2 = call ptr @Core_list_append(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_toList_2() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_windowed(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_iterator_windowed:
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5 = call ptr @make_candy_function(ptr @Core_iterator_windowed_2, ptr %4, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_windowed_2, align 8
  %6 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  %7 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Int, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:windowed:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = load ptr, ptr @num_0, align 8
  %20 = call ptr @Core_int_isGreaterThan(ptr %1, ptr %19)
  %21 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @candy_builtin_type_of(ptr %2)
  %24 = load ptr, ptr @tag_Int, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_type_of(ptr %2)
  %29 = load ptr, ptr @tag_Int, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:iterator:windowed:50", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @num_0, align 8
  %35 = call ptr @Core_int_isGreaterThan(ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = call ptr @Core_bool_is(ptr %3)
  %39 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr null)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %1, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %2, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %3, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_iterator_windowed_67, align 8
  %46 = load ptr, ptr @fun_Core_iterator_windowed_67, align 8
  %47 = call ptr @Core_iterator_generateWithState(ptr %7, ptr %46)
  ret ptr %47
}

define ptr @Core_iterator_windowed_2() {
Core_iterator_windowed_2:
  %0 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_windowed_67(ptr %0, ptr %1) {
Core_iterator_windowed_67:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Core_iterator_take(ptr %0, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %4, ptr %5)
  %7 = load ptr, ptr @194, align 8
  %8 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_List, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:windowed:67:16", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_list_length(ptr %9)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %16, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_20, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_windowed_67_20, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %16, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_21, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_windowed_67_21, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @fun_Core_iterator_windowed_67_20, align 8
  %29 = load ptr, ptr @fun_Core_iterator_windowed_67_21, align 8
  %30 = call ptr @Builtins__ifElse(ptr %27, ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %34, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %9, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_26, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_windowed_67_26, align 8
  %38 = load ptr, ptr @fun_Core_iterator_windowed_67_26, align 8
  %39 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_patternMatch, Core_iterator_map_19_3_case-0_patternMatch, Core_iterator_skip_30_6_8_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_case-0_patternMatch, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_patternMatch, Core_iterator_where_19_2_3_6_5_case-0_patternMatch, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_patternMatch, Core_iterator_wrapSafe_16_26_10_case-0_patternMatch", align 8
  %40 = call ptr @Builtins__ifElse(ptr %30, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_windowed_67_20(ptr %0) {
Core_iterator_windowed_67_20:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @Core_int_isGreaterThan(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_windowed_67_21(ptr %0) {
Core_iterator_windowed_67_21:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @candy_builtin_equals(ptr %2, ptr %4)
  ret ptr %5
}

define ptr @Core_iterator_windowed_67_26(ptr %0) {
Core_iterator_windowed_67_26:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @Core_iterator_skip(ptr %2, ptr %4)
  %6 = alloca ptr, i64 3, align 8
  %7 = alloca ptr, i64 3, align 8
  %8 = load ptr, ptr @tag_Item, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %6, i64 0
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %7, i64 0
  store ptr %10, ptr %12, align 8
  %13 = load ptr, ptr @tag_State, align 8
  %14 = getelementptr ptr, ptr %6, i64 1
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %7, i64 1
  store ptr %5, ptr %15, align 8
  %16 = getelementptr ptr, ptr %6, i64 2
  store ptr null, ptr %16, align 8
  %17 = getelementptr ptr, ptr %7, i64 2
  store ptr null, ptr %17, align 8
  %18 = call ptr @make_candy_struct(ptr %6, ptr %7)
  %19 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %19, align 1
  %20 = call ptr @make_candy_tag(ptr %19, ptr %18)
  store ptr %20, ptr @tag_More.538, align 8
  ret ptr @tag_More.538
}

define ptr @Core_iterator_chunked(ptr %0, ptr %1) {
Core_iterator_chunked:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:chunked:21", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @Core_int_isGreaterThan(ptr %1, ptr %13)
  %15 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_iterator_chunked_26, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_chunked_26, align 8
  %19 = load ptr, ptr @fun_Core_iterator_chunked_26, align 8
  %20 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %19)
  %21 = load ptr, ptr @tag_True, align 8
  %22 = call ptr @Core_iterator_windowed(ptr %20, ptr %1, ptr %1, ptr %21)
  ret ptr %22
}

define ptr @Core_iterator_chunked_26() {
Core_iterator_chunked_26:
  %0 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_128_equals_then(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.539, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.540, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.555, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.556, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.540, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.556, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.539(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.541, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.542, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.553, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.554, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.542, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.554, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.541(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.543, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.544, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.544, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.543(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.551, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.552, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.552, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @197, align 8
  ret ptr @197
}

define ptr @Core_iterator_128_hasKey_else(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @198, align 8
  ret ptr @198
}

define ptr @Core_iterator_128_isMatch_then(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.545, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.546, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.547, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.548, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.546, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.548, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.549, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.550, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.550, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.545(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @199, align 8
  ret ptr @199
}

define ptr @Core_iterator_128_hasKey_else.547(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @200, align 8
  ret ptr @200
}

define ptr @Core_iterator_128_isMatch_then.549(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @201, align 8
  ret ptr @201
}

define ptr @Core_iterator_128_isMatch_else(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.551(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @202, align 8
  ret ptr @202
}

define ptr @Core_iterator_128_equals_else.553(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.555(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @203, align 8
  ret ptr @203
}

define ptr @Core_iterator_128_equals_else.557(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @204, align 8
  ret ptr @204
}

define ptr @Core_iterator_128_isMatch_else.559(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.561, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.562, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.577, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.578, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.562, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.578, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.561(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.563, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.564, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.575, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.576, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.564, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.576, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.563(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.565, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.566, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.566, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.565(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.573, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.574, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.574, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @205, align 8
  ret ptr @205
}

define ptr @Core_iterator_137_hasKey_else(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @206, align 8
  ret ptr @206
}

define ptr @Core_iterator_137_isMatch_then(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.567, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.568, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.569, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.570, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.568, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.570, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.571, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.572, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.572, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.567(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @207, align 8
  ret ptr @207
}

define ptr @Core_iterator_137_hasKey_else.569(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @208, align 8
  ret ptr @208
}

define ptr @Core_iterator_137_isMatch_then.571(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @209, align 8
  ret ptr @209
}

define ptr @Core_iterator_137_isMatch_else(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.573(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @210, align 8
  ret ptr @210
}

define ptr @Core_iterator_137_equals_else.575(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @43, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.577(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @211, align 8
  ret ptr @211
}

define ptr @Core_iterator_137_equals_else.579(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @212, align 8
  ret ptr @212
}

define ptr @Core_iterator_137_isMatch_else.581(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_isEmpty_2() {
Core_iterator_isEmpty_2:
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_isEmpty_2.583() {
Core_iterator_isEmpty_2:
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_161(ptr %0) {
Core_iterator_161:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:161:10", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_int_multiply(ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_toList_2.585() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_length_2() {
Core_iterator_length_2:
  %0 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_185(ptr %0) {
Core_iterator_185:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:185:9", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @num_0, align 8
  %8 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_192(ptr %0) {
Core_iterator_192:
  %1 = load ptr, ptr @num_2, align 8
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_214(ptr %0) {
Core_iterator_214:
  %1 = call ptr @Core_int_isOdd(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_toList_2.587() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_228(ptr %0) {
Core_iterator_228:
  %1 = load ptr, ptr @num_4, align 8
  %2 = call ptr @Core_int_isLessThan(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_toList_2.589() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.591() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.593() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.595() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.597() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.599() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.601() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Examples_iterator_21(ptr %0) {
Examples_iterator_21:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %0, ptr %2, align 8
  %3 = call ptr @make_candy_function(ptr @"Examples_iterator_21_print, Examples_iterator_21_33", ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3, ptr @"fun_Examples_iterator_21_print, Examples_iterator_21_33", align 8
  %4 = load ptr, ptr @224, align 8
  %5 = call ptr @Core_iterator_fromList(ptr %4)
  %6 = load ptr, ptr @"fun_Examples_iterator_21_print, Examples_iterator_21_33", align 8
  %7 = call ptr @Core_iterator_forEach(ptr %5, ptr %6)
  %8 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %8
}

define ptr @"Examples_iterator_21_print, Examples_iterator_21_33"(ptr %0, ptr %1) {
"Examples_iterator_21_print, Examples_iterator_21_33":
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %8 = load ptr, ptr @"Examples:iterator:21:print:7", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @tag_Stdout, align 8
  %13 = call ptr @candy_builtin_struct_has_key(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %15 = load ptr, ptr @"Examples:iterator:21:print:7", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr @tag_Stdout, align 8
  %20 = call ptr @candy_builtin_struct_get(ptr %18, ptr %19)
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %0, ptr %22)
  ret ptr %23
}
