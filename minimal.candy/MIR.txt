# MIR for module Examples:minimal
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# anonymous:$generated::needs
$49 = { $2 $3 $4 $1 ->
  $5 = anonymous:$generated::needs
  $6 = builtinEquals
  $7 = Nothing
  $8 = True
  $9 = False
  $10 = call $6 with $2 $8 $5
  $11 = builtinIfElse
  # anonymous:$generated::needs:isConditionTrue:then
  $14 = { $12 ->
    $13 = $8
  }
  # anonymous:$generated::needs:isConditionTrue:else
  $17 = { $15 ->
    $16 = call $6 with $2 $9 $5
  }
  $18 = call $11 with $10 $14 $17 $5
  $19 = builtinIfElse
  # anonymous:$generated::needs:isConditionBool:then
  $22 = { $20 ->
    $21 = $7
  }
  # anonymous:$generated::needs:isConditionBool:else
  $26 = { $23 ->
    $24 = "The `condition` must be either `True` or `False`."
    $25 = panicking because $24 ($1 is at fault)
  }
  $27 = call $19 with $18 $22 $26 $5
  $28 = builtinTypeOf
  $29 = call $28 with $3 $1
  $30 = Text
  $31 = call $6 with $29 $30 $1
  $32 = builtinIfElse
  # anonymous:$generated::needs:isReasonText:then
  $35 = { $33 ->
    $34 = $7
  }
  # anonymous:$generated::needs:isReasonText:else
  $39 = { $36 ->
    $37 = "The `reason` must be a text."
    $38 = panicking because $37 ($1 is at fault)
  }
  $40 = call $32 with $31 $35 $39 $5
  $41 = builtinIfElse
  # anonymous:$generated::needs:condition:then
  $44 = { $42 ->
    $43 = $7
  }
  # anonymous:$generated::needs:condition:else
  $47 = { $45 ->
    $46 = panicking because $3 ($4 is at fault)
  }
  $48 = call $41 with $2 $44 $47 $5
}
$50 = Examples:minimal:
# Examples:minimal:use
$54 = { $52 $51 ->
  $53 = use $52 (relative to Examples:minimal; $50 is responsible)
}
# Examples:minimal:main
$58 = { $56 $55 ->
  $57 = Nothing
}
$59 = $58
$60 = Main
$61 = [$60: $59]
