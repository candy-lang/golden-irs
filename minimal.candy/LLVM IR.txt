; ModuleID = 'module'
source_filename = "module"

@tag_Main = global ptr null
@tag_Nothing = global ptr null
@fun_Examples_minimal_main = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %0, align 1
  %1 = call ptr @make_candy_tag(ptr %0, ptr null)
  store ptr %1, ptr @tag_Main, align 8
  %2 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %2, align 1
  %3 = call ptr @make_candy_tag(ptr %2, ptr null)
  store ptr %3, ptr @tag_Nothing, align 8
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5 = call ptr @make_candy_function(ptr @Examples_minimal_main, ptr %4, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Examples_minimal_main, align 8
  %6 = alloca ptr, i64 2, align 8
  %7 = alloca ptr, i64 2, align 8
  %8 = load ptr, ptr @tag_Main, align 8
  %9 = load ptr, ptr @fun_Examples_minimal_main, align 8
  %10 = getelementptr ptr, ptr %6, i64 0
  store ptr %8, ptr %10, align 8
  %11 = getelementptr ptr, ptr %7, i64 0
  store ptr %9, ptr %11, align 8
  %12 = getelementptr ptr, ptr %6, i64 1
  store ptr null, ptr %12, align 8
  %13 = getelementptr ptr, ptr %7, i64 1
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_struct(ptr %6, ptr %7)
  %15 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %15, align 1
  %16 = call ptr @make_candy_tag(ptr %15, ptr null)
  %17 = call ptr @candy_builtin_struct_get(ptr %14, ptr %16)
  %18 = call ptr @run_candy_main(ptr %17, ptr @candy_environment)
  call void @print_candy_value(ptr %18)
  %19 = load ptr, ptr @tag_Main, align 8
  call void @free_candy_value(ptr %19)
  %20 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %20)
  %21 = load ptr, ptr @fun_Examples_minimal_main, align 8
  call void @free_candy_value(ptr %21)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare noalias ptr @malloc(i32)

define ptr @Examples_minimal_main(ptr %0) {
Examples_minimal_main:
  %1 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %1
}
